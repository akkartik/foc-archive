[
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1590996067.306900",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1590996668.000000"
        },
        "client_msg_id": "ce3c8ebf-2145-42b2-bfc2-61a36b5c6b79",
        "text": "Yes I'm planning to see how I go banning IEEE floats and instead exposing an opaque rational number type in my environment. As far as bit manipulation hardware goes, Intel's <https:\/\/en.wikipedia.org\/wiki\/Bit_Manipulation_Instruction_Sets|parallel bit deposit and extract> for x86 seems really cool, but unfortunately isn't efficient on an AMD Zen, since they've inexplicably implemented it in microcode rather than as a native capability. I'm also saddened by the absence of a bit reversal instruction in x86... it seems to exist on every other major hardware platform!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590977348.305600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Njaoe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes I'm planning to see how I go banning IEEE floats and instead exposing an opaque rational number type in my environment. As far as bit manipulation hardware goes, Intel's "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Bit_Manipulation_Instruction_Sets",
                                "text": "parallel bit deposit and extract"
                            },
                            {
                                "type": "text",
                                "text": " for x86 seems really cool, but unfortunately isn't efficient on an AMD Zen, since they've inexplicably implemented it in microcode rather than as a native capability. I'm also saddened by the absence of a bit reversal instruction in x86... it seems to exist on every other major hardware platform!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1590998268.307300",
        "client_msg_id": "5b4039cf-6e66-45bf-844d-65964881128e",
        "text": "<@UT60XSVCN> Racket is where all the action happens right now on this topic. The PLT group is seriously thinking about a non-s-expression-based language for their ecosystem (codename \"Rhombus\": <https:\/\/github.com\/racket\/rhombus-brainstorming>).\n\nRacket's syntax objects are extensions of Scheme syntax objects, which are lists plus metadata for tracing the provenance of transformed code back to the source code files. This metadata is required for implementing correct lexical scoping for identifiers, something that Common Lisp (and others) don't care about. It's a double-edged word: correct scoping is certainly necessary to scale up macro processing to the point of supporting complex language implenentations, but it also increases the learning curve significantly. Common Lisp macros are much simpler, and much easier to understand, but not at all easy to use for complex transformations.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590712683.260000",
        "parent_user_id": "UT60XSVCN",
        "attachments": [
            {
                "fallback": "racket\/rhombus-brainstorming",
                "text": "Brainstorming and draft proposals for Rhombus",
                "title": "racket\/rhombus-brainstorming",
                "footer": "<https:\/\/github.com\/racket\/rhombus-brainstorming|racket\/rhombus-brainstorming>",
                "id": 1,
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "ts": 1563121663,
                "color": "24292f",
                "fields": [
                    {
                        "title": "Stars",
                        "value": "87",
                        "short": true
                    },
                    {
                        "title": "Last updated",
                        "value": "5 days ago",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text",
                    "fields"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https:\/\/github.com\/racket\/rhombus-brainstorming",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kLw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UT60XSVCN"
                            },
                            {
                                "type": "text",
                                "text": " Racket is where all the action happens right now on this topic. The PLT group is seriously thinking about a non-s-expression-based language for their ecosystem (codename \"Rhombus\": "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/racket\/rhombus-brainstorming"
                            },
                            {
                                "type": "text",
                                "text": ").\n\nRacket's syntax objects are extensions of Scheme syntax objects, which are lists plus metadata for tracing the provenance of transformed code back to the source code files. This metadata is required for implementing correct lexical scoping for identifiers, something that Common Lisp (and others) don't care about. It's a double-edged word: correct scoping is certainly necessary to scale up macro processing to the point of supporting complex language implenentations, but it also increases the learning curve significantly. Common Lisp macros are much simpler, and much easier to understand, but not at all easy to use for complex transformations."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UT60XSVCN",
        "type": "message",
        "ts": "1591005647.307700",
        "edited": {
            "user": "UT60XSVCN",
            "ts": "1591039640.000000"
        },
        "client_msg_id": "c8225232-c8e7-4b27-9c75-8cc7b657a63c",
        "text": "<@UJBAJNFLK> interesting. I will have to spend some time learning about them. Is Beautiful Racket still the recommended resource?\n\nOn another note, <http:\/\/github.com\/mflatt\/rhombus-brainstorming\/blob\/shrubbery\/shrubbery\/0000-shrubbery.md|github.com\/mflatt\/rhombus-brainstorming\/blob\/shrubbery\/shrubbery\/0000-shrubbery.md> is quite relevant to the earlier discussion.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbc3e6041047",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bc3e6041047849518d1b042f0a29d5af.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "S.M Mukarram Nainar",
            "display_name": "S.M Mukarram Nainar",
            "team": "T5TCAFTA9",
            "name": "nainars",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590712683.260000",
        "parent_user_id": "UT60XSVCN",
        "attachments": [
            {
                "fallback": "[mflatt\/rhombus-brainstorming] shrubbery\/0000-shrubbery.md",
                "text": "```\n- Feature Name: Shrubbery notation\n- Start Date: 2019-10-01\n- RFC PR: [racket\/racket2-rfcs#122](<https:\/\/github.com\/racket\/racket2-rfcs\/pull\/122>)\n\n# Summary\n[summary]: #summary\n\nShrubbery notation is similar to S-expression notation, but instead of\ngenerating fully formed trees, it is intended to partially group input\nfor further enforestation by another parser (e.g., as in Honu). The\nnotation is line- and indentation-sensitive, and the parsed form of a\nshrubbery imposes grouping to ensure that further parsing is\nconsistent with the shrubbery's lines and indentation.\n\n# Motivation\n[motivation]: #motivation\n\nS-expression notation imposes a grouping at the lexeme level that is\nall but guaranteed to be respected by further parsing via macro\nexpansion. One consequence of this lexeme-based grouping is that\nprograms can be pretty-printed and textually traversed in standard\nways.\n\nA traditional use of S-expression notation, however, insists that\n*all* grouping is reflected in the S-expression. Reifying all grouping\nat the lexeme level is so onerous that many practical deployments of\nS-expressions include deviations from the rule, such as keyword-based\narguments or implicit grouping by position (as in various Clojure\nforms).\n\nAnother disadvantage of S-expressions is that many of the parentheses\nare redundant after the expression is pretty-printed, because\nindentation provides the same grouping information in a more\nhuman-readable way. That observation suggests instead relying on line\nbreaks and indentation to impart grouping information, as in Python.\n\nShrubbery notation explores a point in the design space where the\nnotation is\n\n - line- and indentation-sensitive, and\n - intended to constrain grouping but not reflect every detail of grouping.\n\nDeferring complete grouping to another parser relieves a burden on\nreader-level notation. At the same time, line- and\nindentation-sensitive rules constrain parsing to ensure that line\nbreaks and indentation in the source are not misleading.\n\n# Guide-level explanation\n[guide-level-explanation]: #guide-level-explanation\n\nHere are some example shrubberies. A `:` in the middle of a line is the\nsame as starting a new line with indentation for the part after the\n`:`. (Extra `:`s are allowed, but they are non-standard, and we don't\nuse any extra `:`s here.)\n\n```\ndefine identity(x): x\n\ndefine fib(n):\n  cond\n   | n == 0: 0\n   | n == 1: 1\n   | else: fib(n-1) + fib(n-2)\n\ndefine print_sexp(v):\n  match v\n   | empty: display(\"()\")\n   | cons(a, d):\n       if is_list(d)\n        | display(\"(\")\n          print_sexp(a)\n          for (v = in_list(d)):\n            display(\" \")\n            print_sexp(v)\n          display(\")\")\n        | display(\"(\")\n          print_sexp(a)\n          display(\". \")\n          print_sexp(d)\n          display(\")\")\n   | v: print_atom(v)\n```\n\nForms like `define`, `cond`, and `match` are not specified by\nshrubbery notation, since specifying those forms is up to a language\nthat is built on top of shrubbery notation. Still, shrubbery notation\nis meant to accommodate a particular kind of syntax for nested blocks\n(via indentation or `:`) and conditional branches (via `|`).\n\nIdentifiers are C-style with alphanumerics and underscores. Operators\nare sequences of symbolic characters in the sense of `char-symbolic?`,\nroughly. Numbers are written in some reasonable way distinct from\nidentifiers. No spaces are needed between operators and non-operators,\nso `1+2` and `1 + 2` mean the same thing. Comments are C-style.\n\nThe following tokens are used for grouping, in addition to line breaks\nand indentation:\n\n```\n( ) [ ] { }   ; ,   : |   \\\n```\n\nParentheses, square brackets, and curly braces are used to form groups\nin the obvious way. A `;` or `,` acts as a group separator, even\nwithin a single line. A `:` or `|` treats remaining item on the same\nline like a new indented line, which forms a subgroup. A `\\` continues a\ngroup across a line break.\n\n## Grouping by lines\n\nThe main grouping rule is that sequences on different lines with the\nsame indentation create separate groups, one for each line.\n\n```\nthis is the first group\nthis is the second group\n```\n\nComments and lines with only whitespace are ignored. They don't count\nwhen this document says “the previous line” or “the next line.”\n\n## Grouping by _opener_-_closer_, including blocks\n\nAn _opener_-_closer_ pair `(` and `)`, `[` and `]`, or `{` and `}`\nforms a nested group that can span lines. Within the _opener_-_closer_\npair, separate lines at the same indentation form separate groups.\nWithin `()` or `[]`, groups on separate lines must also be separated\nby `,`.\n\n```\ngroup 1\n[group 2 - subgroup one,\n group 2 - subgroup two,\n (group 2 - subgroup three - subsubgroup A,\n  group 2 - subgroup three - subsubgroup B)]\ngroup 3\ngroup 4 {has a subgroup\n         and another subgroup}\n```\n\nParsing retains whether a subgroup is formed by `()`, `[]`, or `{}`. A\nsubgroup formed by `{` and `}` is also known as a _block_. In the\nabove example, the fourth group has three elements: the identifier\n`group`, the number `4`, and a block that has two groups (each with\nthree identifiers).\n\nAs a special rule, when a group is immediately within a `()` or `[]`\ngroup sequence, the group continues to the next line when that next\nline starts with an operator. This rule allows long expressions with\ninfix operators to be broken across lines more naturally and readably\nthan using `\\`.\n\n```\n(my_favorite_number\n + your_favorite_number\n + their_favorite_numbers)\n```\n\n## Group separators `;` and `,`\n\nA `;` or a `,` separates two groups on the same line. A `;` is allowed\nin any context except between groups immediately within `()` or `[]`.\nA `,` is allowed only to separate groups of an immediate sequence\nwithin `()` or `[]`, and `,` is also required to separate groups\nwitin `()` and `[]`.\n\nThe following two groups are the same:\n\n```\n[(subgroup one, subgroup two,\n  subgroup three),\n {subgroup X; subgroup Y}]\n\n[(subgroup one,\n  subgroup two,\n  subgroup three),\n {subgroup X\n  subgroup Y}]\n```\n\nThese following forms are disllowed, because they use the wrong\nseparator or because a required separator is missing.\n\n\n```\n\/\/ Not allowed\n(1; 2)\n[1; 2]\n{1, 2}\n\n\/\/ Not allowed\n(1\n 2)\n[1\n 2]\n```\n\nThe `;` and `,` separators interact differently with subgroups formed\nby indentation, `:`, and `|`. A `,` closes subgroups as necessary to\nreach an enclosing `()` or `[]`, while a `;` separate groups within a\nnested group sequence. A `;` will never create an empty group. A `,`\nis disallowed if it would create an empty group, except that a traiing\n`,` is allowed.\n\n```\n\/\/ Not allowed\n(, 1)\n(1,, 2)\n\n\/\/ Allowed, but not standard\n(1, 2,)\n```\n\nA trailing `,` is only standard style when the _closer_ that follows is\non its own line.\n\n```\nlist(\n  red,\n  green,\n  blue,\n  orange,\n)\n```\n\n## Grouping by indentation\n\nA sequence of groups has a particular indentation that is determined\nby the first group in the sequence. Subsequent groups in a sequence\nmust start with the same indentation as the first group.\n\nIndentation relative to the current group is equivalent to wrapping\nthe indented lines with `{` and `}`. That is, indentation creates a\nblock. The inserted `{` is placed on the line just before the indented\ngroup, and the `}` is placed just before the line where indentation\nbecomes shallower again. All four of the following groups are the\nsame, each with one block that has two nested groups:\n\n```\nhello:\n  world\n  universe\n\nhello:\n       world\n       universe\n\nhello { world\n        universe }\n\nhello { world ; universe }\n```\n\nAs illustrated in those examples, there is no constraint on how much\nindentation a nested group sequence must use, as long as the indentation\nis more than the enclosing group. Within an _opener_-_closer_ pair, a\nnested group sequence can start at any indentation; it doesn't have to be\nindented to the right of the _opener_.\n\n```\nhello {\n  world\n  universe\n}\n```\n\nIdentation is allowed only on a line where the previous line ends…",
                "title": "shrubbery\/0000-shrubbery.md",
                "footer": "<https:\/\/github.com\/mflatt\/rhombus-brainstorming|mflatt\/rhombus-brainstorming>",
                "id": 1,
                "title_link": "https:\/\/github.com\/mflatt\/rhombus-brainstorming\/blob\/shrubbery\/shrubbery\/0000-shrubbery.md",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https:\/\/github.com\/mflatt\/rhombus-brainstorming\/blob\/shrubbery\/shrubbery\/0000-shrubbery.md",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8uX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " interesting. I will have to spend some time learning about them. Is Beautiful Racket still the recommended resource?\n\nOn another note, "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/github.com\/mflatt\/rhombus-brainstorming\/blob\/shrubbery\/shrubbery\/0000-shrubbery.md",
                                "text": "github.com\/mflatt\/rhombus-brainstorming\/blob\/shrubbery\/shrubbery\/0000-shrubbery.md"
                            },
                            {
                                "type": "text",
                                "text": " is quite relevant to the earlier discussion."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UT60XSVCN",
        "type": "message",
        "ts": "1591005709.308200",
        "client_msg_id": "c2788138-02e9-4af6-aed6-09d022a37d2f",
        "text": "(How do I make slack not ecpand the whole thing?)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbc3e6041047",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bc3e6041047849518d1b042f0a29d5af.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "S.M Mukarram Nainar",
            "display_name": "S.M Mukarram Nainar",
            "team": "T5TCAFTA9",
            "name": "nainars",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590712683.260000",
        "parent_user_id": "UT60XSVCN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hNKf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(How do I make slack not ecpand the whole thing?)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UT60XSVCN",
        "type": "message",
        "ts": "1591006713.308400",
        "client_msg_id": "fe9d983c-aa47-4e3a-9082-068efae98b2d",
        "text": "Thinking about it, aren't coloured spaces basically what you get with org-mode outlines? I mean, they aren't literally spaces, but presentation-wise.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbc3e6041047",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bc3e6041047849518d1b042f0a29d5af.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "S.M Mukarram Nainar",
            "display_name": "S.M Mukarram Nainar",
            "team": "T5TCAFTA9",
            "name": "nainars",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588700944.049400",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2daM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thinking about it, aren't coloured spaces basically what you get with org-mode outlines? I mean, they aren't literally spaces, but presentation-wise."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1591022363.308700",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1591022396.000000"
        },
        "client_msg_id": "2e2ba76d-d925-4d41-8c8f-df72e56192e9",
        "text": "I just delete the attachment in these situations. There should be a 'x' for you up top on the web interface.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590712683.260000",
        "parent_user_id": "UT60XSVCN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pi1f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just delete the attachment in these situations. There should be a 'x' for you up top on the web interface."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPU0YJ1CM",
        "type": "message",
        "ts": "1591023770.311300",
        "edited": {
            "user": "UPU0YJ1CM",
            "ts": "1591023985.000000"
        },
        "client_msg_id": "f0591ace-ea54-4222-aee7-10ec4a9469a3",
        "text": "Our Future of Coding project is taking shape :star-struck:\n*We are building Machine Learning Model that can learn how to code*\n\n:trophy: With <@UPVBV34EL> we are excited to release *codeBERT.*  It's a Masked Language Model trained over Python source code thanks to Hugging Face.\n\n:joystick: You can easily load the model and its weights (code below)\n```from transformers import *\ntokenizer = AutoTokenizer.from_pretrained(\"codistai\/codeBERT-small-v2\")model = AutoModelWithLMHead.from_pretrained(\"codistai\/codeBERT-small-v2\")```\n:chart_with_upwards_trend:  Example of the results are in the thread below\n\n:books: Full tutorial on how to load and fine-tune the model for downstream tasks is coming!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b88e30c8a541",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-20\/870238505987_b88e30c8a541a7725a6d_72.png",
            "first_name": "",
            "real_name": "Maeliza",
            "display_name": "Maeliza",
            "team": "T5TCAFTA9",
            "name": "maeliza.seymour",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591023770.311300",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1592052167.250400",
        "reply_users": [
            "UPU0YJ1CM",
            "UFEQUBNNT",
            "UPVBV34EL"
        ],
        "replies": [
            {
                "user": "UPU0YJ1CM",
                "ts": "1591023947.311800"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1592021907.226600"
            },
            {
                "user": "UPVBV34EL",
                "ts": "1592052167.250400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Fwkj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Our Future of Coding project is taking shape "
                            },
                            {
                                "type": "emoji",
                                "name": "star-struck",
                                "unicode": "1f929"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "We are building Machine Learning Model that can learn how to code",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "emoji",
                                "name": "trophy",
                                "unicode": "1f3c6"
                            },
                            {
                                "type": "text",
                                "text": " With "
                            },
                            {
                                "type": "user",
                                "user_id": "UPVBV34EL"
                            },
                            {
                                "type": "text",
                                "text": " we are excited to release "
                            },
                            {
                                "type": "text",
                                "text": "codeBERT. ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " It's a Masked Language Model trained over Python source code thanks to Hugging Face.\n\n"
                            },
                            {
                                "type": "emoji",
                                "name": "joystick",
                                "unicode": "1f579-fe0f"
                            },
                            {
                                "type": "text",
                                "text": " You can easily load the model and its weights (code below)\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "from transformers import *\ntokenizer = AutoTokenizer.from_pretrained(\"codistai\/codeBERT-small-v2\")model = AutoModelWithLMHead.from_pretrained(\"codistai\/codeBERT-small-v2\")"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "emoji",
                                "name": "chart_with_upwards_trend",
                                "unicode": "1f4c8"
                            },
                            {
                                "type": "text",
                                "text": "  Example of the results are in the thread below\n\n"
                            },
                            {
                                "type": "emoji",
                                "name": "books",
                                "unicode": "1f4da"
                            },
                            {
                                "type": "text",
                                "text": " Full tutorial on how to load and fine-tune the model for downstream tasks is coming!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "tada",
                "users": [
                    "UC2A2ARPT",
                    "UQPHR6Y3S",
                    "U8A5MS6R1",
                    "UA14TGLTC",
                    "UPVBV34EL",
                    "UBSMEUXAA",
                    "UCXR52MU2"
                ],
                "count": 7
            }
        ]
    },
    {
        "text": "codeBERT results over Python code",
        "files": [
            {
                "id": "F01468KT44X",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "UPU0YJ1CM",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hkn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "codeBERT results over Python code"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1591023947.311800",
        "client_msg_id": "f7f41801-6df2-498f-8427-cc997ddf2018",
        "thread_ts": "1591023770.311300",
        "parent_user_id": "UPU0YJ1CM",
        "reactions": [
            {
                "name": "open_mouth",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U015902ESJC",
        "type": "message",
        "ts": "1591031496.312300",
        "client_msg_id": "e5ffd86f-91a1-454d-8c9f-d4bb608504ab",
        "text": "A few thoughts from my instruction set design.\n1. My uCISC instructions have an increment flag in them (see <https:\/\/github.com\/grokthis\/ucisc\/blob\/master\/docs\/07_ALU.md#arguments>). This allows you to chain arbitrarily long ALU functions back to back in increments of 16-bits since that is my word size. This works for addition, shifts and similar operations, for example. The increment points it to the next address and the carry flags tell the ALU how to adjust the next op.\n2. You can generalize this by adding a repeater flag to repeat the same operation N times (see the repetition factor here <https:\/\/github.com\/grokthis\/ucisc\/blob\/master\/docs\/05_Instruction_Behaviors.md#flags-register>)\n3. I banned floating point math from my ALU. You can always attach custom hardware to speed up these cases if needed. The problem is that these operations tend to be highly bit width dependent and also orders of magnitude slower in software.\n4. However, repetition does NOT work for ALU operations where the first bit and the last bit affect each other. For example, in multiplication, each bit is effectively multiplied against every other bit. So, for arbitrarily sized numbers you'll need to make multiple passes. Using something like the Karatsuba algorithm (<https:\/\/en.wikipedia.org\/wiki\/Karatsuba_algorithm>) you could arbitrarily decompose larger operations into multiple sub operations but it's non-linearly scaling. I haven't done the math, but it gets out of control computation very quickly.\n5. Verilog has ALU operations built in with semantics controlling bit width and signed-ness and the effects on the operation. I have found I need to be ultra careful with the results. Adding 8 bit numbers results in a 9th bit. Multiplying to n-bit numbers results in a 2n-bit number. You also have to be careful with what happens when you operate on unequal bit lengths. Verilog's handling of these things might provide some inspiration on how to do what you want.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5446491963e3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-30\/1167794177073_5446491963e3446625b7_72.png",
            "first_name": "Robert",
            "real_name": "Robert Butler",
            "display_name": "Robert Butler",
            "team": "T5TCAFTA9",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590977348.305600",
        "parent_user_id": "UCGAK10LS",
        "attachments": [
            {
                "image_url": "https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/0\/03\/Karatsuba_multiplication.svg\/1200px-Karatsuba_multiplication.svg.png",
                "image_width": 1200,
                "image_height": 1200,
                "image_bytes": 187003,
                "title": "Karatsuba algorithm",
                "title_link": "https:\/\/en.wikipedia.org\/wiki\/Karatsuba_algorithm",
                "from_url": "https:\/\/en.wikipedia.org\/wiki\/Karatsuba_algorithm",
                "author_name": "Wikipedia",
                "author_link": "https:\/\/en.wikipedia.org\/",
                "text": "The Karatsuba algorithm is a fast multiplication algorithm. It was discovered by Anatoly Karatsuba in 1960 and published in 1962. It reduces the multiplication of two n-digit numbers to at most \n  \n    \n      \n        \n          n\n          \n            \n              log\n              \n                2\n              \n            \n            ⁡\n            3\n          \n        \n        ≈\n        \n          n\n          \n            1.58\n          \n        \n      \n    \n    {\\displaystyle n^{\\log _{2}3}\\approx n^{1.58}}\n   single-digit multiplications in general (and exactly \n  \n    \n      \n        \n          n\n          \n            \n              log\n              \n                2\n              \n            \n            ⁡\n            3\n          \n        \n      \n    \n    {\\displaystyle n^{\\log _{2}3}}\n   when n is a power of 2). It is therefore faster than the traditional algorithm, which requires \n  \n    \n      \n        \n          n\n          \n            2\n          \n        \n      \n    \n    {\\displaystyle n^{2}}\n   single-digit products. For example, the Karatsuba algorithm requires 310 = 59,049 single-digit multiplications to multiply two 1024-digit numbers (n = 1024 = 210), whereas the traditional algorithm requires (210)2 = 1,048,576 (a speedup of 17.75 times).\nThe Karatsuba algorithm was the first multiplication algorithm asymptotically faster than the quadratic \"grade school\" algorithm.\nThe Toom–Cook algorithm (1963) is a faster generalization of Karatsuba's method, and the Schönhage–Strassen algorithm (1971) is even faster, for sufficiently large n.",
                "fallback": "wikipedia: Karatsuba algorithm",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/wikipedia.png",
                "id": 1,
                "original_url": "https:\/\/en.wikipedia.org\/wiki\/Karatsuba_algorithm"
            },
            {
                "fallback": "[grokthis\/ucisc] docs\/07_ALU.md",
                "title": "docs\/07_ALU.md",
                "footer": "<https:\/\/github.com\/grokthis\/ucisc|grokthis\/ucisc>",
                "id": 2,
                "title_link": "https:\/\/github.com\/grokthis\/ucisc\/blob\/master\/docs\/07_ALU.md",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https:\/\/github.com\/grokthis\/ucisc\/blob\/master\/docs\/07_ALU.md#arguments",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XesLB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A few thoughts from my instruction set design.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "My uCISC instructions have an increment flag in them (see "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/grokthis\/ucisc\/blob\/master\/docs\/07_ALU.md#arguments"
                                    },
                                    {
                                        "type": "text",
                                        "text": "). This allows you to chain arbitrarily long ALU functions back to back in increments of 16-bits since that is my word size. This works for addition, shifts and similar operations, for example. The increment points it to the next address and the carry flags tell the ALU how to adjust the next op."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "You can generalize this by adding a repeater flag to repeat the same operation N times (see the repetition factor here "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/grokthis\/ucisc\/blob\/master\/docs\/05_Instruction_Behaviors.md#flags-register"
                                    },
                                    {
                                        "type": "text",
                                        "text": ")"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I banned floating point math from my ALU. You can always attach custom hardware to speed up these cases if needed. The problem is that these operations tend to be highly bit width dependent and also orders of magnitude slower in software."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "However, repetition does NOT work for ALU operations where the first bit and the last bit affect each other. For example, in multiplication, each bit is effectively multiplied against every other bit. So, for arbitrarily sized numbers you'll need to make multiple passes. Using something like the Karatsuba algorithm ("
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/en.wikipedia.org\/wiki\/Karatsuba_algorithm"
                                    },
                                    {
                                        "type": "text",
                                        "text": ") you could arbitrarily decompose larger operations into multiple sub operations but it's non-linearly scaling. I haven't done the math, but it gets out of control computation very quickly."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Verilog has ALU operations built in with semantics controlling bit width and signed-ness and the effects on the operation. I have found I need to be ultra careful with the results. Adding 8 bit numbers results in a 9th bit. Multiplying to n-bit numbers results in a 2n-bit number. You also have to be careful with what happens when you operate on unequal bit lengths. Verilog's handling of these things might provide some inspiration on how to do what you want."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1591041211.313400",
        "client_msg_id": "ebb4fe73-ff84-4251-ad36-f2fba768b330",
        "text": "LLVM supports this: <http:\/\/blog.llvm.org\/2020\/04\/the-new-clang-extint-feature-provides.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590977348.305600",
        "parent_user_id": "UCGAK10LS",
        "attachments": [
            {
                "title": "The New Clang _ExtInt Feature Provides Exact Bitwidth Integer Types",
                "title_link": "http:\/\/blog.llvm.org\/2020\/04\/the-new-clang-extint-feature-provides.html",
                "text": "Author : Erich Keane , Compiler Frontend Engineer, Intel Corporation Earlier this month I finally committed a patch to implement the exten...",
                "fallback": "The New Clang _ExtInt Feature Provides Exact Bitwidth Integer Types",
                "from_url": "http:\/\/blog.llvm.org\/2020\/04\/the-new-clang-extint-feature-provides.html",
                "service_icon": "http:\/\/blog.llvm.org\/favicon.ico",
                "service_name": "blog.llvm.org",
                "id": 1,
                "original_url": "http:\/\/blog.llvm.org\/2020\/04\/the-new-clang-extint-feature-provides.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0qMM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "LLVM supports this: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/blog.llvm.org\/2020\/04\/the-new-clang-extint-feature-provides.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1591041290.313700",
        "client_msg_id": "0183194f-6d37-4110-89f2-8754aaabc2d7",
        "text": "There's a proposal to put this into the C language: <http:\/\/www.open-std.org\/jtc1\/sc22\/wg14\/www\/docs\/n2472.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590977348.305600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PKfkB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's a proposal to put this into the C language: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.open-std.org\/jtc1\/sc22\/wg14\/www\/docs\/n2472.pdf"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1591041589.315800",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1591041634.000000"
        },
        "client_msg_id": "a67ac80f-4f87-4c7d-9a34-97ac39772392",
        "text": "If you feel (as I’m guessing most of us here do) that software development hasn’t progressed very much in the last several decades, can you share any thoughts\/theories you might have on why that has happened?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "reply_count": 25,
        "reply_users_count": 9,
        "latest_reply": "1595636401.491300",
        "reply_users": [
            "UC2A2ARPT",
            "U6FKVSVCK",
            "USH01JEDQ",
            "U014BMRB170",
            "UJBAJNFLK",
            "UA14TGLTC",
            "U71PMQ1V0",
            "UJ6LDMMN0",
            "UL3CJ7YKC"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1591042419.317500"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1591042571.317700"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1591042796.318100"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1591042952.318300"
            },
            {
                "user": "USH01JEDQ",
                "ts": "1591053005.322500"
            },
            {
                "user": "USH01JEDQ",
                "ts": "1591053411.322900"
            },
            {
                "user": "U014BMRB170",
                "ts": "1591056727.323400"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1591062345.332500"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1591076874.336100"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1591077218.338400"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1591080009.338800"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1591080729.339200"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1591081839.340700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1591083246.349700"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1591113640.373500"
            },
            {
                "user": "U014BMRB170",
                "ts": "1591113927.373800"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1592151355.265000"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1592151775.265200"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1592202932.299100"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1595548803.276700"
            },
            {
                "user": "USH01JEDQ",
                "ts": "1595549112.277200"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1595550375.278000"
            },
            {
                "user": "USH01JEDQ",
                "ts": "1595551790.279000"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1595553102.286100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1595636401.491300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TE4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you feel (as I’m guessing most of us here do) that software development hasn’t progressed very much in the last several decades, can you share any thoughts\/theories you might have on why that has happened?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "popcorn",
                "users": [
                    "USH01JEDQ",
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1591042038.317200",
        "client_msg_id": "32ec4f31-3f45-4617-883f-e8fca44aebb0",
        "text": "Because I think it's going to devolve… if you instead want to share thoughts about how software dev _has_ made good progress in the past few decades, join my thread.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591042038.317200",
        "reply_count": 19,
        "reply_users_count": 7,
        "latest_reply": "1591822779.148500",
        "reply_users": [
            "UC2A2ARPT",
            "U6FKVSVCK",
            "UT9TWSZB5",
            "U71PMQ1V0",
            "U0123H7JRDM",
            "UHWC9PXBL",
            "UD6EXQVM0"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1591042061.317300"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1591043180.318500"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1591043208.318700"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1591043264.319300"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1591043349.319500"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1591043577.320000"
            },
            {
                "user": "UT9TWSZB5",
                "ts": "1591053000.322300"
            },
            {
                "user": "UT9TWSZB5",
                "ts": "1591053013.322700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1591053461.323100"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1591081522.339900"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1591081643.340100"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1591081753.340300"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1591083654.354700"
            },
            {
                "user": "U0123H7JRDM",
                "ts": "1591094680.358100"
            },
            {
                "user": "U0123H7JRDM",
                "ts": "1591095077.364200"
            },
            {
                "user": "U0123H7JRDM",
                "ts": "1591095579.366900"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1591121797.379200"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1591122250.379900"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1591822779.148500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Roha3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Because I think it's going to devolve… if you instead want to share thoughts about how software dev "
                            },
                            {
                                "type": "text",
                                "text": "has",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " made good progress in the past few decades, join my thread."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UT9TWSZB5"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1591042061.317300",
        "client_msg_id": "9df1cd27-8659-4c6c-9b14-6ea2be9bb2e8",
        "text": ":cricket: :cricket: :cricket:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591042038.317200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Edd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "cricket",
                                "unicode": "1f997"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "cricket",
                                "unicode": "1f997"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "cricket",
                                "unicode": "1f997"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1591042419.317500",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1591042602.000000"
        },
        "client_msg_id": "fd22a81a-2563-4d88-a108-bea03a7d52c4",
        "text": "In my personal experience, Macromedia Flash was a remarkable tool that took a lot of brilliance with it when it died. It was a _good enough_ programming environment (arguably on par with modern JS, or Lua), but that programming environment was embedded within and subservient to a powerful graphics program. People could (and would) use it just to draw pictures or make animations, never touching the programming features.\n\nSo the absence of a modern equivalent is, I think, one way in which we've actually lost progress. We have Unity and Unreal, but while they do have basic 3d modelling features, they are by no means 3d art tools themselves — you still need to bring your own Blender, so to speak.\n\nThis is why I see potential for visual programming — it's not just a way to make the programming experience more _live_, it's actually a way to make the programming experience embedded within and subservient to the arts. Like Flash, but more so.\n\nI think this sort of \"embed the programming within the domain\" is a useful, subtle inversion of the idea of a DSL. Spreadsheets are this. So I think some of the stagnation has been the relative lack of new initiatives of this type.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rrQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my personal experience, Macromedia Flash was a remarkable tool that took a lot of brilliance with it when it died. It was a "
                            },
                            {
                                "type": "text",
                                "text": "good enough",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " programming environment (arguably on par with modern JS, or Lua), but that programming environment was embedded within and subservient to a powerful graphics program. People could (and would) use it just to draw pictures or make animations, never touching the programming features.\n\nSo the absence of a modern equivalent is, I think, one way in which we've actually lost progress. We have Unity and Unreal, but while they do have basic 3d modelling features, they are by no means 3d art tools themselves — you still need to bring your own Blender, so to speak.\n\nThis is why I see potential for visual programming — it's not just a way to make the programming experience more "
                            },
                            {
                                "type": "text",
                                "text": "live",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", it's actually a way to make the programming experience embedded within and subservient to the arts. Like Flash, but more so.\n\nI think this sort of \"embed the programming within the domain\" is a useful, subtle inversion of the idea of a DSL. Spreadsheets are this. So I think some of the stagnation has been the relative lack of new initiatives of this type."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK",
                    "ULM3U6275",
                    "UA14TGLTC",
                    "UML4ZEKDK",
                    "U013RRN6Y6N",
                    "UFLN9JFRT"
                ],
                "count": 6
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6FKVSVCK",
        "type": "message",
        "ts": "1591042571.317700",
        "client_msg_id": "87d816d9-3ffd-40ab-a22b-a4ae716d435a",
        "text": "Short answer: We're at a local maximum. There is a distinct valley of utility between where we are (text programming) and where we could be (fully interactive computing systems) which is deep and difficult to cross, because there isn't really a good incremental way to turn text programming into a fully interactive visual language. Any in-between would be too constrained and clumsy for a fluent programmer working with mature text-based systems, and too difficult to use for a non-programmer who needs programming.\n\nThere's not a lot of need or market in that valley between the peaks. The mountain has to be climbed from the bottom, and it's counterintuitive to make a \"programming language\" that \"isn't for programmers\" (at first).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cad501b70b26",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-07\/786673147216_cad501b70b26e7666ed0_72.png",
            "first_name": "Tim",
            "real_name": "Tim Babb",
            "display_name": "tbabb",
            "team": "T5TCAFTA9",
            "name": "tbabb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eNdBx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Short answer: We're at a local maximum. There is a distinct valley of utility between where we are (text programming) and where we could be (fully interactive computing systems) which is deep and difficult to cross, because there isn't really a good incremental way to turn text programming into a fully interactive visual language. Any in-between would be too constrained and clumsy for a fluent programmer working with mature text-based systems, and too difficult to use for a non-programmer who needs programming.\n\nThere's not a lot of need or market in that valley between the peaks. The mountain has to be climbed from the bottom, and it's counterintuitive to make a \"programming language\" that \"isn't for programmers\" (at first)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275",
                    "UA14TGLTC",
                    "UML4ZEKDK",
                    "U013ZLJARC7"
                ],
                "count": 4
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6FKVSVCK",
        "type": "message",
        "ts": "1591042796.318100",
        "client_msg_id": "e5c10ae2-c6e7-4976-ac57-0ef1633d31ee",
        "text": "I could see an alternate universe where Engelbart's demo happened a handful of years later (when it would have been more possible for others to emulate), when many of its ideas could take off immediately, and programming evolved directly from SketchPad, completely leaving text programming in the dust of the 1970s",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cad501b70b26",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-07\/786673147216_cad501b70b26e7666ed0_72.png",
            "first_name": "Tim",
            "real_name": "Tim Babb",
            "display_name": "tbabb",
            "team": "T5TCAFTA9",
            "name": "tbabb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KAtB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I could see an alternate universe where Engelbart's demo happened a handful of years later (when it would have been more possible for others to emulate), when many of its ideas could take off immediately, and programming evolved directly from SketchPad, completely leaving text programming in the dust of the 1970s"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6FKVSVCK",
        "type": "message",
        "ts": "1591042952.318300",
        "client_msg_id": "fc55f799-6205-406d-8c83-bc08769f8b56",
        "text": "There could have been a world where we chose the trail to the Interactive Programming peak from the very beginning.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cad501b70b26",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-07\/786673147216_cad501b70b26e7666ed0_72.png",
            "first_name": "Tim",
            "real_name": "Tim Babb",
            "display_name": "tbabb",
            "team": "T5TCAFTA9",
            "name": "tbabb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qbi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There could have been a world where we chose the trail to the Interactive Programming peak from the very beginning."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6FKVSVCK",
        "type": "message",
        "ts": "1591043180.318500",
        "client_msg_id": "f4cbc091-a8f8-420d-8648-ca9a273387d4",
        "text": "You gotta give it more than 15 minutes, <@UC2A2ARPT> :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cad501b70b26",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-07\/786673147216_cad501b70b26e7666ed0_72.png",
            "first_name": "Tim",
            "real_name": "Tim Babb",
            "display_name": "tbabb",
            "team": "T5TCAFTA9",
            "name": "tbabb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591042038.317200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n\/u2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You gotta give it more than 15 minutes, "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "hatching_chick",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "upside_down_face",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6FKVSVCK",
        "type": "message",
        "ts": "1591043208.318700",
        "client_msg_id": "6e4d598d-9d3a-4992-9e18-12b8d01c6ad7",
        "text": "I think notebooks, the in-browser dev tools, and compiler-connected text editors are notable leaps in interactivity",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cad501b70b26",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-07\/786673147216_cad501b70b26e7666ed0_72.png",
            "first_name": "Tim",
            "real_name": "Tim Babb",
            "display_name": "tbabb",
            "team": "T5TCAFTA9",
            "name": "tbabb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591042038.317200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MMkLn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think notebooks, the in-browser dev tools, and compiler-connected text editors are notable leaps in interactivity"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6FKVSVCK",
        "type": "message",
        "ts": "1591043264.319300",
        "client_msg_id": "bef7c2ca-232f-4ea9-ad92-302217eca52e",
        "text": "Also, the ability to imbue passive real-world objects with computational \"magic\" at Dynamicland fairly well blew my mind. There's definitely something revolutionary there.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cad501b70b26",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-07\/786673147216_cad501b70b26e7666ed0_72.png",
            "first_name": "Tim",
            "real_name": "Tim Babb",
            "display_name": "tbabb",
            "team": "T5TCAFTA9",
            "name": "tbabb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591042038.317200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vg8Yk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, the ability to imbue passive real-world objects with computational \"magic\" at Dynamicland fairly well blew my mind. There's definitely something revolutionary there."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT",
                    "UBSMEUXAA"
                ],
                "count": 2
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1591043349.319500",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1591043561.000000"
        },
        "client_msg_id": "184a4acf-6a4c-42c7-b2f1-2df98023bca5",
        "text": "There are a number of tools we've built to do jobs that used to require bespoke from-scratch programming. I'm thinking of things like Rails-style web frameworks, Unity-style game engines, Maya-style 3d software. These are all amazing to me. They show that programming can be a good way to bootstrap from \"requires bespoke code per project\" to \"can use a substrate that covers up to the 99th percentile before bespoke solutions make more sense\". Having those things now might make programming progress look slower. In a number of important areas — and, perhaps, _all_ the low-hanging fruit areas — we've already used programming to obviate the need for programming.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591042038.317200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "suX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are a number of tools we've built to do jobs that used to require bespoke from-scratch programming. I'm thinking of things like Rails-style web frameworks, Unity-style game engines, Maya-style 3d software. These are all amazing to me. They show that programming can be a good way to bootstrap from \"requires bespoke code per project\" to \"can use a substrate that covers up to the 99th percentile before bespoke solutions make more sense\". Having those things now might make programming progress look slower. In a number of important areas — and, perhaps, "
                            },
                            {
                                "type": "text",
                                "text": "all",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the low-hanging fruit areas — we've already used programming to obviate the need for programming."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6FKVSVCK",
        "type": "message",
        "ts": "1591043577.320000",
        "client_msg_id": "78bd9cac-cdb1-40e8-aba3-6d797a14bdab",
        "text": "Obviously I'm very bullish on node graphs :grinning:— the best examples of which we owe to VFX and audio \"DSLs\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cad501b70b26",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-07\/786673147216_cad501b70b26e7666ed0_72.png",
            "first_name": "Tim",
            "real_name": "Tim Babb",
            "display_name": "tbabb",
            "team": "T5TCAFTA9",
            "name": "tbabb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591042038.317200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7Z0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Obviously I'm very bullish on node graphs "
                            },
                            {
                                "type": "emoji",
                                "name": "grinning",
                                "unicode": "1f600"
                            },
                            {
                                "type": "text",
                                "text": "— the best examples of which we owe to VFX and audio \"DSLs\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UH85W1ML1",
        "type": "message",
        "ts": "1591052860.321500",
        "client_msg_id": "16f090a7-1018-4be3-8c14-6c3a9af16004",
        "text": "Anyone familiar with the work Synthetic Minds is doing?  They've got an HN jobs post:\n&gt; Synthetic Minds is building program synthesizers, i.e., automation that can write code. We have a working prototype in stealth and are currently in the process of doing user studies.\nTheir site and Twitter look like it's about automated generation of smart contracts, and they held a summit on program synthesis last fall?  <https:\/\/synthetic-minds.com\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2c0e4a3979e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529852667013_2c0e4a3979e8e92c4924_72.jpg",
            "first_name": "",
            "real_name": "Vitorio Miliano",
            "display_name": "vitorio",
            "team": "T5TCAFTA9",
            "name": "vito_futureofcoding",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591052860.321500",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1591052938.321900",
        "reply_users": [
            "UT9TWSZB5",
            "U013HU44GLS"
        ],
        "replies": [
            {
                "user": "UT9TWSZB5",
                "ts": "1591052903.321600"
            },
            {
                "user": "U013HU44GLS",
                "ts": "1591052938.321900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1vWk4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyone familiar with the work Synthetic Minds is doing?  They've got an HN jobs post:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Synthetic Minds is building program synthesizers, i.e., automation that can write code. We have a working prototype in stealth and are currently in the process of doing user studies."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Their site and Twitter look like it's about automated generation of smart contracts, and they held a summit on program synthesis last fall?  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/synthetic-minds.com\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UT9TWSZB5",
        "type": "message",
        "ts": "1591052903.321600",
        "client_msg_id": "708770a7-cacc-47e8-85a9-ce401773029f",
        "text": "Looks interesting",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9cb6f99c1d46",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-05\/941640103046_9cb6f99c1d4661569649_72.jpg",
            "first_name": "",
            "real_name": "Chet Corcos",
            "display_name": "Chet Corcos",
            "team": "T5TCAFTA9",
            "name": "ccorcos",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591052860.321500",
        "parent_user_id": "UH85W1ML1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JaSj7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looks interesting"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013HU44GLS",
        "type": "message",
        "ts": "1591052938.321900",
        "client_msg_id": "ad167787-f39d-4a74-a221-ce852b3a6b31",
        "text": "Cool name. Not sure I buy the automated part of writing software ...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cb9e0e557132",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-12\/1132600153425_cb9e0e5571321437af24_72.jpg",
            "first_name": "Jean-Louis",
            "real_name": "Jean-Louis Villecroze",
            "display_name": "CocoaGeek",
            "team": "T5TCAFTA9",
            "name": "jeanlouis.villecroze",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591052860.321500",
        "parent_user_id": "UH85W1ML1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9t0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cool name. Not sure I buy the automated part of writing software ..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UT9TWSZB5",
        "type": "message",
        "ts": "1591053000.322300",
        "client_msg_id": "ecd9a7f0-0182-4b5c-8f1c-67fd12a4d8d3",
        "text": "The proliferation of JavaScript has made it vastly easier to build software interfaces! :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9cb6f99c1d46",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-05\/941640103046_9cb6f99c1d4661569649_72.jpg",
            "first_name": "",
            "real_name": "Chet Corcos",
            "display_name": "Chet Corcos",
            "team": "T5TCAFTA9",
            "name": "ccorcos",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591042038.317200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cLy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The proliferation of JavaScript has made it vastly easier to build software interfaces! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USH01JEDQ",
        "type": "message",
        "ts": "1591053005.322500",
        "client_msg_id": "f95a6870-684e-4064-9c71-e5f942a2b8ed",
        "text": "imo, there's a \"medium is the message\" \/ \"you have to become the medium to process information\" aspect at play - computing has offered us 2 primary modes to work in, text\/CLI and windows, and that's dictated the terms - things haven't really moved (on), because we don't experience other frames, true other platforms -\n\nThe usual forms of programming in both modes are obvious, but even the \"novel\" modes that we've seen — browsers, notebooks — are really just conversations in the same terms.\n\nEven the above is too pedestrian to say in a forum of this quality. But it still feels like it's the case. We aren't informed by other modes yet, such as audio\/oral programming (eg, your computer is your AirPods; modify Alexa in a meaningful way with your voice), or true spatial\/temporal (as AR will offer with pseudo-holography), beyond pilot &amp; novelty projects. And even once we have those, will we still think primarily in terms of desktop and mobile for \"reach\", and hence be back \/ constrained in the 2D plane.\n\nIt's very well possible that 200 years from now programmers, artists, and tool-builders may still think \"yeah, a single window is really all I need\". Captain Picard's crew didn't open a holodeck to get shit done, they remained at their station on the bridge. _(ok, they did open a holodeck a couple times - also they went back in time)_\n\nWe may need a whole new mode beyond \"information\" to really feel out an alternative paradigm. Information itself may not need much more than what we have.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "854f96b690f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-17\/6370745671793_854f96b690f51d1266ee_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Galtenberg",
            "display_name": "Chris G",
            "team": "T5TCAFTA9",
            "name": "galtenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kgU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "imo, there's a \"medium is the message\" \/ \"you have to become the medium to process information\" aspect at play - computing has offered us 2 primary modes to work in, text\/CLI and windows, and that's dictated the terms - things haven't really moved (on), because we don't experience other frames, true other platforms -\n\nThe usual forms of programming in both modes are obvious, but even the \"novel\" modes that we've seen — browsers, notebooks — are really just conversations in the same terms.\n\nEven the above is too pedestrian to say in a forum of this quality. But it still feels like it's the case. We aren't informed by other modes yet, such as audio\/oral programming (eg, your computer is your AirPods; modify Alexa in a meaningful way with your voice), or true spatial\/temporal (as AR will offer with pseudo-holography), beyond pilot & novelty projects. And even once we have those, will we still think primarily in terms of desktop and mobile for \"reach\", and hence be back \/ constrained in the 2D plane.\n\nIt's very well possible that 200 years from now programmers, artists, and tool-builders may still think \"yeah, a single window is really all I need\". Captain Picard's crew didn't open a holodeck to get shit done, they remained at their station on the bridge. "
                            },
                            {
                                "type": "text",
                                "text": "(ok, they did open a holodeck a couple times - also they went back in time)",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nWe may need a whole new mode beyond \"information\" to really feel out an alternative paradigm. Information itself may not need much more than what we have."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UT9TWSZB5",
        "type": "message",
        "ts": "1591053013.322700",
        "client_msg_id": "f621c48d-ccb8-4bf9-823e-d7772063c6c3",
        "text": "On all platforms too!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9cb6f99c1d46",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-05\/941640103046_9cb6f99c1d4661569649_72.jpg",
            "first_name": "",
            "real_name": "Chet Corcos",
            "display_name": "Chet Corcos",
            "team": "T5TCAFTA9",
            "name": "ccorcos",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591042038.317200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PSNcq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On all platforms too!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USH01JEDQ",
        "type": "message",
        "ts": "1591053411.322900",
        "client_msg_id": "8715083f-83ea-4bf4-842e-54bccc69728d",
        "text": "On another line of argument, it's always worth re-reading <https:\/\/www.dreamsongs.com\/RiseOfWorseIsBetter.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "854f96b690f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-17\/6370745671793_854f96b690f51d1266ee_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Galtenberg",
            "display_name": "Chris G",
            "team": "T5TCAFTA9",
            "name": "galtenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0S5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On another line of argument, it's always worth re-reading "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.dreamsongs.com\/RiseOfWorseIsBetter.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "ULM3U6275",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1591053461.323100",
        "client_msg_id": "c15c8372-88c6-46d4-a367-951258bacca6",
        "text": "Even spaceships!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591042038.317200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+=xJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Even spaceships!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "UT9TWSZB5"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U014BMRB170",
        "type": "message",
        "ts": "1591056727.323400",
        "client_msg_id": "defe4fab-cc22-4c09-8d7b-4ae1150c35b7",
        "text": "I think programming has gotten a lot better in the last few _decades_: there are tons and tons more people who can do it, the web has been the most amazing distribution system so far, and tooling\/languages have gotten good enough that people can operate with a minimum of low-level knowledge or engineering background.\n\nI think programming has gotten slightly worse in the last 10-15 years because languages and techniques have been dominated by what FAANG companies have created, and those approaches have scaled down catastrophically poorly.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "aa987a15dfe3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-29\/1167097708305_aa987a15dfe3dcccd363_72.jpg",
            "first_name": "",
            "real_name": "Tom MacWright",
            "display_name": "Tom MacWright",
            "team": "T5TCAFTA9",
            "name": "tom041",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YSE7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think programming has gotten a lot better in the last few "
                            },
                            {
                                "type": "text",
                                "text": "decades",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": there are tons and tons more people who can do it, the web has been the most amazing distribution system so far, and tooling\/languages have gotten good enough that people can operate with a minimum of low-level knowledge or engineering background.\n\nI think programming has gotten slightly worse in the last 10-15 years because languages and techniques have been dominated by what FAANG companies have created, and those approaches have scaled down catastrophically poorly."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U6FKVSVCK",
                    "UA14TGLTC"
                ],
                "count": 2
            },
            {
                "name": "thinking_face",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01176YGU4W",
        "type": "message",
        "ts": "1591058338.327500",
        "client_msg_id": "606ebe9c-ffc4-4b60-bb7e-e0f2c498536f",
        "text": "So I have my consulting website on Notion made public with a tool called super.so…today, I got an email from a genuinely helpful person who alerted me that I had my projects\/todos data available publicly. I told him it was on purpose for transparency sake (idk if its helpful for biz but that’s a separate conversation). He sends:\n\n```\"As a DBA (database architect) and developer for 23+ years, managing million dollar+ projects, I wouldn't use Notion in this public way. It's possible to run into sensitive info issues down the road when you forget to lock things down. You can't scale and maintain security because Notion simply doesn't have the features to provide scalable security for public facing Pages. I would instead create a fake project that you can demo and make public. And since the personal level is now free with unlimited blocks, you could create a separate \"Demo\" workspace without fear of ever showing sensitive data or running into block limits.\n\nBest of luck... I'm seeing an increasing problem in the Notion community with non-programmers and those with little or no real-world Project Management or database experience setting up shop as Notion Experts. We were building database-backed websites in 1996-7 and by the early 2000's most of our jobs for large companies and State agencies and governments consisted of cleaning up the messes the early \"web designers\" created ... I fear we're seeing a similar situation with Notion and in 1-3 years there are going to be clients who have unusable systems that will have to be rebuilt in order to scale and handle new functionality...\"```\nI feel like this could be a good discussion. What are your thoughts?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga34c915e10e",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a34c915e10e017dc590c417204ef05e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Temirlan",
            "real_name": "Temirlan Nugmanov",
            "display_name": "Tem (optemization.com)",
            "team": "T5TCAFTA9",
            "name": "tim265",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591058338.327500",
        "reply_count": 8,
        "reply_users_count": 7,
        "latest_reply": "1592154031.266000",
        "reply_users": [
            "UA14TGLTC",
            "UMYKGHYBA",
            "UC2A2ARPT",
            "U6FKVSVCK",
            "UMWF81HTP",
            "U013RRN6Y6N",
            "UJ6LDMMN0"
        ],
        "replies": [
            {
                "user": "UA14TGLTC",
                "ts": "1591079762.338600"
            },
            {
                "user": "UMYKGHYBA",
                "ts": "1591081310.339600"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1591109905.372700"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1591127690.381800"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1591133484.382300"
            },
            {
                "user": "UMWF81HTP",
                "ts": "1591166007.383300"
            },
            {
                "user": "U013RRN6Y6N",
                "ts": "1591464766.004100"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1592154031.266000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "trxfi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So I have my consulting website on Notion made public with a tool called super.so…today, I got an email from a genuinely helpful person who alerted me that I had my projects\/todos data available publicly. I told him it was on purpose for transparency sake (idk if its helpful for biz but that’s a separate conversation). He sends:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"As a DBA (database architect) and developer for 23+ years, managing million dollar+ projects, I wouldn't use Notion in this public way. It's possible to run into sensitive info issues down the road when you forget to lock things down. You can't scale and maintain security because Notion simply doesn't have the features to provide scalable security for public facing Pages. I would instead create a fake project that you can demo and make public. And since the personal level is now free with unlimited blocks, you could create a separate \"Demo\" workspace without fear of ever showing sensitive data or running into block limits.\n\nBest of luck... I'm seeing an increasing problem in the Notion community with non-programmers and those with little or no real-world Project Management or database experience setting up shop as Notion Experts. We were building database-backed websites in 1996-7 and by the early 2000's most of our jobs for large companies and State agencies and governments consisted of cleaning up the messes the early \"web designers\" created ... I fear we're seeing a similar situation with Notion and in 1-3 years there are going to be clients who have unusable systems that will have to be rebuilt in order to scale and handle new functionality...\""
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI feel like this could be a good discussion. What are your thoughts?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMYKGHYBA"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1591062345.332500",
        "client_msg_id": "2F1E5DE2-70E9-4343-B212-6DE9450F8E1F",
        "text": "<@UC2A2ARPT> That’s also the argument I made about Emacs in <https:\/\/malleable.systems\/blog\/2020\/04\/01\/the-most-successful-malleable-system-in-history\/|https:\/\/malleable.systems\/blog\/2020\/04\/01\/the-most-successful-malleable-system-in-history\/>. I really like your framing of it being the dual of DSLs. Maybe the fact that CS started out from considerations about universal properties of symbolic manipulation has been haunting us all the time. “General purpose” programming is not something many people see a need for.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "attachments": [
            {
                "title": "The most successful malleable system in history",
                "title_link": "https:\/\/malleable.systems\/blog\/2020\/04\/01\/the-most-successful-malleable-system-in-history\/",
                "text": "Emacs is probably the most successful malleable system in the history of computing. What can we learn from it for designing the malleable systems of the future?",
                "fallback": "The most successful malleable system in history",
                "thumb_url": "https:\/\/malleable.systems\/meta\/android-chrome-512x512.png",
                "ts": 1585735200,
                "from_url": "https:\/\/malleable.systems\/blog\/2020\/04\/01\/the-most-successful-malleable-system-in-history\/",
                "thumb_width": 512,
                "thumb_height": 512,
                "service_icon": "https:\/\/malleable.systems\/meta\/apple-touch-icon.png",
                "service_name": "malleable.systems",
                "id": 1,
                "original_url": "https:\/\/malleable.systems\/blog\/2020\/04\/01\/the-most-successful-malleable-system-in-history\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/eBm6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " That’s also the argument I made about Emacs in "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/malleable.systems\/blog\/2020\/04\/01\/the-most-successful-malleable-system-in-history\/",
                                "text": "https:\/\/malleable.systems\/blog\/2020\/04\/01\/the-most-successful-malleable-system-in-history\/"
                            },
                            {
                                "type": "text",
                                "text": ". I really like your framing of it being the dual of DSLs. Maybe the fact that CS started out from considerations about universal properties of symbolic manipulation has been haunting us all the time. “General purpose” programming is not something many people see a need for."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1591062467.334800",
        "client_msg_id": "DD05759C-0C10-4D3C-9D61-20D15A7D073F",
        "text": "<@UT60XSVCN> Beautiful Racket is a very good entry point. There are also many little languages by now in the Racket ecosystem that are good examples to study.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590712683.260000",
        "parent_user_id": "UT60XSVCN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "opI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UT60XSVCN"
                            },
                            {
                                "type": "text",
                                "text": " Beautiful Racket is a very good entry point. There are also many little languages by now in the Racket ecosystem that are good examples to study."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1591076874.336100",
        "client_msg_id": "e84c2a6d-ef19-4a55-9385-1e49cfa8fdd1",
        "text": "Yes friends, I'm going to go with better *and* worse.  To narrow focus, consider the progression from basically no source control to CVS to SVN to several distributed systems to Git.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P+td",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes friends, I'm going to go with better "
                            },
                            {
                                "type": "text",
                                "text": "and",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " worse.  To narrow focus, consider the progression from basically no source control to CVS to SVN to several distributed systems to Git."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1591077218.338400",
        "client_msg_id": "C93EF591-51A6-45A6-ACD3-F98BD2295442",
        "text": "In view of <@U014BMRB170>’s and <@UA14TGLTC>’s comments, maybe we should first define what we consider “better”.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MTk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In view of "
                            },
                            {
                                "type": "user",
                                "user_id": "U014BMRB170"
                            },
                            {
                                "type": "text",
                                "text": "’s and "
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": "’s comments, maybe we should first define what we consider “better”."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1591079762.338600",
        "client_msg_id": "670fde92-e89c-4bac-ada8-a151975405bd",
        "text": "Two topics are going on here...\n\n(1) If you are well aware that everything is public, that may just be the way you role.\n\n(2) Are we just talking about the age old problem that the inexperienced and incompetent can sometimes hack things together?  The question for Notion as a particular tool is whether it incentivizes bad habits.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591058338.327500",
        "parent_user_id": "U01176YGU4W",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CK2iK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Two topics are going on here...\n\n(1) If you are well aware that everything is public, that may just be the way you role.\n\n(2) Are we just talking about the age old problem that the inexperienced and incompetent can sometimes hack things together?  The question for Notion as a particular tool is whether it incentivizes bad habits."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1591080009.338800",
        "client_msg_id": "aaf6d2f1-ee6a-4c2b-93be-da6261dcfb1e",
        "text": "Good point <@UJBAJNFLK>.  One pattern we tend to see is that as the rough edges in a system get ground down toward being easier to use, more \"features\" are added or at least more complex tasks are attempted.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Ur",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good point "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": ".  One pattern we tend to see is that as the rough edges in a system get ground down toward being easier to use, more \"features\" are added or at least more complex tasks are attempted."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1591080729.339200",
        "edited": {
            "user": "U71PMQ1V0",
            "ts": "1591080793.000000"
        },
        "client_msg_id": "16f1dd49-d287-4128-8ac6-40c35ec9cd4d",
        "text": "To add to <@U014BMRB170>’s comment, my impression is that programming got much better over the last few decades for large industrial users, at the direct expense of more convivial uses. More layers of abstraction to understand, more constant overheads for starting a project, more moving parts to maintain. But dramatically better distribution, tooling and scaling.\n\nIn many ways, malleability is the opposite of what a big company wants. When you have ten thousand engineers you're more concerned with trying to pin the damn thing down.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J+\/1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To add to "
                            },
                            {
                                "type": "user",
                                "user_id": "U014BMRB170"
                            },
                            {
                                "type": "text",
                                "text": "’s comment, my impression is that programming got much better over the last few decades for large industrial users, at the direct expense of more convivial uses. More layers of abstraction to understand, more constant overheads for starting a project, more moving parts to maintain. But dramatically better distribution, tooling and scaling.\n\nIn many ways, malleability is the opposite of what a big company wants. When you have ten thousand engineers you're more concerned with trying to pin the damn thing down."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK",
                    "ULM3U6275",
                    "U6KQ2S410",
                    "UCUSW7WVD"
                ],
                "count": 4
            }
        ]
    }
]