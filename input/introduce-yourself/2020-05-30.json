[
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1590822986.253100",
        "edited": {
            "user": "UFLN9JFRT",
            "ts": "1590823004.000000"
        },
        "client_msg_id": "B9996428-C9A4-4580-82CA-0699A5140F2B",
        "text": "Welcome! Are you the same Tom M who contacted me and we chatted at length a few weeks ago?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590796758.251600",
        "parent_user_id": "U014BMRB170",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g=7+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Welcome! Are you the same Tom M who contacted me and we chatted at length a few weeks ago?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1590824001.255200",
        "client_msg_id": "09EE5942-B33E-406E-9AE8-959E87AE3EBB",
        "text": "I'm super excited about Rectangle. Lots of amazing people I know of have wound up working on that project. Very cool.\n\nJokes aside — welcome!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590796758.251600",
        "parent_user_id": "U014BMRB170",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5sUp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm super excited about Rectangle. Lots of amazing people I know of have wound up working on that project. Very cool.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Jokes aside — welcome!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1590855297.256800",
        "client_msg_id": "5B105447-AF15-43C5-BB98-14859D028AA5",
        "text": "Yeah what is the rectangle? I guess it means super secret startup ;)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590796758.251600",
        "parent_user_id": "U014BMRB170",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O0du",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah what is the rectangle? I guess it means super secret startup ;)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U015902ESJC",
        "type": "message",
        "ts": "1590881147.261300",
        "client_msg_id": "db39522f-3aa0-43ad-99f8-5c332358b4cf",
        "text": "Hi everyone! I'm Robert. I'm working on designing a hobbyist processor architecture that is designed to fit in a single person's head. The ultimate goal is to get a full software stack sitting on top of it that is useful from micro-controllers to serious desktop processing, simple enough to be fully understandable by a single human mind and yet powerful enough to do so-called \"real\" work. I basically want to figure out how simple we can make our entire software stack and perhaps unlock even more potential in the world by doing so.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5446491963e3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-30\/1167794177073_5446491963e3446625b7_72.png",
            "first_name": "Robert",
            "real_name": "Robert Butler",
            "display_name": "Robert Butler",
            "team": "T5TCAFTA9",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590881147.261300",
        "reply_count": 18,
        "reply_users_count": 4,
        "latest_reply": "1591945185.286100",
        "reply_users": [
            "UHWC9PXBL",
            "UJN1TAYEQ",
            "UCUSW7WVD",
            "U015902ESJC"
        ],
        "replies": [
            {
                "user": "UHWC9PXBL",
                "ts": "1590888971.262000"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1590889245.262200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1590889679.262500"
            },
            {
                "user": "U015902ESJC",
                "ts": "1590897640.263000"
            },
            {
                "user": "U015902ESJC",
                "ts": "1590897851.263200"
            },
            {
                "user": "U015902ESJC",
                "ts": "1590898116.263500"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1590939232.266100"
            },
            {
                "user": "U015902ESJC",
                "ts": "1591027908.267500"
            },
            {
                "user": "U015902ESJC",
                "ts": "1591028461.267700"
            },
            {
                "user": "U015902ESJC",
                "ts": "1591028813.268000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1591028921.268200"
            },
            {
                "user": "U015902ESJC",
                "ts": "1591029556.268600"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1591029713.268800"
            },
            {
                "user": "U015902ESJC",
                "ts": "1591030049.269000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1591031657.269200"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1591036125.269900"
            },
            {
                "user": "U015902ESJC",
                "ts": "1591083718.271600"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1591945185.286100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WK2y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi everyone! I'm Robert. I'm working on designing a hobbyist processor architecture that is designed to fit in a single person's head. The ultimate goal is to get a full software stack sitting on top of it that is useful from micro-controllers to serious desktop processing, simple enough to be fully understandable by a single human mind and yet powerful enough to do so-called \"real\" work. I basically want to figure out how simple we can make our entire software stack and perhaps unlock even more potential in the world by doing so."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UCUSW7WVD",
                    "UMWF81HTP"
                ],
                "count": 2
            },
            {
                "name": "wave",
                "users": [
                    "U8A5MS6R1",
                    "UHWC9PXBL",
                    "UA14TGLTC",
                    "UJBAJNFLK",
                    "UC2A2ARPT",
                    "UC21F8Q48",
                    "UJ6LDMMN0",
                    "UKP3B2J5D"
                ],
                "count": 8
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1590888971.262000",
        "client_msg_id": "BB8D0E5F-58BE-4526-B537-1C1E58DE1138",
        "text": "<@UCUSW7WVD> mission alignment alert",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590881147.261300",
        "parent_user_id": "U015902ESJC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8\/f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " mission alignment alert"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1590889245.262200",
        "client_msg_id": "81958dfa-7e37-456f-b9ff-d137930c1a8b",
        "text": "This sounds a bit like the Forth programming language and the Forth CPU cores that have been designed for the language. Particularly Chuck Moore's work on ColorForth and the GreenArrays \"minimal instruction set\" CPU to execute it. What is your opinion of those efforts?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590881147.261300",
        "parent_user_id": "U015902ESJC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IAB8X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This sounds a bit like the Forth programming language and the Forth CPU cores that have been designed for the language. Particularly Chuck Moore's work on ColorForth and the GreenArrays \"minimal instruction set\" CPU to execute it. What is your opinion of those efforts?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1590889679.262500",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1590889714.000000"
        },
        "client_msg_id": "818c875a-1983-47d9-aca8-2d2f81b6b4e3",
        "text": "<@UHWC9PXBL> Robert is actually building a Mu-like software stack for his computer :slightly_smiling_face:\n\n<https:\/\/www.youtube.com\/watch?v=lczvuLgElIw>\n\n<https:\/\/github.com\/grokthis\/ucisc\/blob\/master\/docs\/01_Introduction.md>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590881147.261300",
        "parent_user_id": "U015902ESJC",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "What to choose? Even custom 8 bit processors need code to run.",
                "title_link": "https:\/\/www.youtube.com\/watch?v=lczvuLgElIw",
                "author_name": "GrokThis Hackerspace",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCh4OpfF7T7UtezGejRTLxCw",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/lczvuLgElIw\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: What to choose? Even custom 8 bit processors need code to run.",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/lczvuLgElIw?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=lczvuLgElIw",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=lczvuLgElIw"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W0k2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " Robert is actually building a Mu-like software stack for his computer "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=lczvuLgElIw"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/grokthis\/ucisc\/blob\/master\/docs\/01_Introduction.md"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U015902ESJC",
        "type": "message",
        "ts": "1590897640.263000",
        "client_msg_id": "b3d6b3f5-4996-4460-a5c9-b965d18644ee",
        "text": "<@UHWC9PXBL> I was marching down the same philosophical path as <@UCUSW7WVD>, just a few years behind. Mu propelled me forward and has been a huge influence on uCISC. Kartik even named it :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5446491963e3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-30\/1167794177073_5446491963e3446625b7_72.png",
            "first_name": "Robert",
            "real_name": "Robert Butler",
            "display_name": "Robert Butler",
            "team": "T5TCAFTA9",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590881147.261300",
        "parent_user_id": "U015902ESJC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SBf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " I was marching down the same philosophical path as "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": ", just a few years behind. Mu propelled me forward and has been a huge influence on uCISC. Kartik even named it "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U015902ESJC",
        "type": "message",
        "ts": "1590897851.263200",
        "client_msg_id": "773bd9fc-5bb0-4f58-aeb5-72c3b06c8694",
        "text": "<@UJN1TAYEQ> Forth was a pretty big influence on my processor design and, in particular, the number of registers and some of the basic philosophy. I didn't know about ColorForth and GreenArrays until very recently, but the talk I watched sparked a critical insight on processor communication that led me to the final architecture: <https:\/\/github.com\/grokthis\/ucisc\/blob\/master\/docs\/04_System.md>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5446491963e3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-30\/1167794177073_5446491963e3446625b7_72.png",
            "first_name": "Robert",
            "real_name": "Robert Butler",
            "display_name": "Robert Butler",
            "team": "T5TCAFTA9",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590881147.261300",
        "parent_user_id": "U015902ESJC",
        "attachments": [
            {
                "fallback": "[grokthis\/ucisc] docs\/04_System.md",
                "text": "```\n# uCISC System and Hardware\n\nuCISC is designed to prefer lots of small micro processor cores over larger more powerful\ncores. In general, uCISC perfers to provide the software with predictable transparent access\nto the hardware and let the software decide how to use this and utilize the capabilities\noptimally.\n\nFor example, modern processors make heavy used of pipelining and superscaler architectures to\ntransform a sequential set of instructions into a parallel matrix of execution units. The\nprocessors do advanced fetch, decoding and planning logic to attempt to maximize the overall\nthroughput of the processor. Pipelines aren't terribly difficult to understand, but superlinear\nscaling is highly opaque to most programming work. Because of these design constraings,\nprocessors perform a lot of speculative execution that is hard to unwind during security faults.\nFurther, this leads to huge transistor counts. uCISC prefers to use additional transitors to add\nmore cores that can be software controlled effectively.\n\n### Processor Architecture\n\nThe basic processor structure is a hierarchical structure where each processor has a single\nparent (except the root processor) and up to 255 children processors. In order to access the\nprocessors, they must be \"banked\" in 4k blocks.\n\n#### Memory\n\n*Local Memory*\n\nThe processor has up to 64k words of 16-bits each for local memory. A page of memory is 256\nwords (512 bytes) and a block of memory is 4k words (8k bytes). The highest available memory\naddress is accessible in the device address space at address 0x1000.\n\n*Banked Memory*\n\nThe uCISC processor uses [bank switching](<https:\/\/en.wikipedia.org\/wiki\/Bank_switching>) to\nprovide access to other processors. This works by mapping a specific block to a processor ID.\nOnce mapped, any reads or writes to this memory block will actually read or write from the\nspecified processor. The memory bank isn't actually directly connected to the local memory\nof another processor, but it is dependent on the other processor reading or writing the\nrequested data.\n\nBanked memory example:\n\n```\n# Setup: We have configured the 4k block at 0x1000 to point to processor ID 0 (our parent)\n# You do this by setting specific values in device space. We assume that is already done here.\n0\/copy 16 into 2.reg\/ 4.val 10.imm 2.reg\n212\/swap MSB and LSB\/ 2.reg 2.reg\n# 2.reg now points to 0x1000\n\n# Copy the value on the stack to our parent processor\n0\/copy\/ 1.mem\/SP\/ 2.mem\n\n# We can copy multiple words by using repeated instructions (see Instruction Behaviors)\n0\/copy 0x10 to flags register and set repeat\/ 4.val 10.imm 4.reg\n# Copying multiple words takes fewer instructions and may have a data width speed boost.\n# See Instruction Behaviors for more details on performance.\n0\/copy 16 words to parent\/ 1.mem 2.mem\n\n# Read return value from parent (1 word), push to stack\n# Copying multiple would work as well\n0\/copy\/ 2.mem\/parent\/ 1.mem 1.push\n```\n\nNote that writing to banked memory only works if the processor on the other side is reading,\nand reading only works if the other processor is writing. Reads and writes block until the\nother processor responds accordingly.\n\n```\n# Processor A has 0x1000 banked to ID = 0, 1.reg is SP, 2.reg is 0x1000\n# Write to parent, blocks until parent reads it\n0\/copy\/ 1.mem 2.mem\/parent\/\n... other instructions\n\n# Processor P (parent) has 0x4000 banked to ID = 4 (processor A), 1.reg is SP, 2.reg is 0x4000\n# Push value from child onto stack, blocks until child writes\n0\/copy\/ 2.mem 1.mem 1.push\n... other instructions\n```\n\nThis means a few things:\n\n* Since reads and writes are blocking, the code on the various processors need to coordinate\n* Device space includes the ability to determine which children processors are reading or\n  writing. The parent processor is responsible for coordinating the work for the children.\n* Since the the receiver is doing a copy from the banked memory to some other address, the\n  sender does not know the real address for where the data is coming from. The sender doesn't\n  know where the data is going to either. This is effectively an opaque security boundary\n  across which the processors are sending messages.\n* The parent knows exactly which process is sending it the message (the one that is banked).\n  The OS can establish a trust chain to precisely know what code is running where and what\n  code is making what system calls.\n* It is possible, depending on the hardware implementation, for processors to \"write through\"\n  to other processors including siblings or grandparents in one clock cycle. The intermediate\n  processors just need to be writing to\/from different banked memory spaces and the hardware\n  write through timing needs to be fast enough to support it.\n\n*Accessing Device Space*\n\nBits 9 and 10 of the flags register control source and destination between devices space (1)\nand memory space (0). Note that the lowest 4k block of device space is missing, so the address\nrange from 0x0000 to 0x0FFF always addresses memory space whatever the bits are set to. When\naccessing memory space, the normal banking behavior applies.\n\nDevice space example:\n\n```\n0\/copy\/             4.val 2.imm 2.reg\n# Set 2.reg to 0x0200, this has a 1 in the \"From\" flag position for device space\n212\/swap MSB, LSB\/  2.reg 2.reg\n# Configure the flags register\n0\/copy\/             2.reg 4.reg\n\n# Set 2.reg to point to 0x1000\n0\/copy 16 into 2.reg\/ 4.val 10.imm 2.reg\n212\/swap MSB and LSB\/ 2.reg 2.reg\n# 2.reg now points to 0x1000\n\n# Let's assume 1.reg points to some address &lt;= 0x0FFF\n# Since this address is less than 4k, it always points to memory space\n0\/copy maximum local memory address\/ 2.mem 1.mem\n# We now have the maximum memory address in 1.mem\n\n# You could use this to init the stack pointer by storing it in the register instead\n0\/copy maximum local memory address\/ 2.mem 1.reg\n# Increment the stack pointer so that the first \"push\" decrements to the last available address\n20E\/increment stack pointer\/ 1.reg 1.reg\n\n# Use memory space again\n0\/copy 0 into flags reg, turning off device space\/ 4.val 0.imm 4.reg\/flags reg\/\n```\n\nYou can set the bits for \"from\" and \"to\" independently to control the read and write behavior.\n\nFlags register:\n\n* 0x0000 - read and write to memory space\n* 0x0100 - read from memory space and write to device space\n* 0x0200 - read from device space and write to memory space\n* 0x0300 - read and write to device space\n\n#### Hardware Specification\n\nIt is not necessary for all cores in a processor to have the same resources available. In fact,\nit is expected that they won't. See the section on multi-core structure below. Each processor will\nneed to be queried via device space to see what it has available, how much memory, how many devices\nand so on.\n\n##### Figure 1 - Processor Architecture\n```\n#                             Up to 60k\n#                             ####################\n#                             # 0x1000 .. 0x2FFF #\n#        #############        #------------------#\n#        #           #        # 0x2000 .. 0x3FFF #\n#        # Processor #====||  #------------------#\n#        #   Core    #====||  #        ...       #\n#        #           #    ||  #------------------#\n#        #############    ||  # 0xD000 .. 0xDFFF #\n#        Parent (ID = 0)  ||  #------------------#\n#                         ||  # 0xE000 .. 0xFFFF #\n#        #############    ||  ####################\n#        #           #    ||               || Device Space\n#        # Processor #================================================ 0x0000 (the void)\n#        #   Core    #    ||          ||      Memory Space      ||\n#        #           #    ||   Banked ||                        || Local\n#        #############   ############################  ####################\n#                        # 0x0000 .. 0x0FFF =&gt; 0xNN #  # 0x0000 .. 0x0FFF #\n#                        #--------------------------#  #------------------#\n#        Child 1         # 0x1000 .. 0x2FFF =&gt; 0xNN #  # 0x1000 .. 0x2FFF #\n#  …",
                "title": "docs\/04_System.md",
                "footer": "<https:\/\/github.com\/grokthis\/ucisc|grokthis\/ucisc>",
                "id": 1,
                "title_link": "https:\/\/github.com\/grokthis\/ucisc\/blob\/master\/docs\/04_System.md",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https:\/\/github.com\/grokthis\/ucisc\/blob\/master\/docs\/04_System.md",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6s+e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " Forth was a pretty big influence on my processor design and, in particular, the number of registers and some of the basic philosophy. I didn't know about ColorForth and GreenArrays until very recently, but the talk I watched sparked a critical insight on processor communication that led me to the final architecture: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/grokthis\/ucisc\/blob\/master\/docs\/04_System.md"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U015902ESJC",
        "type": "message",
        "ts": "1590898116.263500",
        "edited": {
            "user": "U015902ESJC",
            "ts": "1590898575.000000"
        },
        "client_msg_id": "2996e435-ba52-4e0d-9c4f-a848a4ec1fce",
        "text": "So... I have a highly favorable opinion of all of those things and have been heavily influenced by them. I'm actually a bit floored that you picked up on those influence just from my brief description. I've got my own twist on the ideas and I am curious to see how they play out. uCISC is minimal in the sense that it only has 2 instructions (copy and ALU) with an ALU opcode to indicate which mathematical op you are doing. It's a bit more expressive and CISC than ColorForth and GreenArrays though.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5446491963e3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-30\/1167794177073_5446491963e3446625b7_72.png",
            "first_name": "Robert",
            "real_name": "Robert Butler",
            "display_name": "Robert Butler",
            "team": "T5TCAFTA9",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590881147.261300",
        "parent_user_id": "U015902ESJC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CQ6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So... I have a highly favorable opinion of all of those things and have been heavily influenced by them. I'm actually a bit floored that you picked up on those influence just from my brief description. I've got my own twist on the ideas and I am curious to see how they play out. uCISC is minimal in the sense that it only has 2 instructions (copy and ALU) with an ALU opcode to indicate which mathematical op you are doing. It's a bit more expressive and CISC than ColorForth and GreenArrays though."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]