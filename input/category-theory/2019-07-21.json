[
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1563718523.000400",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1563719040.000000"
        },
        "client_msg_id": "6ff08db4-e687-492f-852e-f506c578776d",
        "text": "Not sure if this is the correct place to ask, but I find a bundle of few concepts in Computer Science which exhibit dense (homo)morphisms between them but I haven't been able to pick apart how:\n\n• Continuations\n• Lazy Evaluation \/ Non-strictness\n• Actors\n• Closures\n• Algebraic Effects\n• Monads\n• Montague Quantification\n\nDoes anyone know good starting points to figure out how? Starter in category theory, so a methodology on how to properly map them or a good starting point to do this sort of inter-domain mapping would be pretty helpful. I am including some resources I found in the thread.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563718523.000400",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1563813853.002400",
        "reply_users": [
            "UDKTZSD6H",
            "UFS53UWE5"
        ],
        "replies": [
            {
                "user": "UDKTZSD6H",
                "ts": "1563718777.000600"
            },
            {
                "user": "UFS53UWE5",
                "ts": "1563813273.002000"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1563813510.002200"
            },
            {
                "user": "UFS53UWE5",
                "ts": "1563813853.002400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/n5St",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure if this is the correct place to ask, but I find a bundle of few concepts in Computer Science which exhibit dense (homo)morphisms between them but I haven't been able to pick apart how:\n\n• Continuations\n• Lazy Evaluation \/ Non-strictness\n• Actors\n• Closures\n• Algebraic Effects\n• Monads\n• Montague Quantification\n\nDoes anyone know good starting points to figure out how? Starter in category theory, so a methodology on how to properly map them or a good starting point to do this sort of inter-domain mapping would be pretty helpful. I am including some resources I found in the thread."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1563718777.000600",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1563718957.000000"
        },
        "client_msg_id": "3a9f8140-13f8-4f20-8b15-e5fbf9b367ff",
        "text": "Chris Okasaki has found the link between Lazy Evaluation \/ Call by Need and Continuations: <https:\/\/link.springer.com\/article\/10.1007\/BF01019945>\n\nClosures — Actor isomorphism was demonstrated by Guy Steele\/Dan Friedman but was rejected by Hewitt: <https:\/\/twitter.com\/prathyvsh\/status\/1148026444565508098>\n\nAlgebraic Effects — Monad link is from the reading list here: <https:\/\/github.com\/yallop\/effects-bibliography>\n\nAnd found out about the link between Montague Quantification and Monads from Barker's paper here: <https:\/\/en.wikipedia.org\/wiki\/Montague_grammar>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563718523.000400",
        "parent_user_id": "UDKTZSD6H",
        "attachments": [
            {
                "service_name": "SpringerLink",
                "title": "Call-by-need and continuation-passing style",
                "title_link": "https:\/\/link.springer.com\/article\/10.1007\/BF01019945",
                "text": "This paper examines the transformation of call-by-need λ terms into continuation-passing style (CPS). It begins by presenting a simple transformation of call-by-need λ terms into program graphs and a...",
                "fallback": "SpringerLink: Call-by-need and continuation-passing style",
                "thumb_url": "https:\/\/static-content.springer.com\/cover\/journal\/10990\/7\/1.jpg",
                "from_url": "https:\/\/link.springer.com\/article\/10.1007\/BF01019945",
                "thumb_width": 153,
                "thumb_height": 232,
                "service_icon": "https:\/\/link.springer.com\/springerlink-static\/2055516157\/images\/favicon\/app-icon-iphone@3x.png",
                "id": 1,
                "original_url": "https:\/\/link.springer.com\/article\/10.1007\/BF01019945"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t2mvy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Chris Okasaki has found the link between Lazy Evaluation \/ Call by Need and Continuations: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/link.springer.com\/article\/10.1007\/BF01019945"
                            },
                            {
                                "type": "text",
                                "text": "\n\nClosures — Actor isomorphism was demonstrated by Guy Steele\/Dan Friedman but was rejected by Hewitt: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/prathyvsh\/status\/1148026444565508098"
                            },
                            {
                                "type": "text",
                                "text": "\n\nAlgebraic Effects — Monad link is from the reading list here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/yallop\/effects-bibliography"
                            },
                            {
                                "type": "text",
                                "text": "\n\nAnd found out about the link between Montague Quantification and Monads from Barker's paper here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Montague_grammar"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]