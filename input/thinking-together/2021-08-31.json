[
    {
        "user": "U027P92A0N5",
        "type": "message",
        "ts": "1630396931.043400",
        "client_msg_id": "774b9271-984a-4289-aa5f-c02866224151",
        "text": "I know only <https:\/\/mikehadlow.blogspot.com\/2012\/05\/configuration-complexity-clock.html> but that's not an actual study... :sweat_smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d6900487d910",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-07-07\/2254853369060_d6900487d9109f495c79_72.jpg",
            "first_name": "Alexander",
            "real_name": "Alexander Chichigin",
            "display_name": "Alex Chichigin",
            "team": "T5TCAFTA9",
            "name": "sad.ronin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630371359.043100",
        "parent_user_id": "UMVFWPZ36",
        "attachments": [
            {
                "title": "The Configuration Complexity Clock",
                "title_link": "https:\/\/mikehadlow.blogspot.com\/2012\/05\/configuration-complexity-clock.html",
                "text": "When I was a young coder, just starting out in the big scary world of enterprise software, an older, far more experienced chap gave me a ste...",
                "fallback": "The Configuration Complexity Clock",
                "image_url": "https:\/\/lh5.ggpht.com\/-cwTxa5a9p1Q\/T6ew7jgDVMI\/AAAAAAAAAB4\/enYU1SpqQ0E\/w1200-h630-p-k-no-nu\/ConfigurationComplexityClock_thumb%25255B4%25255D.png?imgmax=800",
                "from_url": "https:\/\/mikehadlow.blogspot.com\/2012\/05\/configuration-complexity-clock.html",
                "image_width": 476,
                "image_height": 250,
                "image_bytes": 9664,
                "service_icon": "https:\/\/mikehadlow.blogspot.com\/favicon.ico",
                "service_name": "mikehadlow.blogspot.com",
                "id": 1,
                "original_url": "https:\/\/mikehadlow.blogspot.com\/2012\/05\/configuration-complexity-clock.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yycJR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I know only "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/mikehadlow.blogspot.com\/2012\/05\/configuration-complexity-clock.html"
                            },
                            {
                                "type": "text",
                                "text": " but that's not an actual study... "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1630399048.043700",
        "client_msg_id": "9cf99b49-2b87-49e2-aa5f-ef30e00636af",
        "text": "I've never seen it studied, but I've seen it happen over and over. This is why DSLs should be embedded in real programming languages.\n<https:\/\/twitter.com\/jackrusher\/status\/1348645505811828737>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630371359.043100",
        "parent_user_id": "UMVFWPZ36",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/jackrusher|@jackrusher>: Starting a DSL from scratch rather than embedding it in a real programming language is folly. You should use languages that make embedded DSLs easy! <https:\/\/pbs.twimg.com\/media\/ErdHpSyXEAET5-R.jpg>",
                "ts": 1610377119,
                "author_name": "⸘Jack Rusher‽",
                "author_link": "https:\/\/twitter.com\/jackrusher\/status\/1348645505811828737",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/931507447088500736\/j50JPYN5_normal.jpg",
                "author_subname": "@jackrusher",
                "text": "Starting a DSL from scratch rather than embedding it in a real programming language is folly. You should use languages that make embedded DSLs easy! <https:\/\/pbs.twimg.com\/media\/ErdHpSyXEAET5-R.jpg>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/jackrusher\/status\/1348645505811828737",
                "image_url": "https:\/\/pbs.twimg.com\/media\/ErdHpSyXEAET5-R.jpg",
                "image_width": 1200,
                "image_height": 638,
                "image_bytes": 127947,
                "id": 1,
                "original_url": "https:\/\/twitter.com\/jackrusher\/status\/1348645505811828737",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HqHyl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've never seen it studied, but I've seen it happen over and over. This is why DSLs should be embedded in real programming languages.\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/jackrusher\/status\/1348645505811828737"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1630406422.044000",
        "client_msg_id": "8911c9ba-6f71-4e02-b0ad-d2bddf053b2c",
        "text": "perhaps related to \"<https:\/\/en.wikipedia.org\/wiki\/Semantic_desktop|semantic desktops>\": the idea is that your UI produces metadata that can make it easy for a second application to control it:\n\nApp 1: \"This UI has three buttons A, B, C, etc. These pixels contain the visual representation of it.\"\nApp 2: \"Run App 1, press [the first button\/the button labeled \"A\"], it should result in THING\"\n\nYou would have to come up with some metadata format flexible enough to express your UI elements, perhaps something similar to RDF or some other graph format.\n\nIt doesn't solve the problem of \"testing pixels\", but then you could reduce the problem to \"Metadata XYZ should produce pixels like these\", and maybe you can find a subset of all possible metadata covering good enough cases. As an end user I would just trust the metadata is correct... and maybe generate some \"golden screenshots\" along the way.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630187035.033600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vvr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "perhaps related to \""
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Semantic_desktop",
                                "text": "semantic desktops"
                            },
                            {
                                "type": "text",
                                "text": "\": the idea is that your UI produces metadata that can make it easy for a second application to control it:\n\nApp 1: \"This UI has three buttons A, B, C, etc. These pixels contain the visual representation of it.\"\nApp 2: \"Run App 1, press [the first button\/the button labeled \"A\"], it should result in THING\"\n\nYou would have to come up with some metadata format flexible enough to express your UI elements, perhaps something similar to RDF or some other graph format.\n\nIt doesn't solve the problem of \"testing pixels\", but then you could reduce the problem to \"Metadata XYZ should produce pixels like these\", and maybe you can find a subset of all possible metadata covering good enough cases. As an end user I would just trust the metadata is correct... and maybe generate some \"golden screenshots\" along the way."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]