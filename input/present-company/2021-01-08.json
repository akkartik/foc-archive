[
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1610147826.185700",
        "client_msg_id": "b746f701-368d-4410-b39c-8f766a8ebea1",
        "text": "I don't remember if I played with this before, but wow it is amazing! Great stuff.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1609519757.183300",
        "parent_user_id": "USH01JEDQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ckyH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't remember if I played with this before, but wow it is amazing! Great stuff."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1610160039.187600",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1610210210.000000"
        },
        "client_msg_id": "e7dde12b-fceb-4103-b297-4dfaa7e38345",
        "text": "Anyone have a favourite JS library for working with CRDTs? Or even something a little more high-level, for doing collaborative editing? I control the editor (clients), the data model, and the server. I'd like something that helps handle ~conflict resolution~ concurrent changes to the structure of data. Curious to see what options are available. I'm definitely not looking for something tied to any particular framework (eg: React, Express, etc) — just something that works with vanilla JS.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610160039.187600",
        "reply_count": 21,
        "reply_users_count": 8,
        "latest_reply": "1610463357.236200",
        "reply_users": [
            "UC2A2ARPT",
            "UCGAK10LS",
            "UE1JQM9HQ",
            "UN57U8V53",
            "UHWC9PXBL",
            "UFPPABQ7P",
            "UJ6LDMMN0",
            "U013ZLJARC7"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1610160807.187800"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1610165142.196600"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1610184797.196900"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1610185144.197700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1610209895.198000"
            },
            {
                "user": "UN57U8V53",
                "ts": "1610212503.201700"
            },
            {
                "user": "UN57U8V53",
                "ts": "1610212650.203600"
            },
            {
                "user": "UN57U8V53",
                "ts": "1610212773.204200"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1610212943.204500"
            },
            {
                "user": "UN57U8V53",
                "ts": "1610215294.205700"
            },
            {
                "user": "UN57U8V53",
                "ts": "1610215337.206700"
            },
            {
                "user": "UN57U8V53",
                "ts": "1610215746.208300"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1610225568.209900"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1610229728.213600"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1610229984.217400"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1610289875.217600"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1610306435.219000"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1610307216.219400"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1610308022.219600"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1610383885.221000"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1610463357.236200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Aps",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyone have a favourite JS library for working with CRDTs? Or even something a little more high-level, for doing collaborative editing? I control the editor (clients), the data model, and the server. I'd like something that helps handle "
                            },
                            {
                                "type": "text",
                                "text": "conflict resolution",
                                "style": {
                                    "strike": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " concurrent changes to the structure of data. Curious to see what options are available. I'm definitely not looking for something tied to any particular framework (eg: React, Express, etc) — just something that works with vanilla JS."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1610160807.187800",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1610160883.000000"
        },
        "client_msg_id": "3380884a-172a-4be1-90ef-f108478a1307",
        "text": "Examples of things that might work, since they give you control over the server:\n\n• <https:\/\/github.com\/automerge\/automerge>\n• <https:\/\/github.com\/yjs\/yjs\/>\n• <https:\/\/github.com\/share\/sharedb>\nExamples of things that might not work, since they seem to prefer to use a public or private server that isn't your own:\n\n• <https:\/\/gun.eco>\n• <https:\/\/pusher.com>\n• <https:\/\/firebase.google.com>\nWould love more suggestions if you know of anything.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y\/1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Examples of things that might work, since they give you control over the server:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/automerge\/automerge"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/yjs\/yjs\/"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/share\/sharedb"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nExamples of things that might not work, since they seem to prefer to use a public or private server that isn't your own:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/gun.eco"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/pusher.com"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/firebase.google.com"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nWould love more suggestions if you know of anything."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1610165142.196600",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1610165190.000000"
        },
        "client_msg_id": "143010B3-E391-4544-9A87-452D13BD3574",
        "text": "I’ve never tried to build a conflict resolution system, but one thing I believe to be true is that it’s impossible to automatically merge truly conflicting edits using a generic algorithm whilst preserving intent. If two people change the same piece\/region of data asynchronously, they did so with the intent of giving the data a certain shape\/property\/meaning. To offer “automatic conflict resolution” is to offer “merger of meaning” which is never going to be solvable via a generic algorithm. What is the problem that CRDT libraries claim to be solving? What is an example CRDT that an app has actually used that doesn’t employ a trivial resolution algorithm? You’re always going to need to encode domain-specific knowledge in any non-trivial resolution algorithm, to ensure the resolution captures user intent.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H2j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve never tried to build a conflict resolution system, but one thing I believe to be true is that it’s impossible to automatically merge truly conflicting edits using a generic algorithm whilst preserving intent. If two people change the same piece\/region of data asynchronously, they did so with the intent of giving the data a certain shape\/property\/meaning. To offer “automatic conflict resolution” is to offer “merger of meaning” which is never going to be solvable via a generic algorithm. What is the problem that CRDT libraries claim to be solving? What is an example CRDT that an app has actually used that doesn’t employ a trivial resolution algorithm? You’re always going to need to encode domain-specific knowledge in any non-trivial resolution algorithm, to ensure the resolution captures user intent."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]