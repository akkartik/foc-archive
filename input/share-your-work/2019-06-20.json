[
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1561016698.073300",
        "client_msg_id": "52e27d54-d4d6-42e8-b19f-11058f4c9e9d",
        "text": "Maraca is a simple language, and that is a positive thing. I believe your choice of a non-standard color space is a sub-optimal; HSL where hue is 0..100 is nowhere else used. I suggest you offer RGB 0..255, RGB 0..1 and standard HSL, i agree that hue 0..360 is a weird thing, but it is a double cone model and refers to angle in degrees. But anyone can get used to anything if they use it a lot. In the near future RGB will be 10 or 12 bits per component (already 16 bits per channel in OSX). Don't like that arrays can only have one type in them, that is going to create very awkward situations.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S\/6G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maraca is a simple language, and that is a positive thing. I believe your choice of a non-standard color space is a sub-optimal; HSL where hue is 0..100 is nowhere else used. I suggest you offer RGB 0..255, RGB 0..1 and standard HSL, i agree that hue 0..360 is a weird thing, but it is a double cone model and refers to angle in degrees. But anyone can get used to anything if they use it a lot. In the near future RGB will be 10 or 12 bits per component (already 16 bits per channel in OSX). Don't like that arrays can only have one type in them, that is going to create very awkward situations."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1561017291.073500",
        "client_msg_id": "c2128482-fbc8-4bd8-9886-8d50f6a89169",
        "text": "You might consider a set of built-in functions to allow generation of the abstract concept of color using various color spaces. There is no easy way for someone using Photoshop to give your language a color, and HTML uses #aabbcc or #abc as hex colors. You gotta support the HTML color notation at least just for sanity of your programmers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rRE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You might consider a set of built-in functions to allow generation of the abstract concept of color using various color spaces. There is no easy way for someone using Photoshop to give your language a color, and HTML uses "
                            },
                            {
                                "type": "color",
                                "value": "#aabbcc"
                            },
                            {
                                "type": "text",
                                "text": " or #abc as hex colors. You gotta support the HTML color notation at least just for sanity of your programmers."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1561017322.073700",
        "client_msg_id": "75719b6a-7aaf-4ccf-9d00-f034ad14ef08",
        "text": "Never buck photoshop, that is the #1 art tool on Planet Earth.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zYb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Never buck photoshop, that is the #1 art tool on Planet Earth."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJDQKSSJ0",
        "type": "message",
        "ts": "1561021163.073900",
        "client_msg_id": "736abe27-2c3c-40b0-9a32-b0b9e0f790a0",
        "text": "<@UE6EFEPTQ> thanks :slightly_smiling_face: yes I’ve had a look at your work and can see similarities - do you have language spec\/docs anywhere I can look at, or is it more visual than that?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g17c6442fbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/317c6442fbb28b6db872e7c4116d622c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Jon",
            "real_name": "Jon Whitehead",
            "display_name": "jon",
            "team": "T5TCAFTA9",
            "name": "jsiwhitehead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E9I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": " thanks "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " yes I’ve had a look at your work and can see similarities - do you have language spec\/docs anywhere I can look at, or is it more visual than that?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1561021320.074100",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1561021326.000000"
        },
        "client_msg_id": "c62a2203-df19-4080-a9a8-c7298134471d",
        "text": "Nothing specified currently, just textual and visual examples",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "22V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nothing specified currently, just textual and visual examples"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1561021380.074400",
        "client_msg_id": "4c2d7688-9263-4ac3-876d-0cdb98d0072b",
        "text": "<http:\/\/object.network\/onr.html> has simple examples then links to page of more complex ones",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "attachments": [
            {
                "title": "Object Network Rules | The Object Network",
                "title_link": "http:\/\/object.network\/onr.html",
                "text": "About the Object Network",
                "fallback": "Object Network Rules | The Object Network",
                "from_url": "http:\/\/object.network\/onr.html",
                "service_icon": "http:\/\/object.network\/favicon.ico",
                "service_name": "object.network",
                "id": 1,
                "original_url": "http:\/\/object.network\/onr.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ic2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/object.network\/onr.html"
                            },
                            {
                                "type": "text",
                                "text": " has simple examples then links to page of more complex ones"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1561021416.074700",
        "client_msg_id": "1ca942ef-654f-440c-ad7a-3686523a1609",
        "text": "<http:\/\/object.network\/onex-app.html> has slide deck mockups",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "attachments": [
            {
                "title": "Onex | The Object Network",
                "title_link": "http:\/\/object.network\/onex-app.html",
                "text": "About the Object Network",
                "fallback": "Onex | The Object Network",
                "from_url": "http:\/\/object.network\/onex-app.html",
                "service_icon": "http:\/\/object.network\/favicon.ico",
                "service_name": "object.network",
                "id": 1,
                "original_url": "http:\/\/object.network\/onex-app.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QOW+V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/object.network\/onex-app.html"
                            },
                            {
                                "type": "text",
                                "text": " has slide deck mockups"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1561021461.075000",
        "client_msg_id": "b795431c-65da-42c3-82e9-a988b6ce23a4",
        "text": "and here's another mockup:\n<http:\/\/object.network\/ar-iot-scenarios.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "attachments": [
            {
                "title": "Augmented Reality meets the Internet of Things | The Object Network",
                "title_link": "http:\/\/object.network\/ar-iot-scenarios.html",
                "text": "About the Object Network",
                "fallback": "Augmented Reality meets the Internet of Things | The Object Network",
                "from_url": "http:\/\/object.network\/ar-iot-scenarios.html",
                "service_icon": "http:\/\/object.network\/favicon.ico",
                "service_name": "object.network",
                "id": 1,
                "original_url": "http:\/\/object.network\/ar-iot-scenarios.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ms0R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and here's another mockup:\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/object.network\/ar-iot-scenarios.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJDQKSSJ0",
        "type": "message",
        "ts": "1561021494.075300",
        "client_msg_id": "31423f29-851f-4c80-8936-392692578a01",
        "text": "ah great, I’d seen the app slides page, but hadn’t found the rules one",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g17c6442fbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/317c6442fbb28b6db872e7c4116d622c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Jon",
            "real_name": "Jon Whitehead",
            "display_name": "jon",
            "team": "T5TCAFTA9",
            "name": "jsiwhitehead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F8dW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ah great, I’d seen the app slides page, but hadn’t found the rules one"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1561021523.075500",
        "client_msg_id": "3c869aa0-cd9a-44a6-a6d7-6443a560ff47",
        "text": "it's all WIP",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eb0xl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it's all WIP"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1561021526.075700",
        "client_msg_id": "5fb0155e-22e8-4830-89fb-483b9d87920b",
        "text": ":smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ShfXu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJDQKSSJ0",
        "type": "message",
        "ts": "1561021553.075900",
        "client_msg_id": "ab2bfaff-4c1a-4b84-960e-d6f297943895",
        "text": "haha of course, likewise :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g17c6442fbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/317c6442fbb28b6db872e7c4116d622c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Jon",
            "real_name": "Jon Whitehead",
            "display_name": "jon",
            "team": "T5TCAFTA9",
            "name": "jsiwhitehead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6fZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "haha of course, likewise "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJDQKSSJ0",
        "type": "message",
        "ts": "1561022219.076100",
        "client_msg_id": "e135b48c-5ae8-45f9-9a70-2329acef7b8c",
        "text": "<@UHWC9PXBL> thanks, that’s very kind! hmm so I don’t think there was any super direct inspiration for that part… the closest I can think of is Lua, in that I think I read that it’s variables are themselves implemented as tables, so there’s the sense that all Lua code is happening ‘within’ tables. then I was also inspired by OCaml as my first introduction to a language where everything is an expression (I think), so distinction between data &amp; computation is sort of blurred.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g17c6442fbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/317c6442fbb28b6db872e7c4116d622c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Jon",
            "real_name": "Jon Whitehead",
            "display_name": "jon",
            "team": "T5TCAFTA9",
            "name": "jsiwhitehead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RHy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " thanks, that’s very kind! hmm so I don’t think there was any super direct inspiration for that part… the closest I can think of is Lua, in that I think I read that it’s variables are themselves implemented as tables, so there’s the sense that all Lua code is happening ‘within’ tables. then I was also inspired by OCaml as my first introduction to a language where everything is an expression (I think), so distinction between data & computation is sort of blurred."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJDQKSSJ0",
        "type": "message",
        "ts": "1561022601.076300",
        "client_msg_id": "7ea959bf-6ed1-443f-9629-543b58678ae8",
        "text": "more explicitly though, it evolved out of using React and wanting it to be more denotative - so I had this sense of React components as small chunks of data transformation (ie props =&gt; html) all nested within each other. so my mental model was more interested in the separation of those nested layers, than of data\/computation",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g17c6442fbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/317c6442fbb28b6db872e7c4116d622c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Jon",
            "real_name": "Jon Whitehead",
            "display_name": "jon",
            "team": "T5TCAFTA9",
            "name": "jsiwhitehead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lao",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "more explicitly though, it evolved out of using React and wanting it to be more denotative - so I had this sense of React components as small chunks of data transformation (ie props => html) all nested within each other. so my mental model was more interested in the separation of those nested layers, than of data\/computation"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJDQKSSJ0",
        "type": "message",
        "ts": "1561023176.076500",
        "edited": {
            "user": "UJDQKSSJ0",
            "ts": "1561023517.000000"
        },
        "client_msg_id": "106bdedd-7b37-441d-8490-10fbaddb61ce",
        "text": "<@UEQ6M68H0> Thanks, detailed feedback much appreciated! That all makes sense re using HCL colors. The Maraca-Render framework is pretty early stage, so far just exploring how to make CSS more sane\/intuitive really, and in ways that play to the strengths of the core Maraca language. Also broadly aiming at ‘design for non-designers’ similar to ‘code for non-coders’, so HCL means for example that it’s easy to make a button lighten on hover, to choose a red that’s similar to my green, etc. At the same time I’m not actively trying to distance everyone who uses photoshop of course, so I’ll think about how to include more standard syntax also :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g17c6442fbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/317c6442fbb28b6db872e7c4116d622c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Jon",
            "real_name": "Jon Whitehead",
            "display_name": "jon",
            "team": "T5TCAFTA9",
            "name": "jsiwhitehead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ODa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " Thanks, detailed feedback much appreciated! That all makes sense re using HCL colors. The Maraca-Render framework is pretty early stage, so far just exploring how to make CSS more sane\/intuitive really, and in ways that play to the strengths of the core Maraca language. Also broadly aiming at ‘design for non-designers’ similar to ‘code for non-coders’, so HCL means for example that it’s easy to make a button lighten on hover, to choose a red that’s similar to my green, etc. At the same time I’m not actively trying to distance everyone who uses photoshop of course, so I’ll think about how to include more standard syntax also "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJDQKSSJ0",
        "type": "message",
        "ts": "1561023439.076700",
        "client_msg_id": "ddaa9f07-f9cf-493f-aba3-74545bf38f1e",
        "text": "Also you mentioned about arrays only having one type in them - can you explain what you mean by that sorry? The Lua-like thing of arrays &amp; dicts being the same? Also, any pointers in terms of what situations you think it will make awkward would be great, so I can think about them",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g17c6442fbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/317c6442fbb28b6db872e7c4116d622c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Jon",
            "real_name": "Jon Whitehead",
            "display_name": "jon",
            "team": "T5TCAFTA9",
            "name": "jsiwhitehead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZF6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also you mentioned about arrays only having one type in them - can you explain what you mean by that sorry? The Lua-like thing of arrays & dicts being the same? Also, any pointers in terms of what situations you think it will make awkward would be great, so I can think about them"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1561091191.077600",
        "edited": {
            "user": "UFV8P4472",
            "ts": "1561091273.000000"
        },
        "client_msg_id": "a2d34714-ec55-4f15-a057-bca11056bd38",
        "text": "Wow, I’m fascinated by this too. I’m still in the early stages of playing with it, but random bits of early feedback:\n1. I love the site and how friendly it is. I have some minor issues with bits of the documentation but mostly it’s excellent.\n2. The main problems I hit with the site app are (a) that the links aren’t proper links, which means I can’t right-click and open in a new tab, and (b) the “Try” interpreter isn’t sandboxed from the wider app, which means that when I crash that interpreter, the whole page becomes unresponsive. (The crash: entering `#data.[v=&gt;&gt;v?]A` produces a `TypeError`)\n\nNo feedback on the language until I’ve played with it a bit more!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6cn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wow, I’m fascinated by this too. I’m still in the early stages of playing with it, but random bits of early feedback:\n1. I love the site and how friendly it is. I have some minor issues with bits of the documentation but mostly it’s excellent.\n2. The main problems I hit with the site app are (a) that the links aren’t proper links, which means I can’t right-click and open in a new tab, and (b) the “Try” interpreter isn’t sandboxed from the wider app, which means that when I crash that interpreter, the whole page becomes unresponsive. (The crash: entering "
                            },
                            {
                                "type": "text",
                                "text": "#data.[v=>>v?]A",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " produces a "
                            },
                            {
                                "type": "text",
                                "text": "TypeError",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ")\n\nNo feedback on the language until I’ve played with it a bit more!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1561094859.078300",
        "client_msg_id": "b84d5a60-cab2-46a4-9c63-1d59caa10941",
        "text": "OK, I’ve played with a bit more. It took me ages to work out how to make a list that grows with the value of each tick, but I somehow hit on `[a:#tick, b:[1], a? | [:: b?, :: a?] -&gt; b?]`",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/z7k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OK, I’ve played with a bit more. It took me ages to work out how to make a list that grows with the value of each tick, but I somehow hit on "
                            },
                            {
                                "type": "text",
                                "text": "[a:#tick, b:[1], a? | [:: b?, :: a?] -> b?]",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJDQKSSJ0",
        "type": "message",
        "ts": "1561098282.078500",
        "client_msg_id": "1379a447-879d-4e26-8131-557952623251",
        "text": "<@UFV8P4472>  thanks, I'm glad you like it! 1. yeah I encouraged myself to spend a good time on the docs by dogfooding Maraca to build them. would love to know which bits you found less clear so I can work on them. 2. a) yes that's one I'm aware of, basically I'm trying to have as few ui primatives as possible, and use the strengths of Maraca as much as possible, so links are just boxes with click events that push to the #url stream. to make the renderer understand this would involve exposing info to it about the code that generates a component, which is an interesting thought I haven't really explored yet! b) ah good point, as you've probably noticed, I haven't really done anything with error handling yet, mostly tried to just make stuff return nil instead to avoid crashes like that. would love to get errors isolated so Maraca can keep running around broken parts.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g17c6442fbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/317c6442fbb28b6db872e7c4116d622c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Jon",
            "real_name": "Jon Whitehead",
            "display_name": "jon",
            "team": "T5TCAFTA9",
            "name": "jsiwhitehead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jw\/d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFV8P4472"
                            },
                            {
                                "type": "text",
                                "text": "  thanks, I'm glad you like it! 1. yeah I encouraged myself to spend a good time on the docs by dogfooding Maraca to build them. would love to know which bits you found less clear so I can work on them. 2. a) yes that's one I'm aware of, basically I'm trying to have as few ui primatives as possible, and use the strengths of Maraca as much as possible, so links are just boxes with click events that push to the #url stream. to make the renderer understand this would involve exposing info to it about the code that generates a component, which is an interesting thought I haven't really explored yet! b) ah good point, as you've probably noticed, I haven't really done anything with error handling yet, mostly tried to just make stuff return nil instead to avoid crashes like that. would love to get errors isolated so Maraca can keep running around broken parts."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJDQKSSJ0",
        "type": "message",
        "ts": "1561098592.078700",
        "client_msg_id": "1e7dd5d1-8c21-4488-908f-3c33c41da539",
        "text": "For your example there, in case it helps clarify anything, you don't really need to store #tick as a variable, you can just write it directly in both places, and you also don't need to unpack the a\/#tick element in the list as it's just a value (you can think of :: as similar to ... in js).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g17c6442fbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/317c6442fbb28b6db872e7c4116d622c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Jon",
            "real_name": "Jon Whitehead",
            "display_name": "jon",
            "team": "T5TCAFTA9",
            "name": "jsiwhitehead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Gurc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For your example there, in case it helps clarify anything, you don't really need to store #tick as a variable, you can just write it directly in both places, and you also don't need to unpack the a\/#tick element in the list as it's just a value (you can think of :: as similar to ... in js)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFV8P4472"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJDQKSSJ0",
        "type": "message",
        "ts": "1561098663.078900",
        "edited": {
            "user": "UJDQKSSJ0",
            "ts": "1561098675.000000"
        },
        "client_msg_id": "3c3ec2bb-7bdf-42e7-a087-cb8779c76f4c",
        "text": "I.e. `[b: [], #tick | [:: b?, #tick] -&gt; b?]`",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g17c6442fbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/317c6442fbb28b6db872e7c4116d622c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Jon",
            "real_name": "Jon Whitehead",
            "display_name": "jon",
            "team": "T5TCAFTA9",
            "name": "jsiwhitehead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yjRj6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I.e. "
                            },
                            {
                                "type": "text",
                                "text": "[b: [], #tick | [:: b?, #tick] -> b?]",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    }
]