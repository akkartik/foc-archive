[
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1700521784.468789",
        "edited": {
            "user": "UFV8P4472",
            "ts": "1700522009.000000"
        },
        "client_msg_id": "873223b8-4a40-4153-a151-306f12e4795f",
        "text": "<@UC2A2ARPT> I've never used Max\/MSP but I've heard about it for years, usually in the same breath as PureData (though that seems to be less popular now). There's a lovely big animation of UI on <https:\/\/cycling74.com\/products\/max|the Max front page> which has so much stuff that I don't see in most VPLs, and at this point I just need to pause for a `warning that I'm about to do a deeply uninformed yet loudly opinionated dive` based on the lightest of first impressions...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472",
        "attachments": [
            {
                "from_url": "https:\/\/cycling74.com\/products\/max",
                "image_url": "https:\/\/media.graphassets.com\/OJzM32FRVeUIRiFXVnm8",
                "image_width": 800,
                "image_height": 477,
                "image_bytes": 24012,
                "service_icon": "https:\/\/cycling74.com\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/cycling74.com\/products\/max",
                "fallback": "What is Max? | Cycling '74",
                "text": "Max is an infinitely flexible space to create your own interactive software",
                "title": "What is Max? | Cycling '74",
                "title_link": "https:\/\/cycling74.com\/products\/max",
                "service_name": "cycling74.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LCdSf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I've never used Max\/MSP but I've heard about it for years, usually in the same breath as PureData (though that seems to be less popular now). There's a lovely big animation of UI on "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/cycling74.com\/products\/max",
                                "text": "the Max front page"
                            },
                            {
                                "type": "text",
                                "text": " which has so much stuff that I don't see in most VPLs, and at this point I just need to pause for a "
                            },
                            {
                                "type": "text",
                                "text": "warning that I'm about to do a deeply uninformed yet loudly opinionated dive",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " based on the lightest of first impressions..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1700521834.533729",
        "client_msg_id": "a0d3cd42-2d65-4a66-bc0b-636519dfad4d",
        "text": "â€¢ Most obviously: *visually distinctive widgets in the node graph*. They're gorgeous and useful and _aren't_ just Text But In A Box, which is what most VPLs seem to be made of.\n    a. Even better, those widgets go beyond most VPLs by not just describing what the code _should_ do but _showing what it is actually doing_ during the running of the program. And even better, they give custom controls for manipulation during perfor... sorry, I mean: execution!\n    b. And, OK, that live performance thing is much more for artists, so let's stick with the visualisation part: I'm kind of obsessed with the debugger experience every time I take on a programming tool. Being able to see the data flowing through code, with appropriate visualisation depending on the component, would be bloody amazing. I want more of that. *Which VPLs are good at that?* (serious question, I'd love to find some)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zqiOJ",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Most obviously: "
                                    },
                                    {
                                        "type": "text",
                                        "text": "visually distinctive widgets in the node graph",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ". They're gorgeous and useful and "
                                    },
                                    {
                                        "type": "text",
                                        "text": "aren't",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " just Text But In A Box, which is what most VPLs seem to be made of."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Even better, those widgets go beyond most VPLs by not just describing what the code "
                                    },
                                    {
                                        "type": "text",
                                        "text": "should",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " do but "
                                    },
                                    {
                                        "type": "text",
                                        "text": "showing what it is actually doing ",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "during the running of the program. And even better, they give custom controls for manipulation during perfor... sorry, I mean: execution!"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "And, OK, that live performance thing is much more for artists, so let's stick with the visualisation part: I'm kind of obsessed with the debugger experience every time I take on a programming tool. Being able to see the data flowing through code, with appropriate visualisation depending on the component, would be bloody amazing. I want more of that. "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Which VPLs are good at that? ",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "(serious question, I'd love to find some)"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 1,
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1700521876.132869",
        "client_msg_id": "b93cb4a7-8abe-4fae-8d2d-1367ca716e33",
        "text": "And then the expand\/contract things happen and oh well, there's all the Text But In A Box nodes, life without them was nice while it lasted.\n\nBut to give them credit, the text there seems to be doing the right job: *evaluating expressions that are but easier to type than draw,* as <@U03U0SCU5LH> just mentioned. So the balance between widget types makes sense. I just wish there was more visual distinctiveness there.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HE8\/+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And then the expand\/contract things happen and oh well, there's all the Text But In A Box nodes, life without them was nice while it lasted.\n\nBut to give them credit, the text there seems to be doing the right job: "
                            },
                            {
                                "type": "text",
                                "text": "evaluating expressions that are but easier to type than draw,",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " as "
                            },
                            {
                                "type": "user",
                                "user_id": "U03U0SCU5LH"
                            },
                            {
                                "type": "text",
                                "text": " just mentioned. So the balance between widget types makes sense. I just wish there was more visual distinctiveness there."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1700521997.137929",
        "edited": {
            "user": "UFV8P4472",
            "ts": "1700522107.000000"
        },
        "client_msg_id": "a448f600-49ca-4828-ae0e-36a53f5fa6bb",
        "text": "The worst part is that I see all these connecting lines of different textures, and I assume they're unidirectional but I have no clue what those directions are or what order this is all happening in. Also, the layout seems to be completely arbitrary: I assume that what I'm looking at is one person's setup, and they already understand the flow. It feels like a good demonstration of the difference between code that's entirely owned and maintained by one person, and code for a team. (Similar to the point <@UGWUJUZHT> made about the difference between commanding machines and communicating to humans.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+LggV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The worst part is that I see all these connecting lines of different textures, and I assume they're unidirectional but I have no clue what those directions are or what order this is all happening in. Also, the layout seems to be completely arbitrary: I assume that what I'm looking at is one person's setup, and they already understand the flow. It feels like a good demonstration of the difference between code that's entirely owned and maintained by one person, and code for a team. (Similar to the point "
                            },
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " made about the difference between commanding machines and communicating to humans.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1700524412.788389",
        "client_msg_id": "3082017c-7a00-4654-b608-f643f66458b4",
        "text": "<@UGWUJUZHT> Thanks so much for the amazing collection of points in <https:\/\/guitarvydas.github.io\/2023\/11\/19\/The-Meaning-of-Layout.html|your blog post>. There's so much here! Ultimately I feel like we agree on these points (but please correct me):\n1. VPLs as a concept have incredible potential\n2. We have yet to find tools good enough for programming in them\n3. Architects should be able to express structures that, when zoomed out, are readable and understandable (... to visual programmers with some experience of the patterns, at least)\n    a. As you zoom out on a system, the view should maintain a low total number of different objects you need to understand. Sub-structures should appear as a single component\/device, hiding their complexity. (I'm thinking of the Eames's famous \"<https:\/\/www.youtube.com\/watch?v=0fKBhvDjuy0|Powers of Ten>\" film here.)\n4. We don't yet have decent theory or language for how to achieve #3, beyond some basic arrangement ideas",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L8T2y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " Thanks so much for the amazing collection of points in "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/guitarvydas.github.io\/2023\/11\/19\/The-Meaning-of-Layout.html",
                                "text": "your blog post"
                            },
                            {
                                "type": "text",
                                "text": ". There's so much here! Ultimately I feel like we agree on these points (but please correct me):\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "VPLs as a concept have incredible potential"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "We have yet to find tools good enough for programming in them"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Architects should be able to express structures that, when zoomed out, are readable and understandable (... to visual programmers with some experience of the patterns, at least)"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "As you zoom out on a system, the view should maintain a low total number of different objects you need to understand. Sub-structures should appear as a single component\/device, hiding their complexity. (I'm thinking of the Eames's famous \""
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/www.youtube.com\/watch?v=0fKBhvDjuy0",
                                        "text": "Powers of Ten"
                                    },
                                    {
                                        "type": "text",
                                        "text": "\" film here.)"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "We don't yet have decent theory or language for how to achieve #3, beyond some basic arrangement ideas"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "offset": 3,
                        "border": 0
                    }
                ]
            }
        ]
    }
]