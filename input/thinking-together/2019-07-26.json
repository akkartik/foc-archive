[
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1564128058.328800",
        "client_msg_id": "84d345da-e8b4-483a-b1dd-ea33ad979550",
        "text": "I'm struggling to fit my own language into this framework, and it should explicitly name Excel formulae somewhere, as one of the most popular languages.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564006215.294100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9fF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm struggling to fit my own language into this framework, and it should explicitly name Excel formulae somewhere, as one of the most popular languages."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1564128069.329000",
        "client_msg_id": "9f482f0a-9973-4788-8971-ef041b1f925e",
        "text": "Is the author on this Slack? Maybe let's invite them?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564006215.294100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t=n6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is the author on this Slack? Maybe let's invite them?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1564128597.329200",
        "client_msg_id": "2c85b6bf-9af8-40ec-af29-a27ad1f6027d",
        "text": "<https:\/\/twitter.com\/duncancragg\/status\/1154664187685195776>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564006215.294100",
        "parent_user_id": "UJTHWNH2T",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/duncancragg|@duncancragg>: <https:\/\/twitter.com\/PeterLodewijk|@PeterLodewijk> we were discussing your <http:\/\/hiperc.buffalostate.edu\/courses\/ACM612-F15\/uploads\/ACM612\/VanRoy-Programming.pdf> on the \"Future of Coding\" Slack, and I thought you might like to join the Slack? <https:\/\/futureofcoding.org\/slack-readme>",
                "ts": 1564128369,
                "author_name": "Duncan Cragg",
                "author_link": "https:\/\/twitter.com\/duncancragg\/status\/1154664187685195776",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/613355356622876672\/0vhPNFgp_normal.jpg",
                "author_subname": "@duncancragg",
                "text": "<https:\/\/twitter.com\/PeterLodewijk|@PeterLodewijk> we were discussing your <http:\/\/hiperc.buffalostate.edu\/courses\/ACM612-F15\/uploads\/ACM612\/VanRoy-Programming.pdf> on the \"Future of Coding\" Slack, and I thought you might like to join the Slack? <https:\/\/futureofcoding.org\/slack-readme>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/duncancragg\/status\/1154664187685195776",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/duncancragg\/status\/1154664187685195776",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UOz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/duncancragg\/status\/1154664187685195776"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1564141421.330200",
        "client_msg_id": "307bd9ac-c838-459b-8ddb-a7de8ab8eb65",
        "text": "Thanks for this interesting discussion! :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563898361.264700",
        "parent_user_id": "UHDQ62M4P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y5M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for this interesting discussion! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UHDQ62M4P",
                    "UAVCC2X70"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1564148325.330600",
        "client_msg_id": "840936e6-23b1-43e7-a593-eba852bd1021",
        "text": "I don’t know if it this is entirely an answer, but it seems like the direction front-end development is going is to have a UI design team whose product is a component library. <http:\/\/bradfrost.com\/blog\/post\/frontend-design-react-and-a-bridge-over-the-great-divide\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "attachments": [
            {
                "service_name": "Brad Frost",
                "title": "Frontend Design, React, and a Bridge over the Great Divide",
                "title_link": "http:\/\/bradfrost.com\/blog\/post\/frontend-design-react-and-a-bridge-over-the-great-divide\/",
                "text": "Frontend designers create the HTML, CSS, and presentational JavaScript code that powers web products' user interfaces. I see frontend design as helpful mortar that bridges the gap between design and development. Of course \"frontend designer\" may or may not be the right title for it. Some others t",
                "fallback": "Brad Frost: Frontend Design, React, and a Bridge over the Great Divide",
                "image_url": "http:\/\/bradfrost.com\/wp-content\/uploads\/2019\/07\/Screenshot-2019-07-16-23.06.43.png",
                "ts": 1563382220,
                "from_url": "http:\/\/bradfrost.com\/blog\/post\/frontend-design-react-and-a-bridge-over-the-great-divide\/",
                "image_width": 484,
                "image_height": 250,
                "image_bytes": 83721,
                "service_icon": "http:\/\/bradfrost.com\/favicon.ico",
                "id": 1,
                "original_url": "http:\/\/bradfrost.com\/blog\/post\/frontend-design-react-and-a-bridge-over-the-great-divide\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Upt5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don’t know if it this is entirely an answer, but it seems like the direction front-end development is going is to have a UI design team whose product is a component library. "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/bradfrost.com\/blog\/post\/frontend-design-react-and-a-bridge-over-the-great-divide\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UHWC9PXBL",
                    "UHZNB3HRP"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1564154656.331300",
        "client_msg_id": "95e685fe-beab-4df9-8209-b5b9e15ca6f0",
        "text": "<@UKJGU23KP> Thanks for sharing, this seems like a different approach to the problem: Instead of doing a handoff (then translation), actually have design teams employ their own developers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CsEl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UKJGU23KP"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for sharing, this seems like a different approach to the problem: Instead of doing a handoff (then translation), actually have design teams employ their own developers."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1564155494.331700",
        "edited": {
            "user": "UE0ETTCG7",
            "ts": "1564155551.000000"
        },
        "client_msg_id": "b003f980-7af4-4603-839f-6729a91732eb",
        "text": "<@UC2A2ARPT> That's a wonderful summary of how most creative software gets made:\n\n&gt; We often talk about making tools that allow people to use a computer \"without learning to code\". But the existing successful cases of that, to me, appear to be the cases where programmers made tools that required non-programmers to learn a freshly-invented skill — a skill that ends up being less foreign than programming, a skill designed to be similar to their existing skillset, but an all new skill nonetheless.\n\nWhat's so interesting about the \"designer to developer handoff\" problem is that for some reason it has been extraordinarily resistant to creating a new specialized tool that can output something useable. E.g., I believe all the examples you listed \"character modeler, rigger, texture artist, pose-to-pose animator, particle\/effects artist\" output something that doesn't then need to be translated by a developer? I can't figure out what's unique about software interfaces that makes it different from these other use case. (Cheeky blog post from on this topic Webflow's CEO <https:\/\/medium.com\/@callmevlad\/a-cheeky-guide-to-creative-tools-e5e3388c4614>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fuexc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " That's a wonderful summary of how most creative software gets made:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We often talk about making tools that allow people to use a computer \"without learning to code\". But the existing successful cases of that, to me, appear to be the cases where programmers made tools that required non-programmers to learn a freshly-invented skill — a skill that ends up being less foreign than programming, a skill designed to be similar to their existing skillset, but an all new skill nonetheless."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nWhat's so interesting about the \"designer to developer handoff\" problem is that for some reason it has been extraordinarily resistant to creating a new specialized tool that can output something useable. E.g., I believe all the examples you listed \"character modeler, rigger, texture artist, pose-to-pose animator, particle\/effects artist\" output something that doesn't then need to be translated by a developer? I can't figure out what's unique about software interfaces that makes it different from these other use case. (Cheeky blog post from on this topic Webflow's CEO "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/medium.com\/@callmevlad\/a-cheeky-guide-to-creative-tools-e5e3388c4614"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1564155603.332200",
        "client_msg_id": "f83371fd-6205-4856-8c0e-02099813aaf8",
        "text": "I think, counter intuitively, the largest step to make towards bridging this barrier is to fix:\n\n1. Performance bottlenecks in front end development\n2. Re think browser ui from the ground up\n3. Unified query language across the entire stack.\n\nImprove those issues and you have room to build an ecosystem where we need less specialization for webdevelopment.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gC2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think, counter intuitively, the largest step to make towards bridging this barrier is to fix:\n\n1. Performance bottlenecks in front end development\n2. Re think browser ui from the ground up\n3. Unified query language across the entire stack.\n\nImprove those issues and you have room to build an ecosystem where we need less specialization for webdevelopment."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UHZNB3HRP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564156936.332400",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1564157267.000000"
        },
        "client_msg_id": "bb9060a1-7c15-4400-a17b-e89c0143eccc",
        "text": "<@UE0ETTCG7>\n&gt; I believe all the examples you listed output something that doesn't then need to be translated by a developer?\n\nYes, that's the whole reason those tools were invented. Prior to those tools existing, and those skills\/roles being created, programmers and artists needed to collaborate intimately on every piece of the art. As these tools\/skills were created (one at a time, and not very good at first), that need for total attention from both sides was lessened gradually.\n\nThere was a time, when memory and other performance constraints were very strict, that video game artists would frequently create works that were too rich and detailed to run efficiently, and programmers would need to either collaborate with them to find art production processes that produced a more efficient result, or (sometimes) edit the output from those tools themselves. Eventually these perf-friendly practices became common, and the hardware improved, and the amount of constant, intimate interaction between programmers and artists tapered off.\n\nI think web designers and developers are going through a similar progression. It used to be common that a \"web designer\" would produce a PSD with slices — a format that was basically opaque to the technology of the web. Now, web designers are fluent in SVG and CSS. With tools like Greensock and Bodymovin, web designers are able to produce animations that can run in the browser without much, or any, direct help from a programmer.\n\nRight now, we're going through a phase where we're collectively putting a lot of stock in the idea of reusable components, and we're going through the fits and starts of making tools that designers can use to build components. We had the template language phase, and the Polymer\/X-tags phase, and the React-style components phase — each one less and less programmer centric and more amenable to designers. We're getting ever closer to something that it'd be worth building GUI around, which (I think) is the tipping point. If there's a successor to React Components in this lineage, I would not be at all surprised to see it become the standard that tools like WebFlow embrace, at which point we'll be in \"3d tools in the mid-late 1990s\" territory — good enough that artists no longer need to understand what's happening under the hood, but not quite to the point that programmers are free from having to worry about what the artists end up making. But we'll get there.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SBt4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE0ETTCG7"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I believe all the examples you listed output something that doesn't then need to be translated by a developer?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nYes, that's the whole reason those tools were invented. Prior to those tools existing, and those skills\/roles being created, programmers and artists needed to collaborate intimately on every piece of the art. As these tools\/skills were created (one at a time, and not very good at first), that need for total attention from both sides was lessened gradually.\n\nThere was a time, when memory and other performance constraints were very strict, that video game artists would frequently create works that were too rich and detailed to run efficiently, and programmers would need to either collaborate with them to find art production processes that produced a more efficient result, or (sometimes) edit the output from those tools themselves. Eventually these perf-friendly practices became common, and the hardware improved, and the amount of constant, intimate interaction between programmers and artists tapered off.\n\nI think web designers and developers are going through a similar progression. It used to be common that a \"web designer\" would produce a PSD with slices — a format that was basically opaque to the technology of the web. Now, web designers are fluent in SVG and CSS. With tools like Greensock and Bodymovin, web designers are able to produce animations that can run in the browser without much, or any, direct help from a programmer.\n\nRight now, we're going through a phase where we're collectively putting a lot of stock in the idea of reusable components, and we're going through the fits and starts of making tools that designers can use to build components. We had the template language phase, and the Polymer\/X-tags phase, and the React-style components phase — each one less and less programmer centric and more amenable to designers. We're getting ever closer to something that it'd be worth building GUI around, which (I think) is the tipping point. If there's a successor to React Components in this lineage, I would not be at all surprised to see it become the standard that tools like WebFlow embrace, at which point we'll be in \"3d tools in the mid-late 1990s\" territory — good enough that artists no longer need to understand what's happening under the hood, but not quite to the point that programmers are free from having to worry about what the artists end up making. But we'll get there."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1564158726.333500",
        "client_msg_id": "3f6f96d5-b8ed-44e2-9327-67d96a7e6a53",
        "text": "<@UC2A2ARPT> Thanks for the great response. Any thoughts on why 3D tools were able to solve this problem in the 1990's but user interfaces have struggled for so long? E.g., Interface Builder being from 1988 is 30 years of working on this problem.\n\nI know you're hinting at it, that a lot of groundwork needed to be laid first. But that still leaves the question: Why do interfaces in particular require so much groundwork? E.g., we didn't need as much groundwork for 3D modeling, bitmap\/vector editors , DAWs, NLEs, or spreadsheets. What makes interfaces uniquely difficult?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t=2W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for the great response. Any thoughts on why 3D tools were able to solve this problem in the 1990's but user interfaces have struggled for so long? E.g., Interface Builder being from 1988 is 30 years of working on this problem.\n\nI know you're hinting at it, that a lot of groundwork needed to be laid first. But that still leaves the question: Why do interfaces in particular require so much groundwork? E.g., we didn't need as much groundwork for 3D modeling, bitmap\/vector editors , DAWs, NLEs, or spreadsheets. What makes interfaces uniquely difficult?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1564158780.333700",
        "client_msg_id": "2b8b1aa5-a285-4d85-b1a4-a365849ffe96",
        "text": "PostScript (1982) to Illustrator (1987) was five years for example.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ThA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "PostScript (1982) to Illustrator (1987) was five years for example."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564160135.333900",
        "client_msg_id": "e13cd9b2-9f87-4a9b-b8fc-cd38bd562a6b",
        "text": "If I had to guess, it'd be that it'd be impossible to have the modern video game or film industry without these tools. Those industries are huge, and the role these tools play is also huge. 3D graphics is fiendishly difficult, especially the realtime stuff. The tools were an absolute necessity.\n\nDemonstrably, we've been able to have the modern software industry without similar tools. GUIs are tricky, but not that tricky by comparison. We've been able to make do with not-great tools, tolerating a bit of bugginess here and there, a bit of lost productivity spent doing things the slow way.\n\nA programmer can make a bad-but-functional GUI on their own. A web designer can learn a bit of JQuery or Flash or CSS or what have you and cobble something together that mostly works. Typical programmers can't make 3d art that's more sophisticated than a stick figure (without tools that do most of the work), and typical artists have exactly as much affinity for linear algebra (without tools that do most of the work).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k2w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If I had to guess, it'd be that it'd be impossible to have the modern video game or film industry without these tools. Those industries are huge, and the role these tools play is also huge. 3D graphics is fiendishly difficult, especially the realtime stuff. The tools were an absolute necessity.\n\nDemonstrably, we've been able to have the modern software industry without similar tools. GUIs are tricky, but not that tricky by comparison. We've been able to make do with not-great tools, tolerating a bit of bugginess here and there, a bit of lost productivity spent doing things the slow way.\n\nA programmer can make a bad-but-functional GUI on their own. A web designer can learn a bit of JQuery or Flash or CSS or what have you and cobble something together that mostly works. Typical programmers can't make 3d art that's more sophisticated than a stick figure (without tools that do most of the work), and typical artists have exactly as much affinity for linear algebra (without tools that do most of the work)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564160288.334100",
        "client_msg_id": "6ee0574e-3e8c-4961-8ad5-ad6a6f353e9f",
        "text": "In other words — if GUIs were _harder_, we'd have invested earlier in better tooling. But they aren't, so we've scraped by.\n\nSee also: text-based versus visual programming; all our tools based on terminals and unix and files rather than ASTs; the state of video editing tools (which haven't needed to advance much, so they haven't) versus compositing tools (which have, and have).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A2v4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In other words — if GUIs were "
                            },
                            {
                                "type": "text",
                                "text": "harder",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", we'd have invested earlier in better tooling. But they aren't, so we've scraped by.\n\nSee also: text-based versus visual programming; all our tools based on terminals and unix and files rather than ASTs; the state of video editing tools (which haven't needed to advance much, so they haven't) versus compositing tools (which have, and have)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564160468.334300",
        "client_msg_id": "e30331aa-5965-48f2-a420-e2bb8bdd83f7",
        "text": "If web designers had to learn the equivalent of linear algebra, and the formulae for shading models, and how stencil buffers work, and the limitations of spherical harmonics, and (100 other things just to get a nicely lit 3d model to show up on the screen) in order to make a layout, there'd be better tools.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QZ4u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If web designers had to learn the equivalent of linear algebra, and the formulae for shading models, and how stencil buffers work, and the limitations of spherical harmonics, and (100 other things just to get a nicely lit 3d model to show up on the screen) in order to make a layout, there'd be better tools."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1564163326.334800",
        "edited": {
            "user": "UE0ETTCG7",
            "ts": "1564163366.000000"
        },
        "client_msg_id": "2ef84b4a-4062-4fba-b690-6dba9629de8d",
        "text": "Nice, great argument. I'd push back on one thing: Designers do actually have great tools today. Photoshop, Sketch, Illustrator, etc... are all wonderfully powerful tools in their own ways. Your point still stands but I'd tweak it a bit: What just isn't that hard is for developers to implement a designer's user interface. That's just really not that difficult, so why not have the developer just do it?\n\nOne area in user interface design that I can say from experience is an order of magnitude more difficult than implementing a static UI design is implementing custom animations created by designers. So if this hypothesis is true, tools that can output usable animations that don't require developer translation should improve quickly.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UY1hD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice, great argument. I'd push back on one thing: Designers do actually have great tools today. Photoshop, Sketch, Illustrator, etc... are all wonderfully powerful tools in their own ways. Your point still stands but I'd tweak it a bit: What just isn't that hard is for developers to implement a designer's user interface. That's just really not that difficult, so why not have the developer just do it?\n\nOne area in user interface design that I can say from experience is an order of magnitude more difficult than implementing a static UI design is implementing custom animations created by designers. So if this hypothesis is true, tools that can output usable animations that don't require developer translation should improve quickly."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1564163590.335600",
        "client_msg_id": "f03a01f0-7344-4927-9d81-045aee3ba1f7",
        "text": "(I guess that also points to designers always just throwing their static UIs over the wall to developers to implement, because I'm not sure implementing the static UI part is enough of a pain point to change anything?)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xGg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(I guess that also points to designers always just throwing their static UIs over the wall to developers to implement, because I'm not sure implementing the static UI part is enough of a pain point to change anything?)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564165085.337700",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1564165210.000000"
        },
        "client_msg_id": "cf359b69-0aae-4dba-9252-7a4d1c4da565",
        "text": "In my experience, the things it takes for a good modern UI animation toolkit (whether it's declarative like CSS transitions \/ animations, or imperative like Greensock or Velocity.js) include:\n• Spring easing (things animate with apparent mass)\n• Interruption (the user does something that triggers an animation, then cancels it — the animated elements need to gracefully return to the correct position, not just snap back)\n• Physics\/dynamics-based interpolation (things have acceleration and velocity)\n• Sequencing\/staggering (things happen one after another)\n\n(This is in addition to the slightly longer list of things that are _essential_, like the ability to set durations).\n\nThe Webkit team tried (and so far failed) to get spring easing added to CSS, but progress on a more general solution has been slow (<https:\/\/github.com\/w3c\/csswg-drafts\/issues\/229>) — and I haven't seen any mention of interruption or dynamics.\n\nI believe that once we have those things in the platform, we'll be able to make simpler versions of tools like Bodymovin or more powerful versions of tools like TheatreJS (<https:\/\/www.theatrejs.com>), and at that point it'll be barely more difficult to add GUI animation than it is to add drop shadows with CSS.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DLL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my experience, the things it takes for a good modern UI animation toolkit (whether it's declarative like CSS transitions \/ animations, or imperative like Greensock or Velocity.js) include:\n• Spring easing (things animate with apparent mass)\n• Interruption (the user does something that triggers an animation, then cancels it — the animated elements need to gracefully return to the correct position, not just snap back)\n• Physics\/dynamics-based interpolation (things have acceleration and velocity)\n• Sequencing\/staggering (things happen one after another)\n\n(This is in addition to the slightly longer list of things that are "
                            },
                            {
                                "type": "text",
                                "text": "essential",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", like the ability to set durations).\n\nThe Webkit team tried (and so far failed) to get spring easing added to CSS, but progress on a more general solution has been slow ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/w3c\/csswg-drafts\/issues\/229"
                            },
                            {
                                "type": "text",
                                "text": ") — and I haven't seen any mention of interruption or dynamics.\n\nI believe that once we have those things in the platform, we'll be able to make simpler versions of tools like Bodymovin or more powerful versions of tools like TheatreJS ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.theatrejs.com"
                            },
                            {
                                "type": "text",
                                "text": "), and at that point it'll be barely more difficult to add GUI animation than it is to add drop shadows with CSS."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1564169344.338500",
        "edited": {
            "user": "UKJGU23KP",
            "ts": "1564169428.000000"
        },
        "client_msg_id": "9fec923d-7b87-496e-bc1e-fc299a8f5bf5",
        "text": "<@UE0ETTCG7> I don’t think it’s entirely different, because it’s bringing development into the UI team, but removing a lot of the extraneous complexity of previous forms of full-stack development. So the components end up very modular, which is what lets designers tackle it.\n\nI think if you remove enough extraneous complexity, the distinction between code and domain knowledge becomes very thin. There’s a quip out there whose origin I forget about “the pseudocode formerly known as traditional mathematics”.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JBi05",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE0ETTCG7"
                            },
                            {
                                "type": "text",
                                "text": " I don’t think it’s entirely different, because it’s bringing development into the UI team, but removing a lot of the extraneous complexity of previous forms of full-stack development. So the components end up very modular, which is what lets designers tackle it.\n\nI think if you remove enough extraneous complexity, the distinction between code and domain knowledge becomes very thin. There’s a quip out there whose origin I forget about “the pseudocode formerly known as traditional mathematics”."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1564178937.346400",
        "client_msg_id": "7a877b86-ea01-4b6a-b0f2-916dbe8e2a8d",
        "text": "<@UE6EFEPTQ> good idea",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564006215.294100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uzB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": " good idea"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKQT95T1V",
        "type": "message",
        "ts": "1564206260.346700",
        "client_msg_id": "aabd1197-c8e9-446b-9098-d4f8d18d57b6",
        "text": "i think that's true in the sense that it's more complex than when there is no rebinding, it's still significantly less complex than allowing mutation that is visible through other copies of the reference",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5602bab02fb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c5602bab02fb00f0c9a052ee6c220513.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Alan Johnson",
            "display_name": "Alan Johnson",
            "team": "T5TCAFTA9",
            "name": "alan135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZZHE+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i think that's true in the sense that it's more complex than when there is no rebinding, it's still significantly less complex than allowing mutation that is visible through other copies of the reference"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]