[
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1751789284.330879",
        "client_msg_id": "eb2d88d0-4b54-40b6-bdb6-82f8828e8c88",
        "text": "If you care to spend time further expanding on this, I need more hand-holding. There are 4 shapes - circles, squares, triangles, plus signs. There are 3 kinds of lines - solid, dashed, fat. There are several colours - orange, blue, green, red. And there's black text. My knee-jerk reaction is that each of these has a separate meaning, which I don't grok yet.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751439819.320439",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CtWqt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you care to spend time further expanding on this, I need more hand-holding. There are 4 shapes - circles, squares, triangles, plus signs. There are 3 kinds of lines - solid, dashed, fat. There are several colours - orange, blue, green, red. And there's black text. My knee-jerk reaction is that each of these has a separate meaning, which I don't grok yet."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1751789789.721919",
        "client_msg_id": "d30f6ee9-0961-4127-b01b-0df9ac19488f",
        "text": "I am so glad you said that! The main point of this visualization is to provoke the reader into noticing a knowledge gap of the programming model. Those cells are clickable, so without that interaction part you can't close that gap autonomously.\nThe interactive notebook is now published here <https:\/\/observablehq.com\/@tomlarkworthy\/cell-map>\nStill, it would take a fair amount of detective work to solve it still. The programming model is written <https:\/\/observablehq.com\/documentation\/cells\/observable-javascript|here>. \"Cells can be views\" and \"Cells can be mutables\" are relevant to the symbols. The square ones are imports, you can see the cell colors change when bridging via a square. The circles are simple dataflow cells which is probably the first thing you would implement if designing a dataflow language, they are just functions (actually they can also be generators, probably that should be reflected in the symbology too as they act quite different).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751439819.320439",
        "parent_user_id": "U02E4DAQGSZ",
        "attachments": [
            {
                "image_url": "https:\/\/static.observableusercontent.com\/thumbnail\/5e475620a745171b4bbf582635569301819d41cadcc2a3aeaef2029869ed7790.jpg",
                "image_width": 640,
                "image_height": 400,
                "image_bytes": 27506,
                "from_url": "https:\/\/observablehq.com\/@tomlarkworthy\/cell-map",
                "service_icon": "https:\/\/static.observablehq.com\/favicon-512.0667824687f99c942a02e06e2db1a060911da0bf3606671676a255b1cf97b4fe.png",
                "ts": 1751786410,
                "id": 1,
                "original_url": "https:\/\/observablehq.com\/@tomlarkworthy\/cell-map",
                "fallback": "Observable: cellMap",
                "text": "computes the mapping of reactive variables to higher level notebook cells, grouped by module cellMap cellMap function You can call it with zero args to default to the current runtime, or pass in a subset of variables to extract the cell structure from just those. Visualizations visualize the cell ordering testing low-level variables in this module Utilities",
                "title": "cellMap",
                "title_link": "https:\/\/observablehq.com\/@tomlarkworthy\/cell-map",
                "service_name": "Observable"
            },
            {
                "from_url": "https:\/\/observablehq.com\/documentation\/cells\/observable-javascript",
                "service_icon": "https:\/\/static.observablehq.com\/favicon-512.0667824687f99c942a02e06e2db1a060911da0bf3606671676a255b1cf97b4fe.png",
                "id": 2,
                "original_url": "https:\/\/observablehq.com\/documentation\/cells\/observable-javascript",
                "fallback": "Observable JavaScript | Observable documentation",
                "text": "Everything you need to build the best data apps.",
                "title": "Observable JavaScript | Observable documentation",
                "title_link": "https:\/\/observablehq.com\/documentation\/cells\/observable-javascript",
                "service_name": "observablehq.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DOhHG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am so glad you said that! The main point of this visualization is to provoke the reader into noticing a knowledge gap of the programming model. Those cells are clickable, so without that interaction part you can't close that gap autonomously.\nThe interactive notebook is now published here "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/observablehq.com\/@tomlarkworthy\/cell-map"
                            },
                            {
                                "type": "text",
                                "text": "\nStill, it would take a fair amount of detective work to solve it still. The programming model is written "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/observablehq.com\/documentation\/cells\/observable-javascript",
                                "text": "here"
                            },
                            {
                                "type": "text",
                                "text": ". \"Cells can be views\" and \"Cells can be mutables\" are relevant to the symbols. The square ones are imports, you can see the cell colors change when bridging via a square. The circles are simple dataflow cells which is probably the first thing you would implement if designing a dataflow language, they are just functions (actually they can also be generators, probably that should be reflected in the symbology too as they act quite different)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1751789824.286699",
        "client_msg_id": "a31e7d6c-6562-4d36-be05-7df6e7b9abdd",
        "text": "As that work is finished now I put it in <#CCL5VVBAN|share-your-work> <https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1751789288245649>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751439819.320439",
        "parent_user_id": "U02E4DAQGSZ",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1751789288245649",
                "ts": "1751789288.245649",
                "author_id": "U02E4DAQGSZ",
                "channel_id": "CCL5VVBAN",
                "channel_team": "T5TCAFTA9",
                "is_msg_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T5TCAFTA9",
                        "channel": "CCL5VVBAN",
                        "ts": "1751789288.245649",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "SfvE1",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "Finished my live, navigable and interactive visualization of the Observable runtime graph. Works on both Observable and Lopecode.\n\n"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "rich_text_list",
                                            "elements": [
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "live: if you add\/remove a cell the visualisation update."
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "navigable: if you click a cell you are taken to the cell source (on observable this opens a new tab and scrolls to the cell)"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "interactive: as you scroll though birds eye view the detailed visualization expands the dependancies of the focused cell. You can click to pin the current cell."
                                                        }
                                                    ]
                                                }
                                            ],
                                            "style": "bullet",
                                            "indent": 0,
                                            "border": 0
                                        },
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "\nThe overall point of this notebook is to provoke the reader into understanding the programming model and ask questions like \"what is a viewof\" when they try to understand the dependancy graph. Its also useful for authors to find stray dependancies and plan refactors on complex notebook networks.\n"
                                                },
                                                {
                                                    "type": "link",
                                                    "url": "https:\/\/observablehq.com\/@tomlarkworthy\/cell-map"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1751789288245649",
                "fallback": "[July 6th, 2025 1:08 AM] tom.larkworthy: Finished my live, navigable and interactive visualization of the Observable runtime graph. Works on both Observable and Lopecode.\n\n• live: if you add\/remove a cell the visualisation update.\n• navigable: if you click a cell you are taken to the cell source (on observable this opens a new tab and scrolls to the cell)\n• interactive: as you scroll though birds eye view the detailed visualization expands the dependancies of the focused cell. You can click to pin the current cell.\nThe overall point of this notebook is to provoke the reader into understanding the programming model and ask questions like \"what is a viewof\" when they try to understand the dependancy graph. Its also useful for authors to find stray dependancies and plan refactors on complex notebook networks.\n<https:\/\/observablehq.com\/@tomlarkworthy\/cell-map>",
                "text": "Finished my live, navigable and interactive visualization of the Observable runtime graph. Works on both Observable and Lopecode.\n\n• live: if you add\/remove a cell the visualisation update.\n• navigable: if you click a cell you are taken to the cell source (on observable this opens a new tab and scrolls to the cell)\n• interactive: as you scroll though birds eye view the detailed visualization expands the dependancies of the focused cell. You can click to pin the current cell.\nThe overall point of this notebook is to provoke the reader into understanding the programming model and ask questions like \"what is a viewof\" when they try to understand the dependancy graph. Its also useful for authors to find stray dependancies and plan refactors on complex notebook networks.\n<https:\/\/observablehq.com\/@tomlarkworthy\/cell-map>",
                "author_name": "Tom Larkworthy",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/U02E4DAQGSZ",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_48.gif",
                "author_subname": "Tom Larkworthy",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6KHc\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As that work is finished now I put it in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CCL5VVBAN"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1751789288245649"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]