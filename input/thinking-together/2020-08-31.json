[
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1598857632.029800",
        "client_msg_id": "e9b2e797-71b1-4dfe-b82f-2f3442ce4fae",
        "text": "In Glamorous Toolkit, examples play a key role. We went so far as to replace classic tests with examples (a test that returns an object). This leads to a nicer way to compose examples, but most importantly, examples offer concrete objects you can program against. As in our environment every object can present itself through custom views and as these views can also be weaved into larger narratives, the examples also offer a nice infrastructure for documentation purposes. Here is a short article about them:\n<https:\/\/medium.com\/feenk\/an-example-of-example-driven-development-4dea0d995920>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598810841.008500",
        "parent_user_id": "U017GNJM021",
        "attachments": [
            {
                "service_name": "Medium",
                "title": "An example of example-driven development",
                "title_link": "https:\/\/medium.com\/feenk\/an-example-of-example-driven-development-4dea0d995920",
                "text": "This is an example of example-driven development using Glamorous Toolkit. The concrete code snippets are written in Pharo.",
                "fallback": "Medium: An example of example-driven development",
                "image_url": "https:\/\/miro.medium.com\/max\/1090\/1*sbjNSx4eorA9inCcMVgthg.png",
                "fields": [
                    {
                        "title": "Reading time",
                        "value": "6 min read",
                        "short": true
                    }
                ],
                "ts": 1550163638,
                "from_url": "https:\/\/medium.com\/feenk\/an-example-of-example-driven-development-4dea0d995920",
                "image_width": 216,
                "image_height": 250,
                "image_bytes": 156853,
                "service_icon": "https:\/\/cdn-images-1.medium.com\/fit\/c\/152\/152\/1*8I-HPL0bfoIzGied-dzOvA.png",
                "id": 1,
                "original_url": "https:\/\/medium.com\/feenk\/an-example-of-example-driven-development-4dea0d995920"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "au+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In Glamorous Toolkit, examples play a key role. We went so far as to replace classic tests with examples (a test that returns an object). This leads to a nicer way to compose examples, but most importantly, examples offer concrete objects you can program against. As in our environment every object can present itself through custom views and as these views can also be weaved into larger narratives, the examples also offer a nice infrastructure for documentation purposes. Here is a short article about them:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/medium.com\/feenk\/an-example-of-example-driven-development-4dea0d995920"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart_eyes",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U01A1C2K8MP",
                    "U013ZLJARC7"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1598858460.030100",
        "client_msg_id": "18125efd-9674-4ffc-8302-5fca65b75f7c",
        "text": "<@U013ZLJARC7> Same for me. My biggest hope for a worthy successor to Emacs is <https:\/\/gtoolkit.com\/>. It addresses what is for me the biggest limitation of Emacs: the lack of graphics.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598649949.189300",
        "parent_user_id": "US370TRJA",
        "attachments": [
            {
                "title": "Glamorous Toolkit",
                "title_link": "https:\/\/gtoolkit.com\/",
                "text": "Glamorous Toolkit is the moldable development environment",
                "fallback": "Glamorous Toolkit",
                "from_url": "https:\/\/gtoolkit.com\/",
                "service_icon": "https:\/\/gtoolkit.com\/favicon.ico",
                "service_name": "gtoolkit.com",
                "id": 1,
                "original_url": "https:\/\/gtoolkit.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/sD39",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " Same for me. My biggest hope for a worthy successor to Emacs is "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/gtoolkit.com\/"
                            },
                            {
                                "type": "text",
                                "text": ". It addresses what is for me the biggest limitation of Emacs: the lack of graphics."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UDQBTJ211",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1598875068.030500",
        "client_msg_id": "4f03a2aa-de8b-4965-baf0-37aa60c196a2",
        "text": "<@UJBAJNFLK> I also really like Glamorous Toolkit. It's always good to see any system that embraces the old Smalltalk\/D-Lisp philosophy of interaction and malleability! :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598649949.189300",
        "parent_user_id": "US370TRJA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pC9x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " I also really like Glamorous Toolkit. It's always good to see any system that embraces the old Smalltalk\/D-Lisp philosophy of interaction and malleability! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1598878413.030700",
        "client_msg_id": "8853572d-025a-4759-8d7b-5132ce4a3089",
        "text": "(i.e., it's not a \"problem\" to be \"solved\", it's what most \"normals\" think of first)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598534303.161500",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DmH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(i.e., it's not a \"problem\" to be \"solved\", it's what most \"normals\" think of first)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1598892105.031200",
        "client_msg_id": "d61c2dfe-b508-4d72-939b-50f97ab58532",
        "text": "If you try to create a fully declarative, reactive semantics, I think you eventually run into the bind\/commit distinction no matter what you do. Fundamentally, it’s a question of how the lifetime of an assertion is controlled. Commit is saying the lifetime of this assertion is unconditional, whereas bind is conditioned on the other information this assertion is derived from. You’ll want both, but it’s awkward trying to make them play together.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598684481.204900",
        "parent_user_id": "UBRKVHMCL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nPE=q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you try to create a fully declarative, reactive semantics, I think you eventually run into the bind\/commit distinction no matter what you do. Fundamentally, it’s a question of how the lifetime of an assertion is controlled. Commit is saying the lifetime of this assertion is unconditional, whereas bind is conditioned on the other information this assertion is derived from. You’ll want both, but it’s awkward trying to make them play together."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1598892209.031400",
        "client_msg_id": "02c5484f-613f-4317-a86f-e6c6236e1edd",
        "text": "Not being able to come up with something better is a big part of what convinced me that we needed to find something in the middle of the declarative\/imperative spectrum, rather than constantly looking at the ends.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598684481.204900",
        "parent_user_id": "UBRKVHMCL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NRsc3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not being able to come up with something better is a big part of what convinced me that we needed to find something in the middle of the declarative\/imperative spectrum, rather than constantly looking at the ends."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1598892378.031600",
        "client_msg_id": "8a1f2bab-b069-4757-96c9-85cf20405bd5",
        "text": "programming with just rules or just procedures sucks, but being able to freely mix them both together is pretty magical :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598684481.204900",
        "parent_user_id": "UBRKVHMCL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4IQsy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "programming with just rules or just procedures sucks, but being able to freely mix them both together is pretty magical "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1598892742.031800",
        "client_msg_id": "632d2246-f6b4-4195-a26c-07c1a3d1eaf1",
        "text": "our implementation of bind\/commit led to a lot of complexity and we thought that we had hidden the implications of the different timelines from people, but as <@UA14TGLTC> said, it turned out there were cases where trying to get the right sequence of things to happen exposed you to that complexity and it was unequivocally worse than what you would normally do. Eve was much better than conventional languages on some axes, but on the axis of expressing process-like things it was significantly worse.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598684481.204900",
        "parent_user_id": "UBRKVHMCL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=VFG4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "our implementation of bind\/commit led to a lot of complexity and we thought that we had hidden the implications of the different timelines from people, but as "
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " said, it turned out there were cases where trying to get the right sequence of things to happen exposed you to that complexity and it was unequivocally worse than what you would normally do. Eve was much better than conventional languages on some axes, but on the axis of expressing process-like things it was significantly worse."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1598892847.032000",
        "client_msg_id": "c83ca256-f794-4d0e-9ef2-062415c985be",
        "text": "Part of that comes from bind\/commit naturally wanting to happen at different “times,” the other part came from blocks being islands that weren’t obviously tied together in any meaningful way. Discovering the forest was pretty hard to do just by looking at the trees.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598684481.204900",
        "parent_user_id": "UBRKVHMCL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3idCJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Part of that comes from bind\/commit naturally wanting to happen at different “times,” the other part came from blocks being islands that weren’t obviously tied together in any meaningful way. Discovering the forest was pretty hard to do just by looking at the trees."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1598892968.032200",
        "client_msg_id": "cd1ab628-a783-40ab-913b-f3e6fe445818",
        "text": "If you don’t mind exposing users to the actual semantics\/complexity of time, I would look at statelog as a better approach to the problem",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598684481.204900",
        "parent_user_id": "UBRKVHMCL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jgoe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you don’t mind exposing users to the actual semantics\/complexity of time, I would look at statelog as a better approach to the problem"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1598893081.032400",
        "client_msg_id": "6fc34fe0-7fed-4cd1-872a-32fbb8a3b839",
        "text": "It makes time fully explicit, though I don’t know that it really makes it that much better when compared to something that can just express a procedure cleanly",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598684481.204900",
        "parent_user_id": "UBRKVHMCL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2hQ9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It makes time fully explicit, though I don’t know that it really makes it that much better when compared to something that can just express a procedure cleanly"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1598893429.032600",
        "client_msg_id": "3f32d1db-401c-4312-ae2a-e5e8c90515cf",
        "text": "in any case, I’d read the <https:\/\/www2.eecs.berkeley.edu\/Pubs\/TechRpts\/2009\/EECS-2009-173.html|dedalus paper> and the <http:\/\/www2.informatik.uni-freiburg.de\/~dbis\/Publications\/98\/moc98.pdf|statelog paper> if you want to really dig into this stuff",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598684481.204900",
        "parent_user_id": "UBRKVHMCL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YxZ8e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "in any case, I’d read the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www2.eecs.berkeley.edu\/Pubs\/TechRpts\/2009\/EECS-2009-173.html",
                                "text": "dedalus paper"
                            },
                            {
                                "type": "text",
                                "text": " and the "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www2.informatik.uni-freiburg.de\/~dbis\/Publications\/98\/moc98.pdf",
                                "text": "statelog paper"
                            },
                            {
                                "type": "text",
                                "text": " if you want to really dig into this stuff"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1598896531.043300",
        "client_msg_id": "3fba6a01-0e48-4e92-b22a-931295d213e4",
        "text": "The problem arises when you think of consistency and how the programs change and read state.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598534303.161500",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d8r=H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The problem arises when you think of consistency and how the programs change and read state."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1598901873.043600",
        "client_msg_id": "067773dd-5ad2-44e5-954c-838b7369966c",
        "text": "Can you give an example of the problem of consistency under read\/write, in an end-user application?\nAs techies we are all aware of the issues with parallel access to replicated databases, but that's about optimisation for speed. What about an end-user-focused programming environment where all that is hidden?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598534303.161500",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y\/Vke",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can you give an example of the problem of consistency under read\/write, in an end-user application?\nAs techies we are all aware of the issues with parallel access to replicated databases, but that's about optimisation for speed. What about an end-user-focused programming environment where all that is hidden?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1598904577.043800",
        "client_msg_id": "48f7e900-fd2b-4630-8a06-5aa0302eff80",
        "text": "Anything involving collaborative editing of the same document, especially if some collaborators are sporadically online. Possibly a cheap answer, but I'd argue it really just emphasizes the need to build around state.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598534303.161500",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BHq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anything involving collaborative editing of the same document, especially if some collaborators are sporadically online. Possibly a cheap answer, but I'd argue it really just emphasizes the need to build around state."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1598905932.044000",
        "client_msg_id": "8643a432-b0f4-4214-be2a-d2b2b3128799",
        "text": "<@U016VUZGUUQ> :smile: you landed on the exact example I was thinking of as one I hoped no-one would pick, which happens to be the one my own solution to end-user state management tends to punt on! :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598534303.161500",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dEIHo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " you landed on the exact example I was thinking of as one I hoped no-one would pick, which happens to be the one my own solution to end-user state management tends to punt on! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "joy",
                "users": [
                    "U016VUZGUUQ",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1598907017.049900",
        "edited": {
            "user": "UJNJQD2AC",
            "ts": "1598907140.000000"
        },
        "client_msg_id": "fc14ccfa-e2a3-4b3f-94e1-00f5f4d192cb",
        "text": "To what extent do our natural biases leek into the models (data structures, algorithms) we use. E.g is it possible that a tree data structure is more appealing to both users and developers because it mirrors a hierarchy (everything has a parent\/cause) vs a graph which has a loop (which came first the chicken or the egg) which is considered less intuitive.\n\nIt seems a relevant design choice to consider not only the universal truthiness of something but also the cognitive load it takes to use it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598907017.049900",
        "reply_count": 35,
        "reply_users_count": 8,
        "latest_reply": "1599226864.105800",
        "reply_users": [
            "UUQ2EQW21",
            "UHWC9PXBL",
            "U01A0KANUUU",
            "U8A5MS6R1",
            "U013RRN6Y6N",
            "U013ZLJARC7",
            "UJNJQD2AC",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UUQ2EQW21",
                "ts": "1598907677.054400"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1598908801.054700"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598911621.055000"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598911799.055200"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1598966907.061400"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598967216.061800"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598967291.062000"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1598976987.063700"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598977128.064000"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598977232.064200"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598977275.064400"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598977311.064700"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598977407.065000"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1598977414.065200"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1598977705.066500"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598977746.067700"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1598977773.068500"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598977786.069100"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598977806.069900"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598977827.070500"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598977853.070800"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598977911.071000"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598977944.071300"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1598978519.071600"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1598978934.072300"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598979176.073300"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598979195.073500"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1598979196.073700"
            },
            {
                "user": "U013RRN6Y6N",
                "ts": "1598989040.074600"
            },
            {
                "user": "U013RRN6Y6N",
                "ts": "1598989122.074800"
            },
            {
                "user": "U013RRN6Y6N",
                "ts": "1598989401.075300"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1599033869.086500"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1599034947.086700"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1599087126.093300"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1599226864.105800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mgRs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To what extent do our natural biases leek into the models (data structures, algorithms) we use. E.g is it possible that a tree data structure is more appealing to both users and developers because it mirrors a hierarchy (everything has a parent\/cause) vs a graph which has a loop (which came first the chicken or the egg) which is considered less intuitive.\n\nIt seems a relevant design choice to consider not only the universal truthiness of something but also the cognitive load it takes to use it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1598907337.050300",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1598907469.000000"
        },
        "client_msg_id": "7501d6c0-1339-4cc8-8f42-a9f23dbfe286",
        "text": ".. I guess my point is that, for most end-user applications, state doesn't cause issues even when building a distributed system of any sort, but I'm happy to be thrown counter-examples, alongside collaborative editing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598534303.161500",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1F1uD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": ".. I guess my point is that, for most end-user applications, state doesn't cause issues even when building a distributed system of any sort, but I'm happy to be thrown counter-examples, alongside collaborative editing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1598907677.054400",
        "client_msg_id": "22CB0B45-0B73-4514-BF46-303AB43B379A",
        "text": "For me it usually comes down to cognitive load. If I can get away with a vector I’ll use one, then a map, then a tree, then a graph.... I also believe in iterating towards a goal in an agile fashion and not over engineering a solution. But yeah, I don’t lightly use a tree or a graph, because complexity == time",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598907017.049900",
        "parent_user_id": "UJNJQD2AC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vzl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For me it usually comes down to cognitive load. If I can get away with a vector I’ll use one, then a map, then a tree, then a graph.... I also believe in iterating towards a goal in an agile fashion and not over engineering a solution. But yeah, I don’t lightly use a tree or a graph, because complexity == time"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1598908801.054700",
        "client_msg_id": "9e26dc54-83a5-4e83-9d49-59bf0e4e8859",
        "text": "I suspect that material biases wrt existing libraries matter a lot more—I’d prefer a graph for most of my applications, but it’s much easier to write hierarchies. Since relational databases depend on slow joins to emulate graph queries, we don’t see a lot of many-linked relationships on apps and pages—which I think limits peoples’ imaginations (part of why Roam is taking off IMO)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598907017.049900",
        "parent_user_id": "UJNJQD2AC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UIJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suspect that material biases wrt existing libraries matter a lot more—I’d prefer a graph for most of my applications, but it’s much easier to write hierarchies. Since relational databases depend on slow joins to emulate graph queries, we don’t see a lot of many-linked relationships on apps and pages—which I think limits peoples’ imaginations (part of why Roam is taking off IMO)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01A0KANUUU",
        "type": "message",
        "ts": "1598911621.055000",
        "client_msg_id": "9b242eef-20ff-480c-b6b4-85a07c5b9204",
        "text": "This is where it would be good to get takes from psychology, anthropology, and sociology. Hierarchies make sense to people for a lot of reasons, and some of these are deeply cultural (think: organization of societies).\n\nOn the other hand, people are generally (though we all know some exceptions) good with spaces. Perhaps what in CS is called a \"graph\" structure is better though of as a \"map\" or \"the layout of rooms in a giant house\" -- it's very easy for us to understand in such a case how you can leave a room but somehow take a path that leads back to that room over and over, etc",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gca7b3cd16bf",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ca7b3cd16bf67a61acaf224e2219929c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "Eric Gade",
            "display_name": "Eric Gade",
            "team": "T5TCAFTA9",
            "name": "eric.gade",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598907017.049900",
        "parent_user_id": "UJNJQD2AC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kn9VE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is where it would be good to get takes from psychology, anthropology, and sociology. Hierarchies make sense to people for a lot of reasons, and some of these are deeply cultural (think: organization of societies).\n\nOn the other hand, people are generally (though we all know some exceptions) good with spaces. Perhaps what in CS is called a \"graph\" structure is better though of as a \"map\" or \"the layout of rooms in a giant house\" -- it's very easy for us to understand in such a case how you can leave a room but somehow take a path that leads back to that room over and over, etc"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01A0KANUUU",
        "type": "message",
        "ts": "1598911799.055200",
        "client_msg_id": "8465a905-b606-4574-ad10-4b3fcc6ee549",
        "text": "<@UHWC9PXBL> There are two things about the world of graph structures \/ databases I still don't understand. One is the failure of OODBs to catch on (something like Gemstone inherently uses graphs), and the other is the whole RDF\/Semantic Web community and any datastores they use. You rarely see these things outside of niche or academic contexts, and I don't understand why. Any insight?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gca7b3cd16bf",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ca7b3cd16bf67a61acaf224e2219929c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "Eric Gade",
            "display_name": "Eric Gade",
            "team": "T5TCAFTA9",
            "name": "eric.gade",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598907017.049900",
        "parent_user_id": "UJNJQD2AC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jUK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " There are two things about the world of graph structures \/ databases I still don't understand. One is the failure of OODBs to catch on (something like Gemstone inherently uses graphs), and the other is the whole RDF\/Semantic Web community and any datastores they use. You rarely see these things outside of niche or academic contexts, and I don't understand why. Any insight?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U8A5MS6R1",
                    "UA14TGLTC",
                    "UAJ9DV971"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1598941740.056400",
        "client_msg_id": "e8ababa8-b7d9-4d3f-9f26-1e8cd185ea8f",
        "text": "In case the Statelog link doesn't work <http:\/\/users.sdsc.edu\/~ludaesch\/Paper\/moc98.pdf>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598684481.204900",
        "parent_user_id": "UBRKVHMCL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VrdIv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In case the Statelog link doesn't work "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/users.sdsc.edu\/~ludaesch\/Paper\/moc98.pdf"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]