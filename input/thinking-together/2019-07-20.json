[
    {
        "user": "UF6RLAL7J",
        "type": "message",
        "ts": "1563609089.000300",
        "client_msg_id": "fea289fd-f7df-4618-be6c-e673c48bf6e9",
        "text": "thank you!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfede74ebb05",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fede74ebb05f68b74971bfc332857f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "",
            "real_name": "Szymon Kaliski",
            "display_name": "szymon_k",
            "team": "T5TCAFTA9",
            "name": "hi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563532415.327900",
        "parent_user_id": "UF6RLAL7J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lVw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "thank you!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563646806.006100",
        "client_msg_id": "3d691af4-fad5-4281-9315-6f0e79b28214",
        "text": "How much do you all value conciseness, generally? There's that observation that bugs\/SLOC seems to be constant across languages. I know it's possible to go crazy with the conciseness: code golfing, point-free style insanity, etc, etc. But, putting that aside, idiomatic code does seem to vary a lot in verbosity.\n\nI've noticed that FRP seems to be verbose. So, just now I wanted to test out my impression for frontend. I looked at TodoMVC examples for CycleJS, Reflex, Turbine, among others. I know it's not an elaborate example but generally these are coded to show idiomatic usage so it's decent. I removed comments and measured lines and characters without whitespace. Of all the ones I looked at, these 3 FRP ones are the most verbose by characters. All three are at least 3 times longer than the Svelte example. (Svelte and Cycle aren't typed. Turbine and Reflex are.) (The Svelte example isn't codegolfing or doing anything funky). Anyone have thoughts on this? How much should we value types or purity\/referential transparency over verbosity?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "reply_count": 59,
        "reply_users_count": 10,
        "latest_reply": "1564040754.297800",
        "reply_users": [
            "U5TCAFTD3",
            "UL3CJ7YKC",
            "UEBG0NPDK",
            "UJTHWNH2T",
            "UHWC9PXBL",
            "UJN1TAYEQ",
            "UCUSW7WVD",
            "UKJGU23KP",
            "UEQ6M68H0",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "U5TCAFTD3",
                "ts": "1563653616.007100"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1563655419.007400"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563655433.007700"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563656765.008000"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563656817.008200"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563656831.008400"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563656996.008600"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563657080.008800"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1563657302.009000"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563657344.009300"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563657427.009500"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563657520.009700"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563657539.009900"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563657649.010100"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563657953.010300"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1563659874.013100"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1563660276.019100"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563660455.019300"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1563660532.019700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1563660575.020700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1563660615.022000"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563660634.022700"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563660664.022900"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563661060.023200"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563661079.023400"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563661369.023600"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563661398.023800"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563661540.024000"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563661588.024200"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563661645.024400"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563661716.024600"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563661726.024800"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563661765.025000"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563661772.025200"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563661793.025400"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563661937.025800"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563662055.026000"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563662074.026300"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563662102.026500"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563662250.026700"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1563662267.027100"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1563662319.028700"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563666479.040700"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563666695.040900"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563666772.041200"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563667827.042200"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1563667863.042400"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563672960.044700"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563672962.044900"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1563673269.045100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1563682526.050900"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1563718410.052400"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1563737752.056900"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563741502.059900"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563741724.060100"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563742106.060300"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1563742498.060500"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1563948207.284200"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1564040754.297800"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1564043712.000019",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i9Af",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How much do you all value conciseness, generally? There's that observation that bugs\/SLOC seems to be constant across languages. I know it's possible to go crazy with the conciseness: code golfing, point-free style insanity, etc, etc. But, putting that aside, idiomatic code does seem to vary a lot in verbosity.\n\nI've noticed that FRP seems to be verbose. So, just now I wanted to test out my impression for frontend. I looked at TodoMVC examples for CycleJS, Reflex, Turbine, among others. I know it's not an elaborate example but generally these are coded to show idiomatic usage so it's decent. I removed comments and measured lines and characters without whitespace. Of all the ones I looked at, these 3 FRP ones are the most verbose by characters. All three are at least 3 times longer than the Svelte example. (Svelte and Cycle aren't typed. Turbine and Reflex are.) (The Svelte example isn't codegolfing or doing anything funky). Anyone have thoughts on this? How much should we value types or purity\/referential transparency over verbosity?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1563648124.006200",
        "client_msg_id": "cfe95a14-e30c-4215-93d1-85e5b3efc644",
        "text": "Woooof that thread is painful to read. So much context-ignoring _we tried that already and it didn't work_.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563573194.330800",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fwsg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Woooof that thread is painful to read. So much context-ignoring "
                            },
                            {
                                "type": "text",
                                "text": "we tried that already and it didn't work",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJVEPCVT6",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1563649150.006400",
        "client_msg_id": "d5bc6cb3-31d3-4f49-bcff-5eb2b712610c",
        "text": "The comment I quoted above had caveats carefully stated, I thought. I think we can all agree which side the burden of proof is on?\n\nSwitching people over to a whole new modality is an immense undertaking with several chicken and egg problems. We have to lay the groundwork for an environment that can scale to large programs before the large programs exist. It has to allow people using it to collaborate with people who are still using text. It has to be robust to incomplete or outright wrong metadata. Seems reasonable that people who don't care about building it are skeptical of the enterprise.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563573194.330800",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C4w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The comment I quoted above had caveats carefully stated, I thought. I think we can all agree which side the burden of proof is on?\n\nSwitching people over to a whole new modality is an immense undertaking with several chicken and egg problems. We have to lay the groundwork for an environment that can scale to large programs before the large programs exist. It has to allow people using it to collaborate with people who are still using text. It has to be robust to incomplete or outright wrong metadata. Seems reasonable that people who don't care about building it are skeptical of the enterprise."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJVEPCVT6",
        "type": "message",
        "ts": "1563651344.006600",
        "client_msg_id": "bfe09c81-38b2-4894-a5f8-7a08e4c8688b",
        "text": "The only thing no one on that thread touched on is the mental overhead of keeping the architecture of an entire codebase in your head…",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9ae6680c0eb6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-01-30\/3025680183365_9ae6680c0eb63c7a6caa_72.jpg",
            "first_name": "Dan",
            "real_name": "Dan Stocker",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dan346",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563573194.330800",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C8c=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The only thing no one on that thread touched on is the mental overhead of keeping the architecture of an entire codebase in your head…"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1563653616.007100",
        "edited": {
            "user": "U5TCAFTD3",
            "ts": "1563653733.000000"
        },
        "client_msg_id": "a38b6148-d86d-407e-bacf-6a949c05aa81",
        "text": "Verbosity of syntax is an ergonomic concern only when you have to edit text by hand, but a structured \/ projectional editor could solve that, for example by picking some good defaults that you can optionally change. There are many such programming language concerns that almost entirely disappear with a non-textual editor.\n\nOf course, regardless of the editor, we want to be able to be concise through abstraction. That kind of concision is of paramount importance, and FP excels at that kind of conciseness: of ideas, not of syntax.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1i6ER",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Verbosity of syntax is an ergonomic concern only when you have to edit text by hand, but a structured \/ projectional editor could solve that, for example by picking some good defaults that you can optionally change. There are many such programming language concerns that almost entirely disappear with a non-textual editor.\n\nOf course, regardless of the editor, we want to be able to be concise through abstraction. That kind of concision is of paramount importance, and FP excels at that kind of conciseness: of ideas, not of syntax."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1563655419.007400",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1563655425.000000"
        },
        "client_msg_id": "11827049-508d-4464-a26b-ecdeb214c825",
        "text": "<@UJTHWNH2T> could you please link\/add the exact pieces of code?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+UR\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJTHWNH2T"
                            },
                            {
                                "type": "text",
                                "text": " could you please link\/add the exact pieces of code?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563655433.007700",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1563655518.000000"
        },
        "client_msg_id": "531ac67f-5ec3-473c-b44a-2acdfb73d8c6",
        "text": "<@U5TCAFTD3> That feels a bit too reductionist - verbosity has an effect on reading as well, which is the more important case. Anything that obscures the intent of the code, comes at a heavy cost.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C9vUZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": " That feels a bit too reductionist - verbosity has an effect on reading as well, which is the more important case. Anything that obscures the intent of the code, comes at a heavy cost."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UFB8STN7K",
                    "UAVCC2X70"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563656765.008000",
        "client_msg_id": "df01d7a8-1d87-4216-bc30-ef71d369dfe1",
        "text": "<@UL3CJ7YKC> I guess so. They can all be found pretty much by searching \"TodoMVC ___\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wGlfd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UL3CJ7YKC"
                            },
                            {
                                "type": "text",
                                "text": " I guess so. They can all be found pretty much by searching \"TodoMVC ___\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563656817.008200",
        "client_msg_id": "ee38b689-a3be-4e08-9474-16c0bd530533",
        "text": "Turbine:\n<https:\/\/github.com\/funkia\/turbine\/tree\/master\/examples\/todo>\n\nReflex:\n<https:\/\/github.com\/reflex-frp\/reflex-todomvc\/blob\/develop\/src\/Reflex\/TodoMVC.hs>\n\nCycle:\n<https:\/\/github.com\/cyclejs\/todomvc-cycle\/tree\/onionify\/src>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FGo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Turbine:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/funkia\/turbine\/tree\/master\/examples\/todo"
                            },
                            {
                                "type": "text",
                                "text": "\n\nReflex:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/reflex-frp\/reflex-todomvc\/blob\/develop\/src\/Reflex\/TodoMVC.hs"
                            },
                            {
                                "type": "text",
                                "text": "\n\nCycle:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/cyclejs\/todomvc-cycle\/tree\/onionify\/src"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563656831.008400",
        "client_msg_id": "2997e464-288a-4422-a340-d17b3ea3ceaa",
        "text": "Svelte:\n<https:\/\/github.com\/sveltejs\/svelte-todomvc\/tree\/master\/src>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "68EL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Svelte:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/sveltejs\/svelte-todomvc\/tree\/master\/src"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563656996.008600",
        "client_msg_id": "eae99f81-5c6e-415b-9a53-5b62cc0f4773",
        "text": "<@U5TCAFTD3> The graphical thing occurred to me, but I've not used one so it's hard to say. Seems plausible.\n\nStill, 3x seems a bit extreme for me. The Svelte example is concise and very easy for me to understand too. I'm not sure if it's just syntax. Is modelling every part of your UI as an explicit stream\/behavior *really* easier than the Svelte example? I'm not 100% sure",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7SBT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": " The graphical thing occurred to me, but I've not used one so it's hard to say. Seems plausible.\n\nStill, 3x seems a bit extreme for me. The Svelte example is concise and very easy for me to understand too. I'm not sure if it's just syntax. Is modelling every part of your UI as an explicit stream\/behavior "
                            },
                            {
                                "type": "text",
                                "text": "really",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " easier than the Svelte example? I'm not 100% sure"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563657080.008800",
        "client_msg_id": "e4c8c892-a3bd-4ee9-86ea-26be7de5f5fa",
        "text": "There's the argument that we're just brainwashed into an imperative POV, so it only seems natural for that reason. Maybe. (Although the Svelte example is more imperative AND reactive)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rlgd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's the argument that we're just brainwashed into an imperative POV, so it only seems natural for that reason. Maybe. (Although the Svelte example is more imperative AND reactive)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1563657302.009000",
        "client_msg_id": "22327127-c949-4897-a2cf-720e26b36dcf",
        "text": "<@UEBG0NPDK> in a structural editor you can come up with various concise views of the some verbose underlying data. We don't need to be as worried about meta-data in a projectional editor world, because it's more like a database. I don't care how many attributes Slack stores about my messages. It just hides most of it and displays it concisely",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vZa2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " in a structural editor you can come up with various concise views of the some verbose underlying data. We don't need to be as worried about meta-data in a projectional editor world, because it's more like a database. I don't care how many attributes Slack stores about my messages. It just hides most of it and displays it concisely"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563657344.009300",
        "client_msg_id": "7f936c3e-1185-44f8-9421-19d2b62fd3dd",
        "text": "at that point, you're designing a language to be concise though :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8=d0+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "at that point, you're designing a language to be concise though "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563657427.009500",
        "client_msg_id": "e0ba1d01-0360-4ee4-b400-aea161eeb247",
        "text": "In order for that to work, the language has to lend itself to compact, easily digestible representations",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kOF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In order for that to work, the language has to lend itself to compact, easily digestible representations"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563657520.009700",
        "client_msg_id": "59b370d8-38c9-4c1a-a3d2-c4041e7761a1",
        "text": "It's true you get more latitude to push the \"settings\" off to the side, but the intent has to come through well enough that you don't always need to go look at them, otherwise it ends up being worse.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RDLU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's true you get more latitude to push the \"settings\" off to the side, but the intent has to come through well enough that you don't always need to go look at them, otherwise it ends up being worse."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563657539.009900",
        "client_msg_id": "975ef677-92e2-4b6e-ae69-4a051ad808a8",
        "text": "since you have to initiate another action to get the remaining information",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f1g6p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "since you have to initiate another action to get the remaining information"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563657649.010100",
        "client_msg_id": "0c31916d-b00d-4d07-8ba5-98b89f7daac0",
        "text": "Excel is actually a good example of that tradeoff - it hides the formulas, which is ok as long as you know the intent of all the cells already or it's being signaled by labels or something, but it's awful otherwise",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "223y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Excel is actually a good example of that tradeoff - it hides the formulas, which is ok as long as you know the intent of all the cells already or it's being signaled by labels or something, but it's awful otherwise"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563657953.010300",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1563658300.000000"
        },
        "client_msg_id": "d5f129a5-9f47-4e25-bf27-33710b39e40d",
        "text": "From our experiences, structural editors don't make the problem easier, they just make it different: what's the right balance between intent and detail? how do you prevent interactions from feeling heavyweight? how do you deal with the chicken and egg problem that if you optimize for reading, no one will ever write anything to read and if you optimize for writing, no one will be able to read what they've written? How do you preserve bandwidth and natural intent (e.g. how people order things often has some meaning)?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "igpms",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "From our experiences, structural editors don't make the problem easier, they just make it different: what's the right balance between intent and detail? how do you prevent interactions from feeling heavyweight? how do you deal with the chicken and egg problem that if you optimize for reading, no one will ever write anything to read and if you optimize for writing, no one will be able to read what they've written? How do you preserve bandwidth and natural intent (e.g. how people order things often has some meaning)?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UHWC9PXBL",
                    "UD31LGQKB",
                    "U6KQ2S410",
                    "UA14TGLTC"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1563659874.013100",
        "client_msg_id": "cd4972cc-c7a0-4c85-8843-1cf1d4304b9b",
        "text": "<@UJTHWNH2T> However I am not a big FRP guy, I am interested in these topics, this is just an opinion:\n\nit seems to me these examples are quite different, because the “meaning” of the implementations vary a lot.\n\nThey might do the same, but it might harder to extend the more concise code: it probably holds less meaning\/intention\/constraint which might or might not be useful for future changes\/refactors.\n\nIf you are composing your code using the same “tiny” parts over and over again introducing the minimum amount of new abstractions (which seems a good idea on the long term) you might end up with a bigger surface of core abstractions and more “plumbing” by *joining* the same core parts over and over again. But (in theory, lol) they should be already tested parts and you get used to them and this seems more scaleable.\n\nMy problem is with TodoMVC that it does not involve refactoring at all. My problems usually arise when I have to change production code and related test code already written, I want do delete the less code and less related test possible. I am just not sure the svelte code would be easier to change.\n\nNote, despite we are talking about UI frameworks the part that varies is mostly “business logic” of the view not the “clean” view.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sLz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJTHWNH2T"
                            },
                            {
                                "type": "text",
                                "text": " However I am not a big FRP guy, I am interested in these topics, this is just an opinion:\n\nit seems to me these examples are quite different, because the “meaning” of the implementations vary a lot.\n\nThey might do the same, but it might harder to extend the more concise code: it probably holds less meaning\/intention\/constraint which might or might not be useful for future changes\/refactors.\n\nIf you are composing your code using the same “tiny” parts over and over again introducing the minimum amount of new abstractions (which seems a good idea on the long term) you might end up with a bigger surface of core abstractions and more “plumbing” by "
                            },
                            {
                                "type": "text",
                                "text": "joining",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the same core parts over and over again. But (in theory, lol) they should be already tested parts and you get used to them and this seems more scaleable.\n\nMy problem is with TodoMVC that it does not involve refactoring at all. My problems usually arise when I have to change production code and related test code already written, I want do delete the less code and less related test possible. I am just not sure the svelte code would be easier to change.\n\nNote, despite we are talking about UI frameworks the part that varies is mostly “business logic” of the view not the “clean” view."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1563660086.016700",
        "client_msg_id": "41B6FF98-0AFA-4DFC-9B49-B3BC71C0D21E",
        "text": "hacker news is like a petri dish for the is-ought fallacy. I wish I could buy up like 20% of the ad display space on the net just to plaster it with \"WE LITERALLY DIDN'T HAVE GRAPHS OR CHARTS UNTIL SOMEONE INVENTED THEM\"\n\nLike, if the only worth you have on the internet is based on successfully arguing you know more than the OP then you're going to be incentivized to misinterpret absence of evidence as evidence of absence: if I haven't thought to work on this, it must be a bad idea to work on it otherwise I'd be an idiot in my own value system\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563573194.330800",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mPhs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "hacker news is like a petri dish for the is-ought fallacy. I wish I could buy up like 20% of the ad display space on the net just to plaster it with \"WE LITERALLY DIDN'T HAVE GRAPHS OR CHARTS UNTIL SOMEONE INVENTED THEM\"\n\nLike, if the only worth you have on the internet is based on successfully arguing you know more than the OP then you're going to be incentivized to misinterpret absence of evidence as evidence of absence: if I haven't thought to work on this, it must be a bad idea to work on it otherwise I'd be an idiot in my own value system"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UCUSW7WVD",
                    "U85HCL7JP"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT",
                    "UJVEPCVT6",
                    "UBSMEUXAA"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1563660276.019100",
        "client_msg_id": "8F8DDCC1-D21F-4262-84E4-B5044CE44EA6",
        "text": "I've been using svelte for a personal project and absolutely loving it. I feel like the comparison is a bit disingenuous though—svelte just moves the FRP into the runtime in the same way that elm moves effects into the runtime",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TntO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been using svelte for a personal project and absolutely loving it. I feel like the comparison is a bit disingenuous though—svelte just moves the FRP into the runtime in the same way that elm moves effects into the runtime"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563660455.019300",
        "client_msg_id": "4ed4e1d8-9ccd-418f-a975-038513fc7936",
        "text": "<@UHWC9PXBL> I didn't choose Svelte because it's FRP in any sense. I just chose it for having a concise todomvc implementation. And, fwiw, Svelte moves the *RP* into the compiled code at *compile-time*. The runtime is basically nothing. There is no FRP. Just RP.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BhXUI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " I didn't choose Svelte because it's FRP in any sense. I just chose it for having a concise todomvc implementation. And, fwiw, Svelte moves the "
                            },
                            {
                                "type": "text",
                                "text": "RP",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " into the compiled code at "
                            },
                            {
                                "type": "text",
                                "text": "compile-time",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". The runtime is basically nothing. There is no FRP. Just RP."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1563660532.019700",
        "client_msg_id": "131E2A36-AE14-4540-8EDE-7092BC436533",
        "text": "good point",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BBhzJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "good point"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1563660575.020700",
        "client_msg_id": "9A0429C8-FEA3-479E-9221-DFFB5AB49B68",
        "text": "I meant more in the sense that \"the language takes care of it for you\" so I guess runtime isn't exactly right",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Od",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I meant more in the sense that \"the language takes care of it for you\" so I guess runtime isn't exactly right"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1563660615.022000",
        "client_msg_id": "50F74397-079A-4728-BAEC-F50E2227F916",
        "text": "but I do think that svelte is an example of how much more concise and reasonable a language gets when you add RP as a built-in ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sIAr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but I do think that svelte is an example of how much more concise and reasonable a language gets when you add RP as a built-in"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563660634.022700",
        "edited": {
            "user": "UJTHWNH2T",
            "ts": "1563660805.000000"
        },
        "client_msg_id": "5e6bbeda-a4f4-4037-ac95-5ba597cb11cb",
        "text": "<@UL3CJ7YKC> I see where you're coming from. It seems to me that less code is easier to refactor than more code (modulo codegolfing**, and ignoring the visual editor questino for now).\n\nIt seems plausible to me that Svelte might become harder to refactor with VERY large apps. Let's assume this code size scaled. 100k Svelte app vs. a 300k FRP-framework-app which is equivalent. Do you suppose the latter is easier to refactor?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U03k+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UL3CJ7YKC"
                            },
                            {
                                "type": "text",
                                "text": " I see where you're coming from. It seems to me that less code is easier to refactor than more code (modulo codegolfing**, and ignoring the visual editor questino for now).\n\nIt seems plausible to me that Svelte might become harder to refactor with VERY large apps. Let's assume this code size scaled. 100k Svelte app vs. a 300k FRP-framework-app which is equivalent. Do you suppose the latter is easier to refactor?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563660664.022900",
        "client_msg_id": "1030bf50-5530-486b-b643-8bfd9cc4b998",
        "text": "<@UHWC9PXBL> Yeah, I put Svelte in as being precisely not FRP, although interestingly related, and concise",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BzT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " Yeah, I put Svelte in as being precisely not FRP, although interestingly related, and concise"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563661060.023200",
        "client_msg_id": "7e4d1869-8471-4311-99c7-58e666aa4983",
        "text": "I suspect you could evaluate something like \"refactorability\" by looking at how much indirection is present in the various options",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NIf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suspect you could evaluate something like \"refactorability\" by looking at how much indirection is present in the various options"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563661079.023400",
        "client_msg_id": "58763b60-66ad-4067-b4ee-68c0026876d2",
        "text": "the more indirect, the harder it is to do things simply\/automatically",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y2Jh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the more indirect, the harder it is to do things simply\/automatically"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563661369.023600",
        "client_msg_id": "c1870dc0-d0f4-4b19-94ad-7b865d52bdc1",
        "text": "<@UEBG0NPDK> Also, Chris, I'm not ignoring your good replies above. They're just difficult for me to understand. I've never used let alone coded a visual programming tool. Is this accurate?\n\nSteve seems to be saying you can get around the verbosity by hiding it away in a visual programming tool. The main view would only show more grokable high-level structure which you can zoom in on as you need. You're saying that it's not quite so easy. Visual programming tools bring their own difficult issues. It's not obvious how much detail to show. Etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RcnNr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " Also, Chris, I'm not ignoring your good replies above. They're just difficult for me to understand. I've never used let alone coded a visual programming tool. Is this accurate?\n\nSteve seems to be saying you can get around the verbosity by hiding it away in a visual programming tool. The main view would only show more grokable high-level structure which you can zoom in on as you need. You're saying that it's not quite so easy. Visual programming tools bring their own difficult issues. It's not obvious how much detail to show. Etc."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563661398.023800",
        "client_msg_id": "cb2a4c7e-9f54-4f80-b89b-4d7b3db1bd7a",
        "text": "Not totally sure what you mean by optimizing for reading or writing",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LaGkJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not totally sure what you mean by optimizing for reading or writing"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563661540.024000",
        "client_msg_id": "05be5345-c7ef-4964-9ad5-f1d981392a14",
        "text": "yep! To see the tradeoff between reading and writing, it's easiest to look at the extremes: something like K or Perl (before 6) optimizes for writing at the cost of being able to read it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CMAP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yep! To see the tradeoff between reading and writing, it's easiest to look at the extremes: something like K or Perl (before 6) optimizes for writing at the cost of being able to read it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563661588.024200",
        "client_msg_id": "23549ab3-092f-44e8-bf29-92d836a76fe2",
        "text": "it's extremely succinct, highly expressive, but also obscures intent",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QLb8T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it's extremely succinct, highly expressive, but also obscures intent"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563661645.024400",
        "client_msg_id": "c941dbf9-83af-4efb-9305-45c6e235c44f",
        "text": "something like apple script optimizes for readability at the cost of being fairly verbose and making it more of a chore to write",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "40Z\/P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "something like apple script optimizes for readability at the cost of being fairly verbose and making it more of a chore to write"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563661716.024600",
        "client_msg_id": "b766ca8e-5c91-4226-8c9d-15f3fff4f2d5",
        "text": "incidentally I have not used any of those &lt; _ &lt;",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IY\/Wl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "incidentally I have not used any of those < _ <"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563661726.024800",
        "client_msg_id": "72c8bdfa-9fc8-4df3-af66-049937e14242",
        "text": "I thought we were talking about readability\/writability for a visual tool",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+ETBf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I thought we were talking about readability\/writability for a visual tool"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563661765.025000",
        "client_msg_id": "ae4dd3ac-606f-4c8c-be47-c21318f2ed35",
        "text": "a visual tool is a language in the same way that a purely textual one is, since you haven't used visual tools, I used textual examples instead",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7807y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "a visual tool is a language in the same way that a purely textual one is, since you haven't used visual tools, I used textual examples instead"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563661772.025200",
        "client_msg_id": "ae44935e-c7c3-4610-8ea5-6700cc3961d7",
        "text": "but the same is true there too",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KdPM+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but the same is true there too"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563661793.025400",
        "client_msg_id": "a6467875-a402-440d-86c8-43dff9f27f94",
        "text": "e.g. Excel optimizes for write over read (hiding formulas obscures intent)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RpD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "e.g. Excel optimizes for write over read (hiding formulas obscures intent)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEF95M2RH",
        "type": "message",
        "ts": "1563661918.025600",
        "edited": {
            "user": "UEF95M2RH",
            "ts": "1563662070.000000"
        },
        "client_msg_id": "04979598-e210-4e26-b8d2-188fae932ec9",
        "text": "I realize this is rather general and vague, but, IME trying to unify things as much as possible can be fun, and lead to interesting languages, but also lead to languages that are very hard to implement efficiently, and force you into tough design choices with no clear right answer.\n\nAs an apropos example, one way to unify functional &amp; relational(\/logic) programming would be to treat functions as a special case of relations. But, while we know how to implement higher order _functions_, implementing higher-order _relations_ is really, really difficult in general. So my line of work with Datafun, while it could be described as a \"functional relational language\", definitely _isn't_ taking this approach: even though conceptually functions are a special-case of relations, we keep them separate because it avoids a bunch of hard problems.\n\nOn the other hand, there is a project - Bill Wadge's \"Higher-order extensional Prolog\" - that is trying to tackle full-on higher-order relational programming. I don't know much about it, but it'll be damn cool if it works!\n\nSo, I can't tell you whether trying to blur the distinction between data structures &amp; relational algebra is a hot mess or a good idea, but I can tell you that it might be difficult :slightly_smiling_face:.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4e6637707ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c4e6637707ff62601f3dd21ec7626095.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Michael Arntzenius",
            "display_name": "rntz",
            "team": "T5TCAFTA9",
            "name": "daekharel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563526082.325200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BETk0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I realize this is rather general and vague, but, IME trying to unify things as much as possible can be fun, and lead to interesting languages, but also lead to languages that are very hard to implement efficiently, and force you into tough design choices with no clear right answer.\n\nAs an apropos example, one way to unify functional & relational(\/logic) programming would be to treat functions as a special case of relations. But, while we know how to implement higher order "
                            },
                            {
                                "type": "text",
                                "text": "functions",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", implementing higher-order "
                            },
                            {
                                "type": "text",
                                "text": "relations",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is really, really difficult in general. So my line of work with Datafun, while it could be described as a \"functional relational language\", definitely "
                            },
                            {
                                "type": "text",
                                "text": "isn't",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " taking this approach: even though conceptually functions are a special-case of relations, we keep them separate because it avoids a bunch of hard problems.\n\nOn the other hand, there is a project - Bill Wadge's \"Higher-order extensional Prolog\" - that is trying to tackle full-on higher-order relational programming. I don't know much about it, but it'll be damn cool if it works!\n\nSo, I can't tell you whether trying to blur the distinction between data structures & relational algebra is a hot mess or a good idea, but I can tell you that it might be difficult "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563661937.025800",
        "client_msg_id": "8b3e4280-63a7-437b-8bbc-daa1a0a9f8aa",
        "text": "hmm im just having trouble imagining an example of difficulty reading vs writing in a visual tool (outside excel, which I also havent used very much but I get that example :stuck_out_tongue: )",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DDh1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "hmm im just having trouble imagining an example of difficulty reading vs writing in a visual tool (outside excel, which I also havent used very much but I get that example "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": " )"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563662055.026000",
        "client_msg_id": "d2a40a8b-029b-4e15-9255-6436ffc889ab",
        "text": "In boxes and arrows style dataflow tools like Labview, you see this: it's very easy to wire up a couple of simple examples but in the end sacrifices readability (wires everywhere!)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nVpM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In boxes and arrows style dataflow tools like Labview, you see this: it's very easy to wire up a couple of simple examples but in the end sacrifices readability (wires everywhere!)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563662074.026300",
        "client_msg_id": "ab147395-2a39-4051-a9d9-d19a1d4bab02",
        "text": "There are ways to fix that, but only by reducing the ease of writing (e.g. by making sub diagrams)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WRMgP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are ways to fix that, but only by reducing the ease of writing (e.g. by making sub diagrams)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563662102.026500",
        "client_msg_id": "033d5965-1123-4943-abec-1f47c259b372",
        "text": "that tradeoff may be totally worth it, but you're making one thing less efficient to make another more so",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6RyR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that tradeoff may be totally worth it, but you're making one thing less efficient to make another more so"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563662250.026700",
        "client_msg_id": "600d918e-b6d1-4013-b981-0ab2e2a96d0d",
        "text": "As a fun aside: APL lives in a super weird part of this continuum, which is that it is initially both harder to read and to write than most other languages. Once you really learn it, however, the argument is that it ends up being better at both :slightly_smiling_face: It does so by being very direct and very succinct.  Once you learn the idioms, whole sentences of intent come across in the space of a few characters, making it both more efficient to read and more efficient to write.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NDJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As a fun aside: APL lives in a super weird part of this continuum, which is that it is initially both harder to read and to write than most other languages. Once you really learn it, however, the argument is that it ends up being better at both "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " It does so by being very direct and very succinct.  Once you learn the idioms, whole sentences of intent come across in the space of a few characters, making it both more efficient to read and more efficient to write."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC",
                    "UP6RJV9KP"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1563662267.027100",
        "client_msg_id": "8f12b4e0-90b6-46ef-a97f-5bc21959970f",
        "text": "<@UJTHWNH2T> To be honest I never worked codebases that large (speaking about the frontend part, even with tests), sorry I just can’t answer that. But! What I have found is that even in tiny apps complexity can go out of the roof if the app extends vertically not horizontally (vertically: (few) overlapping\/complex features, horizontally: (more) separate features).\n\nIf you say: “less code is easier to refactor than more code” I think that is totally right, I really want to keep code simple and I have learned and acknowledged that a simple hacky solution might not be just “nice” but also REALLY useful to avoid “medium” complexity. And I can just get completely rid of it if the specification changes without losing much energy.\n\nHowever what I want to note is that the really “hard parts” (\/high complexity?) for me are the ones where I have to partially alter the implementation and but partially still satisfy some existing constraints: more meaningful set\/layers of abstractions would be much more useful. Of course most time we don’t know what part will explode in complexity so we just pray and promise: this is the last ugly(\/ultrasmart, but not flexible) if we don’t design for change in the right directions (which might be just impossible).\n\nSo what I want to say that it seems to me that the linked TodoMVCs are just betting different directions of possible changes in future and that is why they differ so much. I might be just totally wrong, but then we should be able to examine what exact features do make Svelte more concise.\n\nI’ve seen a couple of videos on Svelte, but it seems to me that its really about 2 things: speed (with AOT) + embracing HTML.\n\nBut yes, Svelte seems really terse, but not because the lack of FRP, it is “just a really good DSL”.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qZaQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJTHWNH2T"
                            },
                            {
                                "type": "text",
                                "text": " To be honest I never worked codebases that large (speaking about the frontend part, even with tests), sorry I just can’t answer that. But! What I have found is that even in tiny apps complexity can go out of the roof if the app extends vertically not horizontally (vertically: (few) overlapping\/complex features, horizontally: (more) separate features).\n\nIf you say: “less code is easier to refactor than more code” I think that is totally right, I really want to keep code simple and I have learned and acknowledged that a simple hacky solution might not be just “nice” but also REALLY useful to avoid “medium” complexity. And I can just get completely rid of it if the specification changes without losing much energy.\n\nHowever what I want to note is that the really “hard parts” (\/high complexity?) for me are the ones where I have to partially alter the implementation and but partially still satisfy some existing constraints: more meaningful set\/layers of abstractions would be much more useful. Of course most time we don’t know what part will explode in complexity so we just pray and promise: this is the last ugly(\/ultrasmart, but not flexible) if we don’t design for change in the right directions (which might be just impossible).\n\nSo what I want to say that it seems to me that the linked TodoMVCs are just betting different directions of possible changes in future and that is why they differ so much. I might be just totally wrong, but then we should be able to examine what exact features do make Svelte more concise.\n\nI’ve seen a couple of videos on Svelte, but it seems to me that its really about 2 things: speed (with AOT) + embracing HTML.\n\nBut yes, Svelte seems really terse, but not because the lack of FRP, it is “just a really good DSL”."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1563662319.028700",
        "client_msg_id": "888DC022-22B0-4B3B-BA77-27D54D56DC5F",
        "text": "yeah I think the most exciting part of projectional editors is the idea that you might be able to switch from terse writing to clear reading on the fly",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "632W=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah I think the most exciting part of projectional editors is the idea that you might be able to switch from terse writing to clear reading on the fly"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1563662614.029100",
        "client_msg_id": "c42ad336-d361-4024-88c7-aaa1101abad4",
        "text": "Thanks! Yes that seems overkill then :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563279828.308800",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hXS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! Yes that seems overkill then "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1563663701.039700",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1563663773.000000"
        },
        "client_msg_id": "ee39eac7-582f-415c-8c92-0321abb95b3e",
        "text": "[Dependent Types][Temporal Logic][Model Checkers]\n\nThe complexity of Asynchronicity &amp; Concurrency lead me to the formal expression of time related logic: Temporal Logic (<https:\/\/en.wikipedia.org\/wiki\/Temporal_logic>) There are multiple temporal logics with different level of usefulness. (Check Temporal logics section.) I really want to solve harder problems and express deeper relations, so it seems to me what I’d need is CTL at least (<https:\/\/en.wikipedia.org\/wiki\/Computation_tree_logic>).\n\nI thought I might want to model my software (any kind of app!) and prove it is working as intended using CTL (or other more expressive TL) in Agda\/Idris (Coq\/TLA+) and then make a similar implementation in another language.\n\nEg. there is an LTL implementation in Agda, but I did not find similar things for CTL.(<https:\/\/github.com\/xekoukou\/LTL>)\n\nWhat do you think, is it a good idea to express my model using (C)TL in Agda\/Idris, or I should use a more dedicated piece of technology for that problem? Is there a limit in case of Agda\/Idris for that in theory?\n\nAny resource is appreciated!\n\n<@ULF1Y4N4V> <@UCUSW7WVD>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563663701.039700",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1563926839.280300",
        "reply_users": [
            "ULF1Y4N4V"
        ],
        "replies": [
            {
                "user": "ULF1Y4N4V",
                "ts": "1563926839.280300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jcWa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Dependent Types][Temporal Logic][Model Checkers]\n\nThe complexity of Asynchronicity & Concurrency lead me to the formal expression of time related logic: Temporal Logic ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Temporal_logic"
                            },
                            {
                                "type": "text",
                                "text": ") There are multiple temporal logics with different level of usefulness. (Check Temporal logics section.) I really want to solve harder problems and express deeper relations, so it seems to me what I’d need is CTL at least ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Computation_tree_logic"
                            },
                            {
                                "type": "text",
                                "text": ").\n\nI thought I might want to model my software (any kind of app!) and prove it is working as intended using CTL (or other more expressive TL) in Agda\/Idris (Coq\/TLA+) and then make a similar implementation in another language.\n\nEg. there is an LTL implementation in Agda, but I did not find similar things for CTL.("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/xekoukou\/LTL"
                            },
                            {
                                "type": "text",
                                "text": ")\n\nWhat do you think, is it a good idea to express my model using (C)TL in Agda\/Idris, or I should use a more dedicated piece of technology for that problem? Is there a limit in case of Agda\/Idris for that in theory?\n\nAny resource is appreciated!\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "ULF1Y4N4V"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1563666250.040500",
        "client_msg_id": "6a226eaa-3327-43c3-8a17-4c639478293f",
        "text": "Thanks for the perspective <@UEF95M2RH>. Perhaps it's too difficult a problem to tackle. I wish prototyping these things were easier! There seems to be too many prereqs to just try everything possible (as you point out the numerous research areas behind everything). Perhaps that's a good motivator for why the web needs to be a better enabler of conceptual communication between people.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563526082.325200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EdL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the perspective "
                            },
                            {
                                "type": "user",
                                "user_id": "UEF95M2RH"
                            },
                            {
                                "type": "text",
                                "text": ". Perhaps it's too difficult a problem to tackle. I wish prototyping these things were easier! There seems to be too many prereqs to just try everything possible (as you point out the numerous research areas behind everything). Perhaps that's a good motivator for why the web needs to be a better enabler of conceptual communication between people."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563666479.040700",
        "client_msg_id": "ca7cf65d-d661-48ee-88c5-8b03c199e0f6",
        "text": "<@UEBG0NPDK> The subdiagram example makes sense. It seems to me that if the visualization software never lags, and the design is good then this is relatively minor.\n\nYou're a visual programming tool kind of guy, right? So you think these are a better set of problems?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YA8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " The subdiagram example makes sense. It seems to me that if the visualization software never lags, and the design is good then this is relatively minor.\n\nYou're a visual programming tool kind of guy, right? So you think these are a better set of problems?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563666695.040900",
        "client_msg_id": "d1995ef4-f43f-41d7-b325-a85319ea6c0f",
        "text": "Lol so I google image'd for Labview looking for a gnarly diagram. First one I saw was from an article called \"Top 5 LabVIEW Rookie Mistakes\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=ps",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lol so I google image'd for Labview looking for a gnarly diagram. First one I saw was from an article called \"Top 5 LabVIEW Rookie Mistakes\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563666772.041200",
        "client_msg_id": "35f60a34-d23c-400a-8dcb-ae62a5ff520c",
        "text": "Chris, didn't you give K as an example of difficult to read. Isn't K influenced from APL?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "luhdH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Chris, didn't you give K as an example of difficult to read. Isn't K influenced from APL?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1563667135.041400",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1563667142.000000"
        },
        "client_msg_id": "09ee3e77-54d3-4dc1-b872-8a39057941bd",
        "text": "<@UCUSW7WVD>\n\n&gt; The comment I quoted above had caveats carefully stated, I thought. I think we can all agree which side the burden of proof is on?\nYes, and yes. I wasn't responding to that comment, I was responding to the entire HN discussion in aggregate — \"that thread\" — where, sure, there are plenty of good points well made, but there's also a _lot_ of needless dunking.\n\n&gt; It has to allow people using it to collaborate with people who are still using text.\nThis is a stated must-have for a lot of people, but (not-even-contrarian take) I don't think it's a must, and I think you can find examples of communities that get by fine without this. Game devs, for instance, often work in tools &amp; formats that are siloed. Interop is a great benefit, but it doesn't need to be foundational. The absence of it just slows one vector of adoption, but history has shown that lack of interop doesn't always lead to DOA for a new paradigm.\n\n&gt; Seems reasonable that people who don't care about building it are skeptical of the enterprise.\nThat's a fantastic point, and the dual of what I was saying. I'm someone who cares about building it, so it's painful to see people dunk on it. I have a vested interest.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563573194.330800",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pI5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The comment I quoted above had caveats carefully stated, I thought. I think we can all agree which side the burden of proof is on?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, and yes. I wasn't responding to that comment, I was responding to the entire HN discussion in aggregate — \"that thread\" — where, sure, there are plenty of good points well made, but there's also a "
                            },
                            {
                                "type": "text",
                                "text": "lot",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of needless dunking.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It has to allow people using it to collaborate with people who are still using text."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a stated must-have for a lot of people, but (not-even-contrarian take) I don't think it's a must, and I think you can find examples of communities that get by fine without this. Game devs, for instance, often work in tools & formats that are siloed. Interop is a great benefit, but it doesn't need to be foundational. The absence of it just slows one vector of adoption, but history has shown that lack of interop doesn't always lead to DOA for a new paradigm.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Seems reasonable that people who don't care about building it are skeptical of the enterprise."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's a fantastic point, and the dual of what I was saying. I'm someone who cares about building it, so it's painful to see people dunk on it. I have a vested interest."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1563667263.041900",
        "client_msg_id": "66c44d7c-9cb3-4145-9ff6-a2b8fb1548bf",
        "text": "&gt; if I haven't thought to work on this, it must be a bad idea to work on it otherwise I'd be an idiot in my own value system\n\nI'm working on my post-hoc in computer silence.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563573194.330800",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tieZ",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if I haven't thought to work on this, it must be a bad idea to work on it otherwise I'd be an idiot in my own value system"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nI'm working on my post-hoc in computer silence."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "rolling_on_the_floor_laughing",
                "users": [
                    "UHWC9PXBL",
                    "UCUSW7WVD"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563667827.042200",
        "client_msg_id": "02e1d4ac-5815-4cb6-ac62-ccddb565a978",
        "text": "it is, but every operator is contextual which makes it significantly more difficult to understand",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A61",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it is, but every operator is contextual which makes it significantly more difficult to understand"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1563667863.042400",
        "client_msg_id": "666fddc1-6eac-45a0-84d8-ab72ccd7ef7c",
        "text": "I'm neither on the visual or the text side, though I think doing something structured\/visual is probably much harder if your goal is to be general",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gQh7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm neither on the visual or the text side, though I think doing something structured\/visual is probably much harder if your goal is to be general"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1563671820.042900",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1563672065.000000"
        },
        "client_msg_id": "6420a2ca-c8d0-4d16-be7d-bd18721e1be3",
        "text": "&gt; Interop is a great benefit, but it doesn't need to be foundational.\n\nDefinitely. One thought after this exchange: perhaps it's counter-productive to start conversations about non-text programming with, \"why aren't we already doing this?\" That tends to trigger responses that are basically saying, \"we aren't already doing this, and I'm scared to switch.\" Scoping it to a specific community (at least for a time) would lead to more productive conversation, even with those outside the community. It also feels like a classic case of low-end disruption. If people dismiss it as a toy, you may be doing something right!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563573194.330800",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UpLm",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interop is a great benefit, but it doesn't need to be foundational."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nDefinitely. One thought after this exchange: perhaps it's counter-productive to start conversations about non-text programming with, \"why aren't we already doing this?\" That tends to trigger responses that are basically saying, \"we aren't already doing this, and I'm scared to switch.\" Scoping it to a specific community (at least for a time) would lead to more productive conversation, even with those outside the community. It also feels like a classic case of low-end disruption. If people dismiss it as a toy, you may be doing something right!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1563672540.044500",
        "client_msg_id": "BD68EA44-9D80-44FE-980E-2EB16211F84A",
        "text": "yeah or even \"we aren't already doing this because we use Unix, and Unix loves text\"—like: that's not the end of the conversation!!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563573194.330800",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mrGVi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah or even \"we aren't already doing this because we use Unix, and Unix loves text\"—like: that's not the end of the conversation!!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563672960.044700",
        "client_msg_id": "3a268002-27ed-4d3f-87a3-762b975b1474",
        "text": "What side are you on o.O",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2yB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What side are you on o.O"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1563672962.044900",
        "client_msg_id": "e468e727-b38c-48f3-a203-3c3242fbb69e",
        "text": "telepathic?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "whZWe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "telepathic?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1563673269.045100",
        "client_msg_id": "e85ce8a2-37f3-4191-8475-651f5f0779a0",
        "text": "\"How much do you all value conciseness, generally?\" I place a high value on _simplicity_. Some programming languages (or APIs) require a lot of boilerplate or add a lot of incidental complexity, which bloats your code, makes it harder to read and write. Some examples: idiomatic object oriented programming where you create far too many classes in order to encapsulate every concept, or manual memory management in C. Fighting the borrow checker in Rust. Or imperative programming in general: I find imperative style programming bloated and clunky compared to functional style programming in a proper functional language. I prefer to use languages\/APIs\/DSLs and programming styles that minimize incidental complexity and let me write short, clean, clear code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B4N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"How much do you all value conciseness, generally?\" I place a high value on "
                            },
                            {
                                "type": "text",
                                "text": "simplicity",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Some programming languages (or APIs) require a lot of boilerplate or add a lot of incidental complexity, which bloats your code, makes it harder to read and write. Some examples: idiomatic object oriented programming where you create far too many classes in order to encapsulate every concept, or manual memory management in C. Fighting the borrow checker in Rust. Or imperative programming in general: I find imperative style programming bloated and clunky compared to functional style programming in a proper functional language. I prefer to use languages\/APIs\/DSLs and programming styles that minimize incidental complexity and let me write short, clean, clear code."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKFSDUCH2",
        "type": "message",
        "ts": "1563675156.049700",
        "client_msg_id": "03DE3299-F473-4CE7-B6A2-E602E6F49F06",
        "text": "What do you consider to be the definition of a “declarative” language? I ask because I keep running across build tools which claim to be easier\/superior because they are declarative, yet without fail they run up against a wall where they keep trying to shoehorn in more features while remaining declarative, and instead should have just gone to a full Turing complete language. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcc9260f41ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0cc9260f41ff521633069f4d94782cc7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Josh Marinacci",
            "display_name": "Josh Marinacci",
            "team": "T5TCAFTA9",
            "name": "joshua",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563675156.049700",
        "reply_count": 19,
        "reply_users_count": 5,
        "latest_reply": "1563949594.284600",
        "reply_users": [
            "UCUSW7WVD",
            "UE6EFEPTQ",
            "UKFSDUCH2",
            "UHWC9PXBL",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1563677437.049900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1563677821.050200"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1563701845.051300"
            },
            {
                "user": "UKFSDUCH2",
                "ts": "1563724295.053100"
            },
            {
                "user": "UKFSDUCH2",
                "ts": "1563724494.053300"
            },
            {
                "user": "UKFSDUCH2",
                "ts": "1563724526.053500"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1563724981.053700"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1563725040.053900"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1563725055.054100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1563727407.054600"
            },
            {
                "user": "UKFSDUCH2",
                "ts": "1563736929.055900"
            },
            {
                "user": "UKFSDUCH2",
                "ts": "1563736972.056100"
            },
            {
                "user": "UKFSDUCH2",
                "ts": "1563737024.056300"
            },
            {
                "user": "UKFSDUCH2",
                "ts": "1563737047.056500"
            },
            {
                "user": "UKFSDUCH2",
                "ts": "1563737095.056700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1563805402.064500"
            },
            {
                "user": "UKFSDUCH2",
                "ts": "1563814711.067200"
            },
            {
                "user": "UKFSDUCH2",
                "ts": "1563814718.067400"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1563949594.284600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xmzaX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What do you consider to be the definition of a “declarative” language? I ask because I keep running across build tools which claim to be easier\/superior because they are declarative, yet without fail they run up against a wall where they keep trying to shoehorn in more features while remaining declarative, and instead should have just gone to a full Turing complete language."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1563677437.049900",
        "client_msg_id": "017b18fa-31a8-428e-98af-31f0ac766507",
        "text": "What I think of declarative build systems: <https:\/\/news.ycombinator.com\/item?id=15043432#15044027> (That whole thread is about my draconian solution.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563675156.049700",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3pu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What I think of declarative build systems: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=15043432#15044027"
                            },
                            {
                                "type": "text",
                                "text": " (That whole thread is about my draconian solution.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UE6EFEPTQ",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1563677821.050200",
        "client_msg_id": "3ddcfcf4-95cd-4c23-b248-3120d2d0bfc6",
        "text": "Regarding \"declarative\" more broadly, I still find this thread from April memorable, about the distinction between declarative and composable: <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1556655545323500> (before, after and sub-thread)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563675156.049700",
        "parent_user_id": "UKFSDUCH2",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1556655545323500",
                "fallback": "[April 30th, 2019 1:19 PM] fp: .. but .. something can be conceptually\/theoretically very simple yet _pointlessly_ hard to use in practice - e.g. Forth, S+K combinators, FP needing Monads to be useful, thus losing simplicity, etc.",
                "ts": "1556655545.323500",
                "author_id": "UE6EFEPTQ",
                "author_subname": "Duncan Cragg",
                "channel_id": "C5T9GPWFL",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "text": ".. but .. something can be conceptually\/theoretically very simple yet _pointlessly_ hard to use in practice - e.g. Forth, S+K combinators, FP needing Monads to be useful, thus losing simplicity, etc.",
                "author_name": "Duncan Cragg",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/UE6EFEPTQ",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1556655545323500",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DQX\/H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regarding \"declarative\" more broadly, I still find this thread from April memorable, about the distinction between declarative and composable: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1556655545323500"
                            },
                            {
                                "type": "text",
                                "text": " (before, after and sub-thread)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1563682526.050900",
        "client_msg_id": "0d2d5ed4-1e31-42e5-b7ab-245f9435cd7e",
        "text": "<@UJTHWNH2T> I suspect <@UEBG0NPDK> is on the side of visual-text _synthesis_.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5nxT4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJTHWNH2T"
                            },
                            {
                                "type": "text",
                                "text": " I suspect "
                            },
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " is on the side of visual-text "
                            },
                            {
                                "type": "text",
                                "text": "synthesis",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]