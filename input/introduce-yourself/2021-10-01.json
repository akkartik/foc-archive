[
    {
        "user": "U02FYPLHU67",
        "type": "message",
        "ts": "1633109901.034400",
        "edited": {
            "user": "U02FYPLHU67",
            "ts": "1633111774.000000"
        },
        "client_msg_id": "c796e742-1e72-4517-9447-e02520acfccc",
        "text": "Hi Chris. I'm mostly thinking of direct manipulation, consisting on clicking and tagging structured data. Prototype tools like <https:\/\/www.youtube.com\/watch?v=jQ_hSNj1gI0&amp;t=49s|Kimono> and <http:\/\/groups.csail.mit.edu\/graphics\/lapis\/|Lapis> can infer the structure of a document and create patterns to scrap data collections that way.\n\nThis kind of tools usually create an API endpoint to be accessed programatically, which is not accesible to end users. I would pipe such extracted data through a cleanup tool like <https:\/\/youtu.be\/nORS7STbLyk?t=119|OpenRefine> or <https:\/\/youtu.be\/0aeZX1l4JT4?t=327|MS Power Query>, which convert a sequence of direct manipulation transformations into a persistent sequence of commands so it can be reapplied to new datasets.\n\nAs you see, these workflows already exist in several tools with different degrees of maturity. However, they are separate silos, making it difficult to transfer information among different applications; and they expose information either through an API endpoint or as a whole file.\n\nMy novel idea is to build an always-present capacity at the GUI level (either the windowing environment or mobile) which, like copy-paste, allows you to capture any information that the user can see and insert it at any other place that accepts editable content, but using these structured data transformation pipelines rather than raw text; and setting up some interactive widgets at the enpoint so that the user can shape the way data is injected into it. Again there are some \"build your own workflow\" commercial tools trying to create similar connectivity, but I don't see them working at this granularity I want to achieve of allowing a single interaction over a multiple selection of data.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "da03e6d17065",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-28\/2536072635510_da03e6d17065db49a1d3_72.jpg",
            "first_name": "Diego",
            "real_name": "Diego Moya",
            "display_name": "dialmove",
            "team": "T5TCAFTA9",
            "name": "dialmove",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1633039394.032300",
        "parent_user_id": "U02FYPLHU67",
        "attachments": [
            {
                "fallback": "YouTube Video: Using Kimono to Gather Email Addresses",
                "from_url": "https:\/\/www.youtube.com\/watch?v=jQ_hSNj1gI0&amp;t=49s",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "title": "Using Kimono to Gather Email Addresses",
                "title_link": "https:\/\/www.youtube.com\/watch?v=jQ_hSNj1gI0&amp;t=49s",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/jQ_hSNj1gI0\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "author_name": "Customer Development Labs",
                "author_link": "https:\/\/www.youtube.com\/c\/Customerdevlabs",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/jQ_hSNj1gI0?feature=oembed&start=49&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=jQ_hSNj1gI0&amp;t=49s"
            },
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Data Cleaning with OpenRefine",
                "title_link": "https:\/\/youtu.be\/nORS7STbLyk?t=119",
                "author_name": "Web Scraper",
                "author_link": "https:\/\/www.youtube.com\/c\/WebScraper",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/nORS7STbLyk\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Data Cleaning with OpenRefine",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/nORS7STbLyk?start=119&feature=oembed&start=119&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/nORS7STbLyk?t=119",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 2,
                "original_url": "https:\/\/youtu.be\/nORS7STbLyk?t=119"
            },
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "How to use Microsoft Power Query",
                "title_link": "https:\/\/youtu.be\/0aeZX1l4JT4?t=327",
                "author_name": "Kevin Stratvert",
                "author_link": "https:\/\/www.youtube.com\/c\/KevinStratvert",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/0aeZX1l4JT4\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: How to use Microsoft Power Query",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/0aeZX1l4JT4?start=327&feature=oembed&start=327&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/0aeZX1l4JT4?t=327",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 3,
                "original_url": "https:\/\/youtu.be\/0aeZX1l4JT4?t=327"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h5X9L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi Chris. I'm mostly thinking of direct manipulation, consisting on clicking and tagging structured data. Prototype tools like "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=jQ_hSNj1gI0&t=49s",
                                "text": "Kimono"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/groups.csail.mit.edu\/graphics\/lapis\/",
                                "text": "Lapis"
                            },
                            {
                                "type": "text",
                                "text": " can infer the structure of a document and create patterns to scrap data collections that way.\n\nThis kind of tools usually create an API endpoint to be accessed programatically, which is not accesible to end users. I would pipe such extracted data through a cleanup tool like "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/nORS7STbLyk?t=119",
                                "text": "OpenRefine"
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/0aeZX1l4JT4?t=327",
                                "text": "MS Power Query"
                            },
                            {
                                "type": "text",
                                "text": ", which convert a sequence of direct manipulation transformations into a persistent sequence of commands so it can be reapplied to new datasets.\n\nAs you see, these workflows already exist in several tools with different degrees of maturity. However, they are separate silos, making it difficult to transfer information among different applications; and they expose information either through an API endpoint or as a whole file.\n\nMy novel idea is to build an always-present capacity at the GUI level (either the windowing environment or mobile) which, like copy-paste, allows you to capture any information that the user can see and insert it at any other place that accepts editable content, but using these structured data transformation pipelines rather than raw text; and setting up some interactive widgets at the enpoint so that the user can shape the way data is injected into it. Again there are some \"build your own workflow\" commercial tools trying to create similar connectivity, but I don't see them working at this granularity I want to achieve of allowing a single interaction over a multiple selection of data."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1633135163.035300",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1633135271.000000"
        },
        "client_msg_id": "9a2161f1-9e6c-4276-a339-d72d21b71720",
        "text": "Ah, constraint programming! I've recently been thinking about using CP as the basis for static analysis (e.g. verifying program termination) and as a language for relational queries. What do you think about constraint programming nowadays? Do you think it has a future in programming language semantics? (Perhaps you have only thought about domain-specific use-cases, such as theorem proving and optimization problems.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1633039394.032300",
        "parent_user_id": "U02FYPLHU67",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rpl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, constraint programming! I've recently been thinking about using CP as the basis for static analysis (e.g. verifying program termination) and as a language for relational queries. What do you think about constraint programming nowadays? Do you think it has a future in programming language semantics? (Perhaps you have only thought about domain-specific use-cases, such as theorem proving and optimization problems.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U02FYPLHU67"
                ],
                "count": 1
            }
        ]
    }
]