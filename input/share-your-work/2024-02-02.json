[
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1706888572.770969",
        "client_msg_id": "a7fd108d-8b81-4675-962d-4195e7ebf73f",
        "text": "Thank you for fixing my construction! I see how you have to iteratively construct each \"layer\" of the torsor; very roughly: you start by writing down the differences, then the differences of differences, then differences of differences of differences and so on forever. Then you can refer to any element of the torsor in a finite sequence of steps by saying what \"layer\" it is in.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704349378.649339",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nbkVT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you for fixing my construction! I see how you have to iteratively construct each \"layer\" of the torsor; very roughly: you start by writing down the differences, then the differences of differences, then differences of differences of differences and so on forever. Then you can refer to any element of the torsor in a finite sequence of steps by saying what \"layer\" it is in."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1706888700.132489",
        "client_msg_id": "573095bd-8d71-4ab3-8158-0f719706d61f",
        "text": "I will have to think about it more but I see now where I may not have understood how the elements of the free torsor relate to the free group.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704349378.649339",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kPWLj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I will have to think about it more but I see now where I may not have understood how the elements of the free torsor relate to the free group."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1706888854.817639",
        "client_msg_id": "6b0ba807-b28d-40dc-b6c7-94903e8d0147",
        "text": "Re: exploring the automorphism perspective with D8.\nYes! That is where my mind went as well! Actually I was thinking of the Klein 4 group. I haven't sat down and worked through it though.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704349378.649339",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mnumT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Re: exploring the automorphism perspective with D8.\nYes! That is where my mind went as well! Actually I was thinking of the Klein 4 group. I haven't sat down and worked through it though."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1706889184.907319",
        "edited": {
            "user": "U05M5A8E0NT",
            "ts": "1706889217.000000"
        },
        "client_msg_id": "0d21c4ed-52b4-4d16-ad5f-4bc7a9a48cc5",
        "text": "Your exploration that follows is really interesting! I like how you take an algebraic approach to your exploration. I was going to say I have trouble following, but I read through again and it makes sense. I think its that the algebra makes sense, but its hard to connect it to a mental picture. So, like you say, it would be really interesting to hear how this algebra plays out in an affine space so we can get a picture of what is happening.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704349378.649339",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QDw4A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Your exploration that follows is really interesting! I like how you take an algebraic approach to your exploration. I was going to say I have trouble following, but I read through again and it makes sense. I think its that the algebra makes sense, but its hard to connect it to a mental picture. So, like you say, it would be really interesting to hear how this algebra plays out in an affine space so we can get a picture of what is happening."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05GSC0B4A0",
        "type": "message",
        "ts": "1706889228.907659",
        "client_msg_id": "9864d99a-e02e-48f7-a013-8d559a51dfec",
        "text": "Yes! I think so...that's one of the things I'm exploring now... essentially a blueprint that is made out of blueprints",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g6366d8630c4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6366d8630c4e2394142efb0a9358fcc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "Scott",
            "real_name": "Scott",
            "display_name": "Scott",
            "team": "T5TCAFTA9",
            "name": "scott099",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1706821702.453349",
        "parent_user_id": "U05GSC0B4A0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k6ege",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes! I think so...that's one of the things I'm exploring now... essentially a blueprint that is made out of blueprints"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05GSC0B4A0",
        "type": "message",
        "ts": "1706889346.546789",
        "client_msg_id": "33a20eb4-463a-43e6-bf92-47b964188a5e",
        "text": "I struggle to get out of the philosophical side of things sometimes...but I'm kind of thinking about it from an Alexander-style pattern language...patterns are made up of smaller patterns kind of thing...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g6366d8630c4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6366d8630c4e2394142efb0a9358fcc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "Scott",
            "real_name": "Scott",
            "display_name": "Scott",
            "team": "T5TCAFTA9",
            "name": "scott099",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1706821702.453349",
        "parent_user_id": "U05GSC0B4A0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0\/fyK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I struggle to get out of the philosophical side of things sometimes...but I'm kind of thinking about it from an Alexander-style pattern language...patterns are made up of smaller patterns kind of thing..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05GSC0B4A0",
        "type": "message",
        "ts": "1706889367.360309",
        "client_msg_id": "5a419bb4-8186-40b7-b4c3-7ad988ac6bc2",
        "text": "but Terraform\/infrastructure as code might be a great test case for getting that to work",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g6366d8630c4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6366d8630c4e2394142efb0a9358fcc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "Scott",
            "real_name": "Scott",
            "display_name": "Scott",
            "team": "T5TCAFTA9",
            "name": "scott099",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1706821702.453349",
        "parent_user_id": "U05GSC0B4A0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mfD5+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but Terraform\/infrastructure as code might be a great test case for getting that to work"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1706889372.669209",
        "client_msg_id": "fc6b4bf0-9db1-4291-9564-878498d1a19b",
        "text": "It makes me realize that I work from pictures but use algebra to describe the properties of pictures that I want to capture. On the other hand, you seem to be going about things algebra first which seems like a really cool way to find some relationships that wouldn't be obvious from pictures.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704349378.649339",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UZ6c9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It makes me realize that I work from pictures but use algebra to describe the properties of pictures that I want to capture. On the other hand, you seem to be going about things algebra first which seems like a really cool way to find some relationships that wouldn't be obvious from pictures."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Hey y'all. I'm working towards a library for rendering and adding direct-manipulation to infinite recursive things. I want to share this picture showing where I'm at.\n\nOn the left is the rendered infinite recursive thing. On the right is the diagrammatic specification for the thing on the left. The library interprets the diagrammatic spec and produces a program that takes the initial transformation (position, rotation, scale, and skew) of a shape (data for a `t` in the diagram), and then runs forever, adding more shapes to the left and the right as it runs.\n\nThe arrows in the spec mean \"depends on\", and the lines mean \"depends on\" both ways. I could have drawn the lines as two-sided arrows but I found that it was harder to read. Explaining this now I realize its kind of confusing tho lol.\n\nThe self-loop on the `t` in the spec is what makes the resulting diagram recursive, otherwise it would be a single red, green, and blue thing.\n\nCurrently the diagrammatic spec is actually specified in text :neutral_face:",
        "files": [
            {
                "id": "F06GVN8C23F",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U05M5A8E0NT",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uTFfY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey y'all. I'm working towards a library for rendering and adding direct-manipulation to infinite recursive things. I want to share this picture showing where I'm at.\n\nOn the left is the rendered infinite recursive thing. On the right is the diagrammatic specification for the thing on the left. The library interprets the diagrammatic spec and produces a program that takes the initial transformation (position, rotation, scale, and skew) of a shape (data for a "
                            },
                            {
                                "type": "text",
                                "text": "t",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in the diagram), and then runs forever, adding more shapes to the left and the right as it runs.\n\nThe arrows in the spec mean \"depends on\", and the lines mean \"depends on\" both ways. I could have drawn the lines as two-sided arrows but I found that it was harder to read. Explaining this now I realize its kind of confusing tho lol.\n\nThe self-loop on the "
                            },
                            {
                                "type": "text",
                                "text": "t",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in the spec is what makes the resulting diagram recursive, otherwise it would be a single red, green, and blue thing.\n\nCurrently the diagrammatic spec is actually specified in text "
                            },
                            {
                                "type": "emoji",
                                "name": "neutral_face",
                                "unicode": "1f610"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1706891711.247169",
        "edited": {
            "user": "U05M5A8E0NT",
            "ts": "1706901314.000000"
        },
        "client_msg_id": "437651f4-7928-4151-b893-53baecf27c37",
        "thread_ts": "1706891711.247169",
        "reply_count": 7,
        "reply_users_count": 3,
        "latest_reply": "1706924240.203509",
        "reply_users": [
            "UC2A2ARPT",
            "U0378MDUG1Y",
            "U05M5A8E0NT"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1706897534.334719"
            },
            {
                "user": "U0378MDUG1Y",
                "ts": "1706920681.747179"
            },
            {
                "user": "U05M5A8E0NT",
                "ts": "1706922214.606009"
            },
            {
                "user": "U05M5A8E0NT",
                "ts": "1706922731.691389"
            },
            {
                "user": "U05M5A8E0NT",
                "ts": "1706922988.282899"
            },
            {
                "user": "U05M5A8E0NT",
                "ts": "1706923022.228529"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1706924240.203509"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UMHG81CBH",
                    "U02U0AS3J49",
                    "UML4ZEKDK",
                    "UFPRPSA4S",
                    "U03R0B9U1GD",
                    "UEZQXJK9V"
                ],
                "count": 7
            },
            {
                "name": "cake",
                "users": [
                    "U013ZLJARC7",
                    "UMQ6LR9NZ",
                    "U05UK5T7LPP",
                    "UMV4B97GT"
                ],
                "count": 4
            },
            {
                "name": "boom",
                "users": [
                    "UC2A2ARPT",
                    "U02NU8FTL5N"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1706897534.334719",
        "client_msg_id": "68947BD6-A2F4-43B5-9B33-0717A29C92EA",
        "text": "The little inline colored shape previews in the diagram are nice. \n\nI'm excited to see more examples of different diagrams and recursive things, since at the moment I'm sort of guessing at what the diagram means :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1706891711.247169",
        "parent_user_id": "U05M5A8E0NT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "csNzh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The little inline colored shape previews in the diagram are nice"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " \n\nI'm excited to see more examples of different diagrams and recursive things, since at the moment I'm sort of guessing at what the diagram means :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U05M5A8E0NT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1706920681.747179",
        "edited": {
            "user": "U0378MDUG1Y",
            "ts": "1706920957.000000"
        },
        "client_msg_id": "D94E3214-821E-4E32-9C4E-C705158B7778",
        "text": "<@U05M5A8E0NT> i was wondering what the diagrammatic text for this example looks like?\n\nIm still trying to understand what the visual diagram represents… but i really like this exploration! ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1092a4f97098",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-23\/3286745266387_1092a4f970985ebc8d2b_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Shank",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chris.shank.23",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1706891711.247169",
        "parent_user_id": "U05M5A8E0NT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y8K8u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U05M5A8E0NT"
                            },
                            {
                                "type": "text",
                                "text": " i was wondering what the diagrammatic text for this example looks like?\n\nIm still trying to understand what the visual diagram represents"
                            },
                            {
                                "type": "text",
                                "text": "…"
                            },
                            {
                                "type": "text",
                                "text": " but i really like this exploration! "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1706922214.606009",
        "client_msg_id": "a1be48b8-e38a-4ebb-aecf-eb33e0207c90",
        "text": "Here's the actual code <@U0378MDUG1Y> <https:\/\/github.com\/vezwork\/polylab\/blob\/main\/src\/demo\/drawTests\/category3\/index.ts>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1706891711.247169",
        "parent_user_id": "U05M5A8E0NT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tjj4a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's the actual code "
                            },
                            {
                                "type": "user",
                                "user_id": "U0378MDUG1Y"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/vezwork\/polylab\/blob\/main\/src\/demo\/drawTests\/category3\/index.ts"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1706922731.691389",
        "edited": {
            "user": "U05M5A8E0NT",
            "ts": "1706922985.000000"
        },
        "client_msg_id": "63b0a4fa-9d3d-4be2-a55e-253e9364d458",
        "text": "The diagram \/ code specifies the relationships between the various parts of the recursive diagram. The way things are specified is related to functional reactive programming\/observables. For an example, the `basis` data is made out of `red` and `blue` vector data. If the `red` or `blue` vector data changes, then that causes the `basis` data to change.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1706891711.247169",
        "parent_user_id": "U05M5A8E0NT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HEzUR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The diagram \/ code specifies the relationships between the various parts of the recursive diagram. The way things are specified is related to functional reactive programming\/observables. For an example, the "
                            },
                            {
                                "type": "text",
                                "text": "basis",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " data is made out of "
                            },
                            {
                                "type": "text",
                                "text": "red",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "blue",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vector data. If the "
                            },
                            {
                                "type": "text",
                                "text": "red",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "text",
                                "text": "blue",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vector data changes, then that causes the "
                            },
                            {
                                "type": "text",
                                "text": "basis",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " data to change."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1706922988.282899",
        "client_msg_id": "c7187dff-ac15-427a-bfcc-292c05cefe3b",
        "text": "The nodes in the diagram are sort of like classes that get instantiated to render something. The funky thing about the library is that the classes can be related to themselves, and that's how you get recursion. For example, `t` is related to `basis` and `origin` (its made out of those two pieces of data joined together) and `t` is related to itself. So you get recursive copies of `t` and everything it is related to.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1706891711.247169",
        "parent_user_id": "U05M5A8E0NT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f\/H2V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The nodes in the diagram are sort of like classes that get instantiated to render something. The funky thing about the library is that the classes can be related to themselves, and that's how you get recursion. For example, "
                            },
                            {
                                "type": "text",
                                "text": "t",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is related to "
                            },
                            {
                                "type": "text",
                                "text": "basis",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "origin",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (its made out of those two pieces of data joined together) and "
                            },
                            {
                                "type": "text",
                                "text": "t",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is related to itself. So you get recursive copies of "
                            },
                            {
                                "type": "text",
                                "text": "t",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and everything it is related to."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1706923022.228529",
        "edited": {
            "user": "U05M5A8E0NT",
            "ts": "1706923127.000000"
        },
        "client_msg_id": "4a1d44e5-f64f-4898-9912-12068db441e3",
        "text": "Let me know if that makes any sort of sense lol",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1706891711.247169",
        "parent_user_id": "U05M5A8E0NT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2ZoLq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Let me know if that makes any sort of sense lol"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1706924240.203509",
        "client_msg_id": "DD6D281C-A25F-48ED-A4BF-2A0342AF76CF",
        "text": "Sort of! I'm sure it'll make more sense as you do more with it and I have more exposure to it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1706891711.247169",
        "parent_user_id": "U05M5A8E0NT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WjOkv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sort of! I'm sure it'll make more sense as you do more with it and I have more exposure to it"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "U05M5A8E0NT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFPRPSA4S",
        "type": "message",
        "ts": "1706934660.372139",
        "client_msg_id": "ea6dd9a8-dc6a-4a3b-a644-9e637eb6b576",
        "text": "<@U05M5A8E0NT> Yes, I'm going about it very algebraically. I have all sorts of images in my head of what different things mean, but I can't hold it all in my head at once. I hope once I have the math worked out I can translate it back into pictures :slightly_smiling_face:.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5f4ac5375e5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f5f4ac5375e539e50ceedb08f65e9dd3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Robin Allison",
            "display_name": "Robin",
            "team": "T5TCAFTA9",
            "name": "robinps2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704349378.649339",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VgCuB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U05M5A8E0NT"
                            },
                            {
                                "type": "text",
                                "text": " Yes, I'm going about it very algebraically. I have all sorts of images in my head of what different things mean, but I can't hold it all in my head at once. I hope once I have the math worked out I can translate it back into pictures "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U05M5A8E0NT"
                ],
                "count": 1
            }
        ]
    }
]