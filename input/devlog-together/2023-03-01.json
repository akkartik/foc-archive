[
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1677665841.665449",
        "client_msg_id": "211fbdb2-c9c9-4b09-b93a-ee2d18d82860",
        "text": "Agreed: coments suck.  The Goal should be to never need to write comments.\n\nFWIW: my solution is to begin with software components.  A Component is asynchronous and owns input ports (green circles) and output ports (yellow circles) and may contain other Components or be attached (via the ports and wires) to other Components. My syntax for a Component is a rectangle (as drawn, say, on a physical whiteboard on a wall). Synchronous code cannot be componentized (easily), so I mark synchronous code by putting it into red-coloured rectangles and dropping the red rectangles inside of non-red rectangles (async Components).  There are two separable issues - (1) explaining to the machine (aka “computer”) what to do and (2) explaining to other humans why 1 was written the way it was.  Frothing aside: operating system processes are simply Greenspun’s 10th Rule bloatware versions of Components.  Code libraries are always red-boxed. Lisp 1.5 anonymous functions are less bloatware-y versions of the basic idea.  Closures are optimized anonymous functions (optimized along exactly one axis (i.e. the fervent, religious belief that “efficiency” can mean only one thing)).  So-called “programming languages” are 1950s IDEs for explaining to stupid machines what to do.  Later, these old-fashioned IDEs were given double-duty by conflating the issues of communicating with dumb machines and of communicating with other humans.  I find it more fruitful to fully separate these 2 issues, then to drape “syntax” (sugar sprinkles) over the manifestations to provide less-glaring results that cover both issues (syntax, to me is: hybrid diagrams (such as Excalidraw, <http:\/\/draw.io|draw.io>, SVG, etc. that encompass text), i.e. text-based programs are but a subset of less-textual programs)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1677633753.693619",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xu+lN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Agreed: coments suck.  The Goal should be to never need to write comments.\n\nFWIW: my solution is to begin with software components.  A Component is asynchronous and owns input ports (green circles) and output ports (yellow circles) and may contain other Components or be attached (via the ports and wires) to other Components. My syntax for a Component is a rectangle (as drawn, say, on a physical whiteboard on a wall). Synchronous code cannot be componentized (easily), so I mark synchronous code by putting it into red-coloured rectangles and dropping the red rectangles inside of non-red rectangles (async Components).  There are two separable issues - (1) explaining to the machine (aka “computer”) what to do and (2) explaining to other humans why 1 was written the way it was.  Frothing aside: operating system processes are simply Greenspun’s 10th Rule bloatware versions of Components.  Code libraries are always red-boxed. Lisp 1.5 anonymous functions are less bloatware-y versions of the basic idea.  Closures are optimized anonymous functions (optimized along exactly one axis (i.e. the fervent, religious belief that “efficiency” can mean only one thing)).  So-called “programming languages” are 1950s IDEs for explaining to stupid machines what to do.  Later, these old-fashioned IDEs were given double-duty by conflating the issues of communicating with dumb machines and of communicating with other humans.  I find it more fruitful to fully separate these 2 issues, then to drape “syntax” (sugar sprinkles) over the manifestations to provide less-glaring results that cover both issues (syntax, to me is: hybrid diagrams (such as Excalidraw, "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/draw.io",
                                "text": "draw.io"
                            },
                            {
                                "type": "text",
                                "text": ", SVG, etc. that encompass text), i.e. text-based programs are but a subset of less-textual programs)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "",
        "files": [
            {
                "id": "F04RTNP070S",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UGWUJUZHT",
        "display_as_bot": false,
        "type": "message",
        "ts": "1677666000.967379",
        "client_msg_id": "05ca3403-0819-49b3-ab05-11e91624b0f4",
        "thread_ts": "1677633753.693619",
        "parent_user_id": "UGWUJUZHT",
        "reactions": [
            {
                "name": "star",
                "users": [
                    "U03R0B9U1GD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1677666072.874489",
        "client_msg_id": "8bcf3adf-687a-4dc1-b933-f9f48fcc3601",
        "text": "[*] meta - ugh I did it again.  My comment should have been a thread attached to the original note,  but, instead it is a note unto itself.  I would normally delete my comment and move it to a thread hung off of the original note, but there are now comments attached to my what-should-have-been-a-comment and I don’t know what to do.  This is an example of bad UI design (Slack’s fault).  Commenting is mode-ful.  Entering the first comment requires a different action than entering subsequent comments.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1677633753.693619",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qEy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[*] meta - ugh I did it again.  My comment should have been a thread attached to the original note,  but, instead it is a note unto itself.  I would normally delete my comment and move it to a thread hung off of the original note, but there are now comments attached to my what-should-have-been-a-comment and I don’t know what to do.  This is an example of bad UI design (Slack’s fault).  Commenting is mode-ful.  Entering the first comment requires a different action than entering subsequent comments."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U03R0B9U1GD",
                    "UC2A2ARPT",
                    "UCUSW7WVD"
                ],
                "count": 3
            },
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03R0B9U1GD",
        "type": "message",
        "ts": "1677666518.996109",
        "client_msg_id": "41e0b91f-9b7e-4afd-b4bd-6286e51773f1",
        "text": "<@UC2A2ARPT> I would love to see this!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "78c476adad42",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-26\/3992499177765_78c476adad42ab6cfe32_72.png",
            "first_name": "Lu",
            "real_name": "Lu Wilson",
            "display_name": "TodePond",
            "team": "T5TCAFTA9",
            "name": "l2wilson94",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1677633753.693619",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ILRPD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I would love to see this!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "beers",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03R0B9U1GD",
        "type": "message",
        "ts": "1677669176.903009",
        "client_msg_id": "92cc6ce9-45e3-4ec5-9b01-86b952e9df9e",
        "text": "Thanks for sharing these thoughts! I really need to take a closer look at some of these examples you reference like Recursive Drawing :eyes:\n\nAlso I'm curious what you mean by \"writing text inside shapes doesn't really work\"? In what way?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "78c476adad42",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-26\/3992499177765_78c476adad42ab6cfe32_72.png",
            "first_name": "Lu",
            "real_name": "Lu Wilson",
            "display_name": "TodePond",
            "team": "T5TCAFTA9",
            "name": "l2wilson94",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1676798153.605919",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cn+m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for sharing these thoughts! I really need to take a closer look at some of these examples you reference like Recursive Drawing "
                            },
                            {
                                "type": "emoji",
                                "name": "eyes",
                                "unicode": "1f440"
                            },
                            {
                                "type": "text",
                                "text": "\n\nAlso I'm curious what you mean by \"writing text inside shapes doesn't really work\"? In what way?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1677689546.725739",
        "client_msg_id": "e1192ed0-ea1d-4df1-b869-9907bfe15e6e",
        "text": "Check out <@UC2A2ARPT>'s <https:\/\/github.com\/ivanreese\/visual-programming-codex|https:\/\/github.com\/ivanreese\/visual-programming-codex>, it's my go-to reference for past projects.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1676798153.605919",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2VWS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Check out "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": "'s "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/ivanreese\/visual-programming-codex",
                                "text": "https:\/\/github.com\/ivanreese\/visual-programming-codex"
                            },
                            {
                                "type": "text",
                                "text": ", it's my go-to reference for past projects."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03R0B9U1GD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1677695118.929019",
        "client_msg_id": "c02f8db9-2b73-4970-ac2c-f92a0662b41e",
        "text": "My lines.love is just klunky. I started out thinking about geometric construction, so it only allows labeling points. My hack has been to label the top-left point to put text inside a box. There are no smarts yet to compute whether text is inside or outside a shape.\n\nMostly it's been good enough to be barely legible for the sorts of things I draw, given how infrequently I feel the need to draw. But I'm sure that's idiosyncratic to just me and nobody else.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1676798153.605919",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4qZl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My lines.love is just klunky. I started out thinking about geometric construction, so it only allows labeling points. My hack has been to label the top-left point to put text inside a box. There are no smarts yet to compute whether text is inside or outside a shape.\n\nMostly it's been good enough to be barely legible for the sorts of things I draw, given how infrequently I feel the need to draw. But I'm sure that's idiosyncratic to just me and nobody else."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1677736810.584969",
        "client_msg_id": "b281824f-bcf2-4779-b37e-368039311394",
        "text": "<@UC2A2ARPT> You would need a reasonably flexible graphical support for that :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1677633753.693619",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UPI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " You would need a reasonably flexible graphical support for that "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]