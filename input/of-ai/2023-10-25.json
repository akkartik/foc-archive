[
    {
        "subtype": "thread_broadcast",
        "user": "U018S42NMMM",
        "thread_ts": "1697339602.755989",
        "root": {
            "user": "USUMN6XLH",
            "type": "message",
            "ts": "1697339602.755989",
            "client_msg_id": "0BBC5912-E854-4D61-8961-E75A478E0E02",
            "text": "i feel like python is very limiting for prompt engg\/agents. anyone else feel this way? maybe we need more expressive languages\/dsls\/languages built with editor in mind (like smalltalk).",
            "team": "T5TCAFTA9",
            "thread_ts": "1697339602.755989",
            "reply_count": 10,
            "reply_users_count": 4,
            "latest_reply": "1698335498.565609",
            "reply_users": [
                "UFEQUBNNT",
                "USUMN6XLH",
                "U059NCQSKJM",
                "U018S42NMMM"
            ],
            "replies": [
                {
                    "user": "UFEQUBNNT",
                    "ts": "1697341145.868509"
                },
                {
                    "user": "USUMN6XLH",
                    "ts": "1697419365.620349"
                },
                {
                    "user": "U059NCQSKJM",
                    "ts": "1697727901.627859"
                },
                {
                    "user": "USUMN6XLH",
                    "ts": "1697729100.804599"
                },
                {
                    "user": "USUMN6XLH",
                    "ts": "1697729116.479399"
                },
                {
                    "user": "USUMN6XLH",
                    "ts": "1697729132.204629"
                },
                {
                    "user": "USUMN6XLH",
                    "ts": "1697729137.438309"
                },
                {
                    "user": "UFEQUBNNT",
                    "ts": "1697734659.136739"
                },
                {
                    "user": "U018S42NMMM",
                    "ts": "1698302802.189089"
                },
                {
                    "user": "UFEQUBNNT",
                    "ts": "1698335498.565609"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "F9v1X",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "i feel like python is very limiting for prompt engg\/agents. anyone else feel this way? maybe we need more expressive languages\/dsls\/languages built with editor in mind (like smalltalk)."
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1698302802.189089",
        "client_msg_id": "3427b924-5338-4bdc-96d0-b0bfeb3482e8",
        "text": "Elixir has a good ecosystem for building ML + Web apps including agents all in a single language.\n\nWe are currently a team of Python and Typescript developers, but were discussing Elixir this week and liked what we saw so far.\n\n• Has concurrency and fault-tolerance built-in (WhatsApp backend uses the same VM)\n• Built-in support for async processes simplifies the stack. Don't need separate process (like Celery) for queues or background jobs or recurring jobs.\n• Already has an <https:\/\/elixir-lang.org\/getting-started\/mix-otp\/agent.html|Agent> construct which is a wrapper around state.\n• <https:\/\/github.com\/elixir-nx\/|Numerical Elixir> lets it invoke models directly (using GPUs while supporting batching, partitioning and streaming)\n• <https:\/\/hexdocs.pm\/phoenix_live_view\/welcome.html#example|Phoenix LiveView> (which uses Websockets to stream HTML down to the client) simplifies creation of dynamic webapps while keeping all state management on the server. <https:\/\/phoenixframework.org\/|Phoenix> is the web application framework.\n• <https:\/\/hexdocs.pm\/phoenix\/ecto.html|Ecto> provides data validation and persistence\n• <https:\/\/livebook.dev\/|Livebook> is an interactive notebook\n• <https:\/\/news.livebook.dev\/announcing-bumblebee-gpt2-stable-diffusion-and-more-in-elixir-3Op73O|Bumblebee> - provides easy access to pre-trained models\nA couple of demos to showcase the capabilities of this stack:\n• LiveView with Phoenix to create a single-page app without writing Javascript: <https:\/\/youtu.be\/MZvmYaFkNJI>\n• NX, Livebook and Bumblebee to use ML models: <https:\/\/youtu.be\/g3oyh3g1AtQ>\n",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6gaaR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Elixir has a good ecosystem for building ML + Web apps including agents all in a single language.\n\nWe are currently a team of Python and Typescript developers, but were discussing Elixir this week and liked what we saw so far.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Has concurrency and fault-tolerance built-in (WhatsApp backend uses the same VM)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Built-in support for async processes simplifies the stack. Don't need separate process (like Celery) for queues or background jobs or recurring jobs."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Already has an "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/elixir-lang.org\/getting-started\/mix-otp\/agent.html",
                                        "text": "Agent"
                                    },
                                    {
                                        "type": "text",
                                        "text": " construct which is a wrapper around state."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/elixir-nx\/",
                                        "text": "Numerical Elixir"
                                    },
                                    {
                                        "type": "text",
                                        "text": " lets it invoke models directly (using GPUs while supporting batching, partitioning and streaming)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/hexdocs.pm\/phoenix_live_view\/welcome.html#example",
                                        "text": "Phoenix LiveView"
                                    },
                                    {
                                        "type": "text",
                                        "text": " (which uses Websockets to stream HTML down to the client) simplifies creation of dynamic webapps while keeping all state management on the server. "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/phoenixframework.org\/",
                                        "text": "Phoenix"
                                    },
                                    {
                                        "type": "text",
                                        "text": " is the web application framework."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/hexdocs.pm\/phoenix\/ecto.html",
                                        "text": "Ecto"
                                    },
                                    {
                                        "type": "text",
                                        "text": " provides data validation and persistence"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/livebook.dev\/",
                                        "text": "Livebook"
                                    },
                                    {
                                        "type": "text",
                                        "text": " is an interactive notebook"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/news.livebook.dev\/announcing-bumblebee-gpt2-stable-diffusion-and-more-in-elixir-3Op73O",
                                        "text": "Bumblebee"
                                    },
                                    {
                                        "type": "text",
                                        "text": " - provides easy access to pre-trained models"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nA couple of demos to showcase the capabilities of this stack:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "LiveView with Phoenix to create a single-page app without writing Javascript: "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/youtu.be\/MZvmYaFkNJI"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "NX, Livebook and Bumblebee to use ML models: "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/youtu.be\/g3oyh3g1AtQ"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "USUMN6XLH",
                    "UCUSW7WVD",
                    "UFEQUBNNT"
                ],
                "count": 3
            }
        ]
    }
]