[
    {
        "user": "UKFNXF0F9",
        "type": "message",
        "ts": "1624971716.181300",
        "client_msg_id": "9b24cfa1-82ba-4aea-a680-66232e120fe6",
        "text": "<https:\/\/pypi.org\/project\/viztracer\/|https:\/\/pypi.org\/project\/viztracer\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5651704a60f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/15651704a60f7ef1539f9b1fa2506188.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "taowen",
            "display_name": "taowen",
            "team": "T5TCAFTA9",
            "name": "taowen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1624894061.177100",
        "parent_user_id": "UAJKEBGP8",
        "attachments": [
            {
                "service_name": "PyPI",
                "title": "viztracer",
                "title_link": "https:\/\/pypi.org\/project\/viztracer\/",
                "text": "A debugging and profiling tool that can trace and visualize python code execution",
                "fallback": "PyPI: viztracer",
                "image_url": "https:\/\/pypi.org\/static\/images\/twitter.90915068.jpg",
                "from_url": "https:\/\/pypi.org\/project\/viztracer\/",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 13245,
                "service_icon": "https:\/\/pypi.org\/static\/images\/favicon.6a76275d.ico",
                "id": 1,
                "original_url": "https:\/\/pypi.org\/project\/viztracer\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FdUw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/pypi.org\/project\/viztracer\/",
                                "text": "https:\/\/pypi.org\/project\/viztracer\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1624972859.181600",
        "client_msg_id": "365e6a33-4e0c-4c95-9570-9b1cff5eaecb",
        "text": "I feel you.  Every now and then I do a janky one-off in Ruby using its TracePoint API, which never becomes more than a one-off mainly because you cannot easily trace object modifications.\n\nFor code understanding, step debuggers would be more useful if you could step backwards.  Stepping forward often has the problem of `setup_a_thing.do_a_thing` where `setup_a_thing` is long, convoluted, uninteresting, and `do_a_thing` mostly only looks up something obscure that comes at the end of `setup_a_thing`.\n\nSo it would be best to jump into `setup_a_thing` then cross jump back to where `@that_store` gets setup.\n\nA few years (years, yikes!) we prototyped a nifty way to deal with traces in VR.  Basically, the trace was a super long ribbon of events, and then you had automatic layout that would fold bits to be next to each other.  For example, every time an object is referenced.  This actually actually allows you to see the object graph where edges represent communication patterns.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1624894061.177100",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xUJqt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel you.  Every now and then I do a janky one-off in Ruby using its TracePoint API, which never becomes more than a one-off mainly because you cannot easily trace object modifications.\n\nFor code understanding, step debuggers would be more useful if you could step backwards.  Stepping forward often has the problem of "
                            },
                            {
                                "type": "text",
                                "text": "setup_a_thing.do_a_thing",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " where "
                            },
                            {
                                "type": "text",
                                "text": "setup_a_thing",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is long, convoluted, uninteresting, and "
                            },
                            {
                                "type": "text",
                                "text": "do_a_thing",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " mostly only looks up something obscure that comes at the end of "
                            },
                            {
                                "type": "text",
                                "text": "setup_a_thing",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nSo it would be best to jump into "
                            },
                            {
                                "type": "text",
                                "text": "setup_a_thing",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " then cross jump back to where "
                            },
                            {
                                "type": "text",
                                "text": "@that_store",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " gets setup.\n\nA few years (years, yikes!) we prototyped a nifty way to deal with traces in VR.  Basically, the trace was a super long ribbon of events, and then you had automatic layout that would fold bits to be next to each other.  For example, every time an object is referenced.  This actually actually allows you to see the object graph where edges represent communication patterns."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0139HUPMQ9",
        "type": "message",
        "ts": "1624977284.182100",
        "client_msg_id": "28af10a7-5359-4f09-a62a-2285610ab1f0",
        "text": "<http:\/\/pythontutor.com\/|Python Tutor> is an interesting tool and could be a source of inspiration for those who are working on similar tools.\n\n<http:\/\/pythontutor.com\/visualize.html#code=def%20listSum%28numbers%29%3A%0A%20%20if%20not%20numbers%3A%0A%20%20%20%20return%200%0A%20%20else%3A%0A%20%20%20%20%28f,%20rest%29%20%3D%20numbers%0A%20%20%20%20return%20f%20%2B%20listSum%28rest%29%0A%0AmyList%20%3D%20%281,%20%282,%20%283,%20None%29%29%29%0Atotal%20%3D%20listSum%28myList%29&amp;cumulative=false&amp;curInstr=0&amp;heapPrimitives=nevernest&amp;mode=display&amp;origin=opt-frontend.js&amp;py=3&amp;rawInputLstJSON=%5B%5D&amp;textReferences=false|Example program>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3dec956efe5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3dec956efe594149cbf027145d37aa47.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "Sverrir",
            "real_name": "Sverrir Thorgeirsson",
            "display_name": "Sverrir Thorgeirsson",
            "team": "T5TCAFTA9",
            "name": "sverrir.thorgeirsson",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1624894061.177100",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sRV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/pythontutor.com\/",
                                "text": "Python Tutor"
                            },
                            {
                                "type": "text",
                                "text": " is an interesting tool and could be a source of inspiration for those who are working on similar tools.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/pythontutor.com\/visualize.html#code=def%20listSum%28numbers%29%3A%0A%20%20if%20not%20numbers%3A%0A%20%20%20%20return%200%0A%20%20else%3A%0A%20%20%20%20%28f,%20rest%29%20%3D%20numbers%0A%20%20%20%20return%20f%20%2B%20listSum%28rest%29%0A%0AmyList%20%3D%20%281,%20%282,%20%283,%20None%29%29%29%0Atotal%20%3D%20listSum%28myList%29&cumulative=false&curInstr=0&heapPrimitives=nevernest&mode=display&origin=opt-frontend.js&py=3&rawInputLstJSON=%5B%5D&textReferences=false",
                                "text": "Example program"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01P8U8FZPH",
        "type": "message",
        "ts": "1624978910.182500",
        "client_msg_id": "fa7f6432-f12e-4238-b7e4-43947073ff5a",
        "text": "<@UA14TGLTC> that VR project sounds awesome haha – Was it ever made public \/ do you have a link to it?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6a6936d557a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-01\/1811900522324_6a6936d557a25e2969f2_72.png",
            "first_name": "Wilhelm",
            "real_name": "Wilhelm Klopp",
            "display_name": "Wilhelm Klopp",
            "team": "T5TCAFTA9",
            "name": "wil.klopp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1624894061.177100",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RiP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " that VR project sounds awesome haha – Was it ever made public \/ do you have a link to it?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]