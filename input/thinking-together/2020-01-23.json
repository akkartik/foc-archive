[
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1579770132.000200",
        "client_msg_id": "fa672497-8ac8-4b06-873b-309e8928cdd6",
        "text": "Excellent talk! great way to start my Thursday morning!!!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579645005.241100",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jD8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Excellent talk! great way to start my Thursday morning!!!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1579770732.001000",
        "client_msg_id": "52e6c238-f2d5-48f6-9685-260be19db2e9",
        "text": "<https:\/\/twobithistory.org\/2018\/05\/27\/semantic-web.html>\n\n```The web we have today is slowly becoming a glorified app store, just the easiest way among many to download software that communicates with distant servers using closed protocols and schemas, making it functionally identical to the software ecosystem that existed before the web. How did we get here? If the effort to build a Semantic Web had succeeded, would the web have looked different today? Or have there been so many forces working against a decentralized web for so long that the Semantic Web was always going to be stillborn?```",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579770732.001000",
        "reply_count": 11,
        "reply_users_count": 8,
        "latest_reply": "1580140477.216200",
        "reply_users": [
            "UBN9AFS0N",
            "UJBAJNFLK",
            "UE6EFEPTQ",
            "UA14TGLTC",
            "UFLN9JFRT",
            "UMWF81HTP",
            "UEQ6M68H0",
            "USF232R18"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1579770861.001300"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1579770981.001500"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1579772804.001700"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1579779601.001900"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1579779802.002100"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1579782022.002300"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1579788382.002500"
            },
            {
                "user": "UFLN9JFRT",
                "ts": "1579791107.004700"
            },
            {
                "user": "UMWF81HTP",
                "ts": "1579841474.022800"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1579922394.116400"
            },
            {
                "user": "USF232R18",
                "ts": "1580140477.216200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "Whatever Happened to the Semantic Web?",
                "title_link": "https:\/\/twobithistory.org\/2018\/05\/27\/semantic-web.html",
                "text": "In 2001, Tim Berners-Lee, inventor of the World Wide Web, published an article in Scientific American.",
                "fallback": "Whatever Happened to the Semantic Web?",
                "thumb_url": "https:\/\/twobithistory.org\/images\/logo.png",
                "from_url": "https:\/\/twobithistory.org\/2018\/05\/27\/semantic-web.html",
                "thumb_width": 128,
                "thumb_height": 128,
                "service_icon": "https:\/\/twobithistory.org\/favicon.ico",
                "service_name": "twobithistory.org",
                "id": 1,
                "original_url": "https:\/\/twobithistory.org\/2018\/05\/27\/semantic-web.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nOFm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/twobithistory.org\/2018\/05\/27\/semantic-web.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The web we have today is slowly becoming a glorified app store, just the easiest way among many to download software that communicates with distant servers using closed protocols and schemas, making it functionally identical to the software ecosystem that existed before the web. How did we get here? If the effort to build a Semantic Web had succeeded, would the web have looked different today? Or have there been so many forces working against a decentralized web for so long that the Semantic Web was always going to be stillborn?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1579770861.001300",
        "client_msg_id": "fe44394f-346e-41c5-bc60-a8cd41a58735",
        "text": "```Cory Doctorow, a blogger and digital rights activist, published an influential essay in 2001 that pointed out the many problems with depending on voluntarily supplied metadata. A world of \"exhaustive, reliable\" metadata would be wonderful, he argued, but such a world was \"a pipe-dream, founded on self-delusion, nerd hubris, and hysterically inflated market opportunities.\"3 Doctorow had found himself in a series of debates over the Semantic Web at tech conferences and wanted to catalog the serious issues that the Semantic Web enthusiasts (Doctorow calls them \"semweb hucksters\") were overlooking.4 The essay, titled \"Metacrap,\" identifies seven problems, among them the obvious fact that most web users were likely to provide either no metadata at all or else lots of misleading metadata meant to draw clicks.```",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579770732.001000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "svNv8",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cory Doctorow, a blogger and digital rights activist, published an influential essay in 2001 that pointed out the many problems with depending on voluntarily supplied metadata. A world of \"exhaustive, reliable\" metadata would be wonderful, he argued, but such a world was \"a pipe-dream, founded on self-delusion, nerd hubris, and hysterically inflated market opportunities.\"3 Doctorow had found himself in a series of debates over the Semantic Web at tech conferences and wanted to catalog the serious issues that the Semantic Web enthusiasts (Doctorow calls them \"semweb hucksters\") were overlooking.4 The essay, titled \"Metacrap,\" identifies seven problems, among them the obvious fact that most web users were likely to provide either no metadata at all or else lots of misleading metadata meant to draw clicks."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1579770981.001500",
        "client_msg_id": "ccd961ce-bfe0-47b0-b278-804badbb6714",
        "text": "```In forums like the World Wide Web Consortium (W3C), a huge amount of effort and discussion went into creating standards before there were any applications out there to standardize. And the standards that emerged from these \"Talmudic debates\" were so abstract that few of them ever saw widespread adoption. The few that did, like XML, were \"uniformly scourges on the planet, offenses against hardworking programmers that have pushed out sensible formats (like JSON) in favor of overly-complicated hairballs with no basis in reality.\" The Semantic Web might have thrived if, like the original web, its standards were eagerly adopted by everyone. But that never happened because—as has been discussed on this blog before—the putative benefits of something like XML are not easy to sell to a programmer when the alternatives are both entirely sufficient and much easier to understand.```",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579770732.001000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3JCCz",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In forums like the World Wide Web Consortium (W3C), a huge amount of effort and discussion went into creating standards before there were any applications out there to standardize. And the standards that emerged from these \"Talmudic debates\" were so abstract that few of them ever saw widespread adoption. The few that did, like XML, were \"uniformly scourges on the planet, offenses against hardworking programmers that have pushed out sensible formats (like JSON) in favor of overly-complicated hairballs with no basis in reality.\" The Semantic Web might have thrived if, like the original web, its standards were eagerly adopted by everyone. But that never happened because—as has been discussed on this blog before—the putative benefits of something like XML are not easy to sell to a programmer when the alternatives are both entirely sufficient and much easier to understand."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1579772804.001700",
        "client_msg_id": "3a1d4899-2c04-4ed3-8d61-89b0d8f762f4",
        "text": "The semantic Web has found some uses in specific domains, such as scientific data annotation, e.g. in bioinformatics. But even if those domains with a good motivation for semantic markup, making people agree on ontologies is a hard problem.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579770732.001000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2jZV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The semantic Web has found some uses in specific domains, such as scientific data annotation, e.g. in bioinformatics. But even if those domains with a good motivation for semantic markup, making people agree on ontologies is a hard problem."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1579779601.001900",
        "client_msg_id": "f150217a-6c31-4a16-a829-f2cd6136e8f3",
        "text": "I believe <http:\/\/schema.org|schema.org> is still going..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579770732.001000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8K6av",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I believe "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/schema.org",
                                "text": "schema.org"
                            },
                            {
                                "type": "text",
                                "text": " is still going.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1579779802.002100",
        "client_msg_id": "2983279b-4c26-424c-8161-54ece5d40eb6",
        "text": "it's mentioned in the article, that's the json\/pragmatic approach after the original w3c effort didn't work",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579770732.001000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eXN9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it's mentioned in the article, that's the json\/pragmatic approach after the original w3c effort didn't work"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1579782022.002300",
        "client_msg_id": "e15c7493-4809-40ec-8c26-697d8c9d7a3e",
        "text": "I should just read the article in future!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579770732.001000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PQH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I should just read the article in future!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wink",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1579788382.002500",
        "client_msg_id": "5b9a29b6-1452-423c-ac49-eeb3f03d6903",
        "text": "I say no as one who liked the semantic web, OWL, and all.  Still I don't think the Semantic Web was ever a contender for maintaining decentralization.  Instead, I refer you to Doctorow's recent writings on adversarial interoperability.  <https:\/\/www.eff.org\/deeplinks\/2019\/10\/adversarial-interoperability>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579770732.001000",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "service_name": "Electronic Frontier Foundation",
                "title": "Adversarial Interoperability",
                "title_link": "https:\/\/www.eff.org\/deeplinks\/2019\/10\/adversarial-interoperability",
                "text": "“Interoperability” is the act of making a new product or service work with an existing product or service: modern civilization depends on the standards and practices that allow you to put any dish into a dishwasher or any USB charger into any car’s cigarette lighter.But interoperability is just the...",
                "fallback": "Electronic Frontier Foundation: Adversarial Interoperability",
                "image_url": "https:\/\/www.eff.org\/files\/banner_library\/interoperable-2.png",
                "image_width": 500,
                "image_height": 250,
                "ts": 1570061096,
                "from_url": "https:\/\/www.eff.org\/deeplinks\/2019\/10\/adversarial-interoperability",
                "image_bytes": 29425,
                "service_icon": "https:\/\/www.eff.org\/sites\/all\/themes\/phoenix\/apple-touch-icon-precomposed-72x72.png",
                "id": 1,
                "original_url": "https:\/\/www.eff.org\/deeplinks\/2019\/10\/adversarial-interoperability"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z3ng5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I say no as one who liked the semantic web, OWL, and all.  Still I don't think the Semantic Web was ever a contender for maintaining decentralization.  Instead, I refer you to Doctorow's recent writings on adversarial interoperability.  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.eff.org\/deeplinks\/2019\/10\/adversarial-interoperability"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J",
                    "UFLN9JFRT",
                    "UJN1TAYEQ"
                ],
                "count": 3
            },
            {
                "name": "+1::skin-tone-4",
                "users": [
                    "UBN9AFS0N",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1579790409.003600",
        "client_msg_id": "1393d2a4-12bd-4d4e-93be-be2de895ffb5",
        "text": "Very interesting blog post about offline first collaborative editing of tree structures, as it is done at\nFigma.\n<https:\/\/www.figma.com\/blog\/how-figmas-multiplayer-technology-works\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579790409.003600",
        "reply_count": 7,
        "reply_users_count": 3,
        "latest_reply": "1580115085.201400",
        "reply_users": [
            "UJ6LDMMN0",
            "UEQ6M68H0",
            "UP00ZLX6G"
        ],
        "replies": [
            {
                "user": "UJ6LDMMN0",
                "ts": "1579790450.003800"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1579790496.004000"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1579790583.004300"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1579808433.010700"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1579814589.011000"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1579814669.011200"
            },
            {
                "user": "UP00ZLX6G",
                "ts": "1580115085.201400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "Figma",
                "title": "How Figma’s multiplayer technology works",
                "title_link": "https:\/\/www.figma.com\/blog\/how-figmas-multiplayer-technology-works\/",
                "text": "A peek into the homegrown solution we built as the first design tool with live collaborative editing.",
                "fallback": "Figma: How Figma’s multiplayer technology works",
                "image_url": "https:\/\/images.ctfassets.net\/1khq4uysbvty\/3SaN8MEae7oMoMLaq2Mq6X\/c28ca638a280444bfb861246e6110f75\/How_We_Built_Multiplayer__1_.png",
                "image_width": 530,
                "image_height": 250,
                "from_url": "https:\/\/www.figma.com\/blog\/how-figmas-multiplayer-technology-works\/",
                "image_bytes": 34856,
                "service_icon": "https:\/\/static.figma.com\/app\/icon\/1\/touch-76.png",
                "id": 1,
                "original_url": "https:\/\/www.figma.com\/blog\/how-figmas-multiplayer-technology-works\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pmMC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very interesting blog post about offline first collaborative editing of tree structures, as it is done at\nFigma.\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.figma.com\/blog\/how-figmas-multiplayer-technology-works\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36",
                    "UC2A2ARPT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1579790450.003800",
        "client_msg_id": "3acfebee-f192-4983-b01c-c1958b6f41a4",
        "text": "It uses a central authority, which relaxes some constraints, but there are very interesting technical considerations also applicable to decentralization (which I am more interest in).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579790409.003600",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E7V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It uses a central authority, which relaxes some constraints, but there are very interesting technical considerations also applicable to decentralization (which I am more interest in)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1579790496.004000",
        "client_msg_id": "e7b4454e-b633-4fd0-bf69-b023f8e0def9",
        "text": "In particular I am happy to see that fractional indexing is used to manage children order. I have planned to use it as well and seeing it in a product like Figma makes me confident about it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579790409.003600",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Dus",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In particular I am happy to see that fractional indexing is used to manage children order. I have planned to use it as well and seeing it in a product like Figma makes me confident about it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1579790583.004300",
        "client_msg_id": "e3a77ca8-9500-4e6d-80f6-c70afa24a0c3",
        "text": "More precisely, I have played a bit with CRDT (Casual Trees, in particular) with the objective to use it for offline first collaborative editing of tree structures, and this article makes me confident in some of my findings (CRDT, fractional indexing and hierarchy as parent id in children) and spots some important points (warn about cycles, and undo strategy).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579790409.003600",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W\/cb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More precisely, I have played a bit with CRDT (Casual Trees, in particular) with the objective to use it for offline first collaborative editing of tree structures, and this article makes me confident in some of my findings (CRDT, fractional indexing and hierarchy as parent id in children) and spots some important points (warn about cycles, and undo strategy)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1579791107.004700",
        "client_msg_id": "a2037222-24db-4449-b010-aebfd31b4f81",
        "text": "Wow fantastic article!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579770732.001000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+gvX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wow fantastic article!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1579792576.005100",
        "client_msg_id": "d10d8a2e-ef6c-4d1c-8093-94bafef2fc1e",
        "text": "<https:\/\/www.youtube.com\/watch?v=Ox5P7QyL774>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Self: The Movie;",
                "title_link": "https:\/\/www.youtube.com\/watch?v=Ox5P7QyL774",
                "author_name": "Jecel Assumpção Jr",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCrGUwjwhuvI_xpRMkR1zw8Q",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/Ox5P7QyL774\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Self: The Movie;",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/Ox5P7QyL774?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/www.youtube.com\/watch?v=Ox5P7QyL774",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=Ox5P7QyL774"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4X+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=Ox5P7QyL774"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UK22Z72L8",
                    "UFLN9JFRT",
                    "ULM3U6275",
                    "UC21F8Q48",
                    "U8A5MS6R1",
                    "UA14TGLTC",
                    "US0B9BNUS",
                    "UHWC9PXBL"
                ],
                "count": 8
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1579807538.010500",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1579841898.000000"
        },
        "client_msg_id": "fb8bbd7a-b4fc-4144-97b4-6cb6d7ad2069",
        "text": "what a great old video. not many videos from this era; back then a camera was super expensive. you can imagine they had a team of 10 people work ing for 4 year, so that's 40 man years worth of work.  Clearly this OOP\/Message passing hybrid  was a  dead end. What they should have been testing, is taking people off the street, giving them a few hours of instruction, and seeing how far they got making something in this tool. They are so in love with features of their tool, i think they forgot that hammers are for other people to use for putting in nails. Not to fondle the hammer and marvel at its comfortable grip.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OPvxm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what a great old video. not many videos from this era; back then a camera was super expensive. you can imagine they had a team of 10 people work ing for 4 year, so that's 40 man years worth of work.  Clearly this OOP\/Message passing hybrid  was a  dead end. What they should have been testing, is taking people off the street, giving them a few hours of instruction, and seeing how far they got making something in this tool. They are so in love with features of their tool, i think they forgot that hammers are for other people to use for putting in nails. Not to fondle the hammer and marvel at its comfortable grip."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFLN9JFRT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1579808433.010700",
        "client_msg_id": "823bafca-d638-4e11-8ce5-565aa4af2dda",
        "text": "Centralized authorities are the way to go to make things like this easy to implement. The Figma people have done a really great job and i predict great success for that firm.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579790409.003600",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LEO05",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Centralized authorities are the way to go to make things like this easy to implement. The Figma people have done a really great job and i predict great success for that firm."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1579814589.011000",
        "client_msg_id": "aa295a4f-cd9a-4a35-86ae-4f48bc101f69",
        "text": "In fact, CRDT is a way to manage concurent editing without a central authority. It is achieved by modelling things as an ordered list of events (an event log) which ordering doesn't depends on an authority. So when several peers communicates their events they all see exactly the same event log, which produce exactly the same document state.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579790409.003600",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "95t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In fact, CRDT is a way to manage concurent editing without a central authority. It is achieved by modelling things as an ordered list of events (an event log) which ordering doesn't depends on an authority. So when several peers communicates their events they all see exactly the same event log, which produce exactly the same document state."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1579814669.011200",
        "client_msg_id": "87e14371-451e-4638-bdc7-772cd282d0f2",
        "text": "I agree Figma has done a great work. With a focus on as simple as possible to make it works.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579790409.003600",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jqL4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree Figma has done a great work. With a focus on as simple as possible to make it works."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1579816311.015200",
        "client_msg_id": "0be27771-5a0f-472e-849a-af610a8e6863",
        "text": "&gt; Clearly this OOP\/Message passing hybrid was a complete dead end.\nNot at all. Self introduced the idea of object oriented programming using prototypes and delegation, instead of classes, and it was highly influential. Prototype-based OOP was the basis for Javascript and Lua. Javascript is the world's most popular language, and Lua is also highly successful. The JIT compilation techniques and the generational garbage collector pioneered by Self are the basis for modern Javascript implementations. The 1987 Self paper by Dave Ungar and Randall Smith was selected as one of the three most influential OOPSLA papers presented between 1986 and 1996.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "immPS",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Clearly this OOP\/Message passing hybrid was a complete dead end."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not at all. Self introduced the idea of object oriented programming using prototypes and delegation, instead of classes, and it was highly influential. Prototype-based OOP was the basis for Javascript and Lua. Javascript is the world's most popular language, and Lua is also highly successful. The JIT compilation techniques and the generational garbage collector pioneered by Self are the basis for modern Javascript implementations. The 1987 Self paper by Dave Ungar and Randall Smith was selected as one of the three most influential OOPSLA papers presented between 1986 and 1996."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UPMFG2571",
        "type": "message",
        "ts": "1579816622.016600",
        "client_msg_id": "85f4fcc5-5c71-46b9-809a-4e20860eb04d",
        "text": "At some point in the video, he mentions that Self \"unoptimized\" the code for easier debugging. Does anyone have more details on how this happened and modern approaches to solve the same problem? It's a pain to debug optimized C crash dumps",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9c42167d8bfa",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-19\/1070853245589_9c42167d8bfa4cbf26ad_72.png",
            "first_name": "Nuno",
            "real_name": "Nuno Leiria",
            "display_name": "Nuno Leiria",
            "team": "T5TCAFTA9",
            "name": "omniparagon",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cq3RK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At some point in the video, he mentions that Self \"unoptimized\" the code for easier debugging. Does anyone have more details on how this happened and modern approaches to solve the same problem? It's a pain to debug optimized C crash dumps"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1579817339.022100",
        "edited": {
            "user": "UKJGU23KP",
            "ts": "1579875280.000000"
        },
        "client_msg_id": "a6023629-69c0-42c6-9933-d51272904f6d",
        "text": "I think it’s the ancestor of the technology in the Oracle\/OpenJDK JVM (the Self VM lead to a VM for Strongtalk, which lead to HotSpot).\n\nI can’t talk about how it worked in Self, but today, the rough idea is that you have an interpreter and a compiler[0]. When you compile the code, you maintain a set of safepoints where the stack of the compiled code can be reliably mapped back into the state of the interpreter. Those safepoints tend to be at loop boundaries, or at points where the assumptions made by the JIT compiler might be invalidated.\n\nIn between safepoints, the compiled code can’t be interrupted by the VM, and can’t be debugged through. But, when you set a breakpoint, it will revert to the interpreter when it reaches that point.\n\n(Btw: there are probably better people to describe this. I hope I haven’t made a mistake above).\n\n [0] in fact, you have two compilers: one fast and less thorough, one slower and more thorough.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dzrH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it’s the ancestor of the technology in the Oracle\/OpenJDK JVM (the Self VM lead to a VM for Strongtalk, which lead to HotSpot).\n\nI can’t talk about how it worked in Self, but today, the rough idea is that you have an interpreter and a compiler[0]. When you compile the code, you maintain a set of safepoints where the stack of the compiled code can be reliably mapped back into the state of the interpreter. Those safepoints tend to be at loop boundaries, or at points where the assumptions made by the JIT compiler might be invalidated.\n\nIn between safepoints, the compiled code can’t be interrupted by the VM, and can’t be debugged through. But, when you set a breakpoint, it will revert to the interpreter when it reaches that point.\n\n(Btw: there are probably better people to describe this. I hope I haven’t made a mistake above).\n\n [0] in fact, you have two compilers: one fast and less thorough, one slower and more thorough."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UM1HH60GN",
                    "UPMFG2571"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UMWF81HTP",
        "type": "message",
        "ts": "1579841474.022800",
        "client_msg_id": "b1e9ef13-71a3-40b4-b388-97570ea901c0",
        "text": "Good to see a history on this, I've wanted to read one for a while! I see parallels here to other human psycho-technological constructs that haven't panned out well, like logical conlanguages and classical AI.\n\nIn the case of logical conlanguages, there's the social problem of people not agreeing on semantics and ontologies, and a tension between specific aesthetic notions of elegance and simplicity that the creators have, coming up against practical and realistic needs of a language speaker, and the psychology they already have. Seems like there may have been similar problems with the semantic web movement.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4022671f3400",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-03\/775814402657_4022671f340032b9eb75_72.jpg",
            "first_name": "yoshiki",
            "real_name": "yoshiki",
            "display_name": "yoshiki",
            "team": "T5TCAFTA9",
            "name": "yoshikischmitz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579770732.001000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IuE9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good to see a history on this, I've wanted to read one for a while! I see parallels here to other human psycho-technological constructs that haven't panned out well, like logical conlanguages and classical AI.\n\nIn the case of logical conlanguages, there's the social problem of people not agreeing on semantics and ontologies, and a tension between specific aesthetic notions of elegance and simplicity that the creators have, coming up against practical and realistic needs of a language speaker, and the psychology they already have. Seems like there may have been similar problems with the semantic web movement."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP6G25H35",
        "type": "message",
        "ts": "1579842248.028100",
        "client_msg_id": "c284c0fa-9b5b-4df9-914f-a9637eb10aca",
        "text": "Grace Hopper is a classic -  she has a nice split between Data Processing and Math - she explains the history and how calculation of missile trajectory and record keeping tend to need different solutions. (1hour 25min) .. am fairly sure this is the right video, I remember it being long, but well worth watching. <https:\/\/www.youtube.com\/watch?v=ZR0ujwlvbkQ&amp;feature=youtu.be>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "57dceb337de9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-12\/870368572213_57dceb337de9d471d315_72.jpg",
            "first_name": "Eddy",
            "real_name": "Eddy Parkinson",
            "display_name": "Eddy Parkinson",
            "team": "T5TCAFTA9",
            "name": "eddyparkinson",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579645005.241100",
        "parent_user_id": "U8A5MS6R1",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Grace Hopper Lecture",
                "title_link": "https:\/\/www.youtube.com\/watch?v=ZR0ujwlvbkQ&amp;feature=youtu.be",
                "author_name": "MIT Lincoln Laboratory",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCEt4etCj34K9V5ZJipW4C_A",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/ZR0ujwlvbkQ\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Grace Hopper Lecture",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/ZR0ujwlvbkQ?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=ZR0ujwlvbkQ&amp;feature=youtu.be",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=ZR0ujwlvbkQ&amp;feature=youtu.be"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VNoX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Grace Hopper is a classic -  she has a nice split between Data Processing and Math - she explains the history and how calculation of missile trajectory and record keeping tend to need different solutions. (1hour 25min) .. am fairly sure this is the right video, I remember it being long, but well worth watching. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=ZR0ujwlvbkQ&feature=youtu.be"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1579842769.033900",
        "client_msg_id": "6726530e-8ffd-4647-9089-5d42e37232b8",
        "text": "<@UJN1TAYEQ> Javascript is way more directly related to Actionscript 2 and its predecessors than Self. If you look at the libraries for AS2 you can see JS copied the weird quirk of the date function that months start with 0 for january. Javascript is #1 not because of merit, but because dictators like Steve Jobs issued an edict from on high that JS was the only interpreted language permitted in their all important IOS universe and in their browsers. I admit that the V8 engine is one of the marvels of the modern software world; an interpreted language that is within spitting distance of the speed of a highly optimized compiled language, but that doesn't change the fact that JS was hardly designed to be the main programming language for millions of programmers, and carry billions of lines of codes. Its module system is a bungled subset of AS3, and i won't bore you with the myriad other problems of JS. My favorite is that adding a string accidentally into an expression can cause type changes all the way up the call chain, wreaking havoc. Part of the poor quality of modern software can be traced to flabby languages like JS.  I would not call Lua a derivative of Self. Lua was developed independently at the Catholic University in Rio, Brasil. I don't see anything in Self that survived, which is why i call it a dead end.  It was yet another Xerox Parc project that never got commercialized properly. One can argue that Xerox had the worst ratio of ideas commercialized divided by ideas invented, basically near zero. They should make all tech managers watch some kind of training film showing the repeated stupidity of the managers who basically forced their employees to leave and start companies, many of which are way bigger than Xerox. (Xerox has market cap of 8 billion, Adobe 170 billion for example).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fcV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " Javascript is way more directly related to Actionscript 2 and its predecessors than Self. If you look at the libraries for AS2 you can see JS copied the weird quirk of the date function that months start with 0 for january. Javascript is #1 not because of merit, but because dictators like Steve Jobs issued an edict from on high that JS was the only interpreted language permitted in their all important IOS universe and in their browsers. I admit that the V8 engine is one of the marvels of the modern software world; an interpreted language that is within spitting distance of the speed of a highly optimized compiled language, but that doesn't change the fact that JS was hardly designed to be the main programming language for millions of programmers, and carry billions of lines of codes. Its module system is a bungled subset of AS3, and i won't bore you with the myriad other problems of JS. My favorite is that adding a string accidentally into an expression can cause type changes all the way up the call chain, wreaking havoc. Part of the poor quality of modern software can be traced to flabby languages like JS.  I would not call Lua a derivative of Self. Lua was developed independently at the Catholic University in Rio, Brasil. I don't see anything in Self that survived, which is why i call it a dead end.  It was yet another Xerox Parc project that never got commercialized properly. One can argue that Xerox had the worst ratio of ideas commercialized divided by ideas invented, basically near zero. They should make all tech managers watch some kind of training film showing the repeated stupidity of the managers who basically forced their employees to leave and start companies, many of which are way bigger than Xerox. (Xerox has market cap of 8 billion, Adobe 170 billion for example)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1579843024.034000",
        "client_msg_id": "38159e21-6bef-4e1d-b81e-e82888a585a3",
        "text": "A bright, entertaining woman, but COBOL was hideous, one of the most verbose languages ever devised.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579645005.241100",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rGG4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A bright, entertaining woman, but COBOL was hideous, one of the most verbose languages ever devised."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1579844885.034500",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1579845083.000000"
        },
        "client_msg_id": "5cb60445-d502-4d9e-afb0-6dc53b881c02",
        "text": "JS predates ActionScript by 3 years..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EHCWh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "JS predates ActionScript by 3 years.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1579845088.035700",
        "client_msg_id": "142652b5-35c7-4a1f-a2bc-c29d047865a6",
        "text": "\"Given the process that created JavaScript and made it a de facto standard, we deserve something far worse.\" — Douglas Crockford\n\n\"Lua is best described as a closed-development, open-source project.  Lua is not developed in a collaborative way. ... Lua provides mechanism not policy. ... Instead of littering the language with lots of features, we provided ways for users to program the features themselves, in the way they wanted them, and only for those features they needed. ... Most successful languages are raised rather than designed. ... We include a new feature in Lua only when all three of us agree.\" — The Evolution of Lua",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5uz6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Given the process that created JavaScript and made it a de facto standard, we deserve something far worse.\" — Douglas Crockford\n\n\"Lua is best described as a closed-development, open-source project.  Lua is not developed in a collaborative way. ... Lua provides mechanism not policy. ... Instead of littering the language with lots of features, we provided ways for users to program the features themselves, in the way they wanted them, and only for those features they needed. ... Most successful languages are raised rather than designed. ... We include a new feature in Lua only when all three of us agree.\" — The Evolution of Lua"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1579848082.043600",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1579848120.000000"
        },
        "client_msg_id": "24F8BB74-F46C-49A9-AF83-949CA7B4DEC2",
        "text": "JS and Lua feel to me to be more related to Netwonscript which was inspired by Self, but maybe this is just convergent evolution. I agree with Edward that JS is far from an ideal high level language, but it has most of the high level features one might want to build on (besides coroutines) and feels cleaner (to me) than many others (Perl, Python, Ruby, Java). ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n5MIJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "JS and Lua feel to me to be more related to Netwonscript which was inspired by Self, but maybe this is just convergent evolution. I agree with Edward that JS is far from an ideal high level language, but it has most of the high level features one might want to build on (besides coroutines) and feels cleaner (to me) than many others (Perl, Python, Ruby, Java). "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1579848639.045500",
        "client_msg_id": "937f3feb-61fc-40bb-aebb-55451d572fc7",
        "text": "Coming back to the static\/dynamic typing conversation of a few days ago (ephemerality thy name is Slack), what do yinz think of:\n```static void m(String s) {\n\tSystem.out.println(\"String\");\n}\n\nstatic void m(Object o) {\n\tSystem.out.println(\"String\");\n}\n\npublic static void main(String[] args) {\n\tString s = \"s\";\n\tObject o = s;\n\tm(s); \/\/ prints \"String\"\n\tm(o); \/\/ prints \"Object\n}```",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p=ipq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Coming back to the static\/dynamic typing conversation of a few days ago (ephemerality thy name is Slack), what do yinz think of:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "static void m(String s) {\n\tSystem.out.println(\"String\");\n}\n\nstatic void m(Object o) {\n\tSystem.out.println(\"String\");\n}\n\npublic static void main(String[] args) {\n\tString s = \"s\";\n\tObject o = s;\n\tm(s); \/\/ prints \"String\"\n\tm(o); \/\/ prints \"Object\n}"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]