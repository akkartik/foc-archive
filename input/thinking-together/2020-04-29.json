[
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1588171102.328100",
        "edited": {
            "user": "UE0ETTCG7",
            "ts": "1588171117.000000"
        },
        "client_msg_id": "096f72f2-c495-4ee3-9513-3265ec54c562",
        "text": "Love the programming language question. It would also be cool to do a question about tools for thought in general, but I'm struggling to figure out how to ask it in a useful manner. Maybe someone else can figure out a good way. Here's how I would phrase the problem: When you say \"Tools for thought\", I personally don't even quite know what that means. E.g., if you were to write a (SEO-title ready) blog post, here are the top ten tools for thought, what would be on that list?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588093664.319300",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oWg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Love the programming language question. It would also be cool to do a question about tools for thought in general, but I'm struggling to figure out how to ask it in a useful manner. Maybe someone else can figure out a good way. Here's how I would phrase the problem: When you say \"Tools for thought\", I personally don't even quite know what that means. E.g., if you were to write a (SEO-title ready) blog post, here are the top ten tools for thought, what would be on that list?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKDM3GLAJ",
        "type": "message",
        "ts": "1588186429.337500",
        "client_msg_id": "6849f247-72ca-4f09-8bf2-81e0d2874e06",
        "text": "Lately I’ve been working on and thinking about gui layout. I’m building a gui builder, and I’m trying to figure out what the interface should be between parent and child components to allow for maximum flexibility of layouts while still having things mostly just work when they get combined. I’ve been taking inspiration from the existing gui toolkits (html\/css, QT, GTK, WinForms), and from more fanciful gui designs (the iron man interfaces, rainmeter skins). I’m trying to understand what tradeoffs are being made in these systems in a holistic way. Like, what layouts are expressible. I would like to generalize away from are the heavy focus on rectilinearity. Things I’ve been imagining are force-based layout algorithms, and some sort of path-based deformation\/matching between child and parent, but they’re just thoughts for now. Has anybody come across any literature on these sorts of topics? The only thing I’ve come across is constraint-solvers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "34e7a55348e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-01-04\/893378739792_34e7a55348e8c86c1901_72.jpg",
            "first_name": "",
            "real_name": "Jared Windover",
            "display_name": "Jared Windover",
            "team": "T5TCAFTA9",
            "name": "jaredwindover",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "reply_count": 24,
        "reply_users_count": 9,
        "latest_reply": "1588683364.033500",
        "reply_users": [
            "UC2A2ARPT",
            "UKDM3GLAJ",
            "UN9SCH5RD",
            "UA14TGLTC",
            "UEQ6M68H0",
            "U5STGTB3J",
            "U0119RRB1MK",
            "U71PMQ1V0",
            "U7C7B75R6"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1588186711.337700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1588187484.338300"
            },
            {
                "user": "UKDM3GLAJ",
                "ts": "1588187870.339800"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1588188956.340000"
            },
            {
                "user": "UKDM3GLAJ",
                "ts": "1588190472.340400"
            },
            {
                "user": "UN9SCH5RD",
                "ts": "1588213760.343900"
            },
            {
                "user": "UN9SCH5RD",
                "ts": "1588213816.344100"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1588216162.344800"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1588235865.345300"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1588239050.350000"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1588239733.357700"
            },
            {
                "user": "U0119RRB1MK",
                "ts": "1588247920.358200"
            },
            {
                "user": "UKDM3GLAJ",
                "ts": "1588258475.359200"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1588289985.379300"
            },
            {
                "user": "UN9SCH5RD",
                "ts": "1588296858.381600"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1588307788.387300"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1588315794.392100"
            },
            {
                "user": "UKDM3GLAJ",
                "ts": "1588363414.410300"
            },
            {
                "user": "UKDM3GLAJ",
                "ts": "1588363543.410500"
            },
            {
                "user": "UKDM3GLAJ",
                "ts": "1588363837.411000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1588365121.411400"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1588375177.412500"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1588626131.001100"
            },
            {
                "user": "UKDM3GLAJ",
                "ts": "1588683364.033500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "na8zS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lately I’ve been working on and thinking about gui layout. I’m building a gui builder, and I’m trying to figure out what the interface should be between parent and child components to allow for maximum flexibility of layouts while still having things mostly just work when they get combined. I’ve been taking inspiration from the existing gui toolkits (html\/css, QT, GTK, WinForms), and from more fanciful gui designs (the iron man interfaces, rainmeter skins). I’m trying to understand what tradeoffs are being made in these systems in a holistic way. Like, what layouts are expressible. I would like to generalize away from are the heavy focus on rectilinearity. Things I’ve been imagining are force-based layout algorithms, and some sort of path-based deformation\/matching between child and parent, but they’re just thoughts for now. Has anybody come across any literature on these sorts of topics? The only thing I’ve come across is constraint-solvers."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1588186711.337700",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1588187593.000000"
        },
        "client_msg_id": "ac4d0f9c-03a3-474a-9972-c4f4cb4efedc",
        "text": "Here's a question that has usefully guided my thinking on the subject: Have you ever seen a force-directed GUI layout that looked good?\n\nI haven't, so what I've pivoted toward is \"make the tools really good, so it's easy to design a nice layout\" rather than \"make the layout happen automagically\".\n\nNot sure if you'd find this framing helpful, but it might help you narrow what sort of research is relevant. To me, a force-directed layout is appropriate for something like data-viz, where you can be a little loosey-goosey about where things end up. In a GUI, you generally care a lot more about getting a result that _feels good_ in a way that's hard to encode algorithmically.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A8D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's a question that has usefully guided my thinking on the subject: Have you ever seen a force-directed GUI layout that looked good?\n\nI haven't, so what I've pivoted toward is \"make the tools really good, so it's easy to design a nice layout\" rather than \"make the layout happen automagically\".\n\nNot sure if you'd find this framing helpful, but it might help you narrow what sort of research is relevant. To me, a force-directed layout is appropriate for something like data-viz, where you can be a little loosey-goosey about where things end up. In a GUI, you generally care a lot more about getting a result that "
                            },
                            {
                                "type": "text",
                                "text": "feels good",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in a way that's hard to encode algorithmically."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1588187484.338300",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1588187493.000000"
        },
        "client_msg_id": "24271255-9cf4-493e-818e-74ef20d0be97",
        "text": "As for literature... <https:\/\/www.youtube.com\/watch?v=KfxE99eN44c> and <https:\/\/www.youtube.com\/watch?v=0msyWHrw40A> were posted here (IIRC) a few months ago. Kevin Lynagh was also doing a lot of research in this area for <https:\/\/subformapp.com>, so he might be worth reaching out to. (He was also on the podcast: <https:\/\/futureofcoding.org\/episodes\/025>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PS4V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As for literature... "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=KfxE99eN44c"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=0msyWHrw40A"
                            },
                            {
                                "type": "text",
                                "text": " were posted here (IIRC) a few months ago. Kevin Lynagh was also doing a lot of research in this area for "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/subformapp.com"
                            },
                            {
                                "type": "text",
                                "text": ", so he might be worth reaching out to. (He was also on the podcast: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.org\/episodes\/025"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "ULM3U6275",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1588187785.339300",
        "client_msg_id": "d9504151-2dec-4f47-a4df-02d80e2f2580",
        "text": "hah, love that the intersection of {PL theory, compilers} x {bret victor} seems to be the smallest",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588093664.319300",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Uf14",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "hah, love that the intersection of {PL theory, compilers} x {bret victor} seems to be the smallest"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UKDM3GLAJ",
        "type": "message",
        "ts": "1588187870.339800",
        "client_msg_id": "f2f082dc-ee90-48c4-bb00-316daa03558e",
        "text": "Nice links! Will definitely take a look at those. I guess the thing that’s leading my thinking in a more automatic direction is I’m picturing an ecosystem and sort of appstore of components. I want somebody to be able to develop a parent component without knowing what type of components it’s going to contain, and somebody else to develop a child component without knowing what type of container it will be put inside (or what siblings it will have), and for that to _just work_. Or I want to figure out why that’s wrong.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "34e7a55348e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-01-04\/893378739792_34e7a55348e8c86c1901_72.jpg",
            "first_name": "",
            "real_name": "Jared Windover",
            "display_name": "Jared Windover",
            "team": "T5TCAFTA9",
            "name": "jaredwindover",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V2X5E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice links! Will definitely take a look at those. I guess the thing that’s leading my thinking in a more automatic direction is I’m picturing an ecosystem and sort of appstore of components. I want somebody to be able to develop a parent component without knowing what type of components it’s going to contain, and somebody else to develop a child component without knowing what type of container it will be put inside (or what siblings it will have), and for that to "
                            },
                            {
                                "type": "text",
                                "text": "just work",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Or I want to figure out why that’s wrong."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1588188956.340000",
        "client_msg_id": "93d179e1-0ce4-44de-97b9-2592c168704f",
        "text": "Follow-up question — when you say \"path-based deformation\/matching\", what do you mean by path? Like, the conceptual path to the element in the hierarchy (like CSS selectors) or some sort of visual path in the layout (like aligning things to splines)?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AmM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Follow-up question — when you say \"path-based deformation\/matching\", what do you mean by path? Like, the conceptual path to the element in the hierarchy (like CSS selectors) or some sort of visual path in the layout (like aligning things to splines)?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKDM3GLAJ",
        "type": "message",
        "ts": "1588190472.340400",
        "client_msg_id": "5cd7f4c0-f477-4e58-b3aa-092e10fdca31",
        "text": "Along the non-rectilinear idea, a parent telling the child, I can give you this shape to display yourself in (maybe a rectangle, maybe something else), and the child either rendering according to that, or saying, I’d really like to be this shape, and some sort of middle ground being achieved. Path in the visual path\/SVG sense.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "34e7a55348e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-01-04\/893378739792_34e7a55348e8c86c1901_72.jpg",
            "first_name": "",
            "real_name": "Jared Windover",
            "display_name": "Jared Windover",
            "team": "T5TCAFTA9",
            "name": "jaredwindover",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hoAT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Along the non-rectilinear idea, a parent telling the child, I can give you this shape to display yourself in (maybe a rectangle, maybe something else), and the child either rendering according to that, or saying, I’d really like to be this shape, and some sort of middle ground being achieved. Path in the visual path\/SVG sense."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1588200187.342200",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1588200424.000000"
        },
        "client_msg_id": "1642aa61-15a2-4ffe-9870-d217dc8b8fbf",
        "text": "Regardless of what kind of election it is, I always prefer \"approval voting\" (\"Which of these do you like?\") over \"first-past-the-post\" (\"Which is your favorite?\"). One way to look at it is that, if there are 16 questions, \"Which is your favorite\" gathers 4 bits of information while \"which of these do you like?\" gathers 16 bits: it is more informative, both theoretically and practically.\n\nYou can do even better with Score Voting: \"On a scale of 0 to 10, how interested are you in each of these topics?\"\n\nP.S. How come I didn't know that a community survey exists?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588014850.297100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r=kBD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regardless of what kind of election it is, I always prefer \"approval voting\" (\"Which of these do you like?\") over \"first-past-the-post\" (\"Which is your favorite?\"). One way to look at it is that, if there are 16 questions, \"Which is your favorite\" gathers 4 bits of information while \"which of these do you like?\" gathers 16 bits: it is more informative, both theoretically and practically.\n\nYou can do even better with Score Voting: \"On a scale of 0 to 10, how interested are you in each of these topics?\"\n\nP.S. How come I didn't know that a community survey exists?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UR482RFPY",
        "type": "message",
        "ts": "1588207423.343200",
        "client_msg_id": "3c899cb9-08e2-4bc5-a227-cd24c3665392",
        "text": "Thanks all for these examples -- some really cool work in this area that I wasn't aware of!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0c567409952",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0c5674099527c19ca0eccac4f2309515.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Paul Butler",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "paulgb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588031436.305800",
        "parent_user_id": "UR482RFPY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9v+OG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks all for these examples -- some really cool work in this area that I wasn't aware of!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UR482RFPY",
        "type": "message",
        "ts": "1588207797.343400",
        "client_msg_id": "74047495-7719-439e-81d5-5e8f3fb86589",
        "text": "<@U010RH58PL7> this is a really useful post, do you mind if I share a link to it? (I'm not sure what the etiquette is with substack deep links because I understand it to be unindexed content :slightly_smiling_face:)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0c567409952",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0c5674099527c19ca0eccac4f2309515.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Paul Butler",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "paulgb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588031436.305800",
        "parent_user_id": "UR482RFPY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oQdP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U010RH58PL7"
                            },
                            {
                                "type": "text",
                                "text": " this is a really useful post, do you mind if I share a link to it? (I'm not sure what the etiquette is with substack deep links because I understand it to be unindexed content "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1588213760.343900",
        "client_msg_id": "57ba102f-711f-408b-981e-b8b08793ca9e",
        "text": "can you do away with the notion of parent-child? perhaps you could think in terms of clustering things, scrolling, zooming, connecting, etc. All components could live at the same level instead of being nested in one another",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/aN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "can you do away with the notion of parent-child? perhaps you could think in terms of clustering things, scrolling, zooming, connecting, etc. All components could live at the same level instead of being nested in one another"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKDM3GLAJ",
                    "U7C7B75R6"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1588213816.344100",
        "client_msg_id": "0cd1e831-6439-4c62-929b-3462b26ea873",
        "text": "since you are thinking ironman your screen would be potentially infinite... you would have to find a way to focus the desired cluster inside the viewport",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e=w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "since you are thinking ironman your screen would be potentially infinite... you would have to find a way to focus the desired cluster inside the viewport"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1588215488.344300",
        "client_msg_id": "b8e5348a-2046-4eb7-80a2-7d5ad8c45b17",
        "text": "One thing with \"first-past-the-post\" voting as <@UD6EXQVM0> called it is that similar things end up competing.  This could explain why Visual Programming is high and Block Languages is low.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588014850.297100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n=r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One thing with \"first-past-the-post\" voting as "
                            },
                            {
                                "type": "user",
                                "user_id": "UD6EXQVM0"
                            },
                            {
                                "type": "text",
                                "text": " called it is that similar things end up competing.  This could explain why Visual Programming is high and Block Languages is low."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1588215552.344500",
        "client_msg_id": "e61a370e-d343-430a-ac80-0fe9f712a7dc",
        "text": "If we do choose a different way to ask questions next time, it might make sense to also have the old way to offer continuity.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588014850.297100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "frO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If we do choose a different way to ask questions next time, it might make sense to also have the old way to offer continuity."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1588216162.344800",
        "client_msg_id": "00d19bdd-1a1e-4550-84d3-fdce0116f65e",
        "text": "The trick with constraint layout systems is that they're often too complicated to reason about reliably.  You don't know who is in charge: the container or the content.  Simultaneously, they are often too rigid.  You discover you want two things to lineup cross-hierarchy, and your kind of out of luck.  What to do then?  Give feedback.  Explain why a thing ends up the way it does.  Then make it easy to give examples of what you want, which may be realized in more than one way.\n\nBrowsers have been getting better with explaining CSS, but not without eliminating rage inducing headaches.  For instance, it might be hard to select a border in order to determine where it is coming from.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fvpC4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The trick with constraint layout systems is that they're often too complicated to reason about reliably.  You don't know who is in charge: the container or the content.  Simultaneously, they are often too rigid.  You discover you want two things to lineup cross-hierarchy, and your kind of out of luck.  What to do then?  Give feedback.  Explain why a thing ends up the way it does.  Then make it easy to give examples of what you want, which may be realized in more than one way.\n\nBrowsers have been getting better with explaining CSS, but not without eliminating rage inducing headaches.  For instance, it might be hard to select a border in order to determine where it is coming from."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]