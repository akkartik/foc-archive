[
    {
        "text": "Hi, this week a text-only update : the goal I had this week was to implement a more real-life use-case and use that to improve and extend the editor. What better in this covid-19 period then a small dashboard to show world-wide covid-19 statistics using a countries dropdown and sub selection by province if there are any,  and show that in a chart. I use <http:\/\/api.covid19api.com|api.covid19api.com> to retrieve the data. I added some tasks\/node-types to filter\/sort\/group\/select the data that is being retrieved. Since the flowrunner that I build is payload based, it’s all about manipulating\/adding properties to the payload each node receives using these new tasks. The payload is a simple javascript object in the web-playground implementation of the editor.\nThe output is shown in a chart using a chart node that uses the echarts npm package and it is also configured by adding the full json configuration to the payload and filling the data based on the input payload.\nFunctionality of this “covid-19 dashboard” is still limited, but I will extend the current flow with more functionalities like selecting start and enddates. You can see the current flow in the image.",
        "files": [
            {
                "id": "F01GM6Y9CP3",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "U0123H7JRDM",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hkh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi, this week a text-only update : the goal I had this week was to implement a more real-life use-case and use that to improve and extend the editor. What better in this covid-19 period then a small dashboard to show world-wide covid-19 statistics using a countries dropdown and sub selection by province if there are any,  and show that in a chart. I use "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/api.covid19api.com",
                                "text": "api.covid19api.com"
                            },
                            {
                                "type": "text",
                                "text": " to retrieve the data. I added some tasks\/node-types to filter\/sort\/group\/select the data that is being retrieved. Since the flowrunner that I build is payload based, it’s all about manipulating\/adding properties to the payload each node receives using these new tasks. The payload is a simple javascript object in the web-playground implementation of the editor.\nThe output is shown in a chart using a chart node that uses the echarts npm package and it is also configured by adding the full json configuration to the payload and filling the data based on the input payload.\nFunctionality of this “covid-19 dashboard” is still limited, but I will extend the current flow with more functionalities like selecting start and enddates. You can see the current flow in the image."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1607191079.144800",
        "thread_ts": "1607191079.144800",
        "reply_count": 2,
        "reply_users_count": 1,
        "latest_reply": "1607251206.145600",
        "reply_users": [
            "U0123H7JRDM"
        ],
        "replies": [
            {
                "user": "U0123H7JRDM",
                "ts": "1607191977.145100"
            },
            {
                "user": "U0123H7JRDM",
                "ts": "1607251206.145600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "UJ6LDMMN0",
                    "U019PRL1BNU"
                ],
                "count": 3
            }
        ]
    },
    {
        "text": "This is the ui-view of the flow without all the nodes that manipulate the incoming data\/payloads :",
        "files": [
            {
                "id": "F01GENYR3J8",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "U0123H7JRDM",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uoo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is the ui-view of the flow without all the nodes that manipulate the incoming data\/payloads :"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1607191977.145100",
        "thread_ts": "1607191079.144800",
        "parent_user_id": "U0123H7JRDM"
    }
]