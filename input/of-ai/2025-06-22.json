[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1750589693.836129",
        "client_msg_id": "8bb78b23-d7bd-4e5e-8c28-eee370de34d3",
        "text": "<@U04DZ850WRW> Been busy, yet eager to elaborate.  My \"don’t want to write words at all\" project involves a non-symbolic programming system.  What would that even mean?  For starters, I'm trying to steer clear of it being a language, not that this is the best choice but for fun and to explore here-be-dragons parts of the possibility landscape.  It's relatively easy to import familiar floral faunal concepts.  The question is what grows wild?  What philosophical, mathematical, and practical challenges come in a computational world without words?\n\nPractically speaking spacial computing (VR and AR) makes the journey possible.  Compared to screens, 3D gives you a lot more space to fit things and many more degrees of freedom for interaction, which ends up mattering even more.  I started on this nonsense project when early VR headsets that couldn't comfortably render text.  What if we didn't need it text, icons, or anything like it?\n\nMy motivating philosophy comes from digital computers being brittle: flip a bit and things break.  What could we get from building on a more analog, continuous, smooth substrate?\n\nLet me describe my latest toy example... Suppose you have a bunch of tetrahedral dice in a box on the table.  Pick one out.  I mean with your fingers.  Drop it on the table.  Pick out another set it next to the first.  Rotate it so that that a different corner is up.  Pick out a third.  Orient it differently.  Now we have a little row.  The system, as editors do more and more these days, suspects that you'll want to keep adding putting dice in the row.  So autocomplete one more.  It might guess that you want a different face up on each.  It might guess you're trying to do something else.  I'm working on how to display these constraints and adjust their weights.  If I was satisfied with my answers, I'd be publishing this work rather than hinting at it here.\n\nOne thing to do is select row of four dice and copy it.  Pick it up rotate it to be a column and set it so that first die in the row overlaps with the first die in the column.  Push those two dice together and the'll unify, it makes the first die in the row and in the column the same die.  So now when you spin it, the other six spin, tending to settle so that the dice in the row and the dice in the column are all distinct.  I hope you see where this is going?\n\nMake another column.  This time unify the second die in the first row with first die in the second column.  Repeat twice more.  And this is not yet a latin square.  A way to transfer the row constraints is to again copy the first row, drop it on what is now a second row, and unify the four dice.  Repeat twice more.\n\nThe next idea I've played with here is being able to group the four dice in a row or column as an entity and then create distinctness constraints across rows and columns so that in the end all sixteen rows and columns read forwards and backwards have to be distinct.\n\nAnd then this all setup for the math I want to do with these sorts of things, which is to see the symmetries between different solutions.  This 4x4 setup has 96 solutions that group in cute ways when to divide by relabeling or rotating or reordering.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1742073993.982859",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D8ZmV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U04DZ850WRW"
                            },
                            {
                                "type": "text",
                                "text": " Been busy, yet eager to elaborate.  My \"don’t want to write words at all\" project involves a non-symbolic programming system.  What would that even mean?  For starters, I'm trying to steer clear of it being a language, not that this is the best choice but for fun and to explore here-be-dragons parts of the possibility landscape.  It's relatively easy to import familiar floral faunal concepts.  The question is what grows wild?  What philosophical, mathematical, and practical challenges come in a computational world without words?\n\nPractically speaking spacial computing (VR and AR) makes the journey possible.  Compared to screens, 3D gives you a lot more space to fit things and many more degrees of freedom for interaction, which ends up mattering even more.  I started on this nonsense project when early VR headsets that couldn't comfortably render text.  What if we didn't need it text, icons, or anything like it?\n\nMy motivating philosophy comes from digital computers being brittle: flip a bit and things break.  What could we get from building on a more analog, continuous, smooth substrate?\n\nLet me describe my latest toy example... Suppose you have a bunch of tetrahedral dice in a box on the table.  Pick one out.  I mean with your fingers.  Drop it on the table.  Pick out another set it next to the first.  Rotate it so that that a different corner is up.  Pick out a third.  Orient it differently.  Now we have a little row.  The system, as editors do more and more these days, suspects that you'll want to keep adding putting dice in the row.  So autocomplete one more.  It might guess that you want a different face up on each.  It might guess you're trying to do something else.  I'm working on how to display these constraints and adjust their weights.  If I was satisfied with my answers, I'd be publishing this work rather than hinting at it here.\n\nOne thing to do is select row of four dice and copy it.  Pick it up rotate it to be a column and set it so that first die in the row overlaps with the first die in the column.  Push those two dice together and the'll unify, it makes the first die in the row and in the column the same die.  So now when you spin it, the other six spin, tending to settle so that the dice in the row and the dice in the column are all distinct.  I hope you see where this is going?\n\nMake another column.  This time unify the second die in the first row with first die in the second column.  Repeat twice more.  And this is not yet a latin square.  A way to transfer the row constraints is to again copy the first row, drop it on what is now a second row, and unify the four dice.  Repeat twice more.\n\nThe next idea I've played with here is being able to group the four dice in a row or column as an entity and then create distinctness constraints across rows and columns so that in the end all sixteen rows and columns read forwards and backwards have to be distinct.\n\nAnd then this all setup for the math I want to do with these sorts of things, which is to see the symmetries between different solutions.  This 4x4 setup has 96 solutions that group in cute ways when to divide by relabeling or rotating or reordering."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]