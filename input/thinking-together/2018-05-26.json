[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1527330395.000071",
        "edited": {
            "user": "UA14TGLTC",
            "ts": "1527330444.000000"
        },
        "text": "<@UAVRZE1UG> That's what you get for sharing your reading list.  :wink:\n\nOn Category Theory, you may find success with \"Seven Sketches in Compositionality: An Invitation to Applied Category Theory\" <https:\/\/arxiv.org\/abs\/1803.05316>.  (Just started though Fong and Spivak have certainly have written other interesting things.)\n\nMath texts often devolve into a trite definition-theorem-proof style with little justification for why those specific definitions, theorems, and proofs are of special interest.  Category Theory doubly so as a framework for understanding mathematical relationships.  Take Awodey's text <https:\/\/www.amazon.com\/Category-Theory-Oxford-Logic-Guides\/dp\/0199237182\/> as an example.\n\nRiehl presents a thorough argument answering \"why Category Theory?\" aimed squarely at mathematicians <https:\/\/www.amazon.com\/Conceptual-Mathematics-First-Introduction-Categories\/dp\/052171916X>.  What about the rest of us?\n\nThere's Lawvere and Schanuel introduction <https:\/\/www.amazon.com\/Conceptual-Mathematics-First-Introduction-Categories\/dp\/052171916X> that amounts to \"gee-whiz sums and products make sense for all sorts of things besides numbers.\"\n\nOn that backdrop, I'm hopeful that Fong and Spivak will prove a more provocative introduction for people like you Guido: more substance than Lawvere and Schanuel, less esoteric than Riehl.\n\n(Some of you may notice that this approach to talking about a book is categorical in the sense that I described one in its relation to others.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ktJr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVRZE1UG"
                            },
                            {
                                "type": "text",
                                "text": " That's what you get for sharing your reading list.  "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            },
                            {
                                "type": "text",
                                "text": "\n\nOn Category Theory, you may find success with \"Seven Sketches in Compositionality: An Invitation to Applied Category Theory\" "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/arxiv.org\/abs\/1803.05316"
                            },
                            {
                                "type": "text",
                                "text": ".  (Just started though Fong and Spivak have certainly have written other interesting things.)\n\nMath texts often devolve into a trite definition-theorem-proof style with little justification for why those specific definitions, theorems, and proofs are of special interest.  Category Theory doubly so as a framework for understanding mathematical relationships.  Take Awodey's text "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.amazon.com\/Category-Theory-Oxford-Logic-Guides\/dp\/0199237182\/"
                            },
                            {
                                "type": "text",
                                "text": " as an example.\n\nRiehl presents a thorough argument answering \"why Category Theory?\" aimed squarely at mathematicians "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.amazon.com\/Conceptual-Mathematics-First-Introduction-Categories\/dp\/052171916X"
                            },
                            {
                                "type": "text",
                                "text": ".  What about the rest of us?\n\nThere's Lawvere and Schanuel introduction "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.amazon.com\/Conceptual-Mathematics-First-Introduction-Categories\/dp\/052171916X"
                            },
                            {
                                "type": "text",
                                "text": " that amounts to \"gee-whiz sums and products make sense for all sorts of things besides numbers.\"\n\nOn that backdrop, I'm hopeful that Fong and Spivak will prove a more provocative introduction for people like you Guido: more substance than Lawvere and Schanuel, less esoteric than Riehl.\n\n(Some of you may notice that this approach to talking about a book is categorical in the sense that I described one in its relation to others.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVRZE1UG",
        "type": "message",
        "ts": "1527340460.000091",
        "text": "Hi <@UA14TGLTC>, Thank you for the suggestions. I actually already read Lawvere and Schanuel, but a lot of it was over my head. I'll try out Seven Sketches next.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5804a9cddab",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/15804a9cddab1e26e9d963fc8d99e327.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "",
            "real_name": "Guido Bartolucci",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guido",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kkFZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi "
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": ", Thank you for the suggestions. I actually already read Lawvere and Schanuel, but a lot of it was over my head. I'll try out Seven Sketches next."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVRZE1UG",
        "type": "message",
        "ts": "1527340836.000048",
        "text": "Speaking of sums and products, the area that I'm spending my time right now studying is how combinatorial sums and products \"magically\" turn electrical signals with some gates into a computer that can do anything. I say magically because it still feels like magic to me. I'm starting to get a feel like I'm getting an intuitive feels for it, but I'm still not quite there, though I can feel that it's close.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5804a9cddab",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/15804a9cddab1e26e9d963fc8d99e327.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "",
            "real_name": "Guido Bartolucci",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guido",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jaz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Speaking of sums and products, the area that I'm spending my time right now studying is how combinatorial sums and products \"magically\" turn electrical signals with some gates into a computer that can do anything. I say magically because it still feels like magic to me. I'm starting to get a feel like I'm getting an intuitive feels for it, but I'm still not quite there, though I can feel that it's close."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVRZE1UG",
        "type": "message",
        "ts": "1527340913.000017",
        "text": "I wrote in my notebook the other day that \"I think the magic part, the part that makes the inanimate object animate, is the partitioning of time into discrete units and feeding the output of the previous operation to the input of the next.\" I'm not sure that's right yet, but it feels like I'm making progress.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5804a9cddab",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/15804a9cddab1e26e9d963fc8d99e327.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "",
            "real_name": "Guido Bartolucci",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guido",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PcG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wrote in my notebook the other day that \"I think the magic part, the part that makes the inanimate object animate, is the partitioning of time into discrete units and feeding the output of the previous operation to the input of the next.\" I'm not sure that's right yet, but it feels like I'm making progress."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVRZE1UG",
        "type": "message",
        "ts": "1527341083.000032",
        "text": "I know this all sounds esoteric and pedantic when what we really want is just a better way to program, but I'm particularly fed up with our relationship between the higher level languages and the underlying computer. I feels to me (I wish I had something less subjective than \"feels\") that the assembly language and machine language interface that we all attempt to compile out programs down into is part of the problem -- That is, it restricts our thinking of what is possible with computable machines.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5804a9cddab",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/15804a9cddab1e26e9d963fc8d99e327.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "",
            "real_name": "Guido Bartolucci",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guido",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1527341083.000032",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1527779908.000833",
        "reply_users": [
            "U8A5MS6R1",
            "UAVRZE1UG"
        ],
        "replies": [
            {
                "user": "U8A5MS6R1",
                "ts": "1527577552.000054"
            },
            {
                "user": "UAVRZE1UG",
                "ts": "1527703076.000196"
            },
            {
                "user": "UAVRZE1UG",
                "ts": "1527703288.000781"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1527779908.000833"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o5kzU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I know this all sounds esoteric and pedantic when what we really want is just a better way to program, but I'm particularly fed up with our relationship between the higher level languages and the underlying computer. I feels to me (I wish I had something less subjective than \"feels\") that the assembly language and machine language interface that we all attempt to compile out programs down into is part of the problem -- That is, it restricts our thinking of what is possible with computable machines."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1527343730.000094",
        "text": "There is a sort of funny disconnect between, say, C's model of sequential execution on large linear chunks of memory and the reality of what that gets compiled to on a modern CPU (let alone networks, GPUs, and more exotic processors).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "14\/b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is a sort of funny disconnect between, say, C's model of sequential execution on large linear chunks of memory and the reality of what that gets compiled to on a modern CPU (let alone networks, GPUs, and more exotic processors)."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]