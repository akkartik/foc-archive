[
    {
        "user": "UF89Z7SRF",
        "type": "message",
        "ts": "1575801633.174700",
        "edited": {
            "user": "UF89Z7SRF",
            "ts": "1575801690.000000"
        },
        "client_msg_id": "a226ffc8-d27f-4481-8d1c-6d20d3ebb7a8",
        "text": "Yes I'm a firm believer in cognitive semantics, where we communicate in order to get our personal systems of meaning closer to reach other.\nTuring equivalence poses a problem for your definition. Maybe we agree a DSL implemented in C is more abstract than its host. It's less general, and in some way embodies a model for a domain.\nI'd argue that whether or not the DSL is Turing equivalent is really incidental to usability\/design issues around affordance. This implies that abstraction can be circular, as C could in theory be implemented in the DSL. How do you feel about this?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g238c7e5ef9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e238c7e5ef9cea787f00d937aadeb6ed.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "",
            "real_name": "Alex McLean",
            "display_name": "yaxu",
            "team": "T5TCAFTA9",
            "name": "alex",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575368526.370100",
        "parent_user_id": "UF89Z7SRF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IQ8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes I'm a firm believer in cognitive semantics, where we communicate in order to get our personal systems of meaning closer to reach other.\nTuring equivalence poses a problem for your definition. Maybe we agree a DSL implemented in C is more abstract than its host. It's less general, and in some way embodies a model for a domain.\nI'd argue that whether or not the DSL is Turing equivalent is really incidental to usability\/design issues around affordance. This implies that abstraction can be circular, as C could in theory be implemented in the DSL. How do you feel about this?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UF89Z7SRF",
        "type": "message",
        "ts": "1575801745.175000",
        "client_msg_id": "ce2bc878-268b-4429-9aef-3a58d3a21813",
        "text": "Or perhaps the DSL is abstract relative to the domain is modeling, but not relative to its host? Hmm",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g238c7e5ef9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e238c7e5ef9cea787f00d937aadeb6ed.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "",
            "real_name": "Alex McLean",
            "display_name": "yaxu",
            "team": "T5TCAFTA9",
            "name": "alex",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575368526.370100",
        "parent_user_id": "UF89Z7SRF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C0GY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Or perhaps the DSL is abstract relative to the domain is modeling, but not relative to its host? Hmm"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1575816680.175300",
        "client_msg_id": "f378eb8d-dbd9-4262-8992-7c743107ef5e",
        "text": "Here's my take. When you learn to count, you are learning the natural numbers. \"Two\" is an abstraction which represents the abstract concept of a pair of objects. There are infinitely many pairs of objects, but there is only one Two.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575368526.370100",
        "parent_user_id": "UF89Z7SRF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eNAbE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's my take. When you learn to count, you are learning the natural numbers. \"Two\" is an abstraction which represents the abstract concept of a pair of objects. There are infinitely many pairs of objects, but there is only one Two."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1575816965.175500",
        "client_msg_id": "563fc182-3007-455f-8b92-f05242a145ee",
        "text": "Once you know how to count, you can take two piles of objects, count the first pile, then continue the count into the second pile. Now you know how many objects there are in total, if you merge the two piles. We can represent this operation by a new abstraction, Addition, which is also symbolized by \"+\", the plus operator. Once we create the \"+\" abstraction, we can explore its properties. Addition is commutative, associative, and has an identity element, zero.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575368526.370100",
        "parent_user_id": "UF89Z7SRF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4a8u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Once you know how to count, you can take two piles of objects, count the first pile, then continue the count into the second pile. Now you know how many objects there are in total, if you merge the two piles. We can represent this operation by a new abstraction, Addition, which is also symbolized by \"+\", the plus operator. Once we create the \"+\" abstraction, we can explore its properties. Addition is commutative, associative, and has an identity element, zero."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1575817244.175700",
        "client_msg_id": "bc452c71-22dd-4d3d-9a62-e473e1f79f89",
        "text": "In elementary school, once you learn arithmetic, you go on to learn algebra, which introduces the concept of variables, like \"x\", which stand in for specific numbers. In an expression like \"x + 2\", you are adding a Two to the number \"x\", but we don't know which specific number \"x\" is. The variable \"x\" is an abstraction. From here, we can proceed further up the ladder of abstraction by introducing lambda expressions. The function `\\x.x+2` is an abstraction: we can give it a name and determine its properties.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575368526.370100",
        "parent_user_id": "UF89Z7SRF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7n=G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In elementary school, once you learn arithmetic, you go on to learn algebra, which introduces the concept of variables, like \"x\", which stand in for specific numbers. In an expression like \"x + 2\", you are adding a Two to the number \"x\", but we don't know which specific number \"x\" is. The variable \"x\" is an abstraction. From here, we can proceed further up the ladder of abstraction by introducing lambda expressions. The function "
                            },
                            {
                                "type": "text",
                                "text": "\\x.x+2",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is an abstraction: we can give it a name and determine its properties."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1575817592.175900",
        "client_msg_id": "673b499c-4b25-4f94-9aa9-17727c08489d",
        "text": "To paraphrase Peter Landin, every programming language consists of two parts: a set of basic things, and a set of mechanisms for defining new things in terms of existing things. Those mechanisms are called abstraction mechanisms. Abstraction mechanisms are used for constructing new abstractions. The two most basic abstraction mechanisms are: naming, or the definition of variables, and functions. Abstraction mechanisms are used to eliminate code duplication. Suppose that the magic constant `3.141592653589793` occurs in multiple places throughout your code. You can abstract this duplicated code by binding the constant to the name `pi`. The variable `pi` is an abstraction. Functions are a more powerful abstraction mechanism, because they have parameters.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575368526.370100",
        "parent_user_id": "UF89Z7SRF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yRt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To paraphrase Peter Landin, every programming language consists of two parts: a set of basic things, and a set of mechanisms for defining new things in terms of existing things. Those mechanisms are called abstraction mechanisms. Abstraction mechanisms are used for constructing new abstractions. The two most basic abstraction mechanisms are: naming, or the definition of variables, and functions. Abstraction mechanisms are used to eliminate code duplication. Suppose that the magic constant "
                            },
                            {
                                "type": "text",
                                "text": "3.141592653589793",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " occurs in multiple places throughout your code. You can abstract this duplicated code by binding the constant to the name "
                            },
                            {
                                "type": "text",
                                "text": "pi",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". The variable "
                            },
                            {
                                "type": "text",
                                "text": "pi",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is an abstraction. Functions are a more powerful abstraction mechanism, because they have parameters."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1575830899.178500",
        "client_msg_id": "C52D85D8-A943-4206-B8A1-6ACE9F137D45",
        "text": "i would be especially interested in live-coding for video, animation, etc",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575536038.042000",
        "parent_user_id": "UEGFXUK3M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4L\/5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i would be especially interested in live-coding for video, animation, etc"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1575831337.180000",
        "client_msg_id": "186B3A74-4DF3-402E-B5F0-E1E8D0D7E4D8",
        "text": "i think microstates.js and maybe orbit.js have interesting ideas about this",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575736895.172800",
        "parent_user_id": "UFPPABQ7P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pAzRU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i think microstates.js and maybe orbit.js have interesting ideas about this"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1575831962.180200",
        "client_msg_id": "c8792f0c-fcd2-4530-affa-a83f41c7476c",
        "text": "<@UA14TGLTC> thanks for the input. Validation is something I certainly see as something that can be applied to existing models in the context of forms. Then, we can apply the validation at any level in the form.\n\n\n<@UHWC9PXBL> I experimented with microstates.js in the past and found it to be a little too generalized for my purposes. I had a hard time understanding the advantages of using microstates over JavaScript classes or groups of behavior subjects.\nOrbit looks very interesting and pretty ambitious as well. Thank you for sharing both of these. I'm sure there are parts of both that I can find inspirations from",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575736895.172800",
        "parent_user_id": "UFPPABQ7P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KIEQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " thanks for the input. Validation is something I certainly see as something that can be applied to existing models in the context of forms. Then, we can apply the validation at any level in the form.\n\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " I experimented with microstates.js in the past and found it to be a little too generalized for my purposes. I had a hard time understanding the advantages of using microstates over JavaScript classes or groups of behavior subjects.\nOrbit looks very interesting and pretty ambitious as well. Thank you for sharing both of these. I'm sure there are parts of both that I can find inspirations from"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1575833904.183200",
        "client_msg_id": "78ACECDB-07FE-4D92-9809-B4FD00ADCABA",
        "text": "i think the talks on microstates you can find on youtube do a lot better job of justifying its purpose than anything i’ve found on the web—essentially you get the benefits of immutability (rollback\/history\/undo, track who changes what) without a lot of the syntactical baggage.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575736895.172800",
        "parent_user_id": "UFPPABQ7P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HA2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i think the talks on microstates you can find on youtube do a lot better job of justifying its purpose than anything i’ve found on the web—essentially you get the benefits of immutability (rollback\/history\/undo, track who changes what) without a lot of the syntactical baggage."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1575833940.184500",
        "client_msg_id": "F52E6699-FF44-4A6D-BB47-2E8D2F24AA13",
        "text": "oh! fulcro and pathom have some really really cool tools for forms (in clojure) but it’s a lot to learn at once",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575736895.172800",
        "parent_user_id": "UFPPABQ7P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "APzF6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh! fulcro and pathom have some really really cool tools for forms (in clojure) but it’s a lot to learn at once"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1575834020.184900",
        "client_msg_id": "396ff8a1-ea09-429e-9cbe-86f9432fbf4f",
        "text": "I'll look into fulcro and pathom. I have a soft spot for clojure and the macro system. I'm really happy you shared those options! Some of the best DSLs come out of the clojure community",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575736895.172800",
        "parent_user_id": "UFPPABQ7P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SlNC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'll look into fulcro and pathom. I have a soft spot for clojure and the macro system. I'm really happy you shared those options! Some of the best DSLs come out of the clojure community"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1575834029.185400",
        "client_msg_id": "8B2E4DE4-89F1-45A1-A60A-342DDEB5D8BC",
        "text": "<https:\/\/youtu.be\/IS3i3DTUnAI> is a pretty solid intro to the techniques if not the technology so much",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575736895.172800",
        "parent_user_id": "UFPPABQ7P",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "The Maximal Graph - Wilker Silva",
                "title_link": "https:\/\/youtu.be\/IS3i3DTUnAI",
                "author_name": "ClojureTV",
                "author_link": "https:\/\/www.youtube.com\/user\/ClojureTV",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/IS3i3DTUnAI\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: The Maximal Graph - Wilker Silva",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/IS3i3DTUnAI?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/IS3i3DTUnAI",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/IS3i3DTUnAI"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cPB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/IS3i3DTUnAI"
                            },
                            {
                                "type": "text",
                                "text": " is a pretty solid intro to the techniques if not the technology so much"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCSJ44X1S",
        "type": "message",
        "ts": "1575836392.185800",
        "edited": {
            "user": "UCSJ44X1S",
            "ts": "1575836401.000000"
        },
        "client_msg_id": "7a515fa5-08c5-417e-93bf-2b08be453dc2",
        "text": "<https:\/\/forum.mrmoneymustache.com\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "eea3d64ffa95",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-02\/494422849847_eea3d64ffa95a60795eb_72.png",
            "first_name": "Jonathan",
            "real_name": "Jonathan Conway",
            "display_name": "Jonathan",
            "team": "T5TCAFTA9",
            "name": "jonathan.conway",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567190150.026100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LOvep",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/forum.mrmoneymustache.com\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]