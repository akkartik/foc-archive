[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1686137898.992529",
        "client_msg_id": "6af01a35-936f-4477-8e51-798b034fa08d",
        "text": "Having worked with several product managers who do not code, it's attention to detail and consequences that matters.  These thoughts can happen mostly in the application domain, I only need to add info about computational and visual constraints.\n\nThat said, the value of making \"direct changes\" depends — since building a domain specific editor usually, unfortunately requires a shocking amount of development.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686087116.751449",
        "parent_user_id": "U0516FY46SU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ISkq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Having worked with several product managers who do not code, it's attention to detail and consequences that matters.  These thoughts can happen mostly in the application domain, I only need to add info about computational and visual constraints.\n\nThat said, the value of making \"direct changes\" depends — since building a domain specific editor usually, unfortunately requires a shocking amount of development."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1686154247.250099",
        "client_msg_id": "ae99c55e-062e-47c4-9a04-9eb83a9fd050",
        "text": "I wonder if anyone has tried to use Rosie as a replacement for grep? <https:\/\/rosie-lang.org\/doc\/rosie.1.html?hidden=true>\n\nIMO, the problem with grep is that it based on regular expressions, whereas PEG is more powerful.  My favourite PEG is Ohm-JS but I am curious about Rosie...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rgWJj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wonder if anyone has tried to use Rosie as a replacement for grep? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/rosie-lang.org\/doc\/rosie.1.html?hidden=true"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIMO, the problem with grep is that it based on regular expressions, whereas PEG is more powerful.  My favourite PEG is Ohm-JS but I am curious about Rosie..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1686154406.959039",
        "client_msg_id": "214519ce-cf76-4413-aa88-79297415766e",
        "text": "probably orthogonal, but may offer ideas: I am currently using Kinopio (<http:\/\/kinopio.club|kinopio.club>) for keeping tagged notes and brainstorming and minutes for the Toronto Lisp meeting group and TODO lists and archives.  Kinopio runs in the browser and can run on my desktop and my phone and can be shared with others (private, read-only, world write\/collaboration.).  The Kinopio API allows direct automatic manipulation.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686088515.370949",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K4lsp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "probably orthogonal, but may offer ideas: I am currently using Kinopio (kinopio.club) for keeping tagged notes and brainstorming and minutes for the Toronto Lisp meeting group and TODO lists and archives.  Kinopio runs in the browser and can run on my desktop and my phone and can be shared with others (private, read-only, world write\/collaboration.).  The Kinopio API allows direct automatic manipulation."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U055V4HCHU7",
        "type": "message",
        "ts": "1686154686.561689",
        "client_msg_id": "1e84a96a-2460-45be-87d3-18a8c366eaf8",
        "text": "Interesting. I haven't seen this before. I'm going to have to play around with it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "141ca9fd8fff",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-04\/5210750326597_141ca9fd8fff00418f9b_72.jpg",
            "first_name": "Walker",
            "real_name": "Walker Griggs",
            "display_name": "Walker Griggs",
            "team": "T5TCAFTA9",
            "name": "walker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686088515.370949",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eYf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting. I haven't seen this before. I'm going to have to play around with it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1686154746.850929",
        "client_msg_id": "2892f13b-f004-49ea-b27f-fe5ebef27dc1",
        "text": "The person behind Kinopio has a lovely essay on what they call “<https:\/\/pketh.org\/organic-software.html|organic software>”",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686088515.370949",
        "parent_user_id": "U055V4HCHU7",
        "attachments": [
            {
                "from_url": "https:\/\/pketh.org\/organic-software.html",
                "ts": 1652572800,
                "image_url": "https:\/\/pketh.org\/images\/2022\/expressionism.jpg",
                "image_width": 1080,
                "image_height": 1349,
                "image_bytes": 310761,
                "service_icon": "https:\/\/pketh.org\/favicon.ico?v=3",
                "id": 1,
                "original_url": "https:\/\/pketh.org\/organic-software.html",
                "fallback": "pketh.org: In Search of Organic Software",
                "text": "So over the last couple weeks, I’ve been talking to VCs and founders who have and haven’t taken VC to learn whether it makes sense for Kinopio. I don’t think it does.",
                "title": "In Search of Organic Software",
                "title_link": "https:\/\/pketh.org\/organic-software.html",
                "service_name": "pketh.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QIG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The person behind Kinopio has a lovely essay on what they call “"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/pketh.org\/organic-software.html",
                                "text": "organic software"
                            },
                            {
                                "type": "text",
                                "text": "”"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U055V4HCHU7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U055V4HCHU7",
        "type": "message",
        "ts": "1686154787.704919",
        "client_msg_id": "a73976bf-fcd9-4b96-8ebb-7b8223a96300",
        "text": "The rabbit hole goes deeper!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "141ca9fd8fff",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-04\/5210750326597_141ca9fd8fff00418f9b_72.jpg",
            "first_name": "Walker",
            "real_name": "Walker Griggs",
            "display_name": "Walker Griggs",
            "team": "T5TCAFTA9",
            "name": "walker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686088515.370949",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IV6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The rabbit hole goes deeper!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UMQ6LR9NZ"
                ],
                "count": 1
            },
            {
                "name": "rabbit2",
                "users": [
                    "UMQ6LR9NZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1686154833.290749",
        "client_msg_id": "64b643e1-1373-438b-a7d6-9b0b590c602c",
        "text": "once upon a time I tripped over a bunch of parentheses and I landed in APL and 6502 assembly. I haven’t found my way out, yet.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686088515.370949",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lpc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "once upon a time I tripped over a bunch of parentheses and I landed in APL and 6502 assembly. I haven’t found my way out, yet."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U055V4HCHU7",
        "type": "message",
        "ts": "1686154909.576769",
        "client_msg_id": "cf7f5fca-14ba-4b9a-92de-3464691a858c",
        "text": "_stares at APL model M siting on the shelf. shutters_",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "141ca9fd8fff",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-04\/5210750326597_141ca9fd8fff00418f9b_72.jpg",
            "first_name": "Walker",
            "real_name": "Walker Griggs",
            "display_name": "Walker Griggs",
            "team": "T5TCAFTA9",
            "name": "walker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686088515.370949",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4hG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "stares at APL model M siting on the shelf. shutters",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1686154949.659269",
        "client_msg_id": "e7a73960-8e48-4f1f-a820-522b08ca69e2",
        "text": "`emperor palpatine do-it dot gif`",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686088515.370949",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=ER+G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "emperor palpatine do-it dot gif",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFS53UWE5",
        "type": "message",
        "ts": "1686164858.059869",
        "edited": {
            "user": "UFS53UWE5",
            "ts": "1686164968.000000"
        },
        "client_msg_id": "d37625f5-ccaa-49ed-816d-eff37f702571",
        "text": "Hey all! I need a tool \/ stack suggestion. We'd like to track internal metrics for development like build performance stats, build size, source control size, etc. I'd like to be able to see these trends in a graph by date\/commit.\n• CI tools can do some of this, but they only surface a small, inconfigurable set of metrics. Usually just test failures and build times.\n• There are monitoring solutions like Grafana Cloud, Datadog, but these all seem geared towards monitoring servers and cloud systems. They also assume you're ingesting massive amounts of data.\nWhat I really just want is a POST-able URL that I can spit metrics to, and a dashboard with some basic alerting. Is there something like this that exists?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a88832bbbfe7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-12\/1359700849458_a88832bbbfe7c26df530_72.jpg",
            "first_name": "John",
            "real_name": "John Austin",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "kleptine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686164858.059869",
        "reply_count": 10,
        "reply_users_count": 3,
        "latest_reply": "1686282694.153149",
        "reply_users": [
            "UP28ETUSE",
            "UFS53UWE5",
            "U016VUZGUUQ"
        ],
        "replies": [
            {
                "user": "UP28ETUSE",
                "ts": "1686166399.663979"
            },
            {
                "user": "UFS53UWE5",
                "ts": "1686167215.013279"
            },
            {
                "user": "UP28ETUSE",
                "ts": "1686168710.135689"
            },
            {
                "user": "UFS53UWE5",
                "ts": "1686168784.625969"
            },
            {
                "user": "UFS53UWE5",
                "ts": "1686168826.434419"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1686282568.830969"
            },
            {
                "user": "UFS53UWE5",
                "ts": "1686282635.285699"
            },
            {
                "user": "UFS53UWE5",
                "ts": "1686282649.287129"
            },
            {
                "user": "UFS53UWE5",
                "ts": "1686282674.169299"
            },
            {
                "user": "UFS53UWE5",
                "ts": "1686282694.153149"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pva",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey all! I need a tool \/ stack suggestion. We'd like to track internal metrics for development like build performance stats, build size, source control size, etc. I'd like to be able to see these trends in a graph by date\/commit.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "CI tools can do some of this, but they only surface a small, inconfigurable set of metrics. Usually just test failures and build times."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "There are monitoring solutions like Grafana Cloud, Datadog, but these all seem geared towards monitoring servers and cloud systems. They also assume you're ingesting massive amounts of data."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nWhat I really just want is a POST-able URL that I can spit metrics to, and a dashboard with some basic alerting. Is there something like this that exists?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP28ETUSE",
        "type": "message",
        "ts": "1686166399.663979",
        "client_msg_id": "27a91e2d-f621-4dd9-9ace-f47f5ace7e33",
        "text": "Maybe pushing data to Prometheus and having that as a data source in Grafana? <https:\/\/prometheus.io\/docs\/instrumenting\/pushing\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7cefc64f7b1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7cefc64f7b1b53513625bf3487ecd16d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "Ionuț",
            "real_name": "Ionuț G. Stan",
            "display_name": "Ionuț G. Stan",
            "team": "T5TCAFTA9",
            "name": "ionut.g.stan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686164858.059869",
        "parent_user_id": "UFS53UWE5",
        "attachments": [
            {
                "from_url": "https:\/\/prometheus.io\/docs\/instrumenting\/pushing\/",
                "service_icon": "https:\/\/prometheus.io\/assets\/favicons\/apple-touch-icon-57x57.png",
                "thumb_url": "https:\/\/prometheus.io\/assets\/favicons\/android-chrome-192x192.png",
                "thumb_width": 192,
                "thumb_height": 192,
                "id": 1,
                "original_url": "https:\/\/prometheus.io\/docs\/instrumenting\/pushing\/",
                "fallback": "Pushing metrics | Prometheus",
                "text": "An open-source monitoring system with a dimensional data model, flexible query language, efficient time series database and modern alerting approach.",
                "title": "Pushing metrics | Prometheus",
                "title_link": "https:\/\/prometheus.io\/docs\/instrumenting\/pushing\/",
                "service_name": "prometheus.io"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "81zw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe pushing data to Prometheus and having that as a data source in Grafana? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/prometheus.io\/docs\/instrumenting\/pushing\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFS53UWE5",
        "type": "message",
        "ts": "1686167215.013279",
        "edited": {
            "user": "UFS53UWE5",
            "ts": "1686167676.000000"
        },
        "client_msg_id": "4badaa9c-7a51-4c4e-a2f7-46122caabfbe",
        "text": "My understanding was that Prometheus doesn't have persistent storage? Essentially I want to retain this data forever. It's on the order of a few hundred data points per day.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a88832bbbfe7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-12\/1359700849458_a88832bbbfe7c26df530_72.jpg",
            "first_name": "John",
            "real_name": "John Austin",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "kleptine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686164858.059869",
        "parent_user_id": "UFS53UWE5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GPny",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My understanding was that Prometheus doesn't have persistent storage? Essentially I want to retain this data forever. It's on the order of a few hundred data points per day."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP28ETUSE",
        "type": "message",
        "ts": "1686168710.135689",
        "client_msg_id": "b6bd2e08-20d2-4e79-980f-24b7333b3dcf",
        "text": "Yeah, it might not be the best choice. Are you looking for an existent service or is it something that you can set up yourself? One possibly very stupid idea might be to just Google Sheets API and push data into a spreadsheet there. A small script could handle the notifications too.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7cefc64f7b1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7cefc64f7b1b53513625bf3487ecd16d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "Ionuț",
            "real_name": "Ionuț G. Stan",
            "display_name": "Ionuț G. Stan",
            "team": "T5TCAFTA9",
            "name": "ionut.g.stan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686164858.059869",
        "parent_user_id": "UFS53UWE5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L0bW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, it might not be the best choice. Are you looking for an existent service or is it something that you can set up yourself? One possibly very stupid idea might be to just Google Sheets API and push data into a spreadsheet there. A small script could handle the notifications too."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFS53UWE5",
        "type": "message",
        "ts": "1686168784.625969",
        "client_msg_id": "32cfe766-b7a4-4175-953e-4487cae144aa",
        "text": "I guess I was hoping for an existing solution. :neutral_face: But if that fails I'm not above spinning up a couple of docker containers. What I'm trying to avoid is spending time doing sysadmin stuff down the road.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a88832bbbfe7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-12\/1359700849458_a88832bbbfe7c26df530_72.jpg",
            "first_name": "John",
            "real_name": "John Austin",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "kleptine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686164858.059869",
        "parent_user_id": "UFS53UWE5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QI=I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess I was hoping for an existing solution. "
                            },
                            {
                                "type": "emoji",
                                "name": "neutral_face",
                                "unicode": "1f610"
                            },
                            {
                                "type": "text",
                                "text": " But if that fails I'm not above spinning up a couple of docker containers. What I'm trying to avoid is spending time doing sysadmin stuff down the road."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFS53UWE5",
        "type": "message",
        "ts": "1686168826.434419",
        "client_msg_id": "9efad13d-9ea3-4734-ba99-42bb0eecaca8",
        "text": "So far it seems like maybe I could use influxdb + grafana and maybe that would be persistent. Not sure...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a88832bbbfe7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-12\/1359700849458_a88832bbbfe7c26df530_72.jpg",
            "first_name": "John",
            "real_name": "John Austin",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "kleptine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686164858.059869",
        "parent_user_id": "UFS53UWE5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cUG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So far it seems like maybe I could use influxdb + grafana and maybe that would be persistent. Not sure..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1686169579.523179",
        "client_msg_id": "7b64f167-286e-43d4-a014-43fbe3061717",
        "text": "Attending a conference today and yesterday about Blockly, the visual code editing environment. Big push toward bi-drectionality between code and blocks. For integration with existing code-bases, AI generation, collaboration with people not using visual editors, etc. At least two different approaches being investigated or used, and I would be inclined to use a completely different one. They don't realize it, but some of their problems are solved by some of the tools people here are working on. Like how do you make it so that you can generate blocks when the text is in an invalid state? Much easier to just avoid invalid states, like Blockly does! How can you avoid invalid states if the person isn't finished typing, and there are mandatory subnodes in the AST? Much easier to fill holes by default, like Blockly does. Essentially, they can't get to bidirectionality, because the text editing experience is structurally unaware. It's not possible with VSCode, but it is possible with Tylr, or anything that imposes a structure. Even ProseMirror would work better. But there is no need to stop at two concrete syntaxes, if you can sacrifice interface specific details (e.g. whitespace in text, grid position in Blockly), or keep them where they live (linter settings, a database of block locations outside the AST), you can operate directly on the AST in whatever tool you want. Has anyone played with a \"headless\" AST that could be used that way? It feels like all structural editors need one, particularly if they hope to facilitate collaborative editing. Has anyone tried putting two different coding interfaces over the same shared AST?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686169579.523179",
        "reply_count": 11,
        "reply_users_count": 5,
        "latest_reply": "1688378846.106449",
        "reply_users": [
            "U02U0AS3J49",
            "UGWUJUZHT",
            "U0296ACR13M",
            "U016VUZGUUQ",
            "U02QC0PPER3"
        ],
        "replies": [
            {
                "user": "U02U0AS3J49",
                "ts": "1686172647.343239"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1686189824.274419"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1686196197.557409"
            },
            {
                "user": "U0296ACR13M",
                "ts": "1686207130.137449"
            },
            {
                "user": "U0296ACR13M",
                "ts": "1686208034.870459"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1686282325.403339"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1686303457.179749"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1686316135.553889"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1686316350.117069"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1686330984.885939"
            },
            {
                "user": "U02QC0PPER3",
                "ts": "1688378846.106449"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iGM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Attending a conference today and yesterday about Blockly, the visual code editing environment. Big push toward bi-drectionality between code and blocks. For integration with existing code-bases, AI generation, collaboration with people not using visual editors, etc. At least two different approaches being investigated or used, and I would be inclined to use a completely different one. They don't realize it, but some of their problems are solved by some of the tools people here are working on. Like how do you make it so that you can generate blocks when the text is in an invalid state? Much easier to just avoid invalid states, like Blockly does! How can you avoid invalid states if the person isn't finished typing, and there are mandatory subnodes in the AST? Much easier to fill holes by default, like Blockly does. Essentially, they can't get to bidirectionality, because the text editing experience is structurally unaware. It's not possible with VSCode, but it is possible with Tylr, or anything that imposes a structure. Even ProseMirror would work better. But there is no need to stop at two concrete syntaxes, if you can sacrifice interface specific details (e.g. whitespace in text, grid position in Blockly), or keep them where they live (linter settings, a database of block locations outside the AST), you can operate directly on the AST in whatever tool you want. Has anyone played with a \"headless\" AST that could be used that way? It feels like all structural editors need one, particularly if they hope to facilitate collaborative editing. Has anyone tried putting two different coding interfaces over the same shared AST?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC",
                    "U02QC0PPER3"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UNCP67JSK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1686172647.343239",
        "client_msg_id": "3248b518-f21b-494c-92cc-5cf6fcbd3523",
        "text": "Also, there was a suggestion that you could go from code to blocks by normalizing the code (standardizing whitespace, etc.) and then using some sort of evolutionary approach to build up a change to the block representation that has the same output as the text. Does that strike anyone else as WILDLY silly? The other approach I saw was adding the additional content relevant for the block language (e.g. X&amp;y coordinates) as comments, and writing a JavaScript AST to Blockly XML transpiler. More reasonable, but limited to those two specific syntaxes, which seems short-sighted, and there are things that you can change in the text that will not survive round trips, which seems like a usability problem. Their use case was only to let AI write code, though, so that doesn't matter to them.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686169579.523179",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WO6X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, there was a suggestion that you could go from code to blocks by normalizing the code (standardizing whitespace, etc.) and then using some sort of evolutionary approach to build up a change to the block representation that has the same output as the text. Does that strike anyone else as WILDLY silly? The other approach I saw was adding the additional content relevant for the block language (e.g. X&y coordinates) as comments, and writing a JavaScript AST to Blockly XML transpiler. More reasonable, but limited to those two specific syntaxes, which seems short-sighted, and there are things that you can change in the text that will not survive round trips, which seems like a usability problem. Their use case was only to let AI write code, though, so that doesn't matter to them."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1686189824.274419",
        "client_msg_id": "072987ee-bb5b-4c90-9c2b-165bf22bfc72",
        "text": "It’s a matter of semantic content and of discarding information.  It is easy to go from a language that has more semantic content to a language that has less semantic content.  But, it is difficult to go from a language that has less semantic content to a language that has more semantic content. Semantic content comes in forms other than sequences of characters (or sequences of vector graphics), e.g. structure and layout mean something to human readers.  Going from Haskell to assembler makes sense, but, going from assembler to Haskell does not make sense.  Likewise, if the VPL is any good, then going from VPL to code is easy, but going from code to VPL is difficult.  N.B. if code-&gt;VPL were easy, it would imply that that the VPL adds no new information and is, therefore, redundant.  A decent VPL should contain semantic meaning that is difficult to express in code.  Hence, IMO, it makes no sense to even try to “round trip” code-&gt;VPL.\nFor an example in a very different field - math - we are taught that we can multiply matrices, but, that we cannot divide matrices.  Robert Distinti has developed a way to divide matrices and blames previous failure to do so on the fact that too much information is discarded by current methods.\nAside: Note that, to me, a VPL is a hybrid of graphics and text (see SVG, for example).  There is\/was a field called “Design Recovery” that researched possible approaches to recovering semantic information (I witnessed such techniques being used for fixing Y2K problems, which would have been lessened if they had kept the source code and would not have equated “dates” with girls’ names in some of the code).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686169579.523179",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qKPAQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s a matter of semantic content and of discarding information.  It is easy to go from a language that has more semantic content to a language that has less semantic content.  But, it is difficult to go from a language that has less semantic content to a language that has more semantic content. Semantic content comes in forms other than sequences of characters (or sequences of vector graphics), e.g. structure and layout mean something to human readers.  Going from Haskell to assembler makes sense, but, going from assembler to Haskell does not make sense.  Likewise, if the VPL is any good, then going from VPL to code is easy, but going from code to VPL is difficult.  N.B. if code->VPL were easy, it would imply that that the VPL adds no new information and is, therefore, redundant.  A decent VPL should contain semantic meaning that is difficult to express in code.  Hence, IMO, it makes no sense to even try to “round trip” code->VPL.\nFor an example in a very different field - math - we are taught that we can multiply matrices, but, that we cannot divide matrices.  Robert Distinti has developed a way to divide matrices and blames previous failure to do so on the fact that too much information is discarded by current methods.\nAside: Note that, to me, a VPL is a hybrid of graphics and text (see SVG, for example).  There is\/was a field called “Design Recovery” that researched possible approaches to recovering semantic information (I witnessed such techniques being used for fixing Y2K problems, which would have been lessened if they had kept the source code and would not have equated “dates” with girls’ names in some of the code)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1686196197.557409",
        "client_msg_id": "f5af1893-a0d4-460e-b843-cd5bd07eee95",
        "text": "There are reasons to develop visually that don't have to do with adding semantic information. And the reason to be able to round trip might be to facilitate collaboration between people who prefer different interfaces, visual or text.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686169579.523179",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZCwkA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are reasons to develop visually that don't have to do with adding semantic information. And the reason to be able to round trip might be to facilitate collaboration between people who prefer different interfaces, visual or text."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U016VUZGUUQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1686205425.866679",
        "client_msg_id": "ea45f928-bf77-4437-b5ad-d96a40755016",
        "text": "Has anyone seen controlled natural languages implemented in a structure-aware WYSIWYG XML editor? Is there some reason that wouldn't work?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686205425.866679",
        "reply_count": 7,
        "reply_users_count": 3,
        "latest_reply": "1686944962.108669",
        "reply_users": [
            "U0296ACR13M",
            "U02U0AS3J49",
            "UNCP67JSK"
        ],
        "replies": [
            {
                "user": "U0296ACR13M",
                "ts": "1686207405.608079"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1686234437.438929"
            },
            {
                "user": "U0296ACR13M",
                "ts": "1686290811.448749"
            },
            {
                "user": "UNCP67JSK",
                "ts": "1686721835.393599"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1686944618.939459"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1686944922.867019"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1686944962.108669"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WucR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Has anyone seen controlled natural languages implemented in a structure-aware WYSIWYG XML editor? Is there some reason that wouldn't work?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0296ACR13M",
        "type": "message",
        "ts": "1686207130.137449",
        "client_msg_id": "05d4ecd3-8d19-4c27-b323-d96e7bc56b02",
        "text": "At least JetBrains MPS has been used to create DSLs with both visual and textual projections as well as (at least) writing to text files. Also my \"projectional language workbench\" generates a \"headless\" \"AST editor engine\" which can then be used, as you said, anyway you like. It exposes both the linearized version (for textual projections) and the tree structure (for visual projections). Currently I've only been working on the textual projection (which is a lot harder issue), but adding a 'blocky' projection should be just about writing the UI code. To read and write actual text files to and from the AST, a parser and an unparser should be implemented. Certainly possible but there's extra challenge in keeping the whitespaces when parsing and only writing minimal changes when unparsing. When parsing, the whitespace info should be stored in the AST that is then modified by the projectional editor. Now, it would be quite a bit easier if you wouldn't care that reading a text file, doing a minimal change in the projectional editor and writing back to a text file might change formatting for the whole file.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "59de929720a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-09-08\/4075674207584_59de929720a2fe0a13d8_72.jpg",
            "first_name": "",
            "real_name": "Jarno Montonen",
            "display_name": "Jarno Montonen",
            "team": "T5TCAFTA9",
            "name": "jarno.montonen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686169579.523179",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NhP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At least JetBrains MPS has been used to create DSLs with both visual and textual projections as well as (at least) writing to text files. Also my \"projectional language workbench\" generates a \"headless\" \"AST editor engine\" which can then be used, as you said, anyway you like. It exposes both the linearized version (for textual projections) and the tree structure (for visual projections). Currently I've only been working on the textual projection (which is a lot harder issue), but adding a 'blocky' projection should be just about writing the UI code. To read and write actual text files to and from the AST, a parser and an unparser should be implemented. Certainly possible but there's extra challenge in keeping the whitespaces when parsing and only writing minimal changes when unparsing. When parsing, the whitespace info should be stored in the AST that is then modified by the projectional editor. Now, it would be quite a bit easier if you wouldn't care that reading a text file, doing a minimal change in the projectional editor and writing back to a text file might change formatting for the whole file."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0296ACR13M",
        "type": "message",
        "ts": "1686207405.608079",
        "client_msg_id": "40fdc698-6c4c-4752-b09c-e4f00eb695ae",
        "text": "Can't say I have, but I'm interested what do you mean by this exactly and what would be the use case?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "59de929720a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-09-08\/4075674207584_59de929720a2fe0a13d8_72.jpg",
            "first_name": "",
            "real_name": "Jarno Montonen",
            "display_name": "Jarno Montonen",
            "team": "T5TCAFTA9",
            "name": "jarno.montonen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686205425.866679",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Sb7LO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can't say I have, but I'm interested what do you mean by this exactly and what would be the use case?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]