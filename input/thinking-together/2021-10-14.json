[
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1634199258.338100",
        "client_msg_id": "A8232FD9-F8B3-41FE-A2B7-D71D8CB608B6",
        "text": "Ouch , true? What do you think: 1. Is it harder? 2.  About that relationship.. <https:\/\/twitter.com\/KevinHoffman\/status\/1448272900759379972|https:\/\/twitter.com\/KevinHoffman\/status\/1448272900759379972>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634199258.338100",
        "reply_count": 35,
        "reply_users_count": 12,
        "latest_reply": "1634626877.405900",
        "reply_users": [
            "U02JDAYKW7J",
            "UDQBTJ211",
            "U016VUZGUUQ",
            "UGWUJUZHT",
            "UCUSW7WVD",
            "USH01JEDQ",
            "U01HKV85Y1J",
            "UJBAJNFLK",
            "UJFN50C00",
            "UJN1TAYEQ",
            "UJ6LDMMN0",
            "U027P92A0N5"
        ],
        "replies": [
            {
                "user": "U02JDAYKW7J",
                "ts": "1634206983.339500"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1634210600.339700"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1634218835.340000"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1634222740.340200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1634227284.340600"
            },
            {
                "user": "USH01JEDQ",
                "ts": "1634228598.341000"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1634235578.341400"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1634235908.341700"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1634279914.356500"
            },
            {
                "user": "UJFN50C00",
                "ts": "1634289269.359900"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1634290786.360100"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1634345006.367100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1634345457.367300"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1634361832.367800"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1634400529.368100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1634401402.368400"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1634411324.368700"
            },
            {
                "user": "UJFN50C00",
                "ts": "1634549423.394500"
            },
            {
                "user": "U027P92A0N5",
                "ts": "1634549424.394700"
            },
            {
                "user": "U027P92A0N5",
                "ts": "1634550311.395000"
            },
            {
                "user": "U027P92A0N5",
                "ts": "1634550646.395200"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1634560942.397700"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1634561036.397900"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1634561086.398100"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1634561180.398300"
            },
            {
                "user": "U027P92A0N5",
                "ts": "1634563599.398500"
            },
            {
                "user": "U027P92A0N5",
                "ts": "1634565332.398900"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1634567811.399900"
            },
            {
                "user": "U027P92A0N5",
                "ts": "1634569667.401000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1634575363.401900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1634575601.402100"
            },
            {
                "user": "U027P92A0N5",
                "ts": "1634576408.402600"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1634625161.405500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1634625800.405700"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1634626877.405900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/KevinHoffman|@KevinHoffman>: Because our industry has a codependent relationship with complexity. <https:\/\/twitter.com\/timClicks\/status\/1448001283307102209>",
                "ts": 1634130141,
                "author_name": "Kevin Hoffman 🦀",
                "author_link": "https:\/\/twitter.com\/KevinHoffman\/status\/1448272900759379972",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1209591762953605121\/bS2muj7o_normal.jpg",
                "author_subname": "@KevinHoffman",
                "text": "Because our industry has a codependent relationship with complexity. <https:\/\/twitter.com\/timClicks\/status\/1448001283307102209>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/KevinHoffman\/status\/1448272900759379972",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/KevinHoffman\/status\/1448272900759379972",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            },
            {
                "fallback": "<https:\/\/twitter.com\/timClicks|@timClicks>: Why is it harder to make a website in 2021 than it was in 1996?",
                "ts": 1634065383,
                "author_name": "Tim McNamara",
                "author_link": "https:\/\/twitter.com\/timClicks\/status\/1448001283307102209",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1386345589\/eightbit-c63b8599-e720-4e63-bd4a-327991dc1bf1_normal.png",
                "author_subname": "@timClicks",
                "text": "Why is it harder to make a website in 2021 than it was in 1996?",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/timClicks\/status\/1448001283307102209",
                "indent": true,
                "color": "32BBF3",
                "id": 2,
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bJqeX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ouch , true? What do you think: 1. Is it harder? 2.  About that relationship.. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/KevinHoffman\/status\/1448272900759379972",
                                "text": "https:\/\/twitter.com\/KevinHoffman\/status\/1448272900759379972"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1634200305.338300",
        "client_msg_id": "42722e5a-008b-4870-9169-8548aa95a6c8",
        "text": "I was searching for the rationale behing the Ribbon UI redesign at microsoft, they should explain pros and cons of each approach somewhere, I found this: <https:\/\/www.youtube.com\/watch?v=Tl9kD693ie4&amp;list=PLjCU_7jji6Ch8l9YAJVBfdOQUk6k_ve5D>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634167410.336500",
        "parent_user_id": "U018HK8QM2R",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "MIX08 Microsoft Office 2007: The Story of the Ribbon (1 of 10)",
                "title_link": "https:\/\/www.youtube.com\/watch?v=Tl9kD693ie4",
                "author_name": "creativecrewchannel",
                "author_link": "https:\/\/www.youtube.com\/user\/creativecrewchannel",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/Tl9kD693ie4\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: MIX08 Microsoft Office 2007: The Story of the Ribbon (1 of 10)",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/Tl9kD693ie4?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/www.youtube.com\/watch?v=Tl9kD693ie4",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=Tl9kD693ie4&amp;list=PLjCU_7jji6Ch8l9YAJVBfdOQUk6k_ve5D"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=3r2O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was searching for the rationale behing the Ribbon UI redesign at microsoft, they should explain pros and cons of each approach somewhere, I found this: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=Tl9kD693ie4&list=PLjCU_7jji6Ch8l9YAJVBfdOQUk6k_ve5D"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "open_mouth",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1634200373.338600",
        "client_msg_id": "10fe5341-aef0-4063-9ad3-128b54f52eb0",
        "text": "<https:\/\/martincolebourne.com\/2014\/09\/15\/whats-wrong-with-the-ribbon\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634167410.336500",
        "parent_user_id": "U018HK8QM2R",
        "attachments": [
            {
                "service_name": "Martin Colebourne",
                "service_url": "http:\/\/martincolebourne.com",
                "title": "What’s wrong with the Ribbon?",
                "title_link": "https:\/\/martincolebourne.com\/2014\/09\/15\/whats-wrong-with-the-ribbon\/",
                "author_name": "martincolebourne",
                "author_link": "https:\/\/martincolebourne.com\/author\/martincolebourne\/",
                "thumb_url": "https:\/\/martincolebourne.files.wordpress.com\/2014\/09\/ribbon-cartoon.png?fit=200%2C150",
                "thumb_width": 145,
                "thumb_height": 150,
                "text": "After four years of working almost exclusively with Macs, this summer I found myself back on a PC, using Windows 7 and Microsoft Office 2007. Admittedly this is not the state of the art, but I was surprised to find just how annoying and inefficient it was using a PC after the latest version of OSX. There are many factors to this, but one was the Ribbon in Office applications. It struck me as an extremely poor design: it was hard to find commands, hard to remember where they were and felt very inefficient.\nI remember reading the articles and blogs around the development of the Ribbon and was impressed with the degree of user experience thinking that had gone into the design. So what went wrong? This article analyses the Ribbon and some of the factors that impact on its effectiveness.\nFINDING COMMANDS\nThe basic problem with designing an application like Word, Powerpoint, or Excel, is that there are a very large number of commands and options. How can these be presented to the user such that they can quickly and efficiently use the commands they need all the time, but can also easily find valuable, but little-used commands?\nThe Ribbon attempts to solve this problem by eliminating traditional menus and displaying commands directly in the UI in the form of one very large toolbar, presented as a set of tabs. This has the effect of surfacing a large number of commands to the user, as opposed to commands being hidden away under hierarchical menus. The cost of this is that the user must find the command they need amongst the many commands on offer.\nThe Excel 2007 Ribbon flattened out to show all the commands in the standard tabs\nSCANNING\nTo begin with, the user can attempt to find a command by quickly scanning the Ribbon. However, specific features of its design have the effect of making scanning harder:\nThe Ribbon is horizontal in orientation, which is more difficult to scan than a vertical orientation (in which the user can more easily fixate on the first few letters of each word). But the Ribbon is not exclusively horizontal &ndash; it also has multiple rows, with up to three commands placed one above the other.\nThe size and format of commands also varies: Sometimes there are three small commands one above the other, sometimes one large one. Sometimes commands are just icons; sometimes they have labels; and still others are &lsquo;galleries&rsquo; presenting a range of related options. This variability makes it hard to scan the Ribbon and have any reasonable confidence of spotting a particular command.\nFinally, the Ribbon is divided into tabs, so most of the commands are not actually visible at any one time &ndash; meaning it can only be scanned in sections.\nHUNTNG\nIf we scan an interface and fail to find what we are looking for, then we can enter into a more intensive &lsquo;hunting&rsquo; behaviour, in which we actively search through the UI and look through menus and dialogs in a more structured way. The characteristics which make the basic format of the Ribbon tricky to scan make it even less helpful as a hunting interface. It is hard to actively look through every item, because they are scattered across multiple rows and presented at different sizes &ndash; there is no effective search pattern.\nAn example search path on the Home tab in Excel 2007\nOn top of this, although the Ribbon contains many commands which act immediately, there are also a good proportion that have a drop down menu attached to them, and many of those menus also give access to supporting dialogs. It is hard to hunt through each of these features to be sure that you have looked everywhere.\nThe Home Ribbon expanded out to show the multitude of commands in drop downs\nHIERARCHY\nThe Ribbon lacks a useful sense of hierarchy in its organisation. It is true that each tab is divided up into sections, but the section labels are placed at the bottom of the Ribbon and are given a low visual hierarchy. I find that I rarely look at them. On the plus side, this doesn&rsquo;t have much of a negative impact, since the categories are not, in fact, very helpful. It is actually very difficult to divide up commands into categories and even more difficult to give those categories useful names.\nNote the category labels at the bottom of each section. Does &lsquo;Fill&rsquo; make sense under &lsquo;Font&rsquo;?\nThe tabs themselves also ought to provide some organisation to the commands, dividing them into groups. However, the association of the commands to each tab often feels fairly arbitrary. In some cases it is clear where something should be, but far too often, it feels like guesswork.\nEFFICIENCY\nThe Ribbon is not a very efficient interface: The tab representation means that you are constantly having to swap between tabs &ndash; often the command that you need is not on the tab you used last.\nFor example, insertion is nearly always woefully inefficient, since you have to swap to the Insert tab, and then select the object you want to insert. Now the Ribbon is stuck in Insert mode, so to edit that object, you need to swap tabs again.\nThe Ribbon&rsquo;s horizontal orientation also means that large mouse movements are needed to switch between tabs and access commands at each end.\nCONTEXTUALITY\nOptions that are specific to certain selections do not appear on the normal tabs. Instead, dedicated contextual tabs are added to the end whilst something is selected, for example, when selecting a chart in Excel.\nShowing contextual options only when needed should work really well, since it simplifies the interface the rest of the time. However, it doesn&rsquo;t seem to work, perhaps because those tabs are not placed in focus automatically. This means that some of the most relevant commands to what I&rsquo;m doing at any time are always hidden under a different tab.\nOVERUSE\nThe Ribbon is the primary access route to almost all of the functionality in these Apps.&nbsp;This includes things that relate to editing the content of the document (for which a toolbar representation works well) and things that have nothing to do with it.\nIn Powerpoint, for example, to access the Master slides, you have to switch to the View tab. But&nbsp;then to get back to the normal view, you have to switch to the contextual &lsquo;Masters&rsquo; tab in order to close the master view. Placing these kinds of commands in the Ribbon confuses its purpose and makes the whole application harder to use.\nOnly File-related commands (which are dealt with via the menu launched from the logo), and some View-related commands (which are offered at the bottom right) have escaped being incorporated into the Ribbon.\nWHAT WOULD WORK WELL?\nIf the Ribbon is not a good approach, what would work well? Here are the considerations I would start with in designing an alternative:\nProvide quick and efficient access to frequently-used commands. They need to be visible in the UI and easy to hit quickly and with minimal mouse movement.\nDesign for scannability: using a slim horizontal format for small numbers of commands and a narrow vertical orientation for more extensive sets.\nAn effective response to context would need to be a core principle: serve up commands that make the most sense given what I&rsquo;m working with, close to the point of focus.\nUse a progressive hierarchy for less-important items to support hunting.\nOffer a search facility to help users find commands easily.\nConsider using a different presentation for non-editing commands, e,g, view, save, zoom, print etc.\nProvide the option for the user to&nbsp;learn or create shortcuts for items that they use frequently (but may not be commonly-used by others).",
                "fallback": "Martin Colebourne Link: What&#8217;s wrong with the&nbsp;Ribbon?",
                "from_url": "https:\/\/martincolebourne.com\/2014\/09\/15\/whats-wrong-with-the-ribbon\/",
                "service_icon": "https:\/\/s2.wp.com\/i\/webclip.png",
                "id": 1,
                "original_url": "https:\/\/martincolebourne.com\/2014\/09\/15\/whats-wrong-with-the-ribbon\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CWOJR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/martincolebourne.com\/2014\/09\/15\/whats-wrong-with-the-ribbon\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1634200402.338900",
        "client_msg_id": "a4f2eff8-fe0e-4f42-91f0-e08ff571be54",
        "text": "<https:\/\/jensenharris.com\/home\/ribbon>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634167410.336500",
        "parent_user_id": "U018HK8QM2R",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TOrpm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/jensenharris.com\/home\/ribbon"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02JDAYKW7J",
        "type": "message",
        "ts": "1634206795.339200",
        "client_msg_id": "a61b0063-d918-4f52-813c-0067a4b1cf98",
        "text": "It’s worth watching (or re-watching) Alan Kay’s _Doing with Images Makes Symbols_ <https:\/\/www.youtube.com\/watch?v=p2LZLYcu_JY> which gives a lot of insight into how they were thinking about representation, language, etc in the early GUI (and Smalltalk) work",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1ab8763ceb21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-14\/2826386958343_1ab8763ceb219317febf_72.jpg",
            "first_name": "Daniel",
            "real_name": "Daniel Krasner",
            "display_name": "Daniel Krasner",
            "team": "T5TCAFTA9",
            "name": "krasnerdaniel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634167410.336500",
        "parent_user_id": "U018HK8QM2R",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Alan Kay: Doing with Images Makes Symbols (Full Version)",
                "title_link": "https:\/\/www.youtube.com\/watch?v=p2LZLYcu_JY",
                "author_name": "Kenneth Friedman",
                "author_link": "https:\/\/www.youtube.com\/c\/KennethFriedmanNow",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/p2LZLYcu_JY\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Alan Kay: Doing with Images Makes Symbols (Full Version)",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/p2LZLYcu_JY?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/www.youtube.com\/watch?v=p2LZLYcu_JY",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=p2LZLYcu_JY"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FpIl4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s worth watching (or re-watching) Alan Kay’s "
                            },
                            {
                                "type": "text",
                                "text": "Doing with Images Makes Symbols ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=p2LZLYcu_JY"
                            },
                            {
                                "type": "text",
                                "text": " which gives a lot of insight into how they were thinking about representation, language, etc in the early GUI (and Smalltalk) work"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02JDAYKW7J",
        "type": "message",
        "ts": "1634206983.339500",
        "client_msg_id": "006fc4c7-48ef-4f5e-8a3d-0703df4d2644",
        "text": "Not a web historian but if I had to guess … in 2001 the web was still reasonably close to the idea of readability (and simplicity) of html - that was mostly what you had to know and understand to make a site. (This doesn’t mean it was a good framework … ).\nJS changed that drastically.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1ab8763ceb21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-14\/2826386958343_1ab8763ceb219317febf_72.jpg",
            "first_name": "Daniel",
            "real_name": "Daniel Krasner",
            "display_name": "Daniel Krasner",
            "team": "T5TCAFTA9",
            "name": "krasnerdaniel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634199258.338100",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GKOwr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not a web historian but if I had to guess … in 2001 the web was still reasonably close to the idea of readability (and simplicity) of html - that was mostly what you had to know and understand to make a site. (This doesn’t mean it was a good framework … ).\nJS changed that drastically."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1634210600.339700",
        "edited": {
            "user": "UDQBTJ211",
            "ts": "1634211589.000000"
        },
        "client_msg_id": "6717d41f-d81b-4cf3-ac53-3e1f196c42d3",
        "text": "I think it's way easier isn't it? Most people use things like Squarespace, Shopify, WordPress etc. Expanding the definition of \"website\" somewhat, lots of independent small businesses (restaurants etc) use their Facebook page as their primary online presence.\n\nI think what people are nostalgic about is the ability for a lone hacker to max out the possible quality of a website. That is, in 1996 your personal static HTML site had a similar perceived quality to CNN's.\n\nPeople say similar things about game development. How come it used to be that a single 15yo could write a world class game, now it needs a team of 100 professionals? Well, the definition of \"world class game\" moved a long way.\n\nCertainly between 1996 and 2021 \"make a website\" has become something that my parents can do.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634199258.338100",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M\/g+Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it's way easier isn't it? Most people use things like Squarespace, Shopify, WordPress etc. Expanding the definition of \"website\" somewhat, lots of independent small businesses (restaurants etc) use their Facebook page as their primary online presence.\n\nI think what people are nostalgic about is the ability for a lone hacker to max out the possible quality of a website. That is, in 1996 your personal static HTML site had a similar perceived quality to CNN's.\n\nPeople say similar things about game development. How come it used to be that a single 15yo could write a world class game, now it needs a team of 100 professionals? Well, the definition of \"world class game\" moved a long way.\n\nCertainly between 1996 and 2021 \"make a website\" has become something that my parents can do."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1634218835.340000",
        "client_msg_id": "432b6ef0-52c7-4357-82c3-abdd008b11a1",
        "text": "I don't know about 1996 exactly, but you can still make websites with very simple tech if you feel like it. I don't know if you can still find reputable shared hosting with SSH, so you might have to admin your own server, but plain HTML still works. Inline JavaScript still works.\n\nI guess I agree with Chris Knott, but would phrase it differently: A lot of the change is that people's expectations have gone up as we've seen what's possible.\n\nWhich is not to necessarily say that software doesn't also have some kind of unhealthy relationship with complexity.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634199258.338100",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CtY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't know about 1996 exactly, but you can still make websites with very simple tech if you feel like it. I don't know if you can still find reputable shared hosting with SSH, so you might have to admin your own server, but plain HTML still works. Inline JavaScript still works.\n\nI guess I agree with Chris Knott, but would phrase it differently: A lot of the change is that people's expectations have gone up as we've seen what's possible.\n\nWhich is not to necessarily say that software doesn't also have some kind of unhealthy relationship with complexity."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1634222740.340200",
        "client_msg_id": "a2cbe9ee-90f9-4b1c-b6fb-10c470ff743f",
        "text": "“Because our industry has a codependent relationship with complexity.”\n\n[my reaction to the above statement]\n\n# Definition of Simplicity\n“Lack of Nuance”\n# Source of Complexity\nProblems have a number of degrees of freedom - dimensions.\n\nOur reality appears to have 4 dimensions (4D) - x,y,z,t.\n\nTrying to squeeze more than one dimension into a single notation results in what we perceive as complexity.\n\nFlattening 4D (reality) down to 2D (pen and paper) results in “complexity” - some things become merely harder to express. We need more than one 2D notation to express 4D concepts, each in a seemingly “simple” way.\n\n# Complexity Is In The Eye Of The Beholder\nNothing is “complex”.\n\nThe use of a mis-fitting notation might make a problem appear more complex, but does not change the underlying nature of the problem.\n\n\nmore at <https:\/\/guitarvydas.github.io\/2021\/10\/14\/Complexity-vs-Simplicity-II.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634199258.338100",
        "parent_user_id": "UJFN50C00",
        "attachments": [
            {
                "service_name": "Computing Simplicity",
                "title": "Complexity vs Simplicity II",
                "title_link": "https:\/\/guitarvydas.github.io\/2021\/10\/14\/Complexity-vs-Simplicity-II.html",
                "text": "Definition of Simplicity “Lack of Nuance” Source of Complexity Problems have a number of degrees of freedom - dimensions.",
                "fallback": "Computing Simplicity: Complexity vs Simplicity II",
                "ts": 1634169600,
                "from_url": "https:\/\/guitarvydas.github.io\/2021\/10\/14\/Complexity-vs-Simplicity-II.html",
                "id": 1,
                "original_url": "https:\/\/guitarvydas.github.io\/2021\/10\/14\/Complexity-vs-Simplicity-II.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4g0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "“Because our industry has a codependent relationship with complexity.”\n\n[my reaction to the above statement]\n\n# Definition of Simplicity\n“Lack of Nuance”\n# Source of Complexity\nProblems have a number of degrees of freedom - dimensions.\n\nOur reality appears to have 4 dimensions (4D) - x,y,z,t.\n\nTrying to squeeze more than one dimension into a single notation results in what we perceive as complexity.\n\nFlattening 4D (reality) down to 2D (pen and paper) results in “complexity” - some things become merely harder to express. We need more than one 2D notation to express 4D concepts, each in a seemingly “simple” way.\n\n# Complexity Is In The Eye Of The Beholder\nNothing is “complex”.\n\nThe use of a mis-fitting notation might make a problem appear more complex, but does not change the underlying nature of the problem.\n\n\nmore at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/guitarvydas.github.io\/2021\/10\/14\/Complexity-vs-Simplicity-II.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U012RSHGTFY"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1634227284.340600",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1634227552.000000"
        },
        "client_msg_id": "99c0218b-61f4-488b-b790-f99f72dcd5eb",
        "text": "No question that some of the complexity is well-justified. It's also equally clear that times of increasing complexity provide lots of cover for <https:\/\/en.wikipedia.org\/wiki\/Regulatory_capture|capture> and rentierism. Such times are when priest classes gain power. If the \"complexity inequality\" grows too large in society it can become irreversible. The time for an intervention is when the priest class is still small and relatively ineffective. It's questionable if the programmer priest class is small these days, but it seems clear that it's ineffective. Society is constantly reminded these days of its failures. So these debates seem very valuable.\n\n<@UDQBTJ211> You're right that the space of possible quality has expanded a lot. An additional part of the problem is that the supported part of the space is a tiny fraction of the total space. Someone learning how to build websites today is unlikely to encounter pure-html tutorials anymore (that are not references). There's a pervasive implicit assumption in tutorials that the end point is CNN's website, which requires lots of ongoing maintenance in exchange for its perceived quality. I think it's valuable to expose people early to the idea of <https:\/\/en.wikipedia.org\/wiki\/Wabi-sabi|wabi-sabi> in software.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634199258.338100",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OezF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No question that some of the complexity is well-justified. It's also equally clear that times of increasing complexity provide lots of cover for "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Regulatory_capture",
                                "text": "capture"
                            },
                            {
                                "type": "text",
                                "text": " and rentierism. Such times are when priest classes gain power. If the \"complexity inequality\" grows too large in society it can become irreversible. The time for an intervention is when the priest class is still small and relatively ineffective. It's questionable if the programmer priest class is small these days, but it seems clear that it's ineffective. Society is constantly reminded these days of its failures. So these debates seem very valuable.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " You're right that the space of possible quality has expanded a lot. An additional part of the problem is that the supported part of the space is a tiny fraction of the total space. Someone learning how to build websites today is unlikely to encounter pure-html tutorials anymore (that are not references). There's a pervasive implicit assumption in tutorials that the end point is CNN's website, which requires lots of ongoing maintenance in exchange for its perceived quality. I think it's valuable to expose people early to the idea of "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Wabi-sabi",
                                "text": "wabi-sabi"
                            },
                            {
                                "type": "text",
                                "text": " in software."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USH01JEDQ",
        "type": "message",
        "ts": "1634228598.341000",
        "client_msg_id": "7fe1e882-6f93-4bf3-90c6-357075f6bdd3",
        "text": "In 1996, I found it stomach-churningly complex and frustrating to figure out how to even run more than a basic web page from my university network's servers, not to mention running a server myself, especially getting configurations right and the early versions of CGI working – I had years of web ptsd – no warm and fuzzy feelings here\n\nYes, html was easy, at least that",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "854f96b690f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-17\/6370745671793_854f96b690f51d1266ee_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Galtenberg",
            "display_name": "Chris G",
            "team": "T5TCAFTA9",
            "name": "galtenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634199258.338100",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Toa3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In 1996, I found it stomach-churningly complex and frustrating to figure out how to even run more than a basic web page from my university network's servers, not to mention running a server myself, especially getting configurations right and the early versions of CGI working – I had years of web ptsd – no warm and fuzzy feelings here\n\nYes, html was easy, at least that"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1634235182.341200",
        "client_msg_id": "02d6a342-2151-417a-a244-daa0e001e62a",
        "text": "My language works this way because it's not based on functions as such, but on a lower-level mechanism: rewriting after pattern matching. The \"function\" symbol is just another pattern element, not distinguished from \"data\" or \"parameters\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1633919351.305800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c+V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My language works this way because it's not based on functions as such, but on a lower-level mechanism: rewriting after pattern matching. The \"function\" symbol is just another pattern element, not distinguished from \"data\" or \"parameters\"."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01HKV85Y1J",
        "type": "message",
        "ts": "1634235578.341400",
        "client_msg_id": "4eeb9486-e579-4fc5-ade4-c26e409b7134",
        "text": "the dream of the 90's is alive at <https:\/\/neocities.org\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf67023e922f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f67023e922f1b8898e41ad2ff927b301.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "David Brooks",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "brodavi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634199258.338100",
        "parent_user_id": "UJFN50C00",
        "attachments": [
            {
                "service_name": "Neocities | neocities.org",
                "title": "Neocities",
                "title_link": "https:\/\/neocities.org\/",
                "text": "Free web hosting and tools that allow anyone to create a website. Join our community today!",
                "fallback": "Neocities | neocities.org: Neocities",
                "from_url": "https:\/\/neocities.org\/",
                "service_icon": "https:\/\/neocities.org\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/neocities.org\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JPVsN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the dream of the 90's is alive at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/neocities.org\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01HKV85Y1J",
        "type": "message",
        "ts": "1634235908.341700",
        "client_msg_id": "8b2a00ee-8d81-449f-ba62-5f4cfb437022",
        "text": "<https:\/\/glitch.com\/> is also pretty fun. My 90's self would approve.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf67023e922f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f67023e922f1b8898e41ad2ff927b301.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "David Brooks",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "brodavi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634199258.338100",
        "parent_user_id": "UJFN50C00",
        "attachments": [
            {
                "title": "Glitch: The friendly community where everyone builds the web",
                "title_link": "https:\/\/glitch.com\/",
                "text": "Simple, powerful, free tools to create and use millions of apps.",
                "fallback": "Glitch: The friendly community where everyone builds the web",
                "thumb_url": "https:\/\/cdn.glitch.me\/605e2a51-d45f-4d87-a285-9410ad350515%2Fglitch-social.png?v=1619667563754",
                "from_url": "https:\/\/glitch.com\/",
                "thumb_width": 1200,
                "thumb_height": 630,
                "service_icon": "https:\/\/glitch.com\/apple-touch-icon.png",
                "service_name": "glitch.com",
                "id": 1,
                "original_url": "https:\/\/glitch.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HfX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/glitch.com\/"
                            },
                            {
                                "type": "text",
                                "text": " is also pretty fun. My 90's self would approve."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1634238105.353400",
        "client_msg_id": "D11A1091-DD16-4C97-AD6A-99298EEDF94D",
        "text": "Using text labels with icons is always better and more clear. \n\nIt’s hard to say why a specific interface relies on icons exclusively. It may be: lack of usability testing, graphic designers doing interface design, ignorance, lack of time to come up with better solutions, preferring aesthetics over accessibility. \n\nOf course, using only icons can be okay in some cases: The longer one uses a tool and the more familiar one becomes with a tool, it might make sense to hide labels for less noise and more space. macOS toolbars provide users the option to choose between “text and icons”, “icons only”, “text only”. \n\nThere have been attempts to design user interfaces that adapt with time and usage: from high information density in the beginning that slowly hide labels the more often you use a feature. \n\nGeneral rule of thumb: except for arrows and handful very common icons, most icons will not be understood by users and text will always work better.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634167410.336500",
        "parent_user_id": "U018HK8QM2R",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0Mb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Using text labels with icons is always better and more clear. \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "It’s hard to say why a specific interface relies on icons exclusively. It may be: lack of usability testing, graphic designers doing interface design, ignorance, lack of time to come up with better solutions, preferring aesthetics over accessibility. \n"
                            },
                            {
                                "type": "text",
                                "text": "\nOf course, using only icons can be okay in some cases: The longer one uses a tool and the more familiar one becomes with a tool, it might make sense to hide labels for less noise and more space. macOS toolbars provide users the option to choose between “text and icons”, “icons only”, “text only”. \n\nThere have been attempts to design user interfaces that adapt with time and usage: from high information density in the beginning that slowly hide labels the more often you use a feature. \n\nGeneral rule of thumb: except for arrows and handful very common icons, most icons will not be understood by users and text will always work better."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1634241831.353700",
        "client_msg_id": "538d0d94-1dd2-4a15-b173-702d863a14c7",
        "text": "This is the classic, \"beginner user vs. professional user\" dichotomy. What is good for one is not necessarily good for the other.\n\nInstruments are the classic example. Pianos don't come labeled with the notes on the keys. Though students will often add that kind of thing when learning the instrument, as they become more advanced, they remove those kinds of aids.\n\nAll the examples you listed are what I would consider \"professional software\". They are designed for people that already have a lot of experience in their respective fields. With that extra background context, those icons probably carry much more information.\n\nIn fact, for many professional software packages, the users don't use the GUI, often preferring keyboard shortcuts. For the professional, \"discoverability\" is not a problem, speed and intuitive workflow is.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634167410.336500",
        "parent_user_id": "U018HK8QM2R",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2zK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is the classic, \"beginner user vs. professional user\" dichotomy. What is good for one is not necessarily good for the other.\n\nInstruments are the classic example. Pianos don't come labeled with the notes on the keys. Though students will often add that kind of thing when learning the instrument, as they become more advanced, they remove those kinds of aids.\n\nAll the examples you listed are what I would consider \"professional software\". They are designed for people that already have a lot of experience in their respective fields. With that extra background context, those icons probably carry much more information.\n\nIn fact, for many professional software packages, the users don't use the GUI, often preferring keyboard shortcuts. For the professional, \"discoverability\" is not a problem, speed and intuitive workflow is."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U012RSHGTFY"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1634250944.354000",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1634251001.000000"
        },
        "client_msg_id": "53097010-e3a1-49d0-8989-dcb7b245e309",
        "text": "<@UE6EFEPTQ> Yeah, I'm thinking of this in a similar way: a \"function signature\" is just a pattern, where none of the tokens are special \"function name\" tokens. Function calling is just pattern matching. However, I'm not thinking about *rewriting*, since that is conflating operational semantics with the mere syntax presented here. The actual means by which a computer executes a program consisting of these patterns can be considered separately.\n\nI'm aiming for a very non-conventional operational semantics, inspired by relational programming.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1633919351.305800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gzH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": " Yeah, I'm thinking of this in a similar way: a \"function signature\" is just a pattern, where none of the tokens are special \"function name\" tokens. Function calling is just pattern matching. However, I'm not thinking about "
                            },
                            {
                                "type": "text",
                                "text": "rewriting",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", since that is conflating operational semantics with the mere syntax presented here. The actual means by which a computer executes a program consisting of these patterns can be considered separately.\n\nI'm aiming for a very non-conventional operational semantics, inspired by relational programming."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1634270932.355500",
        "edited": {
            "user": "U01ULEWACPP",
            "ts": "1634275052.000000"
        },
        "client_msg_id": "60FCFD71-5E66-4498-986F-2DA9A4F53523",
        "text": "Here’s the post about “Progressive Reduction” that I had in mind:\n\n<https:\/\/layervault.tumblr.com\/post\/42361566927\/progressive-reduction|https:\/\/layervault.tumblr.com\/post\/42361566927\/progressive-reduction>\n\nAnd here’s a detailed article on the topic of icon usability: <https:\/\/www.nngroup.com\/articles\/icon-usability\/|https:\/\/www.nngroup.com\/articles\/icon-usability\/>\n\nIt all comes down to learned familiarity.\n\nIf you think about signs (pictograms) at an airport or train station, they are not only large in size but also represent the real world (planes, food, bath room, people, …) which makes it easier to understand those pictures.\n\nBut icons in software often need to represent abstract or novel features that don’t have a real world metaphor. And worse: they are often displayed in small size and too many of them nearby.\n\nAnother example that comes to my mind are traffic signs that may not come with labels but which need to be learned in driving school. Traffic signs come with color coding which can certainly help to convey additional meaning.\n\n<@U018HK8QM2R> The toolbar on the right side of Pixelmator shows icons only, but once you hover over an icon, labels for all other icons are shown as well. <https:\/\/www.pixelmator.com\/support\/guide\/pixelmator-pro\/1218|https:\/\/www.pixelmator.com\/support\/guide\/pixelmator-pro\/1218>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634167410.336500",
        "parent_user_id": "U018HK8QM2R",
        "attachments": [
            {
                "service_name": "Nielsen Norman Group",
                "title": "Icon Usability",
                "title_link": "https:\/\/www.nngroup.com\/articles\/icon-usability\/",
                "text": "Due to the absence of a standard usage for individual icons, text labels are necessary to communicate meaning and reduce ambiguity in an icon-based design.",
                "fallback": "Nielsen Norman Group: Icon Usability",
                "image_url": "https:\/\/media.nngroup.com\/media\/articles\/opengraph_images\/Slide08articlesicon-usability.png",
                "from_url": "https:\/\/www.nngroup.com\/articles\/icon-usability\/",
                "image_width": 478,
                "image_height": 250,
                "image_bytes": 141699,
                "service_icon": "https:\/\/media.nngroup.com\/static\/img\/favicon.ico",
                "id": 2,
                "original_url": "https:\/\/www.nngroup.com\/articles\/icon-usability\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yASl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here’s the post about “Progressive Reduction” that I had in mind:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/layervault.tumblr.com\/post\/42361566927\/progressive-reduction",
                                "text": "https:\/\/layervault.tumblr.com\/post\/42361566927\/progressive-reduction"
                            },
                            {
                                "type": "text",
                                "text": "\n\nAnd here’s a detailed article on the topic of icon usability: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.nngroup.com\/articles\/icon-usability\/",
                                "text": "https:\/\/www.nngroup.com\/articles\/icon-usability\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIt all comes down to learned familiarity.\n\nIf you think about signs (pictograms) at an airport or train station, they are not only large in size but also represent the real world (planes, food, bath room, people, …) which makes it easier to understand those pictures.\n\nBut icons in software often need to represent abstract or novel features that don’t have a real world metaphor. And worse: they are often displayed in small size and too many of them nearby.\n\nAnother example that comes to my mind are traffic signs that may not come with labels but which need to be learned in driving school. Traffic signs come with color coding which can certainly help to convey additional meaning.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U018HK8QM2R"
                            },
                            {
                                "type": "text",
                                "text": " The toolbar on the right side of Pixelmator shows icons only, but once you hover over an icon, labels for all other icons are shown as well. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.pixelmator.com\/support\/guide\/pixelmator-pro\/1218",
                                "text": "https:\/\/www.pixelmator.com\/support\/guide\/pixelmator-pro\/1218"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1634279914.356500",
        "client_msg_id": "9577d3f3-5c7c-4582-a094-d5c4da02dacf",
        "text": "The question posed initially requires some context: Is making a Web site harder today than in 1996 - FOR WHO?\nFor someone familiar with Web technology, the answer is no, as others have pointed out: if you want a plain HTML site, you can still make one with exactly the same effort as in 1996.\nFor someone familiar with just browsing the Web, who then wants to move on to creating a Web site, the answer is yes: it's much harder to get started because of the enormous labyrinth of paths you need to evaluate to make a good choice. Most of them end in some non-obvious trap such as a walled garden.\nIn 1996, you could walk into a book store, buy \"Web sites for Dummies\", and get going. Maybe some other book would give slightly better advice, but you couldn't make a serious mistake following any book's advice. Today, there is no obvious place to look for guidance, and most advertised solutions can be a serious mistake, depending on your requirements.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634199258.338100",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UjrRW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The question posed initially requires some context: Is making a Web site harder today than in 1996 - FOR WHO?\nFor someone familiar with Web technology, the answer is no, as others have pointed out: if you want a plain HTML site, you can still make one with exactly the same effort as in 1996.\nFor someone familiar with just browsing the Web, who then wants to move on to creating a Web site, the answer is yes: it's much harder to get started because of the enormous labyrinth of paths you need to evaluate to make a good choice. Most of them end in some non-obvious trap such as a walled garden.\nIn 1996, you could walk into a book store, buy \"Web sites for Dummies\", and get going. Maybe some other book would give slightly better advice, but you couldn't make a serious mistake following any book's advice. Today, there is no obvious place to look for guidance, and most advertised solutions can be a serious mistake, depending on your requirements."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U027P92A0N5"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1634280378.356700",
        "client_msg_id": "3d0a66d6-7df1-4491-ada2-690d54724b18",
        "text": "<@UCGAK10LS> I see your point but I think you would probably gain from studying term rewriting systems. A main featured distinguishing term rewriting from traditional function-calling approaches is precisely the separation of syntax and evaluation. Term rewriting systems start from a term algebra, which just says what valid terms look like. The next layer adds patterns and pattern matching, the result of which is a substitution. With patterns you can define rules. Rewriting is yet another layer, in which you have to decide on a strategy to select and apply rules. If you want different operational semantics, you just change the last one or two layers, but you can keep the lower ones.\nIn contrast, with traditional PL design, there is no useful layer between the AST and the full language, evaluation semantics included.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1633919351.305800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PKP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " I see your point but I think you would probably gain from studying term rewriting systems. A main featured distinguishing term rewriting from traditional function-calling approaches is precisely the separation of syntax and evaluation. Term rewriting systems start from a term algebra, which just says what valid terms look like. The next layer adds patterns and pattern matching, the result of which is a substitution. With patterns you can define rules. Rewriting is yet another layer, in which you have to decide on a strategy to select and apply rules. If you want different operational semantics, you just change the last one or two layers, but you can keep the lower ones.\nIn contrast, with traditional PL design, there is no useful layer between the AST and the full language, evaluation semantics included."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1634280553.358100",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1634280769.000000"
        },
        "client_msg_id": "BBF0966E-4787-42B7-B18F-11C32A1313A4",
        "text": "What if my semantics involves the equivalent of database equi-joins and aggregation? Surely those can’t be described in terms of term rewriting.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1633919351.305800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FjuQv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What if my semantics involves the equivalent of database equi-joins and aggregation? Surely those can’t be described in terms of term rewriting."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1634280599.359500",
        "client_msg_id": "84E2DFEA-695B-4805-A3DB-80E510C70665",
        "text": "i.e. my operational semantics has nothing to do with substitution of terms",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1633919351.305800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I4Hx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i.e. my operational semantics has nothing to do with substitution of terms"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]