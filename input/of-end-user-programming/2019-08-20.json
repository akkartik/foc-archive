[
    {
        "user": "UGK6P07UP",
        "type": "message",
        "ts": "1566284411.183300",
        "client_msg_id": "404bc2bc-380e-49f8-8c37-a82986c83ddc",
        "text": "As a simplified example, if I build something and someone want to use it, I need to create an API. But if it would be possible to enable a way for someone to interface with my creation so that they can build the API to interact with their creation, _without being a nuisance to me_ that could lead to something.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87bd62a4d028",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-27\/562509014037_87bd62a4d028d26ec0d4_72.jpg",
            "first_name": "Ilari",
            "real_name": "Ilari Kajaste",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ilari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566238710.155700",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cSbaA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As a simplified example, if I build something and someone want to use it, I need to create an API. But if it would be possible to enable a way for someone to interface with my creation so that they can build the API to interact with their creation, "
                            },
                            {
                                "type": "text",
                                "text": "without being a nuisance to me",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that could lead to something."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGK6P07UP",
        "type": "message",
        "ts": "1566284581.183500",
        "edited": {
            "user": "UGK6P07UP",
            "ts": "1566284712.000000"
        },
        "client_msg_id": "a82998a1-49d5-4013-80f1-0974fd023b66",
        "text": "<@UCUSW7WVD> Heh, yeah, I wish we had some documentation on that, but we don't. :slightly_smiling_face: The infra we are building is based on (very scalable) interoperability, reuse and adaptation, so we might have some building blocks in place there. However, the tooling and collaboration-centric APIs are still just a vagueish plan.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87bd62a4d028",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-27\/562509014037_87bd62a4d028d26ec0d4_72.jpg",
            "first_name": "Ilari",
            "real_name": "Ilari Kajaste",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ilari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566238710.155700",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UcXj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Heh, yeah, I wish we had some documentation on that, but we don't. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " The infra we are building is based on (very scalable) interoperability, reuse and adaptation, so we might have some building blocks in place there. However, the tooling and collaboration-centric APIs are still just a vagueish plan."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1566286066.183900",
        "client_msg_id": "98a798b9-f6a7-4d8f-b410-1977c9a0b717",
        "text": "Sounds like you're thinking about an asymmetric model of collaboration where one side has something and the other wants to access it. Interesting, I wasn't even thinking of that as 'collaboration'! Very curious to see how you crack that particular problem.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566238710.155700",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PFfGP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sounds like you're thinking about an asymmetric model of collaboration where one side has something and the other wants to access it. Interesting, I wasn't even thinking of that as 'collaboration'! Very curious to see how you crack that particular problem."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGK6P07UP",
        "type": "message",
        "ts": "1566286289.184100",
        "client_msg_id": "c9ebedf3-7883-4953-9536-7883c99dcfdd",
        "text": "I guess the key things about the plan are that the infra makes it possible to just point to any part (resource-tree) of any other thing made by the infra (provided access is allowed), and use it in the code interchangeably from if it was within your code. (The client reading the infra will on the background automatically connect to and\/or cache the remote content.) This is then coupled with the attempt at reducing any app complexity and supporting a structure for a layered approach to app creation that would naturally consist of interoperable parts within the app itself. This is then extended by the (infra-level support for) not just using remote code, but  adapting it while maintaining the link.\n\nSo in the short-term vision this leads to me (as a overly simplified example) creating an app that rolls a d6 die with having a Dice element, and then you creating an app that directly uses my Dice element but I adjust the value \"6\" to \"10\", yet maintaining the link. So then when a third party looks at your code, it'll lead to mine as well, and perhaps they take it and make the number a parameter that can be provided...\n\nBut this leads to obvious issues about versioning and structural changes and authorship, and there's no inherent backward loop for improving my code (for easing further collaboration), etc. etc. etc. No silver bullet, this is a tough problem, but I have hopes something will develop out of this.\n\nThe grander vision would be to have an IDE\/software crafting environment which is built to support this sort of interaction, visualizes\/conceptualizes the connections between apps and makes them more social, and has some capabilities the bridge gaps between commercial and open source software.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87bd62a4d028",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-27\/562509014037_87bd62a4d028d26ec0d4_72.jpg",
            "first_name": "Ilari",
            "real_name": "Ilari Kajaste",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ilari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566238710.155700",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BVS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess the key things about the plan are that the infra makes it possible to just point to any part (resource-tree) of any other thing made by the infra (provided access is allowed), and use it in the code interchangeably from if it was within your code. (The client reading the infra will on the background automatically connect to and\/or cache the remote content.) This is then coupled with the attempt at reducing any app complexity and supporting a structure for a layered approach to app creation that would naturally consist of interoperable parts within the app itself. This is then extended by the (infra-level support for) not just using remote code, but  adapting it while maintaining the link.\n\nSo in the short-term vision this leads to me (as a overly simplified example) creating an app that rolls a d6 die with having a Dice element, and then you creating an app that directly uses my Dice element but I adjust the value \"6\" to \"10\", yet maintaining the link. So then when a third party looks at your code, it'll lead to mine as well, and perhaps they take it and make the number a parameter that can be provided...\n\nBut this leads to obvious issues about versioning and structural changes and authorship, and there's no inherent backward loop for improving my code (for easing further collaboration), etc. etc. etc. No silver bullet, this is a tough problem, but I have hopes something will develop out of this.\n\nThe grander vision would be to have an IDE\/software crafting environment which is built to support this sort of interaction, visualizes\/conceptualizes the connections between apps and makes them more social, and has some capabilities the bridge gaps between commercial and open source software."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UAL7940NM"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGK6P07UP",
        "type": "message",
        "ts": "1566286435.184300",
        "client_msg_id": "4783922a-eddc-43ae-8977-b47f6d81e4f3",
        "text": "Another layer there is indeed the intentional and direct collaboration on building the same app code. Again the direction towards a layered approach and reduced complexity will hopefully help there.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87bd62a4d028",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-27\/562509014037_87bd62a4d028d26ec0d4_72.jpg",
            "first_name": "Ilari",
            "real_name": "Ilari Kajaste",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ilari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566238710.155700",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4kY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another layer there is indeed the intentional and direct collaboration on building the same app code. Again the direction towards a layered approach and reduced complexity will hopefully help there."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGK6P07UP",
        "type": "message",
        "ts": "1566286545.184500",
        "client_msg_id": "27839d2c-5048-49d0-8664-d1f9d68ef15a",
        "text": "But these are more in kind to big dreams, and I'm not all that convinced they will survive the practicalities of complex examples. And software _is_ inherently one big complex example. :smile: Anyway, interesting to see if we can make something come out of it. As said, this is a tough nut to crack which is also why it isn't a central focus for survival for us.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87bd62a4d028",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-27\/562509014037_87bd62a4d028d26ec0d4_72.jpg",
            "first_name": "Ilari",
            "real_name": "Ilari Kajaste",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ilari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566238710.155700",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "awwih",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But these are more in kind to big dreams, and I'm not all that convinced they will survive the practicalities of complex examples. And software "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " inherently one big complex example. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " Anyway, interesting to see if we can make something come out of it. As said, this is a tough nut to crack which is also why it isn't a central focus for survival for us."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1566288009.184900",
        "client_msg_id": "2fd76b42-b6e4-47d0-959e-23150eb946ab",
        "text": "I'm just hoping that building in P2P networking from the start in the core of, and deep in the architectural principles of, the system will enable social networking (+empowerment, etc) above\/around it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566238710.155700",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r60Eq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm just hoping that building in P2P networking from the start in the core of, and deep in the architectural principles of, the system will enable social networking (+empowerment, etc) above\/around it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1566288029.185100",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1566288034.000000"
        },
        "client_msg_id": "57408603-0e79-46eb-9195-6b9ee2d37557",
        "text": "I'm hoping people will immediately connect up and start sharing links to their rule object sets basically.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566238710.155700",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mSxgM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm hoping people will immediately connect up and start sharing links to their rule object sets basically."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1566288054.185400",
        "client_msg_id": "6d8fb7fa-cf76-465c-bc8b-3082e01c93a3",
        "text": "Sounds similar to <@UGK6P07UP>’s vision above",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566238710.155700",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MMWWz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sounds similar to "
                            },
                            {
                                "type": "user",
                                "user_id": "UGK6P07UP"
                            },
                            {
                                "type": "text",
                                "text": "’s vision above"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1566288072.185600",
        "client_msg_id": "635c5ca0-1730-47b9-8942-de49c06c1387",
        "text": "so yeah, versioning ... :open_mouth:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566238710.155700",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pw8Nq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "so yeah, versioning ... "
                            },
                            {
                                "type": "emoji",
                                "name": "open_mouth",
                                "unicode": "1f62e"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1566288153.185800",
        "text": "",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "[August 20th, 2019 9:00 AM] fp: I'm just hoping that building in P2P networking from the start in the core of, and deep in the architectural principles of, the system will enable social networking (+empowerment, etc) above\/around it.",
                "ts": "1566288009.184900",
                "author_id": "UE6EFEPTQ",
                "author_subname": "Duncan Cragg",
                "channel_id": "CLYCGTCPL",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "I'm just hoping that building in P2P networking from the start in the core of, and deep in the architectural principles of, the system will enable social networking (+empowerment, etc) above\/around it.",
                "author_name": "Duncan Cragg",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/UE6EFEPTQ",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/CLYCGTCPL\/p1566288009184900?thread_ts=1566238710155700&cid=CLYCGTCPL",
                "is_share": true,
                "footer": "Thread in Slack Conversation"
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1566288166.185900",
        "text": "",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "[August 20th, 2019 9:00 AM] fp: I'm hoping people will immediately connect up and start sharing links to their rule object sets basically.",
                "ts": "1566288029.185100",
                "author_id": "UE6EFEPTQ",
                "author_subname": "Duncan Cragg",
                "channel_id": "CLYCGTCPL",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "I'm hoping people will immediately connect up and start sharing links to their rule object sets basically.",
                "author_name": "Duncan Cragg",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/UE6EFEPTQ",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/CLYCGTCPL\/p1566288029185100?thread_ts=1566238710155700&cid=CLYCGTCPL",
                "is_share": true,
                "footer": "Thread in Slack Conversation"
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1566288192.186300",
        "client_msg_id": "3519acf8-8a75-4d17-b68f-bf2d30505728",
        "text": "↑ copied over from one of those deep dark threads that no-one reads",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "McCRQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "↑ copied over from one of those deep dark threads that no-one reads"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "ok_hand",
                "users": [
                    "UJ6LDMMN0",
                    "UA14TGLTC",
                    "U8A5MS6R1",
                    "U7C7B75R6"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1566296213.187500",
        "client_msg_id": "782d613a-611a-4e23-9826-10abb47e5517",
        "text": "Glad to have sparked something!\n\na) I would consider this a form of collaboration that I'd like to support. Doesn't matter what it's called, I think it's key to supporting this passive kind of collaboration\n\nHere's an unspoken thought in my head that's influenced  this line of thought: I normally see a strong correlation between people who are good with computers and those who like to work alone. I am one such person. I hate teamwork. I think this is partly because I am so augmented via a computer (which Engelbart designed to augment the single human) and much of that augmention disappears in a team setting, such as a spoken meeting, where I can't Google and precisely unpack assumptions and arguments and other pro tools. Thus teams are where I am weakest, so I avoid them. But that's also a huge weakness because teams are really powerful. What if computers were designed from the group up with the team usecase prioritized? I don't want to throw out the personal computers we have but maybe a new kind of interpersonal computer (maybe like Dynamicland) would be a great addition, and so I'm beginning to put my focus there",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566235677.142500",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/k5f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Glad to have sparked something!\n\na) I would consider this a form of collaboration that I'd like to support. Doesn't matter what it's called, I think it's key to supporting this passive kind of collaboration\n\nHere's an unspoken thought in my head that's influenced  this line of thought: I normally see a strong correlation between people who are good with computers and those who like to work alone. I am one such person. I hate teamwork. I think this is partly because I am so augmented via a computer (which Engelbart designed to augment the single human) and much of that augmention disappears in a team setting, such as a spoken meeting, where I can't Google and precisely unpack assumptions and arguments and other pro tools. Thus teams are where I am weakest, so I avoid them. But that's also a huge weakness because teams are really powerful. What if computers were designed from the group up with the team usecase prioritized? I don't want to throw out the personal computers we have but maybe a new kind of interpersonal computer (maybe like Dynamicland) would be a great addition, and so I'm beginning to put my focus there"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1566305197.187700",
        "client_msg_id": "f19354c0-2be9-46fe-b5f2-cc2f249cd1bb",
        "text": "<@U5TCAFTD3> I was a bit surprised by your first point because in my experience, starting with a blank slate is a rare event in any category of programming I am familiar with, with the possible exception of exams. Even when I write a small Python script for a one-off management task from scratch, it's based on existing executables, an existing file system layout, etc. Which means that discovering and understanding what's there is usually the first step in any programming project, and that is why I am such a big fan of <@UE1JQM9HQ>'s Glamorous Toolkit.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566235677.142500",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7d5AY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": " I was a bit surprised by your first point because in my experience, starting with a blank slate is a rare event in any category of programming I am familiar with, with the possible exception of exams. Even when I write a small Python script for a one-off management task from scratch, it's based on existing executables, an existing file system layout, etc. Which means that discovering and understanding what's there is usually the first step in any programming project, and that is why I am such a big fan of "
                            },
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            },
                            {
                                "type": "text",
                                "text": "'s Glamorous Toolkit."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1566306167.188100",
        "edited": {
            "user": "U5TCAFTD3",
            "ts": "1566306230.000000"
        },
        "client_msg_id": "e6c04359-3ab5-48b4-831f-7abb70902230",
        "text": "I'm confused with your interpretation of my first point. It seems like we agree: coding is always remixing others' work",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566235677.142500",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EXxf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm confused with your interpretation of my first point. It seems like we agree: coding is always remixing others' work"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1566318254.199900",
        "client_msg_id": "337fa7e1-7bf9-49e2-85b2-b20276fa8861",
        "text": "That'd be huge! In many current systems, it's either \"stay with flawed drafts\" (e.g. c++'s backwards compatibility) or \"refined abstractions that break everything\" (e.g. Python 2 \/ 3). I'm daydreaming of a system that is stable as it's first priority (think pinned dependencies) but allows to easily update (e.g. using code transformation tools). Rust's editions and `cargo fix` are interesting too (and have worked perfectly for me until now).\nProgram representations have a big impact on how effective code transformation \/ stability guarantees can be. So yeah, our \"text files in folders\" abstraction for representing programs might have to be changed first. I'm currently thinking of a graph-like \/ hash-based program representation. Using such a representation, transforming programs based on their semantics could be much easier and a lot of \"breaking changes\" (e.g. renaming a function, changing the order of parameters, ...) wouldn't be \"breaking\" anymore and therefore safe to perform frequently.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566031221.127800",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8Lg37",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That'd be huge! In many current systems, it's either \"stay with flawed drafts\" (e.g. c++'s backwards compatibility) or \"refined abstractions that break everything\" (e.g. Python 2 \/ 3). I'm daydreaming of a system that is stable as it's first priority (think pinned dependencies) but allows to easily update (e.g. using code transformation tools). Rust's editions and "
                            },
                            {
                                "type": "text",
                                "text": "cargo fix",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " are interesting too (and have worked perfectly for me until now).\nProgram representations have a big impact on how effective code transformation \/ stability guarantees can be. So yeah, our \"text files in folders\" abstraction for representing programs might have to be changed first. I'm currently thinking of a graph-like \/ hash-based program representation. Using such a representation, transforming programs based on their semantics could be much easier and a lot of \"breaking changes\" (e.g. renaming a function, changing the order of parameters, ...) wouldn't be \"breaking\" anymore and therefore safe to perform frequently."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1566318408.201400",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1566318475.000000"
        },
        "client_msg_id": "339572ee-d418-4015-b952-86162f28bebd",
        "text": "The interesting aspect here is how sharing happens. What are the artifacts you produce, how are they published, located, acquired, integrated etc?\n\nIn a shared-first approach this is built-in to the system. Like a persistent world multiplayer game, you create stuff in a shared virtual word that easily visible to others, and available for reuse and remixing. In an individual-first, this not a big concern because existing sharing methods may be deemed sufficient and are outside the system itself (copy files around, push to git etc.)\n\nI think the single shared world idea affects fundamental design decisions around composition methods. For instance, copying code files that need to be compiled into libraries does not seem the same as linking to a web page. The web is halfway there. It's a shared world where any published page has a URL and can be linked to. However the links are unstable and only jump links are available (no other forms of composition) and local development is outside the system. Projects like Unison and the Object Network are attempting to get there, it seems.  Both have the notion of a 'global id' to locate an element. Fluid is similar too, I think?\n\nAn earlier related idea from Joe Armstrong (Why do we need modules at all?) is `I am thinking more and more that if would be nice to have *all* functions in\na key_value database with unique names.`",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "reply_count": 15,
        "reply_users_count": 7,
        "latest_reply": "1566330126.217500",
        "reply_users": [
            "UC21F8Q48",
            "U8A5MS6R1",
            "UAL7940NM",
            "UJ6LDMMN0",
            "UCUSW7WVD",
            "UJN1TAYEQ",
            "UGK6P07UP"
        ],
        "replies": [
            {
                "user": "UC21F8Q48",
                "ts": "1566318748.201600"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1566318996.202200"
            },
            {
                "user": "UAL7940NM",
                "ts": "1566319156.202400"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1566319355.202600"
            },
            {
                "user": "UAL7940NM",
                "ts": "1566321984.203000"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1566322518.203500"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1566322577.203700"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1566322645.203900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1566325514.204400"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1566326251.206500"
            },
            {
                "user": "UGK6P07UP",
                "ts": "1566329078.209700"
            },
            {
                "user": "UGK6P07UP",
                "ts": "1566329277.212500"
            },
            {
                "user": "UGK6P07UP",
                "ts": "1566330095.217100"
            },
            {
                "user": "UGK6P07UP",
                "ts": "1566330117.217300"
            },
            {
                "user": "UGK6P07UP",
                "ts": "1566330126.217500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V=v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The interesting aspect here is how sharing happens. What are the artifacts you produce, how are they published, located, acquired, integrated etc?\n\nIn a shared-first approach this is built-in to the system. Like a persistent world multiplayer game, you create stuff in a shared virtual word that easily visible to others, and available for reuse and remixing. In an individual-first, this not a big concern because existing sharing methods may be deemed sufficient and are outside the system itself (copy files around, push to git etc.)\n\nI think the single shared world idea affects fundamental design decisions around composition methods. For instance, copying code files that need to be compiled into libraries does not seem the same as linking to a web page. The web is halfway there. It's a shared world where any published page has a URL and can be linked to. However the links are unstable and only jump links are available (no other forms of composition) and local development is outside the system. Projects like Unison and the Object Network are attempting to get there, it seems.  Both have the notion of a 'global id' to locate an element. Fluid is similar too, I think?\n\nAn earlier related idea from Joe Armstrong (Why do we need modules at all?) is `I am thinking more and more that if would be nice to have "
                            },
                            {
                                "type": "text",
                                "text": "all",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " functions in\na key_value database with unique names.`"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJFN50C00",
                    "UJ6LDMMN0",
                    "UE6EFEPTQ"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UC21F8Q48",
        "type": "message",
        "ts": "1566318748.201600",
        "edited": {
            "user": "UC21F8Q48",
            "ts": "1566318773.000000"
        },
        "client_msg_id": "ad06d46b-8367-4a94-9fbd-732dd83aefb8",
        "text": "&gt; *all* functions in a key_value database with unique names\nThere’s a large part of me that wants to believe this could work. Yet the received wisdom is the opposite: modules facilitate independent development by encouraging loose coupling, and (following Conway’s law) make interfaces explicit between the people building the software. <https:\/\/en.wikipedia.org\/wiki\/Conway%27s_law>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d79ba47b2952",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-03\/410049852848_d79ba47b2952e74a99d9_72.jpg",
            "first_name": "Brian",
            "real_name": "Brian Hempel",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "brianhempel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "parent_user_id": "U8A5MS6R1",
        "attachments": [
            {
                "title": "Conway's law",
                "title_link": "https:\/\/en.wikipedia.org\/wiki\/Conway%27s_law",
                "from_url": "https:\/\/en.wikipedia.org\/wiki\/Conway%27s_law",
                "author_name": "Wikipedia",
                "author_link": "https:\/\/en.wikipedia.org\/",
                "text": "Conway's law is an adage named after computer programmer Melvin Conway, who introduced the idea in 1967. It states that\n\norganizations which design systems ... are constrained to produce designs which are copies of the communication structures of these organizations.\n\nThe law is based on the reasoning that in order for a software module to function, multiple authors must communicate frequently with each other. Therefore, the software interface structure of a system will reflect the social boundaries of the organization(s) that produced it, across which communication is more difficult. Conway's law was intended as a valid sociological observation, although sometimes it's used in a humorous context. It was dubbed Conway's law by participants at the 1968 National Symposium on Modular Programming.",
                "fallback": "wikipedia: Conway's law",
                "service_icon": "https:\/\/a.slack-edge.com\/bfaba\/img\/unfurl_icons\/wikipedia.png",
                "id": 1,
                "original_url": "https:\/\/en.wikipedia.org\/wiki\/Conway%27s_law"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JQyQz",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "all",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " functions in a key_value database with unique names"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There’s a large part of me that wants to believe this could work. Yet the received wisdom is the opposite: modules facilitate independent development by encouraging loose coupling, and (following Conway’s law) make interfaces explicit between the people building the software. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Conway%27s_law"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1566318996.202200",
        "client_msg_id": "0604f224-6421-4bc5-a8d0-4c233379f8e0",
        "text": "Is loose coupling possible in a system where the 'functions' (or whatever the units of composition are) are stored in a db? In theory having two pieces of metadata attached to each function - a namespace and a private\/public flag - seems equivalent to whatever benefit is provided by modules?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yH8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is loose coupling possible in a system where the 'functions' (or whatever the units of composition are) are stored in a db? In theory having two pieces of metadata attached to each function - a namespace and a private\/public flag - seems equivalent to whatever benefit is provided by modules?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1566319156.202400",
        "client_msg_id": "458a4720-e539-46fd-ab9d-bc4153cb92f7",
        "text": "Web URLs (just like local file paths) are naming a location instead of identifying a particular content. If the particular content is at the location they're naming, everything's fine, but this is brittle. Think of unresolved imports, dll errors, 404s, ... These all happen because we're naming locations instead of content directly. In addition to the projects you mentioned, there's also IPFS which is pushing the idea of decentralized content-based addressing. I think that IPFS might be good candidate for a program representation that allows safe collaboration and sharing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "klY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Web URLs (just like local file paths) are naming a location instead of identifying a particular content. If the particular content is at the location they're naming, everything's fine, but this is brittle. Think of unresolved imports, dll errors, 404s, ... These all happen because we're naming locations instead of content directly. In addition to the projects you mentioned, there's also IPFS which is pushing the idea of decentralized content-based addressing. I think that IPFS might be good candidate for a program representation that allows safe collaboration and sharing."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1566319355.202600",
        "client_msg_id": "4424722a-509b-4a81-befe-a067b444de7c",
        "text": "Forgot to mention another related project: farm\/hypermerge (<https:\/\/github.com\/inkandswitch\/farm>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Fbk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Forgot to mention another related project: farm\/hypermerge ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/inkandswitch\/farm"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1566321984.203000",
        "client_msg_id": "c1fbed8f-461a-4163-afa9-089babe32b89",
        "text": "I'd like to see a PL where modules \/ namespaces are purely metadata for humans and the actual \"link\" between function calls and definitions is a unique (content-based?) identifier. This would allow people to curate related functions as they like without breaking any programs. Organizations \/ communities could maintain such collections and individual people could create their own organization based on their favorite functions \/ packages, ...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DRuQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd like to see a PL where modules \/ namespaces are purely metadata for humans and the actual \"link\" between function calls and definitions is a unique (content-based?) identifier. This would allow people to curate related functions as they like without breaking any programs. Organizations \/ communities could maintain such collections and individual people could create their own organization based on their favorite functions \/ packages, ..."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "U8A5MS6R1",
                    "UCUSW7WVD"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1566322518.203500",
        "client_msg_id": "02c508a0-762a-419f-8c37-f0853d46eec8",
        "text": "And someone on the eutomerge slack mentionnd InfoCentral.\n\n\"InfoCentral is an information-centered architecture for better software and a decentralizable internet. It is foremost concerned with data portability, semantics, and interoperability. \"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+eD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And someone on the eutomerge slack mentionnd InfoCentral.\n\n\"InfoCentral is an information-centered architecture for better software and a decentralizable internet. It is foremost concerned with data portability, semantics, and interoperability. \""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1566322577.203700",
        "client_msg_id": "b411820d-6262-490f-9814-e234c7788a90",
        "text": "<https:\/\/infocentral.org\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FI9M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/infocentral.org\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1566322645.203900",
        "client_msg_id": "c01b1c70-f30e-418c-927d-9b668d19c8b0",
        "text": "But the project seems old and I am not sure it is still active.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0ah",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But the project seems old and I am not sure it is still active."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1566325514.204400",
        "client_msg_id": "ace16601-7d79-48d6-8b14-29e76253ba9c",
        "text": "Based on what <@UGK6P07UP> said at <https:\/\/futureofcoding.slack.com\/archives\/CLYCGTCPL\/p1566286289184100?thread_ts=1566238710.155700&amp;cid=CLYCGTCPL>, it sounds like ValOS may be doing something interesting here as well.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "parent_user_id": "U8A5MS6R1",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/CLYCGTCPL\/p1566286289184100?thread_ts=1566238710.155700&amp;cid=CLYCGTCPL",
                "fallback": "[August 20th, 2019 12:31 AM] ilari: I guess the key things about the plan are that the infra makes it possible to just point to any part (resource-tree) of any other thing made by the infra (provided access is allowed), and use it in the code interchangeably from if it was within your code. (The client reading the infra will on the background automatically connect to and\/or cache the remote content.) This is then coupled with the attempt at reducing any app complexity and supporting a structure for a layered approach to app creation that would naturally consist of interoperable parts within the app itself. This is then extended by the (infra-level support for) not just using remote code, but  adapting it while maintaining the link.\n\nSo in the short-term vision this leads to me (as a overly simplified example) creating an app that rolls a d6 die with having a Dice element, and then you creating an app that directly uses my Dice element but I adjust the value \"6\" to \"10\", yet maintaining the link. So then when a third party looks at your code, it'll lead to mine as well, and perhaps they take it and make the number a parameter that can be provided...\n\nBut this leads to obvious issues about versioning and structural changes and authorship, and there's no inherent backward loop for improving my code (for easing further collaboration), etc. etc. etc. No silver bullet, this is a tough problem, but I have hopes something will develop out of this.\n\nThe grander vision would be to have an IDE\/software crafting environment which is built to support this sort of interaction, visualizes\/conceptualizes the connections between apps and makes them more social, and has some capabilities the bridge gaps between commercial and open source software.",
                "ts": "1566286289.184100",
                "author_id": "UGK6P07UP",
                "author_subname": "Ilari Kajaste",
                "channel_id": "CLYCGTCPL",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "I guess the key things about the plan are that the infra makes it possible to just point to any part (resource-tree) of any other thing made by the infra (provided access is allowed), and use it in the code interchangeably from if it was within your code. (The client reading the infra will on the background automatically connect to and\/or cache the remote content.) This is then coupled with the attempt at reducing any app complexity and supporting a structure for a layered approach to app creation that would naturally consist of interoperable parts within the app itself. This is then extended by the (infra-level support for) not just using remote code, but  adapting it while maintaining the link.\n\nSo in the short-term vision this leads to me (as a overly simplified example) creating an app that rolls a d6 die with having a Dice element, and then you creating an app that directly uses my Dice element but I adjust the value \"6\" to \"10\", yet maintaining the link. So then when a third party looks at your code, it'll lead to mine as well, and perhaps they take it and make the number a parameter that can be provided...\n\nBut this leads to obvious issues about versioning and structural changes and authorship, and there's no inherent backward loop for improving my code (for easing further collaboration), etc. etc. etc. No silver bullet, this is a tough problem, but I have hopes something will develop out of this.\n\nThe grander vision would be to have an IDE\/software crafting environment which is built to support this sort of interaction, visualizes\/conceptualizes the connections between apps and makes them more social, and has some capabilities the bridge gaps between commercial and open source software.",
                "author_name": "Ilari Kajaste",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/UGK6P07UP",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2019-02-27\/562509014037_87bd62a4d028d26ec0d4_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/CLYCGTCPL\/p1566286289184100?thread_ts=1566238710.155700&amp;cid=CLYCGTCPL",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lo0s6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Based on what "
                            },
                            {
                                "type": "user",
                                "user_id": "UGK6P07UP"
                            },
                            {
                                "type": "text",
                                "text": " said at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/CLYCGTCPL\/p1566286289184100?thread_ts=1566238710.155700&amp;cid=CLYCGTCPL",
                                "text": "https:\/\/futureofcoding.slack.com\/archives\/CLYCGTCPL\/p1566286289184100?thread_ts=1566238710.155700&cid=CLYCGTCPL"
                            },
                            {
                                "type": "text",
                                "text": ", it sounds like ValOS may be doing something interesting here as well."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1566326016.206300",
        "client_msg_id": "76fa8190-d7d8-4faf-b5ad-3cbbb3a3503d",
        "text": "Types of collaboration:\n\n1. Publish your code. Other people (who you may not know) can discover your code, reuse it, remix it.\n\nCentralized version: github public repository.\nDecentralized version: IPFS, plus a discovery mechanism.\n\n2. Share your code with members of your team (but don't share it outside your team).\n\nCentralized: github private repository.\nLess centralized: Run your own git server, with authentication and a user account for each team member.\nDecentralized: Each team member has their own git repository, shares patches with other team members.\n\n3. Real time collaboration. Several people editing the same code base at the same time.\n\nCentralized: The true version of the code exists on a central server.\nDecentralized: Each person has their own copy of the code, and a peer to peer protocol keeps them in sync.\n\n4. Collaborative live coding. Several people editing the same code base while the program is running. Or, in a video\/music performance, outputs of one live coding session are taken as inputs to another live coding session, in real time.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566326016.206300",
        "reply_count": 16,
        "reply_users_count": 6,
        "latest_reply": "1566851823.248600",
        "reply_users": [
            "UCUSW7WVD",
            "UJ6LDMMN0",
            "U5STGTB3J",
            "UJN1TAYEQ",
            "UHWC9PXBL",
            "U7C7B75R6"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1566326262.206700"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1566326338.206900"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1566329618.216700"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1566444642.235200"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1566460380.236100"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1566460401.236300"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1566463601.237000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1566493891.240400"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1566675384.242400"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1566675807.242600"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1566677685.242800"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1566681228.243000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1566681893.243200"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1566821889.246200"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1566851172.248300"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1566851823.248600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7WjM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Types of collaboration:\n\n1. Publish your code. Other people (who you may not know) can discover your code, reuse it, remix it.\n\nCentralized version: github public repository.\nDecentralized version: IPFS, plus a discovery mechanism.\n\n2. Share your code with members of your team (but don't share it outside your team).\n\nCentralized: github private repository.\nLess centralized: Run your own git server, with authentication and a user account for each team member.\nDecentralized: Each team member has their own git repository, shares patches with other team members.\n\n3. Real time collaboration. Several people editing the same code base at the same time.\n\nCentralized: The true version of the code exists on a central server.\nDecentralized: Each person has their own copy of the code, and a peer to peer protocol keeps them in sync.\n\n4. Collaborative live coding. Several people editing the same code base while the program is running. Or, in a video\/music performance, outputs of one live coding session are taken as inputs to another live coding session, in real time."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UJ6LDMMN0",
                    "UA14TGLTC"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "U6FKVSVCK",
                    "UGK6P07UP"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1566326251.206500",
        "client_msg_id": "c23fcfc5-83d3-4b54-a5ec-1116a1e6116d",
        "text": "\"Why do we need modules at all?\" In Curv, modules are first class values. They can be parameterized. You can have multiple implementations of the same API, each represented by a different module value, and you can pass these values as arguments or store them in data structures.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y4Dy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Why do we need modules at all?\" In Curv, modules are first class values. They can be parameterized. You can have multiple implementations of the same API, each represented by a different module value, and you can pass these values as arguments or store them in data structures."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1566326262.206700",
        "client_msg_id": "1932fd94-6f2e-4904-895e-ca5091fb8e04",
        "text": "I've been thinking about this as well. Collaboration isn't a simple thing, there's multiple axes to it. You've identified two so far: level of synchronicity and level of centralization. I wonder if there are others. Somewhere out there is a paper with a comprehensive list. <@UEH6T3RJB>, any ideas?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566326016.206300",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0MbS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been thinking about this as well. Collaboration isn't a simple thing, there's multiple axes to it. You've identified two so far: level of synchronicity and level of centralization. I wonder if there are others. Somewhere out there is a paper with a comprehensive list. "
                            },
                            {
                                "type": "user",
                                "user_id": "UEH6T3RJB"
                            },
                            {
                                "type": "text",
                                "text": ", any ideas?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1566326338.206900",
        "client_msg_id": "9c5f9791-be14-45e2-ac83-36703a92b6d3",
        "text": "(I should clarify that I _love_ designing features for collaboration. I just have a philosophical objection to emphasizing community over individual. Now that I realize it's philosophical I'll shut up about it :slightly_smiling_face:)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566326016.206300",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1f5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(I should clarify that I "
                            },
                            {
                                "type": "text",
                                "text": "love",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " designing features for collaboration. I just have a philosophical objection to emphasizing community over individual. Now that I realize it's philosophical I'll shut up about it "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGK6P07UP",
        "type": "message",
        "ts": "1566329078.209700",
        "client_msg_id": "39f144c5-6241-4b54-91fc-09a0ef3ae72d",
        "text": "<@UCUSW7WVD> Quite so. The _valos_ resource space (we call it _valospace_ for short) is indeed a fundamentally \"shared\" single world, even if it does consist of data that resides in different sources (_authorities_).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87bd62a4d028",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-27\/562509014037_87bd62a4d028d26ec0d4_72.jpg",
            "first_name": "Ilari",
            "real_name": "Ilari Kajaste",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ilari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nBnJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Quite so. The "
                            },
                            {
                                "type": "text",
                                "text": "valos",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " resource space (we call it "
                            },
                            {
                                "type": "text",
                                "text": "valospace",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for short) is indeed a fundamentally \"shared\" single world, even if it does consist of data that resides in different sources ("
                            },
                            {
                                "type": "text",
                                "text": "authorities",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ")."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGK6P07UP",
        "type": "message",
        "ts": "1566329277.212500",
        "client_msg_id": "4660ed0c-c21e-4c0b-9743-04fb6f9abd46",
        "text": "Basically, any _valos resource_ is defined by its partition URI (which consists of the authority, and the segment it lives within on that authority), and the resource identifier. We also plan on having the resource identifiers to be cryptographically transferable from authorities to another, so that the id will be the central defining factor, and the partition only working as a (very important) locator - but this is not implemented yet.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87bd62a4d028",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-27\/562509014037_87bd62a4d028d26ec0d4_72.jpg",
            "first_name": "Ilari",
            "real_name": "Ilari Kajaste",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ilari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "48tli",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Basically, any "
                            },
                            {
                                "type": "text",
                                "text": "valos resource",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is defined by its partition URI (which consists of the authority, and the segment it lives within on that authority), and the resource identifier. We also plan on having the resource identifiers to be cryptographically transferable from authorities to another, so that the id will be the central defining factor, and the partition only working as a (very important) locator - but this is not implemented yet."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1566329554.216100",
        "client_msg_id": "0398ec6c-5197-4347-9046-ddac7145d281",
        "text": "Once we enter into the era of interchangeable parts - and we aren't there yet - then individual creations, even large ones, will be more common instead of the \"mash-up\" messes that are so common to GitHub. With better languages and tools, it will be possible for regular people to create large complex systems that would have taken teams beforehand. I built some very large programs all by myself, but it took a huge amount of effort, and i had to write really tough missing pieces; once we have the lego pieces set up right, it will be way easier.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566235677.142500",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/TBJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Once we enter into the era of interchangeable parts - and we aren't there yet - then individual creations, even large ones, will be more common instead of the \"mash-up\" messes that are so common to GitHub. With better languages and tools, it will be possible for regular people to create large complex systems that would have taken teams beforehand. I built some very large programs all by myself, but it took a huge amount of effort, and i had to write really tough missing pieces; once we have the lego pieces set up right, it will be way easier."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1566329618.216700",
        "client_msg_id": "f7d41f23-e821-4748-b8ba-fb59abc30dc2",
        "text": "(<@UCUSW7WVD> well, I guess I am also biased by my philosophical view: we lack emphasize on collective. And as for our subject here, I see value to bring more collaborative behaviour in programming activity. And maybe I must clarify this once like you then shut up too... :wink: anyway: thanks)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566326016.206300",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XBg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "("
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " well, I guess I am also biased by my philosophical view: we lack emphasize on collective. And as for our subject here, I see value to bring more collaborative behaviour in programming activity. And maybe I must clarify this once like you then shut up too... "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            },
                            {
                                "type": "text",
                                "text": " anyway: thanks)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UGK6P07UP",
        "type": "message",
        "ts": "1566330095.217100",
        "client_msg_id": "fa5577fc-f6a6-42ce-a5f0-d5821988d52e",
        "text": "<@UAL7940NM> I'm not completely sure I get all of what you're implying by the \"actual link being being a unique identifier\", but we are indeed doing something very much like that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87bd62a4d028",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-27\/562509014037_87bd62a4d028d26ec0d4_72.jpg",
            "first_name": "Ilari",
            "real_name": "Ilari Kajaste",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ilari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t7cf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAL7940NM"
                            },
                            {
                                "type": "text",
                                "text": " I'm not completely sure I get all of what you're implying by the \"actual link being being a unique identifier\", but we are indeed doing something very much like that."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGK6P07UP",
        "type": "message",
        "ts": "1566330117.217300",
        "edited": {
            "user": "UGK6P07UP",
            "ts": "1566331498.000000"
        },
        "client_msg_id": "8d7dc197-5d76-46a5-b094-d1c93f3eeda2",
        "text": "If a function in valos calls another function, say `foo.doSomething()` then what actually happens is that the resource `foo` is a valos Entity that has a Property `doSomething`, which references a valos resource containing the function data - this is likely to be a resource directly owned by foo, but it doesn't need to be, in fact it could be a resource on a completely different authority. When that function call starts to happen, the system running the valos (the valos _gateway_) will notice the reference to doSomething, discern from the partition URI the correct protocol for connecting to the authority that has that resource, establish the connection, fetch the contents, and then execute the function. The code doing the call (and indeed the user) doesn't need to care, and the actual Resource that the `foo.doSomething` references could indeed be called or renamed to whatever, the relevant part is that it's `a810b-c9eea-...` that lives at `<valos-protocol:\/\/authorityUri\/partition>`. In the programmer's IDE it will be just a reference like any other (well, probably with a small indicator that it's a foreign reference). (This has obvious app security ramifications, but those can be mitigated by various means.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87bd62a4d028",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-27\/562509014037_87bd62a4d028d26ec0d4_72.jpg",
            "first_name": "Ilari",
            "real_name": "Ilari Kajaste",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ilari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CbT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If a function in valos calls another function, say "
                            },
                            {
                                "type": "text",
                                "text": "foo.doSomething()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " then what actually happens is that the resource "
                            },
                            {
                                "type": "text",
                                "text": "foo",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is a valos Entity that has a Property "
                            },
                            {
                                "type": "text",
                                "text": "doSomething",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which references a valos resource containing the function data - this is likely to be a resource directly owned by foo, but it doesn't need to be, in fact it could be a resource on a completely different authority. When that function call starts to happen, the system running the valos (the valos "
                            },
                            {
                                "type": "text",
                                "text": "gateway",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") will notice the reference to doSomething, discern from the partition URI the correct protocol for connecting to the authority that has that resource, establish the connection, fetch the contents, and then execute the function. The code doing the call (and indeed the user) doesn't need to care, and the actual Resource that the "
                            },
                            {
                                "type": "text",
                                "text": "foo.doSomething",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " references could indeed be called or renamed to whatever, the relevant part is that it's "
                            },
                            {
                                "type": "text",
                                "text": "a810b-c9eea-...",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that lives at "
                            },
                            {
                                "type": "link",
                                "url": "valos-protocol:\/\/authorityUri\/partition",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". In the programmer's IDE it will be just a reference like any other (well, probably with a small indicator that it's a foreign reference). (This has obvious app security ramifications, but those can be mitigated by various means.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAL7940NM"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGK6P07UP",
        "type": "message",
        "ts": "1566330126.217500",
        "client_msg_id": "88d9d3ca-2a3f-4fe9-a8fa-f079a5c5a909",
        "text": "I'm not sure if that matches what you meant or not.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87bd62a4d028",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-27\/562509014037_87bd62a4d028d26ec0d4_72.jpg",
            "first_name": "Ilari",
            "real_name": "Ilari Kajaste",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ilari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566318408.201400",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qwy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not sure if that matches what you meant or not."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]