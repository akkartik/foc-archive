[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1596698500.212100",
        "client_msg_id": "bd09bb58-69dd-4f6a-a283-d2da27492e2b",
        "text": "We Really Don't Know How to Compute!\n<https:\/\/www.youtube.com\/watch?v=Rk76BurH384>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596651885.195800",
        "parent_user_id": "U014WA16VNJ",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Gerry Sussman: We Really Don't Know How to Compute! (with Slides)",
                "title_link": "https:\/\/www.youtube.com\/watch?v=Rk76BurH384",
                "author_name": "Kenneth Friedman",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCOEy0zJHk8d3vwk47b2chZg",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/Rk76BurH384\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Gerry Sussman: We Really Don't Know How to Compute! (with Slides)",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/Rk76BurH384?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=Rk76BurH384",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=Rk76BurH384"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "atS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We Really Don't Know How to Compute!\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=Rk76BurH384"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D",
                    "U014WA16VNJ",
                    "UHWC9PXBL"
                ],
                "count": 3
            },
            {
                "name": "cake",
                "users": [
                    "ULK0Z4MPV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1596698659.212400",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1596699086.000000"
        },
        "client_msg_id": "6770d6cb-e28f-4add-b880-f76d86353d06",
        "text": "I think it's useful for a programming language to use CPS behind the scenes (i.e. using callbacks in place of call stacks), as opposed to something one done manually (e.g. explicitly passing callbacks) just for the utility that it opens up:\n* Easy debugger (stop time, go back in time)\n* Easy implementation of exceptions, etc.\n* Async code can be written as if it's synchronous\n\nBut I'm not sure CPS works that great unless you're essentially using a Scheme-like runtime",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596399249.077700",
        "parent_user_id": "U01003H81UM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Oz1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it's useful for a programming language to use CPS behind the scenes (i.e. using callbacks in place of call stacks), as opposed to something one done manually (e.g. explicitly passing callbacks) just for the utility that it opens up:\n* Easy debugger (stop time, go back in time)\n* Easy implementation of exceptions, etc.\n* Async code can be written as if it's synchronous\n\nBut I'm not sure CPS works that great unless you're essentially using a Scheme-like runtime"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01003H81UM"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1596699492.212800",
        "client_msg_id": "7ca1ef23-51a1-4f8f-bca9-ad6e53f0e720",
        "text": "This is the only example I know of that does this, though:\n\n<http:\/\/lisperator.net\/pltut\/|http:\/\/lisperator.net\/pltut\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596399249.077700",
        "parent_user_id": "U01003H81UM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A2rOz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is the only example I know of that does this, though:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/lisperator.net\/pltut\/",
                                "text": "http:\/\/lisperator.net\/pltut\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01003H81UM"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1596699499.213000",
        "client_msg_id": "92bf7b4a-c8d0-4065-887e-05bff801feca",
        "text": "One possible reading of \"shipping the renderer\" is that the document can be shipped as a program that renders the desired output in a resolution independent manner as a side effect of it being run. If this sounds like a crazy idea, consider that all Postscript and PDF documents are exactly this (the underlying language is essentially a dialect of FORTH). The inventor of those technologies was John Warnock who was at Utah with Kay (in fact, they shared a PhD advisor in David C. Evans; Warnock's other advisor was Ivan Sutherland, the person who made SketchPad).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596672397.209600",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7JU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One possible reading of \"shipping the renderer\" is that the document can be shipped as a program that renders the desired output in a resolution independent manner as a side effect of it being run. If this sounds like a crazy idea, consider that all Postscript and PDF documents are exactly this (the underlying language is essentially a dialect of FORTH). The inventor of those technologies was John Warnock who was at Utah with Kay (in fact, they shared a PhD advisor in David C. Evans; Warnock's other advisor was Ivan Sutherland, the person who made SketchPad)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UKP3B2J5D",
                    "UGYGY18UX",
                    "UA14TGLTC",
                    "UHWC9PXBL",
                    "ULK0Z4MPV",
                    "U8A5MS6R1",
                    "U014WA16VNJ"
                ],
                "count": 8
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1596700112.213200",
        "client_msg_id": "8772dbd4-b81c-41ab-bb59-2a1a2b917452",
        "text": "I fully agree. Well, mostly, in fact, I could discuss the part about text files, but I guess you only mean (or don't you? :slightly_smiling_face: ) it as an illustration, so I skip this discussion...\n\nAs for the context, I agree it is a very important aspect. It is which gives lots of inertia to what is happening and what we can change. And you have to be aware of that when you work on FoC projects. To use the cost function metaphor, we are at a local minimum. And all the social\/technical\/economic contexts explains why we are at this minimum. They are the force that pull us down to it.\n\nSo what is this local minimum? Is there other lower minima? Where are they? What is the path to go there? etc. And as Foc builders I agree with that we must know all this: the minima we want to reach and the path to go there. And you will do some compromises.\n\nAs an illustration, in my case, I identified that one context aspect of the current local minimum that is hard to go away for me, is the web plateforme. If I want to provide something that can be used by most of the people soon, I know the web plateforme is a very good fit. And even if it has lots of technical problems that I want to get rid of. So I decided to stick with this aspect of the current local minimum of \"the present of coding\" and choose to work on other aspects.\n\nHere is another illustration of how to be aware and how to deal with these context aspects that are local minima. It is about adoption and audience. Something about the social context that is very costly to \"move\", is the current \"programming audience\". It is very hard to change habits and well established \"standards\", even if there are problems with them you want to change (random concrete example that I encountered: bash scripting). So one very risky and difficult strategy is to decide not to target this audience first and hope it will be convinced later. So I guess I will try this strategy, I want to propose new programming tools that I know most of today programmers won't want to use, so I will first target new programmers, that are not bias by the current programming context. Then if things go well, keeping the good parts of what I will build, maybe current \"established\" programmers will use them. So it is an other way to be aware of the context and try to deal with it to build a FoC vision.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596672397.209600",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ElPUU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I fully agree. Well, mostly, in fact, I could discuss the part about text files, but I guess you only mean (or don't you? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " ) it as an illustration, so I skip this discussion...\n\nAs for the context, I agree it is a very important aspect. It is which gives lots of inertia to what is happening and what we can change. And you have to be aware of that when you work on FoC projects. To use the cost function metaphor, we are at a local minimum. And all the social\/technical\/economic contexts explains why we are at this minimum. They are the force that pull us down to it.\n\nSo what is this local minimum? Is there other lower minima? Where are they? What is the path to go there? etc. And as Foc builders I agree with that we must know all this: the minima we want to reach and the path to go there. And you will do some compromises.\n\nAs an illustration, in my case, I identified that one context aspect of the current local minimum that is hard to go away for me, is the web plateforme. If I want to provide something that can be used by most of the people soon, I know the web plateforme is a very good fit. And even if it has lots of technical problems that I want to get rid of. So I decided to stick with this aspect of the current local minimum of \"the present of coding\" and choose to work on other aspects.\n\nHere is another illustration of how to be aware and how to deal with these context aspects that are local minima. It is about adoption and audience. Something about the social context that is very costly to \"move\", is the current \"programming audience\". It is very hard to change habits and well established \"standards\", even if there are problems with them you want to change (random concrete example that I encountered: bash scripting). So one very risky and difficult strategy is to decide not to target this audience first and hope it will be convinced later. So I guess I will try this strategy, I want to propose new programming tools that I know most of today programmers won't want to use, so I will first target new programmers, that are not bias by the current programming context. Then if things go well, keeping the good parts of what I will build, maybe current \"established\" programmers will use them. So it is an other way to be aware of the context and try to deal with it to build a FoC vision."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1596700572.213800",
        "client_msg_id": "16b9aa5d-a074-488d-b8b8-8f2327d54d07",
        "text": "If undefined means \"not known yet\" and null means \"known to be nothing\", then what about the situation when a value is known to be the value `undefined` ?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QiQM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If undefined means \"not known yet\" and null means \"known to be nothing\", then what about the situation when a value is known to be the value "
                            },
                            {
                                "type": "text",
                                "text": "undefined",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1596702294.214000",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1596741499.000000"
        },
        "client_msg_id": "74514c1b-2c8d-4056-9d10-5adbaf9b819e",
        "text": "This one is a bit scatter-brain, but it got me questioning the status quo in the first place:\n\n(It's not as much about DCI as the description suggests. It's more about what's wrong with the state of software culture and practices)\n\n<https:\/\/www.infoq.com\/interviews\/coplien-dci-architecture\/|https:\/\/www.infoq.com\/interviews\/coplien-dci-architecture\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596651885.195800",
        "parent_user_id": "U014WA16VNJ",
        "attachments": [
            {
                "service_name": "InfoQ",
                "title": "Jim Coplien: Why DCI is the Right Architecture for Right Now",
                "title_link": "https:\/\/www.infoq.com\/interviews\/coplien-dci-architecture\/",
                "text": "Jim Coplien, co-creator of Data, Context and Interaction (DCI) architecture, covers a variety of topics including DCI, the importance of language support for DCI and the state of Agile development. Coplien has championed the DCI architecture with Trygve ReensKaug, the inventor of the Model-View-Controller (MVC) architecture, which separates data and its processing from presentation.",
                "fallback": "InfoQ: Jim Coplien: Why DCI is the Right Architecture for Right Now",
                "from_url": "https:\/\/www.infoq.com\/interviews\/coplien-dci-architecture\/",
                "service_icon": "https:\/\/cdn.infoq.com\/statics_s2_20200804083750\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/www.infoq.com\/interviews\/coplien-dci-architecture\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JBxg2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This one is a bit scatter-brain, but it got me questioning the status quo in the first place:\n\n(It's not as much about DCI as the description suggests. It's more about what's wrong with the state of software culture and practices)\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.infoq.com\/interviews\/coplien-dci-architecture\/",
                                "text": "https:\/\/www.infoq.com\/interviews\/coplien-dci-architecture\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1596702829.214400",
        "client_msg_id": "57055228-f064-4f2f-ab4c-f0d8c4dc134b",
        "text": "&gt; But I’m always extremely skeptical when they don’t address _why_ programming became the way it is.\nIt's important to consider the context. Why things are the way they are today. But also why things were the way they were yesterday.\n\nBack then is was assumed that to use a computer one has to be a programmer. There was no distinction between programmer and user. It was the same. We've given that up, clearly. Even though many of us here seem to question if it has to be like that.\n\nWe are much further down a certain branch of the design space and it only ever gets more complicated from here. There's only so much we can \"fix\" here, if we stay on the same branch, take the present as given, and only look towards the future.\nBut what other places could we find, if we're willing to backtrack to a much earlier time and take a different branch from there?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596672397.209600",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JZJ",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But I’m always extremely skeptical when they don’t address "
                            },
                            {
                                "type": "text",
                                "text": "why",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " programming became the way it is."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIt's important to consider the context. Why things are the way they are today. But also why things were the way they were yesterday.\n\nBack then is was assumed that to use a computer one has to be a programmer. There was no distinction between programmer and user. It was the same. We've given that up, clearly. Even though many of us here seem to question if it has to be like that.\n\nWe are much further down a certain branch of the design space and it only ever gets more complicated from here. There's only so much we can \"fix\" here, if we stay on the same branch, take the present as given, and only look towards the future.\nBut what other places could we find, if we're willing to backtrack to a much earlier time and take a different branch from there?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UKP3B2J5D",
                    "U013ZLJARC7",
                    "UGYGY18UX",
                    "UA14TGLTC",
                    "U014WA16VNJ",
                    "U8A5MS6R1"
                ],
                "count": 6
            }
        ]
    },
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1596707676.217100",
        "client_msg_id": "7F762270-F491-423D-A5AC-1DEEE841C88A",
        "text": "While I do like good talks I think a kind of “future of coding” value\/argument map could be more useful. Anyone feels in the same way ?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596651885.195800",
        "parent_user_id": "U014WA16VNJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S8o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "While I do like good talks I think a kind of “future of coding” value\/argument map could be more useful. Anyone feels in the same way ?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1596714132.218300",
        "client_msg_id": "42B43C90-9B55-4096-9B58-7E2D26F7003E",
        "text": "I will tinker around with this! Thank you :pray: for sharing ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596614507.159400",
        "parent_user_id": "UMPQ9A65N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g9=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I will tinker around with this! Thank you "
                            },
                            {
                                "type": "emoji",
                                "name": "pray",
                                "unicode": "1f64f"
                            },
                            {
                                "type": "text",
                                "text": " for sharing "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "UMPQ9A65N"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1596715628.218500",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1596715657.000000"
        },
        "client_msg_id": "db2a16ca-251a-42cd-83bd-fae3646b8bd1",
        "text": "&gt; Shipping a rendering engine with an HTML file would be a technical nightmare.\nMy FoC project will eventually do this on the browser using Web Assembly and WebGPU. Shipping your own renderer is what WebGPU is for.\n\nAs a specific example, my FoC includes zoomable UIs (ZUIs), one of those really good ideas from the 1970's (eg MIT's \"Dataland\") that never became mainstream. You can build a ZUI in the browser if you ship your own renderer. Eg, see <http:\/\/wdobbie.com\/warandpeace\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596672397.209600",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hh3eI",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Shipping a rendering engine with an HTML file would be a technical nightmare."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My FoC project will eventually do this on the browser using Web Assembly and WebGPU. Shipping your own renderer is what WebGPU is for.\n\nAs a specific example, my FoC includes zoomable UIs (ZUIs), one of those really good ideas from the 1970's (eg MIT's \"Dataland\") that never became mainstream. You can build a ZUI in the browser if you ship your own renderer. Eg, see "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/wdobbie.com\/warandpeace\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U014WA16VNJ",
                    "U8A5MS6R1",
                    "UC2A2ARPT"
                ],
                "count": 3
            },
            {
                "name": "clap",
                "users": [
                    "UE1JQM9HQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UH85W1ML1",
        "type": "message",
        "ts": "1596719138.219000",
        "client_msg_id": "4efa4adf-ecf8-443e-8e64-8ecf33fd6287",
        "text": "<@UMPQ9A65N>, fyi, there's a w3c standard for specifying a timecode in a URL fragment like that: <https:\/\/www.w3.org\/TR\/media-frags\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2c0e4a3979e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529852667013_2c0e4a3979e8e92c4924_72.jpg",
            "first_name": "",
            "real_name": "Vitorio Miliano",
            "display_name": "vitorio",
            "team": "T5TCAFTA9",
            "name": "vito_futureofcoding",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596614507.159400",
        "parent_user_id": "UMPQ9A65N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Typ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UMPQ9A65N"
                            },
                            {
                                "type": "text",
                                "text": ", fyi, there's a w3c standard for specifying a timecode in a URL fragment like that: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.w3.org\/TR\/media-frags\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1596727805.222800",
        "client_msg_id": "74D47BB0-C5A2-4199-B51B-E9F40D132788",
        "text": "<@UJFN50C00> while I do agree (and internally I think about lots of things as a sort of _topology)_ I think to get there we’d probably have to gather talks, articles, quotes, software, and more before we had a chance of being able to compress it down into a 2D-3D space. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596651885.195800",
        "parent_user_id": "U014WA16VNJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OovBE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJFN50C00"
                            },
                            {
                                "type": "text",
                                "text": " while I do agree (and internally I think about lots of things as a sort of "
                            },
                            {
                                "type": "text",
                                "text": "topology) ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "I think to get there we’d probably have to gather talks, articles, quotes, software, and more before we had a chance of being able to compress it down into a 2D-3D space. "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1596737595.224200",
        "client_msg_id": "942b141e-8bdf-420e-bc47-d2925064e743",
        "text": "&gt; _If only everyone had followed this good old idea, everything would be great by now!_\nI disagree which statements of this form too. I don't get this sense from most \"FoC cannon\" though. My interpretation is more like _\"hey this research trajectory looked really promising but never got funded, explored, developed, (in fact due to social and economic factors)\"_. Possibly in the alternative reality we would have a new set of problems and issues. The FoC group (_that's us_ in the alternative present!) would be discussing those problems and solutions in this ~slack~ really advanced multi media collaborative space . The question I ponder is: would we be looking at Unix + text files etc. (the \"alternative that didn't happen\") as something potentially better? I tend to answer \"no\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596672397.209600",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RrxJI",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If only everyone had followed this good old idea, everything would be great by now!",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI disagree which statements of this form too. I don't get this sense from most \"FoC cannon\" though. My interpretation is more like "
                            },
                            {
                                "type": "text",
                                "text": "\"hey this research trajectory looked really promising but never got funded, explored, developed, (in fact due to social and economic factors)\"",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Possibly in the alternative reality we would have a new set of problems and issues. The FoC group ("
                            },
                            {
                                "type": "text",
                                "text": "that's us",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in the alternative present!) would be discussing those problems and solutions in this "
                            },
                            {
                                "type": "text",
                                "text": "slack",
                                "style": {
                                    "strike": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " really advanced multi media collaborative space . The question I ponder is: would we be looking at Unix + text files etc. (the \"alternative that didn't happen\") as something potentially better? I tend to answer \"no\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1596745330.226800",
        "client_msg_id": "A1EFE642-2CD3-480E-9647-9E220E9F8073",
        "text": "<@U014WA16VNJ> do you have tools or finished visualisations of these topologys?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596651885.195800",
        "parent_user_id": "U014WA16VNJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6ZTWN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " do you have tools or finished visualisations of these topologys?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1596754344.227200",
        "client_msg_id": "dde3ba5a-77e4-4541-b95d-779822a66fb4",
        "text": "&gt; Shipping a rendering engine with an HTML file would be a technical nightmare\nIt's called \"an app\", in a large number of cases. And yes, technically a bodge.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596672397.209600",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P3F",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Shipping a rendering engine with an HTML file would be a technical nightmare"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's called \"an app\", in a large number of cases. And yes, technically a bodge."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U017TE5R09M"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1596754734.227400",
        "client_msg_id": "48359cab-21da-4aa0-85ad-0279229bcbf4",
        "text": "(just recovering from the neuronal warp that question induced)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1jSq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(just recovering from the neuronal warp that question induced)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1596754770.227600",
        "client_msg_id": "c0dcb26c-4b85-4dad-9a38-a5875f8785fe",
        "text": "maybe \"not known yet\" can also encompass \"not known, and who knows why or when\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QJI7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "maybe \"not known yet\" can also encompass \"not known, and who knows why or when\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1596754802.227800",
        "client_msg_id": "fe5ad254-39dc-453e-ad01-0d467eaee1a2",
        "text": "got any examples?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Gn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "got any examples?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1596759247.230700",
        "client_msg_id": "A36B4A49-874B-411B-99F2-325AA4801603",
        "text": "i’m dealing with that trying to do something somewhere between (un)typed holes and a structural editor—if a user has a key but its property isn’t defined yet, and then they skip ahead to elsewhere in the syntax tree, i’d say that i know they want a value for the property later but it’s not strictly defined yet",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GKpE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i’m dealing with that trying to do something somewhere between (un)typed holes and a structural editor—if a user has a key but its property isn’t defined yet, and then they skip ahead to elsewhere in the syntax tree, i’d say that i know they want a value for the property later but it’s not strictly defined yet"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAVCC2X70",
                    "U014WA16VNJ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1596759267.231500",
        "client_msg_id": "633C6C58-1894-4100-8CE6-2B2869AA406E",
        "text": "pretty sure i can just like... ignore that situation though lol",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+vUd7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "pretty sure i can just like... ignore that situation though lol"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1596759372.233200",
        "client_msg_id": "67BE1D31-40F2-48D7-993E-EFCFABC042A6",
        "text": "i haven’t stopped thinking about your no lists\/everything is a list model <@UE6EFEPTQ>... i think you might be spiritually correct, not making afforsances for user convenience",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hiVyp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i haven’t stopped thinking about your no lists\/everything is a list model "
                            },
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": "... i think you might be spiritually correct, not making afforsances for user convenience"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1596759424.234400",
        "client_msg_id": "71C0BB05-0BD0-4FE4-99DE-0630F9DACFCC",
        "text": "reminds me of how a lot of stuff “just works” in APL as a result of rank polymorphism, but also seems a bit further than that",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hM5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "reminds me of how a lot of stuff “just works” in APL as a result of rank polymorphism, but also seems a bit further than that"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1596761250.234600",
        "client_msg_id": "d488d6d2-ee80-4f03-870b-002aed51a6fd",
        "text": "In Python, there is no char type. They are just strings of length 1. So `a[0] == a` is true for strings of length 1. You can also loop over them `for char in a` will work for zero, one or longer length strings. Things don't come crashing down.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jc42s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In Python, there is no char type. They are just strings of length 1. So "
                            },
                            {
                                "type": "text",
                                "text": "a[0] == a",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is true for strings of length 1. You can also loop over them "
                            },
                            {
                                "type": "text",
                                "text": "for char in a",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " will work for zero, one or longer length strings. Things don't come crashing down."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1596761444.234800",
        "client_msg_id": "e602bdf9-31c7-4592-9b37-ebbcbf4037c7",
        "text": "BTW, one angle to think about this is that 'nothing' is a property of the field itself (e.g. fields are boxes, and one box is empty). While 'unknown' is a special kind of object that I can put in a box. Interesting.. can I put two unknowns in a box? Or an `unknown` and an `apple`?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2Iq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "BTW, one angle to think about this is that 'nothing' is a property of the field itself (e.g. fields are boxes, and one box is empty). While 'unknown' is a special kind of object that I can put in a box. Interesting.. can I put two unknowns in a box? Or an "
                            },
                            {
                                "type": "text",
                                "text": "unknown",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and an "
                            },
                            {
                                "type": "text",
                                "text": "apple",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMPQ9A65N",
        "type": "message",
        "ts": "1596766550.235200",
        "client_msg_id": "5655e910-3a5d-43a9-b9c6-82aa3c075eca",
        "text": "<@UH85W1ML1> Thank you. I didn't know that before. I'll make the hash follow the spec then :pray:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g65ecdf18e50",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/65ecdf18e50934634898dd3eaa310a69.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Pine Wu",
            "display_name": "Pine Wu",
            "team": "T5TCAFTA9",
            "name": "octref",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596614507.159400",
        "parent_user_id": "UMPQ9A65N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QJ=FI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UH85W1ML1"
                            },
                            {
                                "type": "text",
                                "text": " Thank you. I didn't know that before. I'll make the hash follow the spec then "
                            },
                            {
                                "type": "emoji",
                                "name": "pray",
                                "unicode": "1f64f"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UH85W1ML1",
                    "UJ6LDMMN0"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1596769650.235800",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1596812202.000000"
        },
        "client_msg_id": "03b124be-f7c3-4329-a835-9cbc4bf3a784",
        "text": "I think that falls apart if you can get back 'nothing' as a value. But if you can't, then what happens when you try to get it? The only other options I know are throwing an error, or some kind of Haskell-like \"Maybe\" construct",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NAc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think that falls apart if you can get back 'nothing' as a value. But if you can't, then what happens when you try to get it? The only other options I know are throwing an error, or some kind of Haskell-like \"Maybe\" construct"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1596777384.236100",
        "client_msg_id": "ee30143a-bf03-48f0-bae9-fa9caaa45fb8",
        "text": "<@UFB8STN7K>: Yeah. To the extent that the future of software is inseparable from the future of critical thinking, these statements feel counter-productive. Even if they lead to good ends (which is questionable), means matter in the long term. Our canon feels impoverished for being phrased in terms of stone tablets from on high. Too much emphasis on aesthetics (\"how _cool_ is a retrohistorical talk?!\") Here, I'm going to spin up a new thread..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596672397.209600",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "apTL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": ": Yeah. To the extent that the future of software is inseparable from the future of critical thinking, these statements feel counter-productive. Even if they lead to good ends (which is questionable), means matter in the long term. Our canon feels impoverished for being phrased in terms of stone tablets from on high. Too much emphasis on aesthetics (\"how "
                            },
                            {
                                "type": "text",
                                "text": "cool",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is a retrohistorical talk?!\") Here, I'm going to spin up a new thread.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1596777634.240000",
        "client_msg_id": "f7db4a32-1118-4458-8420-5614aedb1dac",
        "text": "My personal discipline is to always phrase imperatives as trade-offs:\n* You should be tithing some of your time to understanding your computer. It's not enough to ask why others have not made it easier for you to understand your computer.\n* You should be willing to put up with klunkier interfaces in exchange for nicer implementation properties. (Eat your vegetables.) Sticking with text mode is an extreme form of this, hopefully I can break out of that in time.\n* You should be willing to take on some complexity in selecting forks of software to depend on, in exchange for a simpler computing stack once you've added them.\n* You should be willing to give up efficiency for safety. Memory leaks are ok if they avoid memory corruption.\n\nI think speaking in trade-offs is a major level-up in discourse over \"why don't we have this yet?\" Relevant is the Thiel question: \"What important truth do very few people agree with you on?\" Most answers turn out to be not very iconoclastic at all, because they aren't phrased as trade-offs. It's great that you want world peace. What do you think is worth _giving up_ for it?\n\nSo, what important but iconoclastic trade-off do _you_ believe in? :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596777634.240000",
        "reply_count": 12,
        "reply_users_count": 7,
        "latest_reply": "1596897809.300800",
        "reply_users": [
            "UCUSW7WVD",
            "UC2A2ARPT",
            "UJ6LDMMN0",
            "U5STGTB3J",
            "UHWC9PXBL",
            "UE0ETTCG7",
            "UDQBTJ211"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1596778426.240800"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1596778532.242000"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1596793646.250500"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1596795801.256600"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1596796834.258800"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1596827641.268700"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1596828066.269200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1596828175.269400"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1596828963.271800"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1596830974.272400"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1596896409.299900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1596897809.300800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "irqK0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My personal discipline is to always phrase imperatives as trade-offs:\n* You should be tithing some of your time to understanding your computer. It's not enough to ask why others have not made it easier for you to understand your computer.\n* You should be willing to put up with klunkier interfaces in exchange for nicer implementation properties. (Eat your vegetables.) Sticking with text mode is an extreme form of this, hopefully I can break out of that in time.\n* You should be willing to take on some complexity in selecting forks of software to depend on, in exchange for a simpler computing stack once you've added them.\n* You should be willing to give up efficiency for safety. Memory leaks are ok if they avoid memory corruption.\n\nI think speaking in trade-offs is a major level-up in discourse over \"why don't we have this yet?\" Relevant is the Thiel question: \"What important truth do very few people agree with you on?\" Most answers turn out to be not very iconoclastic at all, because they aren't phrased as trade-offs. It's great that you want world peace. What do you think is worth "
                            },
                            {
                                "type": "text",
                                "text": "giving up",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for it?\n\nSo, what important but iconoclastic trade-off do "
                            },
                            {
                                "type": "text",
                                "text": "you",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " believe in? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U018DRGAC5S",
                    "U013KEPEJ2H",
                    "UC2A2ARPT",
                    "UDQKHNP51",
                    "UJBAJNFLK",
                    "UMWF81HTP",
                    "UHWC9PXBL",
                    "UFB8STN7K"
                ],
                "count": 8
            },
            {
                "name": "100",
                "users": [
                    "UKP3B2J5D",
                    "UBSMEUXAA",
                    "UAL7940NM",
                    "UEDDR6L5Q"
                ],
                "count": 4
            },
            {
                "name": "ok_hand",
                "users": [
                    "UJ6LDMMN0",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1596778426.240800",
        "client_msg_id": "b3f885dc-d596-4d6f-8aa7-da51f7dbebaf",
        "text": "Thinking in trade-offs feels like a synthesis of <@UFB8STN7K>'s and <@U5STGTB3J>'s positions. Yes, you have to acknowledge context. And yes, sometimes the context is a dead end to be ignored\/transcended.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596777634.240000",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Upr=T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thinking in trade-offs feels like a synthesis of "
                            },
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": "'s and "
                            },
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": "'s positions. Yes, you have to acknowledge context. And yes, sometimes the context is a dead end to be ignored\/transcended."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1596778532.242000",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1596808813.000000"
        },
        "client_msg_id": "407E3056-886A-4209-B5A2-E8011C4AC467",
        "text": "This prompt also feels like a gentler version of the [<https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1580718026447200|your name] paradox> thread from... the before times.\n\nIn that my iconoclastic trade off is (of course) something like: you should accept that not all incidental complexity is avoidable, but what incidental complexity you have should be <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1580751504462400|your choice>.\n\n(Also — <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1580762349483300|Interfaces vs Implementations>, for anyone who missed it the first time around)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596777634.240000",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JF+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This prompt also feels like a gentler version of the ["
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1580718026447200",
                                "text": "your name] paradox"
                            },
                            {
                                "type": "text",
                                "text": " thread from... the before times.\n\nIn that my iconoclastic trade off is (of course) something like: you should accept that not all incidental complexity is avoidable, but what incidental complexity you have should be "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1580751504462400",
                                "text": "your choice"
                            },
                            {
                                "type": "text",
                                "text": ".\n\n(Also — "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1580762349483300",
                                "text": "Interfaces vs Implementations"
                            },
                            {
                                "type": "text",
                                "text": ", for anyone who missed it the first time around)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD",
                    "UKP3B2J5D",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1596782620.248700",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1596782792.000000"
        },
        "client_msg_id": "f0f8b29c-1718-4ff6-8041-08b0536a5b2b",
        "text": "A story currently much debated in biology: <https:\/\/www.theverge.com\/2020\/8\/6\/21355674\/human-genes-rename-microsoft-excel-misreading-dates|Scientists rename human genes to stop Microsoft Excel from misreading them as dates>\n\nThe problem of Excel converting some gene names to dates (example: MARCH1) has been discussed for a while already. Biologists had adopted Excel believing it to be a general-purpose computational tool, but then discovered that Microsoft intended it to be a domain-specific tool for business data, without insisting much on that detail in their communication with the public. Several published genome studies already contained mistakes. So... what to do? The feature cannot be turned off, Microsoft didn't really care because biologists are not their main customer base, and re-training biologists around the world to use another tool wasn't doable. So they decided to change the names of the genes! This isn't an easy decision, and it will be costly as well, adding complexity to future bioinformatics software and confusion among biologists.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596782620.248700",
        "reply_count": 14,
        "reply_users_count": 8,
        "latest_reply": "1596907467.307900",
        "reply_users": [
            "U8A5MS6R1",
            "UJBAJNFLK",
            "U018DRGAC5S",
            "UE1JQM9HQ",
            "U013866H7LY",
            "UDQBTJ211",
            "UFXFB1RK8",
            "UNBPP291C"
        ],
        "replies": [
            {
                "user": "U8A5MS6R1",
                "ts": "1596788765.249900"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1596806645.261000"
            },
            {
                "user": "U018DRGAC5S",
                "ts": "1596807185.261500"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1596815673.263100"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1596818103.264200"
            },
            {
                "user": "U013866H7LY",
                "ts": "1596822564.267100"
            },
            {
                "user": "U013866H7LY",
                "ts": "1596823272.267400"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1596823630.267600"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1596827026.268100"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1596827400.268500"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1596828922.271600"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1596846672.279500"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1596875035.280500"
            },
            {
                "user": "UNBPP291C",
                "ts": "1596907467.307900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "The Verge",
                "title": "Scientists rename human genes to stop Microsoft Excel from misreading them as dates",
                "title_link": "https:\/\/www.theverge.com\/2020\/8\/6\/21355674\/human-genes-rename-microsoft-excel-misreading-dates",
                "text": "Microsoft Excel: 1 — Human Genetics: 0.",
                "fallback": "The Verge: Scientists rename human genes to stop Microsoft Excel from misreading them as dates",
                "image_url": "https:\/\/cdn.vox-cdn.com\/thumbor\/6Kkv8b1P0DgN4R3mx4WQ2ek0RpY=\/0x215:3000x1786\/fit-in\/1200x630\/cdn.vox-cdn.com\/uploads\/chorus_asset\/file\/8986109\/acastro_170726_1777_0013.jpg",
                "image_width": 478,
                "image_height": 250,
                "ts": 1596717842,
                "from_url": "https:\/\/www.theverge.com\/2020\/8\/6\/21355674\/human-genes-rename-microsoft-excel-misreading-dates",
                "image_bytes": 217038,
                "service_icon": "https:\/\/cdn.vox-cdn.com\/uploads\/chorus_asset\/file\/7395359\/ios-icon.0.png",
                "id": 1,
                "original_url": "https:\/\/www.theverge.com\/2020\/8\/6\/21355674\/human-genes-rename-microsoft-excel-misreading-dates"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gJ+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A story currently much debated in biology: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.theverge.com\/2020\/8\/6\/21355674\/human-genes-rename-microsoft-excel-misreading-dates",
                                "text": "Scientists rename human genes to stop Microsoft Excel from misreading them as dates"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe problem of Excel converting some gene names to dates (example: MARCH1) has been discussed for a while already. Biologists had adopted Excel believing it to be a general-purpose computational tool, but then discovered that Microsoft intended it to be a domain-specific tool for business data, without insisting much on that detail in their communication with the public. Several published genome studies already contained mistakes. So... what to do? The feature cannot be turned off, Microsoft didn't really care because biologists are not their main customer base, and re-training biologists around the world to use another tool wasn't doable. So they decided to change the names of the genes! This isn't an easy decision, and it will be costly as well, adding complexity to future bioinformatics software and confusion among biologists."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDQBTJ211",
                    "U018DRGAC5S",
                    "UPVBV34EL"
                ],
                "count": 3
            },
            {
                "name": "face_palm::skin-tone-2",
                "users": [
                    "UP28ETUSE",
                    "UUQ2EQW21",
                    "UJ6LDMMN0",
                    "U01554W5BS5",
                    "U014WA16VNJ",
                    "UHYQ5GJTD",
                    "UA14TGLTC"
                ],
                "count": 7
            }
        ]
    }
]