[
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1544520392.240100",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1544520428.000000"
        },
        "client_msg_id": "d1252ee5-0937-455b-83c0-bf98f51b4986",
        "text": "In the hard sciences, if you do an experiment that proves some great new theory, it isn't accepted on its face. It has be replicated in at least one other lab in order to be accepted, otherwise it might have been a fluke. There is that funny joke journal of irreproducible results. Anyway we should consider starting to look at code with a real critical eye, and ask if another person could modify or improve (or at least understand) how a program works, and start ranking things for their readability\/complexity\/understandability. I once had access to the UNIX source code, back when it was a licensed thing and under NDA, and the code that did the FTP transfers was so clever with really gnarly computations about how to maximize throughput. No chance of improving that without breaking it for a normal mortal. And there aren't even 100 people on earth who understand the TrueType language used to generate all the typeface renderings. I would venture to say that the text entry field code in any operating systems you care to mention is at least a million lines total. The second you ask for text entry, with typography, you are entering a vast land of complexity, and really that is the core of what OS'es give you, is text handling.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vr1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the hard sciences, if you do an experiment that proves some great new theory, it isn't accepted on its face. It has be replicated in at least one other lab in order to be accepted, otherwise it might have been a fluke. There is that funny joke journal of irreproducible results. Anyway we should consider starting to look at code with a real critical eye, and ask if another person could modify or improve (or at least understand) how a program works, and start ranking things for their readability\/complexity\/understandability. I once had access to the UNIX source code, back when it was a licensed thing and under NDA, and the code that did the FTP transfers was so clever with really gnarly computations about how to maximize throughput. No chance of improving that without breaking it for a normal mortal. And there aren't even 100 people on earth who understand the TrueType language used to generate all the typeface renderings. I would venture to say that the text entry field code in any operating systems you care to mention is at least a million lines total. The second you ask for text entry, with typography, you are entering a vast land of complexity, and really that is the core of what OS'es give you, is text handling."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1544520930.244500",
        "client_msg_id": "c035ac9a-bbcd-4038-be0d-a40175dcd067",
        "text": "There are a lot of new programmers coming into the business, with shiny new Apple laptops ready to create mashups of different subsystems, and create wonderful new products. but perhaps we can create objective measurements that we can apply to code so that we steer towards quality. It has really been something that experienced people are good at gauging, but a more objective standard would be nice. It is hard to enter the world of interchangeable parts when people don't label inputs and outputs clearly. And it is so hard to document data structures in text. maybe markdown with embedded graphics needs to become the standard.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K8b1E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are a lot of new programmers coming into the business, with shiny new Apple laptops ready to create mashups of different subsystems, and create wonderful new products. but perhaps we can create objective measurements that we can apply to code so that we steer towards quality. It has really been something that experienced people are good at gauging, but a more objective standard would be nice. It is hard to enter the world of interchangeable parts when people don't label inputs and outputs clearly. And it is so hard to document data structures in text. maybe markdown with embedded graphics needs to become the standard."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEH6T3RJB",
        "type": "message",
        "ts": "1544527566.244600",
        "edited": {
            "user": "UEH6T3RJB",
            "ts": "1544527812.000000"
        },
        "client_msg_id": "0086764e-b356-49ec-aab5-77dd515ad2fb",
        "text": "Thanks so much for these insights and comments, <@UCUSW7WVD> - I'm always looking for ways to improve this framing and getting the message across more clearly, and this narrative of how the paper's language threw you off repeatedly is gold dust.\n\nThe focus on the misleading use of \"reuse\" is really interesting, and I also had a similar kind of trajectory when trying to explain the points to Luke Church - he immediately outraged me by saying that \"In industry, the problem of reuse is overblown, in my opinion\". In the end we realised that we did understand each other after all, since he was referring to \"the phenomenon that currently goes by the name of reuse\", which we might describe, following your analysis, as \"a concept of reuse that imagines we can get away with respecting encapsulation\" - rather than what we could call \"unbounded reuse\" which is simply reuse that meets whatever the economics of society require.\nUnfortunately we have a big problem with terminology. A big \"fork in the road\" is always whether to neologise and create some deliberately unrecognisable term to avoid misunderstanding - and Infusion certainly does a lot of this - or whether to try to consciously overload and extend some widely recognised term in the hopes of establishing a shared landmark. I felt that there was enough unrecognisable terminology in play and that the reader would prefer the landmark - even to the extent that the first submitted version of this paper was called \"A New Open-Closed Principle\", hoping that presenting the new principle as directly in the lineage of Meyer at al would make it feel more acceptable. The result was that the reviewers were horribly confused and unable to take on any of the message at all. It seems that my riffing on \"reuse\" has been similarly problematic, but it seems like such a widely-accepted term, especially in wider society (everyone understands what it means to \"reuse\" a bottle or a chair) that it feels a big loss to give up on it.\n\nYour 2. point is pretty interesting - in that we can't understand these issues without bringing in the ecosystem. I think you've stated the reasons, operationally, in the way I see them, but I think the reasons we need to be able to adapt code without modifying it are essentially the same in every ecosystem - it is that we can't claim ownership over another community's expressions, without paying all the costs to enter and maintain a relationship with that community. This implies that, economically, there has to be another option on the table, to get our work done without having to pay these costs, and we should try to make this other option as cheap as possible, in order to support communities as fine-grained as society needs them to be. So I wasn't sure that exploring the incarnation of this reason wrt a specific language would add much - but perhaps it might. I'd be interested in your own answers and any daylight between the ones we have.\n\nIn the light of point 3. - I guess there are some interesting semantics in terms of what counts as \"modification\" and what simply counts as \"variation\". One would expect to say that any techniques we had for verifying use should have comparable economics in the two cases - in that the techniques for verifying use themselves should have all the beneficial scalings under the OAP as do the base artefacts themselves.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5184556fcf3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/75184556fcf3aa660f5e56b8e5bdd46d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0021-72.png",
            "first_name": "",
            "real_name": "Antranig Basman",
            "display_name": "Bosmon",
            "team": "T5TCAFTA9",
            "name": "amb26slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544229974.163900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QeIX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks so much for these insights and comments, "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " - I'm always looking for ways to improve this framing and getting the message across more clearly, and this narrative of how the paper's language threw you off repeatedly is gold dust.\n\nThe focus on the misleading use of \"reuse\" is really interesting, and I also had a similar kind of trajectory when trying to explain the points to Luke Church - he immediately outraged me by saying that \"In industry, the problem of reuse is overblown, in my opinion\". In the end we realised that we did understand each other after all, since he was referring to \"the phenomenon that currently goes by the name of reuse\", which we might describe, following your analysis, as \"a concept of reuse that imagines we can get away with respecting encapsulation\" - rather than what we could call \"unbounded reuse\" which is simply reuse that meets whatever the economics of society require.\nUnfortunately we have a big problem with terminology. A big \"fork in the road\" is always whether to neologise and create some deliberately unrecognisable term to avoid misunderstanding - and Infusion certainly does a lot of this - or whether to try to consciously overload and extend some widely recognised term in the hopes of establishing a shared landmark. I felt that there was enough unrecognisable terminology in play and that the reader would prefer the landmark - even to the extent that the first submitted version of this paper was called \"A New Open-Closed Principle\", hoping that presenting the new principle as directly in the lineage of Meyer at al would make it feel more acceptable. The result was that the reviewers were horribly confused and unable to take on any of the message at all. It seems that my riffing on \"reuse\" has been similarly problematic, but it seems like such a widely-accepted term, especially in wider society (everyone understands what it means to \"reuse\" a bottle or a chair) that it feels a big loss to give up on it.\n\nYour 2. point is pretty interesting - in that we can't understand these issues without bringing in the ecosystem. I think you've stated the reasons, operationally, in the way I see them, but I think the reasons we need to be able to adapt code without modifying it are essentially the same in every ecosystem - it is that we can't claim ownership over another community's expressions, without paying all the costs to enter and maintain a relationship with that community. This implies that, economically, there has to be another option on the table, to get our work done without having to pay these costs, and we should try to make this other option as cheap as possible, in order to support communities as fine-grained as society needs them to be. So I wasn't sure that exploring the incarnation of this reason wrt a specific language would add much - but perhaps it might. I'd be interested in your own answers and any daylight between the ones we have.\n\nIn the light of point 3. - I guess there are some interesting semantics in terms of what counts as \"modification\" and what simply counts as \"variation\". One would expect to say that any techniques we had for verifying use should have comparable economics in the two cases - in that the techniques for verifying use themselves should have all the beneficial scalings under the OAP as do the base artefacts themselves."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEH6T3RJB",
        "type": "message",
        "ts": "1544528855.244900",
        "edited": {
            "user": "UEH6T3RJB",
            "ts": "1544529391.000000"
        },
        "client_msg_id": "c26d3225-a29b-4b77-bf72-d650c17919be",
        "text": "The question of \"what audience the paper was intended for\" is also a fascinating open question. In fact, you're the first person I'm aware of who has come to this material \"in the wild\" and tried to make sense of it without any prior connection to the community behind it, so anything you say about problems in its presentation carries a huge weight.\nThere's a huge \"chicken and egg\" problem with the ideas, which I think you're drawing out - you say \"Perhaps you're writing for people who think reuse is a) great, b) attainable, and c) just a matter of sufficient foresight\". But I think as you and I well know, no such person could ever possibly be convinced by material like this - and in fact would never read to the end of it. It's only because you had a substantial resonance with the ideas already and had independently constructed your own incarnations of several of them that you had the patience to wade through it. I think we have to say that in these cases we are writing for a form of \"nonexistent ideal reader\" - that is, what Lakatos would call the inhabitant of a \"rational reconstruction of history\". From the vantage point of the next century, when these ideas are universally accepted (!) some historian of science would try to reconstruct the intellectual trajectory that some wholly imaginary \"central\" member of the field took in order to navigate from the old ideas to the new. And this paper, I guess, is addressed to that imaginary member.\n\nAnd perhaps whilst there's no single person to whom the entire connected narrative is useful, the paper could be useful as a \"grab bag\" of arguments - that is, if one finds people in the wild who believe X, Y and not Z, one could then direct them to the bit of the paper where Z is established.\n\nAnd finally, the paper has to be useful to ourselves in terms of even articulating to ourselves what our arguments are. It's fantastically easy to get lost and forget how on earth it is that ones means connect to ones ends, if the chain of links is as long and as diffuse as it is.\n\nAnd after finally - the paper is useful as a \"venue for conversations\". One particularly marvellous result was that when I presented the paper, a couple of the the (about three or four) people in the audience who seemed to get the material started a conversation and came to realise that there were connections between their own research programmes that were indirectly suggested by it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5184556fcf3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/75184556fcf3aa660f5e56b8e5bdd46d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0021-72.png",
            "first_name": "",
            "real_name": "Antranig Basman",
            "display_name": "Bosmon",
            "team": "T5TCAFTA9",
            "name": "amb26slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544229974.163900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vpc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The question of \"what audience the paper was intended for\" is also a fascinating open question. In fact, you're the first person I'm aware of who has come to this material \"in the wild\" and tried to make sense of it without any prior connection to the community behind it, so anything you say about problems in its presentation carries a huge weight.\nThere's a huge \"chicken and egg\" problem with the ideas, which I think you're drawing out - you say \"Perhaps you're writing for people who think reuse is a) great, b) attainable, and c) just a matter of sufficient foresight\". But I think as you and I well know, no such person could ever possibly be convinced by material like this - and in fact would never read to the end of it. It's only because you had a substantial resonance with the ideas already and had independently constructed your own incarnations of several of them that you had the patience to wade through it. I think we have to say that in these cases we are writing for a form of \"nonexistent ideal reader\" - that is, what Lakatos would call the inhabitant of a \"rational reconstruction of history\". From the vantage point of the next century, when these ideas are universally accepted (!) some historian of science would try to reconstruct the intellectual trajectory that some wholly imaginary \"central\" member of the field took in order to navigate from the old ideas to the new. And this paper, I guess, is addressed to that imaginary member.\n\nAnd perhaps whilst there's no single person to whom the entire connected narrative is useful, the paper could be useful as a \"grab bag\" of arguments - that is, if one finds people in the wild who believe X, Y and not Z, one could then direct them to the bit of the paper where Z is established.\n\nAnd finally, the paper has to be useful to ourselves in terms of even articulating to ourselves what our arguments are. It's fantastically easy to get lost and forget how on earth it is that ones means connect to ones ends, if the chain of links is as long and as diffuse as it is.\n\nAnd after finally - the paper is useful as a \"venue for conversations\". One particularly marvellous result was that when I presented the paper, a couple of the the (about three or four) people in the audience who seemed to get the material started a conversation and came to realise that there were connections between their own research programmes that were indirectly suggested by it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1544541665.246300",
        "client_msg_id": "fdc4b98a-07c3-482c-aa25-9383e296da1f",
        "text": "Thanks for those responses. Super empathetic to all of them. Just to quickly address one point: I totally agree that your point is valid everywhere. But focusing on a single stack may help get your message across.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544229974.163900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UBp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for those responses. Super empathetic to all of them. Just to quickly address one point: I totally agree that your point is valid everywhere. But focusing on a single stack may help get your message across."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEGFXUK3M",
        "type": "message",
        "ts": "1544555699.248300",
        "client_msg_id": "9D6261C3-9948-4591-A1B9-5F06D369BDA2",
        "text": "Somewhat related to visual \/ spatial languages discussed at the London meet-up; I’ve been enjoying playing around with this 2D live coding environment today <http:\/\/github.com\/hundredrabbits\/orca|github.com\/hundredrabbits\/orca>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bbd74d10a2d2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1108683470016_bbd74d10a2d2a0dbb156_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack",
            "display_name": "jarm",
            "team": "T5TCAFTA9",
            "name": "jack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+a\/v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Somewhat related to visual \/ spatial languages discussed at the London meet-up; I’ve been enjoying playing around with this 2D live coding environment today "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/github.com\/hundredrabbits\/orca",
                                "text": "github.com\/hundredrabbits\/orca"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "exploding_head",
                "users": [
                    "U5TCAFTD3",
                    "UDJ2TKB99"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UC2A2ARPT",
                    "UEBG0NPDK",
                    "UEG9ECNSU"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UEGFXUK3M",
        "type": "message",
        "ts": "1544555800.249400",
        "client_msg_id": "E9768390-DA4D-4CA4-92E4-DD799DC3DF7E",
        "text": "Some examples programs below. I like how easy it is to do visual poetry.\n<https:\/\/twitter.com\/neauoire\/status\/1069129232708657152>\n<https:\/\/mobile.twitter.com\/neauoire\/status\/1071878738613129217>\n<https:\/\/mobile.twitter.com\/Johannes_Knop\/status\/1071852274610331649>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bbd74d10a2d2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1108683470016_bbd74d10a2d2a0dbb156_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack",
            "display_name": "jarm",
            "team": "T5TCAFTA9",
            "name": "jack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/neauoire|@neauoire>: Now, I might never again write music like I used to.\nThis is the beginning of my new music works. <https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1069128904466546689\/pu\/img\/_pByU3NznP88efez.jpg>",
                "ts": 1543735247,
                "author_name": "Devine Lu Linvega",
                "author_link": "https:\/\/twitter.com\/neauoire\/status\/1069129232708657152",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1044413600666796032\/S59ciy96_normal.jpg",
                "author_subname": "@neauoire",
                "text": "Now, I might never again write music like I used to.\nThis is the beginning of my new music works.",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/neauoire\/status\/1069129232708657152",
                "thumb_url": "https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1069128904466546689\/pu\/img\/_pByU3NznP88efez.jpg",
                "thumb_width": 960,
                "thumb_height": 540,
                "video_html_width": 960,
                "video_html_height": 540,
                "video_html": "<video controls poster=\"https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1069128904466546689\/pu\/img\/_pByU3NznP88efez.jpg\" width=\"960\" height=\"540\"><source type=\"video\/mp4\" src=\"https:\/\/video.twimg.com\/ext_tw_video\/1069128904466546689\/pu\/vid\/960x540\/fBw2XALgx0Fd8P_z.mp4?tag=5\"><\/video>",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/neauoire\/status\/1069129232708657152",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            },
            {
                "fallback": "<https:\/\/twitter.com\/neauoire|@neauoire>: Updated the `Q` operator with a length and a vertical offset port. \nThis effectively makes it possible to create procedural music tracker software in #ORCΛ. cc <https:\/\/twitter.com\/to6okegao|@to6okegao> <https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1071878454642008064\/pu\/img\/wjL4HjpMHHAh5igE.jpg>",
                "ts": 1544390780,
                "author_name": "Devine Lu Linvega",
                "author_link": "https:\/\/twitter.com\/neauoire\/status\/1071878738613129217",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1044413600666796032\/S59ciy96_normal.jpg",
                "author_subname": "@neauoire",
                "text": "Updated the `Q` operator with a length and a vertical offset port. \nThis effectively makes it possible to create procedural music tracker software in #ORCΛ. cc <https:\/\/twitter.com\/to6okegao|@to6okegao>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/mobile.twitter.com\/neauoire\/status\/1071878738613129217",
                "thumb_url": "https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1071878454642008064\/pu\/img\/wjL4HjpMHHAh5igE.jpg",
                "thumb_width": 960,
                "thumb_height": 540,
                "video_html_width": 960,
                "video_html_height": 540,
                "video_html": "<video controls poster=\"https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1071878454642008064\/pu\/img\/wjL4HjpMHHAh5igE.jpg\" width=\"960\" height=\"540\"><source type=\"video\/mp4\" src=\"https:\/\/video.twimg.com\/ext_tw_video\/1071878454642008064\/pu\/vid\/960x540\/OtOITJvYt25IqaCd.mp4?tag=6\"><\/video>",
                "id": 2,
                "original_url": "https:\/\/mobile.twitter.com\/neauoire\/status\/1071878738613129217",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            },
            {
                "fallback": "<https:\/\/twitter.com\/Johannes_Knop|@Johannes_Knop>: The Forest, The Moon and The Hunter\n\nTried to use Sunvox for a change, I wanted to try out a lighter setup to use with an old Netbook. I don't know how good this one is...\n\n#ORCΛ <https:\/\/twitter.com\/neauoire|@neauoire> <https:\/\/twitter.com\/lectronice|@lectronice> <https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1071851651479339008\/pu\/img\/MtboDHu2rARz9d9u.jpg>",
                "ts": 1544384470,
                "author_name": "Johannes Knop",
                "author_link": "https:\/\/twitter.com\/Johannes_Knop\/status\/1071852274610331649",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1047463944112234498\/1FjLZ6Mh_normal.jpg",
                "author_subname": "@Johannes_Knop",
                "text": "The Forest, The Moon and The Hunter\n\nTried to use Sunvox for a change, I wanted to try out a lighter setup to use with an old Netbook. I don't know how good this one is...\n\n#ORCΛ <https:\/\/twitter.com\/neauoire|@neauoire> <https:\/\/twitter.com\/lectronice|@lectronice>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/mobile.twitter.com\/Johannes_Knop\/status\/1071852274610331649",
                "thumb_url": "https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1071851651479339008\/pu\/img\/MtboDHu2rARz9d9u.jpg",
                "thumb_width": 858,
                "thumb_height": 482,
                "video_html_width": 858,
                "video_html_height": 482,
                "video_html": "<video controls poster=\"https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1071851651479339008\/pu\/img\/MtboDHu2rARz9d9u.jpg\" width=\"858\" height=\"482\"><source type=\"video\/mp4\" src=\"https:\/\/video.twimg.com\/ext_tw_video\/1071851651479339008\/pu\/vid\/858x482\/1dQ2c0_7Lm66G21K.mp4?tag=6\"><\/video>",
                "id": 3,
                "original_url": "https:\/\/mobile.twitter.com\/Johannes_Knop\/status\/1071852274610331649",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ryP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some examples programs below. I like how easy it is to do visual poetry.\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/neauoire\/status\/1069129232708657152"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/mobile.twitter.com\/neauoire\/status\/1071878738613129217"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/mobile.twitter.com\/Johannes_Knop\/status\/1071852274610331649"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UC2A2ARPT",
                    "U8A5MS6R1",
                    "UBSMEUXAA",
                    "U5Y7114NS",
                    "UA14TGLTC",
                    "UEKEQGB9C"
                ],
                "count": 7
            }
        ]
    },
    {
        "user": "UEGFXUK3M",
        "type": "message",
        "ts": "1544556853.250300",
        "client_msg_id": "C2D5ED51-A92B-4D82-BC29-9E5BD584F9BE",
        "text": "Not sure you would want to write a web server using it though :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bbd74d10a2d2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1108683470016_bbd74d10a2d2a0dbb156_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack",
            "display_name": "jarm",
            "team": "T5TCAFTA9",
            "name": "jack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nL+9Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure you would want to write a web server using it though :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1544559968.252500",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1544560191.000000"
        },
        "client_msg_id": "f18c90f6-a82b-4bd5-abc3-0df1dc5f8dc6",
        "text": "I have a huge inferiority complex wrapped around Devine Lu Linvega. Everything he makes _oozes_ style. _Of course_ you wouldn't build a web server using it. He makes programming tools _for art, as art_. That _as art_ part tends to rub ~people~ programmers the wrong way — it makes them obsess about \"novelty\" and \"aesthetics\" and \"practical uses\". Those people are missing the point.\n\nJust like we have our FoC community, there's a great community of people blurring the line between programming tools, games, music, and visual art, which Linvega is a part of. I highly recommend people take a look at the developer XRA (<https:\/\/twitter.com\/xra>), who is making a video game called Memories of a Broken Dimension. Do a \"MoBD is to regular games as X is to regular programming languages\", and you'll find a _very_ interesting\/fruitful idea space to explore.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544559968.252500",
        "reply_count": 13,
        "reply_users_count": 9,
        "latest_reply": "1544722786.284500",
        "reply_users": [
            "U8A5MS6R1",
            "UDYGH7K8V",
            "UCSJ44X1S",
            "U5TCAFTD3",
            "UDQBTJ211",
            "UEGFXUK3M",
            "UC2A2ARPT",
            "UCUSW7WVD",
            "U5STGTB3J"
        ],
        "replies": [
            {
                "user": "U8A5MS6R1",
                "ts": "1544560898.253800"
            },
            {
                "user": "UDYGH7K8V",
                "ts": "1544562586.254300"
            },
            {
                "user": "UCSJ44X1S",
                "ts": "1544568526.254800"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1544587203.255900"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1544603285.257200"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1544603333.257400"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1544603364.257600"
            },
            {
                "user": "UEGFXUK3M",
                "ts": "1544617844.259100"
            },
            {
                "user": "UDYGH7K8V",
                "ts": "1544625461.259300"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1544644243.260100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1544669046.260600"
            },
            {
                "user": "UEGFXUK3M",
                "ts": "1544694839.261000"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1544722786.284500"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1544733840.000760",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "00T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a huge inferiority complex wrapped around Devine Lu Linvega. Everything he makes "
                            },
                            {
                                "type": "text",
                                "text": "oozes",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " style. "
                            },
                            {
                                "type": "text",
                                "text": "Of course",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " you wouldn't build a web server using it. He makes programming tools "
                            },
                            {
                                "type": "text",
                                "text": "for art, as art",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". That "
                            },
                            {
                                "type": "text",
                                "text": "as art",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " part tends to rub "
                            },
                            {
                                "type": "text",
                                "text": "people",
                                "style": {
                                    "strike": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " programmers the wrong way — it makes them obsess about \"novelty\" and \"aesthetics\" and \"practical uses\". Those people are missing the point.\n\nJust like we have our FoC community, there's a great community of people blurring the line between programming tools, games, music, and visual art, which Linvega is a part of. I highly recommend people take a look at the developer XRA ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/xra"
                            },
                            {
                                "type": "text",
                                "text": "), who is making a video game called Memories of a Broken Dimension. Do a \"MoBD is to regular games as X is to regular programming languages\", and you'll find a "
                            },
                            {
                                "type": "text",
                                "text": "very",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " interesting\/fruitful idea space to explore."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCUSW7WVD",
                    "UCXR52MU2"
                ],
                "count": 2
            },
            {
                "name": "point_up",
                "users": [
                    "UDYGH7K8V",
                    "U8A5MS6R1",
                    "UEQ7QL15F"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "UEGFXUK3M",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1544560898.253800",
        "client_msg_id": "b58724d2-f9b2-40f7-aafc-208bf2743beb",
        "text": "Yes, we may have more to learn from the art and design world than the engineering world. I used to think of software as engineering, but now wonder if its closer to industrial design.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544559968.252500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2xV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, we may have more to learn from the art and design world than the engineering world. I used to think of software as engineering, but now wonder if its closer to industrial design."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC",
                    "UC2A2ARPT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1544561316.254000",
        "client_msg_id": "7e8cc0f9-bb8b-4355-9a20-377bb95f1650",
        "text": "Hi <@UEQ6M68H0>\nI don't think the above message is appropriate or conducive to good discussion. Having a position that we need less or zero category theory in programming is reasonable to state, but I find the above form off putting.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544264389.176500",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "leD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi "
                            },
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": "\nI don't think the above message is appropriate or conducive to good discussion. Having a position that we need less or zero category theory in programming is reasonable to state, but I find the above form off putting."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDYGH7K8V",
        "type": "message",
        "ts": "1544562586.254300",
        "client_msg_id": "4490a10e-7a3f-40b4-bbfb-f22e6c2036b7",
        "text": "I circle around this a lot. My current wishy-washy resolution is that there are many different kinds of software. Engineering may be a useful metaphor for techniques to build infrastructure software, while software with users might be closer to industrial design or art or writing",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g961f7cede00",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2961f7cede00f96aa9442898d24a5c4e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "Dylan",
            "real_name": "Dylan Lederle-Ensign",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dylan.lederle.ensign",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544559968.252500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G0NX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I circle around this a lot. My current wishy-washy resolution is that there are many different kinds of software. Engineering may be a useful metaphor for techniques to build infrastructure software, while software with users might be closer to industrial design or art or writing"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCSJ44X1S",
        "type": "message",
        "ts": "1544568526.254800",
        "edited": {
            "user": "UCSJ44X1S",
            "ts": "1544568573.000000"
        },
        "client_msg_id": "43b125b9-5607-42d0-a958-cd13b2cc79f3",
        "text": "In my day-to-day work and usage of software, I see lots of *spaces* and *places*, both in code and in the software that code generates, so I think the architecture and building metaphors apply.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "eea3d64ffa95",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-02\/494422849847_eea3d64ffa95a60795eb_72.png",
            "first_name": "Jonathan",
            "real_name": "Jonathan Conway",
            "display_name": "Jonathan",
            "team": "T5TCAFTA9",
            "name": "jonathan.conway",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544559968.252500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MQC9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my day-to-day work and usage of software, I see lots of "
                            },
                            {
                                "type": "text",
                                "text": "spaces",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "places",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", both in code and in the software that code generates, so I think the architecture and building metaphors apply."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UDYGH7K8V",
                    "UA14TGLTC",
                    "UCXR52MU2",
                    "U8A5MS6R1"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1544587203.255900",
        "client_msg_id": "5a4695f5-4048-4a55-bfec-5297c09f1ad3",
        "text": "Re comparing code to engineering, <@UE1JQM9HQ> has a good counter argument. Software is constantly changing unlike a bridge which is built once. Coding is about constantly making decisions, adapting",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544559968.252500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "csY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Re comparing code to engineering, "
                            },
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            },
                            {
                                "type": "text",
                                "text": " has a good counter argument. Software is constantly changing unlike a bridge which is built once. Coding is about constantly making decisions, adapting"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC",
                    "UC2A2ARPT",
                    "UCSJ44X1S"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "UE1JQM9HQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1544589892.256300",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1551230353.000000"
        },
        "client_msg_id": "3e80a54f-97fa-421f-a24a-d1452e977f22",
        "text": "Any fan of the priesthood, can and should take offense. I am devoting my time remaining on this earth to demolishing the programming priesthood, which encourages obscurity, worships complexity, and has made programming harder than it was 20 years ago. Things are a lot prettier than they used to be in the VB6 and Hypercard era, but they sure aren't easier. I loathe all the frameworks, preprocessors, and complex make tools. I can't wait for one of the upcoming new generation of languages to overturn this worse-than-COBOL era. It is no wonder that ordinary people are taking up Python as it is similar to what BASIC was, a fairly friendly programming language that doesn't seem too hard. The world needs millions of programmers, and we simply must lower the peak frustration levels that a person must endure to complete projects. A lot of people know what needs to be built, but can't build it themselves. that needs to change, so that the needed products can get built quickly. There is tons of creativity all bottled up because the current practices are so tedious and frustrating.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544264389.176500",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SPy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Any fan of the priesthood, can and should take offense. I am devoting my time remaining on this earth to demolishing the programming priesthood, which encourages obscurity, worships complexity, and has made programming harder than it was 20 years ago. Things are a lot prettier than they used to be in the VB6 and Hypercard era, but they sure aren't easier. I loathe all the frameworks, preprocessors, and complex make tools. I can't wait for one of the upcoming new generation of languages to overturn this worse-than-COBOL era. It is no wonder that ordinary people are taking up Python as it is similar to what BASIC was, a fairly friendly programming language that doesn't seem too hard. The world needs millions of programmers, and we simply must lower the peak frustration levels that a person must endure to complete projects. A lot of people know what needs to be built, but can't build it themselves. that needs to change, so that the needed products can get built quickly. There is tons of creativity all bottled up because the current practices are so tedious and frustrating."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1544590032.256500",
        "client_msg_id": "92158f4b-41a3-4436-a986-1a1bcce3d2ba",
        "text": "And that was a joke by the way. The last emperor in the west was I believe Napolean, unless you count Emperor Norton of Sausalito.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544264389.176500",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XVn9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And that was a joke by the way. The last emperor in the west was I believe Napolean, unless you count Emperor Norton of Sausalito."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]