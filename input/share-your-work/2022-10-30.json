[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1667197326.494819",
        "client_msg_id": "1517dfba-7ae9-47d8-bd4d-d5daf7d60c10",
        "text": "Interesting episode, once more! I had read these papers many years ago, with mixed feelings about the relevance of the \"worse is better\" idea. Your discussion framing it as \"where does the complexity go\" is illuminating here. But I agree with <@U03CEGR3HSL> that it's not so much \"developer vs. user\" but \"where on the many layers of a real-life software system does the complexity go?\" Unix at the shell programming level is indeed free from the low-level considerations that PG mentions. Which explains why I found the topic only moderately relevant since my own focus as a power user (rather than software developer) is on levels clearly above the Linux kernel APIs. For me,  Lisp machine vs. Unix is about Lisp vs. shell as the layer that defines the coherence and accessability of system features. With Lisp clearly \"winning\" here, but at the cost of much higher resource usage.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667095355.922339",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5D1Vg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting episode, once more! I had read these papers many years ago, with mixed feelings about the relevance of the \"worse is better\" idea. Your discussion framing it as \"where does the complexity go\" is illuminating here. But I agree with "
                            },
                            {
                                "type": "user",
                                "user_id": "U03CEGR3HSL"
                            },
                            {
                                "type": "text",
                                "text": " that it's not so much \"developer vs. user\" but \"where on the many layers of a real-life software system does the complexity go?\" Unix at the shell programming level is indeed free from the low-level considerations that PG mentions. Which explains why I found the topic only moderately relevant since my own focus as a power user (rather than software developer) is on levels clearly above the Linux kernel APIs. For me,  Lisp machine vs. Unix is about Lisp vs. shell as the layer that defines the coherence and accessability of system features. With Lisp clearly \"winning\" here, but at the cost of much higher resource usage."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    }
]