[
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1558336983.082100",
        "client_msg_id": "573da2ad-00aa-4a3f-ad21-2ff937c647e9",
        "text": "One high level goal might be (at least for me): democratization of the act of programming. Which means first define what is the essence of the act of programming. Remove all accidental complexity in programming as we do it now to keep only the essential complexity. Then build something on this basis with a focus on the programming experience. Then (and only then) see how the act programming as it is done now can practically fit in the new vision. This last one is because we can't throw away everything that is practically in use, just because of a new \"better\" way to do things. And also because we can include the old way in the new way, as the new vision of the act of programming will be a kind of a subset (the essence) of the old one.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "my+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One high level goal might be (at least for me): democratization of the act of programming. Which means first define what is the essence of the act of programming. Remove all accidental complexity in programming as we do it now to keep only the essential complexity. Then build something on this basis with a focus on the programming experience. Then (and only then) see how the act programming as it is done now can practically fit in the new vision. This last one is because we can't throw away everything that is practically in use, just because of a new \"better\" way to do things. And also because we can include the old way in the new way, as the new vision of the act of programming will be a kind of a subset (the essence) of the old one."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1558345082.085200",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1558346509.000000"
        },
        "client_msg_id": "bb1a927b-5546-46db-8502-1c85b78251aa",
        "text": "Well, going back to the example of the UI, Englebart's system was designed to support collaboration between adult knowledge workers, and was intended to make experts more productive. Kay's system was aimed at a single user personal computer suitable for children. When Apple refined the GUI for the Macintosh project, Steve Jobs wanted a single user system, a non-programmable, easy-to-use consumer appliance, the personal computer as toaster. And that became the model for today's graphical user interface.\n\nI'm not sure what modern graphical user interfaces would have looked like if Englebart's vision had dominated, but I use still primarily use the Unix derived CLI, despite how obviously primitive it is visually compared to the GUI, because it's more productive, and because it supports abstraction and automation in ways that Mac-inspired GUIs cannot. The Unix CLI is based on fixed width, mostly ASCII text, and so are the syntaxes of all of the popular programming languages, and that might be related to why I find the CLI indispensable. Englebart's system was based on tree-structured, addressable data structures, and a tiling window manager. There was a conventional keyboard, but you also used a mouse in one hand and a chord keyboard in the other hand for most interaction with the system, when not entering text. The UI was nothing like a Mac-style GUI. And collaboration with remote users was baked in at a fundamental level. I wonder what a programming environment would feel like based on these lost paradigms.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xKTp7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, going back to the example of the UI, Englebart's system was designed to support collaboration between adult knowledge workers, and was intended to make experts more productive. Kay's system was aimed at a single user personal computer suitable for children. When Apple refined the GUI for the Macintosh project, Steve Jobs wanted a single user system, a non-programmable, easy-to-use consumer appliance, the personal computer as toaster. And that became the model for today's graphical user interface.\n\nI'm not sure what modern graphical user interfaces would have looked like if Englebart's vision had dominated, but I use still primarily use the Unix derived CLI, despite how obviously primitive it is visually compared to the GUI, because it's more productive, and because it supports abstraction and automation in ways that Mac-inspired GUIs cannot. The Unix CLI is based on fixed width, mostly ASCII text, and so are the syntaxes of all of the popular programming languages, and that might be related to why I find the CLI indispensable. Englebart's system was based on tree-structured, addressable data structures, and a tiling window manager. There was a conventional keyboard, but you also used a mouse in one hand and a chord keyboard in the other hand for most interaction with the system, when not entering text. The UI was nothing like a Mac-style GUI. And collaboration with remote users was baked in at a fundamental level. I wonder what a programming environment would feel like based on these lost paradigms."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1558346715.087000",
        "client_msg_id": "1358c75c-1954-4c8a-8bc6-a4cf81bfd09d",
        "text": "I guess there are different futures depending on your goals. One idea is the democratization of programming, another is improving productivity for teams of corporate programmers, another is improvements to software robustness, reliability and correctness.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5ev",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess there are different futures depending on your goals. One idea is the democratization of programming, another is improving productivity for teams of corporate programmers, another is improvements to software robustness, reliability and correctness."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1558348129.088400",
        "client_msg_id": "82710f57-cad8-4495-9af0-da50a65efffb",
        "text": "I hope the former (democratization) will imply the laters (productivity, robustness...) as a side effect (but maybe not early on).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NMP=6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I hope the former (democratization) will imply the laters (productivity, robustness...) as a side effect (but maybe not early on)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1558350719.095800",
        "client_msg_id": "b474a8d0-8b24-45e6-93d2-bf71b0424509",
        "text": "Well, my own research project puts a high value on democratization. Curv is a language for creating procedurally generated art. It needs to be usable by artists and designers and tinkerers. It needs to support exploratory and live coding. So it is a dynamically typed language. \"Fighting the borrow checker\" and \"fighting the theorem prover\/type checker\" are not things I want to have in the user experience. If the goal was to prove programs correct at compile time, then I'd use a very different design, which would have a much higher learning curve. I'm skeptical about the existence of a universal programming language that satisfies all use cases.\n\nOf course, it's possible for the research centre to have multiple teams focussed on solving different problems. I'm sure there is overlap to be found in the solutions for democratization, team productivity, and software correctness, and thus opportunity for collaboration between teams.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HwIU=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, my own research project puts a high value on democratization. Curv is a language for creating procedurally generated art. It needs to be usable by artists and designers and tinkerers. It needs to support exploratory and live coding. So it is a dynamically typed language. \"Fighting the borrow checker\" and \"fighting the theorem prover\/type checker\" are not things I want to have in the user experience. If the goal was to prove programs correct at compile time, then I'd use a very different design, which would have a much higher learning curve. I'm skeptical about the existence of a universal programming language that satisfies all use cases.\n\nOf course, it's possible for the research centre to have multiple teams focussed on solving different problems. I'm sure there is overlap to be found in the solutions for democratization, team productivity, and software correctness, and thus opportunity for collaboration between teams."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1558353655.098600",
        "client_msg_id": "e3d451c8-4547-4923-a52e-ed8615e44668",
        "text": "Indeed, I think one has to find a common ground on for the act of programming and then build different more specific solutions on it (dynamic or static typing, imperative or declarative, functional or other, low or high level, etc.).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kLwQN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Indeed, I think one has to find a common ground on for the act of programming and then build different more specific solutions on it (dynamic or static typing, imperative or declarative, functional or other, low or high level, etc.)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJCHWTMH6",
        "type": "message",
        "ts": "1558392593.102300",
        "client_msg_id": "491afcba-c3b7-4a59-bf7c-98733f7df84d",
        "text": "<@UJK8MKYAZ> _Would someone sponsor the work financially?_  What I'm thinking of is getting the funding to making it free to live, eat and work there but anything beyond that would have to be self-financed.  I don't know how that would look.  _Second, would we get further than PARC got?_  If you look at PARC, the main locus of innovation in software construction there was Alan Kay, and he has been pleading and frankly demanding for decades that people continue that work.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8d51e2f74ae",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a8d51e2f74ae5104ac5378a9a5689411.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "David Broderick",
            "display_name": "David Broderick",
            "team": "T5TCAFTA9",
            "name": "david927",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ml1pI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJK8MKYAZ"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "Would someone sponsor the work financially?",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  What I'm thinking of is getting the funding to making it free to live, eat and work there but anything beyond that would have to be self-financed.  I don't know how that would look.  "
                            },
                            {
                                "type": "text",
                                "text": "Second, would we get further than PARC got?",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  If you look at PARC, the main locus of innovation in software construction there was Alan Kay, and he has been pleading and frankly demanding for decades that people continue that work."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJCHWTMH6",
        "type": "message",
        "ts": "1558393135.107800",
        "client_msg_id": "76cd3875-cbe5-41ad-bed5-d7a9268268fc",
        "text": "<@UD3AK9JRF> In my opinion the express research question would be, _\"If we learn from prior research but leave all options on the table, what could software construction look like decades forward?\"_  And think that would include _access to software construction_ as discussed by Doug and Nicolas here.  I think by definition a success would mean managing complexity without reducing it, and if we do that the barriers to entry for \"programming\" become drastically lower.\n\n_I’m not particularly interested in models that center the genius of individuals._  Me either and in fact that's the point of creating a group, living, working and collaborating under the same roof.  Here's a quote from Brian Eno on a term he coined.  \"Scenius is like genius, only embedded in a scene rather than in genes.\"  Eno suggested the word to convey the extreme creativity that groups, places or \"scenes\"  can occasionally generate. His actual definition is:\n&gt;\"Scenius stands for the intelligence and the intuition of a whole cultural scene. It is the communal form of the concept of the genius.\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8d51e2f74ae",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a8d51e2f74ae5104ac5378a9a5689411.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "David Broderick",
            "display_name": "David Broderick",
            "team": "T5TCAFTA9",
            "name": "david927",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/pTY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UD3AK9JRF"
                            },
                            {
                                "type": "text",
                                "text": " In my opinion the express research question would be, "
                            },
                            {
                                "type": "text",
                                "text": "\"If we learn from prior research but leave all options on the table, what could software construction look like decades forward?\"",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  And think that would include "
                            },
                            {
                                "type": "text",
                                "text": "access to software construction",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " as discussed by Doug and Nicolas here.  I think by definition a success would mean managing complexity without reducing it, and if we do that the barriers to entry for \"programming\" become drastically lower.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "I’m not particularly interested in models that center the genius of individuals.",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  Me either and in fact that's the point of creating a group, living, working and collaborating under the same roof.  Here's a quote from Brian Eno on a term he coined.  \"Scenius is like genius, only embedded in a scene rather than in genes.\"  Eno suggested the word to convey the extreme creativity that groups, places or \"scenes\"  can occasionally generate. His actual definition is:"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Scenius stands for the intelligence and the intuition of a whole cultural scene. It is the communal form of the concept of the genius.\""
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U6KQ2S410",
                    "UD3AK9JRF"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJCHWTMH6",
        "type": "message",
        "ts": "1558393182.108000",
        "client_msg_id": "7a706d69-0da0-412e-940a-821af18c39e1",
        "text": "<https:\/\/www.youtube.com\/watch?v=d-53tzx69fM>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8d51e2f74ae",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a8d51e2f74ae5104ac5378a9a5689411.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "David Broderick",
            "display_name": "David Broderick",
            "team": "T5TCAFTA9",
            "name": "david927",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Brian Eno message - Don't get a job",
                "title_link": "https:\/\/www.youtube.com\/watch?v=d-53tzx69fM",
                "author_name": "Newiew Project",
                "author_link": "https:\/\/www.youtube.com\/channel\/UC_U_dOGGqI-kjdn8tvEvXHA",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/d-53tzx69fM\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Brian Eno message - Don't get a job",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/d-53tzx69fM?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=d-53tzx69fM",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=d-53tzx69fM"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/sb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=d-53tzx69fM"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "UJ6LDMMN0",
                    "UAL7940NM",
                    "UJN1TAYEQ"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UJCHWTMH6",
        "type": "message",
        "ts": "1558393382.109300",
        "client_msg_id": "abc9a1cf-0635-4bf5-a122-133685d97417",
        "text": "Note what Brian says here, \"The biggest obstacle to that is that people have to have a job.\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8d51e2f74ae",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a8d51e2f74ae5104ac5378a9a5689411.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "David Broderick",
            "display_name": "David Broderick",
            "team": "T5TCAFTA9",
            "name": "david927",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xi5B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Note what Brian says here, \"The biggest obstacle to that is that people have to have a job.\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJCHWTMH6",
        "type": "message",
        "ts": "1558393489.110600",
        "client_msg_id": "59b11cc9-20dc-4980-b72c-41e78a773d37",
        "text": "<@U5STGTB3J> Thanks for that.  I don't know how viable any of this is, I only believe that it's a good idea -- and I think for now that can be enough.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8d51e2f74ae",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a8d51e2f74ae5104ac5378a9a5689411.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "David Broderick",
            "display_name": "David Broderick",
            "team": "T5TCAFTA9",
            "name": "david927",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R2+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for that.  I don't know how viable any of this is, I only believe that it's a good idea -- and I think for now that can be enough."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]