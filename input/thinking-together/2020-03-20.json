[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1584691038.425400",
        "client_msg_id": "12e34a8b-6889-443f-9dfc-83c754102d1f",
        "text": "Training Picasso is a tricky business, and isn't going necessarily going to be rewarded or feel rewarding.  Writing LoC feels like progress, and searching for unified, elegant mathematics doesn't mean you're going to find it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584042706.253500",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hwp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Training Picasso is a tricky business, and isn't going necessarily going to be rewarded or feel rewarding.  Writing LoC feels like progress, and searching for unified, elegant mathematics doesn't mean you're going to find it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1584691619.428300",
        "client_msg_id": "920336F8-153A-4EEB-B4B1-E7037EC616D4",
        "text": "So what does that mean? What “kind of mathematics and design”?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584042706.253500",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vOcu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So what does that mean? What “kind of mathematics and design”?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UF1ATC4RF",
        "type": "message",
        "ts": "1584701103.429700",
        "edited": {
            "user": "UF1ATC4RF",
            "ts": "1584701113.000000"
        },
        "client_msg_id": "960c61c3-9feb-4fba-9293-595a6730bb42",
        "text": "*The Cambridge Handbook of Computing Education Research*\n<https:\/\/www.cambridge.org\/core\/books\/cambridge-handbook-of-computing-education-research\/F8CFAF7B81A8F6BF5C663412BA0A943D>\n\n&gt; This Handbook describes the extent and shape of computing education research today. Over fifty leading researchers from academia and industry (including Google and Microsoft) have contributed chapters that together define and expand the evidence base. The foundational chapters set the field in context, articulate expertise from key disciplines, and form a practical guide for new researchers. They address what can be learned empirically, methodologically and theoretically from each area. The topic chapters explore issues that are of current interest, why they matter, and what is already known. They include discussion of motivational context, implications for practice, and open questions which might suggest future research. The authors provide an authoritative introduction to the field which is essential reading for policy makers, as well as both new and established researchers.\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f7d23ee4d8b2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1069322068471_f7d23ee4d8b2dbb3c1ad_72.jpg",
            "first_name": "Deepak",
            "real_name": "Deepak Karki",
            "display_name": "karki",
            "team": "T5TCAFTA9",
            "name": "deepak6k",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584701103.429700",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1584701118.430000",
        "reply_users": [
            "UF1ATC4RF"
        ],
        "replies": [
            {
                "user": "UF1ATC4RF",
                "ts": "1584701118.430000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uT6NV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Cambridge Handbook of Computing Education Research",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.cambridge.org\/core\/books\/cambridge-handbook-of-computing-education-research\/F8CFAF7B81A8F6BF5C663412BA0A943D"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This Handbook describes the extent and shape of computing education research today. Over fifty leading researchers from academia and industry (including Google and Microsoft) have contributed chapters that together define and expand the evidence base. The foundational chapters set the field in context, articulate expertise from key disciplines, and form a practical guide for new researchers. They address what can be learned empirically, methodologically and theoretically from each area. The topic chapters explore issues that are of current interest, why they matter, and what is already known. They include discussion of motivational context, implications for practice, and open questions which might suggest future research. The authors provide an authoritative introduction to the field which is essential reading for policy makers, as well as both new and established researchers."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UAJKEBGP8",
                    "U01038KJXRB",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UF1ATC4RF",
        "type": "message",
        "ts": "1584701118.430000",
        "client_msg_id": "f0830ee7-5ece-48dd-aa58-f15e5c55cb9f",
        "text": "Found this from Philip Guo’s daily vlog series - <https:\/\/www.youtube.com\/watch?v=j7lg9SSBSsk>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f7d23ee4d8b2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1069322068471_f7d23ee4d8b2dbb3c1ad_72.jpg",
            "first_name": "Deepak",
            "real_name": "Deepak Karki",
            "display_name": "karki",
            "team": "T5TCAFTA9",
            "name": "deepak6k",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584701103.429700",
        "parent_user_id": "UF1ATC4RF",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "2020-03-19 : PG Daily #4",
                "title_link": "https:\/\/www.youtube.com\/watch?v=j7lg9SSBSsk",
                "author_name": "Philip Guo",
                "author_link": "https:\/\/www.youtube.com\/user\/pgbovine",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/j7lg9SSBSsk\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: 2020-03-19 : PG Daily #4",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/j7lg9SSBSsk?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/www.youtube.com\/watch?v=j7lg9SSBSsk",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=j7lg9SSBSsk"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2yOnw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Found this from Philip Guo’s daily vlog series - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=j7lg9SSBSsk"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN06QADNV",
        "type": "message",
        "ts": "1584702338.430300",
        "client_msg_id": "1a8ab86c-d047-438e-909f-23108e236e18",
        "text": "`So then the question is … are you interested in turning unmotivated students into computational thinkers? Or do you want to teach motivated students better Python?`\nIt’s a very interesting angle to think about it from; thank you. I am interested in removing unnecessary blocker to knowledge acquisition; and hopefully - creating environments which are strong enablers of knowledge sharing. <http:\/\/Dataquest.io|Dataquest.io> does seem to be built on some very similar ideas. Are you aware of any platforms that take a similar approach for non-data science fields in technology? My personal interest with this space is I want to be able to understand technical things faster. I feel quite a few things in programming are relatively straight forward; however - getting the key insights and understanding which are at the core of an approach \/ idea can be, for me, a somewhat difficult process. I’m just trying to take that angle and see if it can be turned into something that other people also find useful.\n\n`\"Programming\" is usually taught in terms of learning a specific language or tool`\nI am far too ashamed to go into any level of detail of how badly messed up my “foundational” concepts of programming were; based on the introductory C++ courses I did at Uni. This extended many years into my professional career. And - how do I know when I “fixed” it? So terrifying.\n\n`write documentation that describes things in a different way than the names do`\nOh man; this is a hill I will die on! Billions of years of evolution culminates in\n\/\/ Finds project by Id\ngetProjectById",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g96c2c97e5ed",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/96c2c97e5edea550b6935e656f64204c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Brent",
            "display_name": "Brent",
            "team": "T5TCAFTA9",
            "name": "brentgracey",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584643351.400400",
        "parent_user_id": "UN06QADNV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "isqib",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "`So then the question is … are you interested in turning unmotivated students into computational thinkers? Or do you want to teach motivated students better Python?`\nIt’s a very interesting angle to think about it from; thank you. I am interested in removing unnecessary blocker to knowledge acquisition; and hopefully - creating environments which are strong enablers of knowledge sharing. "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/Dataquest.io",
                                "text": "Dataquest.io"
                            },
                            {
                                "type": "text",
                                "text": " does seem to be built on some very similar ideas. Are you aware of any platforms that take a similar approach for non-data science fields in technology? My personal interest with this space is I want to be able to understand technical things faster. I feel quite a few things in programming are relatively straight forward; however - getting the key insights and understanding which are at the core of an approach \/ idea can be, for me, a somewhat difficult process. I’m just trying to take that angle and see if it can be turned into something that other people also find useful.\n\n`\"Programming\" is usually taught in terms of learning a specific language or tool`\nI am far too ashamed to go into any level of detail of how badly messed up my “foundational” concepts of programming were; based on the introductory C++ courses I did at Uni. This extended many years into my professional career. And - how do I know when I “fixed” it? So terrifying.\n\n`write documentation that describes things in a different way than the names do`\nOh man; this is a hill I will die on! Billions of years of evolution culminates in\n\/\/ Finds project by Id\ngetProjectById"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN06QADNV",
        "type": "message",
        "ts": "1584702366.430500",
        "edited": {
            "user": "UN06QADNV",
            "ts": "1584702389.000000"
        },
        "client_msg_id": "a45a7ff9-ad22-40c6-93f0-121533477bcb",
        "text": "If I were to summarize my goals right now it would be: Build a competitor to Udemy. A platform optimized to teach programming concepts. Base courses on open source code sets to create rich; real world scenarios.\n\nSo; I’m trying to “learn” things I’m interested in; and at the same time, think about the process I use - to see if I can wrap it up into something that would be valuable to other people.\n\nOn the implementation level; having a url that links into an arbitrarily sophisticated environment is a great enabler. I came across these guys (and have had a few discussions with them) <https:\/\/www.gitpod.io\/education\/> - they are building a more open source version of vs-code. And then there is; as far as I can tell; a slightly more open source version of the gitpod “auto-environment” idea from Redhat <https:\/\/developers.redhat.com\/blog\/2019\/09\/17\/eclipse-che-kubernetes-native-ide-version-7-now-available\/>. So there are some quite powerful building blocks that could be leveraged.\n\nThis tweet poped into my feed a few days back - and is getting quite a warm response - <https:\/\/twitter.com\/LostInTangent\/status\/1236672803123814400>. I see it as being in a similar space of putting knowledge into code sets.\n\nA rough outline of the types of features I have in mind to explore:\n\n1.) A focus on discoverability. StackOverflow has set the bar on being able to find extremely specific results; and the goal would be to bring a similar experience to course content. How to achieve this is the big open question. Currently I’m thinking along the lines of getting rid of Chapters and capturing the “structure” of the knowledge in the course - and perhaps from there; allowing users to explore in an autonomous way.\n\n2.) A way to \"layer on\" complexity. I always find the early exercises overly simple; try to jump ahead; and then have to go back to try find where supporting info is addressed. This seems to come back to creating support for users to navigate the “structure” of the knowledge.\n\n3.) A platform which allows linking through all related topics. Similar to following articles in wikipedia - being able to start in a course on <https:\/\/github.com\/zio\/zio> and end up learning the relevant Category theory. (At least I think that's where users would end up.) And again; this seem to be back to the same core idea of knowledge having a structure - everything is a graph!!!\n\n4.) Being able to immerse in real world ASAP. The jump between \"exercise tasks\" and \"real world\" often is large; but with environment support, and leveraging open source, the context of the lesson can be enriched. I’m hoping this can embrace the principle of `Everything should be made as simple as possible, but no simpler.` Whilst things often get buried in accidental complexity; it is also easy to forget actual complexity. I think <https:\/\/github.com\/promises-aplus\/promises-spec\/issues\/94> is a really interesting real world scenario. If the community could have that discussion again; could we have better ways of framing “known” information so that people with different backgrounds could get up to speed efficiently - towards the goal of having more progressive debates and reaching what in retrospect are agreed to be “correct” decisions.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g96c2c97e5ed",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/96c2c97e5edea550b6935e656f64204c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Brent",
            "display_name": "Brent",
            "team": "T5TCAFTA9",
            "name": "brentgracey",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584643351.400400",
        "parent_user_id": "UN06QADNV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KrxK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If I were to summarize my goals right now it would be: Build a competitor to Udemy. A platform optimized to teach programming concepts. Base courses on open source code sets to create rich; real world scenarios.\n\nSo; I’m trying to “learn” things I’m interested in; and at the same time, think about the process I use - to see if I can wrap it up into something that would be valuable to other people.\n\nOn the implementation level; having a url that links into an arbitrarily sophisticated environment is a great enabler. I came across these guys (and have had a few discussions with them) "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.gitpod.io\/education\/"
                            },
                            {
                                "type": "text",
                                "text": " - they are building a more open source version of vs-code. And then there is; as far as I can tell; a slightly more open source version of the gitpod “auto-environment” idea from Redhat "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/developers.redhat.com\/blog\/2019\/09\/17\/eclipse-che-kubernetes-native-ide-version-7-now-available\/"
                            },
                            {
                                "type": "text",
                                "text": ". So there are some quite powerful building blocks that could be leveraged.\n\nThis tweet poped into my feed a few days back - and is getting quite a warm response - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/LostInTangent\/status\/1236672803123814400"
                            },
                            {
                                "type": "text",
                                "text": ". I see it as being in a similar space of putting knowledge into code sets.\n\nA rough outline of the types of features I have in mind to explore:\n\n1.) A focus on discoverability. StackOverflow has set the bar on being able to find extremely specific results; and the goal would be to bring a similar experience to course content. How to achieve this is the big open question. Currently I’m thinking along the lines of getting rid of Chapters and capturing the “structure” of the knowledge in the course - and perhaps from there; allowing users to explore in an autonomous way.\n\n2.) A way to \"layer on\" complexity. I always find the early exercises overly simple; try to jump ahead; and then have to go back to try find where supporting info is addressed. This seems to come back to creating support for users to navigate the “structure” of the knowledge.\n\n3.) A platform which allows linking through all related topics. Similar to following articles in wikipedia - being able to start in a course on "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/zio\/zio"
                            },
                            {
                                "type": "text",
                                "text": " and end up learning the relevant Category theory. (At least I think that's where users would end up.) And again; this seem to be back to the same core idea of knowledge having a structure - everything is a graph!!!\n\n4.) Being able to immerse in real world ASAP. The jump between \"exercise tasks\" and \"real world\" often is large; but with environment support, and leveraging open source, the context of the lesson can be enriched. I’m hoping this can embrace the principle of `Everything should be made as simple as possible, but no simpler.` Whilst things often get buried in accidental complexity; it is also easy to forget actual complexity. I think "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/promises-aplus\/promises-spec\/issues\/94"
                            },
                            {
                                "type": "text",
                                "text": " is a really interesting real world scenario. If the community could have that discussion again; could we have better ways of framing “known” information so that people with different backgrounds could get up to speed efficiently - towards the goal of having more progressive debates and reaching what in retrospect are agreed to be “correct” decisions."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN06QADNV",
        "type": "message",
        "ts": "1584702490.431300",
        "client_msg_id": "fe71c8ce-3da0-458a-83c1-3d38c104f85e",
        "text": "---\nThere where lots of interesting points in this thread already - so hopefully once I start creating \"content\" I can loop back to them and dig into more detail.\n\nIf anyone is interested in collaborating - please let me know",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g96c2c97e5ed",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/96c2c97e5edea550b6935e656f64204c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Brent",
            "display_name": "Brent",
            "team": "T5TCAFTA9",
            "name": "brentgracey",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584643351.400400",
        "parent_user_id": "UN06QADNV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YANQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "---\nThere where lots of interesting points in this thread already - so hopefully once I start creating \"content\" I can loop back to them and dig into more detail.\n\nIf anyone is interested in collaborating - please let me know"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1584714145.431500",
        "client_msg_id": "19f3dca2-cbca-449c-b2c3-de5ce3f86ba8",
        "text": "&gt; One angle I’ve homed in on is the principle that “easy-sounding things should be easy”. Programming is full of things that seem like they should be easy, but are *unnecessarily* hard in practice.\n<@U5Y7114NS> 100% agree. A few points:\n\n• In video game design, people often talk about “easy to start, hard to master”. I kinda like that approach and that’s essentially what MS Excel does. You can simulate complex stuff in Excel, but if you just want to add a bunch of numbers, create a plot, its REALLY easy to do so. Python on the other hand has like an hour of setup and a bunch of different tools and libraries to learn just to do that simple set of tasks that you can do more quickly on a piece of paper!\n• Another thing I’ll say, that Bret \/ Dynamicland people talk about a lot that I agree with … is that the fundamental REAL logic in most programs is very simple and short to express. However, bringing that to life adds the remaining 95% of code. Compatability with standards, browsers, optimizing performance, GUI, low level hardware stuff, etc. All of that is powered by brittle, complex, opaque software. I like what Bret said in an interview last year … “the real world simulates itself”, so the code for your unique logic \/ idea is very simple and minimal and can be understood and iterated on quickly. A lot of it can fit in your short-term memory (Alan Kay talks about getting things down to “a few pages of code”, which was the threshold under which even 6 year olds can program).\n&gt; Anyway, it seems like really good teaching is hard. I was really impressed with how <http:\/\/vuemastery.com|vuemastery.com> teaches Vue\nAfter 5 years in this trying to teach aliens (what I call people you can’t see :stuck_out_tongue:) technical things, I’ve come to appreciate that “learning styles”, “teaching well”, “motivating students”, and all other phrases like this are MOSTLY BS (not completely, but mostly). This is a very strong statement, but in my opinion … it fundamentally comes down to teacher-learner fit (or content-learner fit). If you’re highly motivated and have a clear goal, and the learning content or teacher is teaching towards those goals, then everything is great! The student will say things like “I like how this teacher teaches” or “this meets my learning style” … but harmony in learning + teaching goals I think explains MOST of the stories people say. This is maybe a hot take, but just my perspective :stuck_out_tongue: There’s still room for innovation though on the edges (people who are semi motivated but need to have a few aha moments delivered via fun videos or interactive simulations before they make a bigger learning commitment, etc).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584643351.400400",
        "parent_user_id": "UN06QADNV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qu5RK",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One angle I’ve homed in on is the principle that “easy-sounding things should be easy”. Programming is full of things that seem like they should be easy, but are "
                            },
                            {
                                "type": "text",
                                "text": "unnecessarily",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " hard in practice."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5Y7114NS"
                            },
                            {
                                "type": "text",
                                "text": " 100% agree. A few points:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "In video game design, people often talk about “easy to start, hard to master”. I kinda like that approach and that’s essentially what MS Excel does. You can simulate complex stuff in Excel, but if you just want to add a bunch of numbers, create a plot, its REALLY easy to do so. Python on the other hand has like an hour of setup and a bunch of different tools and libraries to learn just to do that simple set of tasks that you can do more quickly on a piece of paper!"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Another thing I’ll say, that Bret \/ Dynamicland people talk about a lot that I agree with … is that the fundamental REAL logic in most programs is very simple and short to express. However, bringing that to life adds the remaining 95% of code. Compatability with standards, browsers, optimizing performance, GUI, low level hardware stuff, etc. All of that is powered by brittle, complex, opaque software. I like what Bret said in an interview last year … “the real world simulates itself”, so the code for your unique logic \/ idea is very simple and minimal and can be understood and iterated on quickly. A lot of it can fit in your short-term memory (Alan Kay talks about getting things down to “a few pages of code”, which was the threshold under which even 6 year olds can program)."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyway, it seems like really good teaching is hard. I was really impressed with how "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/vuemastery.com",
                                "text": "vuemastery.com"
                            },
                            {
                                "type": "text",
                                "text": " teaches Vue"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "After 5 years in this trying to teach aliens (what I call people you can’t see "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": ") technical things, I’ve come to appreciate that “learning styles”, “teaching well”, “motivating students”, and all other phrases like this are MOSTLY BS (not completely, but mostly). This is a very strong statement, but in my opinion … it fundamentally comes down to teacher-learner fit (or content-learner fit). If you’re highly motivated and have a clear goal, and the learning content or teacher is teaching towards those goals, then everything is great! The student will say things like “I like how this teacher teaches” or “this meets my learning style” … but harmony in learning + teaching goals I think explains MOST of the stories people say. This is maybe a hot take, but just my perspective "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": " There’s still room for innovation though on the edges (people who are semi motivated but need to have a few aha moments delivered via fun videos or interactive simulations before they make a bigger learning commitment, etc)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D",
                    "UD6EXQVM0"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1584714285.431700",
        "client_msg_id": "4dd59a98-6f07-4246-a4dd-f3e52cfe9cc1",
        "text": "&gt; <http:\/\/Dataquest.io|Dataquest.io> does seem to be built on some very similar ideas. Are you aware of any platforms that take a similar approach for non-data science fields in technology?\n<@UN06QADNV> oh yeah there’s a few.\n\n• <http:\/\/Codecademy.com|Codecademy.com>: Python, JS, other stuff (including data science)\n• <http:\/\/Katacoda.com|Katacoda.com>: for devops-y stuff, purchased by O’Reilley.\n• <http:\/\/Codeschool.co|Codeschool> was bought by Pluralsight but mostly hasn’t gone anywhere (PS has struggled to switch away from video based learning)\n• <http:\/\/Datacamp.com|Datacamp.com>: data science (Just throwing it in here)\n• There’s a few smaller niche sites that teach specific things, like <https:\/\/www.sqlhabit.com\/> and <http:\/\/sqlbolt.com|sqlbolt.com> … both for SQL",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584643351.400400",
        "parent_user_id": "UN06QADNV",
        "attachments": [
            {
                "title": "SQL Habit – practical SQL course for Product Managers, Marketers, Designers etc",
                "title_link": "https:\/\/www.sqlhabit.com\/",
                "text": "Learn SQL by following fictional startup story, solving business challenges and working with real data.",
                "fallback": "SQL Habit – practical SQL course for Product Managers, Marketers, Designers etc",
                "image_url": "https:\/\/www.sqlhabit.com\/sqlhabit_practical_sql_course.jpg",
                "from_url": "https:\/\/www.sqlhabit.com\/",
                "image_width": 476,
                "image_height": 250,
                "image_bytes": 213061,
                "service_name": "sqlhabit.com",
                "id": 1,
                "original_url": "https:\/\/www.sqlhabit.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z+d",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/Dataquest.io",
                                "text": "Dataquest.io"
                            },
                            {
                                "type": "text",
                                "text": " does seem to be built on some very similar ideas. Are you aware of any platforms that take a similar approach for non-data science fields in technology?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UN06QADNV"
                            },
                            {
                                "type": "text",
                                "text": " oh yeah there’s a few.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "http:\/\/Codecademy.com",
                                        "text": "Codecademy.com"
                                    },
                                    {
                                        "type": "text",
                                        "text": ": Python, JS, other stuff (including data science)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "http:\/\/Katacoda.com",
                                        "text": "Katacoda.com"
                                    },
                                    {
                                        "type": "text",
                                        "text": ": for devops-y stuff, purchased by O’Reilley."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "http:\/\/Codeschool.co",
                                        "text": "Codeschool"
                                    },
                                    {
                                        "type": "text",
                                        "text": " was bought by Pluralsight but mostly hasn’t gone anywhere (PS has struggled to switch away from video based learning)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "http:\/\/Datacamp.com",
                                        "text": "Datacamp.com"
                                    },
                                    {
                                        "type": "text",
                                        "text": ": data science (Just throwing it in here)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "There’s a few smaller niche sites that teach specific things, like "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/www.sqlhabit.com\/"
                                    },
                                    {
                                        "type": "text",
                                        "text": " and "
                                    },
                                    {
                                        "type": "link",
                                        "url": "http:\/\/sqlbolt.com",
                                        "text": "sqlbolt.com"
                                    },
                                    {
                                        "type": "text",
                                        "text": " … both for SQL"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1584714702.432000",
        "client_msg_id": "af114a4b-420c-4771-96c9-47c1e82a0e1e",
        "text": "<@UN06QADNV> building a Udemy \/ Datacamp \/ Codecademy competitor is interesting but ultimately I’ve come to appreciate the following:\n\n• Teaching consumers is effing hard. If you care about learning outcomes, the best thing is to add on a lot of things that students’ motivational investment. This is what coding bootcamps do .. they make you pay a lot of money (weeds out people who aren’t serious), they make you take a basic coding interview exam (weeds out people who aren’t serious), they’re often in person (shared struggle with other students), etc. They use the techniques universities use (old teaching methods with LOTS of carrots \/ sticks to “motivate” people). \n• If you instead care about being “innovative” in how you teach, the challenge here is that … customers don’t REALLY care about learning in some fancy new way, they just have a specific job to be done (<https:\/\/hbr.org\/2016\/09\/know-your-customers-jobs-to-be-done>) that’s either “I want a pay raise \/ move up in seniority in my existing job” or “I want to switch into a new career”. There’s a small sliver that wants to “learn for fun \/ curiosity”, but that’s competitive as F (competing for the job of fun has an endless sea of competition, including Twitch, Youtube, and video games \/ tv shows). Soooo if you want to build some cool whizbang learning environment … you still have to answer the question of “what job is being served \/ solved better? and for whom?“. You want to teach with only interactive explanations? Cool! Which learners meet their goals better b\/c of it? And btw creating interactive simulations is time consuming and expensive, which means your ‘learning rate’ from your customers is a lot slower which means your competitors that just make lots of videos … may end up solving the job in a good enough way for most students at a lower price. \n• Hopefully that didn’t come off too much like a rant :stuck_out_tongue: I guess I spent 5 years here in this space and I felt like not enough rigor was applied to thinking about the customers’ actual desires, and instead more time was spent on feel-good things like “hands on learning” (which is still cool and interesting, but insufficient!)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584643351.400400",
        "parent_user_id": "UN06QADNV",
        "attachments": [
            {
                "service_name": "Harvard Business Review",
                "title": "Know Your Customers’ “Jobs to Be Done”",
                "title_link": "https:\/\/hbr.org\/2016\/09\/know-your-customers-jobs-to-be-done",
                "text": "Is innovation inherently a hit-or-miss endeavor? Not if you understand why customers make the choices they do.",
                "fallback": "Harvard Business Review: Know Your Customers’ “Jobs to Be Done”",
                "image_url": "https:\/\/hbr.org\/resources\/images\/article_assets\/2016\/07\/R1609D_CAM.jpg",
                "ts": 1472702400,
                "from_url": "https:\/\/hbr.org\/2016\/09\/know-your-customers-jobs-to-be-done",
                "image_width": 532,
                "image_height": 250,
                "image_bytes": 445584,
                "service_icon": "https:\/\/hbr.org\/resources\/images\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/hbr.org\/2016\/09\/know-your-customers-jobs-to-be-done"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8=cV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UN06QADNV"
                            },
                            {
                                "type": "text",
                                "text": " building a Udemy \/ Datacamp \/ Codecademy competitor is interesting but ultimately I’ve come to appreciate the following:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Teaching consumers is effing hard. If you care about learning outcomes, the best thing is to add on a lot of things that students’ motivational investment. This is what coding bootcamps do .. they make you pay a lot of money (weeds out people who aren’t serious), they make you take a basic coding interview exam (weeds out people who aren’t serious), they’re often in person (shared struggle with other students), etc. They use the techniques universities use (old teaching methods with LOTS of carrots \/ sticks to “motivate” people). "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "If you instead care about being “innovative” in how you teach, the challenge here is that … customers don’t REALLY care about learning in some fancy new way, they just have a specific job to be done ("
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/hbr.org\/2016\/09\/know-your-customers-jobs-to-be-done"
                                    },
                                    {
                                        "type": "text",
                                        "text": ") that’s either “I want a pay raise \/ move up in seniority in my existing job” or “I want to switch into a new career”. There’s a small sliver that wants to “learn for fun \/ curiosity”, but that’s competitive as F (competing for the job of fun has an endless sea of competition, including Twitch, Youtube, and video games \/ tv shows). Soooo if you want to build some cool whizbang learning environment … you still have to answer the question of “what job is being served \/ solved better? and for whom?“. You want to teach with only interactive explanations? Cool! Which learners meet their goals better b\/c of it? And btw creating interactive simulations is time consuming and expensive, which means your ‘learning rate’ from your customers is a lot slower which means your competitors that just make lots of videos … may end up solving the job in a good enough way for most students at a lower price. "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Hopefully that didn’t come off too much like a rant "
                                    },
                                    {
                                        "type": "emoji",
                                        "name": "stuck_out_tongue",
                                        "unicode": "1f61b"
                                    },
                                    {
                                        "type": "text",
                                        "text": " I guess I spent 5 years here in this space and I felt like not enough rigor was applied to thinking about the customers’ actual desires, and instead more time was spent on feel-good things like “hands on learning” (which is still cool and interesting, but insufficient!)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UD6EXQVM0"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1584714781.432300",
        "edited": {
            "user": "UAJKEBGP8",
            "ts": "1584715118.000000"
        },
        "client_msg_id": "9a5a5452-dbb6-4d32-9e58-d1ff78737f91",
        "text": "<@UN06QADNV> anyway I can talk about this stuff for ages :stuck_out_tongue: I’m still a big fan of creating rich, learning environments for learning to code (even if we’re just teaching people current stuff like Python and JS). But I actually am thinking now that I’d rather work on the infrastructure side of this. Basically make it easy for universities and companies to create their OWN courses that are highly tailored for their needs, but without being devops experts and needing a 10 person software eng team to stand this up!\n\nThat _seems_ like what Gitpod is doing a little? But Gitpod and <http:\/\/Repl.it|Repl.it> both are focused on developers instead I think?\n\nEDIT: looks like there’s at least one startup in this space: <https:\/\/www.codesters.com\/?lang=en>\n\nEDIT2: <https:\/\/www.codio.com\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584643351.400400",
        "parent_user_id": "UN06QADNV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4+N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UN06QADNV"
                            },
                            {
                                "type": "text",
                                "text": " anyway I can talk about this stuff for ages "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": " I’m still a big fan of creating rich, learning environments for learning to code (even if we’re just teaching people current stuff like Python and JS). But I actually am thinking now that I’d rather work on the infrastructure side of this. Basically make it easy for universities and companies to create their OWN courses that are highly tailored for their needs, but without being devops experts and needing a 10 person software eng team to stand this up!\n\nThat "
                            },
                            {
                                "type": "text",
                                "text": "seems",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " like what Gitpod is doing a little? But Gitpod and Repl.it both are focused on developers instead I think?\n\nEDIT: looks like there’s at least one startup in this space: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.codesters.com\/?lang=en"
                            },
                            {
                                "type": "text",
                                "text": "\n\nEDIT2: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.codio.com\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UD6EXQVM0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1584714802.432500",
        "client_msg_id": "e5769551-a3ea-4a2b-af38-de0797d68cf4",
        "text": "if y’all wanna hop on a Google hangout \/ zoom to chat more, I’m always down :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584643351.400400",
        "parent_user_id": "UN06QADNV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xH886",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if y’all wanna hop on a Google hangout \/ zoom to chat more, I’m always down "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKDM3GLAJ",
        "type": "message",
        "ts": "1584716328.433000",
        "client_msg_id": "19bbf4d8-676b-41c9-9cd6-f3f0703231e0",
        "text": "<@UN06QADNV> Re: the summary of your goals, the way I’ve thought about such a system in the past is a directed graph with two types of alternating nodes: concepts and explanations, where an explanation is for one concept and may rely on many existing concepts to explain the new concept. Similarly, there may be many explanations for the same concept (each relying on different precursor concepts). I think one hard part of this is that concepts may disagree with each other, and explanations may be more or less useful to different people (different sets of things they already understand\/believe, and different styles of thinking). But it still seems (to me) like the “correct” way to organize educational information.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "34e7a55348e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-01-04\/893378739792_34e7a55348e8c86c1901_72.jpg",
            "first_name": "",
            "real_name": "Jared Windover",
            "display_name": "Jared Windover",
            "team": "T5TCAFTA9",
            "name": "jaredwindover",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584643351.400400",
        "parent_user_id": "UN06QADNV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x96yF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UN06QADNV"
                            },
                            {
                                "type": "text",
                                "text": " Re: the summary of your goals, the way I’ve thought about such a system in the past is a directed graph with two types of alternating nodes: concepts and explanations, where an explanation is for one concept and may rely on many existing concepts to explain the new concept. Similarly, there may be many explanations for the same concept (each relying on different precursor concepts). I think one hard part of this is that concepts may disagree with each other, and explanations may be more or less useful to different people (different sets of things they already understand\/believe, and different styles of thinking). But it still seems (to me) like the “correct” way to organize educational information."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UD6EXQVM0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UF1ATC4RF",
        "type": "message",
        "ts": "1584718681.433400",
        "edited": {
            "user": "UF1ATC4RF",
            "ts": "1584718701.000000"
        },
        "client_msg_id": "919f8333-3689-4e8b-968c-6af6e0ce1c49",
        "text": "<https:\/\/malleable.systems\/catalog\/>\n&gt; This catalog highlights projects, people, groups, research, discussions, and other initiatives in the malleable software community. It is our hope that bringing more awareness to these efforts will lead to greater collaboration and better systems for us all that support the <https:\/\/malleable.systems\/mission\/|essential principles> of malleability.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f7d23ee4d8b2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1069322068471_f7d23ee4d8b2dbb3c1ad_72.jpg",
            "first_name": "Deepak",
            "real_name": "Deepak Karki",
            "display_name": "karki",
            "team": "T5TCAFTA9",
            "name": "deepak6k",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "62+N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/malleable.systems\/catalog\/"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This catalog highlights projects, people, groups, research, discussions, and other initiatives in the malleable software community. It is our hope that bringing more awareness to these efforts will lead to greater collaboration and better systems for us all that support the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/malleable.systems\/mission\/",
                                "text": "essential principles"
                            },
                            {
                                "type": "text",
                                "text": " of malleability."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UF1ATC4RF",
        "type": "message",
        "ts": "1584718837.435500",
        "client_msg_id": "829c7eea-779b-49a8-bc49-94a5b0375240",
        "text": "First time I’ve heard of “Malleable Systems”. From what I could gather it refers to systems that permit end user programmability \/ heavy customisability",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f7d23ee4d8b2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1069322068471_f7d23ee4d8b2dbb3c1ad_72.jpg",
            "first_name": "Deepak",
            "real_name": "Deepak Karki",
            "display_name": "karki",
            "team": "T5TCAFTA9",
            "name": "deepak6k",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584718837.435500",
        "reply_count": 20,
        "reply_users_count": 10,
        "latest_reply": "1587337180.082200",
        "reply_users": [
            "UJ6LDMMN0",
            "UML4ZEKDK",
            "UF1ATC4RF",
            "UEQ6M68H0",
            "U8A5MS6R1",
            "UCUSW7WVD",
            "UKDM3GLAJ",
            "UAVCC2X70",
            "UJN1TAYEQ",
            "UJBAJNFLK"
        ],
        "replies": [
            {
                "user": "UJ6LDMMN0",
                "ts": "1584722443.435800"
            },
            {
                "user": "UML4ZEKDK",
                "ts": "1584723107.436000"
            },
            {
                "user": "UF1ATC4RF",
                "ts": "1584723468.436600"
            },
            {
                "user": "UF1ATC4RF",
                "ts": "1584723558.437200"
            },
            {
                "user": "UML4ZEKDK",
                "ts": "1584727468.437500"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1584740354.438900"
            },
            {
                "user": "UML4ZEKDK",
                "ts": "1584744527.457900"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1584744928.458300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1584750700.459300"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1584758646.466700"
            },
            {
                "user": "UKDM3GLAJ",
                "ts": "1584796175.477400"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1584808638.483800"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1584813566.485000"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1584814759.485300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1586835527.383900"
            },
            {
                "user": "UML4ZEKDK",
                "ts": "1586869277.389100"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1586869959.389700"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1586890510.393500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1586940009.437400"
            },
            {
                "user": "UML4ZEKDK",
                "ts": "1587337180.082200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VJ0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "First time I’ve heard of “Malleable Systems”. From what I could gather it refers to systems that permit end user programmability \/ heavy customisability"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1584722443.435800",
        "client_msg_id": "e3839bf7-771e-4739-8078-ea94c76ec07b",
        "text": "It seems that this is an initiative launched by <@UML4ZEKDK> who contributes to this slack every now and then.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584718837.435500",
        "parent_user_id": "UF1ATC4RF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FBK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It seems that this is an initiative launched by "
                            },
                            {
                                "type": "user",
                                "user_id": "UML4ZEKDK"
                            },
                            {
                                "type": "text",
                                "text": " who contributes to this slack every now and then."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "UML4ZEKDK",
        "thread_ts": "1584718837.435500",
        "root": {
            "user": "UF1ATC4RF",
            "type": "message",
            "ts": "1584718837.435500",
            "client_msg_id": "829c7eea-779b-49a8-bc49-94a5b0375240",
            "text": "First time I’ve heard of “Malleable Systems”. From what I could gather it refers to systems that permit end user programmability \/ heavy customisability",
            "team": "T5TCAFTA9",
            "thread_ts": "1584718837.435500",
            "reply_count": 20,
            "reply_users_count": 10,
            "latest_reply": "1587337180.082200",
            "reply_users": [
                "UJ6LDMMN0",
                "UML4ZEKDK",
                "UF1ATC4RF",
                "UEQ6M68H0",
                "U8A5MS6R1",
                "UCUSW7WVD",
                "UKDM3GLAJ",
                "UAVCC2X70",
                "UJN1TAYEQ",
                "UJBAJNFLK"
            ],
            "replies": [
                {
                    "user": "UJ6LDMMN0",
                    "ts": "1584722443.435800"
                },
                {
                    "user": "UML4ZEKDK",
                    "ts": "1584723107.436000"
                },
                {
                    "user": "UF1ATC4RF",
                    "ts": "1584723468.436600"
                },
                {
                    "user": "UF1ATC4RF",
                    "ts": "1584723558.437200"
                },
                {
                    "user": "UML4ZEKDK",
                    "ts": "1584727468.437500"
                },
                {
                    "user": "UEQ6M68H0",
                    "ts": "1584740354.438900"
                },
                {
                    "user": "UML4ZEKDK",
                    "ts": "1584744527.457900"
                },
                {
                    "user": "U8A5MS6R1",
                    "ts": "1584744928.458300"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1584750700.459300"
                },
                {
                    "user": "UEQ6M68H0",
                    "ts": "1584758646.466700"
                },
                {
                    "user": "UKDM3GLAJ",
                    "ts": "1584796175.477400"
                },
                {
                    "user": "UAVCC2X70",
                    "ts": "1584808638.483800"
                },
                {
                    "user": "UJN1TAYEQ",
                    "ts": "1584813566.485000"
                },
                {
                    "user": "UJN1TAYEQ",
                    "ts": "1584814759.485300"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1586835527.383900"
                },
                {
                    "user": "UML4ZEKDK",
                    "ts": "1586869277.389100"
                },
                {
                    "user": "UJBAJNFLK",
                    "ts": "1586869959.389700"
                },
                {
                    "user": "UEQ6M68H0",
                    "ts": "1586890510.393500"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1586940009.437400"
                },
                {
                    "user": "UML4ZEKDK",
                    "ts": "1587337180.082200"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "VJ0",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "First time I’ve heard of “Malleable Systems”. From what I could gather it refers to systems that permit end user programmability \/ heavy customisability"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1584723107.436000",
        "edited": {
            "user": "UML4ZEKDK",
            "ts": "1584723166.000000"
        },
        "client_msg_id": "c9b1f291-c28a-4e78-ba52-5fb140e761bb",
        "text": "Thanks for posting! :smile: Yes, this is a new community blog and project library I'm organising. As the home page mentions (<https:\/\/malleable.systems>), it's about resetting the balance of power so that users are much more in control of software. There's a large spectrum of work under this umbrella: from making parts of existing programs customisable by users through to systems where anything can be redefined by anyone. I'm hoping this new community site will get more people excited and interested in this.\n\nI'd love to have any feedback (positive, negative, anything) on this. I'm also looking for other people to contribute posts and projects, so please reach out if anyone's interested! :smile:",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "29G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for posting! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " Yes, this is a new community blog and project library I'm organising. As the home page mentions ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/malleable.systems"
                            },
                            {
                                "type": "text",
                                "text": "), it's about resetting the balance of power so that users are much more in control of software. There's a large spectrum of work under this umbrella: from making parts of existing programs customisable by users through to systems where anything can be redefined by anyone. I'm hoping this new community site will get more people excited and interested in this.\n\nI'd love to have any feedback (positive, negative, anything) on this. I'm also looking for other people to contribute posts and projects, so please reach out if anyone's interested! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UMWF81HTP"
                ],
                "count": 2
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "UF1ATC4RF",
        "thread_ts": "1584718837.435500",
        "root": {
            "user": "UF1ATC4RF",
            "type": "message",
            "ts": "1584718837.435500",
            "client_msg_id": "829c7eea-779b-49a8-bc49-94a5b0375240",
            "text": "First time I’ve heard of “Malleable Systems”. From what I could gather it refers to systems that permit end user programmability \/ heavy customisability",
            "team": "T5TCAFTA9",
            "thread_ts": "1584718837.435500",
            "reply_count": 20,
            "reply_users_count": 10,
            "latest_reply": "1587337180.082200",
            "reply_users": [
                "UJ6LDMMN0",
                "UML4ZEKDK",
                "UF1ATC4RF",
                "UEQ6M68H0",
                "U8A5MS6R1",
                "UCUSW7WVD",
                "UKDM3GLAJ",
                "UAVCC2X70",
                "UJN1TAYEQ",
                "UJBAJNFLK"
            ],
            "replies": [
                {
                    "user": "UJ6LDMMN0",
                    "ts": "1584722443.435800"
                },
                {
                    "user": "UML4ZEKDK",
                    "ts": "1584723107.436000"
                },
                {
                    "user": "UF1ATC4RF",
                    "ts": "1584723468.436600"
                },
                {
                    "user": "UF1ATC4RF",
                    "ts": "1584723558.437200"
                },
                {
                    "user": "UML4ZEKDK",
                    "ts": "1584727468.437500"
                },
                {
                    "user": "UEQ6M68H0",
                    "ts": "1584740354.438900"
                },
                {
                    "user": "UML4ZEKDK",
                    "ts": "1584744527.457900"
                },
                {
                    "user": "U8A5MS6R1",
                    "ts": "1584744928.458300"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1584750700.459300"
                },
                {
                    "user": "UEQ6M68H0",
                    "ts": "1584758646.466700"
                },
                {
                    "user": "UKDM3GLAJ",
                    "ts": "1584796175.477400"
                },
                {
                    "user": "UAVCC2X70",
                    "ts": "1584808638.483800"
                },
                {
                    "user": "UJN1TAYEQ",
                    "ts": "1584813566.485000"
                },
                {
                    "user": "UJN1TAYEQ",
                    "ts": "1584814759.485300"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1586835527.383900"
                },
                {
                    "user": "UML4ZEKDK",
                    "ts": "1586869277.389100"
                },
                {
                    "user": "UJBAJNFLK",
                    "ts": "1586869959.389700"
                },
                {
                    "user": "UEQ6M68H0",
                    "ts": "1586890510.393500"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1586940009.437400"
                },
                {
                    "user": "UML4ZEKDK",
                    "ts": "1587337180.082200"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "VJ0",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "First time I’ve heard of “Malleable Systems”. From what I could gather it refers to systems that permit end user programmability \/ heavy customisability"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1584723468.436600",
        "client_msg_id": "826ecafc-4e91-4a8e-a456-4d45ab8c2021",
        "text": "<@UML4ZEKDK> - you might find some interesting links here which you can add to malleable systems\n<https:\/\/www.notion.so\/Building-Blocks-For-The-Future-Of-Computing-7f74066de66749d59939a91ab13ec960>",
        "attachments": [
            {
                "service_name": "Yoshiki's Workspace on Notion",
                "title": "Building Blocks For The Future Of Computing",
                "title_link": "https:\/\/www.notion.so\/Building-Blocks-For-The-Future-Of-Computing-7f74066de66749d59939a91ab13ec960",
                "text": "The purpose of this document is to catalog projects that rethink how we think with computers.",
                "fallback": "Yoshiki's Workspace on Notion: Building Blocks For The Future Of Computing",
                "image_url": "https:\/\/www.notion.so\/image\/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F3d695b93-af63-4d23-986c-68972849d711%2Fwe_shape_our_tools.png?table=block&id=efe07ca6-0a12-4dc4-a264-bb92c85a1720&width=2050&cache=v2",
                "from_url": "https:\/\/www.notion.so\/Building-Blocks-For-The-Future-Of-Computing-7f74066de66749d59939a91ab13ec960",
                "image_width": 709,
                "image_height": 168,
                "image_bytes": 6420,
                "id": 1,
                "original_url": "https:\/\/www.notion.so\/Building-Blocks-For-The-Future-Of-Computing-7f74066de66749d59939a91ab13ec960"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QiP7h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UML4ZEKDK"
                            },
                            {
                                "type": "text",
                                "text": " - you might find some interesting links here which you can add to malleable systems\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.notion.so\/Building-Blocks-For-The-Future-Of-Computing-7f74066de66749d59939a91ab13ec960"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UF1ATC4RF",
        "type": "message",
        "ts": "1584723558.437200",
        "client_msg_id": "568d88ce-0912-469e-9e6e-8e0b05e7792b",
        "text": "<@UMWF81HTP>’s project I believe, who’s already listed on your website :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f7d23ee4d8b2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1069322068471_f7d23ee4d8b2dbb3c1ad_72.jpg",
            "first_name": "Deepak",
            "real_name": "Deepak Karki",
            "display_name": "karki",
            "team": "T5TCAFTA9",
            "name": "deepak6k",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584718837.435500",
        "parent_user_id": "UF1ATC4RF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B=03",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UMWF81HTP"
                            },
                            {
                                "type": "text",
                                "text": "’s project I believe, who’s already listed on your website "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UML4ZEKDK",
        "type": "message",
        "ts": "1584727468.437500",
        "client_msg_id": "752df0e1-ad29-4392-af29-b32d4862ab9f",
        "text": "Ah, thanks for passing that along, I hadn't seen that one yet. I'll look through it for projects to add. :grin:\n\nYes, <@UMWF81HTP> has a lot of great ideas in this space. Some days, I am tempted to try building each idea he tweets about. :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "edc1c9acb12d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-22\/5286358617767_edc1c9acb12dfa7d1a20_72.jpg",
            "first_name": "J.",
            "real_name": "J. Ryan Stinnett",
            "display_name": "J. Ryan Stinnett",
            "team": "T5TCAFTA9",
            "name": "jryans",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584718837.435500",
        "parent_user_id": "UF1ATC4RF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0im",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, thanks for passing that along, I hadn't seen that one yet. I'll look through it for projects to add. "
                            },
                            {
                                "type": "emoji",
                                "name": "grin",
                                "unicode": "1f601"
                            },
                            {
                                "type": "text",
                                "text": "\n\nYes, "
                            },
                            {
                                "type": "user",
                                "user_id": "UMWF81HTP"
                            },
                            {
                                "type": "text",
                                "text": " has a lot of great ideas in this space. Some days, I am tempted to try building each idea he tweets about. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UMWF81HTP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1584740354.438900",
        "client_msg_id": "24a9efe7-8050-41c1-90c7-202c414084b8",
        "text": "Malleable software is a pipedream. Sure, in games there will be user generated content; using the nice tools provided various games allow level creation. Some games are super creative, like Super Mario Maker. But that doesn't mean you can change the underlying game in any way. It is far too complex and would be mostly dangerous for users to modify. It would also break their copyright control on which their economic foundation rests. In the other side of the world, open source software is typically so large and complex that only a few people can modify it.\n\nThe implications in terms of liability for mistakes is a big issue. Open source freeware has nobody to sue, and since it is free, you can't complain too much.\n\nSoftware is so intrinsically complex, that unless the complexity is drastically reduced, users are not going to have any control whatsoever, except perhaps for picking a few colors. Reducing complexity would do more to enable malleability than trying to enable more access. If it is spaghetti down there, what is the point of the trap-door letting you access it?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584718837.435500",
        "parent_user_id": "UF1ATC4RF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Dbo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Malleable software is a pipedream. Sure, in games there will be user generated content; using the nice tools provided various games allow level creation. Some games are super creative, like Super Mario Maker. But that doesn't mean you can change the underlying game in any way. It is far too complex and would be mostly dangerous for users to modify. It would also break their copyright control on which their economic foundation rests. In the other side of the world, open source software is typically so large and complex that only a few people can modify it.\n\nThe implications in terms of liability for mistakes is a big issue. Open source freeware has nobody to sue, and since it is free, you can't complain too much.\n\nSoftware is so intrinsically complex, that unless the complexity is drastically reduced, users are not going to have any control whatsoever, except perhaps for picking a few colors. Reducing complexity would do more to enable malleability than trying to enable more access. If it is spaghetti down there, what is the point of the trap-door letting you access it?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "ULM3U6275",
                    "UA14TGLTC"
                ],
                "count": 2
            },
            {
                "name": "-1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "face_with_raised_eyebrow",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UUVSSA60K"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1584741621.439300",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1584741670.000000"
        },
        "client_msg_id": "46392899-5462-4a04-918b-b1faf475aa65",
        "text": "Yeah - the command line is a just a 'special kind of UI'. This position can open up quite a bit of fluidity in how powerful command interfaces may be integrated with other visual models. The Unix legacy of teletype machines informs much of the primitive stdio model (streams of dead text), which is quite unfortunate on modern machines IMO.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584544384.396000",
        "parent_user_id": "USH01JEDQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ffZS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah - the command line is a just a 'special kind of UI'. This position can open up quite a bit of fluidity in how powerful command interfaces may be integrated with other visual models. The Unix legacy of teletype machines informs much of the primitive stdio model (streams of dead text), which is quite unfortunate on modern machines IMO."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP54KN8TX",
        "type": "message",
        "ts": "1584743125.448400",
        "client_msg_id": "0c51eb92-20ed-49cd-9c62-2c44dee4c516",
        "text": "I've been researching formal logic and came across Begriffsschrift, a book by Gottlob Frege which details what I would consider the first programming language in history. It was published in 1879 yet many of the ideas outlined in its premise remind me of what this community is trying to accomplish. The actual notation that this book describes is not too relevant but I would encourage you to read the four page premise that Frege wrote. Note that this comes after the translator's note, which is the first thing in the PDF. <https:\/\/www.informationphilosopher.com\/solutions\/philosophers\/frege\/Frege_Begriffsschrift.pdf|PDF is here>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0d46a3ab765b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-03-20\/1016274741157_0d46a3ab765beca61fd1_72.jpg",
            "first_name": "Michael",
            "real_name": "Michael Mamic",
            "display_name": "Michael Mamic",
            "team": "T5TCAFTA9",
            "name": "michael.mamic77",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584743125.448400",
        "reply_count": 9,
        "reply_users_count": 3,
        "latest_reply": "1584824128.486500",
        "reply_users": [
            "UJN1TAYEQ",
            "UP54KN8TX",
            "UFPRPSA4S"
        ],
        "replies": [
            {
                "user": "UJN1TAYEQ",
                "ts": "1584749482.458800"
            },
            {
                "user": "UP54KN8TX",
                "ts": "1584750028.459000"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1584756326.459800"
            },
            {
                "user": "UFPRPSA4S",
                "ts": "1584756981.465700"
            },
            {
                "user": "UFPRPSA4S",
                "ts": "1584758397.466500"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1584804157.477600"
            },
            {
                "user": "UP54KN8TX",
                "ts": "1584818857.485500"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1584821951.485700"
            },
            {
                "user": "UP54KN8TX",
                "ts": "1584824128.486500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s+rog",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been researching formal logic and came across Begriffsschrift, a book by Gottlob Frege which details what I would consider the first programming language in history. It was published in 1879 yet many of the ideas outlined in its premise remind me of what this community is trying to accomplish. The actual notation that this book describes is not too relevant but I would encourage you to read the four page premise that Frege wrote. Note that this comes after the translator's note, which is the first thing in the PDF. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.informationphilosopher.com\/solutions\/philosophers\/frege\/Frege_Begriffsschrift.pdf",
                                "text": "PDF is here"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "UML4ZEKDK",
        "thread_ts": "1584718837.435500",
        "root": {
            "user": "UF1ATC4RF",
            "type": "message",
            "ts": "1584718837.435500",
            "client_msg_id": "829c7eea-779b-49a8-bc49-94a5b0375240",
            "text": "First time I’ve heard of “Malleable Systems”. From what I could gather it refers to systems that permit end user programmability \/ heavy customisability",
            "team": "T5TCAFTA9",
            "thread_ts": "1584718837.435500",
            "reply_count": 20,
            "reply_users_count": 10,
            "latest_reply": "1587337180.082200",
            "reply_users": [
                "UJ6LDMMN0",
                "UML4ZEKDK",
                "UF1ATC4RF",
                "UEQ6M68H0",
                "U8A5MS6R1",
                "UCUSW7WVD",
                "UKDM3GLAJ",
                "UAVCC2X70",
                "UJN1TAYEQ",
                "UJBAJNFLK"
            ],
            "replies": [
                {
                    "user": "UJ6LDMMN0",
                    "ts": "1584722443.435800"
                },
                {
                    "user": "UML4ZEKDK",
                    "ts": "1584723107.436000"
                },
                {
                    "user": "UF1ATC4RF",
                    "ts": "1584723468.436600"
                },
                {
                    "user": "UF1ATC4RF",
                    "ts": "1584723558.437200"
                },
                {
                    "user": "UML4ZEKDK",
                    "ts": "1584727468.437500"
                },
                {
                    "user": "UEQ6M68H0",
                    "ts": "1584740354.438900"
                },
                {
                    "user": "UML4ZEKDK",
                    "ts": "1584744527.457900"
                },
                {
                    "user": "U8A5MS6R1",
                    "ts": "1584744928.458300"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1584750700.459300"
                },
                {
                    "user": "UEQ6M68H0",
                    "ts": "1584758646.466700"
                },
                {
                    "user": "UKDM3GLAJ",
                    "ts": "1584796175.477400"
                },
                {
                    "user": "UAVCC2X70",
                    "ts": "1584808638.483800"
                },
                {
                    "user": "UJN1TAYEQ",
                    "ts": "1584813566.485000"
                },
                {
                    "user": "UJN1TAYEQ",
                    "ts": "1584814759.485300"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1586835527.383900"
                },
                {
                    "user": "UML4ZEKDK",
                    "ts": "1586869277.389100"
                },
                {
                    "user": "UJBAJNFLK",
                    "ts": "1586869959.389700"
                },
                {
                    "user": "UEQ6M68H0",
                    "ts": "1586890510.393500"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1586940009.437400"
                },
                {
                    "user": "UML4ZEKDK",
                    "ts": "1587337180.082200"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "VJ0",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "First time I’ve heard of “Malleable Systems”. From what I could gather it refers to systems that permit end user programmability \/ heavy customisability"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1584744527.457900",
        "client_msg_id": "8757DD64-2C62-42A1-9DB2-802D41F39B06",
        "text": "Well, malleable software is definitely a very different world than the one we live in today and requires new tools, different approaches for wiring things together, UI concepts that aren’t in regular use today... a long list of things that are currently missing.\n\nSo, it’s certainty a lot of work that may take many years. Despite the vast amount of work required, in my view we must do it to give people (all people, not just experts) more control over software so it works in ways specific to them.\n\nI don’t want to be trapped in this world of isolated apps. The current ecosystem is not the world of computing for me, so I’m planning to do everything I can to change it.",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CAQoE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, malleable software is definitely a very different world than the one we live in today and requires new tools, different approaches for wiring things together, UI concepts that aren’t in regular use today... a long list of things that are currently missing.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "So, it’s certainty a lot of work that may take many years. Despite the vast amount of work required, in my view we must do it to give people (all people, not just experts) more control over software so it works in ways specific to them.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "I don’t want to be trapped in this world of isolated apps. The current ecosystem is not the world of computing for me, so I’m planning to do everything I can to change it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U8A5MS6R1",
                    "UAVCC2X70",
                    "UMWF81HTP"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "UJN1TAYEQ",
                    "UUVSSA60K",
                    "UD6EXQVM0",
                    "UMWF81HTP",
                    "UJ6LDMMN0"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1584744928.458300",
        "client_msg_id": "fd891cae-3be5-4c56-b44a-586a3febe527",
        "text": "Mel Conway pointed out (and others have I assume) that writing, arithmetic and calendar were once the \"sole property of a priest class\". Sure we're not going to have the masses write compilers, low level drivers for spaceships or designing billion transitor chips, but they sure could be doing a lot more than reading\/writing emails and clicking play buttons. <https:\/\/twitter.com\/conways_law\/status\/1039584547178987520>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584718837.435500",
        "parent_user_id": "UF1ATC4RF",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/conways_law|@conways_law>: 2\/2\nb. How is understanding this ubiquitous technology going to become so accessible to everybody that it will be taught in primary school? (Along with arithmetic, writing, &amp; calendar, also once the sole property of a priest class. No the answer is not teaching every kid to code)",
                "ts": 1536691245,
                "author_name": "Mel Conway",
                "author_link": "https:\/\/twitter.com\/conways_law\/status\/1039584547178987520",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/2649916905\/a47e31ae3c5712e3feaa5c6b445c3744_normal.jpeg",
                "author_subname": "@conways_law",
                "text": "2\/2\nb. How is understanding this ubiquitous technology going to become so accessible to everybody that it will be taught in primary school? (Along with arithmetic, writing, &amp; calendar, also once the sole property of a priest class. No the answer is not teaching every kid to code)",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/conways_law\/status\/1039584547178987520",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/conways_law\/status\/1039584547178987520",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z3f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Mel Conway pointed out (and others have I assume) that writing, arithmetic and calendar were once the \"sole property of a priest class\". Sure we're not going to have the masses write compilers, low level drivers for spaceships or designing billion transitor chips, but they sure could be doing a lot more than reading\/writing emails and clicking play buttons. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/conways_law\/status\/1039584547178987520"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK",
                    "UA14TGLTC",
                    "UMWF81HTP",
                    "UCKRZS3DZ"
                ],
                "count": 4
            },
            {
                "name": "heart",
                "users": [
                    "UML4ZEKDK",
                    "UCUSW7WVD",
                    "UAVCC2X70"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1584749482.458800",
        "client_msg_id": "76b0e3c8-1eb2-4098-9114-f3bdf8e2ad08",
        "text": "I agree that Begriffsschrift laid some foundations that were important in the development of programming languages. But Frege himself didn't want to create a mere programming language (which is just symbol manipulation system, executed by a machine). He wanted to create a human language for precisely and unambiguously reasoning about the real world. Some quotes:\n• \"My intention was not to represent an abstract logic in formulas, but to express a content through written signs in a more precise and clear way than it is possible to do through words. In fact, what I wanted to create was not a mere calculus ratiocinator but a lingua characterica in Leibniz's sense\". [I interpret \"calculus ratiocinator\" as meaning formal language or programming language.]\n• I called what alone mattered to me the conceptual content. Hence this definition must always be kept in mind if one wishes to gain a proper understanding of what my formula language is. That, too, is what led me to the name \"Begriffsschrift\". Since I confined myself for the time being to expressing relations that are independent of the particular characteristics of objects, I was also able to use the expression \"formula language for pure thought\". That it is modeled upon the formula language of arithmetic, as I indicated in the title, has to do with fundamental ideas rather than with details of execution. Any effort to create an artificial similarity by regarding a concept as the sum of its marks was entirely alien to my thought.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584743125.448400",
        "parent_user_id": "UP54KN8TX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RxOmH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree that Begriffsschrift laid some foundations that were important in the development of programming languages. But Frege himself didn't want to create a mere programming language (which is just symbol manipulation system, executed by a machine). He wanted to create a human language for precisely and unambiguously reasoning about the real world. Some quotes:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "\"My intention was not to represent an abstract logic in formulas, but to express a content through written signs in a more precise and clear way than it is possible to do through words. In fact, what I wanted to create was not a mere calculus ratiocinator but a lingua characterica in Leibniz's sense\". [I interpret \"calculus ratiocinator\" as meaning formal language or programming language.]"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I called what alone mattered to me the conceptual content. Hence this definition must always be kept in mind if one wishes to gain a proper understanding of what my formula language is. That, too, is what led me to the name \"Begriffsschrift\". Since I confined myself for the time being to expressing relations that are independent of the particular characteristics of objects, I was also able to use the expression \"formula language for pure thought\". That it is modeled upon the formula language of arithmetic, as I indicated in the title, has to do with fundamental ideas rather than with details of execution. Any effort to create an artificial similarity by regarding a concept as the sum of its marks was entirely alien to my thought."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UP54KN8TX",
        "type": "message",
        "ts": "1584750028.459000",
        "client_msg_id": "3b3c1d4d-004b-4403-959d-badfb2655951",
        "text": "It's true that his goal was more specific than just a  symbol manipulation system, but so are our programming languages themselves. While Frege's language maps to logical thought, our programming languages map to API usage, hardware communication, and data generation. Note also how he talks about it being the glue for more specific systems that might be invented in the future.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0d46a3ab765b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-03-20\/1016274741157_0d46a3ab765beca61fd1_72.jpg",
            "first_name": "Michael",
            "real_name": "Michael Mamic",
            "display_name": "Michael Mamic",
            "team": "T5TCAFTA9",
            "name": "michael.mamic77",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584743125.448400",
        "parent_user_id": "UP54KN8TX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BEX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's true that his goal was more specific than just a  symbol manipulation system, but so are our programming languages themselves. While Frege's language maps to logical thought, our programming languages map to API usage, hardware communication, and data generation. Note also how he talks about it being the glue for more specific systems that might be invented in the future."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1584750700.459300",
        "client_msg_id": "6c391e2d-273a-40cc-93e8-8177d0f1ab4e",
        "text": "The analogy I like to make is with literacy. Not everyone can write novels, but a large fraction of the population today can _read_ novels, comprehend them, compare and contrast similarities and differences between two novels, and so on. That seems like a useful bar to aim for for software, and it seems like a very high priority. If aiming for it breaks copyright, I say we need to rethink copyright. If it creates liability, I say we need to rethink liability. (Though free software has no liability today. There's no reason we can't keep doing that. This law has no teeth at the moment.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584718837.435500",
        "parent_user_id": "UF1ATC4RF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HPy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The analogy I like to make is with literacy. Not everyone can write novels, but a large fraction of the population today can "
                            },
                            {
                                "type": "text",
                                "text": "read",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " novels, comprehend them, compare and contrast similarities and differences between two novels, and so on. That seems like a useful bar to aim for for software, and it seems like a very high priority. If aiming for it breaks copyright, I say we need to rethink copyright. If it creates liability, I say we need to rethink liability. (Though free software has no liability today. There's no reason we can't keep doing that. This law has no teeth at the moment.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "UAVCC2X70",
                    "UA14TGLTC",
                    "U8A5MS6R1"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1584756326.459800",
        "client_msg_id": "3493e94c-3ad8-474d-9726-a3f6c033a123",
        "text": "There is another goal that programming languages can have, and that is to communicate ideas to other humans. My project, Curv, is a language for describing geometric shapes. Ideally, I would like to keep the language \"pure\", and omit any features that are not needed for the purpose of describing shapes in an abstract, mathematical way. For example, the language has numbers, but for the pure purpose of describing mathematical relationships to another human being, I just need the abstract concept of numbers. To execute code efficiently on a GPU, I need to introduce concepts like 'int32', 'float32', 'float64', and so on, which adds a lot of extra complexity. This tension in my language is one thing that came to mind when I was reading Frege.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584743125.448400",
        "parent_user_id": "UP54KN8TX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VMmV1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is another goal that programming languages can have, and that is to communicate ideas to other humans. My project, Curv, is a language for describing geometric shapes. Ideally, I would like to keep the language \"pure\", and omit any features that are not needed for the purpose of describing shapes in an abstract, mathematical way. For example, the language has numbers, but for the pure purpose of describing mathematical relationships to another human being, I just need the abstract concept of numbers. To execute code efficiently on a GPU, I need to introduce concepts like 'int32', 'float32', 'float64', and so on, which adds a lot of extra complexity. This tension in my language is one thing that came to mind when I was reading Frege."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPRPSA4S",
        "type": "message",
        "ts": "1584756981.465700",
        "client_msg_id": "8129650C-CFB7-4AE7-A43F-D2E52628CABC",
        "text": "Thanks for sharing. I knew of the Begriffsschrift for inventing first order logic but I’ve never read it before. I was surprised he brought up Leibniz’s ratiocinator which also is somewhat similar to the goals of this community. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5f4ac5375e5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f5f4ac5375e539e50ceedb08f65e9dd3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Robin Allison",
            "display_name": "Robin",
            "team": "T5TCAFTA9",
            "name": "robinps2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584743125.448400",
        "parent_user_id": "UP54KN8TX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+sVb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for sharing. I knew of the Begriffsschrift for inventing first order logic but I’ve never read it before. I was surprised he brought up Leibniz’s ratiocinator which also is somewhat similar to the goals of this community. "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1584757194.466300",
        "client_msg_id": "707c1e26-0be1-4658-8e17-aec2fcccd6a6",
        "text": "Firstly, I think you're not the only one on here building a language-agonistic editor. Someone described an generic AST editor of some sort? If you could all find each other, you might be able to form a collaboration.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584235196.324400",
        "parent_user_id": "U01003H81UM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rL9AQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Firstly, I think you're not the only one on here building a language-agonistic editor. Someone described an generic AST editor of some sort? If you could all find each other, you might be able to form a collaboration."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "U01003H81UM"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFPRPSA4S",
        "type": "message",
        "ts": "1584758397.466500",
        "client_msg_id": "d8bb7c1e-0905-4920-b0fd-b24ca9425373",
        "text": "Some hopefully not too random questions: How do you regard it as the first programming language? What makes something a programming language. I usually don't think of first order logic as a programming language wheras the lambda calculus could be a programming language (why is this, can anyone say?). What is the relation between formal languages, programming languages, and languages for the purpose of thinking and communicating?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5f4ac5375e5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f5f4ac5375e539e50ceedb08f65e9dd3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Robin Allison",
            "display_name": "Robin",
            "team": "T5TCAFTA9",
            "name": "robinps2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584743125.448400",
        "parent_user_id": "UP54KN8TX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d1+lk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some hopefully not too random questions: How do you regard it as the first programming language? What makes something a programming language. I usually don't think of first order logic as a programming language wheras the lambda calculus could be a programming language (why is this, can anyone say?). What is the relation between formal languages, programming languages, and languages for the purpose of thinking and communicating?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1584758646.466700",
        "client_msg_id": "e130b04c-f101-4838-a872-b16a5fb7ee30",
        "text": "A program is not a passive thing like a book. A book is created by the author, and you the user run through the book at your own speed, but every word you are going to read is pre-determined, fixed, and unchanging. Software by its nature is interactive both from a data point of view, and also by the operation of the various options and commands. The more flexible and changeable the commands are, the more you will call it \"malleable\". Just like people add accessories to cars, there are software products most notably Photoshop, which enables thousands of plug-ins to achieve additional function.\n\nThere is no reason why isolated apps have to stay isolated. We can (gasp) attempt to standardize on a protected arithmetic, and universal data interchange that is more robust than stupid JSON, which is a terribly weak interchange standard. Microsoft and Apple both put a lot of effort into intra-application communication, but unfortunately, Google and other web companies have spent most of their waking minutes trying to starve Apple, Adobe, and MS of their air supply by offering free versions of their core software with the goal of undermining their economic foundations.  In essence, Google maintains a near monopoly on search and advertising revenue, and with their vast surpluses engages in predatory attacks on traditional companies, all under the banner of \"Free! Free! Free!\".  Free until you want to get clicks for your company or service, then you find out how dear those clicks are.\n\nAnd now we have Amazon becoming a dominant player in cloud hosting, taking its vast surplus from selling to government extremely expensive secure racks that somehow are mandated by security regulations, and predating upon the data center market. In a recent visit to my racks in Fremont at a smaller competitor, it was half empty. I calculated that Amazon is more than 10x more expensive than doing it yourself, but now Amazon is proliferating options, and configuration tools that lock you in. So when you say malleable software, what part is malleable?  It practically takes 1000 hours now just to understand Amazon's catalog.\n\nThe overwhelming thrust of the current market is to increase complexity to such a ridiculous level that opening up a piece of software may not be that helpful, if you have to not only understand the code you are looking at, but also understand this tall tower of supporting tools and remote services.\n\nMy point is that a dramatic simplification is the first order of business, then you can make things very malleable, and have more flexible, personally customized products. There is indeed no good reason why things can't evolve towards more malleability, but i am asserting we are heading in the opposite direction at present inadvertently due to the complexification.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584718837.435500",
        "parent_user_id": "UF1ATC4RF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sze6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A program is not a passive thing like a book. A book is created by the author, and you the user run through the book at your own speed, but every word you are going to read is pre-determined, fixed, and unchanging. Software by its nature is interactive both from a data point of view, and also by the operation of the various options and commands. The more flexible and changeable the commands are, the more you will call it \"malleable\". Just like people add accessories to cars, there are software products most notably Photoshop, which enables thousands of plug-ins to achieve additional function.\n\nThere is no reason why isolated apps have to stay isolated. We can (gasp) attempt to standardize on a protected arithmetic, and universal data interchange that is more robust than stupid JSON, which is a terribly weak interchange standard. Microsoft and Apple both put a lot of effort into intra-application communication, but unfortunately, Google and other web companies have spent most of their waking minutes trying to starve Apple, Adobe, and MS of their air supply by offering free versions of their core software with the goal of undermining their economic foundations.  In essence, Google maintains a near monopoly on search and advertising revenue, and with their vast surpluses engages in predatory attacks on traditional companies, all under the banner of \"Free! Free! Free!\".  Free until you want to get clicks for your company or service, then you find out how dear those clicks are.\n\nAnd now we have Amazon becoming a dominant player in cloud hosting, taking its vast surplus from selling to government extremely expensive secure racks that somehow are mandated by security regulations, and predating upon the data center market. In a recent visit to my racks in Fremont at a smaller competitor, it was half empty. I calculated that Amazon is more than 10x more expensive than doing it yourself, but now Amazon is proliferating options, and configuration tools that lock you in. So when you say malleable software, what part is malleable?  It practically takes 1000 hours now just to understand Amazon's catalog.\n\nThe overwhelming thrust of the current market is to increase complexity to such a ridiculous level that opening up a piece of software may not be that helpful, if you have to not only understand the code you are looking at, but also understand this tall tower of supporting tools and remote services.\n\nMy point is that a dramatic simplification is the first order of business, then you can make things very malleable, and have more flexible, personally customized products. There is indeed no good reason why things can't evolve towards more malleability, but i am asserting we are heading in the opposite direction at present inadvertently due to the complexification."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1584764693.467400",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1584833735.000000"
        },
        "client_msg_id": "53d848ee-fccc-4a89-9ca1-a19443a61091",
        "text": "I'll explain what I'm building in phases, because it's not about the specific tool, but the process that it enables:\n\nI'm building a tool in which code and data can be edited and interacted with as live objects on a canvas. Code and data are made of the same \"building blocks\" (structural representation) that can be inspected, edited, and executed (interpreted) directly from the live structure.\n\nAll the LIVE code for the tool itself -- including the user interface and the interpreter -- is also exposed for live editing through the same interface. You can use the tool, to completely change itself (down to the metal if you like) to work completely differently. This entire transformation can happen at runtime, without the tool ever \"stopping\".\n\nWhat I'm making is much more about this self-bootstrapping ability\/ process, than it is about a specific tool that works a specific way. Building a specific tool is only necessary in the first place, just to bootstrap this ability into existence. So the initial \"tool\" just has to be minimally capable, even if it sucks -- and from there, I'll evolve it into something better through direct manipulation.\n\nImagine a robot capable of physically modifying itself, and programmed to improve itself. Even if it's not great at that, it could improve it's ability to improve itself, or even it's criteria for reasoning about what that means. If you can somehow make that initial robot _at all_, no matter how crappy, then you've succeeded in bootstrapping arbitrarily better robots. That's what I'm trying to do, but with software &amp; programming.\n\nThere's more to it than that, which is my philosophy on \"programming language\" not needing to be a solidly defined thing, or perhaps not even a thing at all! What is a compiler or interpreter, other than just code that operates on code? Why not put THAT code and YOUR code all in the same bucket? Instead of code + compiler, you have code (in whatever form makes sense for the context) + other code that executes or translates that code?\n\nHere is where the line blurs between programming language, and having code that iterates over a hardcoded list to avoid having to repeat a bunch of code that differs only by specific values. That's as much of a \"language\" as the one your code is written in!\n\nNow take that to the extreme, but think of being able to customize your own visual representation and \/ or editor for whatever makes sense for a given context. Imagine if \"code\" could contain instructions that told your IDE how to behave? That's the same as putting your code and the code OF the IDE in the same codebase. Just like I described for removing the separation between compiler + code.\n\nOne (example) vision I have is that \"code\" for something is not a text file that you open in another tool, but a self-contained executable program that, when you run it, presents you with a custom interface \/ model for \"the code\", including the code of the whole running program &amp; interface that it presents. No more dependency on some other interface! It's the same idea (in a sense) as infrastructure as code, or HATEOS\n\nBut what's that? you need a Java program? Fine, click a button, and it spits out a compiled-to-Java equivalent of \"just the product code\". Any code in any language or for any system, has a structure, and there's no reason that cannot be stored and executed as a _live_ structural representation, prior to generating the actual \"compiled\" built product from it.\n\nWhat's that? Execution in the tool is not the same as execution in the JVM (or whatever other target)? Well, the tool is written \"in itself\", and you already made a generate-the-equivalent-Java-code functionality; use that on the tool itself, and bootstrap the tool right into the JVM (or what have you). That's one perk of having just some generic code model with self contained rules for execution or translation.\n\nThere are so so many things and approaches and models for what \"code\" could be and how to model or visualize it, how it can be edited or projected, and what to even DO with the code (e.g. translate it) ... a tool like this would make it very easy to explore that space.\n\nWhat if the representation I choose is not great? What if the tools and process I provide for molding better tools and processes, really sucks? Well, then I mold better things for molding better things.\n\nSoftware is not just made of levers; it's made of levers for making levers. And I want to put that power in everyone's hands. This makes sense not just for programmers, but also for everyone else: What the heck does it even mean to have the power of a computer in your hand, without actually having any power of a computer in your hand? What a joke!\n\nBut what if people suck at computer stuff, though? Well gosh, if only they had the power of a computer to assist with using the power of a computer...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584235196.324400",
        "parent_user_id": "U01003H81UM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ueu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'll explain what I'm building in phases, because it's not about the specific tool, but the process that it enables:\n\nI'm building a tool in which code and data can be edited and interacted with as live objects on a canvas. Code and data are made of the same \"building blocks\" (structural representation) that can be inspected, edited, and executed (interpreted) directly from the live structure.\n\nAll the LIVE code for the tool itself -- including the user interface and the interpreter -- is also exposed for live editing through the same interface. You can use the tool, to completely change itself (down to the metal if you like) to work completely differently. This entire transformation can happen at runtime, without the tool ever \"stopping\".\n\nWhat I'm making is much more about this self-bootstrapping ability\/ process, than it is about a specific tool that works a specific way. Building a specific tool is only necessary in the first place, just to bootstrap this ability into existence. So the initial \"tool\" just has to be minimally capable, even if it sucks -- and from there, I'll evolve it into something better through direct manipulation.\n\nImagine a robot capable of physically modifying itself, and programmed to improve itself. Even if it's not great at that, it could improve it's ability to improve itself, or even it's criteria for reasoning about what that means. If you can somehow make that initial robot "
                            },
                            {
                                "type": "text",
                                "text": "at all",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", no matter how crappy, then you've succeeded in bootstrapping arbitrarily better robots. That's what I'm trying to do, but with software & programming.\n\nThere's more to it than that, which is my philosophy on \"programming language\" not needing to be a solidly defined thing, or perhaps not even a thing at all! What is a compiler or interpreter, other than just code that operates on code? Why not put THAT code and YOUR code all in the same bucket? Instead of code + compiler, you have code (in whatever form makes sense for the context) + other code that executes or translates that code?\n\nHere is where the line blurs between programming language, and having code that iterates over a hardcoded list to avoid having to repeat a bunch of code that differs only by specific values. That's as much of a \"language\" as the one your code is written in!\n\nNow take that to the extreme, but think of being able to customize your own visual representation and \/ or editor for whatever makes sense for a given context. Imagine if \"code\" could contain instructions that told your IDE how to behave? That's the same as putting your code and the code OF the IDE in the same codebase. Just like I described for removing the separation between compiler + code.\n\nOne (example) vision I have is that \"code\" for something is not a text file that you open in another tool, but a self-contained executable program that, when you run it, presents you with a custom interface \/ model for \"the code\", including the code of the whole running program & interface that it presents. No more dependency on some other interface! It's the same idea (in a sense) as infrastructure as code, or HATEOS\n\nBut what's that? you need a Java program? Fine, click a button, and it spits out a compiled-to-Java equivalent of \"just the product code\". Any code in any language or for any system, has a structure, and there's no reason that cannot be stored and executed as a "
                            },
                            {
                                "type": "text",
                                "text": "live",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " structural representation, prior to generating the actual \"compiled\" built product from it.\n\nWhat's that? Execution in the tool is not the same as execution in the JVM (or whatever other target)? Well, the tool is written \"in itself\", and you already made a generate-the-equivalent-Java-code functionality; use that on the tool itself, and bootstrap the tool right into the JVM (or what have you). That's one perk of having just some generic code model with self contained rules for execution or translation.\n\nThere are so so many things and approaches and models for what \"code\" could be and how to model or visualize it, how it can be edited or projected, and what to even DO with the code (e.g. translate it) ... a tool like this would make it very easy to explore that space.\n\nWhat if the representation I choose is not great? What if the tools and process I provide for molding better tools and processes, really sucks? Well, then I mold better things for molding better things.\n\nSoftware is not just made of levers; it's made of levers for making levers. And I want to put that power in everyone's hands. This makes sense not just for programmers, but also for everyone else: What the heck does it even mean to have the power of a computer in your hand, without actually having any power of a computer in your hand? What a joke!\n\nBut what if people suck at computer stuff, though? Well gosh, if only they had the power of a computer to assist with using the power of a computer..."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT",
                    "U01003H81UM"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1584766787.468900",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1584766931.000000"
        },
        "client_msg_id": "e9ab59fb-ffb8-4eb4-8a85-6d55ec496e06",
        "text": "Also, most software is horrendously more complex than it needs to be. The level of \"intrinsic complexity\" of software IS NOT what many software professionals claim it to be. I blame the layers of language and tools and frameworks, and not having good visibility \/ representation of \"a program\", so much so that it's just freaking hard to be and to even think about it very well if you just have layers and layers of code. (As Bret Victor says, the role of programming language in most cases is that of a user interface -- and in that regard, it's a _terrible_ interface)\n\nI think a tool like this could get a lot of that junk or if the way, and a program that \"does x y and z\" would look like whatever the most immediately way to humanly depict that in simple terms would be. Which may be code, or a diagram, or whatever.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584235196.324400",
        "parent_user_id": "U01003H81UM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eLVy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, most software is horrendously more complex than it needs to be. The level of \"intrinsic complexity\" of software IS NOT what many software professionals claim it to be. I blame the layers of language and tools and frameworks, and not having good visibility \/ representation of \"a program\", so much so that it's just freaking hard to be and to even think about it very well if you just have layers and layers of code. (As Bret Victor says, the role of programming language in most cases is that of a user interface -- and in that regard, it's a "
                            },
                            {
                                "type": "text",
                                "text": "terrible",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " interface)\n\nI think a tool like this could get a lot of that junk or if the way, and a program that \"does x y and z\" would look like whatever the most immediately way to humanly depict that in simple terms would be. Which may be code, or a diagram, or whatever."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1584767029.469300",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1584767230.000000"
        },
        "client_msg_id": "e8a2081f-e707-4412-b871-77ccec11a2b1",
        "text": "<@U01003H81UM>  - Regarding discussing our projects \/ goals -- see my comments above.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584235196.324400",
        "parent_user_id": "U01003H81UM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P5u3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01003H81UM"
                            },
                            {
                                "type": "text",
                                "text": "  - Regarding discussing our projects \/ goals -- see my comments above."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]