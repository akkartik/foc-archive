[
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1700652777.597089",
        "client_msg_id": "d386249c-6343-484c-8d11-ac4e955b8846",
        "text": "<@UL2SJ88Q3> Zac Nowicki is more expert at this than I am.  He wrote the code for odin0d.  (I can give you a github repo link, if you think that would help). Here is a paraphrased version of Zac’s comments:\n\nThe general format is an XML encoding of mxGraph. You may be able to use that as key terms to find some resources.\n\nThe format tends to be mostly straightforward to consume with any off the shelf XML parser, using xpaths, etc.\n\nMy recommendation for iterating quickly \/ exploring the output is doing some edits then opening Extras -&gt; Edit Diagram to view the XML for the current page only. drawio tends to stuff a lot of things you might be interested in in the “style” attribute on nodes. Check there if you don’t see a specific attribute.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1imgE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UL2SJ88Q3"
                            },
                            {
                                "type": "text",
                                "text": " Zac Nowicki is more expert at this than I am.  He wrote the code for odin0d.  (I can give you a github repo link, if you think that would help). Here is a paraphrased version of Zac’s comments:\n\nThe general format is an XML encoding of mxGraph. You may be able to use that as key terms to find some resources.\n\nThe format tends to be mostly straightforward to consume with any off the shelf XML parser, using xpaths, etc.\n\nMy recommendation for iterating quickly \/ exploring the output is doing some edits then opening Extras -> Edit Diagram to view the XML for the current page only. drawio tends to stuff a lot of things you might be interested in in the “style” attribute on nodes. Check there if you don’t see a specific attribute."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL2SJ88Q3",
        "type": "message",
        "ts": "1700677122.742319",
        "client_msg_id": "6c714c73-3b8c-4835-a36a-34fcd97fdd70",
        "text": "Thanks, yeah, the mxgraph pointer was the trick, turned up some decent docs",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ea40cf1a7c83",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-24\/8076913595155_ea40cf1a7c836d55cf1c_72.png",
            "first_name": "Andrew",
            "real_name": "Andrew Beyer",
            "display_name": "abeyer",
            "team": "T5TCAFTA9",
            "name": "beyer.andrew",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M3+xy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks, yeah, the mxgraph pointer was the trick, turned up some decent docs"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL2SJ88Q3",
        "type": "message",
        "ts": "1700677632.221459",
        "client_msg_id": "56e94efb-56e2-4430-b5aa-56b7398d3ab4",
        "text": "Still didn't explain the weird inversion it does when adding properties, but must be just a quirk of the format  ¯\\_(ツ)_\/¯",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ea40cf1a7c83",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-24\/8076913595155_ea40cf1a7c836d55cf1c_72.png",
            "first_name": "Andrew",
            "real_name": "Andrew Beyer",
            "display_name": "abeyer",
            "team": "T5TCAFTA9",
            "name": "beyer.andrew",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jHIml",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Still didn't explain the weird inversion it does when adding properties, but must be just a quirk of the format  ¯\\_(ツ)_\/¯"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04E5QAD6DD",
        "type": "message",
        "ts": "1700684985.148129",
        "client_msg_id": "f307d327-4a82-4041-8f8c-267f8bfb9a21",
        "text": "Does anyone (maybe <@U02U0AS3J49>?) know of any attempts to codify payroll deduction laws into code? I mean, obviously all the payroll software companies have done this independently — but are there any versions that are 1) from the government itself or 2) open source or 3) commercial products separate from an entire payroll product? (My immediate interest is in the US, but I'm curious if there are any attempts at formalizing tax laws in a software-executable form anywhere.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e3e6bba2ae45",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-06\/5085861186081_e3e6bba2ae4575d17358_72.jpg",
            "first_name": "David",
            "real_name": "David Alan Hjelle",
            "display_name": "David Alan Hjelle",
            "team": "T5TCAFTA9",
            "name": "dahjelle_futureofcodi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700684985.148129",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1700691072.331679",
        "reply_users": [
            "U02U0AS3J49",
            "U04E5QAD6DD"
        ],
        "replies": [
            {
                "user": "U02U0AS3J49",
                "ts": "1700688949.518919"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1700689093.286799"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1700689140.411199"
            },
            {
                "user": "U04E5QAD6DD",
                "ts": "1700691072.331679"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3dhj4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does anyone (maybe "
                            },
                            {
                                "type": "user",
                                "user_id": "U02U0AS3J49"
                            },
                            {
                                "type": "text",
                                "text": "?) know of any attempts to codify payroll deduction laws into code? I mean, obviously all the payroll software companies have done this independently — but are there any versions that are 1) from the government itself or 2) open source or 3) commercial products separate from an entire payroll product? (My immediate interest is in the US, but I'm curious if there are any attempts at formalizing tax laws in a software-executable form anywhere.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U02U0AS3J49"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1700688949.518919",
        "client_msg_id": "f3e22a5b-945a-4964-847a-5c5207b5ad6a",
        "text": "So, US payroll deduction laws, no. My whole thing until recently had been building tools to make it more realistic to build these kinds of isolated encodings of just what the laws require. And payroll is a super good use case for it. But I haven't seen anyone actually do it that way out in the open. If it exists, it is probably an OpenFisca encoding, maybe something that PolicyEngine is working on. Policy Engine is actively attempting to encode US tax and benefit laws, but I think their target is being able to simulate policy changes, so I don't know if their code would even target calculating deductions. You could also contact the Policy Simulation Library, which is US-based, and ask if they know of anyone looking at those rules in particular. I'm also based in Canada and haven't had my thumb on what's happening in the US for a few years.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700684985.148129",
        "parent_user_id": "U04E5QAD6DD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N7IfD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So, US payroll deduction laws, no. My whole thing until recently had been building tools to make it more realistic to build these kinds of isolated encodings of just what the laws require. And payroll is a super good use case for it. But I haven't seen anyone actually do it that way out in the open. If it exists, it is probably an OpenFisca encoding, maybe something that PolicyEngine is working on. Policy Engine is actively attempting to encode US tax and benefit laws, but I think their target is being able to simulate policy changes, so I don't know if their code would even target calculating deductions. You could also contact the Policy Simulation Library, which is US-based, and ask if they know of anyone looking at those rules in particular. I'm also based in Canada and haven't had my thumb on what's happening in the US for a few years."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1700689093.286799",
        "client_msg_id": "849045c4-62f7-4712-b9a2-b3150b22b78c",
        "text": "If you are interested in prototype formal encodings of US tax laws, there has been some work done in the Catala language, too.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700684985.148129",
        "parent_user_id": "U04E5QAD6DD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zrJyg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you are interested in prototype formal encodings of US tax laws, there has been some work done in the Catala language, too."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1700689140.411199",
        "client_msg_id": "109cea96-40cc-4d11-b6dd-93d7768f12bd",
        "text": "If you're thinking of doing an encoding yourself, let me know. I can give you a run down of some of the software options and it might save you some time experimenting.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700684985.148129",
        "parent_user_id": "U04E5QAD6DD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0A7gt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you're thinking of doing an encoding yourself, let me know. I can give you a run down of some of the software options and it might save you some time experimenting."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04E5QAD6DD",
        "type": "message",
        "ts": "1700691072.331679",
        "client_msg_id": "ef58d146-4f69-4e7f-b0fb-395550f35985",
        "text": "Interesting — thank you! That gives me some pointers to research if we ever decide to pursue that more fully.\n\n&gt;  And payroll is a super good use case for it. But I haven't seen anyone actually do it that way out in the open.\nYeah! It really struck me that there is a really useful product in this space — and, apart from the huge amount of work to encode the rules, it seems like payroll law is more amenable to this sort of thing than other areas of the law. But I don't really know what I'm talking about. :smile:\n\nThanks again!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e3e6bba2ae45",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-06\/5085861186081_e3e6bba2ae4575d17358_72.jpg",
            "first_name": "David",
            "real_name": "David Alan Hjelle",
            "display_name": "David Alan Hjelle",
            "team": "T5TCAFTA9",
            "name": "dahjelle_futureofcodi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700684985.148129",
        "parent_user_id": "U04E5QAD6DD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6HKqz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting — thank you! That gives me some pointers to research if we ever decide to pursue that more fully.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " And payroll is a super good use case for it. But I haven't seen anyone actually do it that way out in the open."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nYeah! It really struck me that there is a really useful product in this space — and, apart from the huge amount of work to encode the rules, it seems like payroll law is more amenable to this sort of thing than other areas of the law. But I don't really know what I'm talking about. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThanks again!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1700691460.442819",
        "client_msg_id": "6295251f-05ac-4c34-b944-19d1cd0f33b4",
        "text": "<@UL2SJ88Q3> I don’t fully understand what this “weird inversion” is.  If you can give me more detail (or a screenshot or something), then I will bounce it off of Zac and see if he has any comments…",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FDSrF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UL2SJ88Q3"
                            },
                            {
                                "type": "text",
                                "text": " I don’t fully understand what this “weird inversion” is.  If you can give me more detail (or a screenshot or something), then I will bounce it off of Zac and see if he has any comments…"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL2SJ88Q3",
        "type": "message",
        "ts": "1700691906.537389",
        "client_msg_id": "b38bd45a-2fff-484a-955e-a130a973e4fb",
        "text": "I think I've got it sorted, but the thing I noticed was that normally in mxgraph you would set custom data properties on a vertex in the `mxcell` 's `value` and if you haven't set any properties from drawio it includes `value` as an attribute, but as soon as you do it then removes the value attribute completely and wraps the cell in a parent object containing its label and properties",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ea40cf1a7c83",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-24\/8076913595155_ea40cf1a7c836d55cf1c_72.png",
            "first_name": "Andrew",
            "real_name": "Andrew Beyer",
            "display_name": "abeyer",
            "team": "T5TCAFTA9",
            "name": "beyer.andrew",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0fXKR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think I've got it sorted, but the thing I noticed was that normally in mxgraph you would set custom data properties on a vertex in the "
                            },
                            {
                                "type": "text",
                                "text": "mxcell",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " 's "
                            },
                            {
                                "type": "text",
                                "text": "value",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and if you haven't set any properties from drawio it includes "
                            },
                            {
                                "type": "text",
                                "text": "value",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " as an attribute, but as soon as you do it then removes the value attribute completely and wraps the cell in a parent object containing its label and properties"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "guitar",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UL2SJ88Q3",
        "type": "message",
        "ts": "1700692044.288759",
        "client_msg_id": "d0495073-b800-40e0-ad49-699284d69b79",
        "text": "Not how I would have serialized that... But seems to be working once I look at both cells and wrapper objects containing cells+properties",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ea40cf1a7c83",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-24\/8076913595155_ea40cf1a7c836d55cf1c_72.png",
            "first_name": "Andrew",
            "real_name": "Andrew Beyer",
            "display_name": "abeyer",
            "team": "T5TCAFTA9",
            "name": "beyer.andrew",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "71eWv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not how I would have serialized that... But seems to be working once I look at both cells and wrapper objects containing cells+properties"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "guitar",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    }
]