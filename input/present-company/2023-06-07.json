[
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1686149783.557369",
        "client_msg_id": "7E27618B-4DE9-40A8-987B-7C5B0A3BF6D0",
        "text": "Oh oh! Make it tilt in 3d to reveal each cell as having a tail\/graph or at least git-like commit tree with dots along z-axis (time). Scroll the sheet along z-axis to reveal the values in the cell when they pass along the dot!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686070803.062419",
        "parent_user_id": "UFPPABQ7P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C3JD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh oh! Make it tilt in 3d to reveal each cell as having a tail\/graph or at least git-like commit tree with dots along z-axis (time). Scroll the sheet along z-axis to reveal the values in the cell when they pass along the dot!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1686149928.796619",
        "client_msg_id": "A6819F06-52B2-498B-B1E8-4D7F80357F66",
        "text": "While nicely flashing the cells that gets changed (in authors color), to give at-a-glance info when scrolling fast.\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686070803.062419",
        "parent_user_id": "UFPPABQ7P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TJV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "While nicely flashing the cells that gets changed (in authors color)"
                            },
                            {
                                "type": "text",
                                "text": ","
                            },
                            {
                                "type": "text",
                                "text": " to give at-a-glance info when scrolling fast.\n"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1686151086.445029",
        "client_msg_id": "924F512B-BDA6-4877-9D5A-47E10AEF4746",
        "text": "Detect\/store special changes and vizualize appropriately, eg. a move\/duplicate (ctrl-x\/v\/v). Assume nr changes are smooth\/fit graph along z. For images, morph 'ed (XD)! For colors, smooth transition them! (or have it snap, depending on ctx). The trail interface, while also amazing in VisionPro\/VR, allows for a quick intuitive sense of the sheet's evolution through time, space, collaborators, and sections. Combine with LLM's or other to write telescopic text summaries of changes. Non-linear timescale to have it based both on time and change density (cognitive wise, not necessarily data-wise); ability to affect this parameter along with the space-between change-regions to create clearer clusters of editing sessions, or parameter for conceptual\/spacial regions, to separate edit history, recursively, into more specific areas of interest. (eg. if code, how has this functionality changed? keeping it in center while files surrounding content may move around it, while its origin story unfolds as it splits and merges across locations (+ utilizing data flow\/dependency graph, to bring surrounding functionality ctx in the periphery.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686070803.062419",
        "parent_user_id": "UFPPABQ7P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M9ELX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Detect\/store special changes and vizualize appropriately, eg. a move\/duplicate (ctrl-x\/v\/v). Assume nr changes are smooth\/fit graph along z. For images, morph 'ed (XD)! For colors, smooth transition them! (or have it snap, depending on ctx). The trail interface, while also amazing in VisionPro\/VR, allows for a quick intuitive sense of the sheet's evolution through time, space, collaborators, and sections. Combine with LLM's or other to write telescopic text summaries of changes. Non-linear timescale to have it based both on time and change density (cognitive wise, not necessarily data-wise); ability to affect this parameter along with the space-between change-regions to create clearer clusters of editing sessions, or parameter for conceptual\/spacial regions, to separate edit history, recursively, into more specific areas of interest. (eg. if code, how has this functionality changed? keeping it in center while files surrounding content may move around it, while its origin story unfolds as it splits and merges across locations (+ utilizing data flow\/dependency graph, to bring surrounding functionality ctx in the periphery."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thought_balloon",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "<@UBN9AFS0N> – this is the conventional approach to snapshot history UX that I’m referring to. In my application, “multidimensional data” is basically just like rows in a typical database, where each column in the database is a “dimension”. A key difference is that “dimensions” can be re-used in multiple tables and used for joining and comparing across datasets.\n\nThe primary function I hope to use snapshots for is not data-entry, though. It’s “data modeling” and experimentation. E.g. Setting up data visualizations and control knobs on a canvas interface. So, if someone accidentally deletes a canvas of control knobs and visualizations, that canvas can be restored from a week ago through browsing this “snapshot history”",
        "files": [
            {
                "id": "F05BBRNRABF",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UFPPABQ7P",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G32O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " – this is the conventional approach to snapshot history UX that I’m referring to. In my application, “multidimensional data” is basically just like rows in a typical database, where each column in the database is a “dimension”. A key difference is that “dimensions” can be re-used in multiple tables and used for joining and comparing across datasets.\n\nThe primary function I hope to use snapshots for is not data-entry, though. It’s “data modeling” and experimentation. E.g. Setting up data visualizations and control knobs on a canvas interface. So, if someone accidentally deletes a canvas of control knobs and visualizations, that canvas can be restored from a week ago through browsing this “snapshot history”"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1686152649.628149",
        "client_msg_id": "392e16a4-dfa8-4905-9ef3-98710bb0aebc",
        "thread_ts": "1686070803.062419",
        "parent_user_id": "UFPPABQ7P"
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1686152882.193639",
        "client_msg_id": "04455b1d-2dac-4223-b7d5-8374d841c69b",
        "text": "<@UNCP67JSK> – I like the idea a lot conceptually. I think there’s potentially something very feasible with respect to filtering changesets based solely on which canvas is being viewed or which visualization is selected.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686070803.062419",
        "parent_user_id": "UFPPABQ7P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "brB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UNCP67JSK"
                            },
                            {
                                "type": "text",
                                "text": " – I like the idea a lot conceptually. I think there’s potentially something very feasible with respect to filtering changesets based solely on which canvas is being viewed or which visualization is selected."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]