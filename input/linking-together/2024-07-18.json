[
    {
        "user": "U03U0SCU5LH",
        "type": "message",
        "ts": "1721292444.484549",
        "edited": {
            "user": "U03U0SCU5LH",
            "ts": "1721292475.000000"
        },
        "client_msg_id": "2d5f5487-bb11-424e-b65c-f2d998bb9e01",
        "text": "Reminds me of a similar question to some of the top economists, \"if we could redo our tax system from scratch, how would that look?\"\nThey all basically said, its good the way it is, doesn't need change.\nI think there are several forces at play:\n\"You don't know enough, so you feel like all this complexity is unnecessary\"\n\"You know all the details and lost the big picture\",\n\"You have stakes in the game\"\n \"You resist change\"\n\"Something out of the ordinary does not get funded\"\n\"The idea, actually just adds to the complexity\"\n\"There is no transition from old to new\"\n\"The new idea is just bad\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdf6784b7d6d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/df6784b7d6d97fb67dec89320cc88a84.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Dany",
            "real_name": "Dany",
            "display_name": "Dany",
            "team": "T5TCAFTA9",
            "name": "bitteldany",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1721279487.692989",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bVqX1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reminds me of a similar question to some of the top economists, \"if we could redo our tax system from scratch, how would that look?\"\nThey all basically said, its good the way it is, doesn't need change.\nI think there are several forces at play:\n\"You don't know enough, so you feel like all this complexity is unnecessary\"\n\"You know all the details and lost the big picture\",\n\"You have stakes in the game\"\n \"You resist change\"\n\"Something out of the ordinary does not get funded\"\n\"The idea, actually just adds to the complexity\"\n\"There is no transition from old to new\"\n\"The new idea is just bad\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1721293832.630459",
        "client_msg_id": "D9476F60-5558-460B-83D0-6988F3232D9A",
        "text": "If you look at a complex system that has evolved out of thousands (millions?) of little decisions over a long period of time, and then ask to redesign such a system from scratch, it’s just overwhelming.\n\nThere are no good answers to the question, because all the answers we have found in the old system came out of this long grinding process. To answer the question, we’d have to go on another long journey of making thousands of little decisions one by one all over again.\n\nI bet if we tried, we’d end up somewhere completely different this time. But it’s hard to convince people to do it all over again. Seems so inefficient.\n\nBut if you see it (oversimplified) as a binary decision tree of 1000 decisions made over time, it would be rather spectacular if we nailed each of those 1000 decisions the first time such that we would take exactly the same path again.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1721279487.692989",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bcnmf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you look at a complex system that has evolved out of thousands (millions?) of little decisions over a long period of time, and then ask to redesign such a system from scratch, "
                            },
                            {
                                "type": "text",
                                "text": "it’s"
                            },
                            {
                                "type": "text",
                                "text": " just overwhelming"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": "\n\nThere are no good answers to the question, because all the answers we have found in the old system came out of this long grinding process"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " To answer the question, "
                            },
                            {
                                "type": "text",
                                "text": "we’d"
                            },
                            {
                                "type": "text",
                                "text": " have to go on another long journey of making thousands of little decisions one by one all over again"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": "\n\nI bet if we tried, "
                            },
                            {
                                "type": "text",
                                "text": "we’d"
                            },
                            {
                                "type": "text",
                                "text": " end up somewhere completely different this time"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " But it’s hard to convince people to do it all over again"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Seems so inefficient.\n\nBut if you see it (oversimplified) as a binary decision tree of 1000 decisions made over time, it would be rather spectacular if we nailed each of those 1000 decisions the first time such that we would take exactly the same path again."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1721317585.631879",
        "client_msg_id": "dbaa1910-57b4-4e6f-a703-304867a45d01",
        "text": "<https:\/\/blog.sbensu.com\/posts\/demand-for-visual-programming\/|We need visual programming. No, not like that.>\n\n&gt;  *Let's observe what developers _do_, not what they _say_.*\n&gt; \n&gt; Developers do spend the time to visualize aspects of their code but rarely the logic itself. They visualize other aspects of their software that are _important, implicit, and hard to understand_. Here are some visualizations that I encounter often in serious contexts of use:\n&gt; • Various ways to visualize the codebase overall.\n&gt; • Diagrams that show how computers are connected in a network\n&gt; • Diagrams that show how data is laid out in memory\n&gt; • Transition diagrams for state machines.\n&gt; • Swimlane diagrams for request \/ response protocols.\n&gt; \n&gt; _This_ is the visual programming developers are asking for.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1721317585.631879",
        "reply_count": 8,
        "reply_users_count": 5,
        "latest_reply": "1723937189.049469",
        "reply_users": [
            "UCUSW7WVD",
            "UC2A2ARPT",
            "UE1JQM9HQ",
            "UJBAJNFLK",
            "U067RCH8NB0"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1721317629.069319"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1721317812.967029"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1721317982.990349"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1721318365.599639"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1721318460.246209"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1721320536.722489"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1721377717.385419"
            },
            {
                "user": "U067RCH8NB0",
                "ts": "1723937189.049469"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vypxB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/blog.sbensu.com\/posts\/demand-for-visual-programming\/",
                                "text": "We need visual programming. No, not like that."
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " Let's observe what developers ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "do",
                                "style": {
                                    "bold": true,
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", not what they ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "say",
                                "style": {
                                    "bold": true,
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nDevelopers do spend the time to visualize aspects of their code but rarely the logic itself. They visualize other aspects of their software that are "
                            },
                            {
                                "type": "text",
                                "text": "important, implicit, and hard to understand",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Here are some visualizations that I encounter often in "
                            },
                            {
                                "type": "text",
                                "text": "serious contexts of use",
                                "style": {
                                    "unlink": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ":"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Various ways to visualize the codebase overall."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Diagrams that show how computers are connected in a network"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Diagrams that show how data is laid out in memory"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Transition diagrams for state machines."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Swimlane diagrams for request \/ response protocols."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 1
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "This",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is the visual programming developers are asking for."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U079M43CQ31"
                ],
                "count": 1
            },
            {
                "name": "eyes",
                "users": [
                    "U067RCH8NB0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1721317629.069319",
        "client_msg_id": "f4ab60dc-1b4c-4045-8733-2aa10068bc8a",
        "text": "Oh wait, this is of a piece with the previous post. I suppose it's also ok at the top-level..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1721317585.631879",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Aq6\/I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh wait, this is of a piece with the previous post. I suppose it's also ok at the top-level.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1721317807.883659",
        "client_msg_id": "5b3f2dfd-ac4b-42e7-97c6-753a50b50877",
        "text": "As a follow-up to the above, there's this nice blog post from <@UCYF51KT2> on _diagrams as code:_ <https:\/\/tonsky.me\/blog\/diagrams\/|Where Should Visual Programming Go?>\n\n&gt; Level 3: Diagrams are code\n&gt; This is what the endgame should be IMO. Some things are better represented as text. Some are best understood visually. We should mix and match what works best on a case-by-case basis. Don’t try to visualize simple code. Don’t try to write code where a diagram is better.\nHear, hear!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1721317807.883659",
        "reply_count": 20,
        "reply_users_count": 6,
        "latest_reply": "1721593798.308779",
        "reply_users": [
            "UCUSW7WVD",
            "UBKNXPBAB",
            "U02E4DAQGSZ",
            "UC2A2ARPT",
            "UGWUJUZHT",
            "U06BUK2M2RH"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1721331618.212089"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1721368073.990779"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1721384586.715049"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1721403667.690699"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1721403731.829909"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1721405887.139429"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1721406666.662579"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1721409850.042859"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1721413560.288119"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1721420135.478359"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1721420174.061549"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1721420326.876539"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1721420725.120529"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1721422571.053629"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1721424117.665379"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1721424249.754149"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1721428605.569979"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1721474362.047749"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1721485484.377879"
            },
            {
                "user": "U06BUK2M2RH",
                "ts": "1721593798.308779"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XnKdQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As a follow-up to the above, there's this nice blog post from "
                            },
                            {
                                "type": "user",
                                "user_id": "UCYF51KT2"
                            },
                            {
                                "type": "text",
                                "text": " on "
                            },
                            {
                                "type": "text",
                                "text": "diagrams as code: ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/tonsky.me\/blog\/diagrams\/",
                                "text": "Where Should Visual Programming Go?"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Level 3: Diagrams are code\nThis is what the endgame should be IMO. Some things are better represented as text. Some are best understood visually. We should mix and match what works best on a case-by-case basis. Don’t try to visualize simple code. Don’t try to write code where a diagram is better."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nHear, hear!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U06131CATV3",
                    "U8A5MS6R1",
                    "UFEQUBNNT",
                    "U05SU27S1M2",
                    "U079M43CQ31",
                    "U05UK5T7LPP",
                    "U0258UX5F1C",
                    "U06BUK2M2RH"
                ],
                "count": 9
            },
            {
                "name": "100",
                "users": [
                    "U06BUK2M2RH"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1721317812.967029",
        "client_msg_id": "b04c5d17-9b0b-4528-b914-d7fc56a5dd1e",
        "text": "Fixed :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1721317585.631879",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z+GWJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Fixed :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1721317982.990349",
        "client_msg_id": "83382111-24b1-43c5-a8fc-cfcfc4ded0e8",
        "text": "Now I'm wondering what a _programming language_ looks like that makes it easy to create such visualizations and keep them updated over time.\n\nMy biases make me go first to Lisp, but in practice it's actually no easier to parse Lisp on a semantic level (e.g. detecting new variable scopes) than any other language.\n\nMaybe Glamorous Toolkit? <@UJBAJNFLK> <@UE1JQM9HQ>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1721317585.631879",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xm2xw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Now I'm wondering what a "
                            },
                            {
                                "type": "text",
                                "text": "programming language",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " looks like that makes it easy to create such visualizations and keep them updated over time.\n\nMy biases make me go first to Lisp, but in practice it's actually no easier to parse Lisp on a semantic level (e.g. detecting new variable scopes) than any other language.\n\nMaybe Glamorous Toolkit? "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1721318365.599639",
        "client_msg_id": "CD657609-D9D9-4FC0-8792-3DADC3BB9B96",
        "text": "The visualizations you are talking about are first and foremost for reading, not for writing, which is indeed the most costly and painful problem in software engineering today. As such, this is not a programming language issue, but an environment issue. Moldable Development is a systematic method for doing exactly that. It turns out that reading needs are orthogonal with writing needs. Glamorous Toolkit is the most advanced and extensive environment that shows how far doing this systematically can get you. I do expect people will copy GT, and they very much should. My only worry is that they will not copy everything.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1721317585.631879",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0o2Hl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The visualizations you are talking about are first and foremost for reading, not for writing, which is indeed the most costly and painful problem in software engineering today. As such, this is not a programming language issue, but an environment issue. Moldable Development is a systematic method for doing exactly that. It turns out that reading needs are orthogonal with writing needs. Glamorous Toolkit is the most advanced and extensive environment that shows how far doing this systematically can get you. I do expect people will copy GT, and they very much should. My only worry is that they will not copy everything."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U05UK5T7LPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1721318460.246209",
        "client_msg_id": "0af93cf1-3110-4775-8ef2-acf4c2bfe285",
        "text": "Thanks! Does GT currently support visualizations like call graphs (I'm sure), automatically extracting from code visualizations like state machines, heat maps, time sequence diagrams? Any programming language..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1721317585.631879",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1H1Kh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! Does GT currently support visualizations like call graphs (I'm sure), automatically extracting from code visualizations like state machines, heat maps, time sequence diagrams? Any programming language.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1721320536.722489",
        "client_msg_id": "3FE7C321-F2BC-4DE5-AE3C-D313EBB7C0C5",
        "text": "The idea is to not restrict the specific visualizations, but rather to enable one to construct custom visualizations of arbitrary input data. It is many times more valuable and cheaper to build custom visualizations than generic ones. There patterns language and the components are reusable, but the specific visual representations are less interesting for reuse.\n\nThe question about programming languages is interesting. We can think of it as “are there parsers and semantic importers for language X”. But we can also think of it as “how do we build a parser and an importer for language X”. The former will lead to a library of parsers (like that built around ANTLr). The latter will lead to a dedicated environment for building parsers and importers faster. In GT we show that it is possible to have both, but really the interesting one is how to adjust to a language that you might not know.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1721317585.631879",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5veCu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The idea is to not restrict the specific visualizations, but rather to enable one to construct custom visualizations of arbitrary input data. It is many times more valuable and cheaper to build custom visualizations than generic ones. There patterns language and the components are reusable, but the specific visual representations are less interesting for reuse.\n\nThe question about programming languages is interesting. We can think of it as “are there parsers and semantic importers for language X”. But we can also think of it as “how do we build a parser and an importer for language X”. The former will lead to a library of parsers (like that built around ANTLr). The latter will lead to a dedicated environment for building parsers and importers faster. In GT we show that it is possible to have both, but really the interesting one is how to adjust to a language that you might not know."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1721331261.618579",
        "client_msg_id": "35a86adf-0663-4dcc-b8a3-23dafb6b6ee7",
        "text": "The path depends on the ongoing context as well. What specific hardware tech is available and feasible. What ideas click and get funding, or get picked up by a business that happens to take off due to market factors.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1721279487.692989",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ciD8B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The path depends on the ongoing context as well. What specific hardware tech is available and feasible. What ideas click and get funding, or get picked up by a business that happens to take off due to market factors."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1721331618.212089",
        "client_msg_id": "4b09c38c-998b-4e47-a722-989dacd4d6ca",
        "text": "&gt; Think of it as a game engine like Godot or Unity. In them, you can write normal text code, but you can also create and edit scenes. These scenes are stored in their own files, have specialized editors that know how to edit them, and have no code representation. Because why? The visual way _in this particular case_ is better.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1721317807.883659",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OKu13",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Think of it as a game engine like Godot or Unity. In them, you can write normal text code, but you can also create and edit scenes. These scenes are stored in their own files, have specialized editors that know how to edit them, and have no code representation. Because why? The visual way "
                            },
                            {
                                "type": "text",
                                "text": "in this particular case",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is better."
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "text": "“Level 3”, when it’s not code & diagram as universal parallel representations but domain-specific _visual syntaxes_ (as <@UCYF51KT2> says he wants) has been explored a number of times. Here is the relevant section from <https:\/\/arxiv.org\/pdf\/2303.06777>, with some hopefully helpful citations.",
        "files": [
            {
                "id": "F07D2AT8ASZ",
                "mode": "hidden_by_limit"
            },
            {
                "id": "F07DU1RDQMN",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UBKNXPBAB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+1PyW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "“Level 3”, when it’s not code & diagram as universal parallel representations but domain-specific "
                            },
                            {
                                "type": "text",
                                "text": "visual syntaxes",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (as "
                            },
                            {
                                "type": "user",
                                "user_id": "UCYF51KT2"
                            },
                            {
                                "type": "text",
                                "text": " says he wants) has been explored a number of times. Here is the relevant section from "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/arxiv.org\/pdf\/2303.06777"
                            },
                            {
                                "type": "text",
                                "text": ", with some hopefully helpful citations."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1721368073.990779",
        "edited": {
            "user": "UBKNXPBAB",
            "ts": "1721368102.000000"
        },
        "client_msg_id": "dd5c8ee7-8f04-4f43-be4d-09b09d8fe3df",
        "thread_ts": "1721317807.883659",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UF6RLAL7J",
                    "U02E4DAQGSZ",
                    "U0378MDUG1Y"
                ],
                "count": 3
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UCUSW7WVD",
                    "U05UK5T7LPP",
                    "U02QC0PPER3"
                ],
                "count": 4
            }
        ]
    }
]