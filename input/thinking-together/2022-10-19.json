[
    {
        "user": "U03LT7540HZ",
        "type": "message",
        "ts": "1666209854.105209",
        "client_msg_id": "479d7084-73b4-4520-b87d-6dddb35f4926",
        "text": "where do existing app builder \/ low-code tools fit into this puzzle today?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "754abc97c5ce",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-06-22\/3731055996048_754abc97c5ce87f6c99f_72.jpg",
            "first_name": "Tony",
            "real_name": "Tony Worm",
            "display_name": "Tony Worm",
            "team": "T5TCAFTA9",
            "name": "tony066",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1665920379.333909",
        "parent_user_id": "U03GBV8B58V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yvO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "where do existing app builder \/ low-code tools fit into this puzzle today?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03GBV8B58V",
        "type": "message",
        "ts": "1666243399.104609",
        "client_msg_id": "72d8753d-ea37-4166-b3f0-98aad37072b1",
        "text": "I assume that by app builder you mean no-code in general. I think the main problem with no-code is that it treats code as secondary. No-code tools invent their own bespoke data-formats\/walled gardens in which the data you edit while you work is \"their data\" and not code that you own. You're editing abstractions they invented, e.g. here's a tree of component-ish things that our visual no-code editor understands. It's from those trees that actual production code is derived\/generated. In other words, code isn't a first-class data structure or editing capability in a no-code tool, it's more of an export\/build step.\n\nLow-code adds a traditional textual code editor to the mix, but that text editor still doesn't treat code and its dynamic output as data -- data that you can have an immediate connection to via direct manipulation.\n\nHope that makes sense? It's like existing tooling categories side-step the actual dynamic materiality of code (that code itself is both data, and data that can manipulate\/produce other data dynamically).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3e8345518ba8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-05-21\/3558879757875_3e8345518ba82b825c6d_72.jpg",
            "first_name": "Jim",
            "real_name": "Jim Meyer",
            "display_name": "Jim Meyer",
            "team": "T5TCAFTA9",
            "name": "jimkyndemeyer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1665920379.333909",
        "parent_user_id": "U03GBV8B58V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gDM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I assume that by app builder you mean no-code in general. I think the main problem with no-code is that it treats code as secondary. No-code tools invent their own bespoke data-formats\/walled gardens in which the data you edit while you work is \"their data\" and not code that you own. You're editing abstractions they invented, e.g. here's a tree of component-ish things that our visual no-code editor understands. It's from those trees that actual production code is derived\/generated. In other words, code isn't a first-class data structure or editing capability in a no-code tool, it's more of an export\/build step.\n\nLow-code adds a traditional textual code editor to the mix, but that text editor still doesn't treat code and its dynamic output as data -- data that you can have an immediate connection to via direct manipulation.\n\nHope that makes sense? It's like existing tooling categories side-step the actual dynamic materiality of code (that code itself is both data, and data that can manipulate\/produce other data dynamically)."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]