[
    {
        "user": "UK22Z72L8",
        "type": "message",
        "ts": "1578407295.183800",
        "client_msg_id": "19ff429a-8eaf-4849-b34b-f36ff983e96c",
        "text": "I have this idea that blame works like electricity and you can imagine flows of small particles of blame. Given “”let the technologist decompose and solve our problems” we might be observing a “lightening conductor”… ?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g19534d8a577",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b19534d8a57758546bdc252eefecc432.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Dafydd",
            "real_name": "Dafydd Rees",
            "display_name": "daf",
            "team": "T5TCAFTA9",
            "name": "daf",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567003312.002200",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X6xj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have this idea that blame works like electricity and you can imagine flows of small particles of blame. Given “”let the technologist decompose and solve our problems” we might be observing a “lightening conductor”… ?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "nerd_face",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1578422224.011200",
        "client_msg_id": "6b63839d-bbde-402c-999e-fde18e72587e",
        "text": "Looking for terminology \/ what terms to google for:\n\nIn some languages or libraries you can run a loop or closure over an array or list in parallel, just by specifying parallel execution (sure, some preconditions must me met for that to work). Some libraries have sophisticated ways of how to distribute execution over available cores, either with some heuristics or by giving you parameters to configure that.\n\nIf I want to do that for hierarchical data structures, are there any well-known algorithms that help with distributing the load across cores based on the run-time structure of the tree data structure?\n\nI think map\/reduce would be an example…? If so, are there other ones?\nAlso interested (but not exclusively) in any connections to math. I think I'm talking about applicative functors here…?\n\nI'm basically looking for the parts of the algorithm that takes care of breaking the problem into parts and then later on combining it back together into a single result. Often you end up with a tree-like structure, but it comes from the algorithm, but what if the source data structure already has a hierarchical structure?\n\n*_waves hands frantically to compensate for insufficient description_*",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578422224.011200",
        "reply_count": 4,
        "reply_users_count": 4,
        "latest_reply": "1578723152.067100",
        "reply_users": [
            "URC5MU2AZ",
            "UCUSW7WVD",
            "UEQ6M68H0",
            "U85HCL7JP"
        ],
        "replies": [
            {
                "user": "URC5MU2AZ",
                "ts": "1578428826.011300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1578442055.012000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1578469576.035400"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1578723152.067100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yORz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looking for terminology \/ what terms to google for:\n\nIn some languages or libraries you can run a loop or closure over an array or list in parallel, just by specifying parallel execution (sure, some preconditions must me met for that to work). Some libraries have sophisticated ways of how to distribute execution over available cores, either with some heuristics or by giving you parameters to configure that.\n\nIf I want to do that for hierarchical data structures, are there any well-known algorithms that help with distributing the load across cores based on the run-time structure of the tree data structure?\n\nI think map\/reduce would be an example…? If so, are there other ones?\nAlso interested (but not exclusively) in any connections to math. I think I'm talking about applicative functors here…?\n\nI'm basically looking for the parts of the algorithm that takes care of breaking the problem into parts and then later on combining it back together into a single result. Often you end up with a tree-like structure, but it comes from the algorithm, but what if the source data structure already has a hierarchical structure?\n\n*"
                            },
                            {
                                "type": "text",
                                "text": "waves hands frantically to compensate for insufficient description",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "*"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Here's Odersky et al's paper on how they did it for Scala's parallel collections:",
        "files": [
            {
                "id": "FSCD7FXFW",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "URC5MU2AZ",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7s9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's Odersky et al's paper on how they did it for Scala's parallel collections:"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1578428826.011300",
        "client_msg_id": "1089bd92-1d78-4f77-ae92-fb6b34a6c458",
        "thread_ts": "1578422224.011200",
        "parent_user_id": "U5STGTB3J",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1578442055.012000",
        "client_msg_id": "72cb7178-eff3-4c74-8591-b925b189e8a2",
        "text": "One key term is \"work-stealing\".\n\n<https:\/\/en.wikipedia.org\/wiki\/Work_stealing>\n\nHah, and the Scala paper above mentions it :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578422224.011200",
        "parent_user_id": "U5STGTB3J",
        "attachments": [
            {
                "title": "Work stealing",
                "title_link": "https:\/\/en.wikipedia.org\/wiki\/Work_stealing",
                "from_url": "https:\/\/en.wikipedia.org\/wiki\/Work_stealing",
                "author_name": "Wikipedia",
                "author_link": "https:\/\/en.wikipedia.org\/",
                "text": "In parallel computing, work stealing is a scheduling strategy for multithreaded computer programs. It solves the problem of executing a dynamically multithreaded computation, one that can \"spawn\" new threads of execution, on a statically multithreaded computer, with a fixed number of processors (or cores). It does so efficiently both in terms of execution time, memory usage, and inter-processor communication.\nIn a work stealing scheduler, each processor in a computer system has a queue of work items (computational tasks, threads) to perform. Each work item consists of a series of instructions, to be executed sequentially, but in the course of its execution, a work item may also spawn new work items that can feasibly be executed in parallel with its other work. These new items are initially put on the queue of the processor executing the work item. When a processor runs out of work, it looks at the queues of other processors and \"steals\" their work items. In effect, work stealing distributes the scheduling work over idle processors, and as long as all processors have work to do, no scheduling overhead occurs.Work stealing contrasts with work sharing, another popular scheduling approach for dynamic multithreading, where each work item is scheduled onto a processor when it is spawned. Compared to this approach, work stealing reduces the amount of process migration between processors, because no such migration occurs when all processors have work to do.The idea of work stealing goes back to the implementation of the Multilisp programming language and work on parallel functional programming languages in the 1980s. It is employed in the scheduler for the Cilk programming language, the Java fork\/join framework, and the .NET Task Parallel Library.",
                "fallback": "wikipedia: Work stealing",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/wikipedia.png",
                "id": 1,
                "original_url": "https:\/\/en.wikipedia.org\/wiki\/Work_stealing"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2KcwT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One key term is \"work-stealing\".\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Work_stealing"
                            },
                            {
                                "type": "text",
                                "text": "\n\nHah, and the Scala paper above mentions it "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "UHWC9PXBL",
        "thread_ts": "1578232962.165600",
        "root": {
            "user": "U5STGTB3J",
            "type": "message",
            "ts": "1578232962.165600",
            "client_msg_id": "A86FF516-A9E0-4FD7-9AA1-FC0ABBDE3E18",
            "text": "I’ve just finished Will Wright’s Masterclass course about game design. I almost didn’t look at it because I’m not working on games. Thankfully, I was still interested enough to take a look, and I recommend it to anyone who’s designing systems of any kind.\n<https:\/\/www.masterclass.com\/classes\/will-wright-teaches-game-design-and-theory|https:\/\/www.masterclass.com\/classes\/will-wright-teaches-game-design-and-theory>\n\nWill Wright is known for games like Sim City, The Sims, and Spore — all very complex open-ended simulations. The knowledge he shares about designing these simulations are super valuable, not just for games. It’s the most compelling course about how to design systems I am aware of.\n\nNow, Masterclass has a pretty high paywall, so I was looking for material on the web from him that comes close, and I found this YouTube video: <https:\/\/m.youtube.com\/watch?v=CdgQyq3hEPo|https:\/\/m.youtube.com\/watch?v=CdgQyq3hEPo>\n\nIt’s much older from 2003 but clearly a lot of his ideas from then made it into the Masterclass. Don’t skip the Q&amp;A, lots of interesting stuff in there too.\n\nThink of his Masterclass as a longer, refined, more detailed course with exceptional production quality. If this sounds like an ad, it probably is. I’m not affiliated with them at all and don’t get anything from promoting them. I’m just deeply impressed with the quality (which also applies to other classes I’ve watched). If you end up watching it, please let me know what you think.",
            "team": "T5TCAFTA9",
            "thread_ts": "1578232962.165600",
            "reply_count": 9,
            "reply_users_count": 5,
            "latest_reply": "1578503283.063300",
            "reply_users": [
                "UHZUS56SV",
                "UHWC9PXBL",
                "UC2A2ARPT",
                "UC6997THT",
                "U5STGTB3J"
            ],
            "replies": [
                {
                    "user": "UHZUS56SV",
                    "ts": "1578244669.166200"
                },
                {
                    "user": "UHWC9PXBL",
                    "ts": "1578450076.013800"
                },
                {
                    "user": "UC2A2ARPT",
                    "ts": "1578454898.014700"
                },
                {
                    "user": "UC6997THT",
                    "ts": "1578461797.014900"
                },
                {
                    "user": "U5STGTB3J",
                    "ts": "1578469654.036000"
                },
                {
                    "user": "UC6997THT",
                    "ts": "1578470614.036200"
                },
                {
                    "user": "U5STGTB3J",
                    "ts": "1578492428.048700"
                },
                {
                    "user": "UC6997THT",
                    "ts": "1578499033.049200"
                },
                {
                    "user": "U5STGTB3J",
                    "ts": "1578503283.063300"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "attachments": [
                {
                    "service_name": "MasterClass",
                    "title": "MasterClass | Will Wright Teaches Game Design and Theory",
                    "title_link": "https:\/\/www.masterclass.com\/classes\/will-wright-teaches-game-design-and-theory",
                    "text": "The Sims creator Will Wright teaches you how to design engaging, empowering games in his first-ever MasterClass.",
                    "fallback": "MasterClass: MasterClass | Will Wright Teaches Game Design and Theory",
                    "image_url": "https:\/\/d3e9iqx18mbphw.cloudfront.net\/images\/2317\/original\/1545252289-FB_Image.jpg?1545252289",
                    "from_url": "https:\/\/www.masterclass.com\/classes\/will-wright-teaches-game-design-and-theory",
                    "image_width": 476,
                    "image_height": 250,
                    "image_bytes": 141047,
                    "service_icon": "https:\/\/www.masterclass.com\/favicon.ico",
                    "id": 1,
                    "original_url": "https:\/\/www.masterclass.com\/classes\/will-wright-teaches-game-design-and-theory"
                },
                {
                    "service_name": "YouTube",
                    "service_url": "https:\/\/www.youtube.com\/",
                    "title": "Lessons in Game Design, lecture by Will Wright",
                    "title_link": "https:\/\/m.youtube.com\/watch?v=CdgQyq3hEPo",
                    "author_name": "Computer History Museum",
                    "author_link": "https:\/\/www.youtube.com\/user\/ComputerHistory",
                    "thumb_url": "https:\/\/i.ytimg.com\/vi\/CdgQyq3hEPo\/hqdefault.jpg",
                    "thumb_width": 480,
                    "thumb_height": 360,
                    "fallback": "YouTube Video: Lessons in Game Design, lecture by Will Wright",
                    "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/CdgQyq3hEPo?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                    "video_html_width": 400,
                    "video_html_height": 300,
                    "from_url": "https:\/\/m.youtube.com\/watch?v=CdgQyq3hEPo",
                    "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                    "id": 2,
                    "original_url": "https:\/\/m.youtube.com\/watch?v=CdgQyq3hEPo"
                }
            ],
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "k\/b",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "I’ve just finished Will Wright’s Masterclass course about game design. I almost didn’t look at it because I’m not working on games. Thankfully, I was still interested enough to take a look, and I recommend it to anyone who’s designing systems of any kind.\n"
                                },
                                {
                                    "type": "link",
                                    "url": "https:\/\/www.masterclass.com\/classes\/will-wright-teaches-game-design-and-theory",
                                    "text": "https:\/\/www.masterclass.com\/classes\/will-wright-teaches-game-design-and-theory"
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "Will Wright is known for games like Sim City, The Sims, and Spore — all very complex open-ended simulations. The knowledge he shares about designing these simulations are super valuable, not just for games. It’s the most compelling course about how to design systems I am aware of."
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "Now, Masterclass has a pretty high paywall, so I was looking for material on the web from him that comes close, and I found this YouTube video: "
                                },
                                {
                                    "type": "link",
                                    "url": "https:\/\/m.youtube.com\/watch?v=CdgQyq3hEPo",
                                    "text": "https:\/\/m.youtube.com\/watch?v=CdgQyq3hEPo"
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "It’s much older from 2003 but clearly a lot of his ideas from then made it into the Masterclass. Don’t skip the Q&A, lots of interesting stuff in there too."
                                },
                                {
                                    "type": "text",
                                    "text": "\n\n"
                                },
                                {
                                    "type": "text",
                                    "text": "Think of his Masterclass as a longer, refined, more detailed course with exceptional production quality. If this sounds like an ad, it probably is. I’m not affiliated with them at all and don’t get anything from promoting them. I’m just deeply impressed with the quality (which also applies to other classes I’ve watched). If you end up watching it, please let me know what you think."
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1578450076.013800",
        "client_msg_id": "BC49CDF8-38BF-4E42-8D96-0613AC35D8B5",
        "text": "also highly recommend <https:\/\/youtu.be\/zyVTxGpEO30|https:\/\/youtu.be\/zyVTxGpEO30> for anyone who wants to learn more about using game design to help them rethink interactive applications",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Practical Creativity",
                "title_link": "https:\/\/youtu.be\/zyVTxGpEO30",
                "author_name": "GDC",
                "author_link": "https:\/\/www.youtube.com\/channel\/UC0JB7TSe49lg56u6qH8y_MQ",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/zyVTxGpEO30\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Practical Creativity",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/zyVTxGpEO30?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/zyVTxGpEO30",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/zyVTxGpEO30"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XgS=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "also highly recommend "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/zyVTxGpEO30",
                                "text": "https:\/\/youtu.be\/zyVTxGpEO30"
                            },
                            {
                                "type": "text",
                                "text": " for anyone who wants to learn more about using game design to help them rethink interactive applications"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1578454898.014700",
        "client_msg_id": "714582C9-460B-4169-9480-782EE6B82395",
        "text": "I'm very happy that GDC are putting all their talks up on YouTube now.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578232962.165600",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cPFY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm very happy that GDC are putting all their talks up on YouTube now."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1578461797.014900",
        "client_msg_id": "b074792c-def5-4fc2-b8c5-c7ee27e07d42",
        "text": "It does make me wonder, what's the point of having these talks at a conference for $2000 vs just someone organizing putting the talks directly online\n\nI'm not saying there is no point in the conference itself. I go and meet people and friends and I will be at GDC this year. But, about 4 years ago I stopped going to talks because 3 out of 4 are horrible and they will all be online where I can more easily put them on 1.5x speed, switch to something else if they suck, and re-reference and share them if they're great.\n\nWhich brings up the question, why have the talks at a conferiecne in a room with 50 to 300 people in the first place vs just direct to youtube with maybe some website \"call for youtube talks on topic X by date Y\"\n\nIs this something left over from pre-youtube days or is there something unique about sitting in front of a lecturer.\n\nIIRC Khan Academy was founded on the idea that lectures (students sitting at a desk taking notes while the teacher talks) is an outdated concept. They argued that those lectures should just be online where students can view\/rewind\/pause\/etc and that time with the teacher should be for asking questions on the material, getting guidence and help.\n\nMaybe that's true or maybe it's not but if it is true then it would seem like conference lectures are mostly the same.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578232962.165600",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OQNmx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It does make me wonder, what's the point of having these talks at a conference for $2000 vs just someone organizing putting the talks directly online\n\nI'm not saying there is no point in the conference itself. I go and meet people and friends and I will be at GDC this year. But, about 4 years ago I stopped going to talks because 3 out of 4 are horrible and they will all be online where I can more easily put them on 1.5x speed, switch to something else if they suck, and re-reference and share them if they're great.\n\nWhich brings up the question, why have the talks at a conferiecne in a room with 50 to 300 people in the first place vs just direct to youtube with maybe some website \"call for youtube talks on topic X by date Y\"\n\nIs this something left over from pre-youtube days or is there something unique about sitting in front of a lecturer.\n\nIIRC Khan Academy was founded on the idea that lectures (students sitting at a desk taking notes while the teacher talks) is an outdated concept. They argued that those lectures should just be online where students can view\/rewind\/pause\/etc and that time with the teacher should be for asking questions on the material, getting guidence and help.\n\nMaybe that's true or maybe it's not but if it is true then it would seem like conference lectures are mostly the same."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1578469576.035400",
        "client_msg_id": "053750a5-c915-4bbe-871a-01602c4f67c8",
        "text": "Tucker Taft's Parasail language has a very clever automatic parallel loop construct. The whole language was designed from the start to make it easy and natural to do things in parallel. It looks like a normal language, but its automatica parallelization is so clever you barely notice it. And for those doing super big data, there is Cray's Chapel which allows you to not only spread workload across cores but also across machines, so a 2D matrix of computing engines can be harnesses. that is for those monster types of jobs that i know nothing about except that is the kind of tool one reaches for in exascale computing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578422224.011200",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FI2vn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tucker Taft's Parasail language has a very clever automatic parallel loop construct. The whole language was designed from the start to make it easy and natural to do things in parallel. It looks like a normal language, but its automatica parallelization is so clever you barely notice it. And for those doing super big data, there is Cray's Chapel which allows you to not only spread workload across cores but also across machines, so a 2D matrix of computing engines can be harnesses. that is for those monster types of jobs that i know nothing about except that is the kind of tool one reaches for in exascale computing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1578469654.036000",
        "client_msg_id": "E67C1872-5298-4E2A-B959-D3D52B76B54C",
        "text": "<@UC6997THT> Seems like most big conferences have at least two audiences: the already well-connected community, who ignore the talks and it’s basically just a big family gathering for them.\nBut then there are also those who come for the first time, not as well connected (yet), perhaps wanting to become part of that community of regulars. For those these talks are often a good place to go to make those new connections — they give you lots of material to talk about in the breaks with the other strangers there.\n\nA good collection of talks are also an instrument to convince people to come there at all — some people need a reason for themselves to overcome inertia of just staying home (especially if they aren’t well connected yet) and for their companies to pay for it because of the “valuable knowledge sharing in the talks track”.\n\nSome conferences also have a lot of a third type of audience: the industry representatives who seldom have something substantial to contribute and are basically just there to find customers and sell you stuff. They usually serve the function of paying for most of it and in exchange they are allowed to be annoying. Sort of like physical ad banners plastered all over the valuable content. ;-)\n\nI’ve been to GDC several times, was involved in organizing WWDC and Tech Talks for Apple, and I’ve been experimenting in the small with new event formats (mostly retreats and “learning sprints”) for those who don’t care about talks and find that an antiquated concept — it was surprising to learn how important these lectures still are, for all the wrong reasons.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578232962.165600",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aGwa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": " Seems like most big conferences have at least two audiences: the already well-connected community, who ignore the talks and it’s basically just a big family gathering for them."
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "But then there are also those who come for the first time, not as well connected (yet), perhaps wanting to become part of that community of regulars. For those these talks are often a good place to go to make those new connections — they give you lots of material to talk about in the breaks with the other strangers there."
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "A good collection of talks are also an instrument to convince people to come there at all — some people need a reason for themselves to overcome inertia of just staying home (especially if they aren’t well connected yet) and for their companies to pay for it because of the “valuable knowledge sharing in the talks track”."
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Some conferences also have a lot of a third type of audience: the industry representatives who seldom have something substantial to contribute and are basically just there to find customers and sell you stuff. They usually serve the function of paying for most of it and in exchange they are allowed to be annoying. Sort of like physical ad banners plastered all over the valuable content. ;-)\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "I’ve been to GDC several times, was involved in organizing WWDC and Tech Talks for Apple, and I’ve been experimenting in the small with new event formats (mostly retreats and “learning sprints”) for those who don’t care about talks and find that an antiquated concept — it was surprising to learn how important these lectures still are, for all the wrong reasons."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]