[
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1588235865.345300",
        "client_msg_id": "844b8d27-e5c1-444f-9cdb-9af253eb1d9f",
        "text": "The Iron Man interfaces are wonderfully entertaining pieces of graphic art. There are just a few people in hollywood who know how to make those things. They are mixture of 3D and 2D animations, always using glowing lines and very few colors so it looks terrific. But as a user interface it would be horrible because all the buttons look alike, and the font sizes are microscopic. So although they are sexy from a distance, if you had one in front of you, it would be confusing, hard to use. A lot of music software is enraptured with sub-6pt fonts, and microscopic icons. So i would be wary of chasing Hollywood's ideas.  Remember Star Trek next generation, with their buttonless screens that would be sure to create carpal tunnel syndrome in record time? A lot of the futuristic stuff is unergonomic, and possibly harmful to the human body, and presumes a magical artificial intelligence that just graduated from CalArts and spent 1000 hours making a screen that appears in the movie for 2 minutes. A 100 million motion picture is a time compression device, where 50,000 man hours go into making something that lasts 2, so a 25,000 : 1 ratio there. By all means see what you can come up with, but don't hold yourself to unattainable graphic standards that are the work of genius graphic designers who are at the top of a very specialized field (i.e. fake UI's for futuristic films). Hollywood has a long history of faking the future; Irwin Allen was a famous TV producer who loved banks of flashing lights and nutty rubber monsters. I think you are better off studying from the great masters of the Renaissance, who used proportions to draw everything, and also the great book \"Designing for people\" by Henry Dreyfuss, the greatest industrial designer in the history of the world. Everyone who does any design work should know that man's output because he was so great. He didn't do computer interfaces, but he had a systematic way of attacking every problem that resulted in an optimal final design. It is his methodology that is still useful today.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R6G\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Iron Man interfaces are wonderfully entertaining pieces of graphic art. There are just a few people in hollywood who know how to make those things. They are mixture of 3D and 2D animations, always using glowing lines and very few colors so it looks terrific. But as a user interface it would be horrible because all the buttons look alike, and the font sizes are microscopic. So although they are sexy from a distance, if you had one in front of you, it would be confusing, hard to use. A lot of music software is enraptured with sub-6pt fonts, and microscopic icons. So i would be wary of chasing Hollywood's ideas.  Remember Star Trek next generation, with their buttonless screens that would be sure to create carpal tunnel syndrome in record time? A lot of the futuristic stuff is unergonomic, and possibly harmful to the human body, and presumes a magical artificial intelligence that just graduated from CalArts and spent 1000 hours making a screen that appears in the movie for 2 minutes. A 100 million motion picture is a time compression device, where 50,000 man hours go into making something that lasts 2, so a 25,000 : 1 ratio there. By all means see what you can come up with, but don't hold yourself to unattainable graphic standards that are the work of genius graphic designers who are at the top of a very specialized field (i.e. fake UI's for futuristic films). Hollywood has a long history of faking the future; Irwin Allen was a famous TV producer who loved banks of flashing lights and nutty rubber monsters. I think you are better off studying from the great masters of the Renaissance, who used proportions to draw everything, and also the great book \"Designing for people\" by Henry Dreyfuss, the greatest industrial designer in the history of the world. Everyone who does any design work should know that man's output because he was so great. He didn't do computer interfaces, but he had a systematic way of attacking every problem that resulted in an optimal final design. It is his methodology that is still useful today."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1588239050.350000",
        "client_msg_id": "2F17F327-EB23-421A-BA68-0BA3E8A7C4D0",
        "text": "I come to realize again and again that great design comes from building something over and over again, exploring different options and putting in what you learned from the last time you built it. Great designers build lots of prototypes to figure out what works and what doesn’t. \n\nIn software engineering we often see design more as planning, as that one time we think a little about architecture and then we just have to implement it. Sometimes that works and it good enough. But if you really want to build something great, you’ll likely have to build it several times.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zVGv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I come to realize again and again that great design comes from building something over and over again, exploring different options and putting in what you learned from the last time you built it. Great designers build lots of prototypes to figure out what works and what doesn’t. \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "In software engineering we often see design more as planning, as that one time we think a little about architecture and then we just have to implement it. Sometimes that works and it good enough. But if you really want to build something great, you’ll likely have to build it several times."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1588239733.357700",
        "client_msg_id": "153022A2-0939-491B-AFE2-1D5AAEFA71EC",
        "text": "Tying this back to the original question: I’m most familiar with Apple’s explorations of layout systems over the last few decades. They went from a very simple to understand and just powerful enough “Struts and Springs” model in Cocoa to a somewhat more refined version of that as part of Core Animation, then a constraint solver based “Auto Layout” model plus some layout-specific components like UITableView and UICollectionView, and are now exploring some new ideas with SwiftUI.\n\nGiven the way Apple _designs_ their APIs, and their experience having built several widely used layout systems over the years, there should be some good material to be inspired by.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3ZA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tying this back to the original question: I’m most familiar with Apple’s explorations of layout systems over the last few decades. They went from a very simple to understand and just powerful enough “Struts and Springs” model in Cocoa to a somewhat more refined version of that as part of Core Animation, then a constraint solver based “Auto Layout” model plus some layout-specific components like UITableView and UICollectionView, and are now exploring some new ideas with SwiftUI.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Given the way Apple "
                            },
                            {
                                "type": "text",
                                "text": "designs",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " their APIs, and their experience having built several widely used layout systems over the years, there should be some good material to be inspired by."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0119RRB1MK",
        "type": "message",
        "ts": "1588247920.358200",
        "client_msg_id": "bee6e4a7-6166-4f32-bb02-03cf768a9b8b",
        "text": "I have an open source library for plotting widgets on the screen according to inequalities\n<https:\/\/github.com\/samsquire\/inequality-solver>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5231a4183b4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5231a4183b420b2f43a0acdf4330550d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "Samuel Squire",
            "display_name": "Samuel Squire",
            "team": "T5TCAFTA9",
            "name": "sam717",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "attachments": [
            {
                "fallback": "samsquire\/inequality-solver",
                "text": "simple inequality solver",
                "title": "samsquire\/inequality-solver",
                "footer": "<https:\/\/github.com\/samsquire\/inequality-solver|samsquire\/inequality-solver>",
                "id": 1,
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "ts": 1587459263,
                "color": "24292f",
                "fields": [
                    {
                        "title": "Language",
                        "value": "JavaScript",
                        "short": true
                    },
                    {
                        "title": "Last updated",
                        "value": "9 days ago",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text",
                    "fields"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https:\/\/github.com\/samsquire\/inequality-solver",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gUpsw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have an open source library for plotting widgets on the screen according to inequalities\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/samsquire\/inequality-solver"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U010RH58PL7",
        "type": "message",
        "ts": "1588255549.358500",
        "client_msg_id": "10025790-e8db-43fe-bcd7-f6c2da64ba6a",
        "text": "Please do share it! My substack is free - it's just a nice way to manage an email list, and add payment in later if and when it feels right.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e4ffbe395911",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-02\/1046341213600_e4ffbe395911c8d59155_72.jpg",
            "first_name": "",
            "real_name": "Rob Cobb",
            "display_name": "Rob Cobb",
            "team": "T5TCAFTA9",
            "name": "rwcobbjr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588031436.305800",
        "parent_user_id": "UR482RFPY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lell",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Please do share it! My substack is free - it's just a nice way to manage an email list, and add payment in later if and when it feels right."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UR482RFPY"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UKDM3GLAJ",
        "type": "message",
        "ts": "1588258475.359200",
        "client_msg_id": "b6275149-b00f-4a80-91d7-02a48ae1ec71",
        "text": "&gt; can you do away with the notion of parent-child?\nThis is the kind of outside-the-box thinking I was looking for (pun-intended). I’m not sure. I think containers are inherent, but maybe a model where a container is just a set of constraints over some children with no graphical presence itself would be possible. This deserves more thought.\n&gt; You don’t know who is in charge: the container or the content.\nThis is very much the issue I’m running into. I keep thinking of these fairly naive systems where its either parent-driven or child-driven, or possibly there is a point in the tree where it switches, but I don’t know how to rectify them into something consistent and intuitive. I guess that’s why constraint-layout is a thing.\n<@UEQ6M68H0> Great points. I think there’s an element of me being suckered into thinking these interfaces would be more useful than they really would be (and I will definitely be reading Designing For People). Part of my goal, though, is to just avoid baking in too many assumptions about what makes for a useful\/ergonomic\/good UI. Which is perhaps itself naive.\n&gt; great design comes from building something over and over again\nAbsolutely. Part of my goal with this system is for things to get forked and redesigned and reshared by end users over and over again. I think even a great designer can’t anticipate an individual’s idiosyncracies as well as the individual can tweak and reshape something to fit their own brain.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "34e7a55348e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-01-04\/893378739792_34e7a55348e8c86c1901_72.jpg",
            "first_name": "",
            "real_name": "Jared Windover",
            "display_name": "Jared Windover",
            "team": "T5TCAFTA9",
            "name": "jaredwindover",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "El3iI",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "can you do away with the notion of parent-child?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is the kind of outside-the-box thinking I was looking for (pun-intended). I’m not sure. I think containers are inherent, but maybe a model where a container is just a set of constraints over some children with no graphical presence itself would be possible. This deserves more thought.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You don’t know who is in charge: the container or the content."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is very much the issue I’m running into. I keep thinking of these fairly naive systems where its either parent-driven or child-driven, or possibly there is a point in the tree where it switches, but I don’t know how to rectify them into something consistent and intuitive. I guess that’s why constraint-layout is a thing.\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " Great points. I think there’s an element of me being suckered into thinking these interfaces would be more useful than they really would be (and I will definitely be reading Designing For People). Part of my goal, though, is to just avoid baking in too many assumptions about what makes for a useful\/ergonomic\/good UI. Which is perhaps itself naive.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "great design comes from building something over and over again"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Absolutely. Part of my goal with this system is for things to get forked and redesigned and reshared by end users over and over again. I think even a great designer can’t anticipate an individual’s idiosyncracies as well as the individual can tweak and reshape something to fit their own brain."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1588262230.361000",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1588262268.000000"
        },
        "client_msg_id": "2fa6c2df-b7bc-4433-87f1-94660d187c8e",
        "text": "<@UD6EXQVM0> Agreed — this survey question allowed people to make up to 12 selections. Not perfect, but better than \"pick your 1 favourite\".\n\nAs for how you would have missed the survey... It ran in January, and I posted about it in <#C5T9GPWFL|thinking-together> something like 3 or 4 times, and mentioned it in the podcast. And it was mentioned in the newsletter at least once, maybe twice? I think you would have been around then, since we did a meetup in Jan IIRC. So.. who knows!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588014850.297100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GBm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UD6EXQVM0"
                            },
                            {
                                "type": "text",
                                "text": " Agreed — this survey question allowed people to make up to 12 selections. Not perfect, but better than \"pick your 1 favourite\".\n\nAs for how you would have missed the survey... It ran in January, and I posted about it in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": " something like 3 or 4 times, and mentioned it in the podcast. And it was mentioned in the newsletter at least once, maybe twice? I think you would have been around then, since we did a meetup in Jan IIRC. So.. who knows!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1588262541.361600",
        "edited": {
            "user": "UE0ETTCG7",
            "ts": "1588329279.000000"
        },
        "client_msg_id": "5742d01d-8b8c-4d91-bc0d-c114bac60278",
        "text": "Recently there's been some discussion about how people mainly use spreadsheets for making lists (e.g., according to <@UEBG0NPDK> and <@U6KQ2S410>, most users have never even made a formula). If that's true, than what is the state of the art for end-user programming? Does the 1% of users that have created a formula still trump everything else? Or does that mean there's another model that we should consider more successful? And even if the spreadsheet is still the most successful model, what's the second most successful? Because the gap between the first and the second is in reality much smaller than many of us assumed.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "reply_count": 30,
        "reply_users_count": 13,
        "latest_reply": "1589175239.318700",
        "reply_users": [
            "UEBG0NPDK",
            "UC2A2ARPT",
            "UBN9AFS0N",
            "UE0ETTCG7",
            "U6KQ2S410",
            "U010SQSJGLS",
            "UCUSW7WVD",
            "ULM3U6275",
            "UMH5FAW2Y",
            "UKDM3GLAJ",
            "UA14TGLTC",
            "UEP7RL0HX",
            "UC6997THT"
        ],
        "replies": [
            {
                "user": "UEBG0NPDK",
                "ts": "1588262900.361800"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1588262929.362100"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1588263041.362400"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1588263132.362600"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1588263216.362800"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1588263514.363000"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1588263551.363200"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1588263630.363400"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1588263931.363800"
            },
            {
                "user": "U6KQ2S410",
                "ts": "1588264380.365700"
            },
            {
                "user": "U6KQ2S410",
                "ts": "1588264640.366000"
            },
            {
                "user": "U010SQSJGLS",
                "ts": "1588265695.366200"
            },
            {
                "user": "U010SQSJGLS",
                "ts": "1588265731.366400"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1588265874.366600"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1588265910.366800"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1588267816.367400"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1588268998.367900"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1588269143.368100"
            },
            {
                "user": "ULM3U6275",
                "ts": "1588269867.368400"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1588273688.373900"
            },
            {
                "user": "UMH5FAW2Y",
                "ts": "1588273890.374100"
            },
            {
                "user": "UKDM3GLAJ",
                "ts": "1588275133.374500"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1588279597.375400"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1588280840.375800"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1588307505.387000"
            },
            {
                "user": "UEP7RL0HX",
                "ts": "1588319618.393000"
            },
            {
                "user": "ULM3U6275",
                "ts": "1588386741.412900"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1588405005.413900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1588444835.416100"
            },
            {
                "user": "UC6997THT",
                "ts": "1589175239.318700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eL7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Recently there's been some discussion about how people mainly use spreadsheets for making lists (e.g., according to "
                            },
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": ", most users have never even made a formula). If that's true, than what is the state of the art for end-user programming? Does the 1% of users that have created a formula still trump everything else? Or does that mean there's another model that we should consider more successful? And even if the spreadsheet is still the most successful model, what's the second most successful? Because the gap between the first and the second is in reality much smaller than many of us assumed."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1588262900.361800",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1588262927.000000"
        },
        "client_msg_id": "fa257a97-9c89-4489-9dfb-b019de4adc60",
        "text": "I couldn't get a committed number and 1% sounds low to me. But even if we assume that's correct, that's still on the order of 8 million people, or ~50% the size of professional developers!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/nL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I couldn't get a committed number and 1% sounds low to me. But even if we assume that's correct, that's still on the order of 8 million people, or ~50% the size of professional developers!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7",
                    "U010RH58PL7",
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1588262929.362100",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1588262973.000000"
        },
        "client_msg_id": "981c4d47-9086-4ced-998b-a646f4f9ce84",
        "text": "Depending on how fuzzy you want to make your definition of \"programming\", I'd like to propose one possibility for _most widely-used_, with a degree of dynamism in between making a list and making a formula: turning some text into a hyperlink.\n\nWhich would make the WWW the most successful, which kinda feels right.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6gYTR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Depending on how fuzzy you want to make your definition of \"programming\", I'd like to propose one possibility for "
                            },
                            {
                                "type": "text",
                                "text": "most widely-used",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", with a degree of dynamism in between making a list and making a formula: turning some text into a hyperlink.\n\nWhich would make the WWW the most successful, which kinda feels right."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1588263041.362400",
        "client_msg_id": "a5320f29-69e2-4ad7-af04-04b9fd7387df",
        "text": "For the question to be useful, I think you need an explicit definition of programming, like Ivan said.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Sstk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For the question to be useful, I think you need an explicit definition of programming, like Ivan said."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1588263132.362600",
        "client_msg_id": "34529ee3-a28b-49fb-99f3-c54508c0dfe4",
        "text": "E.g. if we're willing to remove computers from programming, then the most successful version is \"management\" in all its forms, where processes are broken down and procedures are given to individual agents (whether that's in a factory, or at home with the kids + dishes)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6yr3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "E.g. if we're willing to remove computers from programming, then the most successful version is \"management\" in all its forms, where processes are broken down and procedures are given to individual agents (whether that's in a factory, or at home with the kids + dishes)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1588263216.362800",
        "client_msg_id": "d492c972-f058-4a38-9b11-30cd979decef",
        "text": "everyone in the world programs to some degree effectively every day, they just may not do so with a computer",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EYql",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "everyone in the world programs to some degree effectively every day, they just may not do so with a computer"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275",
                    "UU8H7M823",
                    "UMWF81HTP",
                    "UFLN9JFRT",
                    "UAVCC2X70",
                    "UCGAK10LS",
                    "UHWC9PXBL",
                    "U9C92716C"
                ],
                "count": 8
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1588263514.363000",
        "client_msg_id": "9c28912d-4cf4-4426-bf8d-98fd317968a6",
        "text": "I think there may be 3 levels of the most basic kind of programming:\n• automating some repetitive calculation with a formula\n• adding conditionals\n• some sort of iteration (in excel this one is so easy that it may come before conditionals)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CVaA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think there may be 3 levels of the most basic kind of programming:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "automating some repetitive calculation with a formula"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "adding conditionals"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "some sort of iteration (in excel this one is so easy that it may come before conditionals)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1588263551.363200",
        "client_msg_id": "ad8ba23e-d614-4bf3-a74a-621fae7b4334",
        "text": "I consider an \"advanced excel user\" to users who use excel functions and maybe conditionals.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x5Jfi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I consider an \"advanced excel user\" to users who use excel functions and maybe conditionals."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1588263630.363400",
        "client_msg_id": "5b4784f7-10ce-4465-a3b9-d9b9cbfd8554",
        "text": "in some paper someone mentioned that they went through all the emails of some big corporation (I think it was enron) because they were made public in a trial and they searched for attached excel spreadhseets and ran some analysis on those. That may be an \"easy\" way to get some tangible numbers",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iyLP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "in some paper someone mentioned that they went through all the emails of some big corporation (I think it was enron) because they were made public in a trial and they searched for attached excel spreadhseets and ran some analysis on those. That may be an \"easy\" way to get some tangible numbers"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1588263931.363800",
        "client_msg_id": "291cdb95-8610-47fd-a322-b968ddcfee8c",
        "text": "Just adding where I got the 1% number, I wasn't sure if this was supposed to be interpreted literally <https:\/\/futureofcoding.slack.com\/archives\/CLYCGTCPL\/p1573916033110200?thread_ts=1573703587.087300&amp;cid=CLYCGTCPL>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/CLYCGTCPL\/p1573916033110200?thread_ts=1573703587.087300&amp;cid=CLYCGTCPL",
                "fallback": "[November 16th, 2019 6:53 AM] jonathoda: 1% of Excel users ever create a formula ",
                "ts": "1573916033.110200",
                "author_id": "U6KQ2S410",
                "author_subname": "Jonathan Edwards",
                "channel_id": "CLYCGTCPL",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "1% of Excel users ever create a formula ",
                "author_name": "Jonathan Edwards",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/U6KQ2S410",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2017-08-09\/225308926294_e8f4c2151d2b70ebfae3_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/CLYCGTCPL\/p1573916033110200?thread_ts=1573703587.087300&amp;cid=CLYCGTCPL",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6nVJB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just adding where I got the 1% number, I wasn't sure if this was supposed to be interpreted literally "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/CLYCGTCPL\/p1573916033110200?thread_ts=1573703587.087300&cid=CLYCGTCPL"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6KQ2S410",
        "type": "message",
        "ts": "1588264380.365700",
        "client_msg_id": "EA147A0D-4482-42BD-A162-8EF11A67D3D2",
        "text": "Personal communication from someone at MIcrosoft Research ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e8f4c2151d2b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-09\/225308926294_e8f4c2151d2b70ebfae3_72.jpg",
            "first_name": "Jonathan",
            "real_name": "Jonathan Edwards",
            "display_name": "jonathoda",
            "team": "T5TCAFTA9",
            "name": "jonathoda",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j8U1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Personal communication from someone at MIcrosoft Research "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6KQ2S410",
        "type": "message",
        "ts": "1588264640.366000",
        "client_msg_id": "a77b360f-9ffb-4987-8b0c-481da6768084",
        "text": "Don’t sneer at making lists. Look at all the code it takes to build TodoMVC.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e8f4c2151d2b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-09\/225308926294_e8f4c2151d2b70ebfae3_72.jpg",
            "first_name": "Jonathan",
            "real_name": "Jonathan Edwards",
            "display_name": "jonathoda",
            "team": "T5TCAFTA9",
            "name": "jonathoda",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TnE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Don’t sneer at making lists. Look at all the code it takes to build TodoMVC."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "open_mouth",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "point_up",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U010SQSJGLS",
        "type": "message",
        "ts": "1588265695.366200",
        "client_msg_id": "9ba00d51-894b-4e60-babc-bf8b9f9d5bed",
        "text": "The Enron spreadsheet corpus is useful fodder for analysis. But the difficulty is that spreadsheets are used by lots of different people for lots of different things.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge900b2beeb5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e900b2beeb5a6877d191b8d15623671b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Michael Coblenz",
            "display_name": "Michael Coblenz",
            "team": "T5TCAFTA9",
            "name": "mcoblenz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "COYk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Enron spreadsheet corpus is useful fodder for analysis. But the difficulty is that spreadsheets are used by lots of different people for lots of different things."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U010SQSJGLS",
        "type": "message",
        "ts": "1588265731.366400",
        "client_msg_id": "dc835ddb-743e-4081-a8b0-423f7b58fc52",
        "text": "So yes, some are used for making lists, but the beauty of the spreadsheet is the gradual transition from data storage to data organization to computation.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge900b2beeb5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e900b2beeb5a6877d191b8d15623671b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Michael Coblenz",
            "display_name": "Michael Coblenz",
            "team": "T5TCAFTA9",
            "name": "mcoblenz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+Qn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So yes, some are used for making lists, but the beauty of the spreadsheet is the gradual transition from data storage to data organization to computation."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7",
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1588265874.366600",
        "client_msg_id": "4811b870-8f7e-4659-8474-19f1d790c1eb",
        "text": "Heh, I definite wasn't looking down on lists, I love lists.\n\nHere's another relevant personal anecdote: For the first half of my career I was a UI designer, I then I switched to iOS development, and I started easily making far more money than I ever made as a designer. One of the things that baffles me about this, is that I find the job of a programmer in many ways easier than being a designer. For one, your definition of success is more straightforward (does your program work?), but I also just find searching for solutions to problems to just be easier for programming. E.g., I'd take searching for a solution to a programming problem on Stackoverflow over trying to figure out how to do something in Adobe Illustrator any day of the week. In other words, I also generally find the technical minutiae of being a programmer easier than being a designer. So it's confusing to me that programmer's are paid so much more.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dHnD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Heh, I definite wasn't looking down on lists, I love lists.\n\nHere's another relevant personal anecdote: For the first half of my career I was a UI designer, I then I switched to iOS development, and I started easily making far more money than I ever made as a designer. One of the things that baffles me about this, is that I find the job of a programmer in many ways easier than being a designer. For one, your definition of success is more straightforward (does your program work?), but I also just find searching for solutions to problems to just be easier for programming. E.g., I'd take searching for a solution to a programming problem on Stackoverflow over trying to figure out how to do something in Adobe Illustrator any day of the week. In other words, I also generally find the technical minutiae of being a programmer easier than being a designer. So it's confusing to me that programmer's are paid so much more."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD",
                    "UGLSY9X3J",
                    "UA14TGLTC",
                    "UHWC9PXBL"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1588265910.366800",
        "client_msg_id": "98e3db78-c458-4d2f-8812-232883753bae",
        "text": "That might only seem tangentially related, but the point is that using application like Excel really well seems to me just as complicated as programming.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7TlR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That might only seem tangentially related, but the point is that using application like Excel really well seems to me just as complicated as programming."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UMH5FAW2Y"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1588267816.367400",
        "client_msg_id": "ac3bc2f7-f625-4054-a159-5b49a19baf96",
        "text": "&gt; Don’t sneer at making lists. Look at all the code it takes to build TodoMVC.\n<@U6KQ2S410> Doesn't that conflate building software with using software? The term \"make a list\" could be rewritten \"use list-making software\"?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QFFx",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Don’t sneer at making lists. Look at all the code it takes to build TodoMVC."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": " Doesn't that conflate building software with using software? The term \"make a list\" could be rewritten \"use list-making software\"?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1588268998.367900",
        "client_msg_id": "957f3554-bdda-4753-a99e-5560544203b6",
        "text": "<@UEBG0NPDK>\n\n&gt; everyone in the world programs to some degree effectively every day, they just may not do so with a computer\nOh yes. From the notes I shared here last year from Bonnie Nardi's _\"A small matter of programming\"_: People engage with formal systems all the time. Baseball scorecards. Knitting patterns. Following the rules of a game or sport. The book describes several others.\n\n<http:\/\/akkartik.name\/post\/nardi>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AZZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "everyone in the world programs to some degree effectively every day, they just may not do so with a computer"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nOh yes. From the notes I shared here last year from Bonnie Nardi's "
                            },
                            {
                                "type": "text",
                                "text": "\"A small matter of programming\"",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": People engage with formal systems all the time. Baseball scorecards. Knitting patterns. Following the rules of a game or sport. The book describes several others.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/post\/nardi"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1588269143.368100",
        "client_msg_id": "fae7e26e-d14f-4854-b79c-d2304ae200dc",
        "text": "Yeah, it's a great book :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "48MI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, it's a great book "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1588269867.368400",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1588270467.000000"
        },
        "client_msg_id": "41a62e80-ab2c-4add-8370-051d493fbfa4",
        "text": "Could part of the barrier to progress in this area be due to the perspective that the problem to be solved is one of “programming”? Even calling this group “Future of Coding” sort of implies that “no code” isn’t part of the future.\n\nFor example, I don’t think the spreadsheet was invented with the intent of it being programming tool, though it has arguably become the most popular programming tool. I’d guess it was invented to help people do a class of things they would otherwise have to hire programmers to do.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fYmii",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Could part of the barrier to progress in this area be due to the perspective that the problem to be solved is one of “programming”? Even calling this group “Future of Coding” sort of implies that “no code” isn’t part of the future.\n\nFor example, I don’t think the spreadsheet was invented with the intent of it being programming tool, though it has arguably become the most popular programming tool. I’d guess it was invented to help people do a class of things they would otherwise have to hire programmers to do."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UEBG0NPDK"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "UEBG0NPDK",
                    "UHWC9PXBL"
                ],
                "count": 2
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1588273688.373900",
        "client_msg_id": "c3667a69-a432-485f-b466-0bf52f4b8cd0",
        "text": "I think it's no secret that a lot of folks here aren't making programming tools in the traditional sense. Eg: I'm making a 2d\/3d modelling tool for artists, that conveniently just so happens to have a notion of evaluation. Sneaking code in through the back door, as it were. Perhaps we need a name for that stuff: \"oh, code!\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cPSOq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it's no secret that a lot of folks here aren't making programming tools in the traditional sense. Eg: I'm making a 2d\/3d modelling tool for artists, that conveniently just so happens to have a notion of evaluation. Sneaking code in through the back door, as it were. Perhaps we need a name for that stuff: \"oh, code!\""
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UCUSW7WVD",
                    "UKJGU23KP"
                ],
                "count": 2
            },
            {
                "name": "joy",
                "users": [
                    "UCGAK10LS",
                    "UHWC9PXBL",
                    "U85HCL7JP"
                ],
                "count": 3
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U85HCL7JP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMH5FAW2Y",
        "type": "message",
        "ts": "1588273890.374100",
        "client_msg_id": "3f9a7ad9-ee9e-4dc3-a2e1-1b1f19b3d1ac",
        "text": "&gt;  If that's true, than what is the state of the art for end-user programming?\nI think a lot of people use spreadsheets, but I have no sense of the relative proportions.  For data work, \"end\" users are also working with text-based coding (often in notebooks) and some well made GUI tools. I haven't used all the products below, but all of them have happy users:\n• For wrangling rectangles of data: Pandas in Python, dplyr in R (my personal favorite)  and SQL, and GUI tools like Alteryx and Trifacta.\n• For data visualization: Javascript\/R\/Python all have increasingly powerful and easy-ish to use options for viz, there are chart chooser tools like DataWrapper and Flourish, and GUI tools with sophisticated grammars of graphics like Tableau.\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "051926604c26",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-04\/1216047713558_051926604c2691293aaa_72.png",
            "first_name": "",
            "real_name": "Alex Wein",
            "display_name": "Alex Wein",
            "team": "T5TCAFTA9",
            "name": "alexwein",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "40ma",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " If that's true, than what is the state of the art for end-user programming?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think a lot of people use spreadsheets, but I have no sense of the relative proportions.  For data work, \"end\" users are also working with text-based coding (often in notebooks) and some well made GUI tools. I haven't used all the products below, but all of them have happy users:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "For wrangling rectangles of data: Pandas in Python, dplyr in R (my personal favorite)  and SQL, and GUI tools like Alteryx and Trifacta."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "For data visualization: Javascript\/R\/Python all have increasingly powerful and easy-ish to use options for viz, there are chart chooser tools like DataWrapper and Flourish, and GUI tools with sophisticated grammars of graphics like Tableau."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    },
    {
        "user": "UKDM3GLAJ",
        "type": "message",
        "ts": "1588275133.374500",
        "client_msg_id": "c62d1470-8033-464f-a902-0b648b0d15f4",
        "text": "Wrt most users never writing a formula, I think there’s a couple of different interpretations worth sussing out.\n• Most users never write a formula and spend time laboriously copying out data and doing calculations\n• Most users never write a formula and pay other users to develop custom “programmed” sheets that they then enter data into\n• Most users never write a formula and are still fantastically productive with spreadsheets.\nThere’s some overlap here, but the fact that a system has a powerful component that doesn’t get used isn’t necessarily a failure of that system, even in a context where we think providing that power is good. What I think would constitute a serious criticism of spreadsheet software is users occasionally try to write a formula, but get confused and frustrated and give up.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "34e7a55348e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-01-04\/893378739792_34e7a55348e8c86c1901_72.jpg",
            "first_name": "",
            "real_name": "Jared Windover",
            "display_name": "Jared Windover",
            "team": "T5TCAFTA9",
            "name": "jaredwindover",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a3Z6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wrt most users never writing a formula, I think there’s a couple of different interpretations worth sussing out.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Most users never write a formula and spend time laboriously copying out data and doing calculations"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Most users never write a formula and pay other users to develop custom “programmed” sheets that they then enter data into"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Most users never write a formula and are still fantastically productive with spreadsheets."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There’s some overlap here, but the fact that a system has a powerful component that doesn’t get used isn’t necessarily a failure of that system, even in a context where we think providing that power is good. What I think would constitute a serious criticism of spreadsheet software is users occasionally try to write a formula, but get confused and frustrated and give up."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1588279597.375400",
        "client_msg_id": "d6e37def-0864-4caa-97d4-8df3d7e757ce",
        "text": "Let's get into the weeds — I personally know a handful of folks who have learned that you can type `=` and then band-select a number of cells to produce a sum. That's all they know. I suspect that puts them on the edge between the 1% and the 99%, though which side of that edge and how wide the edge is, who's to say.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0IKKC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Let's get into the weeds — I personally know a handful of folks who have learned that you can type "
                            },
                            {
                                "type": "text",
                                "text": "=",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and then band-select a number of cells to produce a sum. That's all they know. I suspect that puts them on the edge between the 1% and the 99%, though which side of that edge and how wide the edge is, who's to say."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1588280840.375800",
        "client_msg_id": "87c60998-f64a-4464-ac0a-c8d601cb7633",
        "text": "<@UC2A2ARPT>\n\n&gt; Sneaking code in through the back door\nOne example I've periodically noodled on is a more powerful email filter. By the time you provide the capability to inspect attachments and perform n-gram analysis you start naturally needing to treat existing emails as a test corpus.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "u+he",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sneaking code in through the back door"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nOne example I've periodically noodled on is a more powerful email filter. By the time you provide the capability to inspect attachments and perform n-gram analysis you start naturally needing to treat existing emails as a test corpus."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U010RH58PL7",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1588289513.379000",
        "edited": {
            "user": "U71PMQ1V0",
            "ts": "1588289523.000000"
        },
        "client_msg_id": "be0655fe-75a2-4999-bab9-f01c039a1427",
        "text": "\"On the usability of editable software\"\n<https:\/\/flak.tedunangst.com\/post\/on-the-usability-of-editable-software>\n<https:\/\/lobste.rs\/s\/qkpwpa\/on_usability_editable_software>\n\nLots of room for thinking about how language design affects the ability to customize software without the anticipation of the original developer. Eg emacs lisp allows redefining functions without having to fork the original library. Eg languages with private\/public settings that are enforced by the compiler completely prevent that kind of reuse\/rediting, forcing the user to fork which is a pretty heavy-weight operation.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588289513.379000",
        "reply_count": 16,
        "reply_users_count": 6,
        "latest_reply": "1588346909.408700",
        "reply_users": [
            "UCUSW7WVD",
            "U71PMQ1V0",
            "UEBG0NPDK",
            "UT60XSVCN",
            "UJBAJNFLK",
            "UE0ETTCG7"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1588291600.379700"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1588294425.380000"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1588294505.380200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1588295765.381000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1588296760.381400"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1588306106.383100"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1588309203.388200"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1588309496.388700"
            },
            {
                "user": "UT60XSVCN",
                "ts": "1588310994.390600"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1588311223.390900"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1588315881.392400"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1588316112.392600"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1588335205.401600"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1588345298.408100"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1588346356.408400"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1588346909.408700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V\/ixN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"On the usability of editable software\"\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/flak.tedunangst.com\/post\/on-the-usability-of-editable-software"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/lobste.rs\/s\/qkpwpa\/on_usability_editable_software"
                            },
                            {
                                "type": "text",
                                "text": "\n\nLots of room for thinking about how language design affects the ability to customize software without the anticipation of the original developer. Eg emacs lisp allows redefining functions without having to fork the original library. Eg languages with private\/public settings that are enforced by the compiler completely prevent that kind of reuse\/rediting, forcing the user to fork which is a pretty heavy-weight operation."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1588289985.379300",
        "client_msg_id": "5d4e6644-363b-47b2-8d2a-2bbc7eeb287d",
        "text": "The Flutter layout model is very simple and expressive - <https:\/\/youtu.be\/UUfXWzp0-DU?t=201>. The proposed model for extensible layouts on the web uses almost exactly the same api.\n\nMany immediate-mode gui libraries don't have a concept of parent-child relations. Instead widget functions take a rect that tells them where to draw themselves, and there are a bunch of convenience functions for splitting rects in different ways. Eg page 31 of <https:\/\/ourmachinery.com\/docs\/writing-tools-faster\/index.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Flutter's Rendering Pipeline",
                "title_link": "https:\/\/youtu.be\/UUfXWzp0-DU?t=201",
                "author_name": "GoogleTechTalks",
                "author_link": "https:\/\/www.youtube.com\/user\/GoogleTechTalks",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/UUfXWzp0-DU\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Flutter's Rendering Pipeline",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/UUfXWzp0-DU?start=201&feature=oembed&start=201&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/UUfXWzp0-DU?t=201",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/UUfXWzp0-DU?t=201"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "shj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Flutter layout model is very simple and expressive - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/UUfXWzp0-DU?t=201"
                            },
                            {
                                "type": "text",
                                "text": ". The proposed model for extensible layouts on the web uses almost exactly the same api.\n\nMany immediate-mode gui libraries don't have a concept of parent-child relations. Instead widget functions take a rect that tells them where to draw themselves, and there are a bunch of convenience functions for splitting rects in different ways. Eg page 31 of "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/ourmachinery.com\/docs\/writing-tools-faster\/index.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKDM3GLAJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1588291600.379700",
        "client_msg_id": "23a4e463-a6e4-426f-a4d2-3ffdaf899bc9",
        "text": "I don't follow why public\/private prevent 'rediting' (nice coinage there). Isn't it just a simple edit to change 'private' to 'public'?\n\nRedefining functions that weren't really designed to be extended is just as much a reason to fork as anything else, because you often want to reuse some part of the body of the function. It becomes a game of Russian Roulette if you start updating the library without updating your copy of the redefined function. So the leap from editing copies of things to editing things in place isn't that big, I think.\n\nThe key here is to make forking a lightweight operation. And version control systems have already done a lot of heavy lifting for us by refining the erstwhile-heavyweight operation of branching into something light and inexpensive. I suspect making forking lightweight is mostly just a switch in mindset. There are no chains here except those we place on ourselves.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588289513.379000",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o0z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't follow why public\/private prevent 'rediting' (nice coinage there). Isn't it just a simple edit to change 'private' to 'public'?\n\nRedefining functions that weren't really designed to be extended is just as much a reason to fork as anything else, because you often want to reuse some part of the body of the function. It becomes a game of Russian Roulette if you start updating the library without updating your copy of the redefined function. So the leap from editing copies of things to editing things in place isn't that big, I think.\n\nThe key here is to make forking a lightweight operation. And version control systems have already done a lot of heavy lifting for us by refining the erstwhile-heavyweight operation of branching into something light and inexpensive. I suspect making forking lightweight is mostly just a switch in mindset. There are no chains here except those we place on ourselves."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1588294425.380000",
        "edited": {
            "user": "U71PMQ1V0",
            "ts": "1588294609.000000"
        },
        "client_msg_id": "a93a6145-c897-4d1a-a5f6-7bc1ff668d38",
        "text": "&gt;  rediting\nBeen a long day :smile:\n&gt; don't follow why public\/private prevent 'rediting'\nThe distinction I was getting at is editing something \"from the outside\" vs having to fork. Eg if there is a function in a libary whose behavior I want to change in...\n• ...Julia, then I define a new method of that function in my code\n• ...Rust, then I search for the repo, checkout the correct version as a git submodule, change the Cargo entry to point at my local repo, edit the code in the repo, then rebase my changes when I want to upgrade the library\nThe end result is that same - I've changed some logic and I have to maintain that diff. But in the latter case there is a *lot* more busywork involved.\n\nMaking forking more lightweight would definitely help, but I think there is an additional point of friction in maintaining the diff as text vs maintaining the diff as a language mechanism. Eg if the code gets moved around a bunch in the file then rebasing the diff is painful, whereas nothing has to change with the override. Also version control and package managers don't play together very well at the moment. If the original version of the package gets updated the rust package manager won't even warn me about it, let alone help me rebase my changes.\n\nI think we're agreeing in principle - we both want forking to be a lightweight mechanism. You could come at this from either end - a version control system that understands the language and helps you manage forks, or a language with built-in mechanisms for composing code with changes.\n\nThis kinda sounds like <http:\/\/akkartik.name\/post\/wart-layers> - did you continue working on that idea?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588289513.379000",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cU4",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " rediting"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Been a long day "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "don't follow why public\/private prevent 'rediting'"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThe distinction I was getting at is editing something \"from the outside\" vs having to fork. Eg if there is a function in a libary whose behavior I want to change in...\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "...Julia, then I define a new method of that function in my code"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "...Rust, then I search for the repo, checkout the correct version as a git submodule, change the Cargo entry to point at my local repo, edit the code in the repo, then rebase my changes when I want to upgrade the library"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The end result is that same - I've changed some logic and I have to maintain that diff. But in the latter case there is a "
                            },
                            {
                                "type": "text",
                                "text": "lot",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " more busywork involved.\n\nMaking forking more lightweight would definitely help, but I think there is an additional point of friction in maintaining the diff as text vs maintaining the diff as a language mechanism. Eg if the code gets moved around a bunch in the file then rebasing the diff is painful, whereas nothing has to change with the override. Also version control and package managers don't play together very well at the moment. If the original version of the package gets updated the rust package manager won't even warn me about it, let alone help me rebase my changes.\n\nI think we're agreeing in principle - we both want forking to be a lightweight mechanism. You could come at this from either end - a version control system that understands the language and helps you manage forks, or a language with built-in mechanisms for composing code with changes.\n\nThis kinda sounds like "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/post\/wart-layers"
                            },
                            {
                                "type": "text",
                                "text": " - did you continue working on that idea?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1588294505.380200",
        "client_msg_id": "ab84d902-c97d-48bf-9f19-577b9f8b45fb",
        "text": "I guess <https:\/\/www.unisonweb.org\/> has gone pretty far done this road - providing builtin tools for editing a function and updating all of it's callsites to point to the new version.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588289513.379000",
        "parent_user_id": "U71PMQ1V0",
        "attachments": [
            {
                "title": "The Unison language",
                "title_link": "https:\/\/www.unisonweb.org\/",
                "text": "A friendly programming language from the future.",
                "fallback": "The Unison language",
                "from_url": "https:\/\/www.unisonweb.org\/",
                "service_name": "unisonweb.org",
                "id": 1,
                "original_url": "https:\/\/www.unisonweb.org\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sO8E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.unisonweb.org\/"
                            },
                            {
                                "type": "text",
                                "text": " has gone pretty far done this road - providing builtin tools for editing a function and updating all of it's callsites to point to the new version."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1588295194.380800",
        "client_msg_id": "ce45652b-9ac4-4921-8ae5-7abf2429d358",
        "text": "<https:\/\/scattered-thoughts.net\/writing\/imp-solving-functions\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569866970.116800",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D407",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/scattered-thoughts.net\/writing\/imp-solving-functions\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1588295765.381000",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1588295819.000000"
        },
        "client_msg_id": "27b4482f-c0aa-44b3-9692-963a263842f8",
        "text": "I still use layers in my projects. But the idea with layers is to emphasize convenience and rely on the programmer to preserve composability-related properties. In other words, you can easily make changes to a function that create arbitrarily-difficult-to-debug holes for yourself. I rely on the people using layers to use them tastefully.\n\nI think this is an irreducible trade-off. If you want extending functions to always be nice and safe, you'll be restricted in the number of places the safe mechanism is available to you.\n\nIn my current project I instead focus on catching any possible breakage in the project using some combination of tests, types and correct-by-construction design. This is the _top_ priority, and I give up as much as possible while preserving it. Now others can modify functions all they want, safe in the knowledge that _something_ will complain if they break something when forking a function.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588289513.379000",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/8t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I still use layers in my projects. But the idea with layers is to emphasize convenience and rely on the programmer to preserve composability-related properties. In other words, you can easily make changes to a function that create arbitrarily-difficult-to-debug holes for yourself. I rely on the people using layers to use them tastefully.\n\nI think this is an irreducible trade-off. If you want extending functions to always be nice and safe, you'll be restricted in the number of places the safe mechanism is available to you.\n\nIn my current project I instead focus on catching any possible breakage in the project using some combination of tests, types and correct-by-construction design. This is the "
                            },
                            {
                                "type": "text",
                                "text": "top",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " priority, and I give up as much as possible while preserving it. Now others can modify functions all they want, safe in the knowledge that "
                            },
                            {
                                "type": "text",
                                "text": "something",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " will complain if they break something when forking a function."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1588296760.381400",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1588297138.000000"
        },
        "client_msg_id": "f7053b1d-636f-4804-84b2-870462b83624",
        "text": "I absolutely agree with this:\n\n&gt; I search for the repo, checkout the correct version as a git submodule, change the Cargo entry to point at my local repo, edit the code in the repo, then rebase my changes when I want to upgrade the library... there is a *lot* more busywork involved.\nTo me this is the lethal problem with packages: by making them easy to consume we make them harder to modify. And that seems like a hard, black-or-white, us-vs-them trade-off. And if that's right, if there's no place for compromise here, I prefer keeping it easy to modify. Even if that is a harder sell, even if it means most people will gravitate towards the competition.\n\nSame goes for binary distributions of anything. Always keep source along for the ride, have the binary rebuild automatically if the source ever changes. Anything else makes the world a worse place, IMO. (I've been feeling a lot more strongly about this in the past couple of months.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588289513.379000",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0qcY1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I absolutely agree with this:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I search for the repo, checkout the correct version as a git submodule, change the Cargo entry to point at my local repo, edit the code in the repo, then rebase my changes when I want to upgrade the library... there is a "
                            },
                            {
                                "type": "text",
                                "text": "lot",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " more busywork involved."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To me this is the lethal problem with packages: by making them easy to consume we make them harder to modify. And that seems like a hard, black-or-white, us-vs-them trade-off. And if that's right, if there's no place for compromise here, I prefer keeping it easy to modify. Even if that is a harder sell, even if it means most people will gravitate towards the competition.\n\nSame goes for binary distributions of anything. Always keep source along for the ride, have the binary rebuild automatically if the source ever changes. Anything else makes the world a worse place, IMO. (I've been feeling a lot more strongly about this in the past couple of months.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UU45NNMHT",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1588296858.381600",
        "client_msg_id": "77150fee-58da-4771-aea4-ed6927bc1854",
        "text": "Tangent: slide 31:\n```No need for \"layout managers\" -- instead we split rects directly in code```\nI understand the sentiment but dismissing automatic layout seems wrong. In a database analogy, would be like doing away with SQL and performing all queries programmatically with lower level API calls and for loops. Makes me think there must be a different way to layout graphics that is to CSS as Datalog is to SQL :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t6T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tangent: slide 31:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No need for \"layout managers\" -- instead we split rects directly in code"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I understand the sentiment but dismissing automatic layout seems wrong. In a database analogy, would be like doing away with SQL and performing all queries programmatically with lower level API calls and for loops. Makes me think there must be a different way to layout graphics that is to CSS as Datalog is to SQL "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNS7QDKFV",
        "type": "message",
        "ts": "1588303872.382100",
        "client_msg_id": "0613ed40-b26a-4bd4-aa1f-ff411c8611de",
        "text": "I'm curious if there's a standard approach to making programming tutorials and some tools to help make them?  It would help to have a guide so each project doesn't have to build it from scratch.  For a format for presenting code in a gradually-building style, I have a small project to explore this. <https:\/\/github.com\/markdewing\/programming_tutorial_maker>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbc993d98fe7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bc993d98fe7bf26c048ac0818a598d4d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "Mark Dewing",
            "display_name": "Mark Dewing",
            "team": "T5TCAFTA9",
            "name": "markdewing",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588031436.305800",
        "parent_user_id": "UR482RFPY",
        "attachments": [
            {
                "fallback": "markdewing\/programming_tutorial_maker",
                "text": "Template for making programming tutorials",
                "title": "markdewing\/programming_tutorial_maker",
                "footer": "<https:\/\/github.com\/markdewing\/programming_tutorial_maker|markdewing\/programming_tutorial_maker>",
                "id": 1,
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "ts": 1560542583,
                "color": "24292f",
                "fields": [
                    {
                        "title": "Language",
                        "value": "Python",
                        "short": true
                    },
                    {
                        "title": "Last updated",
                        "value": "10 months ago",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text",
                    "fields"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https:\/\/github.com\/markdewing\/programming_tutorial_maker",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IYt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm curious if there's a standard approach to making programming tutorials and some tools to help make them?  It would help to have a guide so each project doesn't have to build it from scratch.  For a format for presenting code in a gradually-building style, I have a small project to explore this. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/markdewing\/programming_tutorial_maker"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1588306106.383100",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1588307678.000000"
        },
        "client_msg_id": "0a138663-812c-4ebf-8b80-27b2818b0510",
        "text": "I :heart: every single one of your comments on that <http:\/\/Lobste.rs|Lobste.rs> thread, <@U71PMQ1V0>. We are of absolutely one mind here.\n\nI responded to a few comments there, but I have nothing to add to yours.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588289513.379000",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MfqqG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I "
                            },
                            {
                                "type": "emoji",
                                "name": "heart",
                                "unicode": "2764-fe0f"
                            },
                            {
                                "type": "text",
                                "text": " every single one of your comments on that "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/Lobste.rs",
                                "text": "Lobste.rs"
                            },
                            {
                                "type": "text",
                                "text": " thread, "
                            },
                            {
                                "type": "user",
                                "user_id": "U71PMQ1V0"
                            },
                            {
                                "type": "text",
                                "text": ". We are of absolutely one mind here.\n\nI responded to a few comments there, but I have nothing to add to yours."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U71PMQ1V0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMWF81HTP",
        "type": "message",
        "ts": "1588307376.386900",
        "client_msg_id": "919409F4-0DFB-4046-BC52-6633ADE30BC6",
        "text": "Anyone know of programs for visualizing and understanding assembly and\/or CPUs? Thinking kind of what Bret Victor does with Learnable Programming and Inventing On Principle but applied to lower level code. I am guessing there’s industrial software in this general category but am especially interested in programs with a pedagogical angle.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4022671f3400",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-03\/775814402657_4022671f340032b9eb75_72.jpg",
            "first_name": "yoshiki",
            "real_name": "yoshiki",
            "display_name": "yoshiki",
            "team": "T5TCAFTA9",
            "name": "yoshikischmitz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588307376.386900",
        "reply_count": 20,
        "reply_users_count": 12,
        "latest_reply": "1588414994.414600",
        "reply_users": [
            "UCUSW7WVD",
            "UEQ6M68H0",
            "UCGAK10LS",
            "UBSMEUXAA",
            "UH85W1ML1",
            "UBN9AFS0N",
            "UN9SCH5RD",
            "UMWF81HTP",
            "U5STGTB3J",
            "UPMFG2571",
            "UU45NNMHT",
            "UDQBTJ211"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1588307926.387600"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1588308727.387900"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1588310165.389400"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1588310561.390000"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1588310565.390200"
            },
            {
                "user": "UH85W1ML1",
                "ts": "1588312257.391500"
            },
            {
                "user": "UH85W1ML1",
                "ts": "1588312319.391700"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1588319925.393200"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1588320792.393500"
            },
            {
                "user": "UN9SCH5RD",
                "ts": "1588321437.393800"
            },
            {
                "user": "UMWF81HTP",
                "ts": "1588321753.394100"
            },
            {
                "user": "UMWF81HTP",
                "ts": "1588321942.394300"
            },
            {
                "user": "UMWF81HTP",
                "ts": "1588322099.394700"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1588325846.397400"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1588325864.398200"
            },
            {
                "user": "UPMFG2571",
                "ts": "1588327539.398500"
            },
            {
                "user": "UU45NNMHT",
                "ts": "1588342594.403700"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1588356646.409800"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1588356699.410000"
            },
            {
                "user": "UMWF81HTP",
                "ts": "1588414994.414600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8sR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyone know of programs for visualizing and understanding assembly and\/or CPUs? Thinking kind of what Bret Victor does with Learnable Programming and Inventing On Principle but applied to lower level code. I am guessing there’s industrial software in this general category but am especially interested in programs with a pedagogical angle."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "URDRJEWS0",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1588307505.387000",
        "client_msg_id": "4f7ec9c9-c30d-446e-9cfc-2ec4765b6987",
        "text": "Part of the challenge is just what's ready-to-hand.  I recall sitting next to an analyst who, while working on an Excel sheet, would also use the four function calculator on his desk.  Why?  Well, the calculator works even when he isn't in Excel or on the computer, and since the sheet was already configured to show something else, there wasn't a good scratch spot to put the needed formula.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588262541.361600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fg0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Part of the challenge is just what's ready-to-hand.  I recall sitting next to an analyst who, while working on an Excel sheet, would also use the four function calculator on his desk.  Why?  Well, the calculator works even when he isn't in Excel or on the computer, and since the sheet was already configured to show something else, there wasn't a good scratch spot to put the needed formula."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UE0ETTCG7",
                    "UHWC9PXBL"
                ],
                "count": 3
            },
            {
                "name": "disappointed_relieved",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1588307788.387300",
        "client_msg_id": "63aba39f-bbb3-4b46-8d24-0d86621885bb",
        "text": "Speaking of movie UIs... <https:\/\/www.youtube.com\/watch?v=4-yFRjqn9Tc>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Wreck-It-Ralph Clip: Code Room",
                "title_link": "https:\/\/www.youtube.com\/watch?v=4-yFRjqn9Tc",
                "author_name": "Richard Parker",
                "author_link": "https:\/\/www.youtube.com\/user\/SungTobias",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/4-yFRjqn9Tc\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Wreck-It-Ralph Clip: Code Room",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/4-yFRjqn9Tc?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=4-yFRjqn9Tc",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=4-yFRjqn9Tc"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZdAT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Speaking of movie UIs... "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=4-yFRjqn9Tc"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1588307926.387600",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1588307978.000000"
        },
        "client_msg_id": "084410ed-4ca9-40e8-820e-04a3cc150153",
        "text": "Are you thinking real-world processors? There's a long tradition from SPIM to TIS-100 of designing simple make-believe processors for pedagogical purposes, but I'm sure you know all that..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588307376.386900",
        "parent_user_id": "UMWF81HTP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/VtS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you thinking real-world processors? There's a long tradition from SPIM to TIS-100 of designing simple make-believe processors for pedagogical purposes, but I'm sure you know all that.."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UMWF81HTP"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1588308727.387900",
        "client_msg_id": "3001f49f-6375-4367-b024-7d766871287c",
        "text": "I haven't seen an assembly language simulator in a long time but i know they exist somewhere. There are simpler processors than the Intel architecture (which is a pretty messy thing), like Z80, etc. The Motorola 68000 was a very regular instruction set, and there is probably some wonderful old stuff out there. Highly instructive to learn assembly language, well worth doing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588307376.386900",
        "parent_user_id": "UMWF81HTP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KqjIV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven't seen an assembly language simulator in a long time but i know they exist somewhere. There are simpler processors than the Intel architecture (which is a pretty messy thing), like Z80, etc. The Motorola 68000 was a very regular instruction set, and there is probably some wonderful old stuff out there. Highly instructive to learn assembly language, well worth doing."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMWF81HTP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1588309203.388200",
        "client_msg_id": "af9b3bb4-991c-4649-b019-0f6515318d2b",
        "text": "<@U71PMQ1V0> the system Josh and I are working on revolves entirely around a remixing model :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588289513.379000",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1VCjT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U71PMQ1V0"
                            },
                            {
                                "type": "text",
                                "text": " the system Josh and I are working on revolves entirely around a remixing model "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1588309496.388700",
        "client_msg_id": "44dca377-0312-4d99-bd17-e45d15b8b926",
        "text": "Not sure if you remember, but this was one of the footnotes in my essay on modeling: <https:\/\/www.chris-granger.com\/2015\/01\/26\/coding-is-not-the-new-literacy\/#fn4>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588289513.379000",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/kFQ=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure if you remember, but this was one of the footnotes in my essay on modeling: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.chris-granger.com\/2015\/01\/26\/coding-is-not-the-new-literacy\/#fn4"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1588310165.389400",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1588310503.000000"
        },
        "client_msg_id": "7a59ebf5-bef9-4fdc-be9b-40d756bc88e0",
        "text": "There's a HUGE difference between assembly languages and CPU hardware. They're only weakly linked: one encodes computations and the other executes computations. Intel and AMD CPUs haven't executed x86 directly for decades; they compile it into microcode on-the-fly. And CPUs do insanely complex things with scheduling, memories and caches.\n\nI would LOVE a good, modern (abstract) CPU emulator that could execute a Wasm program and show me what was happening with scheduling and caches. People have tried this kind of stuff before but I don't know of any nice tools. I've been thinking I will have to make my own (simplistic) simulator at some point if I'm ever going to make a \"great\" compiler. Otherwise I'll just be applying\/benchmarking heuristics \"black box\"-style and hoping they work well.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588307376.386900",
        "parent_user_id": "UMWF81HTP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U=9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's a HUGE difference between assembly languages and CPU hardware. They're only weakly linked: one encodes computations and the other executes computations. Intel and AMD CPUs haven't executed x86 directly for decades; they compile it into microcode on-the-fly. And CPUs do insanely complex things with scheduling, memories and caches.\n\nI would LOVE a good, modern (abstract) CPU emulator that could execute a Wasm program and show me what was happening with scheduling and caches. People have tried this kind of stuff before but I don't know of any nice tools. I've been thinking I will have to make my own (simplistic) simulator at some point if I'm ever going to make a \"great\" compiler. Otherwise I'll just be applying\/benchmarking heuristics \"black box\"-style and hoping they work well."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1588310561.390000",
        "client_msg_id": "2d311b29-c856-4b9a-8651-e7ff112a1834",
        "text": "Maybe a disassembler like binary ninja or Ida pro?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588307376.386900",
        "parent_user_id": "UMWF81HTP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NRX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe a disassembler like binary ninja or Ida pro?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1588310565.390200",
        "client_msg_id": "70677113-5210-4afb-91e2-34fcd9181be5",
        "text": "<https:\/\/binary.ninja\/|https:\/\/binary.ninja\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588307376.386900",
        "parent_user_id": "UMWF81HTP",
        "attachments": [
            {
                "title": "Binary Ninja &gt; home",
                "title_link": "https:\/\/binary.ninja\/",
                "text": "Binary Ninja : A Reverse Engineering Platform",
                "fallback": "Binary Ninja &gt; home",
                "thumb_url": "https:\/\/binary.ninja\/ico\/apple-icon-180x180.png",
                "from_url": "https:\/\/binary.ninja\/",
                "thumb_width": 180,
                "thumb_height": 180,
                "service_icon": "https:\/\/binary.ninja\/ico\/apple-icon-57x57.png",
                "service_name": "binary.ninja",
                "id": 1,
                "original_url": "https:\/\/binary.ninja\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x1Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/binary.ninja\/",
                                "text": "https:\/\/binary.ninja\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMWF81HTP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UT60XSVCN",
        "type": "message",
        "ts": "1588310994.390600",
        "client_msg_id": "27d9df29-a4e7-4797-8337-a9e9ddfed3f8",
        "text": "<@UCUSW7WVD>\n&gt; I feel very cynical\/fatalistic about Emacs\/Lisp\/Smalltalk lately. Yes, the core design choices exhibit a high trust for users. But then it seems to be inevitable that the layers on top start chipping away at this trust. Vim's package managers introduce hurdles for anyone who wants to modify sources. (See my recent war story.) How does the Emacs eco-system compare? Is it really common for people to modify packages? Racket's raco feels the same, additional complexity between me and the libraries they want me to ‘use'.\n&gt; \n(Responding here since I don't have a lobsters account)\nWhen I first started using emacs I had the same thought, since it's really hard to override a package with the default package manager `package.el`, but there is actually a quite sane package manager that makes modifying packages trivial, `straight.el`, it's based on the nix\/guix model, but it's even simpler—to edit a package, you just edit the files in the git checkout it creates, that's it. maintaining your own branch is as simple as... making a git branch, and so on. Recently I had a problem when I upgraded my packages, and to switch to an older version, I just checked an older version of the package from git, and the package manager handled rebuilding and everything automatically. It felt very nice.\nIn a way, it's like the package manager uses git metadata as its database, so you don't need extra cruft on top.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbc3e6041047",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bc3e6041047849518d1b042f0a29d5af.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "S.M Mukarram Nainar",
            "display_name": "S.M Mukarram Nainar",
            "team": "T5TCAFTA9",
            "name": "nainars",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588289513.379000",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PG=tP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel very cynical\/fatalistic about Emacs\/Lisp\/Smalltalk lately. Yes, the core design choices exhibit a high trust for users. But then it seems to be inevitable that the layers on top start chipping away at this trust. Vim's package managers introduce hurdles for anyone who wants to modify sources. (See my recent war story.) How does the Emacs eco-system compare? Is it really common for people to modify packages? Racket's raco feels the same, additional complexity between me and the libraries they want me to ‘use'.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Responding here since I don't have a lobsters account)\nWhen I first started using emacs I had the same thought, since it's really hard to override a package with the default package manager "
                            },
                            {
                                "type": "text",
                                "text": "package.el",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but there is actually a quite sane package manager that makes modifying packages trivial, "
                            },
                            {
                                "type": "text",
                                "text": "straight.el",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", it's based on the nix\/guix model, but it's even simpler—to edit a package, you just edit the files in the git checkout it creates, that's it. maintaining your own branch is as simple as... making a git branch, and so on. Recently I had a problem when I upgraded my packages, and to switch to an older version, I just checked an older version of the package from git, and the package manager handled rebuilding and everything automatically. It felt very nice.\nIn a way, it's like the package manager uses git metadata as its database, so you don't need extra cruft on top."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD",
                    "U71PMQ1V0",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1588311223.390900",
        "client_msg_id": "4350453a-eda1-4f3c-a59c-9c516925c85c",
        "text": "<https:\/\/github.com\/raxod502\/straight.el>\n\nWow, look at that Readme! Thanks for showing me this.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588289513.379000",
        "parent_user_id": "U71PMQ1V0",
        "attachments": [
            {
                "fallback": "raxod502\/straight.el",
                "text": ":four_leaf_clover: Next-generation, purely functional package manager for the Emacs hacker.",
                "title": "raxod502\/straight.el",
                "footer": "<https:\/\/github.com\/raxod502\/straight.el|raxod502\/straight.el>",
                "id": 1,
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "ts": 1483506907,
                "color": "24292f",
                "fields": [
                    {
                        "title": "Stars",
                        "value": "1110",
                        "short": true
                    },
                    {
                        "title": "Language",
                        "value": "Emacs Lisp",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text",
                    "fields"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https:\/\/github.com\/raxod502\/straight.el",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ea4v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/raxod502\/straight.el"
                            },
                            {
                                "type": "text",
                                "text": "\n\nWow, look at that Readme! Thanks for showing me this."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UH85W1ML1",
        "type": "message",
        "ts": "1588312257.391500",
        "client_msg_id": "8bc9cf65-daf8-4078-aee1-9bdbacc7e1f7",
        "text": "<http:\/\/visual6502.org\/> has live JS simulations of a few chips",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2c0e4a3979e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529852667013_2c0e4a3979e8e92c4924_72.jpg",
            "first_name": "",
            "real_name": "Vitorio Miliano",
            "display_name": "vitorio",
            "team": "T5TCAFTA9",
            "name": "vito_futureofcoding",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588307376.386900",
        "parent_user_id": "UMWF81HTP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mGN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/visual6502.org\/"
                            },
                            {
                                "type": "text",
                                "text": " has live JS simulations of a few chips"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UH85W1ML1",
        "type": "message",
        "ts": "1588312319.391700",
        "client_msg_id": "8ee74048-2d3f-4796-9eab-7d306d0edfed",
        "text": "<https:\/\/floooh.github.io\/visual6502remix\/> is an alternative version",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2c0e4a3979e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529852667013_2c0e4a3979e8e92c4924_72.jpg",
            "first_name": "",
            "real_name": "Vitorio Miliano",
            "display_name": "vitorio",
            "team": "T5TCAFTA9",
            "name": "vito_futureofcoding",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588307376.386900",
        "parent_user_id": "UMWF81HTP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ssoB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/floooh.github.io\/visual6502remix\/"
                            },
                            {
                                "type": "text",
                                "text": " is an alternative version"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1588315794.392100",
        "edited": {
            "user": "U71PMQ1V0",
            "ts": "1588315825.000000"
        },
        "client_msg_id": "0c3e0014-6408-4ae6-b6ab-2a13209ebc6d",
        "text": "<@UN9SCH5RD> I think of it more as not having *one* layout manager. The widget functions just want a rect. You can write the rect out by hand, or write some simple layout calculation, or import a layout manager library if you want, or use multiple different layout algorithms in different places. But the widget libraries don't care.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FKjoc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UN9SCH5RD"
                            },
                            {
                                "type": "text",
                                "text": " I think of it more as not having "
                            },
                            {
                                "type": "text",
                                "text": "one",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " layout manager. The widget functions just want a rect. You can write the rect out by hand, or write some simple layout calculation, or import a layout manager library if you want, or use multiple different layout algorithms in different places. But the widget libraries don't care."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1588315881.392400",
        "client_msg_id": "6fc261a5-d7e9-43db-a062-0a5f5bb60db4",
        "text": "<@UEBG0NPDK> Are you guys still at rai?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588289513.379000",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jHAXO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " Are you guys still at rai?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1588316112.392600",
        "client_msg_id": "e37a9837-1111-453a-aedd-978d5f58966b",
        "text": "Wow, straight.el does address a lot of the things we were complaining about.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588289513.379000",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sOM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wow, straight.el does address a lot of the things we were complaining about."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]