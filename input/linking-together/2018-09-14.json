[
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1536912880.000100",
        "client_msg_id": "88cb8186-f3e2-41f0-82a0-6182f4462049",
        "text": "Interesting thread: <https:\/\/twitter.com\/graydon_pub\/status\/1040295913686589440>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/graydon_pub|@graydon_pub>: Agreed that editors-and-files are less of a fixed thing than text itself (and besides: these days it's editors-and-files-and-distributed-revision-control; a plain filesystem is pretty inadequate).\n\nDisagreed about hieroglyphs: they are also text.\n<https:\/\/www.unicode.org\/charts\/PDF\/U13000.pdf> <https:\/\/twitter.com\/paulbiggar\/status\/1040245849186394112>",
                "ts": 1536860848,
                "author_name": "Graydon Hoare",
                "author_link": "https:\/\/twitter.com\/graydon_pub\/status\/1040295913686589440",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1202995163\/graycode_normal.png",
                "author_subname": "@graydon_pub",
                "text": "Agreed that editors-and-files are less of a fixed thing than text itself (and besides: these days it's editors-and-files-and-distributed-revision-control; a plain filesystem is pretty inadequate).\n\nDisagreed about hieroglyphs: they are also text.\n<https:\/\/www.unicode.org\/charts\/PDF\/U13000.pdf> <https:\/\/twitter.com\/paulbiggar\/status\/1040245849186394112>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/graydon_pub\/status\/1040295913686589440",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/graydon_pub\/status\/1040295913686589440",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            },
            {
                "fallback": "<https:\/\/twitter.com\/paulbiggar|@paulbiggar>: <https:\/\/twitter.com\/geofflangdale|@geofflangdale> <https:\/\/twitter.com\/graydon_pub|@graydon_pub> <https:\/\/twitter.com\/yminsky|@yminsky> <https:\/\/twitter.com\/slava_pestov|@slava_pestov> There's two ways that programming is text now, and one doesn't imply the other. One is \"I keep my programs in files and edit them with my editor\" and one is \"my programs are written with words not symbols\". You can drop the former without programming in hieroglyphics",
                "ts": 1536848911,
                "author_name": "Paul Biggar",
                "author_link": "https:\/\/twitter.com\/paulbiggar\/status\/1040245849186394112",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/494873278154956802\/UzQtLIJ2_normal.png",
                "author_subname": "@paulbiggar",
                "text": "<https:\/\/twitter.com\/geofflangdale|@geofflangdale> <https:\/\/twitter.com\/graydon_pub|@graydon_pub> <https:\/\/twitter.com\/yminsky|@yminsky> <https:\/\/twitter.com\/slava_pestov|@slava_pestov> There's two ways that programming is text now, and one doesn't imply the other. One is \"I keep my programs in files and edit them with my editor\" and one is \"my programs are written with words not symbols\". You can drop the former without programming in hieroglyphics",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/paulbiggar\/status\/1040245849186394112",
                "indent": true,
                "color": "32BBF3",
                "id": 2,
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9ukP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting thread: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/graydon_pub\/status\/1040295913686589440"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UCKRZS3DZ",
                    "U5TCAFTD3"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1536915919.000100",
        "client_msg_id": "2687f14b-eb07-47c3-afbc-695a0ed1477a",
        "text": "random idea: <https:\/\/twitter.com\/warianoguerra\/status\/1040525691048128512>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "reply_count": 25,
        "reply_users_count": 3,
        "latest_reply": "1536949829.000100",
        "reply_users": [
            "UCKRZS3DZ",
            "UBN9AFS0N",
            "U8A5MS6R1"
        ],
        "replies": [
            {
                "user": "UCKRZS3DZ",
                "ts": "1536916484.000100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1536917973.000100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1536918256.000100"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1536918421.000100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1536918672.000100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1536918716.000100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1536918741.000100"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1536918839.000100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1536919359.000100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1536919556.000100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1536919574.000100"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1536919812.000100"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1536919923.000100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1536920575.000100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1536920610.000100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1536920637.000100"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1536920686.000100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1536925166.000100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1536925682.000100"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1536926703.000100"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1536948229.000100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1536949062.000100"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1536949533.000100"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1536949624.000100"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1536949829.000100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/warianoguerra|@warianoguerra>: Dependency injection and registries are a workaround to the fact that module systems in languages are not first class, they are a big global singleton. I would like to create a clean instance and pass it as a parameter, inject it in the scope resolution chain or as root (sandbox)",
                "ts": 1536915631,
                "author_name": "Mariano Guerra",
                "author_link": "https:\/\/twitter.com\/warianoguerra\/status\/1040525691048128512",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/694511090043068417\/D3heJMUr_normal.jpg",
                "author_subname": "@warianoguerra",
                "text": "Dependency injection and registries are a workaround to the fact that module systems in languages are not first class, they are a big global singleton. I would like to create a clean instance and pass it as a parameter, inject it in the scope resolution chain or as root (sandbox)",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/warianoguerra\/status\/1040525691048128512",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/warianoguerra\/status\/1040525691048128512",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6CzwW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "random idea: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/warianoguerra\/status\/1040525691048128512"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U6XFQKWFN",
                    "U8A5MS6R1"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1536916484.000100",
        "client_msg_id": "8b6fd36c-9414-4b90-b67f-f8a9dd431e80",
        "text": "If so, what's the difference between modules and objects then? If it's basically the same, do modules have to be first class?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h2nDv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If so, what's the difference between modules and objects then? If it's basically the same, do modules have to be first class?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1536917973.000100",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1536917992.000000"
        },
        "client_msg_id": "4433138c-1e00-4b24-ae05-6f9041236f21",
        "text": "there's not much of a difference, but you have to treat them differently. You can't access all the implicit behaviour of modules with objects, the closest I saw was the with statement in javascript and object-capability model, but why not just make modules just objects and unify the resolution logic in scopes to allow modifying\/introspecting the scope chain",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T1B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there's not much of a difference, but you have to treat them differently. You can't access all the implicit behaviour of modules with objects, the closest I saw was the with statement in javascript and object-capability model, but why not just make modules just objects and unify the resolution logic in scopes to allow modifying\/introspecting the scope chain"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1536918256.000100",
        "client_msg_id": "11d64026-e924-4339-b45f-bd2085be26e2",
        "text": "in many programming languages you can't pass modules as values. Imagine if the top of your module instead of being a sequence of imperative imports and renames was treated as an interface your module expects to be instantiated, and then you can override the default references (provided by the global module system), mocking and sandboxing would be builtin",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Umsux",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "in many programming languages you can't pass modules as values. Imagine if the top of your module instead of being a sequence of imperative imports and renames was treated as an interface your module expects to be instantiated, and then you can override the default references (provided by the global module system), mocking and sandboxing would be builtin"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1536918421.000100",
        "client_msg_id": "69a3ee97-f996-4ef3-bc8f-de1af2bf02ea",
        "text": "Well, such change will make whole thing more flexible. Make mocking in tests much easier.\n\nNot sure would it make things easier though.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TavI2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, such change will make whole thing more flexible. Make mocking in tests much easier.\n\nNot sure would it make things easier though."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1536918672.000100",
        "client_msg_id": "d61d6079-4214-4c00-a4eb-ebd4a0ef9438",
        "text": "mocking, sandboxing, dependency injection and registries wouldn't be needed, that's a big simplification",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BUQa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "mocking, sandboxing, dependency injection and registries wouldn't be needed, that's a big simplification"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1536918716.000100",
        "client_msg_id": "25b7c6f9-840d-4ece-b557-80d9f9ce86ba",
        "text": "also, module\/object distinction would disappear and the dual resolution between scopes and global module system would disappear too",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LJsp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "also, module\/object distinction would disappear and the dual resolution between scopes and global module system would disappear too"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1536918741.000100",
        "client_msg_id": "e3d77725-79c1-47de-9aa0-33b221b53436",
        "text": "I would like to have to think about less things :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qZ+k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would like to have to think about less things "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1536918839.000100",
        "client_msg_id": "a613424c-cfe3-4386-a762-2ce19d038986",
        "text": "But this big singleton thing is not going away, right?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wsGL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But this big singleton thing is not going away, right?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1536919359.000100",
        "client_msg_id": "d5e5af66-51c2-402f-99cf-5b8937626ec3",
        "text": "no, it's just another instance that's there by default, you can remove it explicitly or introspect it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s5om",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "no, it's just another instance that's there by default, you can remove it explicitly or introspect it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1536919556.000100",
        "client_msg_id": "8f5f49df-2304-4466-b676-709d993f674f",
        "text": "```Newspeak is a new programming language in the tradition of Self and Smalltalk. Newspeak is highly dynamic and reflective - but designed to support modularity and security. It supports both object-oriented and functional programming.\n\nLike Self, Newspeak is message-based; all names are dynamically bound. However, like Smalltalk, Newspeak uses classes rather than prototypes. As in Beta, classes may nest. Because class names are late bound, all classes are virtual, every class can act as a mixin, and class hierarchy inheritance falls out automatically. Top level classes are essentially self contained parametric namespaces, and serve to define component style modules, which naturally define sandboxes in an object-capability style.```",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yyc",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Newspeak is a new programming language in the tradition of Self and Smalltalk. Newspeak is highly dynamic and reflective - but designed to support modularity and security. It supports both object-oriented and functional programming.\n\nLike Self, Newspeak is message-based; all names are dynamically bound. However, like Smalltalk, Newspeak uses classes rather than prototypes. As in Beta, classes may nest. Because class names are late bound, all classes are virtual, every class can act as a mixin, and class hierarchy inheritance falls out automatically. Top level classes are essentially self contained parametric namespaces, and serve to define component style modules, which naturally define sandboxes in an object-capability style."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1536919574.000100",
        "client_msg_id": "5b3e5e68-efb4-4c5d-b80f-9bffeb5ab317",
        "text": "don't know a lot about the details but Newspeak sounds like it's going in that direction",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2m5NC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "don't know a lot about the details but Newspeak sounds like it's going in that direction"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1536919812.000100",
        "client_msg_id": "87620a0d-7e27-47c5-b0b4-5386f21684f5",
        "text": "Seems like so.\n\nDon't know what to say, I still feel pessimistic about it. Things are really complicated when modules do have state.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XaLT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Seems like so.\n\nDon't know what to say, I still feel pessimistic about it. Things are really complicated when modules do have state."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1536919923.000100",
        "client_msg_id": "063363f3-2601-4633-aa78-6a647793246e",
        "text": "There are two problems: dependencies of code and dependencies of state. If modules are just pack of functions without internal state, I guess it will make it easier to tackle with second problem.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rD6b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are two problems: dependencies of code and dependencies of state. If modules are just pack of functions without internal state, I guess it will make it easier to tackle with second problem."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1536920575.000100",
        "client_msg_id": "a7095bbb-e148-4b97-b63c-ea10deea9137",
        "text": "I like immutable languages :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bSSy0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like immutable languages "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1536920610.000100",
        "client_msg_id": "39293318-e3d6-4840-83c7-6d3f7c750d50",
        "text": "modules as stateless interfaces with associated implementations",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4YW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "modules as stateless interfaces with associated implementations"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1536920637.000100",
        "client_msg_id": "53b68ade-a437-423d-9f49-dd74570b2c1e",
        "text": "you can layer partial implementations, like scopes to override different parts",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hhH0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you can layer partial implementations, like scopes to override different parts"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1536920686.000100",
        "client_msg_id": "62639523-4b94-42f3-b5a9-77ac03b34c0e",
        "text": "yeah, good idea",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vq\/bW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah, good idea"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1536925166.000100",
        "client_msg_id": "b288cac3-400b-4235-a93e-443ff3813ade",
        "text": "<https:\/\/youtu.be\/TrNlNjwzzmc?t=5m57s>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Gilad Bracha - Composing Software in an Age of Dissonance",
                "title_link": "https:\/\/youtu.be\/TrNlNjwzzmc?t=5m57s",
                "author_name": "ECOOPLDI 2017",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCEljTEnC5bdhNOKEs4Aou6Q",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/TrNlNjwzzmc\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Gilad Bracha - Composing Software in an Age of Dissonance",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/TrNlNjwzzmc?start=357&feature=oembed&start=357&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/TrNlNjwzzmc?t=5m57s",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/TrNlNjwzzmc?t=5m57s"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JNyl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/TrNlNjwzzmc?t=5m57s"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1536925682.000100",
        "client_msg_id": "3ffe03ac-cf01-42ab-b940-2e4665d0e959",
        "text": "check also at minute 9",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "==ZV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "check also at minute 9"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1536926703.000100",
        "client_msg_id": "5c9b5696-7980-462a-9b96-8f44f54bc366",
        "text": "Yeah, he also talks about it. I don't have the vision to understand is it awesome or not.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QexE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, he also talks about it. I don't have the vision to understand is it awesome or not."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1536948229.000100",
        "client_msg_id": "83ce46d9-677d-4613-b595-18a36d72d87a",
        "text": "I feel this is related to the idea of early\/late binding (wrt time T). In Python you can 'overwrite' a module at runtime by doing something like\n```\nimport moduleA\nmoduleA.moduleB = myModuleB\n```\nThis will affect all references to `ModuleB.foo` from within moduleA (but not all cases, only explicit global lookups of ModuleB).\nYou can also pass modules around as objects. Are you thinking about something similar?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JDP0l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel this is related to the idea of early\/late binding (wrt time T). In Python you can 'overwrite' a module at runtime by doing something like"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "import moduleA\nmoduleA.moduleB = myModuleB\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This will affect all references to "
                            },
                            {
                                "type": "text",
                                "text": "ModuleB.foo",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " from within moduleA (but not all cases, only explicit global lookups of ModuleB).\nYou can also pass modules around as objects. Are you thinking about something similar?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1536949062.000100",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1536949080.000000"
        },
        "client_msg_id": "e10dd140-9118-43fb-8fbc-682eb70faf61",
        "text": "that's one part, it's kind of first class because it behaves like an object, but changes (to alter resolution of some value inside the module) are global and as you mentioned there's no way to change the values for other modules who hold a reference to moduleB (not through moduleA). What can be achieved in python sounds like monkey patching in ruby, and we know what that's like :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "od4Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that's one part, it's kind of first class because it behaves like an object, but changes (to alter resolution of some value inside the module) are global and as you mentioned there's no way to change the values for other modules who hold a reference to moduleB (not through moduleA). What can be achieved in python sounds like monkey patching in ruby, and we know what that's like "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1536949533.000100",
        "client_msg_id": "559d540f-34b6-48f2-b0f4-1b0d25d2d2be",
        "text": "Yes its similar. You can also overwrite the global `sys.modules['moduleB'] = newModuleB` and it will change for all modules that reference moduleB (because the runtime lookup goes through that dict). Monkey patching is powerful (and make mocking etc very easy) but the issue is doing it in a controlled, transactional way.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZpFcV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes its similar. You can also overwrite the global "
                            },
                            {
                                "type": "text",
                                "text": "sys.modules['moduleB'] = newModuleB",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and it will change for all modules that reference moduleB (because the runtime lookup goes through that dict). Monkey patching is powerful (and make mocking etc very easy) but the issue is doing it in a controlled, transactional way."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1536949624.000100",
        "client_msg_id": "21b1a548-c7f6-494e-9a17-05e4b5508793",
        "text": "Sorry I misspoke - changing sys.modules will not change the already bound imports.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8d+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry I misspoke - changing sys.modules will not change the already bound imports."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1536949829.000100",
        "client_msg_id": "e38807e2-f864-4234-87a6-1e0e7a8bec85",
        "text": "In new versions of Python you can partially hack this by implementing __getattr__  at the top level of your module (<https:\/\/www.python.org\/dev\/peps\/pep-0562\/>). In general I think first class modules and good support for 'routing\/binding' modules at runtime seem like a good idea.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536915919.000100",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "service_name": "Python.org",
                "title": "PEP 562 -- Module __getattr__ and __dir__",
                "title_link": "https:\/\/www.python.org\/dev\/peps\/pep-0562\/",
                "text": "The official home of the Python Programming Language",
                "fallback": "Python.org: PEP 562 -- Module __getattr__ and __dir__",
                "from_url": "https:\/\/www.python.org\/dev\/peps\/pep-0562\/",
                "thumb_url": "https:\/\/www.python.org\/static\/opengraph-icon-200x200.png",
                "thumb_width": 200,
                "thumb_height": 200,
                "service_icon": "https:\/\/www.python.org\/static\/apple-touch-icon-precomposed.png",
                "id": 1,
                "original_url": "https:\/\/www.python.org\/dev\/peps\/pep-0562\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RSFY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In new versions of Python you can partially hack this by implementing __getattr__  at the top level of your module ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.python.org\/dev\/peps\/pep-0562\/"
                            },
                            {
                                "type": "text",
                                "text": "). In general I think first class modules and good support for 'routing\/binding' modules at runtime seem like a good idea."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]