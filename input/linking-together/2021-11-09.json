[
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1636485664.082800",
        "client_msg_id": "8e2809d6-a63f-49d9-9c42-192dcd120275",
        "text": "<@UK3LH8CF5> I think we have different definitions of formalization.  Most places I've worked had a written coding standard, which can also define comment guidelines.  This can come from top down, of course, but it can also come bottom up from individual members of the team.  Large company wide coding standards should still accept feedback from individual ICs that bring up issues, and for things that are under-defined individual teams can define them for their codebase or use case if necessary. Defining \"what a good comment\" is in every code review on a case by case basis is not productive, although obviously in some cases it will need to be addressed.  I don't feel like I'm advocating for anything unusual. Written coding standards, document your code, a linter.\n\nI'm just going to accept I'm an outlier here and that might be due to social, cultural, or experiential bias.  I've never had an issue with an organizational coding standards but have had issues with individual coders in code reviews.  I know you're advocated that unified coding style is overrated (another thing I disagree with :)), but even in that case, if one person is following a good practice, but the rest of the team isn't, shouldn't that be shared and adopted across the team?\n\nSlightly related, in this talk about rendering architecture at Activision (really Call of Duty engine), the CTO Michael Vance talks about documenting code (<https:\/\/youtu.be\/9ublsQNbv6I?t=647>).  This was a large code base that had very few comments and even deleted John Carmack's famous Q_rsqrt comment (<https:\/\/github.com\/id-Software\/Quake-III-Arena\/blob\/dbe4ddb10315479fc00086f08e25d968b4b43c49\/code\/game\/q_math.c#L560>) , but very detailed  comment history.  It's possible that widely used tools (Git, GitHub) make this style of documentation difficult to work with, but I enjoyed it with Peforce.  That's a small sample of how my career has biased my opinions on these things.  So, yes it sucks that you have had leadership that forced formal processes on you that didn't work, but my experience has been the opposite, I've experienced more challenges with peer to peer interactions than with company or team wide process.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "attachments": [
            {
                "from_url": "https:\/\/youtu.be\/9ublsQNbv6I?t=647",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "SIGGRAPH 2021 REAC: Rendering Engine Architecture at Activision",
                "title_link": "https:\/\/youtu.be\/9ublsQNbv6I?t=647",
                "author_name": "Rendering Engine Architecture Conference",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCWhvzM3b8N_JbmmoM1fkeGg",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/9ublsQNbv6I?start=647&feature=oembed&start=647&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "fallback": "YouTube Video: SIGGRAPH 2021 REAC: Rendering Engine Architecture at Activision",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/9ublsQNbv6I\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/9ublsQNbv6I?t=647"
            },
            {
                "from_url": "https:\/\/github.com\/id-Software\/Quake-III-Arena\/blob\/dbe4ddb10315479fc00086f08e25d968b4b43c49\/code\/game\/q_math.c#L560",
                "service_name": "GitHub",
                "title": "Quake-III-Arena\/q_math.c at dbe4ddb10315479fc00086f08e25d968b4b43c49 · id-Software\/Quake-III-Arena",
                "title_link": "https:\/\/github.com\/id-Software\/Quake-III-Arena\/blob\/dbe4ddb10315479fc00086f08e25d968b4b43c49\/code\/game\/q_math.c#L560",
                "text": "Quake III Arena GPL Source Release. Contribute to id-Software\/Quake-III-Arena development by creating an account on GitHub.",
                "image_url": "https:\/\/opengraph.githubassets.com\/9f8c13a498cdccaaa4f87390fd28bd6ced3d3ca083831fd81312369e66f292b7\/id-Software\/Quake-III-Arena",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 89202,
                "fallback": "GitHub: Quake-III-Arena\/q_math.c at dbe4ddb10315479fc00086f08e25d968b4b43c49 · id-Software\/Quake-III-Arena",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 2,
                "original_url": "https:\/\/github.com\/id-Software\/Quake-III-Arena\/blob\/dbe4ddb10315479fc00086f08e25d968b4b43c49\/code\/game\/q_math.c#L560"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uE+Pq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": " I think we have different definitions of formalization.  Most places I've worked had a written coding standard, which can also define comment guidelines.  This can come from top down, of course, but it can also come bottom up from individual members of the team.  Large company wide coding standards should still accept feedback from individual ICs that bring up issues, and for things that are under-defined individual teams can define them for their codebase or use case if necessary. Defining \"what a good comment\" is in every code review on a case by case basis is not productive, although obviously in some cases it will need to be addressed.  I don't feel like I'm advocating for anything unusual. Written coding standards, document your code, a linter.\n\nI'm just going to accept I'm an outlier here and that might be due to social, cultural, or experiential bias.  I've never had an issue with an organizational coding standards but have had issues with individual coders in code reviews.  I know you're advocated that unified coding style is overrated (another thing I disagree with :)), but even in that case, if one person is following a good practice, but the rest of the team isn't, shouldn't that be shared and adopted across the team?\n\nSlightly related, in this talk about rendering architecture at Activision (really Call of Duty engine), the CTO Michael Vance talks about documenting code ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/9ublsQNbv6I?t=647"
                            },
                            {
                                "type": "text",
                                "text": ").  This was a large code base that had very few comments and even deleted John Carmack's famous Q_rsqrt comment ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/id-Software\/Quake-III-Arena\/blob\/dbe4ddb10315479fc00086f08e25d968b4b43c49\/code\/game\/q_math.c#L560"
                            },
                            {
                                "type": "text",
                                "text": ") , but very detailed  comment history.  It's possible that widely used tools (Git, GitHub) make this style of documentation difficult to work with, but I enjoyed it with Peforce.  That's a small sample of how my career has biased my opinions on these things.  So, yes it sucks that you have had leadership that forced formal processes on you that didn't work, but my experience has been the opposite, I've experienced more challenges with peer to peer interactions than with company or team wide process."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1636486567.083100",
        "client_msg_id": "08613b5e-4115-4573-9e65-f64bb0471ef5",
        "text": "That talk on rendering architecture is really good, btw",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qBhJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That talk on rendering architecture is really good, btw"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1636492092.083300",
        "client_msg_id": "f8a51a31-a9a9-4f8c-bee9-2288bde5b296",
        "text": "Btw, I'm literally saying having a guide like this <https:\/\/google.github.io\/styleguide\/cppguide.html#Comments> will save people a lot of time and headache especially in a large codebase",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TSn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Btw, I'm literally saying having a guide like this "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/google.github.io\/styleguide\/cppguide.html#Comments"
                            },
                            {
                                "type": "text",
                                "text": " will save people a lot of time and headache especially in a large codebase"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1636492127.083500",
        "client_msg_id": "5c468144-8e06-46ef-aec5-1794b6453d65",
        "text": "it doesn't need to solve all edge cases",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Dc\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it doesn't need to solve all edge cases"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1636499270.083700",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1636499509.000000"
        },
        "client_msg_id": "f22dd041-8a3d-4102-8e4c-08acd3626704",
        "text": "<@UBSMEUXAA> I really liked your comments yesterday, but your example today of Google's style guide has always felt to me like a case where formalization is misplaced. It's just so focused on nitty-gritty. I really got radicalized against style guides by my time at Google, where I consistently found engineers falling into two traps:\n• Assuming that code was well-architected just because it satisfied the style guide. Style guides were meant to focus code review. In practice they provided cover for rubber-stamping. They also short-circuited critical thinking. (How could my code possibly be good, if it violated the style guide?)\n• More subtly, thinking of code as an asset rather than a liability, so that it felt better to have more of it.\nOf course, Google has more fundamental issues of incentives, so it's hard to blame the style guide too much. Perhaps it was just the sharp end of the spear for many of my worst interactions. I'll just suggest that style guides become counter-productive when they outlive their creators. We were living in a world of received wisdom without the means to change it. That sense of disempowerment is far more important than any benefits in consistent code style.\n\nBringing it back to my original point, these recommendations are highly situational. I find it impossible to recommend practices in all situations. All I can do is recommend you minimize scale. Because then at least you have a chance at a coherent good\/bad evaluation for everyone in a specific situation.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7i3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBSMEUXAA"
                            },
                            {
                                "type": "text",
                                "text": " I really liked your comments yesterday, but your example today of Google's style guide has always felt to me like a case where formalization is misplaced. It's just so focused on nitty-gritty. I really got radicalized against style guides by my time at Google, where I consistently found engineers falling into two traps:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Assuming that code was well-architected just because it satisfied the style guide. Style guides were meant to focus code review. In practice they provided cover for rubber-stamping. They also short-circuited critical thinking. (How could my code possibly be good, if it violated the style guide?)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "More subtly, thinking of code as an asset rather than a liability, so that it felt better to have more of it."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nOf course, Google has more fundamental issues of incentives, so it's hard to blame the style guide too much. Perhaps it was just the sharp end of the spear for many of my worst interactions. I'll just suggest that style guides become counter-productive when they outlive their creators. We were living in a world of received wisdom without the means to change it. That sense of disempowerment is far more important than any benefits in consistent code style.\n\nBringing it back to my original point, these recommendations are highly situational. I find it impossible to recommend practices in all situations. All I can do is recommend you minimize scale. Because then at least you have a chance at a coherent good\/bad evaluation for everyone in a specific situation."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1636499805.084200",
        "client_msg_id": "89b9b35f-0fa9-420a-8abc-349443028b99",
        "text": "<@UCUSW7WVD> both of those are real issues. I did not think of the a style guide encouraging those behaviors, but more of a way to get past (most) questions that may come down to opinion in reviews and focus on architecture and the problem the code is solving",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hUo5d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " both of those are real issues. I did not think of the a style guide encouraging those behaviors, but more of a way to get past (most) questions that may come down to opinion in reviews and focus on architecture and the problem the code is solving"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1636506217.084400",
        "client_msg_id": "7208710d-ad0f-46f6-bb71-fc1e23c77182",
        "text": "<@UBSMEUXAA>\n\n&gt;  I think we have different definitions of formalization.\nYour definition is exactly what I’m talking about. I’ll start here with the meta point and get back to the code\/comment standards more directly in a second.\n\n\n&gt; This can come from top down, of course, but it can also come bottom up from individual members of the team.  Large company wide coding standards should still accept feedback from individual ICs that bring up issues, and for things that are under-defined individual teams can define them for their codebase or use case if necessary... So, yes it sucks that you have had leadership that forced formal processes on you that didn’t work, but my experience has been the opposite, I’ve experienced more challenges with peer to peer interactions than with company or team wide process.\n\nWhat you are saying here is exactly how I’ve seen it done too. It has not been the case that leadership forced formal processes that didn’t work. They were all ICs who made these standards. But typically they were more senior engineers\/architects. I’d imagine that is fairly standard.\n\nAnd it might sound crazy, but I think these are major problem. First, power isn’t about leadership or non-leadership. People can have power over you without being above you. The people who put these coding standards in place are deciding how you ought to work. Perhaps they are right, this standard is good, or at least good enough. But what does that matter?\n\nWhat problem are we trying to solve by forcing people to cohere to a certain standard? Are we trying to, stop that person who leaves rants in code? Are we trying to stop the annoying code reviewer who nitpicks every little thing? If so, those are great goals with a bad fix.\n\nChanging the rules isn’t fixing the problem. Those people still have those bad beliefs that cause them to want to have that behavior. If there is someone leaving rants in code that are disrespectful, shouldn’t some one talk to them?\n\nT.S. Eliot wrote some very poignant lines about this about people who\n\n\n&gt; constantly try to escape\n&gt; From the darkness outside and within\n&gt; By dreaming of systems so perfect that no one will need to be good.\nWe do precisely this constantly. Make system so that people don’t have to be virtuous. People don’t have to have informed opinions, they just have to follow the rules.\n\nI think this impulse is one of the ways we have stopped engineers from thinking. It is one of the ways we prevent people from taking rational approaches to their opinions on things like commenting. (And by rational, I mean a process that involves reasons, not that the outcome is correct. You can be rational while being completely wrong and vice versa.)\n\nQuickly skimming the c++ style guide you linked, it seems like a sensible set of advice. Nothing too objectionable there. If a team of peers wants to say, “we are going to try to follow this”, great! But what I see lacking there is why. For example:\n\n&gt; Function comments should be written with an implied subject of This function and should start with the verb phrase; for example, “Opens the file”, rather than “Open the file”. \nI can imagine reasons why you might want to make this a rule. Let’s say you are making comments for some sdk to be used by the public, that seems like a sensible bit of consistency you might care about. But this style guide is completely void of that context, it gives no reason why at all.\n\n\nSo, to summarize. I have no problem with linters. I have no problem with style guides. I have no problem with documenting code. I have trouble with imposition. It is more important to me that people come to considered, rational opinions. Imposition does not produce that.\n\nTo highlight this, let me get back to the main topic more directly.\n\n&gt; if one person is following a good practice, but the rest of the team isn’t, shouldn’t that be shared and adopted across the team\nYes. It should definitely be adopted, but only if the team is convinced. Only if the team believes that this is the better way forward. Even if it is a fact that this practice is good, just adopting it by fiat does not accomplish my goals.\n\nSidenote: I do like the commit message style of expressive documentation. I do that myself quite often. Even if I don’t know that people see it or not, it has helped clarify things for myself, even has helped me discover bugs.\n\n\nI’ll take a guess as to what the disagreement is here. I don’t think we’d actually disagree much in practice when it came time for code review. I’m not for long ranting comments. I’m not for nitpicking things. I try to stick with the standard formatting and styles of a community (depends on the language and code base). I agree that code review should transcend style and should “focus on architecture and the problem the code is solving”.\n\nWhat I think we are disagreeing on is he end goal. I really don’t care about productivity. I don’t care about efficiency. I don’t care about consistency.\n\nI care that programmers are getting to express themselves. That they are learning. That they are thinking through things. That they are building things that aren’t a pain for others. That they aren’t imposing on others. That they are grounded in the concrete situation of the codebase, the system, and the world around them. That they are building a theory (see Peter Naur’s Programming as Theory Building).\n\nThese imposition of things like comment and coding style are admittedly small things. They are not a hill I die on. But to me the are emblematic of these larger issues.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bsOf2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBSMEUXAA"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " I think we have different definitions of formalization."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nYour definition is exactly what I’m talking about. I’ll start here with the meta point and get back to the code\/comment standards more directly in a second.\n\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This can come from top down, of course, but it can also come bottom up from individual members of the team.  Large company wide coding standards should still accept feedback from individual ICs that bring up issues, and for things that are under-defined individual teams can define them for their codebase or use case if necessary... So, yes it sucks that you have had leadership that forced formal processes on you that didn’t work, but my experience has been the opposite, I’ve experienced more challenges with peer to peer interactions than with company or team wide process."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nWhat you are saying here is exactly how I’ve seen it done too. It has not been the case that leadership forced formal processes that didn’t work. They were all ICs who made these standards. But typically they were more senior engineers\/architects. I’d imagine that is fairly standard.\n\nAnd it might sound crazy, but I think these are major problem. First, power isn’t about leadership or non-leadership. People can have power over you without being above you. The people who put these coding standards in place are deciding how you ought to work. Perhaps they are right, this standard is good, or at least good enough. But what does that matter?\n\nWhat problem are we trying to solve by forcing people to cohere to a certain standard? Are we trying to, stop that person who leaves rants in code? Are we trying to stop the annoying code reviewer who nitpicks every little thing? If so, those are great goals with a bad fix.\n\nChanging the rules isn’t fixing the problem. Those people still have those bad beliefs that cause them to want to have that behavior. If there is someone leaving rants in code that are disrespectful, shouldn’t some one talk to them?\n\nT.S. Eliot wrote some very poignant lines about this about people who\n\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "constantly try to escape\nFrom the darkness outside and within\nBy dreaming of systems so perfect that no one will need to be good."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nWe do precisely this constantly. Make system so that people don’t have to be virtuous. People don’t have to have informed opinions, they just have to follow the rules.\n\nI think this impulse is one of the ways we have stopped engineers from thinking. It is one of the ways we prevent people from taking rational approaches to their opinions on things like commenting. (And by rational, I mean a process that involves reasons, not that the outcome is correct. You can be rational while being completely wrong and vice versa.)\n\nQuickly skimming the c++ style guide you linked, it seems like a sensible set of advice. Nothing too objectionable there. If a team of peers wants to say, “we are going to try to follow this”, great! But what I see lacking there is why. For example:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Function comments should be written with an implied subject of This function and should start with the verb phrase; for example, “Opens the file”, rather than “Open the file”. "
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI can imagine reasons why you might want to make this a rule. Let’s say you are making comments for some sdk to be used by the public, that seems like a sensible bit of consistency you might care about. But this style guide is completely void of that context, it gives no reason why at all.\n\n\nSo, to summarize. I have no problem with linters. I have no problem with style guides. I have no problem with documenting code. I have trouble with imposition. It is more important to me that people come to considered, rational opinions. Imposition does not produce that.\n\nTo highlight this, let me get back to the main topic more directly.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if one person is following a good practice, but the rest of the team isn’t, shouldn’t that be shared and adopted across the team"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nYes. It should definitely be adopted, but only if the team is convinced. Only if the team believes that this is the better way forward. Even if it is a fact that this practice is good, just adopting it by fiat does not accomplish my goals.\n\nSidenote: I do like the commit message style of expressive documentation. I do that myself quite often. Even if I don’t know that people see it or not, it has helped clarify things for myself, even has helped me discover bugs.\n\n\nI’ll take a guess as to what the disagreement is here. I don’t think we’d actually disagree much in practice when it came time for code review. I’m not for long ranting comments. I’m not for nitpicking things. I try to stick with the standard formatting and styles of a community (depends on the language and code base). I agree that code review should transcend style and should “focus on architecture and the problem the code is solving”.\n\nWhat I think we are disagreeing on is he end goal. I really don’t care about productivity. I don’t care about efficiency. I don’t care about consistency.\n\nI care that programmers are getting to express themselves. That they are learning. That they are thinking through things. That they are building things that aren’t a pain for others. That they aren’t imposing on others. That they are grounded in the concrete situation of the codebase, the system, and the world around them. That they are building a theory (see Peter Naur’s Programming as Theory Building).\n\nThese imposition of things like comment and coding style are admittedly small things. They are not a hill I die on. But to me the are emblematic of these larger issues."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1636507029.084700",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1636507595.000000"
        },
        "client_msg_id": "8cb1b612-eb7b-4760-9323-3d5ea903aeee",
        "text": "That Elliott quote is great, as is the point about recording why. Style guides are a hill worth dying on precisely because they're emblematic of larger issues.\n\nA rule that isn't owned by somebody who encourages debate about it (debate that comes from shared goals about getting something done, not for its own sake) is organizational debt, analogous to tech debt. (Where goals are not shared, there be the dragons. Hard problems nobody seems to have good answers for today, as far as I can tell.)\n\nEven though we're well past the age of the organization man, the best organizations grow people. You can't grow people without letting them repeat mistakes. Doing this safely without killing the org, that's the whole game. Rigid rules that prevent learning are clueless, like trying to eradicate wild fires.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lMP5=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That Elliott quote is great, as is the point about recording why. Style guides are a hill worth dying on precisely because they're emblematic of larger issues.\n\nA rule that isn't owned by somebody who encourages debate about it (debate that comes from shared goals about getting something done, not for its own sake) is organizational debt, analogous to tech debt. (Where goals are not shared, there be the dragons. Hard problems nobody seems to have good answers for today, as far as I can tell.)\n\nEven though we're well past the age of the organization man, the best organizations grow people. You can't grow people without letting them repeat mistakes. Doing this safely without killing the org, that's the whole game. Rigid rules that prevent learning are clueless, like trying to eradicate wild fires."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1636507653.085000",
        "client_msg_id": "81cb449b-4148-4a95-8652-77c64723b9bf",
        "text": "So I guess the difference is I don't see it as leads\/seniors forcing everyone else to there standards. I still see it as a collaborative effort but an upfront conversation including all of the team rather than a . Some people will lose out sure, but doing it ad-hoc in code reviews tends to lead to inconsistent direction based on who your reviewer is and can actually be conflicting. Imagine as a junior engineer if one senior engineer tells you \"code should be self documenting, name your function better and remove that comment\" and in your next review (maybe in the same code!) another senior engineer tells you \"you should always comment your code, write why you wrote  this\".  I think the core difference here is seeing any kind of agreed upon standard as not being able to express yourself (heard that before) vs not having a standard as a way to foster bullying, toxicity or confusion in reviews",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+kj\/6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So I guess the difference is I don't see it as leads\/seniors forcing everyone else to there standards. I still see it as a collaborative effort but an upfront conversation including all of the team rather than a . Some people will lose out sure, but doing it ad-hoc in code reviews tends to lead to inconsistent direction based on who your reviewer is and can actually be conflicting. Imagine as a junior engineer if one senior engineer tells you \"code should be self documenting, name your function better and remove that comment\" and in your next review (maybe in the same code!) another senior engineer tells you \"you should always comment your code, write why you wrote  this\".  I think the core difference here is seeing any kind of agreed upon standard as not being able to express yourself (heard that before) vs not having a standard as a way to foster bullying, toxicity or confusion in reviews"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1636507698.085200",
        "client_msg_id": "5c6488be-903e-4c05-9dae-cf764ce0d498",
        "text": "I don't know we're kind of going around in circles and you keep telling me we agree but I'm wrong?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jnw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't know we're kind of going around in circles and you keep telling me we agree but I'm wrong?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1636507728.085400",
        "client_msg_id": "1173b2cd-2946-4551-9974-911e7d404932",
        "text": "I don't think a coding standard prevents learning (it might actually encourage it!) But that's me I guess",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O7Pz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't think a coding standard prevents learning (it might actually encourage it!) But that's me I guess"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1636507888.085600",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1636508112.000000"
        },
        "client_msg_id": "211d4ed2-fc2f-4ad2-8734-c977f21db149",
        "text": "I'm not saying we agree :stuck_out_tongue: I think you have half the story. But yeah, I'll shut up now. Clearly I have some scar tissue here, and this is possibly off topic for this forum..\n\nOh, one hopefully final edit: \"up front conversation with the whole team\" is :+1::skin-tone-3::+1::skin-tone-3: But that is not the state of the Google style guide.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Psqw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not saying we agree "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": " I think you have half the story. But yeah, I'll shut up now. Clearly I have some scar tissue here, and this is possibly off topic for this forum..\n\nOh, one hopefully final edit: \"up front conversation with the whole team\" is "
                            },
                            {
                                "type": "emoji",
                                "name": "+1",
                                "unicode": "1f44d-1f3fc",
                                "skin_tone": 3
                            },
                            {
                                "type": "emoji",
                                "name": "+1",
                                "unicode": "1f44d-1f3fc",
                                "skin_tone": 3
                            },
                            {
                                "type": "text",
                                "text": " But that is not the state of the Google style guide."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1636508491.089900",
        "client_msg_id": "2549b29a-34d7-48cc-98a2-f2ac38ddb3ce",
        "text": "Are you also against languages with idiomatic styles and standard linters, or even having linters at all?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wtRYe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you also against languages with idiomatic styles and standard linters, or even having linters at all?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1636508501.090400",
        "client_msg_id": "5a199c1d-48f7-4c93-922d-694b06ed207f",
        "text": "Because that also limits expression",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZKo+L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Because that also limits expression"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1636508815.095300",
        "client_msg_id": "6844693d-a73c-423f-8d8c-1bac00c82746",
        "text": "Sorry to pile on 2 against 1, sometimes I don't know if you're asking me. But in case you are: I don't care too much about the \"expression\" framing. And yet, I hate Go :) Particularly the prohibition against unused variables.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TfLLb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry to pile on 2 against 1, sometimes I don't know if you're asking me. But in case you are: I don't care too much about the \"expression\" framing. And yet, I hate Go :) Particularly the prohibition against unused variables."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1636511995.103900",
        "edited": {
            "user": "UK3LH8CF5",
            "ts": "1636567863.000000"
        },
        "client_msg_id": "9E4E99E3-8DC1-4D94-BD3A-00848471F027",
        "text": "Not sure if the going in circles here was about me or Kartik. (or both) \n\nBut I don’t think inconsistent directions are bad. Yeah, absent any direction, encouragement, mentoring, etc a Junior Engineer being told conflicting things can be terrible. But my fix isn’t to stop the inconsistent direction, but rather to help the Junior Engineer understand why they are getting that inconsistent feedback. And what to do with it. If those engineers are trying to impose their view on that Junior engineer and block code review of silly matters of opinion, also go talk to them.\n\nI think both standards and non-standards can lead to bullying. I have seen both lead to bullying. I think that issue is completely orthogonal. We can stop bullying    by reforming bullies or getting rid of them. So maybe that is a point of disagreement.\n\nI definitely don’t think what I said is just about limiting expression. That is definitely one thing. But this of expression I’m talking about is different. I don’t think following a style guide or having a linter is an imposition on expression. My point about expression is about power and the ability for people in power limit discussion by imposing rules. Not that I want my code to look cool or do hacky things a linter would yell at me for.\n\nThis is about institutional structure not about how the code looks. \n\nYou said you don’t see it as lead\/seniors forcing everyone else. I do. I think that is our disagreement more than anything. I think people with more power than you declaring rules you must follow is not a good pattern to establish. You see it as a debate. I see it as an imposition. To me, debates are about each side learning, not declaring a winner and a loser. We can debate code style without having to make rules in the end. That is what I’m for.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RDb5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure if the going in circles here was about me or Kartik. (or both) \n\nBut I don’t think inconsistent directions are bad. Yeah, absent any direction, encouragement, mentoring, etc a Junior Engineer being told conflicting things can be terrible. But my fix isn’t to stop the inconsistent direction, but rather to help the Junior Engineer understand why they are getting that inconsistent feedback. And what to do with it. If those engineers are trying to impose their view on that Junior engineer and block code review of silly matters of opinion, also go talk to them.\n\nI think both standards and non-standards can lead to bullying. I have seen both lead to bullying. I think that issue is completely orthogonal. We can stop bullying    by reforming bullies or getting rid of them. So maybe that is a point of disagreement.\n\nI definitely don’t think what I said is just about limiting expression. That is definitely one thing. But this of expression I’m talking about is different. I don’t think following a style guide or having a linter is an imposition on expression. My point about expression is about power and the ability for people in power limit discussion by imposing rules. Not that I want my code to look cool or do hacky things a linter would yell at me for.\n\nThis is about institutional structure not about how the code looks. \n\nYou said you don’t see it as lead\/seniors forcing everyone else. I do. I think that is our disagreement more than anything. I think people with more power than you declaring rules you must follow is not a good pattern to establish. You see it as a debate. I see it as an imposition. To me, debates are about each side learning, not declaring a winner and a loser. We can debate code style without having to make rules in the end. That is what I’m for."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]