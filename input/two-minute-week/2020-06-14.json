[
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1592121236.479900",
        "client_msg_id": "B94569EA-A9AB-414D-B42C-888FC8FC4C82",
        "text": "Very cool progress! Your sound palette is really growing, very nice! Are you planning to make the graph editable either by live coding or visually editing it? ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592069654.474700",
        "parent_user_id": "UUQ2EQW21",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y\/NA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very cool progress! Your sound palette is really growing, very nice! Are you planning to make the graph editable either by live coding or visually editing it? "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1592122654.480600",
        "client_msg_id": "08bbb7f8-e66c-4123-93be-86f3237c06ec",
        "text": "By way of partial explanation, my code dumps a GraphViz output so I can visualize the graph.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592069654.474700",
        "parent_user_id": "UUQ2EQW21",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OkX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "By way of partial explanation, my code dumps a GraphViz output so I can visualize the graph."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1592122703.480800",
        "client_msg_id": "6229ce47-7e72-4484-95ad-f4a47897c6ac",
        "text": "In the image you can see the LFO connected up to (so far) 3 generators and the bitcrush effect.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592069654.474700",
        "parent_user_id": "UUQ2EQW21",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bEgQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the image you can see the LFO connected up to (so far) 3 generators and the bitcrush effect."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1592122846.481000",
        "client_msg_id": "fec01dd9-534f-4420-a439-b8f715d53473",
        "text": "So to answer <@UC2A2ARPT> question, there is no constraint with LFO's, except in how you wire them.  You could add more LFO nodes, and hook them into units as you see fit.\nI suppose there is the limitation that, for example, the Oscillator pitch can only be modified by 2 (3 if you include the combination) LFO waves.  I could certainly make the Oscillator take 'n' waves I guess - since I have the ability for pins that grow like arrays.  I just thought that this was probably enough for now.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592069654.474700",
        "parent_user_id": "UUQ2EQW21",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UdaL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So to answer "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " question, there is no constraint with LFO's, except in how you wire them.  You could add more LFO nodes, and hook them into units as you see fit.\nI suppose there is the limitation that, for example, the Oscillator pitch can only be modified by 2 (3 if you include the combination) LFO waves.  I could certainly make the Oscillator take 'n' waves I guess - since I have the ability for pins that grow like arrays.  I just thought that this was probably enough for now."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1592122947.481200",
        "client_msg_id": "815f8941-3b26-41e1-9778-9b71198b79f1",
        "text": "<@U0123H7JRDM> Scripting\/Live coding is the goal.  You can think of this as the visual result of your live code script.  But I haven't discounted the option of editing the graph.  You can see in one of my earlier videos that the canvas can be zoomed\/panned - so I'm thinking about this for the future.\nThis week I'm hoping to try some scripting.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592069654.474700",
        "parent_user_id": "UUQ2EQW21",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J4Xa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0123H7JRDM"
                            },
                            {
                                "type": "text",
                                "text": " Scripting\/Live coding is the goal.  You can think of this as the visual result of your live code script.  But I haven't discounted the option of editing the graph.  You can see in one of my earlier videos that the canvas can be zoomed\/panned - so I'm thinking about this for the future.\nThis week I'm hoping to try some scripting."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1592123336.481400",
        "client_msg_id": "d3bd9637-b2c7-4b74-be9c-2228cc64b8a0",
        "text": "<@UC2A2ARPT> Regarding the audio glitch, it hasn't totally gone away, but I believe I know what it is; it comes down to memory allocations happening when they shouldn't.  I will fix it soon.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592069654.474700",
        "parent_user_id": "UUQ2EQW21",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Ggac",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " Regarding the audio glitch, it hasn't totally gone away, but I believe I know what it is; it comes down to memory allocations happening when they shouldn't.  I will fix it soon."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1592134487.484700",
        "client_msg_id": "AC9A1155-636E-4D0A-9845-129B7FF180D2",
        "text": "That graphviz output is a nice feature. Is your graph currently already read from a file so that the needed node objects are created dynamically or is it being compiled beforehand?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592069654.474700",
        "parent_user_id": "UUQ2EQW21",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iNGYa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That graphviz output is a nice feature. Is your graph currently already read from a file so that the needed node objects are created dynamically or is it being compiled beforehand?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1592136009.484900",
        "edited": {
            "user": "UUQ2EQW21",
            "ts": "1592136015.000000"
        },
        "client_msg_id": "06809e2d-823c-45d4-a645-d03286b8162d",
        "text": "GraphViz is really trivial to output; I wrote an old post about it here: <https:\/\/chrismaughan.com\/blog\/coding\/2019_07_01_graphviz\/>\nCurrently there is simple c-like API to the graph, intended to be driven by a script.  Currently I just call it from C++, but I am adding a scheme layer to script it at the moment.  So creating it from a file will probably be more like running a script from a file; but it wouldn't be hard to do a file format too.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592069654.474700",
        "parent_user_id": "UUQ2EQW21",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "seY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "GraphViz is really trivial to output; I wrote an old post about it here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/chrismaughan.com\/blog\/coding\/2019_07_01_graphviz\/"
                            },
                            {
                                "type": "text",
                                "text": "\nCurrently there is simple c-like API to the graph, intended to be driven by a script.  Currently I just call it from C++, but I am adding a scheme layer to script it at the moment.  So creating it from a file will probably be more like running a script from a file; but it wouldn't be hard to do a file format too."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1592136083.485300",
        "client_msg_id": "73423074-cc26-4ae7-a697-cd9dbb4d8268",
        "text": "`(synth_def 'S1'`\n    `(node :instrument 'Instrument')`\n    `(node :pan 'Stereo')`\n    `(node :delay 'Delay')`\n    `(node :reverb 'Reverb')`\n    `(node :phaser 'Phaser')`\n    `(node :master 'Master')`\n    `(node :analyser 'Analyser')`\n    `(node :mixer 'DownMix')`\n    `(node :bitcrush 'Bitcrush')`\n    `(node :fm_osc 'Modulator')`\n    `(node :fm_osc 'Carrier')`\n    `(node :fm_osc 'Modulator')`\n    `(node :fm_osc 'Carrier')`\n    `(node :fm_osc 'Modulator')`\n    `(node :fm_osc 'Carrier')`\n    `(control 'Instrument' 'Modulator')`\n    `(control 'Instrument' 'Modulator')`\n    `(control 'Instrument' 'Carrier')`\n    `(control 'Instrument' 'Modulator')`\n    `(control 'Instrument' 'Carrier')`\n    `(control 'Instrument' 'Carrier')`\n    `(flow 'Stereo' 'Phaser')`\n    `(flow 'Delay' 'Reverb')`\n    `(flow 'Reverb' 'Master')`\n    `(flow 'Phaser' 'Delay')`\n    `(flow 'Master' 'Analyser')`\n    `(flow 'DownMix' 'Bitcrush')`\n    `(flow 'Bitcrush' 'Stereo')`\n`)`",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592069654.474700",
        "parent_user_id": "UUQ2EQW21",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RQSQD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(synth_def 'S1'",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (node :instrument 'Instrument')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (node :pan 'Stereo')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (node :delay 'Delay')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (node :reverb 'Reverb')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (node :phaser 'Phaser')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (node :master 'Master')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (node :analyser 'Analyser')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (node :mixer 'DownMix')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (node :bitcrush 'Bitcrush')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (node :fm_osc 'Modulator')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (node :fm_osc 'Carrier')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (node :fm_osc 'Modulator')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (node :fm_osc 'Carrier')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (node :fm_osc 'Modulator')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (node :fm_osc 'Carrier')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (control 'Instrument' 'Modulator')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (control 'Instrument' 'Modulator')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (control 'Instrument' 'Carrier')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (control 'Instrument' 'Modulator')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (control 'Instrument' 'Carrier')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (control 'Instrument' 'Carrier')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (flow 'Stereo' 'Phaser')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (flow 'Delay' 'Reverb')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (flow 'Reverb' 'Master')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (flow 'Phaser' 'Delay')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (flow 'Master' 'Analyser')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (flow 'DownMix' 'Bitcrush')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    (flow 'Bitcrush' 'Stereo')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": ")",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1592136112.485500",
        "client_msg_id": "96256a7c-42fb-4f36-90b1-1c788c6386e9",
        "text": "Oh, and I actually dump a scheme-like data structure in the debugger for how the graph looks.. There it is ^",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592069654.474700",
        "parent_user_id": "UUQ2EQW21",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R1Sv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh, and I actually dump a scheme-like data structure in the debugger for how the graph looks.. There it is ^"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1592141182.488000",
        "client_msg_id": "eb86e6ff-6ad6-40b3-b66a-8dc3745e2090",
        "text": "Two paragraph update: I released instadeq beta last wednesday, I've worked a lot the last 3 weeks but since it's polishing, bug fixing and making it usable to end users I didn't know what to show, I tried doing some \"speed runs\" but they were all over 2 minutes so I scrapped that idea.\n\nI get the feeling that now I \"sold to the mainstream\" from this community's perspective.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592141182.488000",
        "reply_count": 11,
        "reply_users_count": 5,
        "latest_reply": "1592230350.494700",
        "reply_users": [
            "UEQ6M68H0",
            "UBN9AFS0N",
            "UUQ2EQW21",
            "UC2A2ARPT",
            "UCUSW7WVD"
        ],
        "replies": [
            {
                "user": "UEQ6M68H0",
                "ts": "1592158532.488200"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1592162638.488400"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1592164481.488600"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1592164550.488800"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1592164739.489000"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1592164830.489200"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1592171229.489700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1592171387.489900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1592177284.491000"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1592211154.494000"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1592230350.494700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RVdFi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Two paragraph update: I released instadeq beta last wednesday, I've worked a lot the last 3 weeks but since it's polishing, bug fixing and making it usable to end users I didn't know what to show, I tried doing some \"speed runs\" but they were all over 2 minutes so I scrapped that idea.\n\nI get the feeling that now I \"sold to the mainstream\" from this community's perspective."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "U0123H7JRDM",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1592158532.488200",
        "client_msg_id": "db0a5fe1-deab-43c7-90a0-901b66219e94",
        "text": "i don't think you have sold to the mainstream. Instadeq is quite unlike most of the other projects. Why do you have this opinion? I find most of the people on this group to be so busy building their own inventions they don't have but a few minutes to devote to studying the competition.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592141182.488000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LyY3Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i don't think you have sold to the mainstream. Instadeq is quite unlike most of the other projects. Why do you have this opinion? I find most of the people on this group to be so busy building their own inventions they don't have but a few minutes to devote to studying the competition."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1592162638.488400",
        "client_msg_id": "4f6d10f4-012c-4f5e-bc1f-7486e850bb4e",
        "text": "I haven't seen much discussion about \"crossing the chasm\" from prototype to production\/adoption and viable business models as I've seen discussions about the really early stages of development. That gives me the idea that many are interested mostly in the ideas and expect \"if I build it they will come\" to work for them. Beads is an outlier as I can picture it being used for \"real stuff\" in the short term.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592141182.488000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L0j8E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven't seen much discussion about \"crossing the chasm\" from prototype to production\/adoption and viable business models as I've seen discussions about the really early stages of development. That gives me the idea that many are interested mostly in the ideas and expect \"if I build it they will come\" to work for them. Beads is an outlier as I can picture it being used for \"real stuff\" in the short term."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1592164481.488600",
        "client_msg_id": "76e371c5-81ea-41d2-b54d-7cb96f431dd4",
        "text": "<@UEQ6M68H0> - Two comments, firstly; I have long lists of links to live coding tools and projects, and I have played with many of them.  So from my POV, I have studied the 'competition' extensively.  Secondly, I don't really think about 'competition' in that sense.  What I'm building is something that I want to use, which fills the holes I perceive in the other tools.  As <@UBN9AFS0N> says, I hope that if I build it they will come, but I don't have financial gain in mind; just the possibility that people might help build my passion project....",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592141182.488000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cZTwb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " - Two comments, firstly; I have long lists of links to live coding tools and projects, and I have played with many of them.  So from my POV, I have studied the 'competition' extensively.  Secondly, I don't really think about 'competition' in that sense.  What I'm building is something that I want to use, which fills the holes I perceive in the other tools.  As "
                            },
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " says, I hope that if I build it they will come, but I don't have financial gain in mind; just the possibility that people might help build my passion project...."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1592164550.488800",
        "client_msg_id": "c24eeaae-19f7-4c86-8f12-01987293be22",
        "text": "It might be an interesting poll to know who is building tools for business\/profit reasons vs for fun\/interest. I suspect on this group at least the balance is more firmly in the second category.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592141182.488000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n1n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It might be an interesting poll to know who is building tools for business\/profit reasons vs for fun\/interest. I suspect on this group at least the balance is more firmly in the second category."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1592164739.489000",
        "client_msg_id": "49064bd6-30eb-4505-9b0e-acbb9e911bef",
        "text": "there's a third case that is not necessarily for business\/profit but close, which is to democratize\/simplify programming, but to achieve that you must achieve almost the same objectives as the business\/profit group but without the benefit of being able to sustain its development",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592141182.488000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j7s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there's a third case that is not necessarily for business\/profit but close, which is to democratize\/simplify programming, but to achieve that you must achieve almost the same objectives as the business\/profit group but without the benefit of being able to sustain its development"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1592164830.489200",
        "client_msg_id": "bba4197f-8fee-4d5d-98b5-a664251c3917",
        "text": "that means it's more ambitious but even harder, I would love to be able to give away instadeq for free, but I have yet to find a way to do that and sustain myself even with a fraction of the income I could be getting working for any software company",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592141182.488000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6T2dY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that means it's more ambitious but even harder, I would love to be able to give away instadeq for free, but I have yet to find a way to do that and sustain myself even with a fraction of the income I could be getting working for any software company"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1592171229.489700",
        "client_msg_id": "1c91a20f-a292-4bc5-b2a0-4ee0ea07f438",
        "text": "<@UUQ2EQW21> — We <https:\/\/futureofcoding.org\/episodes\/046#question-twelve-are-you-currently-working-on-any-future-of-coding-projects-yourself|covered that> (sort of) in the 2020 Community Survey. There have also been some polls about this here in the past, but AFAICT they're now cloaked behind the slack history fog.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592141182.488000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E8=O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUQ2EQW21"
                            },
                            {
                                "type": "text",
                                "text": " — We "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.org\/episodes\/046#question-twelve-are-you-currently-working-on-any-future-of-coding-projects-yourself",
                                "text": "covered that"
                            },
                            {
                                "type": "text",
                                "text": " (sort of) in the 2020 Community Survey. There have also been some polls about this here in the past, but AFAICT they're now cloaked behind the slack history fog."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1592171387.489900",
        "client_msg_id": "24df822f-17e6-4f31-90b3-082c903d8b0a",
        "text": "<@UBN9AFS0N> — futurists gotta eat too! Cheers on the beta release!\n\nIt might earn a few _Hey!!_ objections if I said so out loud, but I think this sort of a \"two [small] paragraph update\" was a fine substitute for a video.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592141182.488000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F2qNw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " — futurists gotta eat too! Cheers on the beta release!\n\nIt might earn a few "
                            },
                            {
                                "type": "text",
                                "text": "Hey!!",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " objections if I said so out loud, but I think this sort of a \"two [small] paragraph update\" was a fine substitute for a video."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1592174217.490500",
        "client_msg_id": "16230ba3-1551-49a9-b28d-cabd6a21f173",
        "text": "Definitions appearing after usage reminds me a bit of the original literate programming, where it's important that the source code be free to occur in whatever order best fit the explanation around it.\n\nHow does your approach to out-of-order compilation interact with other language features, like error handling or polymorphism or extension (if you have those)? Eg: what happens if you've used a field that doesn't appear in the type definition? How do you do namespacing without modules?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591570004.468100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iX75d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Definitions appearing after usage reminds me a bit of the original literate programming, where it's important that the source code be free to occur in whatever order best fit the explanation around it.\n\nHow does your approach to out-of-order compilation interact with other language features, like error handling or polymorphism or extension (if you have those)? Eg: what happens if you've used a field that doesn't appear in the type definition? How do you do namespacing without modules?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1592174280.490700",
        "client_msg_id": "019727eb-45b3-4c5f-92ac-f429ecf6dfdc",
        "text": "(I imagine some of these questions are irrelevant given the design of Mu, but I don't know enough about the design of Mu to know that I'm being a total noob about it :P)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591570004.468100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8kDsm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(I imagine some of these questions are irrelevant given the design of Mu, but I don't know enough about the design of Mu to know that I'm being a total noob about it :P)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1592177284.491000",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1592178256.000000"
        },
        "client_msg_id": "27a24aae-158d-406a-9386-feb135197b59",
        "text": "_Hey!!_ :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592141182.488000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6YJ2f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey!!",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "sob",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1592179372.491500",
        "client_msg_id": "f1b1a600-d256-4bc1-927f-ed70a3f1960e",
        "text": "Yeah, Mu doesn't have namespaces, anything dynamic like `method_missing` (did I understand \"error handling\" right?) or open types. It's fairly unambitious as a language; all the attention has gone to bootstrapping the implementation out of machine code.\n\nBut your concrete question is quite acute. \"What happens if you've used a field that doesn't appear in the type definition?\" I hadn't thought of it yet when I made the video. It only occurred to me in the past week. I now raise an error if a type definition failed to reconcile some field from earlier. But it's a fairly klunky error message; it just says, \"you used field `x` but it doesn't exist.\" It can't give the line or even function that used `x`. Providing such errors is going to complicate the implementation quite a bit, needing to attach source info to uses of fields in types. But I _did_ stake out a position in my paper as being all about the quality of error messages. This whole thing is now making me quite unhappy. Perhaps I'll toss out this flexibility after all.\n\nFunny story: the previous prototype of Mu (a tree-walking interpreter) _did_ have support for literate programming. (And function overloading, and generics, none of which are in the current prototype.) I hadn't connected the dots to think of this as a particularly Literate feature. That might be a good justification to take it out. Thanks!\n\n_The reason Mu doesn't have LP anymore_: I was fine encouraging hunks to refer to local variables that were in the same scope but far away in some other part of the description. However, the way Mu now exposes and requires using registers, hunks can now _destroy_ local variables far away in the same scope (that happen to share the same register). That feels too mind-bending.\n\nThen again, maybe I should allow _shadowing_. So you can't insert naked statements using Literate directives, only blocks. Hmm, that could work. (If I can get the error messages good enough.) Thanks!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591570004.468100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tCz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, Mu doesn't have namespaces, anything dynamic like "
                            },
                            {
                                "type": "text",
                                "text": "method_missing",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (did I understand \"error handling\" right?) or open types. It's fairly unambitious as a language; all the attention has gone to bootstrapping the implementation out of machine code.\n\nBut your concrete question is quite acute. \"What happens if you've used a field that doesn't appear in the type definition?\" I hadn't thought of it yet when I made the video. It only occurred to me in the past week. I now raise an error if a type definition failed to reconcile some field from earlier. But it's a fairly klunky error message; it just says, \"you used field "
                            },
                            {
                                "type": "text",
                                "text": "x",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " but it doesn't exist.\" It can't give the line or even function that used "
                            },
                            {
                                "type": "text",
                                "text": "x",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Providing such errors is going to complicate the implementation quite a bit, needing to attach source info to uses of fields in types. But I "
                            },
                            {
                                "type": "text",
                                "text": "did",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " stake out a position in my paper as being all about the quality of error messages. This whole thing is now making me quite unhappy. Perhaps I'll toss out this flexibility after all.\n\nFunny story: the previous prototype of Mu (a tree-walking interpreter) "
                            },
                            {
                                "type": "text",
                                "text": "did",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " have support for literate programming. (And function overloading, and generics, none of which are in the current prototype.) I hadn't connected the dots to think of this as a particularly Literate feature. That might be a good justification to take it out. Thanks!\n\n"
                            },
                            {
                                "type": "text",
                                "text": "The reason Mu doesn't have LP anymore",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": I was fine encouraging hunks to refer to local variables that were in the same scope but far away in some other part of the description. However, the way Mu now exposes and requires using registers, hunks can now "
                            },
                            {
                                "type": "text",
                                "text": "destroy",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " local variables far away in the same scope (that happen to share the same register). That feels too mind-bending.\n\nThen again, maybe I should allow "
                            },
                            {
                                "type": "text",
                                "text": "shadowing",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". So you can't insert naked statements using Literate directives, only blocks. Hmm, that could work. (If I can get the error messages good enough.) Thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1592180740.491700",
        "client_msg_id": "515318c7-985f-4c61-b46b-23aff2b79e9a",
        "text": "I'm growing aware of a major inconsistency in my belief system. On the one hand I'm constantly pushing for programs in a system to be aware of their dependencies. However, I also dislike modules and namespaces and the need in general to micromanage dependencies in the small within a single program, to manually provide information that a compiler could just deduce.\n\nPerhaps this is a contradiction, and I need to give up opinions that made sense in the context of a highly dynamic, high-level, expressive Lisp dialect. Perhaps a low-level language built in machine code should throw up its hands and require the programmer to do a little more work.\n\nOn the other hand, perhaps this is a _paradox_, and what the two positions share is a desire for parsimonious dependencies. Tools to specify dependencies within a project tend to encourage larger projects with more code. Mu lacks modules for the same reason Mu lacks packages and will never have a package manager.\n\nReader, please let the author know what you think of this precious-snowflake navel-gazing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591570004.468100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kTS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm growing aware of a major inconsistency in my belief system. On the one hand I'm constantly pushing for programs in a system to be aware of their dependencies. However, I also dislike modules and namespaces and the need in general to micromanage dependencies in the small within a single program, to manually provide information that a compiler could just deduce.\n\nPerhaps this is a contradiction, and I need to give up opinions that made sense in the context of a highly dynamic, high-level, expressive Lisp dialect. Perhaps a low-level language built in machine code should throw up its hands and require the programmer to do a little more work.\n\nOn the other hand, perhaps this is a "
                            },
                            {
                                "type": "text",
                                "text": "paradox",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and what the two positions share is a desire for parsimonious dependencies. Tools to specify dependencies within a project tend to encourage larger projects with more code. Mu lacks modules for the same reason Mu lacks packages and will never have a package manager.\n\nReader, please let the author know what you think of this precious-snowflake navel-gazing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1592188455.491900",
        "client_msg_id": "5aad861c-cab7-4e9c-82a5-3dec50bb5bc7",
        "text": "&gt; I hadn't connected the dots to think of this as a particularly Literate feature. That might be a good justification to take it out. Thanks!\nYou troll!\n\n&gt; Reader, please let the author know what you think of this precious-snowflake navel-gazing.\nI think you have some tough decisions ahead of you.\n\n&gt; Then again, maybe I should allow _shadowing_.\nIs Mu aimed at beginners? If so, be careful about shadowing. In my experience every new programmer steps on that nail, and I've known some who were then scared away from taking advantage of it for evermore. (Example of the nail: top-level variables can be shadowed, struct members can't, but you often assign to both in the same way.)\n\n&gt; Perhaps a low-level language built in machine code should throw up its hands and require the programmer to do a little more work.\nThat could be a worthwhile bunt for the time being, and you could come back to this in the future.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591570004.468100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BMy5D",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I hadn't connected the dots to think of this as a particularly Literate feature. That might be a good justification to take it out. Thanks!"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nYou troll!\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reader, please let the author know what you think of this precious-snowflake navel-gazing."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI think you have some tough decisions ahead of you.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Then again, maybe I should allow "
                            },
                            {
                                "type": "text",
                                "text": "shadowing",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIs Mu aimed at beginners? If so, be careful about shadowing. In my experience every new programmer steps on that nail, and I've known some who were then scared away from taking advantage of it for evermore. (Example of the nail: top-level variables can be shadowed, struct members can't, but you often assign to both in the same way.)\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Perhaps a low-level language built in machine code should throw up its hands and require the programmer to do a little more work."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThat could be a worthwhile bunt for the time being, and you could come back to this in the future."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1592192558.492200",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1592192807.000000"
        },
        "client_msg_id": "6b7fa9fc-272c-4088-be17-535ccde24d35",
        "text": "I'd _almost_ made up my mind in the same direction. Then I remembered that I plan a type-checking pass anyway. It'll be some redundant work then, but not more complex. Best of both worlds.\n\nAll problems can be solved with an extra pass.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591570004.468100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l=Y+Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd "
                            },
                            {
                                "type": "text",
                                "text": "almost",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " made up my mind in the same direction. Then I remembered that I plan a type-checking pass anyway. It'll be some redundant work then, but not more complex. Best of both worlds.\n\nAll problems can be solved with an extra pass."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1592192786.492500",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1592192820.000000"
        },
        "client_msg_id": "f4124041-b66a-496f-a679-a9fd06e129b4",
        "text": "Still no Literate Programming :+1: Mu _does_ have shadowing, though. Your example of struct members is interesting :thinking_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591570004.468100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dI8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Still no Literate Programming "
                            },
                            {
                                "type": "emoji",
                                "name": "+1",
                                "unicode": "1f44d"
                            },
                            {
                                "type": "text",
                                "text": " Mu "
                            },
                            {
                                "type": "text",
                                "text": "does",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " have shadowing, though. Your example of struct members is interesting "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1592193843.493300",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1592193923.000000"
        },
        "client_msg_id": "a9540d22-e0ab-4d89-b71d-691fdb0a0a9a",
        "text": "That shadow-nail example just another incarnation of references vs values.\n\n```top level\na = 5\nb = a\na = 6\nwtf is b?\n\nstruct\na = {x: 5}\nb = a\na.x = 6\nwft is b?\n\nshadowing\na = 5\n{\n  a = 6\n}\nwtf is a?```\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591570004.468100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kj=9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That shadow-nail example just another incarnation of references vs values.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "top level\na = 5\nb = a\na = 6\nwtf is b?\n\nstruct\na = {x: 5}\nb = a\na.x = 6\nwft is b?\n\nshadowing\na = 5\n{\n  a = 6\n}\nwtf is a?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1592195545.493600",
        "client_msg_id": "ed4066cc-6aa0-499a-8a95-3e4cc93555f5",
        "text": "Maybe I'll disallow reusing the same variable name. Really I only need shadowing for reusing _registers_.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591570004.468100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xbW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe I'll disallow reusing the same variable name. Really I only need shadowing for reusing _registers_."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]