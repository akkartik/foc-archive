[
    {
        "user": "U023V63MF6V",
        "type": "message",
        "ts": "1714315833.302559",
        "client_msg_id": "ab0e27da-eebc-4192-bf15-c030a656f3dd",
        "text": "Yes! In fact, I think the node-wire paradigm naturally exists in an infinite canvas almost by definition, you have various node primitives you can add to the canvas, position, and inter-link and there's physics in the linkage (data flow, action sequences, temporality, nesting, 2D position etc.)\n\nWhat I can't (haven't) wrapped my head around yet is how we'd design a higher order node-wire paradigm (in all the complexity it deserves) into the blank canvas using even lower order canvas-based primitives\/physics! Right now I'm working with a node-wire live programming infinite canvas as the base layer, underneath which is ye olde textual code\n\n(OK, I shalln't mention node-wire again for fear of sidetracking a thread about the future of canvas)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8c781271e0f0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-30\/2111810970118_8c781271e0f034f7c468_72.jpg",
            "first_name": "",
            "real_name": "Arvind Thyagarajan",
            "display_name": "Arvind Thyagarajan",
            "team": "T5TCAFTA9",
            "name": "arvind",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714250050.851589",
        "parent_user_id": "U06BUK2M2RH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CV6AO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes! In fact, I think the node-wire paradigm naturally exists in an infinite canvas almost by definition, you have various node primitives you can add to the canvas, position, and inter-link and there's physics in the linkage (data flow, action sequences, temporality, nesting, 2D position etc.)\n\nWhat I can't (haven't) wrapped my head around yet is how we'd design a higher order node-wire paradigm (in all the complexity it deserves) into the blank canvas using even lower order canvas-based primitives\/physics! Right now I'm working with a node-wire live programming infinite canvas as the base layer, underneath which is ye olde textual code\n\n(OK, I shalln't mention node-wire again for fear of sidetracking a thread about the future of canvas)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06BUK2M2RH",
        "type": "message",
        "ts": "1714316685.548039",
        "client_msg_id": "8FA729F4-866B-481E-9385-59206347A15C",
        "text": "No I think you brought up a great point actually about the need to find a higher order representation (between node wire and code) and to be honest I think you answered you question with what you said in the first paragraph: “add to the canvas, position and interlink”. It’s my hypothesis that enabling the addition of any kind of object (numbers, text, geometry with dimensions) and linking them directly on the canvas might enable just that. If you add the ability to toggle visibility as a property and toggle links on and off themselves and add some form of dynamic repetition I believe you can make anything (though there’s a lot of nuance i haven’t quite figured out). Obligatory _I have no idea if this will actually work_ tag",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9eac202d45a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-28\/6396121022742_9eac202d45a2827e9fa6_72.jpg",
            "first_name": "Dennis",
            "real_name": "Dennis Hansen",
            "display_name": "Dennis Hansen",
            "team": "T5TCAFTA9",
            "name": "dhansen909",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714250050.851589",
        "parent_user_id": "U06BUK2M2RH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "13Uf0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No I think you brought up a great point actually about the need to find a higher order representation (between node wire and code) and to be honest I think you answered you question with what you said in the first paragraph: “add to the canvas, position and interlink”. "
                            },
                            {
                                "type": "text",
                                "text": "It’s"
                            },
                            {
                                "type": "text",
                                "text": " my hypothesis that enabling the addition of any kind of object (numbers, text, geometry with dimensions) and linking them directly on the canvas might enable just "
                            },
                            {
                                "type": "text",
                                "text": "that"
                            },
                            {
                                "type": "text",
                                "text": ". If you add the ability to toggle visibility as a property and toggle links on and off themselves and add some form of dynamic repetition I believe you can make anything (though "
                            },
                            {
                                "type": "text",
                                "text": "there’s"
                            },
                            {
                                "type": "text",
                                "text": " a lot of nuance i "
                            },
                            {
                                "type": "text",
                                "text": "haven’t"
                            },
                            {
                                "type": "text",
                                "text": " quite figured out). Obligatory "
                            },
                            {
                                "type": "text",
                                "text": "I have no idea if this will actually work",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " tag"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]