[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1730646459.110919",
        "client_msg_id": "E5AA0044-810D-43CD-9149-956FC9FF335C",
        "text": "I also vote “unreliable timestamps”",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1730544344.124919",
        "parent_user_id": "U01DWJSAF2B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TBJZB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I also vote “unreliable timestamps”"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01DWJSAF2B"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U07TREJC9DJ",
        "type": "message",
        "ts": "1730676699.433699",
        "client_msg_id": "9563f3a0-03ff-413a-aa39-448bcc009ae6",
        "text": "I did a bit of digging in the Metal docs and they do mention some kind of magic auto-parallelism:\n\n&gt; Metal automatically tracks dependencies between the compute and render passes. When the sample sends the command buffer to be executed, Metal detects that the compute pass writes to the output texture and the render pass reads from it, and makes sure the GPU finishes the compute pass before starting the render pass.\n<https:\/\/developer.apple.com\/documentation\/metal\/compute_passes\/processing_a_texture_in_a_compute_function>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfbf79779179",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/fbf7977917910666bea05c3ca3c9f2cf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Sam",
            "real_name": "Sam Gentle",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "sam905",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1730544344.124919",
        "parent_user_id": "U01DWJSAF2B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "glWBB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I did a bit of digging in the Metal docs and they do mention some kind of magic auto-parallelism:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Metal automatically tracks dependencies between the compute and render passes. When the sample sends the command buffer to be executed, Metal detects that the compute pass writes to the output texture and the render pass reads from it, and makes sure the GPU finishes the compute pass before starting the render pass."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/developer.apple.com\/documentation\/metal\/compute_passes\/processing_a_texture_in_a_compute_function"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1730705284.489119",
        "client_msg_id": "89DD5106-AC82-4399-A646-01A6748133E7",
        "text": "There are pretty good graphics debugging tools in Xcode\/Instruments. If you can somehow hook them up to the Metal part of whatever you’re running, they would give you detailed information about what’s running where and when. \n<https:\/\/developer.apple.com\/documentation\/xcode\/metal-debugger\/|https:\/\/developer.apple.com\/documentation\/xcode\/metal-debugger\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1730544344.124919",
        "parent_user_id": "U01DWJSAF2B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "enJvU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are pretty good graphics debugging tools in Xcode\/Instruments. If you can somehow hook them up to the Metal part of whatever you’re running, they would give you "
                            },
                            {
                                "type": "text",
                                "text": "detailed information about "
                            },
                            {
                                "type": "text",
                                "text": "what’s"
                            },
                            {
                                "type": "text",
                                "text": " running where and when. \n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/developer.apple.com\/documentation\/xcode\/metal-debugger\/",
                                "text": "https:\/\/developer.apple.com\/documentation\/xcode\/metal-debugger\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1730705539.600269",
        "client_msg_id": "DE8318A8-F4EA-4127-8C4C-72FB1588E861",
        "text": "Perhaps this gets you started: <https:\/\/developer.apple.com\/documentation\/xcode\/capturing-a-metal-workload-programmatically|https:\/\/developer.apple.com\/documentation\/xcode\/capturing-a-metal-workload-programmatically>\n\nIn particular: “Alternatively, in macOS 14 and later, you can set the environment variable on your Metal app: MTL_CAPTURE_ENABLED=1.”\n\nI’d assume that the library you’re using would likely expose any debugging facilities as well…?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1730544344.124919",
        "parent_user_id": "U01DWJSAF2B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tpdPL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Perhaps this gets you started: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/developer.apple.com\/documentation\/xcode\/capturing-a-metal-workload-programmatically",
                                "text": "https:\/\/developer.apple.com\/documentation\/xcode\/capturing-a-metal-workload-programmatically"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "In particular: “Alternatively, in macOS 14 and later, you can set the environment variable on your Metal app: MTL_CAPTURE_ENABLED=1.”\n\n"
                            },
                            {
                                "type": "text",
                                "text": "I’d"
                            },
                            {
                                "type": "text",
                                "text": " assume that the library "
                            },
                            {
                                "type": "text",
                                "text": "you’re"
                            },
                            {
                                "type": "text",
                                "text": " using would likely expose any debugging facilities as well…?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1730705712.671149",
        "client_msg_id": "C6A31352-10A8-4AD3-B2C0-94C164C562B0",
        "text": "Then you should be able to replay a captured trace like this: <https:\/\/developer.apple.com\/documentation\/xcode\/replaying-a-gpu-trace-file|https:\/\/developer.apple.com\/documentation\/xcode\/replaying-a-gpu-trace-file>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1730544344.124919",
        "parent_user_id": "U01DWJSAF2B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+rWQl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Then you should be able to replay a captured trace like this: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/developer.apple.com\/documentation\/xcode\/replaying-a-gpu-trace-file",
                                "text": "https:\/\/developer.apple.com\/documentation\/xcode\/replaying-a-gpu-trace-file"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01DWJSAF2B",
        "type": "message",
        "ts": "1730705859.362209",
        "client_msg_id": "d1e12d27-ec2b-462d-8495-d857c07fc6fe",
        "text": "<@U07TREJC9DJ> That's interesting, thanks! Though I'm still skeptical that it could automatically determine the fine-grained dependencies between individual invocations of the compute\/render passes. From the wording it sounds more like it would wait until the compute pass is complete before starting the render pass.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdad50df1d9a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/dad50df1d9acad462018f77360434de6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Patrick Dubroy",
            "display_name": "Patrick Dubroy",
            "team": "T5TCAFTA9",
            "name": "pdubroy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1730544344.124919",
        "parent_user_id": "U01DWJSAF2B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ehWrz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U07TREJC9DJ"
                            },
                            {
                                "type": "text",
                                "text": " That's interesting, thanks! Though I'm still skeptical that it could automatically determine the fine-grained dependencies between individual invocations of the compute\/render passes. From the wording it sounds more like it would wait until the compute pass is complete before starting the render pass."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01DWJSAF2B",
        "type": "message",
        "ts": "1730706324.272349",
        "client_msg_id": "544eff7e-a06e-48a1-85c5-036ed5ef966d",
        "text": "<@U5STGTB3J> Good call, I should see what XCode will tell me. I do know how to capture a GPU trace, the only issue is that when I last tried it, it seemed that wgpu doesn't generate Metal debug symbols, so it's somewhat limited. But I could always try debugging a standalone pure Metal example that replicates the same access patterns.\n\nI found this, which seems like it could be helpful: <https:\/\/developer.apple.com\/documentation\/xcode\/analyzing-resource-dependencies>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdad50df1d9a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/dad50df1d9acad462018f77360434de6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Patrick Dubroy",
            "display_name": "Patrick Dubroy",
            "team": "T5TCAFTA9",
            "name": "pdubroy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1730544344.124919",
        "parent_user_id": "U01DWJSAF2B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hCaAk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " Good call, I should see what XCode will tell me. I do know how to capture a GPU trace, the only issue is that when I last tried it, it seemed that wgpu doesn't generate Metal debug symbols, so it's somewhat limited. But I could always try debugging a standalone pure Metal example that replicates the same access patterns.\n\nI found this, which seems like it could be helpful: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/developer.apple.com\/documentation\/xcode\/analyzing-resource-dependencies"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            }
        ]
    }
]