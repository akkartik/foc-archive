[
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1580556915.299300",
        "client_msg_id": "8a09b2f8-cb4a-47b6-b4a6-3dc048a3b7d7",
        "text": "(that's me). I have a new version that moved in the mouldable programming direction",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580241505.237300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8pd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(that's me). I have a new version that moved in the mouldable programming direction"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1580564868.299500",
        "client_msg_id": "cffe9ac1-a4e3-4909-9b10-77913f38577a",
        "text": "Blow's comment resonated with me because it relates to a conversation I've had many times, with multiple people, about multiple languages:\n1. In some corner of Language _X_, there is high incidental complexity and a steep learning cliff.\n2. A user expends much intellectual effort climbing this cliff and mastering the complexity.\n3. When this user reaches the top of the cliff, they have a \"Eureka!\" moment. They've figured it out. It all makes sense now.\n4. The intense emotions released by the Eureka experience effect a religious conversion. They become disciples of the one true programming language. The ~cargo cult rituals~ design patterns required to manage and tame the incidental complexity are best practices: they are important and necessary. Languages that lack this complexity are obviously inferior.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580480732.286100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=TOPs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Blow's comment resonated with me because it relates to a conversation I've had many times, with multiple people, about multiple languages:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "In some corner of Language "
                                    },
                                    {
                                        "type": "text",
                                        "text": "X",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", there is high incidental complexity and a steep learning cliff."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "A user expends much intellectual effort climbing this cliff and mastering the complexity."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "When this user reaches the top of the cliff, they have a \"Eureka!\" moment. They've figured it out. It all makes sense now."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The intense emotions released by the Eureka experience effect a religious conversion. They become disciples of the one true programming language. The "
                                    },
                                    {
                                        "type": "text",
                                        "text": "cargo cult rituals",
                                        "style": {
                                            "strike": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " design patterns required to manage and tame the incidental complexity are best practices: they are important and necessary. Languages that lack this complexity are obviously inferior."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1580569718.299800",
        "client_msg_id": "84e81bfa-c8e9-400d-a255-bcda3c846c1c",
        "text": "Here's another way of thinking about it. Programming languages that force a lot of incidental complexity on you *suck*, because that complexity is just a barrier to getting things done. However, lots of people are attracted to the programming field because they love solving puzzles. Languages that suck really badly require more puzzle solving to use effectively, which has the perverse consequence that they get a more devoted cult following.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580480732.286100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XUoOw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's another way of thinking about it. Programming languages that force a lot of incidental complexity on you "
                            },
                            {
                                "type": "text",
                                "text": "suck",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", because that complexity is just a barrier to getting things done. However, lots of people are attracted to the programming field because they love solving puzzles. Languages that suck really badly require more puzzle solving to use effectively, which has the perverse consequence that they get a more devoted cult following."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1580577760.301600",
        "client_msg_id": "9162987e-3745-4030-9680-a588b6832265",
        "text": "Does that matter? He seems to enjoy playing the slightly grouchy iconoclast.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580480897.287400",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7IN1p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does that matter? He seems to enjoy playing the slightly grouchy iconoclast."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1580580253.301900",
        "client_msg_id": "c2b01280-d16d-44a7-a349-e7e2e1349735",
        "text": "It matters to me — to do a good job interviewing someone who brings an attitude of skepticism (healthy or not), I'll need better interviewing skills than I currently have. So maybe after a year of interviews with folks who are easier for me to talk to, I'll be ready for the bigger asks.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580480897.287400",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RPT+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It matters to me — to do a good job interviewing someone who brings an attitude of skepticism (healthy or not), I'll need better interviewing skills than I currently have. So maybe after a year of interviews with folks who are easier for me to talk to, I'll be ready for the bigger asks."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1580580431.302100",
        "client_msg_id": "720bffa7-3e8b-4681-95d0-39bfce603da9",
        "text": "There are a handful of people.. Bret Victor, say.. where I'd love to have them on the show. But I feel like I'd only have one opportunity to interview them. I want to make sure that when I claim that opportunity, I'm able to do a really good job of it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580480897.287400",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aAG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are a handful of people.. Bret Victor, say.. where I'd love to have them on the show. But I feel like I'd only have one opportunity to interview them. I want to make sure that when I claim that opportunity, I'm able to do a really good job of it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKB1S7ZMY",
                    "UA14TGLTC",
                    "UCKRZS3DZ"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1580580481.302300",
        "client_msg_id": "d42e6679-6f2e-470f-bf83-9850834db417",
        "text": "I hope that makes sense \/ is relatable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580480897.287400",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=Wh=\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I hope that makes sense \/ is relatable."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1580581346.302500",
        "client_msg_id": "7a152de5-7f62-41e2-8791-e4beea7ca9db",
        "text": "Yeah absolutely. It would be better to wait until Jai is released anyway",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580480897.287400",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ym42",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah absolutely. It would be better to wait until Jai is released anyway"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1580581472.302800",
        "client_msg_id": "ba47635a-bd6f-4f44-8edb-78ab09ec83db",
        "text": "<@UE6EFEPTQ> <@UJN1TAYEQ> — One particularly clever (or snarky?) survey respondent simply filled the *Other* box with \"ALL\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580079821.153700",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NP=X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " — One particularly clever (or snarky?) survey respondent simply filled the "
                            },
                            {
                                "type": "text",
                                "text": "Other",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " box with \"ALL\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UT39HTL9X",
        "type": "message",
        "ts": "1580590491.307600",
        "client_msg_id": "9a37c874-aa5c-48c3-baca-d0a3da4650be",
        "text": "What kind of progress has been made in modelling IO in functional programming?  I see it as a goal on <https:\/\/futureofcoding.org\/about>.  Is the current solution basically Rx?  And has anyone taken the ideas of Rx and been able to fold them cleanly into a programming language rather than as a separate library?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g84a30c4b94b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/84a30c4b94b829ef94b42170de8f2edf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "",
            "real_name": "Joseph Ivie",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "josephivie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580590491.307600",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1580757592.479100",
        "reply_users": [
            "UT57EGH6K",
            "UT39HTL9X",
            "UQ706GB9U"
        ],
        "replies": [
            {
                "user": "UT57EGH6K",
                "ts": "1580591182.307800"
            },
            {
                "user": "UT39HTL9X",
                "ts": "1580595016.308000"
            },
            {
                "user": "UT57EGH6K",
                "ts": "1580596200.308200"
            },
            {
                "user": "UT39HTL9X",
                "ts": "1580604449.310700"
            },
            {
                "user": "UQ706GB9U",
                "ts": "1580757592.479100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2QZpq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What kind of progress has been made in modelling IO in functional programming?  I see it as a goal on "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.org\/about"
                            },
                            {
                                "type": "text",
                                "text": ".  Is the current solution basically Rx?  And has anyone taken the ideas of Rx and been able to fold them cleanly into a programming language rather than as a separate library?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UT57EGH6K",
        "type": "message",
        "ts": "1580591182.307800",
        "client_msg_id": "ad2f195b-abc5-460e-beb6-12d5da5900fc",
        "text": "are you familiar with algebraic effects? im not particularly familiar with Rx as an alternative to IO, but effects provide a way to \"break up\" the \"IO monad\" and interpret effects in a more granular way. <http:\/\/unisonweb.org|unisonweb.org> is a language that implements effects in the form of abilities. koka and eff are two other languages that work in the same space",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0fd956c6f873",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-01-24\/923255899367_0fd956c6f873c2df6cd5_72.jpg",
            "first_name": "",
            "real_name": "mat ess",
            "display_name": "mat ess",
            "team": "T5TCAFTA9",
            "name": "daringseal",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580590491.307600",
        "parent_user_id": "UT39HTL9X",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uOvIi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "are you familiar with algebraic effects? im not particularly familiar with Rx as an alternative to IO, but effects provide a way to \"break up\" the \"IO monad\" and interpret effects in a more granular way. "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/unisonweb.org",
                                "text": "unisonweb.org"
                            },
                            {
                                "type": "text",
                                "text": " is a language that implements effects in the form of abilities. koka and eff are two other languages that work in the same space"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UT39HTL9X",
        "type": "message",
        "ts": "1580595016.308000",
        "client_msg_id": "e38f3c9f-d1fb-4344-b764-eeee585a8c26",
        "text": "No, I am not! Thank you! I will go study that",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g84a30c4b94b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/84a30c4b94b829ef94b42170de8f2edf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "",
            "real_name": "Joseph Ivie",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "josephivie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580590491.307600",
        "parent_user_id": "UT39HTL9X",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tid",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No, I am not! Thank you! I will go study that"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UT57EGH6K",
        "type": "message",
        "ts": "1580596200.308200",
        "client_msg_id": "995fcf81-53e3-496d-a20c-8334e43dd944",
        "text": "if you prefer working in a more widespread language, haskell has several effect-management libraries, particularly polysemy and freer-simple, and hasura\/eff is one under development",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0fd956c6f873",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-01-24\/923255899367_0fd956c6f873c2df6cd5_72.jpg",
            "first_name": "",
            "real_name": "mat ess",
            "display_name": "mat ess",
            "team": "T5TCAFTA9",
            "name": "daringseal",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580590491.307600",
        "parent_user_id": "UT39HTL9X",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HyzzR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if you prefer working in a more widespread language, haskell has several effect-management libraries, particularly polysemy and freer-simple, and hasura\/eff is one under development"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1580597761.309900",
        "client_msg_id": "d42a2f01-4784-4b82-9676-17e35d5f749d",
        "text": "<@UC2A2ARPT> I somehow only just saw <https:\/\/twitter.com\/spiralganglion\/status\/1145028588715950080>. Had you posted it here at some point?\n\nI don't quite understand how the increment box has multiple input\/output arrows. Is it just that there's only one increment operation in the world, or are the I\/O pairs interacting somehow?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580597761.309900",
        "reply_count": 9,
        "reply_users_count": 4,
        "latest_reply": "1581368336.072900",
        "reply_users": [
            "UC2A2ARPT",
            "U85HCL7JP",
            "UCUSW7WVD",
            "UHWC9PXBL"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1580606063.310900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1580606271.311200"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1580606566.311400"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1580606620.311700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1580606720.312000"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1580621404.312200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1580621929.312400"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1580623446.312700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1581368336.072900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/spiralganglion|@spiralganglion>: This is my new project, Hest.\n\n• A drawing tool with visual programming features.\n• Everything is both code and data.\n• Execution happens in time and space.\n• You control time.\n\nHere it is doing \"shitty math\" — where your operators are little boxes. #screenshotsaturday <https:\/\/pbs.twimg.com\/tweet_video_thumb\/D-P1QRmUcAAED6w.jpg>",
                "ts": 1561831063,
                "author_name": "Ivan Reese",
                "author_link": "https:\/\/twitter.com\/spiralganglion\/status\/1145028588715950080",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/955182005339279361\/kvTeVu_g_normal.jpg",
                "author_subname": "@spiralganglion",
                "text": "This is my new project, Hest.\n\n• A drawing tool with visual programming features.\n• Everything is both code and data.\n• Execution happens in time and space.\n• You control time.\n\nHere it is doing \"shitty math\" — where your operators are little boxes. #screenshotsaturday",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/spiralganglion\/status\/1145028588715950080",
                "thumb_url": "https:\/\/pbs.twimg.com\/tweet_video_thumb\/D-P1QRmUcAAED6w.jpg",
                "thumb_width": 824,
                "thumb_height": 804,
                "video_html_width": 824,
                "video_html_height": 804,
                "video_html": "<video autoplay loop muted poster=\"https:\/\/pbs.twimg.com\/tweet_video_thumb\/D-P1QRmUcAAED6w.jpg\" width=\"824\" height=\"804\"><source type=\"video\/mp4\" src=\"https:\/\/video.twimg.com\/tweet_video\/D-P1QRmUcAAED6w.mp4\"><\/video>",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/spiralganglion\/status\/1145028588715950080",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UOwWk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I somehow only just saw "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/spiralganglion\/status\/1145028588715950080"
                            },
                            {
                                "type": "text",
                                "text": ". Had you posted it here at some point?\n\nI don't quite understand how the increment box has multiple input\/output arrows. Is it just that there's only one increment operation in the world, or are the I\/O pairs interacting somehow?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UT39HTL9X",
        "type": "message",
        "ts": "1580604449.310700",
        "client_msg_id": "6397fe48-2792-478c-bf83-8010049138cd",
        "text": "OK, this looks really cool.  Essentially, it is an implied mutable interface input into the function. Using the same tools as generics, you can have lambda arguments capture these arbitrarily.  I might replicate a similar thing in the language I am working on, though perhaps not in quite the same way.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g84a30c4b94b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/84a30c4b94b829ef94b42170de8f2edf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "",
            "real_name": "Joseph Ivie",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "josephivie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580590491.307600",
        "parent_user_id": "UT39HTL9X",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "69TQA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OK, this looks really cool.  Essentially, it is an implied mutable interface input into the function. Using the same tools as generics, you can have lambda arguments capture these arbitrarily.  I might replicate a similar thing in the language I am working on, though perhaps not in quite the same way."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UT57EGH6K"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1580606063.310900",
        "client_msg_id": "be12613d-dbee-4038-8ca6-e51d66f2e0c7",
        "text": "I've mentioned Hest a few times here in the Slack, but not particularly loudly, since it's not mature enough yet to warrant serious attention. To wit, I believe I've only made one top-level post about it — <https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1566801692212900>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1566801692212900",
                "fallback": "[August 25th, 2019 11:41 PM] ivanreese: I've written the first blog post about my own future of coding project, the artistic programming tool Hest. In the post I describe how the programming model emerges from geometric primitives, the inspirations behind the editor GUI, the design of the time travel capability, and end with a problem that emerged from the intersection of two of my favorite features. I welcome feedback about both the design of Hest and the problem I'm currently grappling with, plus the blog post itself. I do a lot of writing but not a lot of blogging so suggestions about how to better utilize the medium, or places where you lose the thread of thought, would be lovely. Thanks!",
                "ts": "1566801692.212900",
                "author_id": "UC2A2ARPT",
                "author_subname": "Ivan Reese",
                "channel_id": "CCL5VVBAN",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "text": "I've written the first blog post about my own future of coding project, the artistic programming tool Hest. In the post I describe how the programming model emerges from geometric primitives, the inspirations behind the editor GUI, the design of the time travel capability, and end with a problem that emerged from the intersection of two of my favorite features. I welcome feedback about both the design of Hest and the problem I'm currently grappling with, plus the blog post itself. I do a lot of writing but not a lot of blogging so suggestions about how to better utilize the medium, or places where you lose the thread of thought, would be lovely. Thanks!",
                "author_name": "Ivan Reese",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/UC2A2ARPT",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1566801692212900",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qpA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've mentioned Hest a few times here in the Slack, but not particularly loudly, since it's not mature enough yet to warrant serious attention. To wit, I believe I've only made one top-level post about it — "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1566801692212900"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1580606271.311200",
        "client_msg_id": "bff20915-587a-488b-8646-ec531adf6007",
        "text": "To answer your question...\n\nYes, in this demo there's only one increment operation. Currently, operations [\/ functions \/ nodes \/ whatever] in Hest only act on a single input at a time, and are stateful. I'm pretty sure I'm going to change that, but I haven't yet found a way to express \"multi-argument function\" in terms of the geometric primitives I'm allowing myself to use. That's the biggest problem holding me back from making progress, and I'm planning to spend a few weeks working on just that problem later this month.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gPe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To answer your question...\n\nYes, in this demo there's only one increment operation. Currently, operations [\/ functions \/ nodes \/ whatever] in Hest only act on a single input at a time, and are stateful. I'm pretty sure I'm going to change that, but I haven't yet found a way to express \"multi-argument function\" in terms of the geometric primitives I'm allowing myself to use. That's the biggest problem holding me back from making progress, and I'm planning to spend a few weeks working on just that problem later this month."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1580606566.311400",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1580606603.000000"
        },
        "client_msg_id": "28fe5498-8593-407c-9fa9-363c919beba3",
        "text": "Edges [\/ lines \/ cables \/ conveyors \/ whatever] are somewhat analogous to call sites, not arguments, so it's quite natural to have a node like \"+ 1\"  have multiple edges connecting to it. It calls itself recursively too, in this example, but with a time delay.. and since execution is _participatory_ — the programmer is the one controlling the passage of execution-time — infinite loops aren't the _instruction pointer black holes_ we typically view them as.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K6HS4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Edges [\/ lines \/ cables \/ conveyors \/ whatever] are somewhat analogous to call sites, not arguments, so it's quite natural to have a node like \"+ 1\"  have multiple edges connecting to it. It calls itself recursively too, in this example, but with a time delay.. and since execution is "
                            },
                            {
                                "type": "text",
                                "text": "participatory",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " — the programmer is the one controlling the passage of execution-time — infinite loops aren't the "
                            },
                            {
                                "type": "text",
                                "text": "instruction pointer black holes",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " we typically view them as."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1580606620.311700",
        "client_msg_id": "f31a93cd-efad-4983-bcae-4216a115f1ee",
        "text": "(Helps that there is no notion of an instruction pointer.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3l3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Helps that there is no notion of an instruction pointer.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1580606720.312000",
        "client_msg_id": "1f76b80c-120b-4f3a-adc7-8ef36b633f2a",
        "text": "It's very easy for me to go way off the deep end explaining things. Sorry. I think it's better when the design of Hest speaks for itself in GIF and video form. I'll make some more demos when I have more to show, and I'll share them here.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O1hr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's very easy for me to go way off the deep end explaining things. Sorry. I think it's better when the design of Hest speaks for itself in GIF and video form. I'll make some more demos when I have more to show, and I'll share them here."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1580621404.312200",
        "client_msg_id": "f6f79ea0-d64c-47c9-b22d-a99af8a6ed6a",
        "text": "Really cool <@UC2A2ARPT>!\nWhy is `*=` but just `+` not `+=`? What's the difference between the 2?\nAlso are particular reasons that you need more than 1 input at a time? Have you tried to use partial application to _fake_ multiple inputs?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QoJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Really cool "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": "!\nWhy is "
                            },
                            {
                                "type": "text",
                                "text": "*=",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " but just "
                            },
                            {
                                "type": "text",
                                "text": "+",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " not "
                            },
                            {
                                "type": "text",
                                "text": "+=",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? What's the difference between the 2?\nAlso are particular reasons that you need more than 1 input at a time? Have you tried to use partial application to "
                            },
                            {
                                "type": "text",
                                "text": "fake",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " multiple inputs?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1580621929.312400",
        "client_msg_id": "d6a0ca34-8789-49cc-83fb-c0833ee209d9",
        "text": "It has internal state, an accumulator.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7Ng",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It has internal state, an accumulator."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1580623446.312700",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1580623842.000000"
        },
        "client_msg_id": "b02f9293-ea42-4366-b59a-d9eeeb5c5ce4",
        "text": "If you look at the function boxes.. they each have a little number that hangs off the right edge. That's a stored value. It is internal state. In the case of `*=` it is an accumulator, like Kartik said, so it updates the stored value with each invocation. The regular `+` operator does not. And yes, you can imagine that the `+` box has been partially applied with `1`, and the `*=` box continually replaces itself with a new function with a new partial application.\n\n^ I hate all of this. None of this is truly part of the design of Hest. It's just a stepping stone for me to test the GUI, scheduler, renderer, etc. Those things are easy, whereas figuring out what notions of \"programming\" feel good in this environment.. that's very hard.\n\nI have a pretty good sense of.. things like function definition, composition, invocation.. and data definition and invocation... but I don't yet have a good sense of data composition (ie collections).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6tiR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you look at the function boxes.. they each have a little number that hangs off the right edge. That's a stored value. It is internal state. In the case of "
                            },
                            {
                                "type": "text",
                                "text": "*=",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " it is an accumulator, like Kartik said, so it updates the stored value with each invocation. The regular "
                            },
                            {
                                "type": "text",
                                "text": "+",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " operator does not. And yes, you can imagine that the "
                            },
                            {
                                "type": "text",
                                "text": "+",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " box has been partially applied with "
                            },
                            {
                                "type": "text",
                                "text": "1",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and the "
                            },
                            {
                                "type": "text",
                                "text": "*=",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " box continually replaces itself with a new function with a new partial application.\n\n^ I hate all of this. None of this is truly part of the design of Hest. It's just a stepping stone for me to test the GUI, scheduler, renderer, etc. Those things are easy, whereas figuring out what notions of \"programming\" feel good in this environment.. that's very hard.\n\nI have a pretty good sense of.. things like function definition, composition, invocation.. and data definition and invocation... but I don't yet have a good sense of data composition (ie collections)."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]