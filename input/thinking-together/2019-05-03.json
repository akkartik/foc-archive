[
    {
        "user": "UJCQYPLMN",
        "type": "message",
        "ts": "1556871102.143000",
        "edited": {
            "user": "UJCQYPLMN",
            "ts": "1556871113.000000"
        },
        "client_msg_id": "5475fa17-a981-4b1b-b8f2-3a2f40417be7",
        "text": "<@UFB8STN7K> a high level \"llvm\" would help a lot advance the progress of programming languages for sure. If the Rust internals are that is hard to judge for me, though, for sure not until it's stable (stable as in, a stable api).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g29c9a0f71d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/729c9a0f71d1cfcdcb30efa28a8f46d2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "",
            "real_name": "Carlo Kok",
            "display_name": "Carlo Kok",
            "team": "T5TCAFTA9",
            "name": "carlokok",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rawP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": " a high level \"llvm\" would help a lot advance the progress of programming languages for sure. If the Rust internals are that is hard to judge for me, though, for sure not until it's stable (stable as in, a stable api)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1556873659.143300",
        "client_msg_id": "220f2360-68d6-4cbd-b0f7-f18384215297",
        "text": "Maybe the way to go is to not first target \"traditionnal\" programmers\", but end-users or casual programmers instead. They have no interest in sticking to \"complex\" programming. Once a new way of doing programming is largely adopted by them, reluctant traditionnal programmers will have to embrace it. And if you do it in a way that non-reluctant traditionnal programmers (yet maybe, the more \"open\" ones) can invest soon you will have something that fits both casual and professionnal programmers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556823193.119300",
        "parent_user_id": "U7C7B75R6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KvVf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe the way to go is to not first target \"traditionnal\" programmers\", but end-users or casual programmers instead. They have no interest in sticking to \"complex\" programming. Once a new way of doing programming is largely adopted by them, reluctant traditionnal programmers will have to embrace it. And if you do it in a way that non-reluctant traditionnal programmers (yet maybe, the more \"open\" ones) can invest soon you will have something that fits both casual and professionnal programmers."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1556878612.143600",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1556878617.000000"
        },
        "client_msg_id": "c548ba1c-eae8-43d4-8135-200430d449d9",
        "text": "&gt; I meant that you cannot invent a paintbrush so good that it changes how good a person is at painting, just by their choice to use it, or that the same painting is somehow automatically better.\n\nHow about a paintbrush with undo? That'd certainly help a whole class of people, who are unable to make the right mark on the first try, but are willing to try and try again until they get it.\n\nHow about a paint that immediately dries? So that you can judge the final appearance without needing to learn how to foresee how the wet painting will change appearance as it slowly dries.\n\nHow about a canvas that you can make more or less transparent, so you can look through the canvas at your subject, and trace their form?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556460551.243800",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UsFA",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I meant that you cannot invent a paintbrush so good that it changes how good a person is at painting, just by their choice to use it, or that the same painting is somehow automatically better."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nHow about a paintbrush with undo? That'd certainly help a whole class of people, who are unable to make the right mark on the first try, but are willing to try and try again until they get it.\n\nHow about a paint that immediately dries? So that you can judge the final appearance without needing to learn how to foresee how the wet painting will change appearance as it slowly dries.\n\nHow about a canvas that you can make more or less transparent, so you can look through the canvas at your subject, and trace their form?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U9C92716C"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1556878680.144000",
        "client_msg_id": "4f265ade-361d-452a-a952-3a488923ea73",
        "text": "I find there are two main groups of end-users.  Let's call them tinkers and the pros.  A tinker's goal is to get a thing done quicker or with less effort.  Sharp edges?  No problem.  A pro requires precision and will invest time and energy to accomplish an effect.  As a rule, both groups care more about the goal than mastering technique and theory.  I do know few with that trait.  Call them musicians: people who see tools as instruments that require practice to use well.  Well could \"mean\" for quick and dirty or perfectly polished.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556823193.119300",
        "parent_user_id": "U7C7B75R6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JHoK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I find there are two main groups of end-users.  Let's call them tinkers and the pros.  A tinker's goal is to get a thing done quicker or with less effort.  Sharp edges?  No problem.  A pro requires precision and will invest time and energy to accomplish an effect.  As a rule, both groups care more about the goal than mastering technique and theory.  I do know few with that trait.  Call them musicians: people who see tools as instruments that require practice to use well.  Well could \"mean\" for quick and dirty or perfectly polished."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1556878693.144200",
        "client_msg_id": "e8a0d5f7-6dad-4e4d-9a6b-4c094a993bac",
        "text": "How about having 1000 paints, or 10,000, rather than 10 or 20, so you can get exactly the color you want without first having to learn how to mix?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556460551.243800",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bxvu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How about having 1000 paints, or 10,000, rather than 10 or 20, so you can get exactly the color you want without first having to learn how to mix?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1556878829.144400",
        "client_msg_id": "98196c81-bd74-4e48-a846-74541183f97d",
        "text": "Many of the \"skills\" of painting are incidental. Absent those skills, we see a painter as lacking ability. Better tools can help obviate those skills. Though it does feel a bit like \"cheating\" when I think of these ideas — almost as though it'd enable people who don't _deserve_ to succeed because they've taken an unfair shortcut.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556460551.243800",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cov",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Many of the \"skills\" of painting are incidental. Absent those skills, we see a painter as lacking ability. Better tools can help obviate those skills. Though it does feel a bit like \"cheating\" when I think of these ideas — almost as though it'd enable people who don't "
                            },
                            {
                                "type": "text",
                                "text": "deserve",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to succeed because they've taken an unfair shortcut."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1556878875.144600",
        "client_msg_id": "b234b789-6fa6-476b-a880-73c0e7480a81",
        "text": "<@UC2A2ARPT> I like the line of reasoning.  There is a point where a the paintbrush with becomes something distinct from a paintbrush.  I just mean to say that there are limits to what the tool can do if you hold on to too many conventions and constraints.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556460551.243800",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/Rb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I like the line of reasoning.  There is a point where a the paintbrush with becomes something distinct from a paintbrush.  I just mean to say that there are limits to what the tool can do if you hold on to too many conventions and constraints."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1556878943.144800",
        "client_msg_id": "2cc10669-6aaf-4f72-8f4f-e67f85e6dd16",
        "text": "And as far as \"cheating\" goes, it's because there is a beauty in performing a feat subject to constraints.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556460551.243800",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mmCc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And as far as \"cheating\" goes, it's because there is a beauty in performing a feat subject to constraints."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1556879155.145000",
        "client_msg_id": "9170de69-1023-4d12-b858-ef4105a76da4",
        "text": "&gt; limits to what a tool can do if you hold on to too many conventions.\n\nHere's a quote from a blog post draft I'm perpetually chipping away at:\n\nHammers can hit nails. That's their very purpose. But they can also hit screws, which is a great way to make a screw stay put while you reach for the screwdriver. They can also dent and deform sheet metal, which is useful for crafting a steel drum. They can knock loose a stuck fitting or lid, especially when hitting the free end of a long wrench on a stuck nut. They can punch a hole in drywall, making it easier to tear down. They can also smash your hand.\n\nHammers are tools for working with nails. This is a conceptual constraint placed on hammers by their designers. Hammers are designed with this specific intent in mind. But sometimes, hammers are just tools for amplifying the force of your arm. Sometimes, hammers are but tools for surviving a forceful impact. To your humble author, hammers are tools for exploring ideas via metaphor, with a wink. But by design, hammers are for nails. You won't find them in the \"force multipliers\" aisle of your hardware store, nor the \"impact surviving\" aisle.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556460551.243800",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O+3",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "limits to what a tool can do if you hold on to too many conventions."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nHere's a quote from a blog post draft I'm perpetually chipping away at:\n\nHammers can hit nails. That's their very purpose. But they can also hit screws, which is a great way to make a screw stay put while you reach for the screwdriver. They can also dent and deform sheet metal, which is useful for crafting a steel drum. They can knock loose a stuck fitting or lid, especially when hitting the free end of a long wrench on a stuck nut. They can punch a hole in drywall, making it easier to tear down. They can also smash your hand.\n\nHammers are tools for working with nails. This is a conceptual constraint placed on hammers by their designers. Hammers are designed with this specific intent in mind. But sometimes, hammers are just tools for amplifying the force of your arm. Sometimes, hammers are but tools for surviving a forceful impact. To your humble author, hammers are tools for exploring ideas via metaphor, with a wink. But by design, hammers are for nails. You won't find them in the \"force multipliers\" aisle of your hardware store, nor the \"impact surviving\" aisle."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1556879321.145200",
        "client_msg_id": "d707e600-13c4-4cdf-b5fb-ff7bfe3d5222",
        "text": "The *real* skill is knowing that a hammer-type force multiplier will help in a given situation.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556460551.243800",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kw4=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The "
                            },
                            {
                                "type": "text",
                                "text": "real",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " skill is knowing that a hammer-type force multiplier will help in a given situation."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1556879439.145400",
        "client_msg_id": "96f1aa8b-1754-4f92-b57b-4834ed9fd3c4",
        "text": "Ah, yes. That's the crux of it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556460551.243800",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "csm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, yes. That's the crux of it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1556879501.145600",
        "client_msg_id": "e4f36710-fa84-4bdc-a618-04ecd47eaa04",
        "text": "And that gets back to Tudor's point via McLuhan.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556460551.243800",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JJ7j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And that gets back to Tudor's point via McLuhan."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1556884445.146100",
        "client_msg_id": "a9e52a8c-8767-4e28-a601-43cbaf76334e",
        "text": "All great for techies, but I was commenting from the perspective of non-techs, who always need to see their data and the transformations they are undergoing",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556655545.323500",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hxY9Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "All great for techies, but I was commenting from the perspective of non-techs, who always need to see their data and the transformations they are undergoing"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1556884518.146300",
        "client_msg_id": "4022d672-fe45-49f5-8d5d-9e835d444bd7",
        "text": "As <@UHPAERALD> pointed out, point-free styles are so free of handles on your data they are the exact opposite of this",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556655545.323500",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9szno",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As "
                            },
                            {
                                "type": "user",
                                "user_id": "UHPAERALD"
                            },
                            {
                                "type": "text",
                                "text": " pointed out, point-free styles are so free of handles on your data they are the exact opposite of this"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1556892472.147000",
        "client_msg_id": "a77d9454-1fca-4374-84ba-44013bbc685e",
        "text": "<@UFB8STN7K> most statically typed languages will not have Rust's ownership system, so they do not map 1:1 to Rust, and will need to subvert Rust's ownership at least with Rc.. to implement GC.. I guess you could have 1 array per struct type, with pointers being typesafe indices, and then GC that somehow.. but that is way less efficient than the \"bump allocator\" efficient GCs rely on, and lets not speak of generational or concurrent GC which would be really difficult to make efficient in Rust",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "inulX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": " most statically typed languages will not have Rust's ownership system, so they do not map 1:1 to Rust, and will need to subvert Rust's ownership at least with Rc.. to implement GC.. I guess you could have 1 array per struct type, with pointers being typesafe indices, and then GC that somehow.. but that is way less efficient than the \"bump allocator\" efficient GCs rely on, and lets not speak of generational or concurrent GC which would be really difficult to make efficient in Rust"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1556893490.147200",
        "client_msg_id": "7d075950-93b7-434e-ba20-8bbe1bf20aca",
        "text": "The key here is efficient.. there's always a way to emulate anything in Rust, but if the delta with how you can do it in C\/C++ is too big, it won't be attractive to language implementors",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5CEf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The key here is efficient.. there's always a way to emulate anything in Rust, but if the delta with how you can do it in C\/C++ is too big, it won't be attractive to language implementors"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1556893570.147400",
        "client_msg_id": "8467eba7-0fd5-4a88-b7f3-dc36f517033f",
        "text": "Like, representing an integer as a `Rc&lt;RefCell&lt;Rc&lt;RefCell&lt;Box&lt;Any&gt;&gt;&gt;&gt;&gt;` doesn't sound that great to me :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gL=w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Like, representing an integer as a "
                            },
                            {
                                "type": "text",
                                "text": "Rc<RefCell<Rc<RefCell<Box<Any>>>>>",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " doesn't sound that great to me "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1556893658.147600",
        "client_msg_id": "ad1c33d6-c41d-4b8f-8103-3d96cc15cc31",
        "text": "Meanwhile, in one of my languages, an int just overlaps with pointers in a type unsafe union, which is an extremely common way to implement programming languages in C\/C++: <https:\/\/github.com\/aardappel\/lobster\/blob\/a57a300626bba29cdfd16912e25071da04405284\/dev\/src\/lobster\/vmdata.h#L393-L414>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7sd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Meanwhile, in one of my languages, an int just overlaps with pointers in a type unsafe union, which is an extremely common way to implement programming languages in C\/C++: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/aardappel\/lobster\/blob\/a57a300626bba29cdfd16912e25071da04405284\/dev\/src\/lobster\/vmdata.h#L393-L414"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1556893720.147800",
        "client_msg_id": "29d40934-1acb-490f-a2e7-7b4b526640f4",
        "text": "Note that this is a statically typed language, and the compiler knows the types of these values everywhere in memory mostly statically, but I have no way to express that in the target language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DXgG9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Note that this is a statically typed language, and the compiler knows the types of these values everywhere in memory mostly statically, but I have no way to express that in the target language."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1556893842.148000",
        "client_msg_id": "b865a953-c2c4-4900-bd86-f9f2bc8c5a97",
        "text": "In Rust, an `enum` carries its type tag always, which when you account for alignment, would double the memory usage of this language implementation, which is unacceptable. Note that in the link above I have a way to turn on type tags when I am debugging an error in the language implementation, but are off by default",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "muY3+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In Rust, an "
                            },
                            {
                                "type": "text",
                                "text": "enum",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " carries its type tag always, which when you account for alignment, would double the memory usage of this language implementation, which is unacceptable. Note that in the link above I have a way to turn on type tags when I am debugging an error in the language implementation, but are off by default"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1556894257.148200",
        "client_msg_id": "d2bd4d24-b0d4-4856-ad33-13a8d2a785fe",
        "text": "If I was writing another dynamically typed language where max performance wasn't a goal, implementing it with Rust enums would be wonderful. But dynamically typed languages are very easy to get robust in C\/C++ too. And sadly I am currently not into dynamic typing :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hCyP=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If I was writing another dynamically typed language where max performance wasn't a goal, implementing it with Rust enums would be wonderful. But dynamically typed languages are very easy to get robust in C\/C++ too. And sadly I am currently not into dynamic typing "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1556894344.148400",
        "client_msg_id": "590ebb21-7aeb-4dca-894c-2f569e18bbe1",
        "text": "Did you see <http:\/\/aardappel.github.io\/lobster\/memory_management.html> btw? I would love to hear what a Rust expert such as yourself thinks of this, good or bad :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aQ2u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Did you see "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/aardappel.github.io\/lobster\/memory_management.html"
                            },
                            {
                                "type": "text",
                                "text": " btw? I would love to hear what a Rust expert such as yourself thinks of this, good or bad "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1556899016.148600",
        "client_msg_id": "0f8c8886-0bc8-4eb0-8841-560073a002a8",
        "text": "All fair points. A big question is--I’m fairly confident that basically any memory management strategy you could implement in C\/C++ (concurrent\/generational GC, etc.) you can with enough work and unsafe code implement in Rust, and usually come out with a nominally safe top-level API at the end of the day. I agree it’s not obvious that once you’ve implemented all the necessary machinery where you’ll be on the spectrum between `SmartPointer&lt;UnderstandableType&gt;` and `OpaqueBlob`, although my hypothesis is that it’s far enough to the left to drive progress.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7mIwj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "All fair points. A big question is--I’m fairly confident that basically any memory management strategy you could implement in C\/C++ (concurrent\/generational GC, etc.) you can with enough work and unsafe code implement in Rust, and usually come out with a nominally safe top-level API at the end of the day. I agree it’s not obvious that once you’ve implemented all the necessary machinery where you’ll be on the spectrum between "
                            },
                            {
                                "type": "text",
                                "text": "SmartPointer<UnderstandableType>",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "OpaqueBlob",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", although my hypothesis is that it’s far enough to the left to drive progress."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1556899390.148800",
        "client_msg_id": "963ed99b-e863-40dd-bd54-1538de47685f",
        "text": "Part of this dream is that then you wouldn’t need a `union { AllOfMyTypes }`, at least for statically typed languages.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tfx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Part of this dream is that then you wouldn’t need a "
                            },
                            {
                                "type": "text",
                                "text": "union { AllOfMyTypes }",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", at least for statically typed languages."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1556899471.149000",
        "client_msg_id": "312dbb9a-a388-46ba-8749-f37131af2a53",
        "text": "One way of looking at it: a statically typed, garbage collected language implemented in Rust is not a huge runtime or virtual machine. It’s just a staged metaprogram that inserts `Gc` or `BumpGc` (or whatever) types, constructors, and dereferences at all the appropriate places.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WLP4I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One way of looking at it: a statically typed, garbage collected language implemented in Rust is not a huge runtime or virtual machine. It’s just a staged metaprogram that inserts "
                            },
                            {
                                "type": "text",
                                "text": "Gc",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "text",
                                "text": "BumpGc",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (or whatever) types, constructors, and dereferences at all the appropriate places."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1556899553.149200",
        "client_msg_id": "307bd521-3536-4e94-bd2a-0afd1e5091fa",
        "text": "That said, having not tried this beyond an inefficient toy language, it would not be wholly surprising if that’s not efficiently achievable today due to limitations I can’t foresee.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ypl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That said, having not tried this beyond an inefficient toy language, it would not be wholly surprising if that’s not efficiently achievable today due to limitations I can’t foresee."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1556899578.149400",
        "client_msg_id": "5b8837ee-b235-47c5-8f34-cd0fed4b5de0",
        "text": "And I haven’t read the Lobster page but it seems like a good read, I’ll check it out! Thanks for the healthy discussion <@UHDQ62M4P>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m56b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And I haven’t read the Lobster page but it seems like a good read, I’ll check it out! Thanks for the healthy discussion "
                            },
                            {
                                "type": "user",
                                "user_id": "UHDQ62M4P"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1556900082.149600",
        "client_msg_id": "50f45c26-c0da-4da2-b61d-9d4a22790add",
        "text": "Yup, I am pretty sure we'll see a great increase of language implemented in Rust (very suitable) or even compiling to Rust.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=kS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yup, I am pretty sure we'll see a great increase of language implemented in Rust (very suitable) or even compiling to Rust."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1556900100.149800",
        "client_msg_id": "e6a62597-69eb-4cf2-aab9-6bd95402a8ab",
        "text": "And yes, this is a topic I'm pretty passionate about :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nc=VE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And yes, this is a topic I'm pretty passionate about "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1556908431.150200",
        "client_msg_id": "0bf11292-6fc6-4ca7-b5d8-62b7b3a90175",
        "text": "Would you implement Lobster in Rust? Or in Lobster itself? :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=P7e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would you implement Lobster in Rust? Or in Lobster itself? "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1556909235.150400",
        "client_msg_id": "491c91e9-768a-4224-915b-08e92ad365ee",
        "text": "<@U8A5MS6R1> The VM is going to stay in C++ for the foreseeable future, because of reasons mentioned above (mainly speed).. but the compiler itself could easily move to another language, which would make it nicer to work on. Rust and Lobster itself would be the primary contenders :slightly_smiling_face: It's a lot of work rewriting that much C++ though, so I thought of doing it incrementally.. first the parser etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556821342.118200",
        "parent_user_id": "UJCQYPLMN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zle",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " The VM is going to stay in C++ for the foreseeable future, because of reasons mentioned above (mainly speed).. but the compiler itself could easily move to another language, which would make it nicer to work on. Rust and Lobster itself would be the primary contenders "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " It's a lot of work rewriting that much C++ though, so I thought of doing it incrementally.. first the parser etc."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1556909601.150600",
        "client_msg_id": "1998f5be-be02-42d3-8cfc-c4d4e44882ec",
        "text": "Trending on HN now: <https:\/\/news.ycombinator.com\/item?id=19804478>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556770732.488500",
        "parent_user_id": "UFXFB1RK8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YCD5O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Trending on HN now: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=19804478"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]