[
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1649576169.153029",
        "edited": {
            "user": "U0378MDUG1Y",
            "ts": "1649608315.000000"
        },
        "client_msg_id": "D4871CF1-7786-4A6F-8580-708EE8051F94",
        "text": "A book called “_Diagramming Techniques for Analysts and Programmers”_ (1985). Found it through a paper by David Harel. He descibed it as: \n\n&gt; The state of the art on diagrammatic languages at the time can be gleaned from the book by Martin and McClure titled _Diagramming Techniques for Analysts and Programmers_. This book discussed many visual techniques, but little attention was given to the need for solid semantics and\/or executability. Curiously, this book could have helped convince people that visual languages should not be taken seriously as means to actually program a system the way a standard programming language can.\n&gt; \n<https:\/\/archive.org\/details\/diagrammingtechn00mart\/page\/310\/mode\/2up|https:\/\/archive.org\/details\/diagrammingtechn00mart\/page\/310\/mode\/2up>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1092a4f97098",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-23\/3286745266387_1092a4f970985ebc8d2b_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Shank",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chris.shank.23",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1649576169.153029",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1649684437.656929",
        "reply_users": [
            "UAJKEBGP8"
        ],
        "replies": [
            {
                "user": "UAJKEBGP8",
                "ts": "1649684437.656929"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/archive.org\/details\/diagrammingtechn00mart\/page\/310\/mode\/2up",
                "thumb_url": "https:\/\/archive.org\/services\/img\/diagrammingtechn00mart",
                "thumb_width": 180,
                "thumb_height": 247,
                "image_url": "https:\/\/archive.org\/services\/img\/diagrammingtechn00mart",
                "image_width": 180,
                "image_height": 247,
                "image_bytes": 10219,
                "service_icon": "https:\/\/archive.org\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/archive.org\/details\/diagrammingtechn00mart\/page\/310\/mode\/2up",
                "fallback": "Internet Archive: Diagramming techniques for analysts and programmers : Martin, James, 1933- : Free Download, Borrow, and Streaming : Internet Archive",
                "text": "Includes bibliographies and index",
                "title": "Diagramming techniques for analysts and programmers : Martin, James, 1933- : Free Download, Borrow, and Streaming : Internet Archive",
                "title_link": "https:\/\/archive.org\/details\/diagrammingtechn00mart\/page\/310\/mode\/2up",
                "service_name": "Internet Archive"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f18n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A book called “"
                            },
                            {
                                "type": "text",
                                "text": "Diagramming Techniques for Analysts and Programmers” ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "(1985). Found it through a paper by David Harel. He descibed it as: \n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The state of the art on diagrammatic languages at the time can be gleaned from the book by Martin and McClure titled "
                            },
                            {
                                "type": "text",
                                "text": "Diagramming Techniques for Analysts and Programmers",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". This book discussed many visual techniques, but little attention was given to the need for solid semantics and\/or executability. Curiously, this book could have helped convince people that visual languages should not be taken seriously as means to actually program a system the way a standard programming language can.\n"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/archive.org\/details\/diagrammingtechn00mart\/page\/310\/mode\/2up",
                                "text": "https:\/\/archive.org\/details\/diagrammingtechn00mart\/page\/310\/mode\/2up"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1649623640.570659",
        "edited": {
            "user": "U0378MDUG1Y",
            "ts": "1649624420.000000"
        },
        "client_msg_id": "2E0E6738-54CC-422E-8DDF-2A617AE14010",
        "text": "Also started reading through “Usability Analysis of Visual Programming Environments: a ‘cognitive dimensions’ framework” by Green and Petre (1996).\n\n&gt; The dimensions in outline: The list of dimensions that we shall use in this paper follows. For each dimension we supply a thumb-nail description. A lengthier account of the dimension and its relation to the underlying evidence will be found in the appropriate section below.\n&gt; \n&gt; • *Abstraction Gradient*: What are the minimum and maximum levels of abstraction? Can fragments be encapsulated?\n&gt; • *Closeness of mapping*: What ‘programming games’ need to be learned?\n&gt; • *Consistency*: When some of the language has been learnt, how much of the rest can be inferred?\n&gt; • *Diffuseness*: How many symbols or graphic entities are required to express a meaning?\n&gt; • *Error-proneness*: Does the design of the notation induce ‘careless mistakes’?\n&gt; • *Hard mental operations*: Are there places where the user needs to resort to fingers or pen- cilled annotation to keep track of what’s happening?\n&gt; • *Hidden dependencies*: Is every dependency overtly indicated in both directions? Is the indi- cation perceptual or only symbolic?\n&gt; • *Premature commitment*: Do programmers have to make decisions before they have the information they need?\n&gt; • *Progressive evaluation*: Can a partially-complete program be executed to obtain feedback on “How am I doing”?\n&gt; • *Role-expressiveness*: Can the reader see how each component of a program relates to the whole?\n&gt; • *Secondary notation*: Can programmers use layout, colour, or other cues to convey extra meaning, above and beyond the ‘official’ semantics of the language?\n&gt; • *Viscosity*: How much effort is required to perform a single change?\n&gt; • *Visibility*: Is every part of the code simultaneously visible (assuming a large enough display), or is it at least possible to juxtapose any two parts side-by-side at will? If the code is dispersed, is it at least possible to know in what order to read it?\n<https:\/\/web.engr.oregonstate.edu\/~burnett\/CS589and584\/CS589-papers\/CogDimsPaper.pdf|https:\/\/web.engr.oregonstate.edu\/~burnett\/CS589and584\/CS589-papers\/CogDimsPaper.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1092a4f97098",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-23\/3286745266387_1092a4f970985ebc8d2b_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Shank",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chris.shank.23",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h+8Zc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also started reading through “Usability Analysis of Visual Programming Environments: a ‘cognitive dimensions’ framework” by Green and Petre (1996).\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The dimensions in outline: The list of dimensions that we shall use in this paper follows. For each dimension we supply a thumb-nail description. A lengthier account of the dimension and its relation to the underlying evidence will be found in the appropriate section below.\n"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Abstraction Gradient",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ": What are the minimum and maximum levels of abstraction? Can fragments be encapsulated?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Closeness of mapping",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ": What ‘programming games’ need to be learned?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Consistency",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ": When some of the language has been learnt, how much of the rest can be inferred?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Diffuseness",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ": How many symbols or graphic entities are required to express a meaning?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Error-proneness",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ": Does the design of the notation induce ‘careless mistakes’?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Hard mental operations",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ": Are there places where the user needs to resort to fingers or pen- cilled annotation to keep track of what’s happening?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Hidden dependencies",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ": Is every dependency overtly indicated in both directions? Is the indi- cation perceptual or only symbolic?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Premature commitment",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ": Do programmers have to make decisions before they have the information they need?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Progressive evaluation",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ": Can a partially-complete program be executed to obtain feedback on “How am I doing”?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Role-expressiveness",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ": Can the reader see how each component of a program relates to the whole?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Secondary notation",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ": Can programmers use layout, colour, or other cues to convey extra meaning, above and beyond the ‘official’ semantics of the language?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Viscosity",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ": How much effort is required to perform a single change?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Visibility",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ": Is every part of the code simultaneously visible (assuming a large enough display), or is it at least possible to juxtapose any two parts side-by-side at will? If the code is dispersed, is it at least possible to know in what order to read it?"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "offset": 0,
                        "border": 1
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/web.engr.oregonstate.edu\/~burnett\/CS589and584\/CS589-papers\/CogDimsPaper.pdf",
                                "text": "https:\/\/web.engr.oregonstate.edu\/~burnett\/CS589and584\/CS589-papers\/CogDimsPaper.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UMV4B97GT",
                    "U014WA16VNJ",
                    "U013ZLJARC7"
                ],
                "count": 3
            }
        ]
    }
]