[
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1553530106.142800",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1553530190.000000"
        },
        "client_msg_id": "c7281273-c459-4e11-8670-726c58159019",
        "text": "<@UA8HY8R7B> what do you mean, how would you \"get rid of `merge`\"? You suggest mandating rebases only? :confused:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1553340554.128300",
        "parent_user_id": "UA8HY8R7B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IvQee",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA8HY8R7B"
                            },
                            {
                                "type": "text",
                                "text": " what do you mean, how would you \"get rid of "
                            },
                            {
                                "type": "text",
                                "text": "merge",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\"? You suggest mandating rebases only? "
                            },
                            {
                                "type": "emoji",
                                "name": "confused",
                                "unicode": "1f615"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA8HY8R7B",
        "type": "message",
        "ts": "1553533411.143300",
        "client_msg_id": "d2ff39a6-33ca-47b0-b8f1-359963b71299",
        "text": "Yeah I think rebase-only could work. It would be necessary to keep the commit tree understandable. And having a single joining mechanism would simplify the model. When I show git to non-programmers, merging is always the biggest head-scratcher since people think of history as a linear thing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7db3c1ad975",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e7db3c1ad975b0355d3047ca8acb7c54.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Nikolas",
            "real_name": "Nikolas Martens",
            "display_name": "Nikolas",
            "team": "T5TCAFTA9",
            "name": "nikolas.m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1553340554.128300",
        "parent_user_id": "UA8HY8R7B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VmVx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah I think rebase-only could work. It would be necessary to keep the commit tree understandable. And having a single joining mechanism would simplify the model. When I show git to non-programmers, merging is always the biggest head-scratcher since people think of history as a linear thing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1553534205.143500",
        "client_msg_id": "ec1fa3d0-248d-4426-8e95-75a840940504",
        "text": "Surely you would need to perform merges when you rebase? Resolve conflicts? Removing merges from the UI just means people have to manage them in their heads.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1553340554.128300",
        "parent_user_id": "UA8HY8R7B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tjRj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Surely you would need to perform merges when you rebase? Resolve conflicts? Removing merges from the UI just means people have to manage them in their heads."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1553537053.143700",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1553537171.000000"
        },
        "client_msg_id": "0871c888-2bb1-4bbf-9141-1fa7e7432d09",
        "text": "Yeah, I mean, conceptually, two changes were made independently and then merged later. It's non-obvious how auto-merging is possible, but in the abstract, combining changes is an intuitive idea.\n\nI admit to having avoided rebasing because\n1. I don't understand well enough how it handles merge conflicts, and how to undo if I don't like the result\n2. after rebase, the newest commits are \"fake\" - they contain files whose content (hash) never existed before, so theoretically unit tests could fail on commits that previously succeeded (new commits associated with the same commit messages)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1553340554.128300",
        "parent_user_id": "UA8HY8R7B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fxr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I mean, conceptually, two changes were made independently and then merged later. It's non-obvious how auto-merging is possible, but in the abstract, combining changes is an intuitive idea.\n\nI admit to having avoided rebasing because\n1. I don't understand well enough how it handles merge conflicts, and how to undo if I don't like the result\n2. after rebase, the newest commits are \"fake\" - they contain files whose content (hash) never existed before, so theoretically unit tests could fail on commits that previously succeeded (new commits associated with the same commit messages)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA8HY8R7B",
        "type": "message",
        "ts": "1553550183.144500",
        "client_msg_id": "b07a6c05-6e6f-4716-bc19-218484f9ade3",
        "text": "Rebasing and merging are not that different. The main difference is that a rebase doesn't keep a reference to the source commits but creates new ones. So conflicts work pretty much the same way, but there are some situations where it get's pretty bad when rebasing many commits with many conflicts.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7db3c1ad975",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e7db3c1ad975b0355d3047ca8acb7c54.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Nikolas",
            "real_name": "Nikolas Martens",
            "display_name": "Nikolas",
            "team": "T5TCAFTA9",
            "name": "nikolas.m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1553340554.128300",
        "parent_user_id": "UA8HY8R7B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A8DvH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Rebasing and merging are not that different. The main difference is that a rebase doesn't keep a reference to the source commits but creates new ones. So conflicts work pretty much the same way, but there are some situations where it get's pretty bad when rebasing many commits with many conflicts."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1553550379.144700",
        "client_msg_id": "d51b2e31-7124-422a-acca-e9c34c2cbd41",
        "text": "Isn't conflict resolution the biggest reason that merging is a head-scratcher to non-programmers?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1553340554.128300",
        "parent_user_id": "UA8HY8R7B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d+H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Isn't conflict resolution the biggest reason that merging is a head-scratcher to non-programmers?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA8HY8R7B",
        "type": "message",
        "ts": "1553550553.144900",
        "client_msg_id": "c2eb9f80-175f-4fdd-b3e4-e0eaf00fa443",
        "text": "<@UD6EXQVM0> I wouldn't call the new commits \"fake\" though. They are different commits (ie snapshots), but with the same diffs. The old commits are still around even though no branch points to them anymore. And tests could also fail on a merge commit even though they passed on the merged commits. So that situation is very similar.\n\nBut yeah, being able to undo any operation like a rebase is definitely a must-have for any software that wants to make version control more accessible. Basically version-control of the version history.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7db3c1ad975",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e7db3c1ad975b0355d3047ca8acb7c54.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Nikolas",
            "real_name": "Nikolas Martens",
            "display_name": "Nikolas",
            "team": "T5TCAFTA9",
            "name": "nikolas.m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1553340554.128300",
        "parent_user_id": "UA8HY8R7B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7Bm31",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UD6EXQVM0"
                            },
                            {
                                "type": "text",
                                "text": " I wouldn't call the new commits \"fake\" though. They are different commits (ie snapshots), but with the same diffs. The old commits are still around even though no branch points to them anymore. And tests could also fail on a merge commit even though they passed on the merged commits. So that situation is very similar.\n\nBut yeah, being able to undo any operation like a rebase is definitely a must-have for any software that wants to make version control more accessible. Basically version-control of the version history."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA8HY8R7B",
        "type": "message",
        "ts": "1553550760.145100",
        "client_msg_id": "a9298d5a-673d-4b2d-9294-46f65d8a7b90",
        "text": "Yeah conflicts are a big head-scratcher. And they don't go away with rebasing and might even get worse. But I hope that they become simpler conceptually and less of a turn-off. But that will have to be tested big time.\n\nMy target is definitely small projects. I always feel like git is hopelessly overpowered for projects smaller than the Linux kernel. But that's why I wanna make it a facade for git so you can get the full power if you need.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7db3c1ad975",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e7db3c1ad975b0355d3047ca8acb7c54.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Nikolas",
            "real_name": "Nikolas Martens",
            "display_name": "Nikolas",
            "team": "T5TCAFTA9",
            "name": "nikolas.m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1553340554.128300",
        "parent_user_id": "UA8HY8R7B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nXxs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah conflicts are a big head-scratcher. And they don't go away with rebasing and might even get worse. But I hope that they become simpler conceptually and less of a turn-off. But that will have to be tested big time.\n\nMy target is definitely small projects. I always feel like git is hopelessly overpowered for projects smaller than the Linux kernel. But that's why I wanna make it a facade for git so you can get the full power if you need."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1553551411.145300",
        "client_msg_id": "e557e06c-5589-4499-8bb7-dfbf23961477",
        "text": "To me, I would prefer to treat rebasing as a view rather than a change to the underlying commits.  I mean the ground truth is that the nest of messy commits and a rebase a sort of homomorphism that untangles them.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1553340554.128300",
        "parent_user_id": "UA8HY8R7B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RDr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To me, I would prefer to treat rebasing as a view rather than a change to the underlying commits.  I mean the ground truth is that the nest of messy commits and a rebase a sort of homomorphism that untangles them."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1553574763.146100",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1553574848.000000"
        },
        "client_msg_id": "c72ffaae-42e8-4379-8e1d-5d060683d4ff",
        "text": "As a facilitator, i am trying to bring all the next-gen general purpose language designers into some form of communication and\/or cooperation. Inertia being the most powerful force in the universe, the real competitors are not so much other language projects, but the entrenched languages and their many supporters. Language designers are a prickly bunch because they all fall in love with the creations which are like a baby. I have a general purpose language project Beads which is a fusion of a declarative\/deductive type of language bundled with a graphical\/event model and a graph database.\n\nOne of things i have been building are specifications and working examples for a series of reference programs so that potential users can better evaluate which language they want to invest their time learning in detail. We only have so many hours to spend learning new tools vs. using the tools, and one of the things that makes it so hard is that the exact same program is not often implemented across multiple languages. The TodoMVC app for example is one of the worst examples possible, because it relies on text entry fields as the primary data being manipulated, and the text entry field is really the domain of the operating system, as there are at a  million lines of code underlying text input with all the tricky aspects of font rendering, input method control, etc. The reason modern graphical operating systems are so few in number is that when you say \"i would like to have Asian language support\", that blows up into a monster project. The majority of people on this earth don't use the Roman alphabet, and just Japanese by itself is mind-bogglingly difficult to handle. So i am concentrating on things like a clock, wristwatch, tic-tac-toe, snake, chess, and will be adding some engineering and finance examples. If you can't make a stock portfolio report easily your language will never make it in finance for example.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552463295.059100",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iyI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As a facilitator, i am trying to bring all the next-gen general purpose language designers into some form of communication and\/or cooperation. Inertia being the most powerful force in the universe, the real competitors are not so much other language projects, but the entrenched languages and their many supporters. Language designers are a prickly bunch because they all fall in love with the creations which are like a baby. I have a general purpose language project Beads which is a fusion of a declarative\/deductive type of language bundled with a graphical\/event model and a graph database.\n\nOne of things i have been building are specifications and working examples for a series of reference programs so that potential users can better evaluate which language they want to invest their time learning in detail. We only have so many hours to spend learning new tools vs. using the tools, and one of the things that makes it so hard is that the exact same program is not often implemented across multiple languages. The TodoMVC app for example is one of the worst examples possible, because it relies on text entry fields as the primary data being manipulated, and the text entry field is really the domain of the operating system, as there are at a  million lines of code underlying text input with all the tricky aspects of font rendering, input method control, etc. The reason modern graphical operating systems are so few in number is that when you say \"i would like to have Asian language support\", that blows up into a monster project. The majority of people on this earth don't use the Roman alphabet, and just Japanese by itself is mind-bogglingly difficult to handle. So i am concentrating on things like a clock, wristwatch, tic-tac-toe, snake, chess, and will be adding some engineering and finance examples. If you can't make a stock portfolio report easily your language will never make it in finance for example."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1553574964.146400",
        "client_msg_id": "9d2a9e9a-b880-4001-84db-63aad4749efa",
        "text": "In Academia for example they used to Towers of Hanoi examples and things like that which are intrinsically recursive in their solution. the problem with those types of examples is they are purely terminal based. We are not in the 70's any more, and a language which is terminal-only has zero chance in today's reality.  Graphics really raises the bar for a language trying to gain adoption IMHO.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552463295.059100",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Yyar",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In Academia for example they used to Towers of Hanoi examples and things like that which are intrinsically recursive in their solution. the problem with those types of examples is they are purely terminal based. We are not in the 70's any more, and a language which is terminal-only has zero chance in today's reality.  Graphics really raises the bar for a language trying to gain adoption IMHO."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1553575290.146600",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1553575375.000000"
        },
        "client_msg_id": "cb80f593-c23d-4217-857e-d4df78d25a2e",
        "text": "This is one of the big things holding back Erlang\/Elixir, they were designed assuming an external link to a graphical model, so then none of the language features support drawing.  Drawing code is a sizable fraction of every modern graphical interactive product, if you start counting source code tokens as a percentage. All of the older languages predate graphical interfaces and have not aged well as a consequence. I am sure many people wish we could go back to Commodore\/Apple 2 days where the screen was character based, and the 80 x 24 matrix was a dream to work with; so easy, so concrete.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552463295.059100",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TWMT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is one of the big things holding back Erlang\/Elixir, they were designed assuming an external link to a graphical model, so then none of the language features support drawing.  Drawing code is a sizable fraction of every modern graphical interactive product, if you start counting source code tokens as a percentage. All of the older languages predate graphical interfaces and have not aged well as a consequence. I am sure many people wish we could go back to Commodore\/Apple 2 days where the screen was character based, and the 80 x 24 matrix was a dream to work with; so easy, so concrete."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]