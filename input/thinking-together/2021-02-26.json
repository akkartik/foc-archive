[
    {
        "user": "U01NM2BTDL7",
        "type": "message",
        "ts": "1614343697.061800",
        "client_msg_id": "AEBD4089-F04E-4A5B-906B-96CF73358D83",
        "text": "<@UL5AX4G2H> ah found it, :pray: ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g41340a7f393",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/41340a7f3930b7d87be5949c4e538410.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Francois Laberge",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "francoislaberge",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614267742.055200",
        "parent_user_id": "U01NM2BTDL7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nq12",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UL5AX4G2H"
                            },
                            {
                                "type": "text",
                                "text": " ah found it, "
                            },
                            {
                                "type": "emoji",
                                "name": "pray",
                                "unicode": "1f64f"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1614366249.067500",
        "client_msg_id": "3d51b221-1162-4418-b407-86b22f8457cf",
        "text": "Question for <@UE1JQM9HQ> of <https:\/\/gtoolkit.com>: how often do you end up finding problems in the code for viewing a specific type of object? Like, where you're debugging a specific app and you spend a long time befuddled before realizing that your senses have been lying to you because of a bug in some app-specific view that you wrote. It was hiding some crucial bit of state, or it gets stuck in an infinite loop that hangs the whole system, and now you have to debug the debug system without being able to use the debug system.\n\nI wonder if this might be the reason people dislike debug-by-print as well. It is more powerful, but it forces everyone to wrestle with something typically considered the domain of systems programmers: the act of observing getting perturbed by the thing doing the observing. Or as James Mickens eloquently put it: I HAVE NO TOOLS BECAUSE I HAVE DESTROYED MY TOOLS WITH MY TOOLS. (<https:\/\/www.usenix.org\/system\/files\/1311_05-08_mickens.pdf>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614366249.067500",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1614433023.071100",
        "reply_users": [
            "UE1JQM9HQ",
            "UJBAJNFLK",
            "UCUSW7WVD"
        ],
        "replies": [
            {
                "user": "UE1JQM9HQ",
                "ts": "1614368456.067800"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1614429851.068500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1614433023.071100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "Glamorous Toolkit",
                "title_link": "https:\/\/gtoolkit.com\/",
                "text": "Glamorous Toolkit is the moldable development environment",
                "fallback": "Glamorous Toolkit",
                "from_url": "https:\/\/gtoolkit.com\/",
                "service_icon": "https:\/\/gtoolkit.com\/favicon.ico",
                "service_name": "gtoolkit.com",
                "id": 1,
                "original_url": "https:\/\/gtoolkit.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DCcu\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Question for "
                            },
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            },
                            {
                                "type": "text",
                                "text": " of "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/gtoolkit.com"
                            },
                            {
                                "type": "text",
                                "text": ": how often do you end up finding problems in the code for viewing a specific type of object? Like, where you're debugging a specific app and you spend a long time befuddled before realizing that your senses have been lying to you because of a bug in some app-specific view that you wrote. It was hiding some crucial bit of state, or it gets stuck in an infinite loop that hangs the whole system, and now you have to debug the debug system without being able to use the debug system.\n\nI wonder if this might be the reason people dislike debug-by-print as well. It is more powerful, but it forces everyone to wrestle with something typically considered the domain of systems programmers: the act of observing getting perturbed by the thing doing the observing. Or as James Mickens eloquently put it: I HAVE NO TOOLS BECAUSE I HAVE DESTROYED MY TOOLS WITH MY TOOLS. ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.usenix.org\/system\/files\/1311_05-08_mickens.pdf"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1614368456.067800",
        "edited": {
            "user": "UE1JQM9HQ",
            "ts": "1614368479.000000"
        },
        "client_msg_id": "ac3b6ffd-eb97-4252-92c3-b8e206e4996d",
        "text": "I think it is important to distinguish between views and the environment. The views are typically tiny. I do not need to understand a view, I simply create a new one :slightly_smiling_face:.\n\nIt sometimes does happen for the environment itself to be broken, indeed. A Smalltalk image would have a couple of layers. Itâ€™s also worth noting that all tools are nothing but glorified inspectors. Powered by a reflective language, you can get quite far.\n\nHere is an example of how I once had to debug the debugger using the inspector: <http:\/\/www.humane-assessment.com\/blog\/debugging-the-debugger-with-the-inspector\/>\n(humane assessment was the precursor name for what we now call Moldable Development)\n\nDoes this address the question?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614366249.067500",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AqO46",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it is important to distinguish between views and the environment. The views are typically tiny. I do not need to understand a view, I simply create a new one "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nIt sometimes does happen for the environment itself to be broken, indeed. A Smalltalk image would have a couple of layers. Itâ€™s also worth noting that all tools are nothing but glorified inspectors. Powered by a reflective language, you can get quite far.\n\nHere is an example of how I once had to debug the debugger using the inspector: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.humane-assessment.com\/blog\/debugging-the-debugger-with-the-inspector\/"
                            },
                            {
                                "type": "text",
                                "text": "\n(humane assessment was the precursor name for what we now call Moldable Development)\n\nDoes this address the question?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]