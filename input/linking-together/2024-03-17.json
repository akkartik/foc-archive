[
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1710672490.622679",
        "client_msg_id": "bf2301d1-46f4-4f9b-a7b7-1fd0a78173a7",
        "text": "OK, I've read the doc, and I agree with all the sentiments and motivations and broad concepts, but of course, don't agree with the details of the solution side! Basman's solution alludes to Declarative programming as a better alternative to Imperative, but doesn't call for that jump as explicitly as I do, or recognise it as a choice between duals: what I call the \"Inversion\". Here's another one from my blog on that: <https:\/\/duncancragg.substack.com\/p\/the-inversion>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710572601.034079",
        "parent_user_id": "U0378MDUG1Y",
        "attachments": [
            {
                "image_url": "https:\/\/substackcdn.com\/image\/fetch\/w_1200,h_600,c_fill,f_jpg,q_auto:good,fl_progressive:steep,g_auto\/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62a495a4-c561-4037-aff1-307fedf9ab9e_960x540.png",
                "image_width": 960,
                "image_height": 540,
                "image_bytes": 33081,
                "from_url": "https:\/\/duncancragg.substack.com\/p\/the-inversion",
                "service_icon": "https:\/\/substackcdn.com\/image\/fetch\/f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F97f0bc34-daa0-452a-b2c4-04bc1aaeee43%2Fapple-touch-icon-57x57.png",
                "id": 1,
                "original_url": "https:\/\/duncancragg.substack.com\/p\/the-inversion",
                "fallback": "The Inversion",
                "text": "Techie article! The Inversion is my architectural vision: freeing our data into a virtual world.",
                "title": "The Inversion",
                "title_link": "https:\/\/duncancragg.substack.com\/p\/the-inversion",
                "service_name": "duncancragg.substack.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sWBnM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OK, I've read the doc, and I agree with all the sentiments and motivations and broad concepts, but of course, don't agree with the details of the solution side! Basman's solution alludes to Declarative programming as a better alternative to Imperative, but doesn't call for that jump as explicitly as I do, or recognise it as a choice between duals: what I call the \"Inversion\". Here's another one from my blog on that: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/duncancragg.substack.com\/p\/the-inversion"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1710689429.142899",
        "client_msg_id": "9b5aaa1a-c97b-4177-a8de-4004ca545710",
        "text": "We shoulda pinged the author! <@UEH6T3RJB> :hugging_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710572601.034079",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M+LfL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We shoulda pinged the author! "
                            },
                            {
                                "type": "user",
                                "user_id": "UEH6T3RJB"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "hugging_face",
                                "unicode": "1f917"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1710721312.920519",
        "edited": {
            "user": "UN57U8V53",
            "ts": "1710721358.000000"
        },
        "client_msg_id": "8e40db3f-8a6c-4e5d-97ac-5e9887ce90fe",
        "text": "this has been my major motivation recently\nThere seems to be a bit split between top-down, where you describe a global choreography (generate a program per actor) vs generating global properties (c hecking guarantees by combining the behavior of different actors)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710392357.000059",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jE1Ko",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this has been my major motivation recently\nThere seems to be a bit split between top-down, where you describe a global choreography (generate a program per actor) vs generating global properties (c hecking guarantees by combining the behavior of different actors)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U05UK5T7LPP"
                ],
                "count": 1
            }
        ]
    }
]