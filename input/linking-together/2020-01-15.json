[
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1579124732.180900",
        "client_msg_id": "30608b7c-fc11-4324-b116-ca2411893edd",
        "text": "Is there any 'intro to writing papers' for industry folk?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579124732.180900",
        "reply_count": 6,
        "reply_users_count": 4,
        "latest_reply": "1579176069.212200",
        "reply_users": [
            "UBN9AFS0N",
            "UCUSW7WVD",
            "U8A5MS6R1",
            "UAZT04VT4"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1579124778.181000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1579131557.181200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1579131616.181500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1579132018.181700"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1579135117.194700"
            },
            {
                "user": "UAZT04VT4",
                "ts": "1579176069.212200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4+m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there any 'intro to writing papers' for industry folk?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1579124778.181000",
        "client_msg_id": "23256983-8c1b-4d24-9120-38273b1bc10c",
        "text": "maybe this? <https:\/\/www.biorxiv.org\/content\/10.1101\/088278v5.full.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579124732.180900",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nX7Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "maybe this? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.biorxiv.org\/content\/10.1101\/088278v5.full.pdf"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1579131557.181200",
        "client_msg_id": "277e6756-70a5-492b-bc22-ddcfe547dc93",
        "text": "<https:\/\/www.microsoft.com\/en-us\/research\/academic-program\/write-great-research-paper|https:\/\/www.microsoft.com\/en-us\/research\/academic-program\/write-great-research-paper>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579124732.180900",
        "parent_user_id": "U8A5MS6R1",
        "attachments": [
            {
                "service_name": "Microsoft Research",
                "title": "How to write a great research paper - Microsoft Research",
                "title_link": "https:\/\/www.microsoft.com\/en-us\/research\/academic-program\/write-great-research-paper",
                "text": "Related links How to write a great research proposal How to give a great research talk Contact Simon Peyton Jones: <mailto:simonpj@microsoft.com|simonpj@microsoft.com>",
                "fallback": "Microsoft Research: How to write a great research paper - Microsoft Research",
                "thumb_url": "https:\/\/www.microsoft.com\/en-us\/research\/wp-content\/uploads\/2016\/06\/paper_header_2.jpg",
                "from_url": "https:\/\/www.microsoft.com\/en-us\/research\/academic-program\/write-great-research-paper",
                "thumb_width": 1920,
                "thumb_height": 720,
                "service_icon": "https:\/\/www.microsoft.com\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/www.microsoft.com\/en-us\/research\/academic-program\/write-great-research-paper"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KGu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.microsoft.com\/en-us\/research\/academic-program\/write-great-research-paper",
                                "text": "https:\/\/www.microsoft.com\/en-us\/research\/academic-program\/write-great-research-paper"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1579131616.181500",
        "client_msg_id": "3de5270c-6e05-4e11-8515-a107fc5aedd7",
        "text": "Don't miss the 'other resources' tab.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579124732.180900",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vwa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Don't miss the 'other resources' tab."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "From <https:\/\/www.cs.tufts.edu\/~nr\/pubs\/two-abstract.html|https:\/\/www.cs.tufts.edu\/~nr\/pubs\/two-abstract.html>",
        "files": [
            {
                "id": "FSE6WMM2M",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "UCUSW7WVD",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/h73",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "From "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.cs.tufts.edu\/~nr\/pubs\/two-abstract.html",
                                "text": "https:\/\/www.cs.tufts.edu\/~nr\/pubs\/two-abstract.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1579132018.181700",
        "client_msg_id": "bea0f5d6-e071-4950-bef2-fc0c553c405c",
        "thread_ts": "1579124732.180900",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1579134920.191200",
        "client_msg_id": "D56EA1F2-1042-4E22-B611-A16337B03BB3",
        "text": "i’m optimistic about VR at the moment for a few reasons: the oculus quest is better and cheaper than it has any right to be, quill and animation tools are already crazy easy to work with even if they’re only at the photoshop 1.0 level of functionality, valve’s knuckles controllers are finally bringing high-fidelity input to VR, and novel physics engines like boneworks are providing an environment that can react properly to those inputs. beat saber and boneworks are both providing evidence of latent consumer demand when the software is actually good enough, and certain hobbyists are proving that pretty much anyone can build similar quality engines in their spare time (can’t find the youtube vids of the one i’m thinking of). the core value of VR depends on people being able to really DO stuff in it, and while i think oculus etc was a good initial boost in terms of the persuasiveness of immersive experiences, it feels like people and companies are finally starting to address acting in instead of just being in virtual spaces. \n\n\nalso VRchat is completely bonkers—i haven’t had the chance to try it but just from let’s plays it definitely seems like a community of misfits that might produce something exciting",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578859395.088900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FmW8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i’m optimistic about VR at the moment for a few reasons: the oculus quest is better and cheaper than it has any right to be, quill and animation tools are already crazy easy to work with even if they’re only at the photoshop 1.0 level of functionality, valve’s knuckles controllers are finally bringing high-fidelity input to VR, and novel physics engines like boneworks are providing an environment that can react properly to those inputs. beat saber and boneworks are both providing evidence of latent consumer demand when the software is actually good enough, and certain hobbyists are proving that pretty much anyone can build similar quality engines in their spare time (can’t find the youtube vids of the one i’m thinking of). the core value of VR depends on people being able to really DO stuff in it, and while i think oculus etc was a good initial boost in terms of the persuasiveness of immersive experiences, it feels like people and companies are finally starting to address acting in instead of just being in virtual spaces. \n\n\nalso VRchat is completely bonkers—i haven’t had the chance to try it but just from let’s plays it definitely seems like a community of misfits that might produce something exciting"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UBSMEUXAA",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1579134953.191900",
        "client_msg_id": "F14E0F85-CAFE-4369-A64C-466A12E58904",
        "text": "i didn’t really answer the question, sorry lol",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578859395.088900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G5n\/F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i didn’t really answer the question, sorry lol"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1579135030.192500",
        "client_msg_id": "BED42233-63E7-4FA6-AAD2-557430060574",
        "text": "the slack thing hit me hard lol",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578977299.165700",
        "parent_user_id": "UFLN9JFRT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f=T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the slack thing hit me hard lol"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1579135117.194700",
        "client_msg_id": "47df06ad-504d-480e-a099-aa31e87bec35",
        "text": "Thanks folks - great stuff!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579124732.180900",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R5d\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks folks - great stuff!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1579135214.197200",
        "client_msg_id": "80A7C0C1-A56B-4BFF-BB1C-88B63F3FA7C6",
        "text": "it feels like programming these kinds of magic switch statements are a real boundary condition for text-based programming: in something like photoshop, you don’t have to interface with a wild abstraction to eg add another layer and you usually wouldn’t want to. but having to be able to abstract over text leaves us with the sophie’s choice of boiling spaghetti and using ctrl f to edit it later or turning your code into a TPS report with sound semantics but a corrupt and inefficient bureaucracy ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578993190.168400",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YUsBB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it feels like programming these kinds of magic switch statements are a real boundary condition for text-based programming: in something like photoshop, you don’t have to interface with a wild abstraction to eg add another layer and you usually wouldn’t want to. but having to be able to abstract over text leaves us with the sophie’s choice of boiling spaghetti and using ctrl f to edit it later or turning your code into a TPS report with sound semantics but a corrupt and inefficient bureaucracy "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1579135611.197800",
        "client_msg_id": "01f48e57-456a-49f0-b7a8-c734af2898ef",
        "text": "&gt; the core value of VR depends on people being able to really DO stuff in it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578859395.088900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RiR",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the core value of VR depends on people being able to really DO stuff in it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1579135617.198000",
        "client_msg_id": "2478b487-7073-49b0-8461-53feddbebdb9",
        "text": "I think that's important",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578859395.088900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MKs+p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think that's important"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1579136117.198200",
        "client_msg_id": "8ddb76b8-1830-4fdf-8af2-49307e008b3f",
        "text": "A lot of the early VR hype was about the immersive properties of the medium, VR film, 360 video (ugh), 3DOF.  The version of VR that was initially marketed to consumers (cardboard, Gear VR, Daydream) sold media as the biggest use case, but for almost everyone it was a gimmick and fit the common VR dismissal of \"they're just 3D glasses\" .  Sure its a great demo but its not something people are going to spend $100s on, or engage with regularly (maybe with porn being an exception...)  I think Valve and most of the Oculus founders\\leadership (Carmack being the exception) understood that VR is about interactivity, and that tracked wands\\gloves\\hands are important for the medium.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578859395.088900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "145",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A lot of the early VR hype was about the immersive properties of the medium, VR film, 360 video (ugh), 3DOF.  The version of VR that was initially marketed to consumers (cardboard, Gear VR, Daydream) sold media as the biggest use case, but for almost everyone it was a gimmick and fit the common VR dismissal of \"they're just 3D glasses\" .  Sure its a great demo but its not something people are going to spend $100s on, or engage with regularly (maybe with porn being an exception...)  I think Valve and most of the Oculus founders\\leadership (Carmack being the exception) understood that VR is about interactivity, and that tracked wands\\gloves\\hands are important for the medium."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1579136140.198400",
        "client_msg_id": "7b9f28e5-30bb-49d9-b1c2-d8ec8c4f936c",
        "text": "There is one killer app for VR that hasn't really manifested because it relies on new capabilities. It's the reason why Facebook bought Oculus, and that's telepresence\\teleconferencing.  VRChat and other social VR apps touch on the possibilities but once we get full facially and body tracking, as well as good enough avatars (not necessarily realistic, but maybe) you actually have a mainstream consumer use for VR that is better than any alternative.  You *could* do this with an AR device with similar capabilities, but its not a unique strength of AR.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578859395.088900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TMXsc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is one killer app for VR that hasn't really manifested because it relies on new capabilities. It's the reason why Facebook bought Oculus, and that's telepresence\\teleconferencing.  VRChat and other social VR apps touch on the possibilities but once we get full facially and body tracking, as well as good enough avatars (not necessarily realistic, but maybe) you actually have a mainstream consumer use for VR that is better than any alternative.  You "
                            },
                            {
                                "type": "text",
                                "text": "could",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " do this with an AR device with similar capabilities, but its not a unique strength of AR."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1579137604.201100",
        "client_msg_id": "0F586E8F-5718-42D9-95C0-0E695C3E5F3E",
        "text": "definitely! there are also some interesting virtual office startups that aim to emulate having eg unlimited monitors in meatspace—i think that’s a cool backdoor into novel ways of interacting with apps and data by providing an immediate and legible value proposition to users",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578859395.088900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H5y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "definitely! there are also some interesting virtual office startups that aim to emulate having eg unlimited monitors in meatspace—i think that’s a cool backdoor into novel ways of interacting with apps and data by providing an immediate and legible value proposition to users"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1579140882.201300",
        "client_msg_id": "72da265c-05f7-469c-a818-5824b9ec29b3",
        "text": "<@UHWC9PXBL> if his level data and his code were all in the same \"language\", then it would be easy, since all he wants to do is associate some code with some thing in a level.. he wouldn't even need to switch to hold it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578993190.168400",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qlj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " if his level data and his code were all in the same \"language\", then it would be easy, since all he wants to do is associate some code with some thing in a level.. he wouldn't even need to switch to hold it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1579145095.201600",
        "client_msg_id": "36E2D7E5-F28A-4917-8175-5C16A37BE8BB",
        "text": "totally agree ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578993190.168400",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p6Qgi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "totally agree "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1579153117.205300",
        "client_msg_id": "ec9071e7-b983-47db-baeb-550be3fb913f",
        "text": "I just wrote <https:\/\/lobste.rs\/s\/6gzmym\/static_types_are_dangerously#c_9lzbuq>\n\nA couple of crazy ideas on types:\n\n1. The Right Way is for product types to be nominative and sum types to be structural.\n\n2. Maybe we need tags for product types as well? Then unify types on the names not of types but of their constituent tags, whether sums or products.\n\ne.g. `Foo` and `Bar` can be automatically coerced in:\n\n```type Foo = A int * B boolean\ntype Bar = A int * B boolean```",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579153117.205300",
        "reply_count": 7,
        "reply_users_count": 5,
        "latest_reply": "1579249905.005400",
        "reply_users": [
            "U8A5MS6R1",
            "UCUSW7WVD",
            "UJN1TAYEQ",
            "UJBAJNFLK",
            "UN57U8V53"
        ],
        "replies": [
            {
                "user": "U8A5MS6R1",
                "ts": "1579153921.205600"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1579156684.206000"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1579199901.216300"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1579201258.216900"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1579246421.000500"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1579247011.000700"
            },
            {
                "user": "UN57U8V53",
                "ts": "1579249905.005400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "Static types are dangerously interesting",
                "title_link": "https:\/\/lobste.rs\/s\/6gzmym\/static_types_are_dangerously#c_9lzbuq",
                "text": "3 comments",
                "fallback": "Static types are dangerously interesting",
                "thumb_url": "https:\/\/lobste.rs\/apple-touch-icon-144.png",
                "from_url": "https:\/\/lobste.rs\/s\/6gzmym\/static_types_are_dangerously#c_9lzbuq",
                "thumb_width": 144,
                "thumb_height": 144,
                "service_icon": "https:\/\/lobste.rs\/apple-touch-icon.png",
                "service_name": "lobste.rs",
                "id": 1,
                "original_url": "https:\/\/lobste.rs\/s\/6gzmym\/static_types_are_dangerously#c_9lzbuq"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "76A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just wrote "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/lobste.rs\/s\/6gzmym\/static_types_are_dangerously#c_9lzbuq"
                            },
                            {
                                "type": "text",
                                "text": "\n\nA couple of crazy ideas on types:\n\n1. The Right Way is for product types to be nominative and sum types to be structural.\n\n2. Maybe we need tags for product types as well? Then unify types on the names not of types but of their constituent tags, whether sums or products.\n\ne.g. "
                            },
                            {
                                "type": "text",
                                "text": "Foo",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "Bar",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " can be automatically coerced in:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "type Foo = A int * B boolean\ntype Bar = A int * B boolean"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1579153921.205600",
        "client_msg_id": "4f2cb852-8c14-4424-b782-540a2cc4326a",
        "text": "My newish take on types in PLs is that they're all at the wrong level of abstraction. ADTs don't get it right either. We don't want to model types (which containerized the information, and overspecify the proximity of values), we want to model the information in some other normal form (kinda like 6NF in relational). Then separately we may want to define memory layout types (views on the normal form) that are materialized. The 'domain model' should only affect the normal form. The practical and optimization concerns should only affect the materialized views.\n\n<https:\/\/twitter.com\/chatur_shalabh\/status\/1201989863660122112>\n<https:\/\/twitter.com\/BrandonBloom\/status\/1202001092248141824>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579153117.205300",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/chatur_shalabh|@chatur_shalabh>: What bothers me with types in ~all programming languages is that relationships are not distinct from entities but are embedded within them. Do wheels have a `car` attribute or cars have a `wheels` attribute or both? You have to choose and are then stuck with it. \n\n1\/",
                "ts": 1575411690,
                "author_name": "Shalabh Chaturvedi",
                "author_link": "https:\/\/twitter.com\/chatur_shalabh\/status\/1201989863660122112",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1168926214343536641\/wNcbqYu0_normal.jpg",
                "author_subname": "@chatur_shalabh",
                "text": "What bothers me with types in ~all programming languages is that relationships are not distinct from entities but are embedded within them. Do wheels have a `car` attribute or cars have a `wheels` attribute or both? You have to choose and are then stuck with it. \n\n1\/",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/chatur_shalabh\/status\/1201989863660122112",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/chatur_shalabh\/status\/1201989863660122112",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            },
            {
                "fallback": "<https:\/\/twitter.com\/BrandonBloom|@BrandonBloom>: <https:\/\/twitter.com\/chatur_shalabh|@chatur_shalabh> Each choice is specifically optimized for some particular use case, or maybe just plain arbitrary. Today, were forced to choose prematurely and then are generally committed. Relationships make things even harder because now you have to worry about both identity and reachability.",
                "ts": 1575414367,
                "author_name": "Brandon Bloom",
                "author_link": "https:\/\/twitter.com\/BrandonBloom\/status\/1202001092248141824",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1007413949925548032\/8FmwYujD_normal.jpg",
                "author_subname": "@BrandonBloom",
                "text": "<https:\/\/twitter.com\/chatur_shalabh|@chatur_shalabh> Each choice is specifically optimized for some particular use case, or maybe just plain arbitrary. Today, were forced to choose prematurely and then are generally committed. Relationships make things even harder because now you have to worry about both identity and reachability.",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/BrandonBloom\/status\/1202001092248141824",
                "id": 2,
                "original_url": "https:\/\/twitter.com\/BrandonBloom\/status\/1202001092248141824",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kkV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My newish take on types in PLs is that they're all at the wrong level of abstraction. ADTs don't get it right either. We don't want to model types (which containerized the information, and overspecify the proximity of values), we want to model the information in some other normal form (kinda like 6NF in relational). Then separately we may want to define memory layout types (views on the normal form) that are materialized. The 'domain model' should only affect the normal form. The practical and optimization concerns should only affect the materialized views.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/chatur_shalabh\/status\/1201989863660122112"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/BrandonBloom\/status\/1202001092248141824"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1579156684.206000",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1579156861.000000"
        },
        "client_msg_id": "fdad4cb1-6757-4ba6-bc97-99d0f8334536",
        "text": "Why do ADTs not satisfy your criteria? The classic example of an ADT on Wikipedia is the integers: <https:\/\/en.wikipedia.org\/wiki\/Abstract_data_type>. Are you saying that including relations between 1 and 2 in the type is over-specific?\n\nThere's certainly a large state space here, and it's been done to death on LtU :stuck_out_tongue:. For example, I could generalize from my previous comment to unification between two types (or type and value, or two values) stemming from some combination of:\n\na) the type name\nb) the set of members\nc) the set of methods\n\nFor example, Java unification (just classes) requires the name to match, which indirectly requires a superset of members and methods. Go unification (interfaces) requires just superset of methods. OCaml (I think?) is the same as Go. I'm sure lots of niche languages have explored other points in this state space.\n\nBut really all this gets deep into architecture astronaut territory. There's a lot of wisdom in the idea to ignore inheritance in favor of composition. The use case I use to ground my uses of types is: what is the minimum we need to add to Hindley-Milner (basically structs and tagged unions) to avoid the NASA Mars Orbiter disaster? Basically assigning units to numbers. The nice thing about this use case is that it requires balancing usability with correctness. Nobody's going to create a unique struct for every numeric use case in their program. (And the long saga of `signed` vs `unsigned` in C shows that this path has correctness problems as well.)\n\nSo yeah, there are rarefied use cases where you want to distinguish between interface+relations and a materialized view. But it seems excessive to require that two-level framework all the time.\n\n<@UEQ6M68H0> has units, if I recall correctly. Have you written up a description anywhere of Beads's type system?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579153117.205300",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8u=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why do ADTs not satisfy your criteria? The classic example of an ADT on Wikipedia is the integers: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Abstract_data_type"
                            },
                            {
                                "type": "text",
                                "text": ". Are you saying that including relations between 1 and 2 in the type is over-specific?\n\nThere's certainly a large state space here, and it's been done to death on LtU "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": ". For example, I could generalize from my previous comment to unification between two types (or type and value, or two values) stemming from some combination of:\n\na) the type name\nb) the set of members\nc) the set of methods\n\nFor example, Java unification (just classes) requires the name to match, which indirectly requires a superset of members and methods. Go unification (interfaces) requires just superset of methods. OCaml (I think?) is the same as Go. I'm sure lots of niche languages have explored other points in this state space.\n\nBut really all this gets deep into architecture astronaut territory. There's a lot of wisdom in the idea to ignore inheritance in favor of composition. The use case I use to ground my uses of types is: what is the minimum we need to add to Hindley-Milner (basically structs and tagged unions) to avoid the NASA Mars Orbiter disaster? Basically assigning units to numbers. The nice thing about this use case is that it requires balancing usability with correctness. Nobody's going to create a unique struct for every numeric use case in their program. (And the long saga of "
                            },
                            {
                                "type": "text",
                                "text": "signed",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vs "
                            },
                            {
                                "type": "text",
                                "text": "unsigned",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in C shows that this path has correctness problems as well.)\n\nSo yeah, there are rarefied use cases where you want to distinguish between interface+relations and a materialized view. But it seems excessive to require that two-level framework all the time.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " has units, if I recall correctly. Have you written up a description anywhere of Beads's type system?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]