[
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1725373205.908939",
        "client_msg_id": "39D80F60-9A29-45AD-98B1-1DA875125720",
        "text": "Can you explain what you mean by \"high resolution discretization\", Konrad? Is this a reference to the character grid in textual code?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z3PmF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can you explain what you mean by \"high resolution discretization\", Konrad? Is this a reference to the character grid in textual code?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0378MDUG1Y"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1725392977.335299",
        "client_msg_id": "6A6EC460-7278-4597-8099-67E04C059073",
        "text": "Ya the reason I asked is because i really struggle to think of ways it can be essential to the computation (except in games and physics simulations). ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1092a4f97098",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-23\/3286745266387_1092a4f970985ebc8d2b_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Shank",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chris.shank.23",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "STrv0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ya the reason I asked is because i really struggle to think of ways it can be essential to the computation (except in games and physics simulations). "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1725393027.432929",
        "client_msg_id": "82C4774C-57A8-445B-804B-1D77AE8F98E5",
        "text": "I like the idea of representing memory in a squishy way",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1092a4f97098",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-23\/3286745266387_1092a4f970985ebc8d2b_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Shank",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chris.shank.23",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gyGrK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like the idea of representing memory in a squishy way"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1725393071.539539",
        "client_msg_id": "78F2BBB3-58A2-4043-B37B-00BF6EE86603",
        "text": "Tightly packed areas of memory fighting for space and squishing and morphing together as they shrink and grow",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1092a4f97098",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-23\/3286745266387_1092a4f970985ebc8d2b_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Shank",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chris.shank.23",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "285rV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tightly packed areas of memory fighting for space and squishing and morphing together as they shrink and grow"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1725396449.014829",
        "client_msg_id": "acdff337-671d-4de3-be3d-c8c3d9ca11f6",
        "text": "&gt; because it needs to support iteration\nWell, one solution to the dilemma is just not supporting iteration on maps\/sets. If you want to iterate you have to keep a list of keys separately.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725160636.476039",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OtQ6V",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "because it needs to support iteration"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nWell, one solution to the dilemma is just not supporting iteration on maps\/sets. If you want to iterate you have to keep a list of keys separately."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1725396826.788009",
        "client_msg_id": "d12ffb93-80b9-4871-b885-9623a4197622",
        "text": "&gt; Have you considered two iterators, akin to Lua's `pairs` and `ipairs`?\nBut the order of iteration is still observable, no?\n\nThis does actually cause problems in practice. Eg to get reproducible builds a lot of compilers had to be refactored to never iterate over hashmaps.\n\nIf equality doesn't take iteration order into account then it also makes memoization hard:\n\n```&gt;&gt;&gt; a = {'x': True, 'y': True}\n&gt;&gt;&gt; b = {'y': True, 'x': True}\n&gt;&gt;&gt; def f(x):\n...     return ''.join(x.keys())\n...\n&gt;&gt;&gt; a == b\nTrue\n&gt;&gt;&gt; f(a) == f(b)\nFalse```",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725160636.476039",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BnDgQ",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you considered two iterators, akin to Lua's "
                            },
                            {
                                "type": "text",
                                "text": "pairs",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "ipairs",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nBut the order of iteration is still observable, no?\n\nThis does actually cause problems in practice. Eg to get reproducible builds a lot of compilers had to be refactored to never iterate over hashmaps.\n\nIf equality doesn't take iteration order into account then it also makes memoization hard:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": ">>> a = {'x': True, 'y': True}\n>>> b = {'y': True, 'x': True}\n>>> def f(x):\n...     return ''.join(x.keys())\n...\n>>> a == b\nTrue\n>>> f(a) == f(b)\nFalse"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1725396951.701829",
        "client_msg_id": "95e3c21c-bab9-44be-b4e8-d1b5aad1de5f",
        "text": "The options that appeal to me at the moment are:\n• Iteration is always in sorted order and we just pay the cost of trees instead of hashmaps.\n• Iteration is in insertion order and if you want to compare sets then you can sort them first.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725160636.476039",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R+uiL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The options that appeal to me at the moment are:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Iteration is always in sorted order and we just pay the cost of trees instead of hashmaps."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Iteration is in insertion order and if you want to compare sets then you can sort them first."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1725399978.929129",
        "client_msg_id": "75B3E1C2-1AD4-4990-B075-78996D851C2F",
        "text": "For the squishiness to be meaningful for computation it would have to happen through collision between objects and\/or the space the objects take up?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1092a4f97098",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-23\/3286745266387_1092a4f970985ebc8d2b_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Shank",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chris.shank.23",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nDwWZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For the squishiness to be meaningful for computation it would have to happen through collision between objects and\/or the space the objects take up?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1725400083.220899",
        "client_msg_id": "23C79C11-1148-40A2-81E5-3763D24B1B9F",
        "text": "Imagine a function that balloons as it does more computation and must stop when it is squeezed out of space to grow",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1092a4f97098",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-23\/3286745266387_1092a4f970985ebc8d2b_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Shank",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chris.shank.23",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fTWfJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Imagine a function that balloons as it does more computation and must stop when it is squeezed out of space to grow"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1725415683.261259",
        "client_msg_id": "9AD64471-D258-41AF-B5D3-F9828493A62E",
        "text": "Another approach would be to take an existing visual programming approach and think about making parts of it soft. Like, if you have node-wire, and the wire gets wrapped around some nodes and it kinda squeezes them a bit.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BrPxQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another approach would be to take an existing visual programming approach and think about making parts of it soft"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Like, if you have node-wire, and the wire gets wrapped around some nodes and it kinda squeezes them a bit."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1725427193.422599",
        "client_msg_id": "1ba93a49-9d2f-415c-82eb-e8532f5df946",
        "text": "&gt; ordering interferes with transparent query optimization. I refuse to let performance override usability\nIf you sort the keys that's actually less of a problem. You just have to sort at the end (and maybe before aggregations that you can't prove are commutative). But being able to observe insertion order means that you can't reorder loops into joins, which is a much bigger problem.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725160636.476039",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aZnMM",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ordering interferes with transparent query optimization. I refuse to let performance override usability"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIf you sort the keys that's actually less of a problem. You just have to sort at the end (and maybe before aggregations that you can't prove are commutative). But being able to observe insertion order means that you can't reorder loops into joins, which is a much bigger problem."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1725429212.638039",
        "client_msg_id": "16b7b8e0-7ce8-406c-9a03-7b69037f8017",
        "text": "The essence of digital\/computing technology when interfacing to the real world is (1) projecting continuous quantities to discrete ones and (2) imposing context-free laws of change or transformation. Squishiness is about adapting to context. That's not naturally part of formal systems, it has to be imposed as a condition.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FXVnU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The essence of digital\/computing technology when interfacing to the real world is (1) projecting continuous quantities to discrete ones and (2) imposing context-free laws of change or transformation. Squishiness is about adapting to context. That's not naturally part of formal systems, it has to be imposed as a condition."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]