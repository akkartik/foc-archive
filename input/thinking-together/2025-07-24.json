[
    {
        "user": "U096YUBC3KP",
        "type": "message",
        "ts": "1753349319.916159",
        "client_msg_id": "f8e8253d-19ad-4f37-a3b9-74a16190017d",
        "text": "&gt; Its best to view the Observable dataflow graph as monotonically converging to the latest state rather than a stream processing engine.\n&gt; \nOh I like this, this names something important and why I was wary about pulling e.g. RxJS off the shelf.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd73c13a9fb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-07-24\/9258602927281_cbd73c13a9fbc1999873_72.jpg",
            "first_name": "Daniel",
            "real_name": "Daniel Buckmaster",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel961",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751954442.859169",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aBAAV",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Its best to view the Observable dataflow graph as monotonically converging to the latest state rather than a stream processing engine.\n"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh I like this, this names something important and why I was wary about pulling e.g. RxJS off the shelf."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1753359477.729939",
        "client_msg_id": "99e79ab2-d754-45a4-8f30-b9fc3b58c540",
        "text": "yeah I tried to like RxJS in 2016 but hit quite a wall with glitching, memory leaks and stuff, it felt extremely fragile to build a large system out of. I was quite skeptical that Observable could make something usable with no explicit operators but they seem to have solved all the main problems and improved in some unexpected areas like returning generators.\nThere are some gaps: to make something like fine-grained reactive UI components, you need dynamic dataflow construction, as each component instantiation has an identical dataflow pattern you want repeated, and with the notebooks that is not possible.  Notebook let you build a static dataflow graph dynamically, but there is no paved path to do it programatically. This is more of a limitation of the frontend notebook programming model and not the underlying runtime though. The runtime is pretty general in my opinion.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751954442.859169",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7Bu93",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah I tried to like RxJS in 2016 but hit quite a wall with glitching, memory leaks and stuff, it felt extremely fragile to build a large system out of. I was quite skeptical that Observable could make something usable with no explicit operators but they seem to have solved all the main problems and improved in some unexpected areas like returning generators.\nThere are some gaps: to make something like fine-grained reactive UI components, you need dynamic dataflow construction, as each component instantiation has an identical dataflow pattern you want repeated, and with the notebooks that is not possible.  Notebook let you build a static dataflow graph dynamically, but there is no paved path to do it programatically. This is more of a limitation of the frontend notebook programming model and not the underlying runtime though. The runtime is pretty general in my opinion."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "U05UK5T7LPP"
                ],
                "count": 1
            }
        ]
    }
]