[
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1535979953.000100",
        "client_msg_id": "373d54d3-6ff1-4953-b998-94c432c7925b",
        "text": "I'm `@vladimir_vg`",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1535732201.000100",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cS\/RW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm "
                            },
                            {
                                "type": "text",
                                "text": "@vladimir_vg",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U5TCAFTD3"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1535981161.000100",
        "text": "Just created <#CCL5VVBAN|share-your-work> channel for that purpose, please join",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "[August 31st, 2018 6:33 PM] stevekrouse: Great idea! How about we do manually posting for starters and can figure out automatic if it feels like that’d be good? How does #feedback sound?",
                "ts": "1535729622.000100",
                "author_id": "U5TCAFTD3",
                "author_subname": "Steve Krouse",
                "channel_id": "C5T9GPWFL",
                "is_msg_unfurl": true,
                "text": "Great idea! How about we do manually posting for starters and can figure out automatic if it feels like that’d be good? How does #feedback sound?",
                "author_name": "Steve Krouse",
                "author_link": "https:\/\/futureprogramming.slack.com\/team\/U5TCAFTD3",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/28d89e2475c7305667a96cb25c98341b.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F66f9%2Fimg%2Favatars%2Fava_0010-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/futureprogramming.slack.com\/archives\/C5T9GPWFL\/p1535729622000100",
                "is_share": true,
                "footer": "Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rFf2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just created "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CCL5VVBAN"
                            },
                            {
                                "type": "text",
                                "text": " channel for that purpose, please join"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U5STGTB3J",
                    "U5TCAFTD3",
                    "UAL7940NM"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1535981341.000100",
        "client_msg_id": "57a3bb91-9add-450d-8903-535bcb8b9dd7",
        "text": "But not all tweets of the members are related to future of programming. Looks it's not possible to make it fully automatic (unless we enforce one tag). Seems like it still takes some manual filtering.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1535725650.000100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rnPwG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But not all tweets of the members are related to future of programming. Looks it's not possible to make it fully automatic (unless we enforce one tag). Seems like it still takes some manual filtering."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1535981622.000100",
        "client_msg_id": "dd2096e6-71c0-4ff6-9f96-0261ed27a094",
        "text": "And I was right this moment reading about RSS feed integration in Slack, and it turns out it's built in: <https:\/\/get.slack.help\/hc\/en-us\/articles\/218688467-Add-RSS-feeds-to-Slack>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "Slack Help Center",
                "title": "Add RSS feeds to Slack",
                "title_link": "https:\/\/get.slack.help\/hc\/en-us\/articles\/218688467-Add-RSS-feeds-to-Slack",
                "text": "Have a favorite blog or news site? You can use Slack to subscribe to both RSS and Atom feeds and get updates in the Slack channel of your choice. Install the RSS app To get started, you’ll need to ...",
                "fallback": "Slack Help Center: Add RSS feeds to Slack",
                "from_url": "https:\/\/get.slack.help\/hc\/en-us\/articles\/218688467-Add-RSS-feeds-to-Slack",
                "thumb_url": "https:\/\/p9.zdassets.com\/hc\/settings_assets\/138842\/200037786\/lwJPxYqi1BYctK8DTxGh2Q-help-center-unfurl-image.png",
                "thumb_width": 192,
                "thumb_height": 192,
                "service_icon": "http:\/\/p9.zdassets.com\/hc\/settings_assets\/138842\/200037786\/gKxPXx4IHuTcBxI7xabI4Q-favicon.png",
                "id": 1,
                "original_url": "https:\/\/get.slack.help\/hc\/en-us\/articles\/218688467-Add-RSS-feeds-to-Slack"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l6\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And I was right this moment reading about RSS feed integration in Slack, and it turns out it's built in: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/get.slack.help\/hc\/en-us\/articles\/218688467-Add-RSS-feeds-to-Slack"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1535981680.000100",
        "client_msg_id": "020b9185-ab24-4c9e-bdc6-743456b108db",
        "text": "I don't think we should do that in <#CCL5VVBAN|share-your-work> though, but rather in a separate channel — maybe #publications?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y\/2k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't think we should do that in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CCL5VVBAN"
                            },
                            {
                                "type": "text",
                                "text": " though, but rather in a separate channel — maybe #publications?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U5TCAFTD3",
                    "U8A5MS6R1",
                    "UC2A2ARPT",
                    "UAL7940NM",
                    "UA14TGLTC"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1535981806.000100",
        "client_msg_id": "a2646187-6ebb-45b6-8886-74846566828a",
        "text": "Ah, just found your reply after posting to <#C5T9GPWFL|thinking-together> — yeah, I think <#CCL5VVBAN|share-your-work> and #publications are separate things. <#CCL5VVBAN|share-your-work> should be very manual by design, not everyone wants feedback on everything, even if it is relevant to the group. I wouldn't be opposed to a separate #publications channel that is mostly automatic using Slack's `\/feed` feature.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1535725650.000100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pSfH3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, just found your reply after posting to "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": " — yeah, I think "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CCL5VVBAN"
                            },
                            {
                                "type": "text",
                                "text": " and #publications are separate things. "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CCL5VVBAN"
                            },
                            {
                                "type": "text",
                                "text": " should be very manual by design, not everyone wants feedback on everything, even if it is relevant to the group. I wouldn't be opposed to a separate #publications channel that is mostly automatic using Slack's "
                            },
                            {
                                "type": "text",
                                "text": "\/feed",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " feature."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1535981973.000100",
        "client_msg_id": "00b05574-7c49-4e10-9a77-2dfbc1d9fe32",
        "text": "Yeah, probably it's a best way: create two separate channels and see how it goes.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1535725650.000100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0tig",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, probably it's a best way: create two separate channels and see how it goes."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1535985102.000100",
        "edited": {
            "user": "U5STGTB3J",
            "ts": "1535985135.000000"
        },
        "client_msg_id": "7b26d4f4-97fc-407e-a8f2-4975c6f122d1",
        "text": "Looking at technology research communities closely related to our theme here, I'm aware of Y-Combinator's _Human Advancement Research Community_ (<https:\/\/harc.ycr.org>) and Alan Kay's _Viewpoints Research Institute_ (<http:\/\/www.vpri.org>) — do you know any others?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1535985102.000100",
        "reply_count": 15,
        "reply_users_count": 5,
        "latest_reply": "1549989925.014800",
        "reply_users": [
            "U8A5MS6R1",
            "U5STGTB3J",
            "UC2A2ARPT",
            "U5TCAFTD3",
            "UAVCC2X70"
        ],
        "replies": [
            {
                "user": "U8A5MS6R1",
                "ts": "1535996637.000100"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1535997365.000100"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1535997923.000100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1536000060.000100"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1536146351.000100"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1536146485.000100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1536166875.000100"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1536292756.000100"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1536700993.000100"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1536701780.000100"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1537568583.000100"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1549913812.000700"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1549913908.000900"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1549914664.001300"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1549989925.014800"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1549993573.000000",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gxoN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looking at technology research communities closely related to our theme here, I'm aware of Y-Combinator's "
                            },
                            {
                                "type": "text",
                                "text": "Human Advancement Research Community",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/harc.ycr.org"
                            },
                            {
                                "type": "text",
                                "text": ") and Alan Kay's "
                            },
                            {
                                "type": "text",
                                "text": "Viewpoints Research Institute",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ("
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.vpri.org"
                            },
                            {
                                "type": "text",
                                "text": ") — do you know any others?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1535986084.000100",
        "client_msg_id": "1f6501bb-ec97-4618-87de-76fdcd775698",
        "text": "&gt; Viewpoints Research Institute concluded its operations at the beginning of 2018. \n\nFrom <http:\/\/vpri.org|vpri.org>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KfO",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Viewpoints Research Institute concluded its operations at the beginning of 2018. "
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nFrom "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/vpri.org",
                                "text": "vpri.org"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1535986330.000100",
        "client_msg_id": "7c56916a-3803-42d0-bff8-9590f88e7302",
        "text": "<@U8A5MS6R1> Yep. Part of why I wondered what else is out there.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vcsH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " Yep. Part of why I wondered what else is out there."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1535986358.000100",
        "client_msg_id": "0e520182-d170-4486-aa5b-cad44a7a5e6c",
        "text": "I'm glad they keep all the papers online. Lots of good stuff there, especially STEPS.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1535986358.000100",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1535986403.000100",
        "reply_users": [
            "UCKRZS3DZ"
        ],
        "replies": [
            {
                "user": "UCKRZS3DZ",
                "ts": "1535986403.000100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qflvv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm glad they keep all the papers online. Lots of good stuff there, especially STEPS."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1535986403.000100",
        "client_msg_id": "d54b53a2-f289-4460-8be8-00243ae5d41e",
        "text": "papers were 404 a month ago though. Backed it up, just in case.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1535986358.000100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eBzOs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "papers were 404 a month ago though. Backed it up, just in case."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U5STGTB3J",
                    "UC2A2ARPT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UAVBSJGG5",
        "type": "message",
        "ts": "1535987187.000100",
        "client_msg_id": "75492d0b-4e32-4a64-8057-99c03d2099f7",
        "text": "Great! look forward to going, maybe we can plan to keep them going in NYC if you move to London",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8e74eba7c6b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/48e74eba7c6b653f9307d063c361b5a1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Ildar",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "theildar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1535902201.000100",
        "parent_user_id": "UAVBSJGG5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pZLZw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great! look forward to going, maybe we can plan to keep them going in NYC if you move to London"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1535996637.000100",
        "client_msg_id": "3c805294-82fe-4044-b5b2-fafceb05aef4",
        "text": "(reposted as thread reply)\n\nThere's the Shift Society \/ Salon des Refusés initiative (from Tomas Petricek). <https:\/\/www.shift-society.org\/salon\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1535985102.000100",
        "parent_user_id": "U5STGTB3J",
        "attachments": [
            {
                "title": "Salon des Refusés",
                "title_link": "https:\/\/www.shift-society.org\/salon\/",
                "text": "Dialectics for new computer science",
                "fallback": "Salon des Refusés",
                "image_url": "https:\/\/www.shift-society.org\/salon\/lib\/card-gray.jpg",
                "from_url": "https:\/\/www.shift-society.org\/salon\/",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 158834,
                "service_name": "shift-society.org",
                "id": 1,
                "original_url": "https:\/\/www.shift-society.org\/salon\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iMy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(reposted as thread reply)\n\nThere's the Shift Society \/ Salon des Refusés initiative (from Tomas Petricek). "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.shift-society.org\/salon\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1535997365.000100",
        "client_msg_id": "a636c191-dc93-4a58-bfda-6735eacc2a98",
        "text": "<@UAVCC2X70> has <https:\/\/github.com\/d-cook\/SomethingNew>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1535985102.000100",
        "parent_user_id": "U5STGTB3J",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "d-cook\/SomethingNew",
                "title_link": "https:\/\/github.com\/d-cook\/SomethingNew",
                "text": "Collaboration for reinventing software in human terms - d-cook\/SomethingNew",
                "fallback": "GitHub: d-cook\/SomethingNew",
                "from_url": "https:\/\/github.com\/d-cook\/SomethingNew",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/22676260?s=400&v=4",
                "thumb_width": 250,
                "thumb_height": 250,
                "service_icon": "https:\/\/a.slack-edge.com\/bfaba\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/d-cook\/SomethingNew"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zGN6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": " has "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/d-cook\/SomethingNew"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1535997923.000100",
        "client_msg_id": "CA895D39-CF30-4AFB-9F78-AB42FC135355",
        "text": "<@U8A5MS6R1> Wow, these are both great resources, thanks for sharing!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1535985102.000100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pXkBk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " Wow, these are both great resources, thanks for sharing!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1536000060.000100",
        "client_msg_id": "c482b9cb-c275-4f53-9ddc-65d432343eac",
        "text": "Autodesk have a research division that produces some works useful in my own visual programming &amp; simulation research. Nothing special, though — similar to what you'd get out of all the research universities and other companies building _tools as products_. <https:\/\/autodeskresearch.com>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1535985102.000100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7xmB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Autodesk have a research division that produces some works useful in my own visual programming & simulation research. Nothing special, though — similar to what you'd get out of all the research universities and other companies building "
                            },
                            {
                                "type": "text",
                                "text": "tools as products",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/autodeskresearch.com"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1536004093.000100",
        "client_msg_id": "F6D34C83-97CE-419A-8DDD-21D671A16ABF",
        "text": "And maybe we can plan to get them started here in London…? :-)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1535902201.000100",
        "parent_user_id": "UAVBSJGG5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KKaDV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And maybe we can plan to get them started here in London…? :-)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1536006302.000100",
        "edited": {
            "user": "UCKRZS3DZ",
            "ts": "1536006809.000000"
        },
        "client_msg_id": "d2470f34-7cf7-464e-96e4-7bf73573c195",
        "text": "Want to tell you about one idea that I was recently working on.\n\nIf text file as a source code format is very limiting and doesn't allow to develop more convenient programming environments -- what is the alternative then?\nHow we gonna store code if it's not in text files?\n\nIn my understanding such platform should have following properties:\n\n1) Easy integration into web, media. Should be super easy to drop a rich comment for particular piece of code, or reference it somewhere.\n2) Versioning of the code. Must be a way to keep old versions of code, reference them.\n3) Explicit dependencies stored alongside. If I open old version of code, I should get references to all dependencies of that time, and it should work.\n4) Ability to see where particular functions were called.\n5) Easy collaboration, sharing of code.\n\nI want this platform to be able to offer several interfaces for the same code (might be visual or just old plain text).\nThe interface code should be part of this platform lying next to actual code.\n\nI've just read this tweet <https:\/\/twitter.com\/chatur_shalabh\/status\/1035599115793526784>,\nAnd got feeling that probably <@U8A5MS6R1> may have exactly same thoughts about all of this.\n\nThen I've listened to Ted Nelson's ideas about hypermedia and links that visible on both ends.\nThen I've also read <@U8A5MS6R1> article about files: <https:\/\/shalabh.com\/programmable-systems\/files-and-file-formats.html>\n\nSo it seems like in the end I'm not looking for specific code platform.\nIt seems like I'm looking for more advanced hypermedia than today's web,\nthat can store code along with other content.\n\nI'm not sure yet how exactly on this platform code gonna be stored, and what kind of programming languages would execute it.\nI'm just designing it rich enough that it would be possible.\n\n----------------------\n\nThe idea is following: we create a graph where all data is stored as nodes and edges.\nNodes and edges are immutable, and thus graph has many properties that git has.\n\nUser may replicate to his machine any set of nodes he interested in from other peers.\nUser may create node or edge between any two nodes on his machine.\nEach node and edge is signed by an author.\n\nNodes are addressed by their content, just like it is with magnet links (DHT).\nUser may search for edges for this particular node on peers machines.\n\nThis looks really powerful, yet not that complicated.\nCertainly someone else already thought about it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536006302.000100",
        "reply_count": 10,
        "reply_users_count": 5,
        "latest_reply": "1536044749.000100",
        "reply_users": [
            "U5STGTB3J",
            "UCKRZS3DZ",
            "U8A5MS6R1",
            "U7C7B75R6",
            "UAL7940NM"
        ],
        "replies": [
            {
                "user": "U5STGTB3J",
                "ts": "1536007059.000100"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1536007400.000100"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1536007491.000100"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1536008345.000100"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1536011589.000100"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1536012320.000100"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1536023785.000100"
            },
            {
                "user": "UAL7940NM",
                "ts": "1536023962.000100"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1536039141.000100"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1536044749.000100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/chatur_shalabh|@chatur_shalabh>: Document oriented programming: where the system behavior emerges from descriptions held in a series of submitted documents, each of which is interpreted in terms of some previously submitted documents.",
                "ts": 1535741044,
                "author_name": "Shalabh Chaturvedi",
                "author_link": "https:\/\/twitter.com\/chatur_shalabh\/status\/1035599115793526784",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/867701642149363713\/azQekfoT_normal.jpg",
                "author_subname": "@chatur_shalabh",
                "text": "Document oriented programming: where the system behavior emerges from descriptions held in a series of submitted documents, each of which is interpreted in terms of some previously submitted documents.",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/chatur_shalabh\/status\/1035599115793526784",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/chatur_shalabh\/status\/1035599115793526784",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            },
            {
                "title": "     Shalabh Chaturvedi – Files, Formats and Byte Arrays  ",
                "title_link": "https:\/\/shalabh.com\/programmable-systems\/files-and-file-formats.html",
                "text": "Posts and writings by shalabh",
                "fallback": "     Shalabh Chaturvedi – Files, Formats and Byte Arrays  ",
                "from_url": "https:\/\/shalabh.com\/programmable-systems\/files-and-file-formats.html",
                "service_name": "shalabh.com",
                "id": 2,
                "original_url": "https:\/\/shalabh.com\/programmable-systems\/files-and-file-formats.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ps5r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Want to tell you about one idea that I was recently working on.\n\nIf text file as a source code format is very limiting and doesn't allow to develop more convenient programming environments -- what is the alternative then?\nHow we gonna store code if it's not in text files?\n\nIn my understanding such platform should have following properties:\n\n1) Easy integration into web, media. Should be super easy to drop a rich comment for particular piece of code, or reference it somewhere.\n2) Versioning of the code. Must be a way to keep old versions of code, reference them.\n3) Explicit dependencies stored alongside. If I open old version of code, I should get references to all dependencies of that time, and it should work.\n4) Ability to see where particular functions were called.\n5) Easy collaboration, sharing of code.\n\nI want this platform to be able to offer several interfaces for the same code (might be visual or just old plain text).\nThe interface code should be part of this platform lying next to actual code.\n\nI've just read this tweet "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/chatur_shalabh\/status\/1035599115793526784"
                            },
                            {
                                "type": "text",
                                "text": ",\nAnd got feeling that probably "
                            },
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " may have exactly same thoughts about all of this.\n\nThen I've listened to Ted Nelson's ideas about hypermedia and links that visible on both ends.\nThen I've also read "
                            },
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " article about files: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/shalabh.com\/programmable-systems\/files-and-file-formats.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nSo it seems like in the end I'm not looking for specific code platform.\nIt seems like I'm looking for more advanced hypermedia than today's web,\nthat can store code along with other content.\n\nI'm not sure yet how exactly on this platform code gonna be stored, and what kind of programming languages would execute it.\nI'm just designing it rich enough that it would be possible.\n\n----------------------\n\nThe idea is following: we create a graph where all data is stored as nodes and edges.\nNodes and edges are immutable, and thus graph has many properties that git has.\n\nUser may replicate to his machine any set of nodes he interested in from other peers.\nUser may create node or edge between any two nodes on his machine.\nEach node and edge is signed by an author.\n\nNodes are addressed by their content, just like it is with magnet links (DHT).\nUser may search for edges for this particular node on peers machines.\n\nThis looks really powerful, yet not that complicated.\nCertainly someone else already thought about it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC1TYP06P",
        "type": "message",
        "ts": "1536006592.000100",
        "client_msg_id": "e178f544-1434-41e9-9118-72b02bff4ab3",
        "text": "<@UCKRZS3DZ> <https:\/\/en.wikipedia.org\/wiki\/Structure_editor>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7a68744c2a2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b7a68744c2a288f24b931b3f65b832f9.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "",
            "real_name": "James Koppel",
            "display_name": "jkoppel",
            "team": "T5TCAFTA9",
            "name": "jkoppel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536006592.000100",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1536006712.000200",
        "reply_users": [
            "UCKRZS3DZ"
        ],
        "replies": [
            {
                "user": "UCKRZS3DZ",
                "ts": "1536006712.000200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "Structure editor",
                "title_link": "https:\/\/en.wikipedia.org\/wiki\/Structure_editor",
                "from_url": "https:\/\/en.wikipedia.org\/wiki\/Structure_editor",
                "author_name": "Wikipedia",
                "author_link": "https:\/\/en.wikipedia.org\/",
                "text": "A structure editor, also structured editor or projectional editor, is any document editor that is cognizant of the document’s underlying structure. Structure editors can be used to edit hierarchical or marked up text, computer programs, diagrams, chemical formulas, and any other type of content with clear and well-defined structure.  In contrast, a text editor is any document editor used for editing plain text files.Typically, the benefits of text and structure editing are combined in the user interface of a single hybrid tool.  For example, Emacs is fundamentally a text editor, but supports the manipulation of words, sentences, and paragraphs as structures that are inferred from the text.  Conversely, Dreamweaver is fundamentally a structure editor for marked up web documents, but supports the display and manipulation of raw HTML text as well.  Similarly, molecule editors typically support both graphical and textual input. Structure editing predominates when content is graphical and textual representations are awkward, e.g., CAD systems and PowerPoint.  Text editing predominates when content is largely devoid of structure, e.g., text fields in web forms.  WYSIWYG word processing systems such as Word, which appear to edit formatted text directly, are essentially structure editors for the underlying marked-up text.\nIn linguistics, syntax is the study of the structure of grammatical utterances, and accordingly syntax-directed editor is a synonym for structure editor.  Language-based editor and language-sensitive editor are also synonyms. A language-based editor’s features may be implemented by ad hoc code or by a formal grammar.  For example, language sensitivity in Emacs is implemented in the Lisp definition of the edit mode for the given language.  In contrast, language sensitivity in an XML editor is driven by a formal DTD schema for the given language.\nAlthough structured editors allow the viewing and manipulation of the underlying document in a structured manner, the file format in which the document is stored on disk may or may not be heavily structured and may or may not be open or standardized (e.g., plain text versus Microsoft Word documents).\n\nStructure editing has often been employed in source code editors, as source code is naturally structured by the syntax of the computer language. However, most source code editors are instead text editors with additional features such as syntax highlighting and code folding, rather than structure editors. The editors in some integrated development environments parse the source code and generate a parse tree, allowing the same analysis as by a structure editor, but the actual editing of the source code is generally done as raw text.\nEach programming language typically has a well-defined syntax given by a context-free grammar, and accordingly the meaningful structural elements in source code written in the language correspond to the grammatical phrases in the text.  Early syntax-directed source code editors included Interlisp-D (for Lisp’s limited syntax) and Emily (for PL\/I’s rich syntax).\nA syntax-directed editor may treat grammar rules as generative (e.g., offering the user templates that correspond to one or more steps in a formal derivation of program text) or proscriptive (e.g., preventing a phrase of a given part of speech from being moved to a context where another part of speech is required) or analytic (e.g., parsing textual edits to create a structured representation).  Structure editing features in source code editors make it harder to write programs with invalid syntax.  Language-sensitive editors may impose syntactic correctness as an absolute requirement (e.g., as did Mentor), or may tolerate syntax errors after issuing a warning (e.g., as did the Cornell Program Synthesizer).  Strict structured editors often make it difficult to perform edits that are easy to perform with plain text editors, which is one of the factors contributing to the lack of adoption of structured editing in some domains, such as source code editing.\nSome syntax-directed editors monitor compliance with the context-sensitive constraints of a language such as type correctness.  Such static-semantic constraints may be specified imperatively by actions (e.g., as in Gandalf), or declaratively by an attribute grammar (e.g., as in the Synthesizer Generator) or by unification in a many-sorted algebra (e.g., as in PSG ) or a logic program (e.g., as in Centaur and Pan), with compliance checked by the underlying editing machinery.  Structured editors vary in the degree to which they allow their users to perform edits that cause the document to become syntactically or semantically incorrect.\nIt is common for a language sensitive editor to represent a document as a parse tree with respect to language’s grammar, or as an abstract syntax tree (AST).  For example, a DOM tree is essentially an AST with respect to a given DTD.  Frequently, the textual view of that underlying tree is generated by prettyprinting the underlying tree.  Editors associated with intentional programming and language-oriented programming for general-purpose languages and domain-specific languages share many of the features of language-sensitive editors, but aim for greater separation between the underlying representation (the intention) and the surface representation (text in a programming language).",
                "fallback": "wikipedia: Structure editor",
                "service_icon": "https:\/\/a.slack-edge.com\/bfaba\/img\/unfurl_icons\/wikipedia.png",
                "id": 1,
                "original_url": "https:\/\/en.wikipedia.org\/wiki\/Structure_editor"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=mmZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCKRZS3DZ"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Structure_editor"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1536006712.000200",
        "client_msg_id": "caeb0bed-aec1-4a0d-9c95-bcbc7c5c02ca",
        "text": "Yeah, I know about that. But I'm thinking about generic platform for it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536006592.000100",
        "parent_user_id": "UC1TYP06P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z=y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I know about that. But I'm thinking about generic platform for it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1536007059.000100",
        "client_msg_id": "19867122-5287-4DDA-9E1F-CA7DAF00B969",
        "text": "Have you thought more about what exactly that graph structure could look like?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536006302.000100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t\/UW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you thought more about what exactly that graph structure could look like?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1536007400.000100",
        "edited": {
            "user": "UCKRZS3DZ",
            "ts": "1536007411.000000"
        },
        "client_msg_id": "d2de24b4-3222-4f6e-b5e7-75c91b2f60b0",
        "text": "Yeah, I just omitted it to not overcomplicate my post. Wait a sec.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536006302.000100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "roFeN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I just omitted it to not overcomplicate my post. Wait a sec."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1536007491.000100",
        "edited": {
            "user": "UCKRZS3DZ",
            "ts": "1536008678.000000"
        },
        "client_msg_id": "2d023a07-f580-44aa-92c3-008987f3bf6e",
        "text": "I thought how versioning could look like and realized that it takes two kind of edges:\n\n1) hard edges. Similar to relationships between parent and child commits in git. When hard edge created, destination node takes id of source node as part of input to hashing function for id. Hard edges can be created only simultaneously with destination node.\n\n2) soft edges. These edges can be created at any time and don't participate in hash generation for nodes.\n\nBasically graph is bunch of DAGs that we know from git, yet nodes may have more edges between each other providing extra information.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536006302.000100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "30as",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I thought how versioning could look like and realized that it takes two kind of edges:\n\n1) hard edges. Similar to relationships between parent and child commits in git. When hard edge created, destination node takes id of source node as part of input to hashing function for id. Hard edges can be created only simultaneously with destination node.\n\n2) soft edges. These edges can be created at any time and don't participate in hash generation for nodes.\n\nBasically graph is bunch of DAGs that we know from git, yet nodes may have more edges between each other providing extra information."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1536008345.000100",
        "edited": {
            "user": "UCKRZS3DZ",
            "ts": "1536008495.000000"
        },
        "client_msg_id": "af822324-385e-465a-b72d-3ab6c1989aee",
        "text": "I thought about node content and how viewers should understand how to interpret it. I realized that single node might be interpreted differently in different contexts.\n\nSay if node represents some historical fact, then in timeline viewer it would be represented by timestamp, on world map it will be represented by shapes on the map (where it happened).\n\nOr say we got function that might be interpreted as text code, or as some element of visual program that requires some additional info not available in text code. It should be part of one node.\n\nSo different kinds of data, probably for different applications should be stored in one node.\nI came up with idea of having namespaces, where application author's public key serves as namespace for node attribute.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536006302.000100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xOJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I thought about node content and how viewers should understand how to interpret it. I realized that single node might be interpreted differently in different contexts.\n\nSay if node represents some historical fact, then in timeline viewer it would be represented by timestamp, on world map it will be represented by shapes on the map (where it happened).\n\nOr say we got function that might be interpreted as text code, or as some element of visual program that requires some additional info not available in text code. It should be part of one node.\n\nSo different kinds of data, probably for different applications should be stored in one node.\nI came up with idea of having namespaces, where application author's public key serves as namespace for node attribute."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1536011589.000100",
        "client_msg_id": "ad622480-2231-468e-9f38-6fca5e6b2d1e",
        "text": "Thanks for reading my blog, <@UCKRZS3DZ> :smile:. I'm still trying to think these things through. My belief is that we need to think about this from a holistic, whole-system perspective and rethink whether the prevalent concepts are even necessary.\n\nI like the ideas you are proposing and I'll add some of my thoughts below. This is absolutely about a new and different kind of hypermedia, and *not* a replication of physical paper in a digital machine (which is what text files are). I do think a *single* location-independent, append-only graph like system could be used to hold *all* static structural things - code (if we need it), rich media, and all their interconnections, sub parts and versions.\n\nAll replication can be orthogonal - whether its for caching a part of this graph to a user's local machine or for redundancy. We can have just a single namespace that can precisely point to any object in this world. Alan Kay once said something like 'give every object a URL'.\n\nThen we can think about built-in concepts, i.e metadata that this system supports. Something like 'new version' is just a special kind of edge. So is 'derived from' (e.g. I use a tool to convert a picture to grayscale, the new picture should be linked to the old, and to the function\/tool that modified it). Even 'type-of' could be an edge that links a media object to a transcoder object - you shouldn't have to go hunting around for 'programs' that will decode a 'file' you have. Any dynamic\/executable objects should link to *all* objects that form the interpreters\/runtimes\/dependencies that it needs - no more runarounds trying to recreate the environment from reading READMEs or whatever. IOW, preserve the connection to the *context*.\n\nOptimizations and compromises (such as discarding edges) should be defined separately, rather than designed in (we want a system that is limited by computer constraints only, not by design).\n\nI also think it is important not to build in assumptions like programming paradigms etc, so many kinds can be supported. Of course, much of the work is in the details.\n\nBTW, some related ideas are in the <http:\/\/unisonweb.org|unisonweb.org> and in <http:\/\/infra-structure.org|infra-structure.org>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536006302.000100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QDbMF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for reading my blog, "
                            },
                            {
                                "type": "user",
                                "user_id": "UCKRZS3DZ"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": ". I'm still trying to think these things through. My belief is that we need to think about this from a holistic, whole-system perspective and rethink whether the prevalent concepts are even necessary.\n\nI like the ideas you are proposing and I'll add some of my thoughts below. This is absolutely about a new and different kind of hypermedia, and "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " a replication of physical paper in a digital machine (which is what text files are). I do think a "
                            },
                            {
                                "type": "text",
                                "text": "single",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " location-independent, append-only graph like system could be used to hold "
                            },
                            {
                                "type": "text",
                                "text": "all",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " static structural things - code (if we need it), rich media, and all their interconnections, sub parts and versions.\n\nAll replication can be orthogonal - whether its for caching a part of this graph to a user's local machine or for redundancy. We can have just a single namespace that can precisely point to any object in this world. Alan Kay once said something like 'give every object a URL'.\n\nThen we can think about built-in concepts, i.e metadata that this system supports. Something like 'new version' is just a special kind of edge. So is 'derived from' (e.g. I use a tool to convert a picture to grayscale, the new picture should be linked to the old, and to the function\/tool that modified it). Even 'type-of' could be an edge that links a media object to a transcoder object - you shouldn't have to go hunting around for 'programs' that will decode a 'file' you have. Any dynamic\/executable objects should link to "
                            },
                            {
                                "type": "text",
                                "text": "all",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " objects that form the interpreters\/runtimes\/dependencies that it needs - no more runarounds trying to recreate the environment from reading READMEs or whatever. IOW, preserve the connection to the "
                            },
                            {
                                "type": "text",
                                "text": "context",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nOptimizations and compromises (such as discarding edges) should be defined separately, rather than designed in (we want a system that is limited by computer constraints only, not by design).\n\nI also think it is important not to build in assumptions like programming paradigms etc, so many kinds can be supported. Of course, much of the work is in the details.\n\nBTW, some related ideas are in the "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/unisonweb.org",
                                "text": "unisonweb.org"
                            },
                            {
                                "type": "text",
                                "text": " and in "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/infra-structure.org",
                                "text": "infra-structure.org"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCKRZS3DZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1536012320.000100",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1536013934.000000"
        },
        "client_msg_id": "0ce63dff-2758-4a1e-8d77-d793023fbacc",
        "text": "And by 'rethink the prevalent concepts' I'm talking about things like 'programs' - a fundamental concept but why do we need it? In the end we want systems with desired behaviors. But a system is not a  program! Most system behavior emerges from the composition of multiple programs, where the parts of a program are composed together very differently than how multiple programs are composed together (and how multiple clusters of programs are composed together). Another perspective could be we inspect and modify the system through various on-demand projections.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536006302.000100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wnfS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And by 'rethink the prevalent concepts' I'm talking about things like 'programs' - a fundamental concept but why do we need it? In the end we want systems with desired behaviors. But a system is not a  program! Most system behavior emerges from the composition of multiple programs, where the parts of a program are composed together very differently than how multiple programs are composed together (and how multiple clusters of programs are composed together). Another perspective could be we inspect and modify the system through various on-demand projections."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U7C7B75R6",
        "type": "message",
        "ts": "1536022009.000100",
        "client_msg_id": "fd2f33d4-303a-41fd-ad2c-5ef3e407276c",
        "text": "<@U8A5MS6R1> If we think the requirement of tokens from the abstract data structure point of view:\n\n-As you stated: text files are a list of strings. Therefore we can have many things on the single level.\n-To be able to compose things from smaller parts we need a tree. This level lives usually on the syntax level.\n-Next, we need to be able to reuse existing parts elsewhere so we need DAG. Currently done with tokens on higher level inside the compiler.\n-Cyclic graphs for recursive definitions? - out of scope for now\n\nOne point here is that while you can represent the general program as graph we still represent some of the program structure as a nested tree and rest with tokens. Even tough program can be considered to be composed from equal class relations. So nesting is quite cheap and obvious way of improvement but yeah it kind is just halfway to the natural structure of programming languages.\n\nSo do we need tokens as an addition for nesting? I think we need the structure which has native support for at least DAGs. The most direct way of thinking next incremental step is adding tokens in addition to nesting. However, then there are two different ways of referencing. That smells to my nose a bit.\n\nMy own current favorite structure model is to use GUID\/hash identified tuples (or lists) which have in cells either payload data or reference. Therefore there is the only single way of having substructure which also supports graphs. Visualizing \/ editing can then happen by nesting and by token (label by metadata of token) and this visualization doesn't have to be static even tough actual structure is untouched.\n\nBtw your blog post: Files, Formats and Byte Arrays was great area capture and caused that \"of course\"-realization. Files require same kind metastructure where referencing to other files is standardized. But if files contain graph which can have references to another same kind of files (which lives in a hierarchical filesystem), what is the value of file concept? It starts to smell like low-level implementation detail which I maybe don't want to see at all. Some time ago I relistened Future Of Coding E10 - Interview of Paul Chiusano and got idea\/illusion that it should be possible to make application persistency completely invisible by using the right abstraction. Elm family-architectures with time-traveling debugger are some sort of proof.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1534675466.000100",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c17aY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " If we think the requirement of tokens from the abstract data structure point of view:\n\n-As you stated: text files are a list of strings. Therefore we can have many things on the single level.\n-To be able to compose things from smaller parts we need a tree. This level lives usually on the syntax level.\n-Next, we need to be able to reuse existing parts elsewhere so we need DAG. Currently done with tokens on higher level inside the compiler.\n-Cyclic graphs for recursive definitions? - out of scope for now\n\nOne point here is that while you can represent the general program as graph we still represent some of the program structure as a nested tree and rest with tokens. Even tough program can be considered to be composed from equal class relations. So nesting is quite cheap and obvious way of improvement but yeah it kind is just halfway to the natural structure of programming languages.\n\nSo do we need tokens as an addition for nesting? I think we need the structure which has native support for at least DAGs. The most direct way of thinking next incremental step is adding tokens in addition to nesting. However, then there are two different ways of referencing. That smells to my nose a bit.\n\nMy own current favorite structure model is to use GUID\/hash identified tuples (or lists) which have in cells either payload data or reference. Therefore there is the only single way of having substructure which also supports graphs. Visualizing \/ editing can then happen by nesting and by token (label by metadata of token) and this visualization doesn't have to be static even tough actual structure is untouched.\n\nBtw your blog post: Files, Formats and Byte Arrays was great area capture and caused that \"of course\"-realization. Files require same kind metastructure where referencing to other files is standardized. But if files contain graph which can have references to another same kind of files (which lives in a hierarchical filesystem), what is the value of file concept? It starts to smell like low-level implementation detail which I maybe don't want to see at all. Some time ago I relistened Future Of Coding E10 - Interview of Paul Chiusano and got idea\/illusion that it should be possible to make application persistency completely invisible by using the right abstraction. Elm family-architectures with time-traveling debugger are some sort of proof."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U7C7B75R6",
        "type": "message",
        "ts": "1536023785.000100",
        "client_msg_id": "c852aa79-d4ad-4a1f-8193-e50fdcebaabf",
        "text": "<@UCKRZS3DZ> welcome to the club :stuck_out_tongue:\nI don't know how good match for you but just in case:\n<https:\/\/futureprogramming.slack.com\/archives\/C5T9GPWFL\/p1536022009000100?thread_ts=1534675466.000100&amp;cid=C5T9GPWFL>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536006302.000100",
        "parent_user_id": "UCKRZS3DZ",
        "attachments": [
            {
                "from_url": "https:\/\/futureprogramming.slack.com\/archives\/C5T9GPWFL\/p1536022009000100?thread_ts=1534675466.000100&amp;cid=C5T9GPWFL",
                "fallback": "[September 3rd, 2018 5:46 PM] niko.elmari: <@U8A5MS6R1> If we think the requirement of tokens from the abstract data structure point of view:\n\n-As you stated: text files are a list of strings. Therefore we can have many things on the single level.\n-To be able to compose things from smaller parts we need a tree. This level lives usually on the syntax level.\n-Next, we need to be able to reuse existing parts elsewhere so we need DAG. Currently done with tokens on higher level inside the compiler.\n-Cyclic graphs for recursive definitions? - out of scope for now\n\nOne point here is that while you can represent the general program as graph we still represent some of the program structure as a nested tree and rest with tokens. Even tough program can be considered to be composed from equal class relations. So nesting is quite cheap and obvious way of improvement but yeah it kind is just halfway to the natural structure of programming languages.\n\nSo do we need tokens as an addition for nesting? I think we need the structure which has native support for at least DAGs. The most direct way of thinking next incremental step is adding tokens in addition to nesting. However, then there are two different ways of referencing. That smells to my nose a bit.\n\nMy own current favorite structure model is to use GUID\/hash identified tuples (or lists) which have in cells either payload data or reference. Therefore there is the only single way of having substructure which also supports graphs. Visualizing \/ editing can then happen by nesting and by token (label by metadata of token) and this visualization doesn't have to be static even tough actual structure is untouched.\n\nBtw your blog post: Files, Formats and Byte Arrays was great area capture and caused that \"of course\"-realization. Files require same kind metastructure where referencing to other files is standardized. But if files contain graph which can have references to another same kind of files (which lives in a hierarchical filesystem), what is the value of file concept? It starts to smell like low-level implementation detail which I maybe don't want to see at all. Some time ago I relistened Future Of Coding E10 - Interview of Paul Chiusano and got idea\/illusion that it should be possible to make application persistency completely invisible by using the right abstraction. Elm family-architectures with time-traveling debugger are some sort of proof.",
                "ts": "1536022009.000100",
                "author_id": "U7C7B75R6",
                "author_subname": "Niko Autio",
                "channel_id": "C5T9GPWFL",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "<@U8A5MS6R1> If we think the requirement of tokens from the abstract data structure point of view:\n\n-As you stated: text files are a list of strings. Therefore we can have many things on the single level.\n-To be able to compose things from smaller parts we need a tree. This level lives usually on the syntax level.\n-Next, we need to be able to reuse existing parts elsewhere so we need DAG. Currently done with tokens on higher level inside the compiler.\n-Cyclic graphs for recursive definitions? - out of scope for now\n\nOne point here is that while you can represent the general program as graph we still represent some of the program structure as a nested tree and rest with tokens. Even tough program can be considered to be composed from equal class relations. So nesting is quite cheap and obvious way of improvement but yeah it kind is just halfway to the natural structure of programming languages.\n\nSo do we need tokens as an addition for nesting? I think we need the structure which has native support for at least DAGs. The most direct way of thinking next incremental step is adding tokens in addition to nesting. However, then there are two different ways of referencing. That smells to my nose a bit.\n\nMy own current favorite structure model is to use GUID\/hash identified tuples (or lists) which have in cells either payload data or reference. Therefore there is the only single way of having substructure which also supports graphs. Visualizing \/ editing can then happen by nesting and by token (label by metadata of token) and this visualization doesn't have to be static even tough actual structure is untouched.\n\nBtw your blog post: Files, Formats and Byte Arrays was great area capture and caused that \"of course\"-realization. Files require same kind metastructure where referencing to other files is standardized. But if files contain graph which can have references to another same kind of files (which lives in a hierarchical filesystem), what is the value of file concept? It starts to smell like low-level implementation detail which I maybe don't want to see at all. Some time ago I relistened Future Of Coding E10 - Interview of Paul Chiusano and got idea\/illusion that it should be possible to make application persistency completely invisible by using the right abstraction. Elm family-architectures with time-traveling debugger are some sort of proof.",
                "author_name": "Niko Autio",
                "author_link": "https:\/\/futureprogramming.slack.com\/team\/U7C7B75R6",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/63864c00a4500594b4b420a267d8391f.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F66f9%2Fimg%2Favatars%2Fava_0019-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureprogramming.slack.com\/archives\/C5T9GPWFL\/p1536022009000100?thread_ts=1534675466.000100&amp;cid=C5T9GPWFL",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MqP0A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCKRZS3DZ"
                            },
                            {
                                "type": "text",
                                "text": " welcome to the club "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": "\nI don't know how good match for you but just in case:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureprogramming.slack.com\/archives\/C5T9GPWFL\/p1536022009000100?thread_ts=1534675466.000100&amp;cid=C5T9GPWFL",
                                "text": "https:\/\/futureprogramming.slack.com\/archives\/C5T9GPWFL\/p1536022009000100?thread_ts=1534675466.000100&cid=C5T9GPWFL"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1536023962.000100",
        "client_msg_id": "1ff78749-b83f-42fa-9126-e046316183a5",
        "text": "When we're talking about immutability and content-addressed data, I feel like I should mention <https:\/\/ipfs.io\/>. Wouldn't it be cool if one day public data \/ code \/ programs would be shared in a distibuted peer-to-peer network like ipfs?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536006302.000100",
        "parent_user_id": "UCKRZS3DZ",
        "attachments": [
            {
                "service_name": "IPFS",
                "title": "IPFS is the Distributed Web",
                "title_link": "https:\/\/ipfs.io\/",
                "text": "A peer-to-peer hypermedia protocol to make the web faster, safer, and more open.",
                "fallback": "IPFS: IPFS is the Distributed Web",
                "from_url": "https:\/\/ipfs.io\/",
                "service_icon": "https:\/\/ipfs.io\/.\/images\/favicon.png",
                "id": 1,
                "original_url": "https:\/\/ipfs.io\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DnT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When we're talking about immutability and content-addressed data, I feel like I should mention "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/ipfs.io\/"
                            },
                            {
                                "type": "text",
                                "text": ". Wouldn't it be cool if one day public data \/ code \/ programs would be shared in a distibuted peer-to-peer network like ipfs?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1",
                    "UCKRZS3DZ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1536024871.000100",
        "client_msg_id": "9105b4b1-8ceb-4902-88ea-eba634362dde",
        "text": ":thumbsup: Yes - files are 'in the way'. First we break apart our interconnected structures into different files and then invent ways to put them back together. I also agree persistence should be 'orthogonal' to structure. Files cause another  conflation here as they are also the unit of persistence. We have to do all kinds of gymnastics to use files consistently (databases, version control etc.). Interestingly, the B-trees are often bound both below and above the file (i.e. in filesystems implementations and database implementations). It seems like a 'system smell' that these definitions cannot collapse into one.\n\nMaybe the general idea here is that any 'partition' of some 'whole' (e.g. files) can be problematic. But partitioning is also useful because we do want to break apart the whole into smaller bits... so there's a tension there. Even 'programs' are a partitioning concept - a system is broken down into programs, and the behavior is the result of coupling between programs and shared libraries, configuration etc.. it all seems very messy.\n\nIn another thread started by <@UCKRZS3DZ> we're discussing something related - a distributed, append-only graph to store 'everything'.\n\nCould you elaborate on what you mean by hash identified tuples\/lists?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1534675466.000100",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QDug",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "thumbsup",
                                "unicode": "1f44d"
                            },
                            {
                                "type": "text",
                                "text": " Yes - files are 'in the way'. First we break apart our interconnected structures into different files and then invent ways to put them back together. I also agree persistence should be 'orthogonal' to structure. Files cause another  conflation here as they are also the unit of persistence. We have to do all kinds of gymnastics to use files consistently (databases, version control etc.). Interestingly, the B-trees are often bound both below and above the file (i.e. in filesystems implementations and database implementations). It seems like a 'system smell' that these definitions cannot collapse into one.\n\nMaybe the general idea here is that any 'partition' of some 'whole' (e.g. files) can be problematic. But partitioning is also useful because we do want to break apart the whole into smaller bits... so there's a tension there. Even 'programs' are a partitioning concept - a system is broken down into programs, and the behavior is the result of coupling between programs and shared libraries, configuration etc.. it all seems very messy.\n\nIn another thread started by "
                            },
                            {
                                "type": "user",
                                "user_id": "UCKRZS3DZ"
                            },
                            {
                                "type": "text",
                                "text": " we're discussing something related - a distributed, append-only graph to store 'everything'.\n\nCould you elaborate on what you mean by hash identified tuples\/lists?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1536024981.000100",
        "client_msg_id": "d75a34e2-28de-43ae-bad1-ac94c0fbea95",
        "text": "(oh now I see you already found that thread :smile:)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1534675466.000100",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hIu=6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(oh now I see you already found that thread "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1536039141.000100",
        "client_msg_id": "80d80cae-4a51-4fbe-9d2e-45f15c6d35d3",
        "text": "There is also <https:\/\/datproject.org\/> for peer-to-peer data distribution",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1536006302.000100",
        "parent_user_id": "UCKRZS3DZ",
        "attachments": [
            {
                "service_name": "Dat Project",
                "title": "Dat Project - A Distributed Data Community",
                "title_link": "https:\/\/datproject.org\/",
                "text": "Dat is the nonprofit-backed technology &amp; community for building apps of the future.",
                "fallback": "Dat Project: Dat Project - A Distributed Data Community",
                "from_url": "https:\/\/datproject.org\/",
                "service_icon": "https:\/\/datproject.org\/public\/img\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/datproject.org\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g5w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is also "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/datproject.org\/"
                            },
                            {
                                "type": "text",
                                "text": " for peer-to-peer data distribution"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1536040639.000100",
        "client_msg_id": "6313FFB9-DBE4-4B0B-8185-AA2DDB40B78F",
        "text": "It sounds like we’re searching for the “atoms of data”. What is the smallest entity to model data structures?\n\nWe already know that we can represent anything as a stream of bytes. That seems to be a universal format, but that alone isn’t enough. A stream of bytes is only usable with some sort of encoding. That is usually not explicitly part of the data itself, but external, e.g. when we implicitly assume that a stream of bytes is UTF-8 encoded.\n\nNow that gives us a text string. Which is still pretty universal, but not enough to do anything interesting with it. We want to express structure, because structure gives us a way to have proper entities. Entities allow us to do meaningful computation with them.\n\nSo we invented all kinds of ways to break a text string down into entities. That’s where it diverges into a hell of a lot of different formats we invented over time. Simple Unix configuration and data files with various formats, often using one or two different delimiters (often newlines and spaces or tabs) to break strings into entities.\nThese give us simple collections to do some meaningful computation with.\n\nBut that’s still not enough, because we also need hierarchy, or nesting, and so we invented more elaborate ways to encode that, e.g. XML or JSON.\nThese give us trees and as such even more interesting ways to compute with them.\n\nSomewhere along this way, we made some decisions that got us where we are today — so it’s not exactly terrible, but at least most of us here think we can do better.\n\nI think it’s relatively easy to see why a graph looks so appealing to us. But I think the core question is not “Should it be a graph?” but rather “What exactly do the nodes and edges represent?”",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1534675466.000100",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jXM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It sounds like we’re searching for the “atoms of data”. What is the smallest entity to model data structures?\n\nWe already know that we can represent anything as a stream of bytes. That seems to be a universal format, but that alone isn’t enough. A stream of bytes is only usable with some sort of encoding. That is usually not explicitly part of the data itself, but external, e.g. when we implicitly assume that a stream of bytes is UTF-8 encoded.\n\nNow that gives us a text string. Which is still pretty universal, but not enough to do anything interesting with it. We want to express structure, because structure gives us a way to have proper entities. Entities allow us to do meaningful computation with them.\n\nSo we invented all kinds of ways to break a text string down into entities. That’s where it diverges into a hell of a lot of different formats we invented over time. Simple Unix configuration and data files with various formats, often using one or two different delimiters (often newlines and spaces or tabs) to break strings into entities.\nThese give us simple collections to do some meaningful computation with.\n\nBut that’s still not enough, because we also need hierarchy, or nesting, and so we invented more elaborate ways to encode that, e.g. XML or JSON.\nThese give us trees and as such even more interesting ways to compute with them.\n\nSomewhere along this way, we made some decisions that got us where we are today — so it’s not exactly terrible, but at least most of us here think we can do better.\n\nI think it’s relatively easy to see why a graph looks so appealing to us. But I think the core question is not “Should it be a graph?” but rather “What exactly do the nodes and edges represent?”"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U5TCAFTD3"
                ],
                "count": 1
            },
            {
                "name": "star",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    }
]