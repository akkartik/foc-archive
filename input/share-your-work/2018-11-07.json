[
    {
        "user": "U85MWBKEY",
        "type": "message",
        "ts": "1541611784.011100",
        "edited": {
            "user": "U85MWBKEY",
            "ts": "1541611792.000000"
        },
        "client_msg_id": "f457dcb5-a7e3-46e9-854f-7c7fa720e84f",
        "text": "Simple question with interesting implications: Do you think the next big programming language\/paradigm that becomes mainstream will be written in itself (bootstrapped)?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "88eacb7e65ed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-08\/681438296241_88eacb7e65edebc579ab_72.jpg",
            "first_name": "Aidan",
            "real_name": "Aidan Cunniffe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "acunniffe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541611784.011100",
        "reply_count": 14,
        "reply_users_count": 7,
        "latest_reply": "1541655196.018300",
        "reply_users": [
            "UBN9AFS0N",
            "U8A5MS6R1",
            "UCKRZS3DZ",
            "U85MWBKEY",
            "UDCLT064X",
            "UCUSW7WVD",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1541612319.011300"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1541612392.011500"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1541616438.011800"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1541619313.015100"
            },
            {
                "user": "U85MWBKEY",
                "ts": "1541619665.015400"
            },
            {
                "user": "U85MWBKEY",
                "ts": "1541619713.015600"
            },
            {
                "user": "UDCLT064X",
                "ts": "1541620595.015800"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1541625239.016400"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1541625345.016600"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1541628179.016900"
            },
            {
                "user": "UDCLT064X",
                "ts": "1541632802.017200"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1541639176.017800"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1541639917.018000"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1541655196.018300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KDdu+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Simple question with interesting implications: Do you think the next big programming language\/paradigm that becomes mainstream will be written in itself (bootstrapped)?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5TCAFTD3",
                    "UA14TGLTC",
                    "UC2A2ARPT",
                    "UCQ4BBFQ9"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1541612319.011300",
        "client_msg_id": "377dd55b-31f6-4f14-b1b9-ff0dd4e2ade3",
        "text": "the problem with starting the language with the objective of bootstrapping it is that your first feedback will be from the use case \"write a compiler\", then your language may be guided from that before it gets feedback from other use cases.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541611784.011100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0\/3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the problem with starting the language with the objective of bootstrapping it is that your first feedback will be from the use case \"write a compiler\", then your language may be guided from that before it gets feedback from other use cases."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1",
                    "U5TCAFTD3",
                    "U85MWBKEY",
                    "UA14TGLTC",
                    "UAL7940NM"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1541612392.011500",
        "client_msg_id": "90f2b3e2-9eba-448c-9c30-6aa00d3dbc3f",
        "text": "eventually bootstrapping is a nice goal, but I would leave that until I figured out the design guided by the use cases I want to make it powerful for",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541611784.011100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/=d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "eventually bootstrapping is a nice goal, but I would leave that until I figured out the design guided by the use cases I want to make it powerful for"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541616438.011800",
        "client_msg_id": "279df0d0-47d9-4725-92a7-71292215123c",
        "text": "It absolutely *must* be possible bootstrap itself, though not necessarily from the outset.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541611784.011100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hHg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It absolutely "
                            },
                            {
                                "type": "text",
                                "text": "must",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " be possible bootstrap itself, though not necessarily from the outset."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1541619313.015100",
        "client_msg_id": "861f555a-9355-4dd7-9caa-ec247144377a",
        "text": "Bootstraping is cool and sexy, yet not that practical, right?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541611784.011100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "56R0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Bootstraping is cool and sexy, yet not that practical, right?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U85MWBKEY",
        "type": "message",
        "ts": "1541619665.015400",
        "client_msg_id": "8f058ca9-b195-4bca-bc8e-98b916dbeb4a",
        "text": "<@UBN9AFS0N> love this -- you're right. bad forcing function to have on day 1.\n\nReason I ask is that nearly every new language around today is written on top of other abstractions sometimes 1-3 layers deep. I wonder what assumptions we swallow because of that which inform our design choices",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "88eacb7e65ed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-08\/681438296241_88eacb7e65edebc579ab_72.jpg",
            "first_name": "Aidan",
            "real_name": "Aidan Cunniffe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "acunniffe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541611784.011100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NGzd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " love this -- you're right. bad forcing function to have on day 1.\n\nReason I ask is that nearly every new language around today is written on top of other abstractions sometimes 1-3 layers deep. I wonder what assumptions we swallow because of that which inform our design choices"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1",
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U85MWBKEY",
        "type": "message",
        "ts": "1541619713.015600",
        "client_msg_id": "b29c92f2-d376-4348-b139-fe3b06e64277",
        "text": "Curious what might happen if someone wrote something new from scratch -- not necessarily with the goal of getting popular, but with the goal of mapping some alternatives we glaze over",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "88eacb7e65ed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-08\/681438296241_88eacb7e65edebc579ab_72.jpg",
            "first_name": "Aidan",
            "real_name": "Aidan Cunniffe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "acunniffe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541611784.011100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wwp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Curious what might happen if someone wrote something new from scratch -- not necessarily with the goal of getting popular, but with the goal of mapping some alternatives we glaze over"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDCLT064X",
        "type": "message",
        "ts": "1541620595.015800",
        "client_msg_id": "75371688-680a-49c3-a815-e2496b5a4f9d",
        "text": "Bootstrapped?  As in <https:\/\/en.wikipedia.org\/wiki\/Bootstrapping_(compilers)> ? From the article: “Many compilers for many programming languages are bootstrapped, including compilers for BASIC, ALGOL, C, D, Pascal, PL\/I, Factor, Haskell, Modula-2, Oberon, OCaml, Common Lisp, Scheme, Go, Java, Rust, Python, Scala, Nim, Eiffel, and more.”\n\nLooks like basically all modern languages are bootstrapped? I’m probably missing something here…\n\nTalking about avoiding abstractions as much as possible makes me think of Lisp Machines: <https:\/\/en.wikipedia.org\/wiki\/Lisp_machine>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3e20180f0c2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/53e20180f0c292fcb589f77f738ed402.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Jesse Aldridge",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jessealdridge",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541611784.011100",
        "parent_user_id": "U85MWBKEY",
        "attachments": [
            {
                "title": "Bootstrapping (compilers)",
                "title_link": "https:\/\/en.wikipedia.org\/wiki\/Bootstrapping_(compilers)",
                "from_url": "https:\/\/en.wikipedia.org\/wiki\/Bootstrapping_(compilers)",
                "author_name": "Wikipedia",
                "author_link": "https:\/\/en.wikipedia.org\/",
                "text": "In computer science, bootstrapping is the technique for producing a self-compiling compiler — that is, compiler (or assembler) written in the source programming language that it intends to compile. An initial core version of the compiler (the bootstrap compiler) is generated in a different language (which could be assembly language); successive expanded versions of the compiler are developed using this minimal subset of the language.\nMany compilers for many programming languages are bootstrapped, including compilers for BASIC, ALGOL, C, D, Pascal, PL\/I, Factor, Haskell, Modula-2, Oberon, OCaml, Common Lisp, Scheme, Go, Java, Rust, Python, Scala, Nim, Eiffel, and more.",
                "fallback": "wikipedia: Bootstrapping (compilers)",
                "service_icon": "https:\/\/a.slack-edge.com\/bfaba\/img\/unfurl_icons\/wikipedia.png",
                "id": 1,
                "original_url": "https:\/\/en.wikipedia.org\/wiki\/Bootstrapping_(compilers)"
            },
            {
                "image_url": "https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/1\/16\/LISP_machine.jpg\/1200px-LISP_machine.jpg",
                "image_width": 1200,
                "image_height": 1588,
                "image_bytes": 194018,
                "title": "Lisp machine",
                "title_link": "https:\/\/en.wikipedia.org\/wiki\/Lisp_machine",
                "from_url": "https:\/\/en.wikipedia.org\/wiki\/Lisp_machine",
                "author_name": "Wikipedia",
                "author_link": "https:\/\/en.wikipedia.org\/",
                "text": "Lisp machines are general-purpose computers designed to efficiently run Lisp as their main software and programming language, usually via hardware support. They are an example of a high-level language computer architecture, and in a sense, they were the first commercial single-user workstations. Despite being modest in number (perhaps 7,000 units total as of 1988), Lisp machines commercially pioneered many now-commonplace technologies – including effective garbage collection, laser printing, windowing systems, computer mice, high-resolution bit-mapped raster graphics, computer graphic rendering, and networking innovations such as Chaosnet. Several firms built and sold Lisp machines in the 1980s: Symbolics (3600, 3640, XL1200, MacIvory, and other models), Lisp Machines Incorporated (LMI Lambda), Texas Instruments (Explorer and MicroExplorer), and Xerox (Interlisp-D workstations). The operating systems were written in Lisp Machine Lisp, Interlisp (Xerox), and later partly in Common Lisp.",
                "fallback": "wikipedia: Lisp machine",
                "service_icon": "https:\/\/a.slack-edge.com\/bfaba\/img\/unfurl_icons\/wikipedia.png",
                "id": 2,
                "original_url": "https:\/\/en.wikipedia.org\/wiki\/Lisp_machine"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G6s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Bootstrapped?  As in "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Bootstrapping_(compilers)"
                            },
                            {
                                "type": "text",
                                "text": " ? From the article: “Many compilers for many programming languages are bootstrapped, including compilers for BASIC, ALGOL, C, D, Pascal, PL\/I, Factor, Haskell, Modula-2, Oberon, OCaml, Common Lisp, Scheme, Go, Java, Rust, Python, Scala, Nim, Eiffel, and more.”\n\nLooks like basically all modern languages are bootstrapped? I’m probably missing something here…\n\nTalking about avoiding abstractions as much as possible makes me think of Lisp Machines: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Lisp_machine"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541625239.016400",
        "client_msg_id": "dfac9e0f-988d-4de8-9161-a02c6d6f77cf",
        "text": "&gt;  I wonder what assumptions we swallow because of that which inform our design choices\nThe primary 'assumption' we carry over is perhaps the notion of a programming language itself and the ideas of what is the environment provided by the 'operating system' is? Things that are more 'from scratch' tend to be whole systems, e.g. <http:\/\/squeak.org|squeak.org>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541611784.011100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S6pNt",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " I wonder what assumptions we swallow because of that which inform our design choices"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The primary 'assumption' we carry over is perhaps the notion of a programming language itself and the ideas of what is the environment provided by the 'operating system' is? Things that are more 'from scratch' tend to be whole systems, e.g. "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/squeak.org",
                                "text": "squeak.org"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541625345.016600",
        "client_msg_id": "6121b8f4-debd-43ac-acb1-d510ac999d06",
        "text": "I think instead of bootstrap we mean 'self hosting'?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541611784.011100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p5fY1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think instead of bootstrap we mean 'self hosting'?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1541628179.016900",
        "client_msg_id": "1f7cf296-b479-4831-bcbd-1f8cc40aea23",
        "text": "Yeah, \"bootstrap\" isn't a precise enough term for this discussion. Often systems that claim to be bootstrapped are metacircularly self hosted. This means that they started out written on some other stack (1-3 layers deep as <@U85MWBKEY> puts it) before being rewritten in themselves. That means they rely on a previous version of themselves to be built, and therefore indirectly the reliance on the old stack continues to persist.\n\nTo avoid assumptions from previous abstractions bleeding through, you need what I've been calling _linear_ bootstrapping. But that's a hard project for potentially little gain. I've been slowly working on such a system (I think I've shared it here before): <https:\/\/github.com\/akkartik\/mu\/blob\/master\/subx\/Readme.md>. Not bootstrapped at all at the moment, but the hope is that it will eventually be able to bootstrap itself out of machine code. And the existing C based stack will continue to be supported, so that you get Diverse Double Compilation.\n\nBut even if I do all that, it's still not completely assumption-free because as <@U8A5MS6R1> points out, it relies on a kernel. Reinventing both language and OS at once is 10x harder. I'm not aware of anyone pulling it off in the past 30 years.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541611784.011100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "755hc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, \"bootstrap\" isn't a precise enough term for this discussion. Often systems that claim to be bootstrapped are metacircularly self hosted. This means that they started out written on some other stack (1-3 layers deep as "
                            },
                            {
                                "type": "user",
                                "user_id": "U85MWBKEY"
                            },
                            {
                                "type": "text",
                                "text": " puts it) before being rewritten in themselves. That means they rely on a previous version of themselves to be built, and therefore indirectly the reliance on the old stack continues to persist.\n\nTo avoid assumptions from previous abstractions bleeding through, you need what I've been calling "
                            },
                            {
                                "type": "text",
                                "text": "linear",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " bootstrapping. But that's a hard project for potentially little gain. I've been slowly working on such a system (I think I've shared it here before): "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/akkartik\/mu\/blob\/master\/subx\/Readme.md"
                            },
                            {
                                "type": "text",
                                "text": ". Not bootstrapped at all at the moment, but the hope is that it will eventually be able to bootstrap itself out of machine code. And the existing C based stack will continue to be supported, so that you get Diverse Double Compilation.\n\nBut even if I do all that, it's still not completely assumption-free because as "
                            },
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " points out, it relies on a kernel. Reinventing both language and OS at once is 10x harder. I'm not aware of anyone pulling it off in the past 30 years."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U85MWBKEY"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UDCLT064X",
        "type": "message",
        "ts": "1541632802.017200",
        "client_msg_id": "c1fc40d6-c9b0-4fcd-b0d6-9095bc537356",
        "text": "Dang <@UCUSW7WVD>, if I understand correctly you’re trying to rebuild the entire programming stack starting from assembly? That’s pretty nuts (in a good way… I think).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3e20180f0c2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/53e20180f0c292fcb589f77f738ed402.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Jesse Aldridge",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jessealdridge",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541611784.011100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uoqR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Dang "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": ", if I understand correctly you’re trying to rebuild the entire programming stack starting from assembly? That’s pretty nuts (in a good way… I think)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541639176.017800",
        "client_msg_id": "5c9609b1-59d4-4a0a-af3d-6dd692427c36",
        "text": "Comes down to two things: what will the language\/paradigm be like and will it be suitable for bootstrapping?  In as much as it's versatile, we would imagine that it is good for bootstrapping, then why not bootstrap to have a coherent whole?\n\nOn the other hand, perhaps the new paradigm will find its value in helping us with something historically underserved, where a conventional bootstrapping notion isn't so well defined.\n\nI imagine if we, rather than the \"next big\", we adopted a genuinely transformative paradigm, we'll have bootstrapping but it will be effected differently from how we've done it before.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541611784.011100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YQE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Comes down to two things: what will the language\/paradigm be like and will it be suitable for bootstrapping?  In as much as it's versatile, we would imagine that it is good for bootstrapping, then why not bootstrap to have a coherent whole?\n\nOn the other hand, perhaps the new paradigm will find its value in helping us with something historically underserved, where a conventional bootstrapping notion isn't so well defined.\n\nI imagine if we, rather than the \"next big\", we adopted a genuinely transformative paradigm, we'll have bootstrapping but it will be effected differently from how we've done it before."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1541639917.018000",
        "client_msg_id": "5c01234b-7eab-42fa-9a39-6c833d1bd013",
        "text": "Yeah, pretty nuts :slightly_smiling_face: I'm still unsure if in a good way. But we'll see.\n\nOn the positive side, I don't want to reinvent _everything_. There's a lot of bloat in modern stacks. I also want to focus on a narrow set of use cases for starters.\n\nIf this sort of thing interests anyone, also check out <https:\/\/www.gnu.org\/software\/mes>. I'm still very tempted to just follow their lead. They're trying to connect up with the existing stack rather than create everything from scratch. They'll probably win.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541611784.011100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5r+H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, pretty nuts "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " I'm still unsure if in a good way. But we'll see.\n\nOn the positive side, I don't want to reinvent "
                            },
                            {
                                "type": "text",
                                "text": "everything",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". There's a lot of bloat in modern stacks. I also want to focus on a narrow set of use cases for starters.\n\nIf this sort of thing interests anyone, also check out "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.gnu.org\/software\/mes"
                            },
                            {
                                "type": "text",
                                "text": ". I'm still very tempted to just follow their lead. They're trying to connect up with the existing stack rather than create everything from scratch. They'll probably win."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541655196.018300",
        "client_msg_id": "324aefe0-56c5-416d-a6f6-ab51d2c3f9d7",
        "text": "Also relevant is that Squeak is self hosting, in the sense that it is written in itself and then is translated into C for compiling\/running in OS (<http:\/\/vpri.org\/pdf\/tr1997001_backto.pdf>). Now there is also CogNOS that can run a squeak image without an OS: <https:\/\/github.com\/nopsys\/CogNOS> and <https:\/\/charig.github.io\/assets\/papers\/SCDE-DLS.pdf>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541611784.011100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r79n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also relevant is that Squeak is self hosting, in the sense that it is written in itself and then is translated into C for compiling\/running in OS ("
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/vpri.org\/pdf\/tr1997001_backto.pdf"
                            },
                            {
                                "type": "text",
                                "text": "). Now there is also CogNOS that can run a squeak image without an OS: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/nopsys\/CogNOS"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/charig.github.io\/assets\/papers\/SCDE-DLS.pdf"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]