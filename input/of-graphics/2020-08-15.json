[
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1597514406.288800",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1597514839.000000"
        },
        "client_msg_id": "8374dd93-1dc2-4a98-909a-7c3963b1aeac",
        "text": "<@UPMFG2571> and I have started <https:\/\/github.com\/dali3d\/dali|Dali>, a new 2D\/3D graphics API, based on signed distance fields, implemented with WebGPU. The goal is to enable the future of user interfaces and visual programming languages by providing a much richer set of graphics primitives for rendering UIs than what is supported by traditional postscript\/SVG\/HTML\/CSS 2D vector graphics APIs.\n\nThe graphics model is inspired by my <https:\/\/github.com\/curv3d\/curv|Curv> project, but more general and much higher performance.\n\nAt this point, we have overall project goals, a list of prior art, and a design sketch for the Demo 1 release, which will demonstrate text rendering.\n * overall project goals: <https:\/\/github.com\/dali3d\/dali>\n * text rendering goals: <https:\/\/github.com\/dali3d\/dali\/wiki\/Text-Rendering-(Demo-1)>\n * prior art for text rendering: <https:\/\/github.com\/dali3d\/dali\/wiki\/Prior-Art>\n\nWe are looking for help, especially with the architecture.\n * Suggestions and recommendations on the GPU data structures and algorithms to use.\n * Pointers to existing projects that are not in my Prior Art list,\n   that show a better way to do things than what I've considered thus far.\n * Collaborators.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597514406.288800",
        "reply_count": 15,
        "reply_users_count": 5,
        "latest_reply": "1597627925.300500",
        "reply_users": [
            "UDQBTJ211",
            "UJN1TAYEQ",
            "UC2A2ARPT",
            "ULK0Z4MPV",
            "UCGAK10LS"
        ],
        "replies": [
            {
                "user": "UDQBTJ211",
                "ts": "1597516428.289600"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1597520024.289800"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1597521057.291200"
            },
            {
                "user": "ULK0Z4MPV",
                "ts": "1597523230.291500"
            },
            {
                "user": "ULK0Z4MPV",
                "ts": "1597524828.292200"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1597524850.292400"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1597525086.292600"
            },
            {
                "user": "ULK0Z4MPV",
                "ts": "1597525336.292800"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1597547564.297500"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1597578044.298600"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1597578158.299500"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1597605547.299800"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1597611708.300000"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1597627820.300300"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1597627925.300500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l=3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UPMFG2571"
                            },
                            {
                                "type": "text",
                                "text": " and I have started "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/dali3d\/dali",
                                "text": "Dali"
                            },
                            {
                                "type": "text",
                                "text": ", a new 2D\/3D graphics API, based on signed distance fields, implemented with WebGPU. The goal is to enable the future of user interfaces and visual programming languages by providing a much richer set of graphics primitives for rendering UIs than what is supported by traditional postscript\/SVG\/HTML\/CSS 2D vector graphics APIs.\n\nThe graphics model is inspired by my "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/curv3d\/curv",
                                "text": "Curv"
                            },
                            {
                                "type": "text",
                                "text": " project, but more general and much higher performance.\n\nAt this point, we have overall project goals, a list of prior art, and a design sketch for the Demo 1 release, which will demonstrate text rendering.\n * overall project goals: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/dali3d\/dali"
                            },
                            {
                                "type": "text",
                                "text": "\n * text rendering goals: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/dali3d\/dali\/wiki\/Text-Rendering-(Demo-1)"
                            },
                            {
                                "type": "text",
                                "text": "\n * prior art for text rendering: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/dali3d\/dali\/wiki\/Prior-Art"
                            },
                            {
                                "type": "text",
                                "text": "\n\nWe are looking for help, especially with the architecture.\n * Suggestions and recommendations on the GPU data structures and algorithms to use.\n * Pointers to existing projects that are not in my Prior Art list,\n   that show a better way to do things than what I've considered thus far.\n * Collaborators."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UUQ2EQW21",
                    "UHWC9PXBL",
                    "UC2A2ARPT",
                    "UJ6LDMMN0",
                    "UBSMEUXAA",
                    "UCGAK10LS",
                    "UPMFG2571",
                    "UNCP67JSK"
                ],
                "count": 9
            },
            {
                "name": "heart_eyes",
                "users": [
                    "ULK0Z4MPV",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1597516428.289600",
        "client_msg_id": "079762f0-5bba-4969-9e28-9fedda3315c3",
        "text": "This looks great. On the GH it says \"you can have a large number of primitives on the screen without slowing down.\"\n\nWhat is \"large\"?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597514406.288800",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=pgMq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This looks great. On the GH it says \"you can have a large number of primitives on the screen without slowing down.\"\n\nWhat is \"large\"?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1597520024.289800",
        "client_msg_id": "4f7d163b-9c46-40f7-8681-eab93ec99d01",
        "text": "<@UDQBTJ211> The problem I found with typical Shadertoy-style fragment shader programs is that you have a single distance function that encodes the entire scene, and that function is evaluated at each pixel. The cost of calling the distance function is linear in the number of distinct primitives that are unioned together in the scene. So you run into a performance cliff pretty quickly. We are going to fix this with an optimizing scene compiler combined with well known optimization tricks and data structures. I can't give performance numbers, because there's no code yet. The project was only conceived a few days ago. In the case of text, where the primitives are glyphs, I am expecting comparable performance to other GPU based text rendering engines.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597514406.288800",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+dB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " The problem I found with typical Shadertoy-style fragment shader programs is that you have a single distance function that encodes the entire scene, and that function is evaluated at each pixel. The cost of calling the distance function is linear in the number of distinct primitives that are unioned together in the scene. So you run into a performance cliff pretty quickly. We are going to fix this with an optimizing scene compiler combined with well known optimization tricks and data structures. I can't give performance numbers, because there's no code yet. The project was only conceived a few days ago. In the case of text, where the primitives are glyphs, I am expecting comparable performance to other GPU based text rendering engines."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1597521057.291200",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1597521080.000000"
        },
        "client_msg_id": "DF5148C8-19A5-4E0A-8A09-A0F1D2502AF8",
        "text": "Very interested in this for Hest! I'm AFK today, but look forward to reviewing what you've got and offering feedback.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597514406.288800",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qhI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very interested in this for Hest! I'm AFK today, but look forward to reviewing what you've got and offering feedback."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1597523230.291500",
        "edited": {
            "user": "ULK0Z4MPV",
            "ts": "1597523619.000000"
        },
        "client_msg_id": "0d092eca-a574-4df6-a9bd-f5093e1b1c3f",
        "text": "I'd also be very interested in this for my project!\nI currently use troika (built on three.js) to render text if it's at all useful. Having text wrapping and selection are especially great features. <https:\/\/github.com\/protectwise\/troika\/tree\/master\/packages\/troika-3d-text>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597514406.288800",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tpGK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd also be very interested in this for my project!\nI currently use troika (built on three.js) to render text if it's at all useful. Having text wrapping and selection are especially great features. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/protectwise\/troika\/tree\/master\/packages\/troika-3d-text"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1597524828.292200",
        "client_msg_id": "f494118a-3019-4cfe-a74e-303962bcd285",
        "text": "Is it significant overhead to support WebGL as well? Full browser support for WebGPU won't be here for a while right?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597514406.288800",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K3hTV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is it significant overhead to support WebGL as well? Full browser support for WebGPU won't be here for a while right?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1597524850.292400",
        "client_msg_id": "487aa5c3-68a3-4c36-bb05-1af464906bae",
        "text": "Troika uses SDF textures, which are signed distance fields that have been sampled at some sampling resolution. The problem with this sampling is that it throws away information needed for accurate rendering, which leads to this tradeoff (from the Troika docs):\n&gt; `sdfGlyphSize`\n&gt; Allows overriding the default size of each glyph's SDF (signed distance field) used when rendering this text instance. This must be a power-of-two number. Larger sizes can improve the quality of glyph rendering by increasing the sharpness of corners and preventing loss of very thin lines, at the expense of increased memory footprint and longer SDF generation time.\n&gt; Default: `64`\nIn this scheme, when you query a signed distance value, what you actually do is perform an interpolated lookup on the SDF texture, which returns an approximation of the actual distance. What I prefer is to directly query the Bezier curves in the character glyph and compute the exact distance.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597514406.288800",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c3kv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Troika uses SDF textures, which are signed distance fields that have been sampled at some sampling resolution. The problem with this sampling is that it throws away information needed for accurate rendering, which leads to this tradeoff (from the Troika docs):\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "sdfGlyphSize",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nAllows overriding the default size of each glyph's SDF (signed distance field) used when rendering this text instance. This must be a power-of-two number. Larger sizes can improve the quality of glyph rendering by increasing the sharpness of corners and preventing loss of very thin lines, at the expense of increased memory footprint and longer SDF generation time.\nDefault: "
                            },
                            {
                                "type": "text",
                                "text": "64",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In this scheme, when you query a signed distance value, what you actually do is perform an interpolated lookup on the SDF texture, which returns an approximation of the actual distance. What I prefer is to directly query the Bezier curves in the character glyph and compute the exact distance."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULK0Z4MPV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1597525086.292600",
        "client_msg_id": "b44339db-d891-4df4-b2f6-325bea41c17e",
        "text": "Firefox, Chrome and Safari already have experimental support for WebGPU in developer builds, but the standard is still being designed. It's supposed to be complete by the end of the year. WebGPU will be available by the time Dali is ready to use. There won't be a WebGL version because we are using a pipeline of compute shaders for performance reasons.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597514406.288800",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+4K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Firefox, Chrome and Safari already have experimental support for WebGPU in developer builds, but the standard is still being designed. It's supposed to be complete by the end of the year. WebGPU will be available by the time Dali is ready to use. There won't be a WebGL version because we are using a pipeline of compute shaders for performance reasons."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULK0Z4MPV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1597525336.292800",
        "edited": {
            "user": "ULK0Z4MPV",
            "ts": "1597525939.000000"
        },
        "client_msg_id": "3e7c1ad7-cf23-45c1-b532-281f2e203542",
        "text": "Sounds pretty exciting to me! I've definitely been waiting for something like this and look forward to having a play :rocket:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597514406.288800",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LDqA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sounds pretty exciting to me! I've definitely been waiting for something like this and look forward to having a play "
                            },
                            {
                                "type": "emoji",
                                "name": "rocket",
                                "unicode": "1f680"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1597534784.293900",
        "client_msg_id": "7A5B0B78-212D-4DFF-8F88-7EEEEC84453B",
        "text": "<https:\/\/twitter.com\/awwbees\/status\/1294283629233950720?s=21|https:\/\/twitter.com\/awwbees\/status\/1294283629233950720?s=21> love the use of visible waveforms traveling over the wires in this project!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597534784.293900",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1597574263.298300",
        "reply_users": [
            "US370TRJA",
            "UHWC9PXBL",
            "UUQ2EQW21"
        ],
        "replies": [
            {
                "user": "US370TRJA",
                "ts": "1597535377.295800"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1597536576.297200"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1597574263.298300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/awwbees|@awwbees>: hello! for the past decade I've been building bespoke, a free modular synth environment with python livecoding support for mac\/windows\/linux\n\nyou can find the code and get builds at <https:\/\/github.com\/awwbees\/BespokeSynth>\n\nand if you scroll through my feed, you'll find a bunch of videos of it <https:\/\/pbs.twimg.com\/tweet_video_thumb\/EfY4A2fXkAEUI5K.jpg>",
                "ts": 1597416238,
                "author_name": "Ryan Challinor",
                "author_link": "https:\/\/twitter.com\/awwbees\/status\/1294283629233950720",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/996244528230264832\/C6j_0to4_normal.jpg",
                "author_subname": "@awwbees",
                "text": "hello! for the past decade I've been building bespoke, a free modular synth environment with python livecoding support for mac\/windows\/linux\n\nyou can find the code and get builds at <https:\/\/github.com\/awwbees\/BespokeSynth>\n\nand if you scroll through my feed, you'll find a bunch of videos of it",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/awwbees\/status\/1294283629233950720?s=21",
                "thumb_url": "https:\/\/pbs.twimg.com\/tweet_video_thumb\/EfY4A2fXkAEUI5K.jpg",
                "thumb_width": 500,
                "thumb_height": 525,
                "video_html_width": 500,
                "video_html_height": 526,
                "video_html": "<video autoplay loop muted poster=\"https:\/\/pbs.twimg.com\/tweet_video_thumb\/EfY4A2fXkAEUI5K.jpg\" width=\"500\" height=\"526\"><source type=\"video\/mp4\" src=\"https:\/\/video.twimg.com\/tweet_video\/EfY4A2fXkAEUI5K.mp4\"><\/video>",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/awwbees\/status\/1294283629233950720?s=21",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "anNw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/awwbees\/status\/1294283629233950720?s=21",
                                "text": "https:\/\/twitter.com\/awwbees\/status\/1294283629233950720?s=21"
                            },
                            {
                                "type": "text",
                                "text": " love the use of visible waveforms traveling over the wires in this project!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "U015V233CFL",
                    "US370TRJA",
                    "UFQQ3P867"
                ],
                "count": 4
            },
            {
                "name": "exploding_head",
                "users": [
                    "UUQ2EQW21",
                    "U01DHBSPC9J"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "US370TRJA",
        "type": "message",
        "ts": "1597535377.295800",
        "client_msg_id": "2DC7389F-C33E-410E-979A-A3401D132742",
        "text": "Think I saw a playable demo of the physical interface from one of the replies at the museum of science in Chicago - cool to see that idea played out on a screen native interface! <https:\/\/www.youtube.com\/watch?v=0h-RhyopUmc|https:\/\/www.youtube.com\/watch?v=0h-RhyopUmc>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8449ebbf703",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8449ebbf703fcee4e1eadc3e78478f01.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "Cameron",
            "real_name": "Cameron Yick",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "cameron.yick",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597534784.293900",
        "parent_user_id": "UHWC9PXBL",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "reactable: basic demo #1",
                "title_link": "https:\/\/www.youtube.com\/watch?v=0h-RhyopUmc",
                "author_name": "Reactable Systems",
                "author_link": "https:\/\/www.youtube.com\/user\/marcosalonso",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/0h-RhyopUmc\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: reactable: basic demo #1",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/0h-RhyopUmc?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/www.youtube.com\/watch?v=0h-RhyopUmc",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=0h-RhyopUmc"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HTDFW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Think I saw a playable demo of the physical interface from one of the replies at the museum of science in Chicago - cool to see that idea played out on a screen native interface! "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=0h-RhyopUmc",
                                "text": "https:\/\/www.youtube.com\/watch?v=0h-RhyopUmc"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1597536576.297200",
        "client_msg_id": "4699A877-82D3-4A5D-8271-CB75D1236C27",
        "text": "reactable was listed as an inspiration but not strictly related—i do remember nerding the heck out when that came out though",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597534784.293900",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mSg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "reactable was listed as an inspiration but not strictly related—i do remember nerding the heck out when that came out though"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1597547564.297500",
        "client_msg_id": "5569be08-8421-432e-b5ca-69fcc645e563",
        "text": "<@UJN1TAYEQ> How does this differ from <https:\/\/github.com\/servo\/pathfinder|Pathfinder>, which is nearing completion? Or piet-gpu, which is a sister project? Pathfinder enables massively-parallel realtime vector rendering, and will run on WebGPU as well. I've been following it pretty closely.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597514406.288800",
        "parent_user_id": "UJN1TAYEQ",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "servo\/pathfinder",
                "title_link": "https:\/\/github.com\/servo\/pathfinder",
                "text": "A fast, practical GPU rasterizer for fonts and vector graphics - servo\/pathfinder",
                "fallback": "GitHub: servo\/pathfinder",
                "from_url": "https:\/\/github.com\/servo\/pathfinder",
                "thumb_url": "https:\/\/repository-images.githubusercontent.com\/78266307\/49d78b80-62ca-11ea-82f9-102c75efaa1d",
                "thumb_width": 500,
                "thumb_height": 250,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/servo\/pathfinder"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eiVQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " How does this differ from "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/servo\/pathfinder",
                                "text": "Pathfinder"
                            },
                            {
                                "type": "text",
                                "text": ", which is nearing completion? Or piet-gpu, which is a sister project? Pathfinder enables massively-parallel realtime vector rendering, and will run on WebGPU as well. I've been following it pretty closely."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]