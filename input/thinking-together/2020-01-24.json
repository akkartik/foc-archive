[
    {
        "user": "UMU2RLPR8",
        "type": "message",
        "ts": "1579856617.047100",
        "client_msg_id": "2de6d382-806b-46a9-9cd6-278e7ae1ffbe",
        "text": "<@UEQ6M68H0> js copied java’s date stuff not actionscript. even ignoring that js came well before actionscript like <@UEBG0NPDK> said, i know this because i complained about it once on twitter and brendan came into my mentions to tell me to blame java and not him lol",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84533398a201",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-10\/756734099191_84533398a201c4f2babe_72.png",
            "first_name": "Ryan",
            "real_name": "Ryan",
            "display_name": "comma",
            "team": "T5TCAFTA9",
            "name": "ryan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pxyS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " js copied java’s date stuff not actionscript. even ignoring that js came well before actionscript like "
                            },
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " said, i know this because i complained about it once on twitter and brendan came into my mentions to tell me to blame java and not him lol"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1579857909.058600",
        "client_msg_id": "8b36767a-648f-4ffd-8d50-656ed9cf5d20",
        "text": "Well brendan should know. The pioneers of scripting languages don't get their proper credit. Before AS2 there was Lingo and before that there were some other projects that were around hypercard time that allowed people to do multimedia on PC's. VideoWorks's (1985) sequel, Macromedia director 3 (1993), was huge in its day; cost hundreds in a fancy box designed by Clement Mok, back when people spent big money on boxes. These early scripting languages predate Java and JS. They had triggering on mouse clicks. The CDROM business, Random House\/Living Books, Myst, etc., created a whole industry of multimedia that forever changed what computers were considered capable of doing. Broderbund was a key company in this phase; they made kids\/educational products, which drove the entire market. Desktop people were stuck in silent spreadsheets, but now you had animation, and stereo sound. It sold a ton of PC's. Millions of PC's were sold, just via Myst alone. It was a pre-rendered 3D game that ran on machines with no 3D hardware, and used to great effect the fog filters of Strata and had a great soundtrack. Because there was so much copying done between the early products, and because the companies were so unstable and getting absorbed it is hard to give proper credit. JS didn't come out until 1995 long after these multimedia scripting products which must have been known to the JS team at Netscape. Marc Canter and his team were really big pioneers, and i wish more people would acknowledge how instrumental these tools were in creating a software revolution <http:\/\/lingoworkshop.com\/articles\/history>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Lingoworkshop",
                "title_link": "http:\/\/lingoworkshop.com\/articles\/history",
                "text": "The Lingoworkshop: MeccaMedialight's contribution to the Director and Shockwave developer community.",
                "fallback": "Lingoworkshop",
                "from_url": "http:\/\/lingoworkshop.com\/articles\/history",
                "service_name": "lingoworkshop.com",
                "id": 1,
                "original_url": "http:\/\/lingoworkshop.com\/articles\/history"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZaQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well brendan should know. The pioneers of scripting languages don't get their proper credit. Before AS2 there was Lingo and before that there were some other projects that were around hypercard time that allowed people to do multimedia on PC's. VideoWorks's (1985) sequel, Macromedia director 3 (1993), was huge in its day; cost hundreds in a fancy box designed by Clement Mok, back when people spent big money on boxes. These early scripting languages predate Java and JS. They had triggering on mouse clicks. The CDROM business, Random House\/Living Books, Myst, etc., created a whole industry of multimedia that forever changed what computers were considered capable of doing. Broderbund was a key company in this phase; they made kids\/educational products, which drove the entire market. Desktop people were stuck in silent spreadsheets, but now you had animation, and stereo sound. It sold a ton of PC's. Millions of PC's were sold, just via Myst alone. It was a pre-rendered 3D game that ran on machines with no 3D hardware, and used to great effect the fog filters of Strata and had a great soundtrack. Because there was so much copying done between the early products, and because the companies were so unstable and getting absorbed it is hard to give proper credit. JS didn't come out until 1995 long after these multimedia scripting products which must have been known to the JS team at Netscape. Marc Canter and his team were really big pioneers, and i wish more people would acknowledge how instrumental these tools were in creating a software revolution "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/lingoworkshop.com\/articles\/history"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1579858977.062300",
        "client_msg_id": "5e19ace9-5cde-4573-b3ed-244c8bff4f57",
        "text": "Ah, i found the original product that predates or at the least is at the same time as JS, it was called FutureSplash Animator (1993) <https:\/\/weekly-geekly.github.io\/articles\/148212\/index.html>  This was all owned by Macromedia at the time. Macromedia had Freehand (from Altsys), and Fontographer, and some other great products. Adobe bought all of these firms and unfortunately these tool pioneers are ignored.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579858977.062300",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1579997929.128100",
        "reply_users": [
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UA14TGLTC",
                "ts": "1579997929.128100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "What happened to the two developers who created Flash in 1993",
                "title_link": "https:\/\/weekly-geekly.github.io\/articles\/148212\/index.html",
                "text": "In 1993, two American programmers Jonathan Gay (left) and Robert Tatsumi (right) founded the company Future Wave Software and released the vector edit...",
                "fallback": "What happened to the two developers who created Flash in 1993",
                "from_url": "https:\/\/weekly-geekly.github.io\/articles\/148212\/index.html",
                "service_icon": "https:\/\/weekly-geekly.github.io\/favicon.ico",
                "service_name": "weekly-geekly.github.io",
                "id": 1,
                "original_url": "https:\/\/weekly-geekly.github.io\/articles\/148212\/index.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y2uO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, i found the original product that predates or at the least is at the same time as JS, it was called FutureSplash Animator (1993) "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/weekly-geekly.github.io\/articles\/148212\/index.html"
                            },
                            {
                                "type": "text",
                                "text": "  This was all owned by Macromedia at the time. Macromedia had Freehand (from Altsys), and Fontographer, and some other great products. Adobe bought all of these firms and unfortunately these tool pioneers are ignored."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1579859955.070800",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1579910643.000000"
        },
        "client_msg_id": "38304221-b939-40b1-a423-47544865ca08",
        "text": "A completely unrelated question:\n\nEvery programming language has a notion of \"dependencies\" between data, e.g. the between the variables (or functions) of a program. Understanding this dependency graph is important: it helps you determine the flow of data through your program. Consequently, it's problematic if every value is accessible from everywhere. Programming languages usually solve this with a notion called *scope.* Scopes are typically nested. Scopes may take the form of \"modules\" or \"blocks\".\n\nIt's my understanding that organising data into scopes is a mere approximation to expressing the true dependency graph of a program's data (which can be a DAG or a cyclic graph, not just a tree). It's easy to see the extent of a value hidden in a block, but it's not possible to show that a value is referenced in precisely two blocks. Similarly, it's easy to make values internal to a module, but PLs don't have a built-in way to visualise how the imports and exports of modules are interconnected (there are some external tools for visualising this).\n\n*My question is:* has anyone seen some good ways of representing data dependencies? Something better than a boxes-and-arrows visualisation?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "reply_count": 30,
        "reply_users_count": 8,
        "latest_reply": "1580630678.313300",
        "reply_users": [
            "UE6EFEPTQ",
            "UCGAK10LS",
            "UD3AK9JRF",
            "UFLN9JFRT",
            "UMVFWPZ36",
            "UA14TGLTC",
            "UPU0YJ1CM",
            "US370TRJA"
        ],
        "replies": [
            {
                "user": "UE6EFEPTQ",
                "ts": "1579860229.072700"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1579860264.072900"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1579860354.073200"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1579860720.073400"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1579861130.074700"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1579861362.075100"
            },
            {
                "user": "UD3AK9JRF",
                "ts": "1579882119.076500"
            },
            {
                "user": "UD3AK9JRF",
                "ts": "1579882591.082300"
            },
            {
                "user": "UD3AK9JRF",
                "ts": "1579882624.083000"
            },
            {
                "user": "UFLN9JFRT",
                "ts": "1579891754.086600"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1579896870.087100"
            },
            {
                "user": "UFLN9JFRT",
                "ts": "1579899342.089200"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1579910584.099000"
            },
            {
                "user": "UD3AK9JRF",
                "ts": "1579911956.107000"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1579913681.114700"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1579913914.115700"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1579977208.125500"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1579977315.125900"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1579977433.126100"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1580004600.129400"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1580033450.132200"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1580033551.132400"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1580052633.136300"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1580064278.149400"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1580064783.149600"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1580065457.150000"
            },
            {
                "user": "UPU0YJ1CM",
                "ts": "1580150998.218700"
            },
            {
                "user": "US370TRJA",
                "ts": "1580180905.227800"
            },
            {
                "user": "US370TRJA",
                "ts": "1580181078.230900"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1580630678.313300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bXg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A completely unrelated question:\n\nEvery programming language has a notion of \"dependencies\" between data, e.g. the between the variables (or functions) of a program. Understanding this dependency graph is important: it helps you determine the flow of data through your program. Consequently, it's problematic if every value is accessible from everywhere. Programming languages usually solve this with a notion called "
                            },
                            {
                                "type": "text",
                                "text": "scope.",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " Scopes are typically nested. Scopes may take the form of \"modules\" or \"blocks\".\n\nIt's my understanding that organising data into scopes is a mere approximation to expressing the true dependency graph of a program's data (which can be a DAG or a cyclic graph, not just a tree). It's easy to see the extent of a value hidden in a block, but it's not possible to show that a value is referenced in precisely two blocks. Similarly, it's easy to make values internal to a module, but PLs don't have a built-in way to visualise how the imports and exports of modules are interconnected (there are some external tools for visualising this).\n\n"
                            },
                            {
                                "type": "text",
                                "text": "My question is:",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " has anyone seen some good ways of representing data dependencies? Something better than a boxes-and-arrows visualisation?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFLN9JFRT",
                    "UQPHR6Y3S",
                    "UA14TGLTC",
                    "UPU0YJ1CM",
                    "UNLS33M61",
                    "US370TRJA"
                ],
                "count": 6
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1579860090.072400",
        "client_msg_id": "c7960864-ac81-4167-a3d8-b81d89335a41",
        "text": "I want to avoid the idea of nested scope in my language, which means I need a good way to show data dependencies at a glance. Both fine-grained, as might be served by block scopes, and coarse-grained, as might be served by a module visualiser.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uOE5x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I want to avoid the idea of nested scope in my language, which means I need a good way to show data dependencies at a glance. Both fine-grained, as might be served by block scopes, and coarse-grained, as might be served by a module visualiser."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1579860229.072700",
        "client_msg_id": "7e063af7-47f7-4beb-94bd-c464be8915fd",
        "text": "Just design a language built around the idea of data dependencies.\n\nYou're welcome.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uz0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just design a language built around the idea of data dependencies.\n\nYou're welcome."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "joy",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1579860264.072900",
        "client_msg_id": "902eda07-ca0d-4ab9-b39c-62f523efa6f7",
        "text": "Sure, but how does that language represent those data dependencies?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AWqL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sure, but how does that language represent those data dependencies?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1579860354.073200",
        "client_msg_id": "3bab0436-4759-45fd-9524-713a07b1e62d",
        "text": "Well in Onex, the rules have a left-hand-side matching part that goes out and plucks data (dependencies) from the surrounding network of objects.\nYou just look at the left-hand side.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vBt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well in Onex, the rules have a left-hand-side matching part that goes out and plucks data (dependencies) from the surrounding network of objects.\nYou just look at the left-hand side."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFLN9JFRT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1579860720.073400",
        "client_msg_id": "30fd9afb-fc43-4e97-922e-33e0d6a91e43",
        "text": "Also, you can approximate the dependencies by looking at the links an object has to other objects - if it links, then there's a chance it depends, but it's not g'teed. It can't depend without linking, however.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WoT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, you can approximate the dependencies by looking at the links an object has to other objects - if it links, then there's a chance it depends, but it's not g'teed. It can't depend without linking, however."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1579861062.074600",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1579861272.000000"
        },
        "client_msg_id": "1f8457c2-f6b1-4ef6-b11e-4404e7deb602",
        "text": "Scope obviously has another utility: implementation hiding. I wonder if organising dependencies is just a side-effect of that use-case?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579861062.074600",
        "reply_count": 6,
        "reply_users_count": 3,
        "latest_reply": "1580004949.129900",
        "reply_users": [
            "UEBG0NPDK",
            "UCGAK10LS",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UEBG0NPDK",
                "ts": "1579903992.089400"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1579903993.089600"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1579914049.116200"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1579922816.120400"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1579922872.120600"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1580004949.129900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ki\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Scope obviously has another utility: implementation hiding. I wonder if organising dependencies is just a side-effect of that use-case?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1579861130.074700",
        "client_msg_id": "4500ebb9-9394-4979-aabc-8742a9df59d6",
        "text": "is there a picture that can summarise what you're describing?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lYzqo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "is there a picture that can summarise what you're describing?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1579861362.075100",
        "client_msg_id": "5f62cd4b-91ba-4721-8de1-3a84aba04f76",
        "text": "there's stuff on <http:\/\/object.network> but I may have to draw something extra for you..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "attachments": [
            {
                "title": "The Object Network",
                "title_link": "http:\/\/object.network\/",
                "text": "About the Object Network",
                "fallback": "The Object Network",
                "from_url": "http:\/\/object.network\/",
                "service_icon": "http:\/\/object.network\/favicon.ico",
                "service_name": "object.network",
                "id": 1,
                "original_url": "http:\/\/object.network"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C83",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there's stuff on "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/object.network"
                            },
                            {
                                "type": "text",
                                "text": " but I may have to draw something extra for you.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD3AK9JRF",
        "type": "message",
        "ts": "1579882119.076500",
        "client_msg_id": "380B3A4C-7216-4FCF-819D-978A4FC31BE7",
        "text": "It’s one of those things I’m confused why it isn’t a standard feature of IDEs",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g35dfa49055c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/235dfa49055c0a25f2ccfc667a7a6b77.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Peter",
            "real_name": "Peter Abrahamsen",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "rainhead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6xD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s one of those things I’m confused why it isn’t a standard feature of IDEs"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UD3AK9JRF",
        "type": "message",
        "ts": "1579882591.082300",
        "client_msg_id": "01C187D8-2508-4B92-B4BD-D577C3B18914",
        "text": "It doesn’t sound like a language feature though.\nIf I hover over a variable in CLion it will highlight the other uses of that variable on the screen. This is pretty good. I have wanted a dataflow graph, though. I can sort of imagine something better than boxes and arrows, but for more specific tasks, eg showing various forms of provenance, peeking at the context of all callsites. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g35dfa49055c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/235dfa49055c0a25f2ccfc667a7a6b77.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Peter",
            "real_name": "Peter Abrahamsen",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "rainhead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sj=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It doesn’t sound like a language feature though.\n"
                            },
                            {
                                "type": "text",
                                "text": "If I hover over a variable in CLion it will highlight the other uses of that variable on the screen. This is pretty good. I have wanted a dataflow graph, though. I can sort of imagine something better than boxes and arrows, but for more specific tasks, eg showing various forms of provenance, peeking at the context of all callsites. "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD3AK9JRF",
        "type": "message",
        "ts": "1579882624.083000",
        "client_msg_id": "7579F937-D5A3-431F-A899-F7256BE158EF",
        "text": "Is there a specific use case you have in mind?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g35dfa49055c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/235dfa49055c0a25f2ccfc667a7a6b77.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Peter",
            "real_name": "Peter Abrahamsen",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "rainhead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gPkyh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there a specific use case you have in mind?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1579886905.085200",
        "client_msg_id": "3fbf0d99-163b-4ed7-ab43-89cd0229309f",
        "text": "Interesting point re parametric design on the rise in CAD, another example of this in a different industry is the rise of a variety of procedural node-based editors in special effects for film production. In particular, Foundry Nuke for compositing, and SideFX Houdini for procedural special effects. I just saw this tweet yesterday about Nuke, which contains an info graphic with which software was used for Sundance Film Festival entries  <https:\/\/twitter.com\/JulianCrespi\/status\/1220556492664967168>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579640836.237100",
        "parent_user_id": "UQ706GB9U",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/JulianCrespi|@JulianCrespi>: <https:\/\/twitter.com\/IlyaBayona|@IlyaBayona> <https:\/\/twitter.com\/andrewpprice|@andrewpprice> Looking at this I bet a lot of people use AE for compositing. Nuke is way too expensive for a lot of studios out there, Fusion is cheaper but harder to get learning resources. Though nodes are ideal for compositing you can still get lots of work done with AE. <https:\/\/pbs.twimg.com\/media\/EPBJp10XUAAAtph.jpg>",
                "ts": 1579838319,
                "author_name": "Julian Crespi",
                "author_link": "https:\/\/twitter.com\/JulianCrespi\/status\/1220556492664967168",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1009147269759815681\/oSLYz6XC_normal.jpg",
                "author_subname": "@JulianCrespi",
                "text": "<https:\/\/twitter.com\/IlyaBayona|@IlyaBayona> <https:\/\/twitter.com\/andrewpprice|@andrewpprice> Looking at this I bet a lot of people use AE for compositing. Nuke is way too expensive for a lot of studios out there, Fusion is cheaper but harder to get learning resources. Though nodes are ideal for compositing you can still get lots of work done with AE. <https:\/\/pbs.twimg.com\/media\/EPBJp10XUAAAtph.jpg>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/JulianCrespi\/status\/1220556492664967168",
                "image_url": "https:\/\/pbs.twimg.com\/media\/EPBJp10XUAAAtph.jpg",
                "image_width": 752,
                "image_height": 1199,
                "image_bytes": 92405,
                "id": 1,
                "original_url": "https:\/\/twitter.com\/JulianCrespi\/status\/1220556492664967168",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m0\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting point re parametric design on the rise in CAD, another example of this in a different industry is the rise of a variety of procedural node-based editors in special effects for film production. In particular, Foundry Nuke for compositing, and SideFX Houdini for procedural special effects. I just saw this tweet yesterday about Nuke, which contains an info graphic with which software was used for Sundance Film Festival entries  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/JulianCrespi\/status\/1220556492664967168"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1579886922.085500",
        "client_msg_id": "dbbaa854-0508-4a18-b043-4264c9a27a21",
        "text": "Another example is constraint-based layout systems like Apple's Auto Layout, which is the default way to layout interfaces that can scale to various device and window sizes in macOS and iOS.  <https:\/\/developer.apple.com\/library\/archive\/documentation\/UserExperience\/Conceptual\/AutolayoutPG\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579640836.237100",
        "parent_user_id": "UQ706GB9U",
        "attachments": [
            {
                "title": "Auto Layout Guide: Understanding Auto Layout",
                "title_link": "https:\/\/developer.apple.com\/library\/archive\/documentation\/UserExperience\/Conceptual\/AutolayoutPG\/",
                "text": "Describes the constraint-based system for laying out user interface elements.",
                "fallback": "Auto Layout Guide: Understanding Auto Layout",
                "from_url": "https:\/\/developer.apple.com\/library\/archive\/documentation\/UserExperience\/Conceptual\/AutolayoutPG\/",
                "service_icon": "https:\/\/developer.apple.com\/favicon.ico",
                "service_name": "developer.apple.com",
                "id": 1,
                "original_url": "https:\/\/developer.apple.com\/library\/archive\/documentation\/UserExperience\/Conceptual\/AutolayoutPG\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y3yT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another example is constraint-based layout systems like Apple's Auto Layout, which is the default way to layout interfaces that can scale to various device and window sizes in macOS and iOS.  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/developer.apple.com\/library\/archive\/documentation\/UserExperience\/Conceptual\/AutolayoutPG\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1579886959.085800",
        "client_msg_id": "1090c790-36c3-4740-9b78-85ac803f4deb",
        "text": "(PS please correct me if I'm wrong about any of these being examples of \"parametric design\", this is the first time I've heard this term and I think recognize the pattern, but I might not have it quite right.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579640836.237100",
        "parent_user_id": "UQ706GB9U",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NCP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(PS please correct me if I'm wrong about any of these being examples of \"parametric design\", this is the first time I've heard this term and I think recognize the pattern, but I might not have it quite right.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1579887387.086000",
        "client_msg_id": "891d9f05-52a4-4930-bcee-96314d78a72f",
        "text": "On another angle is that this throws a monkey wrench in the idea that some things that have traditionally been done programmatically, are now being done visually, e.g., this post (which I love) by Webflow CEO Vlad Magdalin <https:\/\/medium.com\/@callmevlad\/a-cheeky-guide-to-creative-tools-e5e3388c4614> It seems that the full story is that visual tools are adopting programmatic techniques just as much as vice-versa.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579640836.237100",
        "parent_user_id": "UQ706GB9U",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xKX4w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On another angle is that this throws a monkey wrench in the idea that some things that have traditionally been done programmatically, are now being done visually, e.g., this post (which I love) by Webflow CEO Vlad Magdalin "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/medium.com\/@callmevlad\/a-cheeky-guide-to-creative-tools-e5e3388c4614"
                            },
                            {
                                "type": "text",
                                "text": " It seems that the full story is that visual tools are adopting programmatic techniques just as much as vice-versa."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1579891754.086600",
        "client_msg_id": "16e33fc5-d1cb-40c3-8c6d-5e5e3a4ef925",
        "text": "<@UE6EFEPTQ> So I looked at Object Network. Am I right in thinking that Version 1 will be an Android app that acts as an Object, and will access the devices functions, which can then be accessed via a HTTP\/API call using the Object Link mechanism to control the phone remotely?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wiLPN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": " So I looked at Object Network. Am I right in thinking that Version 1 will be an Android app that acts as an Object, and will access the devices functions, which can then be accessed via a HTTP\/API call using the Object Link mechanism to control the phone remotely?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1579896870.087100",
        "client_msg_id": "e3d909c1-a5b4-4db1-a5e7-6a0134c2a047",
        "text": "<@UFLN9JFRT> thanks for having a look at my project :smile:\n\nVersion 1 will be the Mother of all Switch and Lamp Demos! Showing how you can turn on lights with buttons, etc.\n\nYes, the \"IDE\" will be running on Android. Onex also runs on nRF5 devices such as the Puckjs: <https:\/\/www.puck-js.com\/>, providing the button and light i\/o.\n\nEach device is represented by its device object, that then links to multiple further i\/o objects - so the Puck has a single device object linking to a button object and to a light object.\n\nSeeing those in the Android Onex app, you can wire the button over to the light so that it turns on when the button is pressed! :open_mouth: :smile:\n\nInside the Android phone, I intend to access all the sensors and actuators, data and APIs gradually over time, adding to the linkable objects visible in the UI.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SbR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFLN9JFRT"
                            },
                            {
                                "type": "text",
                                "text": " thanks for having a look at my project "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "\n\nVersion 1 will be the Mother of all Switch and Lamp Demos! Showing how you can turn on lights with buttons, etc.\n\nYes, the \"IDE\" will be running on Android. Onex also runs on nRF5 devices such as the Puckjs: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.puck-js.com\/"
                            },
                            {
                                "type": "text",
                                "text": ", providing the button and light i\/o.\n\nEach device is represented by its device object, that then links to multiple further i\/o objects - so the Puck has a single device object linking to a button object and to a light object.\n\nSeeing those in the Android Onex app, you can wire the button over to the light so that it turns on when the button is pressed! "
                            },
                            {
                                "type": "emoji",
                                "name": "open_mouth",
                                "unicode": "1f62e"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "\n\nInside the Android phone, I intend to access all the sensors and actuators, data and APIs gradually over time, adding to the linkable objects visible in the UI."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1579899342.089200",
        "client_msg_id": "9217E107-CD92-4C10-8524-1AB7B3337110",
        "text": "Ok very interesting what you describe but I think I will need to see it to understand it. I have seen hundreds of iot demos but they always are very techie and not useable by normal users",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3rAW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ok very interesting what you describe but I think I will need to see it to understand it. I have seen hundreds of iot demos but they always are very techie and not useable by normal users"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1579903992.089400",
        "client_msg_id": "dd51abc7-e15d-4d26-aea7-428658a17be5",
        "text": "If you haven't yet, I really highly recommend reading Herbert Simon's \"The Architecture of Complexity\". It makes a strong argument for why hierarchy is necessary and the notion of \"near decomposability\" is a nice way to understand a lot of the cult ideology in programming (despite being written in the 60's and for a different field!).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579861062.074600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mb9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you haven't yet, I really highly recommend reading Herbert Simon's \"The Architecture of Complexity\". It makes a strong argument for why hierarchy is necessary and the notion of \"near decomposability\" is a nice way to understand a lot of the cult ideology in programming (despite being written in the 60's and for a different field!)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1579903993.089600",
        "client_msg_id": "554626a1-0296-4c48-8842-2992f92c93ed",
        "text": "<http:\/\/www2.econ.iastate.edu\/tesfatsi\/ArchitectureOfComplexity.HSimon1962.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579861062.074600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SEmp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/www2.econ.iastate.edu\/tesfatsi\/ArchitectureOfComplexity.HSimon1962.pdf"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1579910584.099000",
        "client_msg_id": "C705EE68-9443-42CC-A41F-E069D13038B4",
        "text": "<@UD3AK9JRF> Graphical notations form a language, and the programming environment I’m aiming for is not based on text files, so such notations can definitely be a language feature.\n\nThe use case is tracing data dependencies across Prolog-like rules.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DO8=b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UD3AK9JRF"
                            },
                            {
                                "type": "text",
                                "text": " Graphical notations form a language, and the programming environment I’m aiming for is not based on text files, so such notations can definitely be a language feature.\n\nThe use case is tracing data dependencies across Prolog-like rules."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1579910940.100400",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1579911179.000000"
        },
        "client_msg_id": "54b7a601-dfa1-4009-b457-65c04761e692",
        "text": "&gt; <@UEQ6M68H0> \"Javascript is way more directly related to Actionscript 2 and its predecessors than Self.\"\nThe timing is wrong for this. Javascript was released in 1995. Actionscript 1.0 was released in 2000, the first version to support OOP, and it copied its object model (prototype based inheritance) from Javascript. Actionscript 2.0 was released 2003 and introduced class-based inheritance.\n\nJavascript was designed by Brendan Eich. The language was originally codenamed Mocha, later LiveScript, and the initial idea was \"Scheme for the browser\". However, Netscape had entered a partnership with Sun to include Java in the browser, and this led to a new requirement from management that LiveScript should be a companion to Java.  So it was renamed Javascript and given a C-like syntax.\n\nBrendan Eich himself describes Javascript as \"a quickie love-child of C and Self\" (from his blog: <https:\/\/brendaneich.com\/2008\/04\/popularity\/>). Why was Javascript derived from Self? The designers of Self were now working for Sun, and the Sun\/Netscape partnership may explain how Self became the direct ancestor of Javascript (I'm speculating on this point). Javascript could not use Self syntax, of course, due to the management requirement for a C-like syntax, hence the need to innovate and create a hybrid language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579910940.100400",
        "reply_count": 4,
        "reply_users_count": 4,
        "latest_reply": "1580264485.240500",
        "reply_users": [
            "UCGAK10LS",
            "UH7GU4TAM",
            "UC2A2ARPT",
            "UBKNXPBAB"
        ],
        "replies": [
            {
                "user": "UCGAK10LS",
                "ts": "1579911121.101500"
            },
            {
                "user": "UH7GU4TAM",
                "ts": "1579911288.101800"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1579924899.122000"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1580264485.240500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TlN",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " \"Javascript is way more directly related to Actionscript 2 and its predecessors than Self.\""
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The timing is wrong for this. Javascript was released in 1995. Actionscript 1.0 was released in 2000, the first version to support OOP, and it copied its object model (prototype based inheritance) from Javascript. Actionscript 2.0 was released 2003 and introduced class-based inheritance.\n\nJavascript was designed by Brendan Eich. The language was originally codenamed Mocha, later LiveScript, and the initial idea was \"Scheme for the browser\". However, Netscape had entered a partnership with Sun to include Java in the browser, and this led to a new requirement from management that LiveScript should be a companion to Java.  So it was renamed Javascript and given a C-like syntax.\n\nBrendan Eich himself describes Javascript as \"a quickie love-child of C and Self\" (from his blog: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/brendaneich.com\/2008\/04\/popularity\/"
                            },
                            {
                                "type": "text",
                                "text": "). Why was Javascript derived from Self? The designers of Self were now working for Sun, and the Sun\/Netscape partnership may explain how Self became the direct ancestor of Javascript (I'm speculating on this point). Javascript could not use Self syntax, of course, due to the management requirement for a C-like syntax, hence the need to innovate and create a hybrid language."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1579911121.101500",
        "client_msg_id": "6617A78A-B308-4AD1-8CB0-6C7F51CDD621",
        "text": "Would it be possible to thread that conversation so that it doesn’t wash out #general :sweat_smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579910940.100400",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nAY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would it be possible to thread that conversation so that it doesn’t wash out #general "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UH7GU4TAM",
        "type": "message",
        "ts": "1579911288.101800",
        "client_msg_id": "419cacd4-8fdc-4d38-8fa7-ec7ccd3607e9",
        "text": "I maintained an open source Flash SWF reader\/writer at the time and saw the transition from Flash 4 to 5 at the lowest level.  Remember thinking that Macromedia had just copied the JS scoping\/prototype model directly.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2af66accb7e7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-15\/956486537398_2af66accb7e7b7dd4d7b_72.png",
            "first_name": "Nick",
            "real_name": "Nick Main",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "david.nick.main",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579910940.100400",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7=N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I maintained an open source Flash SWF reader\/writer at the time and saw the transition from Flash 4 to 5 at the lowest level.  Remember thinking that Macromedia had just copied the JS scoping\/prototype model directly."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD3AK9JRF",
        "type": "message",
        "ts": "1579911956.107000",
        "client_msg_id": "999B5C0C-D0FB-4A78-948C-476EB1C3A94C",
        "text": "<@UCGAK10LS> looks like there are sone useful results for “provenance graph”. There might at lest be useful considerations for information design in the literature. But you’ve described a domain, not tasks or activities that might be aided by a notation. I don’t know what form your non-textual language takes, so I don’t know what might be relevant. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g35dfa49055c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/235dfa49055c0a25f2ccfc667a7a6b77.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Peter",
            "real_name": "Peter Abrahamsen",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "rainhead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jT0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " looks like there are sone useful results for “provenance graph”. There might at lest be useful considerations for information design in the literature. But you’ve described a domain, not tasks or activities that might be aided by a notation. I don’t know what form your non-textual language takes, so I don’t know what might be relevant. "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1579913681.114700",
        "client_msg_id": "ACA43E04-EDE8-41AB-B00F-5A67FDB661ED",
        "text": "The primary task to be assisted is broad code comprehension - can I understand what the program is doing? How all the pieces fit together? All other tasks are subservient to that. I’m not targeting any further niche at the moment — I’m trying to put together a core syntax.\n\nThe language is not non-textual, it has plenty of text. It’s just not limited to a file-sized Unicode text string. Most of the visual design is still on paper so I don’t have screenshots yet.\n\nI’m looking for inspiring examples of dependency represesentation, on the chance that there’s some existing work out there. So it doesn’t need to be based on any particular syntax I have planned out. Searching for “provenance graphs” pulls up cliche boxes-and-arrows which doesn’t really yield any insight.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "et=RU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The primary task to be assisted is broad code comprehension - can I understand what the program is doing? How all the pieces fit together? All other tasks are subservient to that. I’m not targeting any further niche at the moment — I’m trying to put together a core syntax.\n"
                            },
                            {
                                "type": "text",
                                "text": "\nThe language is not non-textual, it has plenty of text. It’s just not limited to a file-sized Unicode text string. Most of the visual design is still on paper so I don’t have screenshots yet.\n\nI’m looking for inspiring examples of dependency represesentation, on the chance that there’s some existing work out there. So it doesn’t need to be based on any particular syntax I have planned out. Searching for “provenance graphs” pulls up cliche boxes-and-arrows which doesn’t really yield any insight."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UPU0YJ1CM"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1579913914.115700",
        "client_msg_id": "05D2937B-1598-4D5A-A541-0A39E6160805",
        "text": "I have this nagging feeling I’m just going to have to play this by ear and invent something unique.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RU+gI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have this nagging feeling I’m just going to have to play this by ear and invent something unique."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1579914049.116200",
        "client_msg_id": "994893E4-4422-4201-B699-F978619B72C6",
        "text": "Thank you! I’ll have a read.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579861062.074600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qfu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you! I’ll have a read."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1579922394.116400",
        "client_msg_id": "69166fdc-146c-4da9-97c8-adb099615eb5",
        "text": "Ted Nelson has many insightful talks about how the internet went down the wrong path. He focuses on the way hyperlinks were made to be unidirectional which doomed the web to its current very sub-optimal state.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579770732.001000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MLcf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ted Nelson has many insightful talks about how the internet went down the wrong path. He focuses on the way hyperlinks were made to be unidirectional which doomed the web to its current very sub-optimal state."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1579922744.120300",
        "client_msg_id": "b8dc00ef-31c3-4e38-a4dc-91f4a632798f",
        "text": "VideoWorks's (1985) sequel, Macromedia director 3 (1993), must have been known to Brendan; they were very popular products., and I believe the FutureSplash animator had a language too. If someone bothered to track down these old products and study them, i am sure you would find elements there. The fantasy that Brendan created a new language from scratch in two weeks is myth. Programming languages exist in an evolution of concepts that inevitably go back to foundational designs, with relatively small amounts added each time. It is extremely rare to see a wholly new language like FORTH was.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579922744.120300",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1580111009.201100",
        "reply_users": [
            "UEQ7QL15F"
        ],
        "replies": [
            {
                "user": "UEQ7QL15F",
                "ts": "1580111009.201100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R=8K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "VideoWorks's (1985) sequel, Macromedia director 3 (1993), must have been known to Brendan; they were very popular products., and I believe the FutureSplash animator had a language too. If someone bothered to track down these old products and study them, i am sure you would find elements there. The fantasy that Brendan created a new language from scratch in two weeks is myth. Programming languages exist in an evolution of concepts that inevitably go back to foundational designs, with relatively small amounts added each time. It is extremely rare to see a wholly new language like FORTH was."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1579922816.120400",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1579923631.000000"
        },
        "client_msg_id": "a636b007-09b0-407c-a021-29e958c73b2e",
        "text": "I've read the first couple of pages and the first thing I'm noticing is that the author is taking categorisations and boundaries *that humans have defined* (e.g. \"families\" and \"solar systems\") as evidence that hierarchy exists in nature. I find this to be really unconvincing. All it shows is that we're evolutionarily designed to cluster \"similar\" (spatio-temporally co-located or semantically similar) entities and give them names. That much I agree with. But that's not an argument for organising systems into strict hierarchies! It suggests we should group entities together (conceptualise them) whenever there are intuitive ways to do so.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579861062.074600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6GmTm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've read the first couple of pages and the first thing I'm noticing is that the author is taking categorisations and boundaries "
                            },
                            {
                                "type": "text",
                                "text": "that humans have defined ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "(e.g. \"families\" and \"solar systems\") as evidence that hierarchy exists in nature. I find this to be really unconvincing. All it shows is that we're evolutionarily designed to cluster \"similar\" (spatio-temporally co-located or semantically similar) entities and give them names. That much I agree with. But that's not an argument for organising systems into strict hierarchies! It suggests we should group entities together (conceptualise them) whenever there are intuitive ways to do so."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1579922872.120600",
        "client_msg_id": "653d4ad3-34cb-4491-bf37-8c6b64e5d3ea",
        "text": "I'd say the only true thing about natural organisation is that it operates by *proximity*, and we humans take that proximity and stratify it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579861062.074600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z4H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd say the only true thing about natural organisation is that it operates by "
                            },
                            {
                                "type": "text",
                                "text": "proximity",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and we humans take that proximity and stratify it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1579924899.122000",
        "client_msg_id": "9f2d3d8d-a38c-4714-b260-42e9222ad550",
        "text": "<@UJN1TAYEQ> <@UEQ6M68H0> <@UMU2RLPR8> — Like Nick said, let's move the conversation about AS2 and JS into this thread, so that it doesn't create excessive scrollback in <#C5T9GPWFL|thinking-together>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579910940.100400",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fTY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UMU2RLPR8"
                            },
                            {
                                "type": "text",
                                "text": " — Like Nick said, let's move the conversation about AS2 and JS into this thread, so that it doesn't create excessive scrollback in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UT60XSVCN",
        "type": "message",
        "ts": "1579939117.123300",
        "client_msg_id": "800817cf-f524-46b7-9947-94a8d2e7b659",
        "text": "<@UR482RFPY>\n&gt; I'm curious if anyone has seen something like this where the syntax structure remains the same, but keywords are translated to different natural languages.\nALGOL 68 does exactly this—it was even standardized in multiple languages. Hard to believe it was conceived when it was.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbc3e6041047",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bc3e6041047849518d1b042f0a29d5af.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "S.M Mukarram Nainar",
            "display_name": "S.M Mukarram Nainar",
            "team": "T5TCAFTA9",
            "name": "nainars",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577461270.131100",
        "parent_user_id": "UR482RFPY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "abc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UR482RFPY"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm curious if anyone has seen something like this where the syntax structure remains the same, but keywords are translated to different natural languages."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ALGOL 68 does exactly this—it was even standardized in multiple languages. Hard to believe it was conceived when it was."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UR482RFPY"
                ],
                "count": 1
            }
        ]
    }
]