[
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1750958020.669509",
        "client_msg_id": "0B4479D0-ECF4-46C0-A6E8-F755323CFE51",
        "text": "This will likely interest the folks here: <https:\/\/frest.substack.com\/p\/first-class-models-the-missing-productivity|https:\/\/frest.substack.com\/p\/first-class-models-the-missing-productivity>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "reply_count": 25,
        "reply_users_count": 3,
        "latest_reply": "1751096947.337919",
        "reply_users": [
            "UCUSW7WVD",
            "U05PY5AQCA2",
            "UJBAJNFLK"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1750959963.802739"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1750960008.693399"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1750960152.750799"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1750970843.808679"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1750973964.731519"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1750974258.186939"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1750978371.153169"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1750978500.840879"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1750979481.211879"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1750979787.716419"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1750979997.908489"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1750980062.191969"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1750980110.516029"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1750980333.442849"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1750981856.740919"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1750982163.376209"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1750982630.174539"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1750982832.626319"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1750983862.112519"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1750984086.421349"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1750984297.146729"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1751041938.148909"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1751042935.714229"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1751043079.942169"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1751096947.337919"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7tY4H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This will likely interest the folks here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/frest.substack.com\/p\/first-class-models-the-missing-productivity",
                                "text": "https:\/\/frest.substack.com\/p\/first-class-models-the-missing-productivity"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U08LU2QRWB0",
                    "U05UK5T7LPP",
                    "U05GSC0B4A0"
                ],
                "count": 4
            },
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "UJBAJNFLK",
                    "U016VUZGUUQ"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750959963.802739",
        "client_msg_id": "77fb216c-540e-4224-8308-e57542acd862",
        "text": "This pitch for Frest resonates with me!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JTxFs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This pitch for Frest resonates with me!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1750960008.693399",
        "client_msg_id": "051BCF6C-F44D-4919-A087-27D3A2B7B968",
        "text": "Lots more to say. As an abstraction for developers, for a start.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V8TSU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "L"
                            },
                            {
                                "type": "text",
                                "text": "ots more to say. As an abstraction for developers, for a start."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750960152.750799",
        "client_msg_id": "60dcc239-20af-47c3-9774-9476f1549910",
        "text": "I've thought about this a lot without progress. It's still not clear to me it is solvable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LqKqW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've thought about this a lot without progress. It's still not clear to me it is solvable."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750960803.707979",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1750960854.000000"
        },
        "client_msg_id": "3134f0af-1d54-404a-af3c-5b54f8a01671",
        "text": "Oh this is awesome! Common Lisp is definitely on my very short list of suitable platforms for Convivial\/Freewheeling computation. So I'm very interested in contributing.\n\nI'm still working my way through the demos. Some initial impressions:\n• Are you really running Common Lisp within the browser?!\n• Alt-click is kinda unreliable. I tried alt-clicking on the close\/reload\/maximize buttons on the top-right, and it was unclear what I was getting back in response. On one occasion I got a blank frame with just an outline and nothing else. So far I haven't gotten it to show me anything useful.\n• In the `Navigating a HyperDoc` pane, in the `Computed text` section, it would be good to show an example of computed text with the dashed underlines. Maybe have `7*6` compute to 42.\n• Meta lesson from the previous bullet: would it be possible to create publicly accessible hyperlinks to specific sections in a HyperDoc? :slightly_smiling_face:\nContinuing to read..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750915144.806939",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sxe4\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh this is awesome! Common Lisp is definitely on my very short list of suitable platforms for Convivial\/Freewheeling computation. So I'm very interested in contributing.\n\nI'm still working my way through the demos. Some initial impressions:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Are you really running Common Lisp within the browser?!"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Alt-click is kinda unreliable. I tried alt-clicking on the close\/reload\/maximize buttons on the top-right, and it was unclear what I was getting back in response. On one occasion I got a blank frame with just an outline and nothing else. So far I haven't gotten it to show me anything useful."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "In the "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Navigating a HyperDoc",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " pane, in the "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Computed text",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " section, it would be good to show an example of computed text with the dashed underlines. Maybe have "
                                    },
                                    {
                                        "type": "text",
                                        "text": "7*6",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " compute to 42."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Meta lesson from the previous bullet: would it be possible to create publicly accessible hyperlinks to specific sections in a HyperDoc? "
                                    },
                                    {
                                        "type": "emoji",
                                        "name": "slightly_smiling_face",
                                        "unicode": "1f642"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nContinuing to read.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750961268.608689",
        "client_msg_id": "29821422-e545-4c25-ba2a-c566cc4553cc",
        "text": "• The way the horizontal scrollbar highlights background when I hover on it, I worry that there are 2 nested scrollbars one on top of another. Maybe just stop highlighting the background on hover?\n• In `Influenza epidemics in France`, could you link to a definition for _relative incidence_? Should it go to <https:\/\/en.wikipedia.org\/wiki\/Relative_risk>?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750915144.806939",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8m3y1",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The way the horizontal scrollbar highlights background when I hover on it, I worry that there are 2 nested scrollbars one on top of another. Maybe just stop highlighting the background on hover?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "In "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Influenza epidemics in France",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", could you link to a definition for "
                                    },
                                    {
                                        "type": "text",
                                        "text": "relative incidence",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "? Should it go to "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/en.wikipedia.org\/wiki\/Relative_risk"
                                    },
                                    {
                                        "type": "text",
                                        "text": "?"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750961558.393389",
        "client_msg_id": "5347b666-da02-4cee-9447-75d69b3b4940",
        "text": "• What would it take to enable the Playground?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750915144.806939",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9DMfm",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "What would it take to enable the Playground?"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750961713.125249",
        "client_msg_id": "bd43e65b-28c4-437e-ad4e-b1fcef8aa4a6",
        "text": "• In the table `ari-incidence-france`, I wish each checkbox\/line would have a consistent color.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750915144.806939",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jy7Az",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "In the table "
                                    },
                                    {
                                        "type": "text",
                                        "text": "ari-incidence-france",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", I wish each checkbox\/line would have a consistent color."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1750962704.596899",
        "client_msg_id": "6d4a3d49-88a1-4825-9ddd-24a33f10d639",
        "text": "Common Lisp (SBCL) is running on the server. The communication with the browser happens via a WebSocket, managed by <https:\/\/github.com\/rabbibotton\/clog\/|CLOG>. But Common Lisp in the browser is coming. Daniel Kochmański (current ECL maintainer) has a proof-of-concept of a compiler to WASM, and just announced that he received a grant to continue working on it.\n\nAlt-click works on all items in the title bar of a pane, and on the tabs representing the views. It does weird things indeed on the close button - I hadn't imagined somewhat might try :wink:\n\nComputed text: good point. You can see one at <https:\/\/hyperdoc.khinsen.net\/377F4-influenza-epidemics-in-france>, at the end of the first paragraph.\n\nURLs for pages\/sections: as my example above shows, there are persistent links to sections. In the \"URL\" view. I could do those for pages as well.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750915144.806939",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PfQPD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Common Lisp (SBCL) is running on the server. The communication with the browser happens via a WebSocket, managed by "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/rabbibotton\/clog\/",
                                "text": "CLOG"
                            },
                            {
                                "type": "text",
                                "text": ". But Common Lisp in the browser is coming. Daniel Kochmański (current ECL maintainer) has a proof-of-concept of a compiler to WASM, and just announced that he received a grant to continue working on it.\n\nAlt-click works on all items in the title bar of a pane, and on the tabs representing the views. It does weird things indeed on the close button - I hadn't imagined somewhat might try "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            },
                            {
                                "type": "text",
                                "text": "\n\nComputed text: good point. You can see one at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/hyperdoc.khinsen.net\/377F4-influenza-epidemics-in-france"
                            },
                            {
                                "type": "text",
                                "text": ", at the end of the first paragraph.\n\nURLs for pages\/sections: as my example above shows, there are persistent links to sections. In the \"URL\" view. I could do those for pages as well."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750963203.694339",
        "client_msg_id": "c8eda360-4c9d-4b71-b4aa-1dbd13d24a42",
        "text": "Ah cool. How can I find the URL for a section?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750915144.806939",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "riVpQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah cool. How can I find the URL for a section?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1750963208.951529",
        "client_msg_id": "2f2211cb-f767-45c3-a1d3-a08905dcc32f",
        "text": "I don't see the scrollbar issue (Firefox). And I fear that my CSS competence is insufficient to deal with such issues!\n\nRelative incidence is just cases divided by population. Not sure there is something obvious to link to. I should ideally just compute it, the code would then be the unambiguous definition.\n\nEnabling or disabling the playground is done via a flag <https:\/\/codeberg.org\/khinsen\/hyperdoc-demo\/src\/commit\/8251c97f90cee755750b09143db8433cd81cc45c\/hyperdoc\/hyperdoc-demo.lisp#L17|when starting the server> (development=nil).\n\nColors: good point. <https:\/\/codeberg.org\/khinsen\/ari-incidence-france\/issues\/1>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750915144.806939",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4xCw4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't see the scrollbar issue (Firefox). And I fear that my CSS competence is insufficient to deal with such issues!\n\nRelative incidence is just cases divided by population. Not sure there is something obvious to link to. I should ideally just compute it, the code would then be the unambiguous definition.\n\nEnabling or disabling the playground is done via a flag "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/codeberg.org\/khinsen\/hyperdoc-demo\/src\/commit\/8251c97f90cee755750b09143db8433cd81cc45c\/hyperdoc\/hyperdoc-demo.lisp#L17",
                                "text": "when starting the server"
                            },
                            {
                                "type": "text",
                                "text": " (development=nil).\n\nColors: good point. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/codeberg.org\/khinsen\/ari-incidence-france\/issues\/1"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1750963282.486969",
        "client_msg_id": "80363c42-519e-48d7-b3e2-278c6efdef82",
        "text": "&gt; Ah cool. How can I find the URL for a section?\nIn the URL tab on class _hyperdoc._ Assuming that's what you mean by section.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750915144.806939",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LOiNZ",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah cool. How can I find the URL for a section?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the URL tab on class "
                            },
                            {
                                "type": "text",
                                "text": "hyperdoc. ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "Assuming that's what you mean by section."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750963290.519029",
        "client_msg_id": "31464056-6469-4dd9-9b2e-ddaaf5631f81",
        "text": "&gt; Enabling or disabling the playground is done via a flag <https:\/\/codeberg.org\/khinsen\/hyperdoc-demo\/src\/commit\/8251c97f90cee755750b09143db8433cd81cc45c\/hyperdoc\/hyperdoc-demo.lisp#L17|when starting the server> (development=nil).\nI imagine there are security issues involved? Maybe just tweak the message to say it will be available when running locally, and point readers at the repo.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750915144.806939",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rq+GW",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Enabling or disabling the playground is done via a flag "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/codeberg.org\/khinsen\/hyperdoc-demo\/src\/commit\/8251c97f90cee755750b09143db8433cd81cc45c\/hyperdoc\/hyperdoc-demo.lisp#L17",
                                "text": "when starting the server"
                            },
                            {
                                "type": "text",
                                "text": " (development=nil)."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI imagine there are security issues involved? Maybe just tweak the message to say it will be available when running locally, and point readers at the repo."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1750963483.564269",
        "client_msg_id": "592a459f-4e71-4378-ad20-12cc42301812",
        "text": "Yes, it's disabled because otherwise people could run arbitrary Lisp code on the server. The message should indeed be more explicit!\n<https:\/\/codeberg.org\/khinsen\/hyperdoc\/issues\/1>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750915144.806939",
        "parent_user_id": "UJBAJNFLK",
        "attachments": [
            {
                "from_url": "https:\/\/codeberg.org\/khinsen\/hyperdoc\/issues\/1",
                "service_icon": "https:\/\/codeberg.org\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/codeberg.org\/khinsen\/hyperdoc\/issues\/1",
                "fallback": "Codeberg.org: Explain disabled playground",
                "text": "- Mention security\n- Point to the repo for local installation",
                "title": "Explain disabled playground",
                "title_link": "https:\/\/codeberg.org\/khinsen\/hyperdoc\/issues\/1",
                "service_name": "Codeberg.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fzp+K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, it's disabled because otherwise people could run arbitrary Lisp code on the server. The message should indeed be more explicit!\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/codeberg.org\/khinsen\/hyperdoc\/issues\/1"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1750963565.498299",
        "client_msg_id": "690321b1-b263-41f5-9a99-d7c099f462bc",
        "text": "BTW, thanks for all the great feedback!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750915144.806939",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jYvhb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "BTW, thanks for all the great feedback!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart_hands::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750964047.884099",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1750964421.000000"
        },
        "client_msg_id": "43748537-b019-4d24-a4e5-ea35b6f7deb3",
        "text": "I'm definitely not seeing any change when I alt-click on tabs representing views.. oh, I just reloaded the tab and now I see it working. So there's some flakiness somewhere. At some point in a session it very commonly stops working for me, to the extent that it seemed totally broken across multiple sessions until now. I'm using Waterfox, and will also test on Firefox in a bit.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750915144.806939",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LMIeL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm definitely not seeing any change when I alt-click on tabs representing views.. oh, I just reloaded the tab and now I see it working. So there's some flakiness somewhere. At some point in a session it very commonly stops working for me, to the extent that it seemed totally broken across multiple sessions until now. I'm using Waterfox, and will also test on Firefox in a bit."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750965601.098599",
        "client_msg_id": "d68403bf-9fd5-45e7-8a59-9e44b51008ff",
        "text": "How can I install HyperDoc's dependencies locally? I don't really understand asdf or QuickLisp yet, so the command in the Readme doesn't work for me.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750915144.806939",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J5L48",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How can I install HyperDoc's dependencies locally? I don't really understand asdf or QuickLisp yet, so the command in the Readme doesn't work for me."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1750970843.808679",
        "client_msg_id": "8EC9990B-9B4A-42C7-BAE1-8C332956F54C",
        "text": "Sure, it’s solvable. You use the power of the relational database.\n\nYou tag every row in every table with:\n• a “at” timestamp; and\n• a model id\nSeparately, using other tables, you track how models relate to each other. This one was branched in this way from this one.\n\nYou’ll note that you can imagine several different ways for model branches to work. Assume model B is branched from model A. What several options wrt how changes in A are seen in B:\n\n• B’s view of A is frozen at the time it was branched, and no other changes in A are visible in B;\n• B sees updates to A, but its own values overrides the values in A; or\n• B sees updates to A, and values in A override values in B\nIf you reflect on that for a bit, you realise sometimes you need one, sometimes another. In my blog, I discuss what that looks like.\n\nNote that whatever you have, it can all be resolved with relational queries. Indeed, you can have something akin to Postgres’s Row Level Security, which is an automatic addition to any query. It would not actually be difficult to instrument a relational database so that in order to query it, you have to supply a model value, and the tables automatically acquire the extra criteria they need to only show the values from that model and its antecedents.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "62bZ2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sure, it’s solvable. You use the power of the relational database.\n\nYou tag every row in every table with:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "a “at” timestamp; and"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "a model id"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nSeparately, using other tables, you track how models relate to each other. This one was branched in this way from this one.\n\nYou’ll note that you can imagine several different ways for model branches to work. Assume model B is branched from model A. What several options wrt how changes in A are seen in B:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "B’s view of A is frozen at the time it was branched, and no other changes in A are visible in B;"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "B sees updates to A, but its own values overrides the values in A; or"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "B sees updates to A, and values in A override values in B"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIf you reflect on that for a bit, you realise sometimes you need one, sometimes another. In my blog, I discuss what that looks like.\n\nNote that whatever you have, it can all be resolved with relational queries. Indeed, you can have something akin to Postgres’s "
                            },
                            {
                                "type": "text",
                                "text": "Row Level Security, which is an automatic addition to any query. It would not actually be difficult to instrument a relational database so that in order to query it, you have to supply a model value, and the tables automatically acquire the extra criteria they need to only show the values from that model and its antecedents."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750973964.731519",
        "client_msg_id": "0b6aef44-0eec-4b74-8d7d-589eff3c9687",
        "text": "Are models the same as relational db tables?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yIw34",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are models the same as relational db tables?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750974258.186939",
        "client_msg_id": "20bb0c79-2ec2-468d-8225-361f03f22587",
        "text": "Oh I see, each row has a model id.\n\nI don't see any reason to say \"sure\" about this :laughing: You're recommending saving a multiple of data for multiple forks of models. That seems like the big source of risk here. I'm glad you're working to de-risk it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ep32b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh I see, each row has a model id.\n\nI don't see any reason to say \"sure\" about this "
                            },
                            {
                                "type": "emoji",
                                "name": "laughing",
                                "unicode": "1f606"
                            },
                            {
                                "type": "text",
                                "text": " You're recommending saving a multiple of data for multiple forks of models. That seems like the big source of risk here. I'm glad you're working to de-risk it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1750978371.153169",
        "client_msg_id": "969DC013-F3F7-4C80-95A7-84731D7C0E02",
        "text": "The model ids pick out entirely separate versions of the same database, all with the same schema. Each one is a model.\n\nThen, you have merge operations to support branch-merge semantics.\n\nYou mention risk. You can handle authorisation with the same Row Level Security semantics. This means you express relationally which roles have which permissions with which models, and enforce that using RLS.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PfYWt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The model ids pick out entirely separate versions of the same database, all with the same schema. Each one is a model.\n\nThen, you have merge operations to support branch-merge semantics.\n\nYou mention risk. You can handle authorisation with the same Row Level Security semantics. This means you express relationally which roles have which permissions with which models, and enforce that using RLS."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1750978500.840879",
        "client_msg_id": "89D9FF7F-63BC-4CE7-B7B3-3AFD7D0A0C2E",
        "text": "You would also provide functions on models. So models can be “like this one, except I get to insert code before\/after the values are found to change those values in whatever way I see fit”. IOW, you can have virtual models. A virtual model would be how you’d handle things like merging multiple models in a lazy manner.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4vjB0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You would also provide functions on models. So models can be “like this one, except I get to insert code before\/after the values are found to change those values in whatever way I see fit”. IOW, you can have virtual models. A virtual model would be how you’d handle things like merging multiple models in a lazy manner."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750979481.211879",
        "client_msg_id": "3d62888a-cac5-471a-ae55-5834da4eec74",
        "text": "When I said \"risk\", I was thinking only about performance issues. How large the database grows, how long it takes to clone one model from another, or how long it takes to query a specific model alongside its antecedent models (which is how I interpret \"virtual models\"). No matter how fast these operations are, they scale in proportion to the number of models one has, a number you're advocating to grow without any bound that I can see. I have some experience with trying to use a Datalog-like append-only model inside an SQL database, that's where these concerns come from.\n\nAs a general principle of rhetoric, if you seem to be saying something is easy or obvious but the reader considers it difficult or non-obvious, you lose something. Persuasion requires agreeing with the concern and then describing how you would dispel it. This sort of reasoning is why I tend never to claim anything is easy by my approach. I express doubt in an effort to hoard credibility with the sort of discerning audience I'm trying to attract.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bu2my",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When I said \"risk\", I was thinking only about performance issues. How large the database grows, how long it takes to clone one model from another, or how long it takes to query a specific model alongside its antecedent models (which is how I interpret \"virtual models\"). No matter how fast these operations are, they scale in proportion to the number of models one has, a number you're advocating to grow without any bound that I can see. I have some experience with trying to use a Datalog-like append-only model inside an SQL database, that's where these concerns come from.\n\nAs a general principle of rhetoric, if you seem to be saying something is easy or obvious but the reader considers it difficult or non-obvious, you lose something. Persuasion requires agreeing with the concern and then describing how you would dispel it. This sort of reasoning is why I tend never to claim anything is easy by my approach. I express doubt in an effort to hoard credibility with the sort of discerning audience I'm trying to attract."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1750979787.716419",
        "edited": {
            "user": "U05PY5AQCA2",
            "ts": "1750979946.000000"
        },
        "client_msg_id": "A1AA6683-DA23-4ECB-A617-F345DD4190DA",
        "text": "We live in an era of absurdly fast machines with absurd amounts of storage. The industry has taught us to think everything is slow, in part I think so we stick with limited services on expensive hosted services.\n\nAhem.\n\nTwo responses:\n\n1. I’m describing a semantics. It’s a pretty novel and useful one. That comes at some cost in terms of runtime and storage. That may or may not work for various applications;\n2. I’m particularly interested in tools for individuals and small businesses. You could keep all your personal data, and the data for your carpet laying business with 10 employees, in a database system along the lines of what I describe. It would be “inefficient” in storage and computing time, but it would be respectful of what you really want to know and do as an individual or small business owner, around the data that are important to you.\nI’m afraid I don’t understand the rhetoric question.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ix+WC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We live in an era of absurdly fast machines with absurd amounts of storage. The industry has taught us to think everything is slow, in part I think so we stick with limited services on expensive hosted services.\n\nAhem.\n\nTwo responses:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I’m describing a semantics. It’s a pretty novel and useful one. That comes at some cost in terms of runtime and storage. That may or may not work for various applications;"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I’m particularly interested in tools for individuals and small businesses. You could keep all your personal data, and the data for your carpet laying business with 10 employees, in a database system along the lines of what I describe. It would be “inefficient” in storage and computing time, but it would be respectful of what you really want to know and do as an individual or small business owner, around the data that are important to you."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "I’m afraid I don’t understand the rhetoric question."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750979997.908489",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1750980038.000000"
        },
        "client_msg_id": "7dce282f-1011-488c-a4c8-a77e4741db3b",
        "text": "My point is I had some experience where what seemed like a small amount of data blew up once I added versions and tried to always append rather than mutate rows. On absurdly fast machines with absurd amounts of storage.\n\nI suppose I'll wait until you have something to try out before finding out if it works for the sort of case I care about. So we can forget about rhetoric and wait for the code :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xwn6x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My point is I had some experience where what seemed like a small amount of data blew up once I added versions and tried to always append rather than mutate rows. On absurdly fast machines with absurd amounts of storage.\n\nI suppose I'll wait until you have something to try out before finding out if it works for the sort of case I care about. So we can forget about rhetoric and wait for the code "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1750980062.191969",
        "client_msg_id": "1284960D-40BD-4D2A-B2EC-B11B0BE6829F",
        "text": "Like I say, this would work for some applications. Amazon probably wouldn’t care to use this across all their data. The carpet laying business is a different story.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BJUZq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Like I say, this would work for some applications. Amazon probably wouldn’t care to use this across all their data. The carpet laying business is a different story."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1750980110.516029",
        "client_msg_id": "733F58A8-6153-4F86-8A7F-D838E5A30E24",
        "text": "I’d love to see what your use case and look into why it broke. The most obvious way of implementing this, properly indexed, shouldn’t make data retrieval more than say twice as slow, I would think.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s9Jne",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’d love to see what your use case and look into why it broke. The most obvious way of implementing this, properly indexed, shouldn’t make data retrieval more than say twice as slow, I would think."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750980333.442849",
        "client_msg_id": "2f4481bf-8f36-4e8b-a544-f56fa53d6cd5",
        "text": "Yeah. Unfortunately this particular thing was in the context of a job and I don't have access to the code. It wasn't a lot of data and it was a simple CRUD webapp. But the database did need to be queried online. Performance was not an issue when we were mutating rows, but very quickly became an issue once we started appending rows. Perhaps I didn't know what to index. But that too is a problem your users will face, unless you somehow magically index the right things.\n\nPerhaps the risk is that appending rather than mutating makes us more sensitive to indexing strategy. I can easily implement a database with mutation, but perhaps I need to learn something before I'm as effective at an append-only database.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iKSfI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah. Unfortunately this particular thing was in the context of a job and I don't have access to the code. It wasn't a lot of data and it was a simple CRUD webapp. But the database did need to be queried online. Performance was not an issue when we were mutating rows, but very quickly became an issue once we started appending rows. Perhaps I didn't know what to index. But that too is a problem your users will face, unless you somehow magically index the right things.\n\nPerhaps the risk is that appending rather than mutating makes us more sensitive to indexing strategy. I can easily implement a database with mutation, but perhaps I need to learn something before I'm as effective at an append-only database."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1750981856.740919",
        "client_msg_id": "45E1B4D7-AAA3-4FB8-80BD-968CF6E71B75",
        "text": "Given my interest in smaller apps, I think we could happily have the database do its own indexing automatically. I’m kind of puzzled why this isn’t at least an option in major databases.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q+t0Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Given my interest in smaller apps, I think we could happily have the database do its own indexing automatically. I’m kind of puzzled why this isn’t at least an option in major databases."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1750982163.376209",
        "edited": {
            "user": "U05PY5AQCA2",
            "ts": "1750983551.000000"
        },
        "client_msg_id": "A5028E55-9C08-46EE-9E5E-5306DABB9FA6",
        "text": "In case it’s not clear: the primary key on a table with a synthetic id column, an at column and a model_id column would be (model_id, id, at).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HBrt4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In case it’s not clear: the primary key on a table with a synthetic id column, an at column and a model_id column would be (model_id, id"
                            },
                            {
                                "type": "text",
                                "text": ", at"
                            },
                            {
                                "type": "text",
                                "text": ")."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750982630.174539",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1750982641.000000"
        },
        "client_msg_id": "45a414d4-f718-410e-bd07-77cdf1bf46d6",
        "text": "I think one difference with my experience may have been that I had to look up the most recent version id for rows. If you always know the precise model id that you need to look up, that may work well and my experience may not be relevant.\n\nIf you're looking up by a fixed model id, does that mean that any time one creates a new fork they need to copy all the rows from the past into the new model id? That would be a slow operation, right?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EJ3\/I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think one difference with my experience may have been that I had to look up the most recent version id for rows. If you always know the precise model id that you need to look up, that may work well and my experience may not be relevant.\n\nIf you're looking up by a fixed model id, does that mean that any time one creates a new fork they need to copy all the rows from the past into the new model id? That would be a slow operation, right?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750982832.626319",
        "client_msg_id": "4397e942-b3a7-4f91-8a5d-8174e75e942d",
        "text": "If you do it a hundred times, the database would grow by a factor of a hundred.\n\nI suppose we could do something like what git does, let you check out multiple models. Checked out models would be fast to query but occupy linear space. Models that aren't checked out could be compressed to occupy sub-linear space.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ydtDN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you do it a hundred times, the database would grow by a factor of a hundred.\n\nI suppose we could do something like what git does, let you check out multiple models. Checked out models would be fast to query but occupy linear space. Models that aren't checked out could be compressed to occupy sub-linear space."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1750983862.112519",
        "client_msg_id": "13156243-AB2D-45AD-B26C-C8E47B4EBD02",
        "text": "You would probably want some forks to be copying, but I imagine mostly they would be lazy. So when you look for person with id 1, in model A, we would look for something like:\n\nSELECT * FROM person WHERE (id, model) = (1, A).\n\nIf A was branched from another model, you would need to extend that with either a recursive CTE or you query for something like:\n\nSELECT * FROM person WHERE id = 1 AND model_id IN (A, B, C)\n\nassuming B, C are the antecedents of A in the branching hierarchy, and then you choose which model’s version of the record you should have based on the branch mode or whatever you call it.\n\nTo be clear: you could automatically add that logic behind the scenes. A developer using a Frest system would do the moral equivalent of:\n\nSET model = A;\nSELECT * FROM person WHERE id = 1;\n\n(“moral equivalent” here because I’m very keen on making Datalog the query language of such systems…)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "25OXq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You would probably want some forks to be copying, but I imagine mostly they would be lazy. So when you look for person with id 1, in model A, we would look for something like"
                            },
                            {
                                "type": "text",
                                "text": ":\n\nSELECT * FROM person WHERE (id, model) = (1, A).\n\nIf A was branched from another model, you would need to extend that with either a recursive CTE or you query for something like:\n\nSELECT * FROM person WHERE id = 1 AND model_id IN (A, B, C)\n\nassuming B, C are the antecedents of A in the branching hierarchy, and then you choose which model’s version of the record you should have based on the branch mode or whatever you call it.\n\nTo be clear: you could automatically add that logic behind the scenes. A developer using a Frest system would do the moral equivalent of:\n\nSET model = A;\nSELECT * FROM person WHERE id = 1;\n\n(“moral equivalent” here because I’m very keen on making Datalog the query language of such systems…)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1750984086.421349",
        "client_msg_id": "99f5fba3-75cf-4bcb-9e7a-ca6430175aab",
        "text": "Yeah. That's the kind of thing that introduces some risk it'll get slow. So there's a trade-off here. You can complicate the query so performance becomes harder to reason about, or you can create a UX where people have to check out, and it'll make sense to people that those operations are slow. I think I'd lean towards the latter approach. I'd rather provide predictable performance and transparently expose slow operations to people.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5b23N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah. That's the kind of thing that introduces some risk it'll get slow. So there's a trade-off here. You can complicate the query so performance becomes harder to reason about, or you can create a UX where people have to check out, and it'll make sense to people that those operations are slow. I think I'd lean towards the latter approach. I'd rather provide predictable performance and transparently expose slow operations to people."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1750984297.146729",
        "edited": {
            "user": "U05PY5AQCA2",
            "ts": "1750986842.000000"
        },
        "client_msg_id": "1CEBDE4D-8F5B-4602-B93B-924C150D27D7",
        "text": "Excel is also much slower than doing the same calculations in assembly language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750958020.669509",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nHD1g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Excel is "
                            },
                            {
                                "type": "text",
                                "text": "also much "
                            },
                            {
                                "type": "text",
                                "text": "slower than doing the same calculations in assembly language."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1751005050.167249",
        "client_msg_id": "5f26793c-4806-4fe4-b1b5-7e3e87d83921",
        "text": "Common Lisp software installation comes in three layers:\n• The language itself has (load ...) for reading in a file. And nothing else (well, there's defsystem, but it's basically useless today).\n• ASDF is the de-facto code management layer that nowadays is shipped with all CL implementations. Its unit of software is the 'system', defined in terms of code files and dependencies in a system definition file (extension .asd). That's how all Lisp code is packaged nowadays. If you manage to track down the repositories of all dependencies, recursively, you can clone them into $HOME\/common-lisp and you are ready to go: `(require 'asdf)` and then `(asdf:load-system \"hyperdoc-demo\")` .\n• Software catalogs and package managers take care of downloading dependencies from the right places. There are the system-wide ones (Debian, Guix, ...), but also a few Lisp-specific ones, out of which <https:\/\/www.quicklisp.org\/beta\/|Quicklisp> is by far the most popular. It's very easy to install, and mostly just works. But its default software catalog is updated only about twice per year. If you want bleeding-edge code (such as mine), you have to add a second catalog, <https:\/\/ultralisp.org\/|Ultralisp>, which is easy to add as well. If you have those two, and followed their advice of activating Quicklisp on startup (in $HOME\/.sbclrc for SBCL), then `(ql:quickload \"hyperdoc-demo\")` will download and load everything you need.\nI provide instructions for Quicklisp (which I use on my old Mac) and for Guix (which I used under Linux). I have tested my system with SBCL and ECL, the two Lisp implementations well supported by Guix.\n\nPhilosophical note: Common Lisp is fortunate to have ASDF separate from Quicklisp and other package managers. The fusion of their Python or JS equivalents makes it a pain to assemble polyglot software. With Lisp, any package manager can delegate the Lisp-specific stuff to ASDF. And Lisp developers don't have to know about anything else than ASDF.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750915144.806939",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mJHPG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Common Lisp software installation comes in three layers:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The language itself has (load ...) for reading in a file. And nothing else (well, there's defsystem, but it's basically useless today)."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "ASDF is the de-facto code management layer that nowadays is shipped with all CL implementations. Its unit of software is the 'system', defined in terms of code files and dependencies in a system definition file (extension .asd). That's how all Lisp code is packaged nowadays. If you manage to track down the repositories of all dependencies, recursively, you can clone them into $HOME\/common-lisp and you are ready to go: "
                                    },
                                    {
                                        "type": "text",
                                        "text": "(require 'asdf)",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " and then "
                                    },
                                    {
                                        "type": "text",
                                        "text": "(asdf:load-system \"hyperdoc-demo\")",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " ."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Software catalogs and package managers take care of downloading dependencies from the right places. There are the system-wide ones (Debian, Guix, ...), but also a few Lisp-specific ones, out of which "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/www.quicklisp.org\/beta\/",
                                        "text": "Quicklisp"
                                    },
                                    {
                                        "type": "text",
                                        "text": " is by far the most popular. It's very easy to install, and mostly just works. But its default software catalog is updated only about twice per year. If you want bleeding-edge code (such as mine), you have to add a second catalog, "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/ultralisp.org\/",
                                        "text": "Ultralisp"
                                    },
                                    {
                                        "type": "text",
                                        "text": ", which is easy to add as well. If you have those two, and followed their advice of activating Quicklisp on startup (in $HOME\/.sbclrc for SBCL), then "
                                    },
                                    {
                                        "type": "text",
                                        "text": "(ql:quickload \"hyperdoc-demo\")",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " will download and load everything you need."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI provide instructions for Quicklisp (which I use on my old Mac) and for Guix (which I used under Linux). I have tested my system with SBCL and ECL, the two Lisp implementations well supported by Guix.\n\nPhilosophical note: Common Lisp is fortunate to have ASDF separate from Quicklisp and other package managers. The fusion of their Python or JS equivalents makes it a pain to assemble polyglot software. With Lisp, any package manager can delegate the Lisp-specific stuff to ASDF. And Lisp developers don't have to know about anything else than ASDF."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1751007479.501899",
        "client_msg_id": "2c385780-4915-4f3a-9325-b19f34c0553d",
        "text": "&gt; I provide instructions for Quicklisp\nOh did I miss this? I don't see where you do.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750915144.806939",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2sQWN",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I provide instructions for Quicklisp"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nOh did I miss this? I don't see where you do."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]