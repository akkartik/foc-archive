[
    {
        "user": "U04D9JTLXJ4",
        "type": "message",
        "ts": "1669486684.831939",
        "client_msg_id": "b2240091-3dbd-4c38-96e8-f759eb5e3db7",
        "text": "You may try <https:\/\/langium.org\/|Langium framework >if you need it in the JS world.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbd3a5371011",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bd3a5371011e7ec487336bea180e09d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Denis",
            "real_name": "Denis Kuniß",
            "display_name": "Denis Kuniß",
            "team": "T5TCAFTA9",
            "name": "kuniss",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1666580002.243979",
        "parent_user_id": "U046LSVRN1H",
        "attachments": [
            {
                "from_url": "https:\/\/langium.org\/",
                "image_url": "https:\/\/langium.org\/assets\/social-card.jpg",
                "image_width": 478,
                "image_height": 250,
                "image_bytes": 173759,
                "id": 1,
                "original_url": "https:\/\/langium.org\/",
                "fallback": "Langium",
                "text": "Langium is an open source language engineering tool with first-class support for the Language Server Protocol, written in TypeScript and running in Node.js.",
                "title": "Langium",
                "title_link": "https:\/\/langium.org\/",
                "service_name": "langium.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cR=gp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You may try "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/langium.org\/",
                                "text": "Langium framework "
                            },
                            {
                                "type": "text",
                                "text": "if you need it in the JS world."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04D9JTLXJ4",
        "type": "message",
        "ts": "1669487101.023029",
        "client_msg_id": "cff96f83-b99d-4bdb-ab99-3b61c5cbd46f",
        "text": "...Sorry, hit the enter button too fast. I've some more to say. :-)\n\nFor the Java environment <https:\/\/www.eclipse.org\/Xtext\/|Xtext> is a good choice (historically the predecessor of Langium; both are sharing the same idea\/approach).\nThe main advantage for your requirement is, I guess, that by defining the concrete syntax grammar implicitly a tree data algebra is defined what the parser is using to create the tree representation of a sentence of your language. You may see this as a Concrete Syntax Tree and process it that way.\n(Or did I interpret your \"CST\" wrongly?)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbd3a5371011",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bd3a5371011e7ec487336bea180e09d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Denis",
            "real_name": "Denis Kuniß",
            "display_name": "Denis Kuniß",
            "team": "T5TCAFTA9",
            "name": "kuniss",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1666580002.243979",
        "parent_user_id": "U046LSVRN1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hcwRJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "...Sorry, hit the enter button too fast. I've some more to say. :-)\n\nFor the Java environment "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.eclipse.org\/Xtext\/",
                                "text": "Xtext"
                            },
                            {
                                "type": "text",
                                "text": " is a good choice (historically the predecessor of Langium; both are sharing the same idea\/approach).\nThe main advantage for your requirement is, I guess, that by defining the concrete syntax grammar implicitly a tree data algebra is defined what the parser is using to create the tree representation of a sentence of your language. You may see this as a Concrete Syntax Tree and process it that way.\n(Or did I interpret your \"CST\" wrongly?)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U046LSVRN1H",
        "type": "message",
        "ts": "1669489169.305449",
        "client_msg_id": "27818b1b-dca4-4545-892d-953767f403a5",
        "text": "Interesting. Yeah I like the idea of something that is explicitly integrated with language servers and therefore IDEs. I’m writing a blog post about these precise tools, what I call “tooling for tooling”, that I’ll probably post here soon",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2a2aca0fcc14",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-11-07\/4336773837699_2a2aca0fcc14c8e11371_72.png",
            "first_name": "Nicholas",
            "real_name": "Nicholas Yang",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nick581",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1666580002.243979",
        "parent_user_id": "U046LSVRN1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lA8J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting. Yeah I like the idea of something that is explicitly integrated with language servers and therefore IDEs. I’m writing a blog post about these precise tools, what I call “tooling for tooling”, that I’ll probably post here soon"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04D9JTLXJ4",
        "type": "message",
        "ts": "1669494221.329259",
        "client_msg_id": "e076e42c-594b-4316-aaa4-c06c65e7e20f",
        "text": "The approach <https:\/\/enso.org\/|Enso programming system> tries, falls into the category code-as-executable, isn't it?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbd3a5371011",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bd3a5371011e7ec487336bea180e09d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Denis",
            "real_name": "Denis Kuniß",
            "display_name": "Denis Kuniß",
            "team": "T5TCAFTA9",
            "name": "kuniss",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667113662.924319",
        "parent_user_id": "U03GBV8B58V",
        "attachments": [
            {
                "from_url": "https:\/\/enso.org\/",
                "image_url": "http:\/\/enso.org\/img\/meta\/og-image.jpg",
                "image_width": 478,
                "image_height": 250,
                "image_bytes": 124060,
                "service_icon": "https:\/\/enso.org\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/enso.org\/",
                "fallback": "Enso | Get insights you can rely on. In real time.",
                "text": "Enso is an award-winning interactive programming language with dual visual and textual representations. It is a tool that spans the entire stack, going from high-level visualisation and communication to the nitty-gritty of backend services, all in a single language.",
                "title": "Enso | Get insights you can rely on. In real time.",
                "title_link": "https:\/\/enso.org\/",
                "service_name": "enso.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uajC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The approach "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/enso.org\/",
                                "text": "Enso programming system"
                            },
                            {
                                "type": "text",
                                "text": " tries, falls into the category code-as-executable, isn't it?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U046LSVRN1H",
        "type": "message",
        "ts": "1669496452.119769",
        "edited": {
            "user": "U046LSVRN1H",
            "ts": "1669496464.000000"
        },
        "client_msg_id": "6d5be394-a1bf-48a0-aa10-51c32eef2823",
        "text": "Hey I wrote up a blog post on tooling for programming languages, basically tools like tree-sitter that help programming language implementors provide higher quality user experience. I’d love to see what people think of the post! It’s in draft but I’ll probably publish it soon. <https:\/\/github.com\/NicholasLYang\/uptointerpretation\/blob\/master\/content\/posts\/tooling-for-tooling.md>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2a2aca0fcc14",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-11-07\/4336773837699_2a2aca0fcc14c8e11371_72.png",
            "first_name": "Nicholas",
            "real_name": "Nicholas Yang",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nick581",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1669496452.119769",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1669806888.110169",
        "reply_users": [
            "U013ZLJARC7",
            "U046LSVRN1H"
        ],
        "replies": [
            {
                "user": "U013ZLJARC7",
                "ts": "1669541145.997849"
            },
            {
                "user": "U046LSVRN1H",
                "ts": "1669752289.134639"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1669806888.110169"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Ae2d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey I wrote up a blog post on tooling for programming languages, basically tools like tree-sitter that help programming language implementors provide higher quality user experience. I’d love to see what people think of the post! It’s in draft but I’ll probably publish it soon. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/NicholasLYang\/uptointerpretation\/blob\/master\/content\/posts\/tooling-for-tooling.md"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "<@U04D9JTLXJ4> Yep, I would say so. The dual representation (graphs and text) as well as as interactions with both representations giving the user instant feedback fits the code-as-executable interaction paradigm :slightly_smiling_face: It's a bit hidden in their site, so I captured a video (see attached).\n\nI would love to see more languages, including existing ones, get tools that allow for this type of dual interaction. You get the best of both worlds: The low barrier of entry for visual coding. The high ceiling of textual coding. You don't have to invent your own language to get these benefits (and struggle with the cold-start problem of an eco-system). We're creating this type of dual interaction on top of TypeScript at the moment.",
        "files": [
            {
                "id": "F04CNH2F144",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U03GBV8B58V",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GowU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U04D9JTLXJ4"
                            },
                            {
                                "type": "text",
                                "text": " Yep, I would say so. The dual representation (graphs and text) as well as as interactions with both representations giving the user instant feedback fits the code-as-executable interaction paradigm "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " It's a bit hidden in their site, so I captured a video (see attached).\n\nI would love to see more languages, including existing ones, get tools that allow for this type of dual interaction. You get the best of both worlds: The low barrier of entry for visual coding. The high ceiling of textual coding. You don't have to invent your own language to get these benefits (and struggle with the cold-start problem of an eco-system). We're creating this type of dual interaction on top of TypeScript at the moment."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1669496735.851219",
        "edited": {
            "user": "U03GBV8B58V",
            "ts": "1669496791.000000"
        },
        "client_msg_id": "aabdab9e-1696-4bb8-9594-a2aa171d2714",
        "thread_ts": "1667113662.924319",
        "parent_user_id": "U03GBV8B58V",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U04D9JTLXJ4"
                ],
                "count": 1
            }
        ]
    }
]