[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1639124656.209500",
        "client_msg_id": "ec428078-dd02-422c-9373-8030fe31add1",
        "text": "\"State composes perfectly with state, embodiment composes perfectly with embodiment; but _when we mix state and embodiment, complexity explodes_\" — I'll take some of whatever state and embodiment you've got composing.  In my experience, state composes awkwardly (\"oh, it depends on this other data way over there\"), embodiment composes awkwardly (\"oh, that isn't going to fit on the screen\"), *and* the two, when mixed, compose even worse (\"wait, I was in the middle of editing that, it can't just disappear when make a change that will remove it from the list\").",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639046352.207200",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "41D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"State composes perfectly with state, embodiment composes perfectly with embodiment; but "
                            },
                            {
                                "type": "text",
                                "text": "when we mix state and embodiment, complexity explodes",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\" — I'll take some of whatever state and embodiment you've got composing.  In my experience, state composes awkwardly (\"oh, it depends on this other data way over there\"), embodiment composes awkwardly (\"oh, that isn't going to fit on the screen\"), "
                            },
                            {
                                "type": "text",
                                "text": "and",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the two, when mixed, compose even worse (\"wait, I was in the middle of editing that, it can't just disappear when make a change that will remove it from the list\")."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U02M6PM725T",
                    "UEQ7QL15F"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1639124729.209700",
        "client_msg_id": "c0db84e1-1cea-47e6-a8a6-1839f5247f17",
        "text": "I found specifying my availability in when2meet, a little weird.  So I almost gave up.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1638770478.183100",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QMwaA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I found specifying my availability in when2meet, a little weird.  So I almost gave up."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02M6PM725T",
        "type": "message",
        "ts": "1639126851.210000",
        "client_msg_id": "238c29ea-d7f0-46ca-a2f0-965ffa9ec245",
        "text": "<@UA14TGLTC> What are examples of things that do compose well, in your experience? (I’m interested since I think <https:\/\/www.cs.kent.ac.uk\/people\/staff\/dat\/miranda\/whyfp90.pdf|composition> is a key asset in keeping complexity from exploding)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "46b1d789abee",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-14\/2726013476404_46b1d789abee49842525_72.jpg",
            "first_name": "Henning",
            "real_name": "Henning Sato von Rosen",
            "display_name": "hvrosen",
            "team": "T5TCAFTA9",
            "name": "henning.von.rosen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639046352.207200",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D4c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " What are examples of things that do compose well, in your experience? (I’m interested since I think "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.cs.kent.ac.uk\/people\/staff\/dat\/miranda\/whyfp90.pdf",
                                "text": "composition"
                            },
                            {
                                "type": "text",
                                "text": " is a key asset in keeping complexity from exploding)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02M6PM725T",
        "type": "message",
        "ts": "1639130708.210200",
        "client_msg_id": "3feb6da6-2cc7-40f8-adda-e2dc43596239",
        "text": "<@U016VUZGUUQ> <@UCGAK10LS> Sorry for posting raw ideas of the top of my head and messing up the terminology. I’ll keep that in mind next time. Do you think a brief summary and a link to a blog post w code examples would be more helpful? Anyways, what I mean with `state`is just a tree of pure values, like in `statecharts` , and, yes the embodiment can be DOM, concrete UI etc. In stead of Layer machine, just read `state machine` or `statechart` and assume a composable version of them that covers the whole app instead of leaving a lot to the host language. And in stead of _layer machine markup_, think HTML, just extended with some new kinds of tags or metatags. I think _explicit state modeling_ as in e.g. statecharts is so great for keeping complexity at bay, and that the biggest thing stopping it from being even more useful is _composability_; thus I find anything that might enhance composability of statecharts\/state modeling super exciting! Hope to do a better job of exiting people for that idea the next time! :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "46b1d789abee",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-14\/2726013476404_46b1d789abee49842525_72.jpg",
            "first_name": "Henning",
            "real_name": "Henning Sato von Rosen",
            "display_name": "hvrosen",
            "team": "T5TCAFTA9",
            "name": "henning.von.rosen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639046352.207200",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QoSuN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " Sorry for posting raw ideas of the top of my head and messing up the terminology. I’ll keep that in mind next time. Do you think a brief summary and a link to a blog post w code examples would be more helpful? Anyways, what I mean with "
                            },
                            {
                                "type": "text",
                                "text": "state",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "is just a tree of pure values, like in "
                            },
                            {
                                "type": "text",
                                "text": "statecharts",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " , and, yes the embodiment can be DOM, concrete UI etc. In stead of Layer machine, just read "
                            },
                            {
                                "type": "text",
                                "text": "state machine",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "text",
                                "text": "statechart",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and assume a composable version of them that covers the whole app instead of leaving a lot to the host language. And in stead of "
                            },
                            {
                                "type": "text",
                                "text": "layer machine markup",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", think HTML, just extended with some new kinds of tags or metatags. I think "
                            },
                            {
                                "type": "text",
                                "text": "explicit state modeling",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " as in e.g. statecharts is so great for keeping complexity at bay, and that the biggest thing stopping it from being even more useful is "
                            },
                            {
                                "type": "text",
                                "text": "composability",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "; thus I find anything that might enhance composability of statecharts\/state modeling super exciting! Hope to do a better job of exiting people for that idea the next time! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1639147544.210600",
        "edited": {
            "user": "UA14TGLTC",
            "ts": "1639147570.000000"
        },
        "client_msg_id": "583eddab-fa61-45dc-ae3d-47a6165b47b0",
        "text": "In my experience?  The third rewrite composes better.  The first version is too hot: rough and ready.  The second is too cold: over-engineered.  And the third is just right: reusable pieces that snap together tightly using minimal glue.\n\nI have a short list of concrete examples, not my own:\n• Bayes rule composes well when you use odds instead of probabilities.  <https:\/\/www.youtube.com\/watch?v=lG4VkPoG3ko>\n• Maxwell's equations fall out from the geometric product in the proper units.  <https:\/\/www.youtube.com\/watch?v=60z_hpEAtD8>\n• The chain rule composes better under derivatives improved by keeping the function's original value too.  <https:\/\/www.youtube.com\/watch?v=17gfCTnw6uE>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639046352.207200",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QgX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my experience?  The third rewrite composes better.  The first version is too hot: rough and ready.  The second is too cold: over-engineered.  And the third is just right: reusable pieces that snap together tightly using minimal glue.\n\nI have a short list of concrete examples, not my own:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Bayes rule composes well when you use odds instead of probabilities.  "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/www.youtube.com\/watch?v=lG4VkPoG3ko"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Maxwell's equations fall out from the geometric product in the proper units.  "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/www.youtube.com\/watch?v=60z_hpEAtD8"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The chain rule composes better under derivatives improved by keeping the function's original value too.  "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/www.youtube.com\/watch?v=17gfCTnw6uE"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "open_mouth",
                "users": [
                    "U02M6PM725T"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "U027P92A0N5"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02M6PM725T",
        "type": "message",
        "ts": "1639151347.211000",
        "client_msg_id": "f766dc5e-affe-455b-904f-910b4da27ae0",
        "text": "<@U016VUZGUUQ> <@UCGAK10LS> Thanks for feedback, and my bad for posting raw ideas of the top of my head and omitting definitions\/intuitions :slightly_smiling_face:  I’ll keep that in mind next time; doesn’t hur to work on my communication skills :slightly_smiling_face:  Do you think a couple of descriptive sentences and a link to a blog post w code examples would be more helpful? Anyways, what I mean with `state`is just a tree of pure values, like in `statecharts` , and, yes the embodiment can be DOM, concrete UI etc. In stead of Layer machine, just read `state machine` or `statechart` and assume a composable version of them that covers the whole app instead of leaving a lot to the host language. I think explicit state modeling as in e.g. statecharts is so great for keeping complexity at bay, and that the biggest thing stopping it from being even more useful is _composability_; thus I find anything that can enhance composability of statecharts is super interesting.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "46b1d789abee",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-14\/2726013476404_46b1d789abee49842525_72.jpg",
            "first_name": "Henning",
            "real_name": "Henning Sato von Rosen",
            "display_name": "hvrosen",
            "team": "T5TCAFTA9",
            "name": "henning.von.rosen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639046352.207200",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4cv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for feedback, and my bad for posting raw ideas of the top of my head and omitting definitions\/intuitions "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "  I’ll keep that in mind next time; doesn’t hur to work on my communication skills "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "  Do you think a couple of descriptive sentences and a link to a blog post w code examples would be more helpful? Anyways, what I mean with "
                            },
                            {
                                "type": "text",
                                "text": "state",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "is just a tree of pure values, like in "
                            },
                            {
                                "type": "text",
                                "text": "statecharts",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " , and, yes the embodiment can be DOM, concrete UI etc. In stead of Layer machine, just read "
                            },
                            {
                                "type": "text",
                                "text": "state machine",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "text",
                                "text": "statechart",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and assume a composable version of them that covers the whole app instead of leaving a lot to the host language. I think explicit state modeling as in e.g. statecharts is so great for keeping complexity at bay, and that the biggest thing stopping it from being even more useful is "
                            },
                            {
                                "type": "text",
                                "text": "composability",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "; thus I find anything that can enhance composability of statecharts is super interesting."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1639155947.211300",
        "client_msg_id": "1dc81d20-126a-43c5-bd00-4df1fbb7e5b2",
        "text": "I think firstly that people are more comfortable getting the conversation started here, not on video, especially when it involves the mass synchronisation of busy and diverse folk, and secondly, yes, that site was, well, I don't want to be rude, so.. :hugging_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1638770478.183100",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R7pq=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think firstly that people are more comfortable getting the conversation started here, not on video, especially when it involves the mass synchronisation of busy and diverse folk, and secondly, yes, that site was, well, I don't want to be rude, so.. "
                            },
                            {
                                "type": "emoji",
                                "name": "hugging_face",
                                "unicode": "1f917"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "I don’t know what rendering trees are in your context, but it makes me think about Flutter’s box layout and paint boundaries algorithm which is really cool.\n<https:\/\/www.youtube.com\/watch?v=UUfXWzp0-DU>",
        "files": [
            {
                "id": "F02Q4J3DMF0",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UFPPABQ7P",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J6x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don’t know what rendering trees are in your context, but it makes me think about Flutter’s box layout and paint boundaries algorithm which is really cool.\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=UUfXWzp0-DU"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1639159343.211500",
        "edited": {
            "user": "UFPPABQ7P",
            "ts": "1639159745.000000"
        },
        "client_msg_id": "28b36c54-67e7-4baa-a0b7-e6bd114a5ae7",
        "thread_ts": "1638993777.193200",
        "parent_user_id": "U01TBS7N9GS",
        "attachments": [
            {
                "from_url": "https:\/\/www.youtube.com\/watch?v=UUfXWzp0-DU",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/UUfXWzp0-DU?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/UUfXWzp0-DU\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=UUfXWzp0-DU",
                "fallback": "YouTube Video: Flutter's Rendering Pipeline",
                "title": "Flutter's Rendering Pipeline",
                "title_link": "https:\/\/www.youtube.com\/watch?v=UUfXWzp0-DU",
                "author_name": "Google TechTalks",
                "author_link": "https:\/\/www.youtube.com\/user\/GoogleTechTalks",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1639169041.211900",
        "client_msg_id": "29678462-bd97-4313-b911-b8b933e9362c",
        "text": "Video does not strike me as a good format for such a sprawling topic. By default a conversation is a random walk, not a survey. If you were really disciplined, you might be able to come up with a curated list of subject headings, maybe outline an agenda for a much larger discussion, but even that would be tricky. To say nothing of the logistical synchronization issues others mentioned... I think we can do better async. You are making me think I should get the ball rolling by posting my draft list of goals.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1638770478.183100",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lJW8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Video does not strike me as a good format for such a sprawling topic. By default a conversation is a random walk, not a survey. If you were really disciplined, you might be able to come up with a curated list of subject headings, maybe outline an agenda for a much larger discussion, but even that would be tricky. To say nothing of the logistical synchronization issues others mentioned... I think we can do better async. You are making me think I should get the ball rolling by posting my draft list of goals."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    }
]