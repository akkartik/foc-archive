[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1600934027.000100",
        "client_msg_id": "5f5bf1d4-b6c4-4229-873d-c2cf5d0b8271",
        "text": "<@U8A5MS6R1> for your specific use case, consider also this blog post\/paper\/code: <https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1600933934001000>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600884082.007100",
        "parent_user_id": "U8A5MS6R1",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1600933934001000",
                "fallback": "[September 24th, 2020 12:52 AM] jack529: This is a very interesting approach to conversational AI via growing dataflow programs that (among other things) claims that \"Task-oriented dialogue is interactive programming\":\n<https:\/\/www.microsoft.com\/en-us\/research\/blog\/dialogue-as-dataflow-a-new-approach-to-conversational-ai\/>",
                "ts": "1600933934.001000",
                "author_id": "U013ZLJARC7",
                "author_subname": "Jack Rusher",
                "channel_id": "C5U3SEW6A",
                "is_msg_unfurl": true,
                "text": "This is a very interesting approach to conversational AI via growing dataflow programs that (among other things) claims that \"Task-oriented dialogue is interactive programming\":\n<https:\/\/www.microsoft.com\/en-us\/research\/blog\/dialogue-as-dataflow-a-new-approach-to-conversational-ai\/>",
                "author_name": "Jack Rusher",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/U013ZLJARC7",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/f4ae9e5b29386489b18b3bc6b1f41a22.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1600933934001000",
                "footer": "Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XZs6c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " for your specific use case, consider also this blog post\/paper\/code: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1600933934001000"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1600936069.005300",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1600936184.000000"
        },
        "client_msg_id": "e4aed6c8-7edc-4c48-8fe5-ec83600aff47",
        "text": "Has anyone encountered <https:\/\/web.archive.org\/web\/20170924140612\/http:\/\/dyna.org\/|Dyna> before? The project seems to be abandoned now (hence archived link), but it's a logic language that generalises Datalog (a binary logic) to a \"weighted logic\". Essentially, every fact in the program can be associated with an *aggregate number*, rather than just \"true\" and \"false\". I'm particularly curious whether this is a good approach for providing *aggregation* in a logic language. Aggregation is an essential feature for writing a non-trivial logic program, but I don't like the kind of aggregation made available in Prolog and traditional Datalog extensions: they feel far too clunky. You could describe the difference as: \"Datalog aggregates by combining reads\" whereas \"Dyna aggregates by combining writes\".\n\nI'm going to deep dive into Dyna; it would be good to know if anyone here has already explored it :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600936069.005300",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1601266216.012500",
        "reply_users": [
            "UCGAK10LS",
            "U013HU44GLS"
        ],
        "replies": [
            {
                "user": "UCGAK10LS",
                "ts": "1601193223.012100"
            },
            {
                "user": "U013HU44GLS",
                "ts": "1601266216.012500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V\/Os",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Has anyone encountered "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/web.archive.org\/web\/20170924140612\/http:\/\/dyna.org\/",
                                "text": "Dyna"
                            },
                            {
                                "type": "text",
                                "text": " before? The project seems to be abandoned now (hence archived link), but it's a logic language that generalises Datalog (a binary logic) to a \"weighted logic\". Essentially, every fact in the program can be associated with an "
                            },
                            {
                                "type": "text",
                                "text": "aggregate number",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", rather than just \"true\" and \"false\". I'm particularly curious whether this is a good approach for providing "
                            },
                            {
                                "type": "text",
                                "text": "aggregation",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in a logic language. Aggregation is an essential feature for writing a non-trivial logic program, but I don't like the kind of aggregation made available in Prolog and traditional Datalog extensions: they feel far too clunky. You could describe the difference as: \"Datalog aggregates by combining reads\" whereas \"Dyna aggregates by combining writes\".\n\nI'm going to deep dive into Dyna; it would be good to know if anyone here has already explored it "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1600945142.008800",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1600987988.000000"
        },
        "client_msg_id": "09244423-2213-4c6d-999e-f0f221322cbb",
        "text": "Well... deep dive failed. If anyone can actually get <https:\/\/github.com\/nwf\/dyna|the Dyna source code> to compile on Windows or Mac, send me a binary! Looks like the repository has bitrotted. I get Haskell package version clashes.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OUUA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well... deep dive failed. If anyone can actually get "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/nwf\/dyna",
                                "text": "the Dyna source code"
                            },
                            {
                                "type": "text",
                                "text": " to compile on Windows or Mac, send me a binary! Looks like the repository has bitrotted. I get Haskell package version clashes."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thread-please",
                "users": [
                    "USH01JEDQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1600955552.009700",
        "client_msg_id": "d10cea91-1732-42a4-9895-b5b804a60dfd",
        "text": "<@UCGAK10LS> IIRC, their new work is all against Dyna-R, for which there's another repo. (No time to go hunting just now.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600955552.009700",
        "reply_count": 10,
        "reply_users_count": 3,
        "latest_reply": "1603548623.036700",
        "reply_users": [
            "UCGAK10LS",
            "U013ZLJARC7",
            "U015H1K64G1"
        ],
        "replies": [
            {
                "user": "UCGAK10LS",
                "ts": "1600989287.010700"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1600989340.011000"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1601034971.011200"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1601037423.011400"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1601037448.011600"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1601213597.012300"
            },
            {
                "user": "U015H1K64G1",
                "ts": "1603536587.032300"
            },
            {
                "user": "U015H1K64G1",
                "ts": "1603536668.032500"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1603542622.036400"
            },
            {
                "user": "U015H1K64G1",
                "ts": "1603548623.036700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C9fOO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " IIRC, their new work is all against Dyna-R, for which there's another repo. (No time to go hunting just now.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1600989287.010700",
        "client_msg_id": "b40a1cf0-4ff9-4ead-b7e8-0752d0c3d027",
        "text": "I've found <https:\/\/github.com\/matthewfl\/dyna-R\/|the Dyna-R repo>. The authors sent me the link after I inquired about the other abandoned codebase. They've recently <http:\/\/cs.jhu.edu\/~mfl\/#Evaluation%20of%20Logic%20Programs%20with%20Built-Ins%20and%20Aggregation%3A%20A%20Calculus%20for%20Bag%20Relations:%5B%5BEvaluation%20of%20Logic%20Programs%20with%20Built-Ins%20and%20Aggregation%3A%20A%20Calculus%20for%20Bag%20Relations%5D%5D|published a paper> that covers some of the theory behind the latest implementation.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600955552.009700",
        "parent_user_id": "U013ZLJARC7",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "matthewfl\/dyna-R",
                "title_link": "https:\/\/github.com\/matthewfl\/dyna-R\/",
                "text": "Dyna built on R-exprs. Contribute to matthewfl\/dyna-R development by creating an account on GitHub.",
                "fallback": "GitHub: matthewfl\/dyna-R",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/32317?s=400&v=4",
                "from_url": "https:\/\/github.com\/matthewfl\/dyna-R\/",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/matthewfl\/dyna-R\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cTA\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've found "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/matthewfl\/dyna-R\/",
                                "text": "the Dyna-R repo"
                            },
                            {
                                "type": "text",
                                "text": ". The authors sent me the link after I inquired about the other abandoned codebase. They've recently "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/cs.jhu.edu\/~mfl\/#Evaluation%20of%20Logic%20Programs%20with%20Built-Ins%20and%20Aggregation%3A%20A%20Calculus%20for%20Bag%20Relations:%5B%5BEvaluation%20of%20Logic%20Programs%20with%20Built-Ins%20and%20Aggregation%3A%20A%20Calculus%20for%20Bag%20Relations%5D%5D",
                                "text": "published a paper"
                            },
                            {
                                "type": "text",
                                "text": " that covers some of the theory behind the latest implementation."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1600989340.011000",
        "client_msg_id": "453dfda4-a078-491e-a82c-243e9de5d56d",
        "text": "<@U013ZLJARC7> I'm curious about how you knew about this project :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600955552.009700",
        "parent_user_id": "U013ZLJARC7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yq4Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " I'm curious about how you knew about this project "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]