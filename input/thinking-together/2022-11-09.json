[
    {
        "user": "U03GBV8B58V",
        "type": "message",
        "ts": "1668001924.321669",
        "edited": {
            "user": "U03GBV8B58V",
            "ts": "1668002830.000000"
        },
        "client_msg_id": "b1e6cb6f-5945-409b-9e5c-f1ea5b732e77",
        "text": "<@U03LT7540HZ> This \"code-as-*\" breakdown is not meant as a catch-all model that has to cover the types of creative tools you've mentioned. It applies when a tool has a direct or indirect relationship with code written in a specific programming language. Within that intended scope I see the following alignment to this model:\n\n• No-code is code-as-export since you're working with their abstractions for components, logic, etc. but they export\/generate to code that fits the target runtime, e.g. HTML, CSS, JavaScript for WebFlow\/Framer.\n• Low-code has the same properties as no-code but adds code-as-text\/code-as-programming-portals depending on the specific tool\n• What I've seen of shaders so far, that's been a mix of a traditional and web-based IDE which falls under code-as-text. Do you have any links to share?\n• I'm not that familiar with zapier etc, so I don't know their relationship with code, and their specific infrastructure\/implementations can vary significantly under the hood.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3e8345518ba8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-05-21\/3558879757875_3e8345518ba82b825c6d_72.jpg",
            "first_name": "Jim",
            "real_name": "Jim Meyer",
            "display_name": "Jim Meyer",
            "team": "T5TCAFTA9",
            "name": "jimkyndemeyer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667113662.924319",
        "parent_user_id": "U03GBV8B58V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I+bHY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U03LT7540HZ"
                            },
                            {
                                "type": "text",
                                "text": " This \"code-as-*\" breakdown is not meant as a catch-all model that has to cover the types of creative tools you've mentioned. It applies when a tool has a direct or indirect relationship with code written in a specific programming language. Within that intended scope I see the following alignment to this model:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "No-code is code-as-export since you're working with their abstractions for components, logic, etc. but they export\/generate to code that fits the target runtime, e.g. HTML, CSS, JavaScript for WebFlow\/Framer."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Low-code has the same properties as no-code but adds code-as-text\/code-as-programming-portals depending on the specific tool"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "What I've seen of shaders so far, that's been a mix of a traditional and web-based IDE which falls under code-as-text. Do you have any links to share?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I'm not that familiar with zapier etc, so I don't know their relationship with code, and their specific infrastructure\/implementations can vary significantly under the hood."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ]
    }
]