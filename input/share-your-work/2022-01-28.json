[
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1643398408.597269",
        "client_msg_id": "009576cf-59d2-4e28-8cca-8f95dea67e3e",
        "text": "Just watched this and skimmed your thesis. Looks great. I didn't see whether you're serializing the AST with construction sites? That's a really interesting topic for me, hopefully not even that hard in principle...\n\nI've been thinking for a long time about semi machine-readable state like this, not just for code but any other structured data. Similar ideas pop up when you think about search patterns over structured data (where the construction site-like part is treated as a sort of hierarchical wild card), multi-selections in a tree structure (like, say, search results), directly manipulating databases with strict schemas, etc. \"As specific as desired\" is one of my cross-cutting guiding principles, and your work fits right in. I probably need to look at Hazel, too.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1642919054.017700",
        "parent_user_id": "U011PF3F5EE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aaBl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just watched this and skimmed your thesis. Looks great. I didn't see whether you're serializing the AST with construction sites? That's a really interesting topic for me, hopefully not even that hard in principle...\n\nI've been thinking for a long time about semi machine-readable state like this, not just for code but any other structured data. Similar ideas pop up when you think about search patterns over structured data (where the construction site-like part is treated as a sort of hierarchical wild card), multi-selections in a tree structure (like, say, search results), directly manipulating databases with strict schemas, etc. \"As specific as desired\" is one of my cross-cutting guiding principles, and your work fits right in. I probably need to look at Hazel, too."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1643405337.669709",
        "client_msg_id": "68d2d428-2793-48e6-a0bb-ff9454ae4ad2",
        "text": "Video demo of Blawx v1 early stage proof of concept user-friendly Rules as Code tool. Declarative logic, natural language explanations, hypothetical reasoning, zero-click deploy to API, block-based controlled natural language programming environment, live code generation. All feedback very welcome. ~7m. <https:\/\/www.youtube.com\/watch?v=NxPkR79ENFs>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1643405337.669709",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1643468178.249359",
        "reply_users": [
            "U02E4DAQGSZ"
        ],
        "replies": [
            {
                "user": "U02E4DAQGSZ",
                "ts": "1643468178.249359"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6D+B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Video demo of Blawx v1 early stage proof of concept user-friendly Rules as Code tool. Declarative logic, natural language explanations, hypothetical reasoning, zero-click deploy to API, block-based controlled natural language programming environment, live code generation. All feedback very welcome. ~7m. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=NxPkR79ENFs"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "sparkles",
                "users": [
                    "USH01JEDQ",
                    "UA14TGLTC"
                ],
                "count": 2
            },
            {
                "name": "scales",
                "users": [
                    "UBN9AFS0N"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U013HU44GLS"
                ],
                "count": 1
            }
        ]
    }
]