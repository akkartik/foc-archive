[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1652687538.908449",
        "edited": {
            "user": "UA14TGLTC",
            "ts": "1652687993.000000"
        },
        "client_msg_id": "485b6cdb-a337-4ed3-9cea-e732e8b6f69f",
        "text": "In Smalltalk, I would usually have a bunch of browsers open.  Splitting panes in modern editors is awkward enough that I don't do it.  Just minding some tabs: closing and reordering manually.\n\nIn a way, I've no strong opinion on layout.  I've seen inlining, opening right, and more.  (When I do play with this, which is rarish, I start in 3D and imagine unopened paths as being in other dimensions mostly perpendicular, with just their entrance visible in projection.)\n\nMy main concern is consistency.  The worst offenders are mobile interfaces: a view that pushes in from the right and dismisses by sliding down.  Loses all sense of space.  Debuggers can be weird this way too.  Consider a normal master\/detail view.  To make it really, honestly, spacial, a person should be able to, say, expand two details at once.  Imagine flexible medium that you can stretch freely.  Then in a context, there can (and should) be strong conventions about up\/down left\/right.\n\nWhat could we do with `total_blocks_to_assign_across_encumbrance_levels`?  Let's say we inline local methods, stack loops (only usually showing a single focused example iteration but with borders to suggest how many times the loop is called), and expand calls to other objects to the right.  That would probably feel good.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IKd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In Smalltalk, I would usually have a bunch of browsers open.  Splitting panes in modern editors is awkward enough that I don't do it.  Just minding some tabs: closing and reordering manually.\n\nIn a way, I've no strong opinion on layout.  I've seen inlining, opening right, and more.  (When I do play with this, which is rarish, I start in 3D and imagine unopened paths as being in other dimensions mostly perpendicular, with just their entrance visible in projection.)\n\nMy main concern is consistency.  The worst offenders are mobile interfaces: a view that pushes in from the right and dismisses by sliding down.  Loses all sense of space.  Debuggers can be weird this way too.  Consider a normal master\/detail view.  To make it really, honestly, spacial, a person should be able to, say, expand two details at once.  Imagine flexible medium that you can stretch freely.  Then in a context, there can (and should) be strong conventions about up\/down left\/right.\n\nWhat could we do with "
                            },
                            {
                                "type": "text",
                                "text": "total_blocks_to_assign_across_encumbrance_levels",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "?  Let's say we inline local methods, stack loops (only usually showing a single focused example iteration but with borders to suggest how many times the loop is called), and expand calls to other objects to the right.  That would probably feel good."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1652688101.992499",
        "client_msg_id": "cc4deeca-2a78-414d-896f-a88007101f9b",
        "text": "Data dependencies: when was `@clock_stage_result` set?  Maybe \"outline\" data dependencies.  I mean if I'm focused on `total_blocks_to_assign_across_encumbrance_levels` I show the code where `@clock_stage_result` gets set above the method.  Since assignment is often written before use, it's likely to be higher up in the same file.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y2W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Data dependencies: when was "
                            },
                            {
                                "type": "text",
                                "text": "@clock_stage_result",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " set?  Maybe \"outline\" data dependencies.  I mean if I'm focused on "
                            },
                            {
                                "type": "text",
                                "text": "total_blocks_to_assign_across_encumbrance_levels",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " I show the code where "
                            },
                            {
                                "type": "text",
                                "text": "@clock_stage_result",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " gets set above the method.  Since assignment is often written before use, it's likely to be higher up in the same file."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U035VS7E01K",
        "type": "message",
        "ts": "1652716973.932379",
        "client_msg_id": "6dbf1bf7-5f91-499f-a8b2-7decfce04e0e",
        "text": "Hello Future of Coding community, I have finally had time to put together a draft of a concept I've had for a few months now - ReadableScript is a very simple 'javascript virtual machine language' that uses assembly-like syntax. Would love any and all feedback, do you think this could be a more accessible style of programming for beginners? Also as it's a \"vm\" it may be well suited to low-code programming environments. My next milestone goal is to integrate the language into a REPL. Note that this is a very rough draft, you can't even make strings! But the concept should be clear.\n\n<https:\/\/readablescript.com\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d27d25186ce7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-07\/3202786935795_d27d25186ce74ff4d732_72.jpg",
            "first_name": "Nate",
            "real_name": "Nate Ferrero",
            "display_name": "Nate Ferrero",
            "team": "T5TCAFTA9",
            "name": "nateferrero",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652716973.932379",
        "reply_count": 11,
        "reply_users_count": 5,
        "latest_reply": "1652881333.461239",
        "reply_users": [
            "U03ELMTAZNY",
            "U035VS7E01K",
            "UCUSW7WVD",
            "U03B14DUZSA",
            "U013ZLJARC7"
        ],
        "replies": [
            {
                "user": "U03ELMTAZNY",
                "ts": "1652717158.640199"
            },
            {
                "user": "U035VS7E01K",
                "ts": "1652717424.566729"
            },
            {
                "user": "U03ELMTAZNY",
                "ts": "1652717448.611149"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1652717717.486929"
            },
            {
                "user": "U03ELMTAZNY",
                "ts": "1652718100.950089"
            },
            {
                "user": "U03ELMTAZNY",
                "ts": "1652718647.520449"
            },
            {
                "user": "U035VS7E01K",
                "ts": "1652723387.212429"
            },
            {
                "user": "U035VS7E01K",
                "ts": "1652728359.744809"
            },
            {
                "user": "U035VS7E01K",
                "ts": "1652728387.526749"
            },
            {
                "user": "U03B14DUZSA",
                "ts": "1652756751.479909"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1652881333.461239"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lyaD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello Future of Coding community, I have finally had time to put together a draft of a concept I've had for a few months now - ReadableScript is a very simple 'javascript virtual machine language' that uses assembly-like syntax. Would love any and all feedback, do you think this could be a more accessible style of programming for beginners? Also as it's a \"vm\" it may be well suited to low-code programming environments. My next milestone goal is to integrate the language into a REPL. Note that this is a very rough draft, you can't even make strings! But the concept should be clear.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/readablescript.com\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U035VS7E01K",
        "type": "message",
        "ts": "1652717044.982069",
        "client_msg_id": "ac090ef3-a437-45c1-b279-443df94dd350",
        "text": "I love so much the idea of being able to create 'objects' or 'values' and just store them on my desktop. The idea of saving a number or value as an object with a name makes so much sense to me!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d27d25186ce7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-07\/3202786935795_d27d25186ce74ff4d732_72.jpg",
            "first_name": "Nate",
            "real_name": "Nate Ferrero",
            "display_name": "Nate Ferrero",
            "team": "T5TCAFTA9",
            "name": "nateferrero",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652265442.496969",
        "parent_user_id": "U03E03MNL3V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mrci",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I love so much the idea of being able to create 'objects' or 'values' and just store them on my desktop. The idea of saving a number or value as an object with a name makes so much sense to me!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03ELMTAZNY",
        "type": "message",
        "ts": "1652717158.640199",
        "edited": {
            "user": "U03ELMTAZNY",
            "ts": "1652717426.000000"
        },
        "client_msg_id": "c441a568-a939-4ebd-84d2-b77fd5e634e3",
        "text": "I hope I'm not bikeshedding if I recommend that you increase the overall text contrast of that page. Especially the red on black in the sample code and output image will be invisible <https:\/\/accessibility.psu.edu\/color\/colorvisiondetails\/#:~:text=Why%20Red%2FBlack%20Can%20Be,should%20be%20avoided%20whenever%20possible.|to many people>. And if you add `white-space: pre` to your textarea you'll ensure that lines won't wrap.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g260bf69df1a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/260bf69df1a4837da04997018cdc4101.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Fabian",
            "real_name": "Fabian Iwand",
            "display_name": "Fabian Iwand",
            "team": "T5TCAFTA9",
            "name": "slack.com",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652716973.932379",
        "parent_user_id": "U035VS7E01K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ugBx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I hope I'm not bikeshedding if I recommend that you increase the overall text contrast of that page. Especially the red on black in the sample code and output image will be invisible "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/accessibility.psu.edu\/color\/colorvisiondetails\/#:~:text=Why%20Red%2FBlack%20Can%20Be,should%20be%20avoided%20whenever%20possible.",
                                "text": "to many people"
                            },
                            {
                                "type": "text",
                                "text": ". And if you add "
                            },
                            {
                                "type": "text",
                                "text": "white-space: pre",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to your textarea you'll ensure that lines won't wrap."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heartbeat",
                "users": [
                    "U035VS7E01K"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U035VS7E01K",
        "type": "message",
        "ts": "1652717424.566729",
        "client_msg_id": "c5254ea8-dee5-42c3-a34e-e11134214a5f",
        "text": "Thank you so much for the feedback <@U03ELMTAZNY>! I've deployed your suggestions",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d27d25186ce7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-07\/3202786935795_d27d25186ce74ff4d732_72.jpg",
            "first_name": "Nate",
            "real_name": "Nate Ferrero",
            "display_name": "Nate Ferrero",
            "team": "T5TCAFTA9",
            "name": "nateferrero",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652716973.932379",
        "parent_user_id": "U035VS7E01K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cmcq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you so much for the feedback "
                            },
                            {
                                "type": "user",
                                "user_id": "U03ELMTAZNY"
                            },
                            {
                                "type": "text",
                                "text": "! I've deployed your suggestions"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03ELMTAZNY",
        "type": "message",
        "ts": "1652717448.611149",
        "client_msg_id": "a282491d-366d-4e1c-8b6e-16f874ff975a",
        "text": "Much better, thanks! :sweat_smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g260bf69df1a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/260bf69df1a4837da04997018cdc4101.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Fabian",
            "real_name": "Fabian Iwand",
            "display_name": "Fabian Iwand",
            "team": "T5TCAFTA9",
            "name": "slack.com",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652716973.932379",
        "parent_user_id": "U035VS7E01K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nVz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Much better, thanks! "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "U035VS7E01K"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1652717717.486929",
        "client_msg_id": "e86ce7db-6f71-4b3b-bfe1-9e0a4f72c536",
        "text": "Don't the long multi-line and blocks hinder read-aloud-ability? I can imagine listening on the phone and having to periodically ask, \"how many quotes is that?\"\n\nI didn't design <https:\/\/github.com\/akkartik\/mu|https:\/\/github.com\/akkartik\/mu> to be read aloud, but now that I think about it, it feels a bit nicer to read aloud since statements really occupy a single line and are therefore constrained to be short. The cost: lots more temporary variable names, so you'd have to ensure they're don't sound too similar to each other.\n\nHave you considered creating just a style of JavaScript that is convenient to read aloud?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652716973.932379",
        "parent_user_id": "U035VS7E01K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1uQu9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Don't the long multi-line and blocks hinder read-aloud-ability? I can imagine listening on the phone and having to periodically ask, \"how many quotes is that?\"\n\nI didn't design "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/akkartik\/mu",
                                "text": "https:\/\/github.com\/akkartik\/mu"
                            },
                            {
                                "type": "text",
                                "text": " to be read aloud, but now that I think about it, it feels a bit nicer to read aloud since statements really occupy a single line and are therefore constrained to be short. The cost: lots more temporary variable names, so you'd have to ensure they're don't sound too similar to each other.\n\nHave you considered creating just a style of JavaScript that is convenient to read aloud?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03ELMTAZNY",
        "type": "message",
        "ts": "1652718100.950089",
        "edited": {
            "user": "U03ELMTAZNY",
            "ts": "1652718240.000000"
        },
        "client_msg_id": "3829353c-c95d-4db6-b203-5814e69aa682",
        "text": "I'm curious if you've given thought to the treatment of camelCase words. For example, in `createElement` do you consider the function to be known to the receiving party so that any ambiguity would be acceptable? Or did you use a specific diction in the past?\n\n<https:\/\/stackoverflow.com\/questions\/44378834\/how-can-i-camelcase-a-phrase-with-dragon-naturallyspeakings-advanced-scripting|Dragon NS> for example seems to require post editing commands, which doesn't seem like a reasonable workaround for natural language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g260bf69df1a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/260bf69df1a4837da04997018cdc4101.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Fabian",
            "real_name": "Fabian Iwand",
            "display_name": "Fabian Iwand",
            "team": "T5TCAFTA9",
            "name": "slack.com",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652716973.932379",
        "parent_user_id": "U035VS7E01K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sCsM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm curious if you've given thought to the treatment of camelCase words. For example, in "
                            },
                            {
                                "type": "text",
                                "text": "createElement",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " do you consider the function to be known to the receiving party so that any ambiguity would be acceptable? Or did you use a specific diction in the past?\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/stackoverflow.com\/questions\/44378834\/how-can-i-camelcase-a-phrase-with-dragon-naturallyspeakings-advanced-scripting",
                                "text": "Dragon NS"
                            },
                            {
                                "type": "text",
                                "text": " for example seems to require post editing commands, which doesn't seem like a reasonable workaround for natural language."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03ELMTAZNY",
        "type": "message",
        "ts": "1652718647.520449",
        "edited": {
            "user": "U03ELMTAZNY",
            "ts": "1652718772.000000"
        },
        "client_msg_id": "1617c46a-349d-486d-8834-0521e99c0747",
        "text": "(Perhaps all special characters should be aliased to <https:\/\/en.wikipedia.org\/wiki\/List_of_onomatopoeias|onomatopoeias> like \"Pow\" and \"Whoosh\" ... :grimacing:)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g260bf69df1a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/260bf69df1a4837da04997018cdc4101.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Fabian",
            "real_name": "Fabian Iwand",
            "display_name": "Fabian Iwand",
            "team": "T5TCAFTA9",
            "name": "slack.com",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652716973.932379",
        "parent_user_id": "U035VS7E01K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KJNK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Perhaps all special characters should be aliased to "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/List_of_onomatopoeias",
                                "text": "onomatopoeias"
                            },
                            {
                                "type": "text",
                                "text": " like \"Pow\" and \"Whoosh\" ... "
                            },
                            {
                                "type": "emoji",
                                "name": "grimacing",
                                "unicode": "1f62c"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "grin",
                "users": [
                    "U035VS7E01K"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGRG57D8C",
        "type": "message",
        "ts": "1652722141.447769",
        "client_msg_id": "a006f6e6-63ad-4aa6-b2a4-eb5e905e7655",
        "text": "I'm working on a unification of programming languages, databases and network protocols by starting with the serialization.\n<https:\/\/github.com\/bintoca\/dbuf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3b5bc611c34",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d3b5bc611c34e80ce45f445158f22745.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "",
            "real_name": "Alex Thompson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "pierogitus",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652722141.447769",
        "reply_count": 10,
        "reply_users_count": 3,
        "latest_reply": "1652814985.804689",
        "reply_users": [
            "U03DNFDFYDA",
            "UGRG57D8C",
            "U02E4DAQGSZ"
        ],
        "replies": [
            {
                "user": "U03DNFDFYDA",
                "ts": "1652745710.699839"
            },
            {
                "user": "UGRG57D8C",
                "ts": "1652752677.238959"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1652782389.625669"
            },
            {
                "user": "U03DNFDFYDA",
                "ts": "1652803840.397409"
            },
            {
                "user": "UGRG57D8C",
                "ts": "1652810135.265559"
            },
            {
                "user": "UGRG57D8C",
                "ts": "1652810197.159599"
            },
            {
                "user": "U03DNFDFYDA",
                "ts": "1652811248.649309"
            },
            {
                "user": "UGRG57D8C",
                "ts": "1652812536.435039"
            },
            {
                "user": "U03DNFDFYDA",
                "ts": "1652812602.536159"
            },
            {
                "user": "UGRG57D8C",
                "ts": "1652814985.804689"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k08",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm working on a unification of programming languages, databases and network protocols by starting with the serialization.\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/bintoca\/dbuf"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U035VS7E01K"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U035VS7E01K",
        "type": "message",
        "ts": "1652723387.212429",
        "client_msg_id": "a647b7f2-0c87-415e-b776-98afc5d4015c",
        "text": "<@U03ELMTAZNY> I'd almost rather enforce everything be lowercase as far as language keywords go (but symbol names and strings should be able to contain any character)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d27d25186ce7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-07\/3202786935795_d27d25186ce74ff4d732_72.jpg",
            "first_name": "Nate",
            "real_name": "Nate Ferrero",
            "display_name": "Nate Ferrero",
            "team": "T5TCAFTA9",
            "name": "nateferrero",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652716973.932379",
        "parent_user_id": "U035VS7E01K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JBs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U03ELMTAZNY"
                            },
                            {
                                "type": "text",
                                "text": " I'd almost rather enforce everything be lowercase as far as language keywords go (but symbol names and strings should be able to contain any character)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U035VS7E01K",
        "type": "message",
        "ts": "1652728359.744809",
        "client_msg_id": "6cb37b19-916c-42f9-878a-a24ed383add5",
        "text": "<@UCUSW7WVD> thanks for calling that out - note that putting many lines on one line with ' is optional, so the following are identical:\n\n```at foo ' add 40 ' log```\nand\n```at foo\nadd 40\nlog```\nso you can trade vertical and horizontal space when writing the language\n\nI will check out Mu - about to catch a :airplane:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d27d25186ce7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-07\/3202786935795_d27d25186ce74ff4d732_72.jpg",
            "first_name": "Nate",
            "real_name": "Nate Ferrero",
            "display_name": "Nate Ferrero",
            "team": "T5TCAFTA9",
            "name": "nateferrero",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652716973.932379",
        "parent_user_id": "U035VS7E01K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "odP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " thanks for calling that out - note that putting many lines on one line with ' is optional, so the following are identical:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "at foo ' add 40 ' log"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "at foo\nadd 40\nlog"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nso you can trade vertical and horizontal space when writing the language\n\nI will check out Mu - about to catch a "
                            },
                            {
                                "type": "emoji",
                                "name": "airplane",
                                "unicode": "2708-fe0f"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U035VS7E01K",
        "type": "message",
        "ts": "1652728387.526749",
        "client_msg_id": "844b0db1-3172-4a91-a53e-b84e243e24bf",
        "text": "The quotes as the start of a block are not optional, however",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d27d25186ce7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-07\/3202786935795_d27d25186ce74ff4d732_72.jpg",
            "first_name": "Nate",
            "real_name": "Nate Ferrero",
            "display_name": "Nate Ferrero",
            "team": "T5TCAFTA9",
            "name": "nateferrero",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652716973.932379",
        "parent_user_id": "U035VS7E01K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Vu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The quotes as the start of a block are not optional, however"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "I am adding some basic types to my Lisperanto project [ <https:\/\/uprun.github.io\/lisperanto\/> ], some one asked me recently how would I represent booleans, and now I have an answer: It is a record with type “boolean” and value either “true” or “false” in terms of JavaScript it is:\n`{ type: \"boolean\",`\n`value: \"true\" }`",
        "files": [
            {
                "id": "F03FRMM5RHA",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U02JQA5FY5C",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lJEfP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am adding some basic types to my Lisperanto project [ "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/uprun.github.io\/lisperanto\/"
                            },
                            {
                                "type": "text",
                                "text": " ], some one asked me recently how would I represent booleans, and now I have an answer: It is a record with type “boolean” and value either “true” or “false” in terms of JavaScript it is:\n"
                            },
                            {
                                "type": "text",
                                "text": "{ type: \"boolean\",",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "value: \"true\" }",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1652737034.986039",
        "edited": {
            "user": "U02JQA5FY5C",
            "ts": "1652737182.000000"
        },
        "client_msg_id": "6180822f-315e-4a00-9356-38d3e9ff9b76",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1652745710.699839",
        "client_msg_id": "221e4546-3aa7-4096-9147-f1fd9d1eaa4d",
        "text": "if only serialization were one of the hard parts :confused:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652722141.447769",
        "parent_user_id": "UGRG57D8C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cr0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if only serialization were one of the hard parts "
                            },
                            {
                                "type": "emoji",
                                "name": "confused",
                                "unicode": "1f615"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGRG57D8C",
        "type": "message",
        "ts": "1652752677.238959",
        "client_msg_id": "08e99fc6-732f-4e05-8271-1ec013cccd1a",
        "text": "<@U03DNFDFYDA> Agreed its not the hard part but I feel leaving it to the end breeds fragmentation and becomes an obstacle to interoperability",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3b5bc611c34",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d3b5bc611c34e80ce45f445158f22745.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "",
            "real_name": "Alex Thompson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "pierogitus",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652722141.447769",
        "parent_user_id": "UGRG57D8C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SYp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U03DNFDFYDA"
                            },
                            {
                                "type": "text",
                                "text": " Agreed its not the hard part but I feel leaving it to the end breeds fragmentation and becomes an obstacle to interoperability"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03B14DUZSA",
        "type": "message",
        "ts": "1652756751.479909",
        "client_msg_id": "10c07cca-adf4-42af-b008-7490ec8e1652",
        "text": "The quotes as semicolons seem to hurt readoutability - you would want that boundary to either be uniform, saying \"ret\" each time eg, or best yet unnecessary by making statements expressions that are bounded in arity. I keep getting confused by the structure of it as the semantics of the at\/call\/push paradigm are nearly inside out from the standard ALGOL style procedure call. The simplicity of your approach is very refreshing compared to JS; however, I only wish it could sit under it rather than above it.\n\nUltimately, I think the most \"readable\" languages look like <https:\/\/en.wikipedia.org\/wiki\/HyperTalk> or Ruby - quite verbose, though with linguistic affordances carrying a lot of context. We have communication hard-wired into our brains, but inventing languages that take advantage of this is more of an art than a science. The more whoever is learning it knows a different type of language, the more the impedance mismatches between them will trip them up compared to an absolute beginner.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7358a16bdea5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-11-02\/4314864832259_7358a16bdea535168748_72.png",
            "first_name": "Riley",
            "real_name": "Riley Stewart",
            "display_name": "Riley Stewart",
            "team": "T5TCAFTA9",
            "name": "me1307",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652716973.932379",
        "parent_user_id": "U035VS7E01K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ux+YD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The quotes as semicolons seem to hurt readoutability - you would want that boundary to either be uniform, saying \"ret\" each time eg, or best yet unnecessary by making statements expressions that are bounded in arity. I keep getting confused by the structure of it as the semantics of the at\/call\/push paradigm are nearly inside out from the standard ALGOL style procedure call. The simplicity of your approach is very refreshing compared to JS; however, I only wish it could sit under it rather than above it.\n\nUltimately, I think the most \"readable\" languages look like "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/HyperTalk"
                            },
                            {
                                "type": "text",
                                "text": " or Ruby - quite verbose, though with linguistic affordances carrying a lot of context. We have communication hard-wired into our brains, but inventing languages that take advantage of this is more of an art than a science. The more whoever is learning it knows a different type of language, the more the impedance mismatches between them will trip them up compared to an absolute beginner."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03E03MNL3V",
        "type": "message",
        "ts": "1652761192.062499",
        "client_msg_id": "68A9CB12-5905-4757-A68C-CE75518D4B2D",
        "text": "I'm glad you found it helpful.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ed439042059",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-05-12\/3510607958037_8ed439042059d9927ccd_72.jpg",
            "first_name": "Ryo",
            "real_name": "Ryo Hirayama",
            "display_name": "Ryo Hirayama",
            "team": "T5TCAFTA9",
            "name": "ryo12redstone",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652265442.496969",
        "parent_user_id": "U03E03MNL3V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wrl5p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm glad you found it helpful."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]