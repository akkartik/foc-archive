[
    {
        "user": "U06SS0DHZD1",
        "type": "message",
        "ts": "1743663696.789849",
        "edited": {
            "user": "U06SS0DHZD1",
            "ts": "1743663858.000000"
        },
        "client_msg_id": "d505a4af-5319-4487-ad46-9569bc718a79",
        "text": "C++ is value oriented and low level. Passing a container into a function creates a copy of that container (unless it's passed as a pointer). So the \"reference vs value\" gotcha can be mostly avoided while teaching. There is a sea of other gotchas in the language though.\n\nIMO the value vs reference may not be such a big issue if explained directly through exercises. A couple tasks where the student has to directly experience how values and references behave should be enough to form a correct mental model. May be easier than chosing a different language altogether.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "287ba5559ee1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-04-04\/6922823105585_287ba5559ee1cedd6b98_72.png",
            "first_name": "Marek",
            "real_name": "Marek Rogalski",
            "display_name": "maf",
            "team": "T5TCAFTA9",
            "name": "mafikpl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2Pepn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "C++ is value oriented and low level. Passing a container into a function creates a copy of that container (unless it's passed as a pointer). So the \"reference vs value\" gotcha can be mostly avoided while teaching. There is a sea of other gotchas in the language though.\n\nIMO the value vs reference may not be such a big issue if explained directly through exercises. A couple tasks where the student has to directly experience how values and references behave should be enough to form a correct mental model. May be easier than chosing a different language altogether."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1743664412.331849",
        "client_msg_id": "9ba8dbdb-4a3a-4729-9b06-9f79de684b63",
        "text": "does <https:\/\/pyret.org\/> check any of your boxes?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "attachments": [
            {
                "from_url": "https:\/\/pyret.org\/",
                "thumb_url": "http:\/\/www.pyret.org\/img\/pyret-logo.png",
                "thumb_width": 501,
                "thumb_height": 488,
                "service_icon": "https:\/\/pyret.org\/img\/pyret-icon.png",
                "id": 1,
                "original_url": "https:\/\/pyret.org\/",
                "fallback": "The Pyret Programming Language",
                "text": "...",
                "title": "The Pyret Programming Language",
                "title_link": "https:\/\/pyret.org\/",
                "service_name": "pyret.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jya7h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "does "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/pyret.org\/"
                            },
                            {
                                "type": "text",
                                "text": " check any of your boxes?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1743667257.076089",
        "client_msg_id": "1edcc164-1333-455a-89fa-0de71a7ff0bd",
        "text": "When I started advocating and teaching Python to scientists, around 1996, I tried to avoid the hard parts indeed. But not for long. After a few years, I covered the memory model in the very first session, to get that out of the way. It worked well, and I think it was helpful in particular for the many participants who grew up with Fortran.\nThat said, I never covered the more subtle gotchas of Python, such as the messy scoping rules.\n\nI am ambivalent about teaching languages that avoid thorny issues but don't aim to be usable in real life. Whatever language is used for teaching should also permit learners to solve real problems that matter to them (though not necessarily to get a job in the software industry).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d5GaH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When I started advocating and teaching Python to scientists, around 1996, I tried to avoid the hard parts indeed. But not for long. After a few years, I covered the memory model in the very first session, to get that out of the way. It worked well, and I think it was helpful in particular for the many participants who grew up with Fortran.\nThat said, I never covered the more subtle gotchas of Python, such as the messy scoping rules.\n\nI am ambivalent about teaching languages that avoid thorny issues but don't aim to be usable in real life. Whatever language is used for teaching should also permit learners to solve real problems that matter to them (though not necessarily to get a job in the software industry)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "U05UK5T7LPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1743669610.818729",
        "client_msg_id": "c679aa97-024a-4e0a-ab7d-cb22e3f67d19",
        "text": "What isn't a gotcha in Python? lol. Cyclic imports, WTF is a `__init__.py` , imports are executing. setup.py is executed. package resolution. Nothing can be trusted due to monkey patching (which I like BTW). `from {foo} import` vs. `import foo` import-by-reference vs  import-by-value subtleties. module unloading. white space. Forgetting an f in a multi-line f string (I caused a prod outage coz of that, it is also unlintable). Can't put functions in a string interpolation. Single line lambdas only (?!).  the GIL. async. multi-processing. the list is endless with that language.\nThe default value being persistent in args is a steady cause of bugs which we can at least lint around. The memory model is not not my main source of problems though.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A4GR4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What isn't a gotcha in Python? lol. Cyclic imports, WTF is a "
                            },
                            {
                                "type": "text",
                                "text": "_",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "init",
                                "style": {
                                    "italic": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_.py",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " , imports are executing. setup.py is executed. package resolution. Nothing can be trusted due to monkey patching (which I like BTW). "
                            },
                            {
                                "type": "text",
                                "text": "from {foo} import",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vs. "
                            },
                            {
                                "type": "text",
                                "text": "import foo",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " import-by-reference vs  import-by-value subtleties. module unloading. white space. Forgetting an f in a multi-line f string (I caused a prod outage coz of that, it is also unlintable). Can't put functions in a string interpolation. Single line lambdas only (?!).  the GIL. async. multi-processing. the list is endless with that language.\nThe default value being persistent in args is a steady cause of bugs which we can at least lint around. The memory model is not not my main source of problems though."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U05UK5T7LPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U067RCH8NB0",
        "type": "message",
        "ts": "1743684629.405769",
        "edited": {
            "user": "U067RCH8NB0",
            "ts": "1743684644.000000"
        },
        "client_msg_id": "b6617bd8-2ec7-4d28-886e-8591d29901c6",
        "text": "You _can_ write C++ in a value-oriented way, but you have to internalize a _lot_ of things about it to know how to do that consistently and effectively, so it’s a poor fit for the pedagogical context here I think… but folks with strong positive experiences using C++ in that value-oriented way as well as a lot of time using Swift (which obviously draws a _lot_ on the “C + ARC” model) are behind <https:\/\/www.hylo-lang.org|Hylo>, which might be interesting to poke at here. _Caveat emptor_: I haven’t used it, just read the docs, and it’s still quite early!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0f75aaf019c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0f75aaf019cc59e83fd3321b64a36508.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Chris",
            "real_name": "Chris Krycho",
            "display_name": "Chris Krycho",
            "team": "T5TCAFTA9",
            "name": "hello870",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "attachments": [
            {
                "from_url": "https:\/\/www.hylo-lang.org\/",
                "id": 1,
                "original_url": "https:\/\/www.hylo-lang.org",
                "fallback": "Hylo",
                "text": "The Hylo Programming Language",
                "title": "Hylo",
                "title_link": "https:\/\/www.hylo-lang.org\/",
                "service_name": "hylo-lang.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3FqFk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You "
                            },
                            {
                                "type": "text",
                                "text": "can",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " write C++ in a value-oriented way, but you have to internalize a "
                            },
                            {
                                "type": "text",
                                "text": "lot",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of things about it to know how to do that consistently and effectively, so it’s a poor fit for the pedagogical context here I think… but folks with strong positive experiences using C++ in that value-oriented way as well as a lot of time using Swift (which obviously draws a "
                            },
                            {
                                "type": "text",
                                "text": "lot",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " on the “C + ARC” model) are behind "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.hylo-lang.org",
                                "text": "Hylo"
                            },
                            {
                                "type": "text",
                                "text": ", which might be interesting to poke at here. "
                            },
                            {
                                "type": "text",
                                "text": "Caveat emptor",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": I haven’t used it, just read the docs, and it’s still quite early!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1743688300.994929",
        "client_msg_id": "827688b0-47c0-4d06-8ad4-44967783a03d",
        "text": "<@U02E4DAQGSZ> Your list contains mostly features that easily become problems in practice when developing large programs. That's not the same as features that require a precise mental model. It's easy to see why the f matters in f-strings, but that doesn't protect you from forgetting it.\n\nGood language design should of course avoid both types of issues.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "434tO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02E4DAQGSZ"
                            },
                            {
                                "type": "text",
                                "text": " Your list contains mostly features that easily become problems in practice when developing large programs. That's not the same as features that require a precise mental model. It's easy to see why the f matters in f-strings, but that doesn't protect you from forgetting it.\n\nGood language design should of course avoid both types of issues."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1743689458.220609",
        "client_msg_id": "99FDC742-A7F5-4B12-A8DD-7D0500797E8A",
        "text": "I’m thinking also in terms of curriculum. Going from python in intro straight to java then C seems like the wrong order because in a way, Python’s more complicated and unique than Java than C in that everything’s a reference, then most things are references \/ some are values, then everything’s a value in C (and pointers are values that can refer to other values).\n\nIt’s not a giant issue if you do handwaving and don’t explain how things work, but if you try to explain Python’s model for names\/labels, I think it can cause friction if then trying to learn general-purpose things or other languages. The fact that python is all references\/no copying is just a little weird.\n\nI like python for a lot of things, but not for this aspect (and not for its lack of graphics and web support).\n\nFor me it’s major because stylistically, I like not to handwave.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Eo3F0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m thinking also in terms of curriculum. Going from python in intro straight to java then C seems like the wrong order because in a way, Python’s more complicated and unique than Java than C in that everything’s a reference, then most things are references \/ some are values, then everything’s a value in C (and pointers are values that can refer to other values).\n\nIt’s not a giant issue if you do handwaving and don’t explain how things work, but if you try to explain Python’s model for names\/labels, I think it can cause friction if then trying to learn general-purpose things or other languages. The fact that python is all references\/no copying is just a little weird.\n\nI like python for a lot of things, but not for this aspect (and not for its lack of graphics and web support).\n\nFor me it’s major because stylistically, I like not to handwave."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1743696562.102709",
        "client_msg_id": "D3EBA42B-C354-4B62-B44D-95EA3D489E41",
        "text": "Racket is a great teaching language with loads of pedagogical material available. If you hate s-expressions, then Pyret (mentioned above) and Rombus are very good choices. These languages have all been designed by people with decades of teaching programming and researching what works for language learners.\n\n<https:\/\/rhombus-lang.org|https:\/\/rhombus-lang.org>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V8ZsY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Racket is a great teaching language with loads of pedagogical material available. If you hate s-expressions, then Pyret (mentioned above) and Rombus are very good choices."
                            },
                            {
                                "type": "text",
                                "text": " These languages have all been designed by people with decades of teaching programming and researching what works for language learners.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/rhombus-lang.org",
                                "text": "https:\/\/rhombus-lang.org"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC",
                    "UEZQXJK9V"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1743699546.806559",
        "client_msg_id": "90BD5B74-F42A-4856-8384-410C7F6F2EDD",
        "text": "btw I don’t have a way to change the language since I don’t design the university curriculum. It’s more me thinking out-loud. I saw racket before, it’s cool.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z2cfp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "btw I don’t have a way to change the language since I don’t design the university curriculum. It’s more me thinking out-loud. I saw racket before, it’s cool."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0282PL61U1",
        "type": "message",
        "ts": "1743699609.044449",
        "client_msg_id": "0f3a5d60-412d-48a7-bdab-e6a3fc66ae67",
        "text": "I would still recommend C but without the stdlib ... perhaps an alternate stdlib library.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8f365fd896e9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529753983250_8f365fd896e9c8f573b5_72.jpg",
            "first_name": "xyzzy",
            "real_name": "xyzzy",
            "display_name": "xyzzy",
            "team": "T5TCAFTA9",
            "name": "moodyharsh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1czYg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would still recommend C but without the stdlib ... perhaps an alternate stdlib library."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1743699630.386399",
        "client_msg_id": "941B170B-E65F-4583-BE02-C26B908F3897",
        "text": "That’s what CS50 does",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KG9Oj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That’s what CS50 does"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1743699664.528169",
        "client_msg_id": "D0351C39-9452-426B-94C0-524C10862EC4",
        "text": "I’d do that and maybe provide wrappers around regular stdlib so people could check the innards if they wanted.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nqB10",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’d do that and maybe provide wrappers around regular stdlib so people could check the innards if they wanted."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0282PL61U1",
        "type": "message",
        "ts": "1743699936.876709",
        "client_msg_id": "a60805b4-2c9d-499b-8758-099e55b223db",
        "text": "Perhaps add  a defer as well. I like D .... its just that the problem with  D is C library people write horrible APIs which abuse the C preprocessor. I hate C preprocessor .... people do some scary stuff with it, which is always intimidating for beginners.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8f365fd896e9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529753983250_8f365fd896e9c8f573b5_72.jpg",
            "first_name": "xyzzy",
            "real_name": "xyzzy",
            "display_name": "xyzzy",
            "team": "T5TCAFTA9",
            "name": "moodyharsh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+C3Xk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Perhaps add  a defer as well. I like D .... its just that the problem with  D is C library people write horrible APIs which abuse the C preprocessor. I hate C preprocessor .... people do some scary stuff with it, which is always intimidating for beginners."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1743699951.427309",
        "client_msg_id": "760523CA-78CF-4B61-AC26-C415DA0788EC",
        "text": "Have you seen Odin?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/Vce8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you seen Odin?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0282PL61U1",
        "type": "message",
        "ts": "1743699983.572169",
        "client_msg_id": "a89bd063-260c-4cbc-a9e8-1008d96be58e",
        "text": "Yeah all of them have the .... need C to do anything useful problem.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8f365fd896e9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529753983250_8f365fd896e9c8f573b5_72.jpg",
            "first_name": "xyzzy",
            "real_name": "xyzzy",
            "display_name": "xyzzy",
            "team": "T5TCAFTA9",
            "name": "moodyharsh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6ZrOC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah all of them have the .... need C to do anything useful problem."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0282PL61U1",
        "type": "message",
        "ts": "1743699990.833399",
        "client_msg_id": "9c9b6e09-60c4-4807-a73c-e9c805b45346",
        "text": "except go",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8f365fd896e9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529753983250_8f365fd896e9c8f573b5_72.jpg",
            "first_name": "xyzzy",
            "real_name": "xyzzy",
            "display_name": "xyzzy",
            "team": "T5TCAFTA9",
            "name": "moodyharsh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mxlTW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "except go"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1743700005.055729",
        "client_msg_id": "F7A65821-4FB9-412C-B121-4EAB853767D6",
        "text": "It’s basically what we’re talking about. Better allocator support, better imports, built-in allocator context, defer.\n\nC’s worst offsense to me is the includes and headers",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qJMZ8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s basically what we’re talking about. Better allocator support, better imports, built-in allocator context, defer.\n\nC’s worst offsense to me is the includes and headers"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1743700023.413369",
        "client_msg_id": "5E9C8437-AB3D-44F7-AFFB-3113330F7BB8",
        "text": "Actually I think Odin’s pretty good.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YH06\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Actually I think Odin’s pretty good."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0282PL61U1",
        "type": "message",
        "ts": "1743700115.825579",
        "client_msg_id": "6cc1212a-cd74-48ed-a92e-de67993b25df",
        "text": "Zig \/ Odin change the syntax way too much.\nAt best I would be happy with just changes in the declaration syntax\n\n`main(argc :int, argv :char[]) :: int`\n\nbut they change a whole lot. D is definitely more consistent.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8f365fd896e9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529753983250_8f365fd896e9c8f573b5_72.jpg",
            "first_name": "xyzzy",
            "real_name": "xyzzy",
            "display_name": "xyzzy",
            "team": "T5TCAFTA9",
            "name": "moodyharsh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EJd1G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Zig \/ Odin change the syntax way too much.\nAt best I would be happy with just changes in the declaration syntax\n\n"
                            },
                            {
                                "type": "text",
                                "text": "main(argc :int, argv :char[]) :: int",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nbut they change a whole lot. D is definitely more consistent."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0282PL61U1",
        "type": "message",
        "ts": "1743700280.767959",
        "edited": {
            "user": "U0282PL61U1",
            "ts": "1743700301.000000"
        },
        "client_msg_id": "b40734e9-90aa-4a8e-9730-8c659addbd35",
        "text": "objective C is really not a bad deal only issue with it is ... lack of win \/ linux support",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8f365fd896e9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529753983250_8f365fd896e9c8f573b5_72.jpg",
            "first_name": "xyzzy",
            "real_name": "xyzzy",
            "display_name": "xyzzy",
            "team": "T5TCAFTA9",
            "name": "moodyharsh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h1IUO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "objective C is really not a bad deal only issue with it is ... lack of win \/ linux support"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1743700427.343529",
        "edited": {
            "user": "U088999PF62",
            "ts": "1743700451.000000"
        },
        "client_msg_id": "398C838C-6610-49BE-A145-DE4C33F7C38D",
        "text": "I think C’s syntax is okay except the square brackets in declaring an array and the includes \/ headers are BLA. But yeah. A C with a custom course stdlib would be enough. Even if the allocation \/ deallocation straegy is not super efficient, having something automatic in-place could help. Just a big arena.\n\nOr a Python with less magic.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wlRmw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think C’s syntax is okay except the square brackets in declaring an array and the includes \/ headers are BLA. But yeah. A C with a custom course stdlib would be enough. Even if the allocation \/ deallocation straegy is not super efficient, having something automatic in-place could help. Just a big arena."
                            },
                            {
                                "type": "text",
                                "text": "\n\nOr a Python with less magic."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0282PL61U1",
        "type": "message",
        "ts": "1743700604.986719",
        "client_msg_id": "da2b45b2-040e-4c27-9cbe-7f6ff301a383",
        "text": "C + Lua is a good combo as the world of warcarft players might pay more a attention in class I guess :grin:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8f365fd896e9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529753983250_8f365fd896e9c8f573b5_72.jpg",
            "first_name": "xyzzy",
            "real_name": "xyzzy",
            "display_name": "xyzzy",
            "team": "T5TCAFTA9",
            "name": "moodyharsh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6ZUks",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "C + Lua is a good combo as the world of warcarft players might pay more a attention in class I guess "
                            },
                            {
                                "type": "emoji",
                                "name": "grin",
                                "unicode": "1f601"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1743700633.483729",
        "edited": {
            "user": "U088999PF62",
            "ts": "1743700648.000000"
        },
        "client_msg_id": "14AA44A9-80A8-4988-A02D-B17B4AD31D16",
        "text": "Realistically just C with classes (barebones C++ with methods and basic templates)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OpLfI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Realistically just C with classes (barebones C++"
                            },
                            {
                                "type": "text",
                                "text": " with methods and basic templates)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1743747196.577179",
        "client_msg_id": "6b7f5003-5e19-4932-aef3-9807aa134125",
        "text": "Boosting <@U013ZLJARC7>’s recommendation for Racket. It has not only extensive teaching experience behind it, but it is also very usable in real life. Not for all domains, of course. Nothing is. But it's not just a toy language that you need to move on from rapidly.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2ZqIt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Boosting "
                            },
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": "’s recommendation for Racket. It has not only extensive teaching experience behind it, but it is also very usable in real life. Not for all domains, of course. Nothing is. But it's not just a toy language that you need to move on from rapidly."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]