[
    {
        "user": "U05S2UGBHU1",
        "type": "message",
        "ts": "1734684370.776359",
        "client_msg_id": "D677D270-01DC-4337-A48C-B81137E05499",
        "text": "The bytecode version of the language defined in Bob Nystrom’s _Crafting Interpreters_ does this.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5d7e31d5613c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-09\/8018418277633_5d7e31d5613cd1abbe3c_72.jpg",
            "first_name": "Alex",
            "real_name": "Alex North",
            "display_name": "Alex North",
            "team": "T5TCAFTA9",
            "name": "alex490",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732975789.778179",
        "parent_user_id": "U05CF6KLESV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tPUf6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The bytecode version of the language defined in Bob Nystrom’s "
                            },
                            {
                                "type": "text",
                                "text": "Crafting Interpreters",
                                "style": {
                                    "bold": false,
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " does this."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05S2UGBHU1",
        "type": "message",
        "ts": "1734684533.053209",
        "client_msg_id": "7A8425F6-5B0B-4C5E-9D78-D73E95CB589F",
        "text": "Does anyone know of any DSLs or similar that are specific to graph\/chart drawing? I.e. a language that defines a function from data to image, specialised toward visualising data?\n\nIf not, what’s the closest thing? E.g. is there a JS chart-drawing library with an API that feels close to a DSL?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5d7e31d5613c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-09\/8018418277633_5d7e31d5613cd1abbe3c_72.jpg",
            "first_name": "Alex",
            "real_name": "Alex North",
            "display_name": "Alex North",
            "team": "T5TCAFTA9",
            "name": "alex490",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734684533.053209",
        "reply_count": 7,
        "reply_users_count": 6,
        "latest_reply": "1734770207.563439",
        "reply_users": [
            "UBN9AFS0N",
            "U07BD7U4S4R",
            "U02E4DAQGSZ",
            "UJBAJNFLK",
            "UDCLA1HU4",
            "U05S2UGBHU1"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1734685016.432549"
            },
            {
                "user": "U07BD7U4S4R",
                "ts": "1734688991.436259"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1734696234.990589"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1734715077.410869"
            },
            {
                "user": "UDCLA1HU4",
                "ts": "1734739998.619769"
            },
            {
                "user": "U05S2UGBHU1",
                "ts": "1734769730.608719"
            },
            {
                "user": "U07BD7U4S4R",
                "ts": "1734770207.563439"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1VqVz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does anyone know of any DSLs or similar that are specific to graph\/chart drawing? I.e. a language that defines a function from data to image, specialised toward visualising data?\n\nIf not, what’s the closest thing? E.g. is there a JS chart-drawing library with an API that feels close to a DSL?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1734685016.432549",
        "client_msg_id": "0cc873ec-7013-444d-a3f8-9fdc05d742ab",
        "text": "<https:\/\/vega.github.io\/> and <https:\/\/vega.github.io\/vega-lite\/> count?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734684533.053209",
        "parent_user_id": "U05S2UGBHU1",
        "attachments": [
            {
                "image_url": "https:\/\/vega.github.io\/images\/vg.png",
                "image_width": 550,
                "image_height": 369,
                "image_bytes": 185643,
                "from_url": "https:\/\/vega.github.io\/",
                "service_icon": "https:\/\/vega.github.io\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/vega.github.io\/",
                "fallback": "Vega: Vega: A Visualization Grammar",
                "text": "Vega is a declarative format for creating, saving, and sharing visualization designs. With Vega, visualizations are described in JSON, and generate interactive views using either HTML5 Canvas or SVG.",
                "title": "Vega: A Visualization Grammar",
                "title_link": "https:\/\/vega.github.io\/",
                "service_name": "Vega"
            },
            {
                "from_url": "https:\/\/vega.github.io\/vega-lite\/",
                "service_icon": "https:\/\/vega.github.io\/favicon.ico",
                "id": 2,
                "original_url": "https:\/\/vega.github.io\/vega-lite\/",
                "fallback": "Vega-Lite: A High-Level Grammar of Interactive Graphics",
                "text": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
                "title": "A High-Level Grammar of Interactive Graphics",
                "title_link": "https:\/\/vega.github.io\/vega-lite\/",
                "service_name": "Vega-Lite"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bBNiJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/vega.github.io\/"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/vega.github.io\/vega-lite\/"
                            },
                            {
                                "type": "text",
                                "text": " count?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U07BD7U4S4R",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U07BD7U4S4R",
        "type": "message",
        "ts": "1734688991.436259",
        "edited": {
            "user": "U07BD7U4S4R",
            "ts": "1734689187.000000"
        },
        "client_msg_id": "e7dd0c2c-8304-4eaf-af2e-85803fd43cdd",
        "text": "vega has json-schemas for its configs, but those are huge\n<https:\/\/vega.github.io\/schema\/vega-lite\/v4.json>\nso if you fancy some clojure, I got draft lib <https:\/\/github.com\/akovantsev\/json-schema-to-clojure-spec>\nspecifically to explore those schemas in repl\n(I don't remember if it handled schemas of such size though :))",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d0343f70ca57",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-04\/7377091009748_d0343f70ca57c18eeb41_72.png",
            "first_name": "misha",
            "real_name": "misha",
            "display_name": "misha",
            "team": "T5TCAFTA9",
            "name": "misha.akovantsev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734684533.053209",
        "parent_user_id": "U05S2UGBHU1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lb3gi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "vega has json-schemas for its configs, but those are huge\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/vega.github.io\/schema\/vega-lite\/v4.json"
                            },
                            {
                                "type": "text",
                                "text": "\nso if you fancy some clojure, I got draft lib "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/akovantsev\/json-schema-to-clojure-spec"
                            },
                            {
                                "type": "text",
                                "text": "\nspecifically to explore those schemas in repl\n(I don't remember if it handled schemas of such size though :))"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1734696234.990589",
        "client_msg_id": "b04bc57a-a3b9-42d0-9d25-a1389870d04c",
        "text": "vega, plot, ggplot, all based off \"grammar of graphics\" which defines a conceptual toolbox for data -&gt; pixel space.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734684533.053209",
        "parent_user_id": "U05S2UGBHU1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DhUV3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "vega, plot, ggplot, all based off \"grammar of graphics\" which defines a conceptual toolbox for data -> pixel space."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1734713588.023319",
        "client_msg_id": "5f45e6c8-b415-47ac-aa80-41ac66896919",
        "text": "I have been working with large-ish knowledge graphs on and off over the course of the year, and I keep running into the same problem... my intuition for what I have done when I modify the graph and how it will effect everything else is just dismally bad. I make what seems like will be an incremental change, and it doesn't do what I expected, or if it does, it breaks all my algorithms. This happens with other data structures, too, obviously. But with graph data it happens far more often, as in nearly always, and the time between \"it isn't working\" and \"oh, I know how I broke it\" is much longer. So I'm wondering, assuming that my experience is not unique, is there something about graphs that makes them harder to grok? The absence of a clear serialization, the absence of order, complexity of structure? Or is it a UI problem, and if I could just see what I was doing it wouldn't be so bad... Often, when I come to a particularly hard problem, I sample and visualize the graph, and learn that the previous three problems were not correctly solved. So visualization helps, but is that enough? Or is there something fundamentally inhuman about large, dense graphs?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734713588.023319",
        "reply_count": 27,
        "reply_users_count": 9,
        "latest_reply": "1736259755.497859",
        "reply_users": [
            "U08294YLWJH",
            "U02U0AS3J49",
            "UFEQUBNNT",
            "U07BD7U4S4R",
            "U018S42NMMM",
            "UN57U8V53",
            "U02E4DAQGSZ",
            "UHNEKU7J7",
            "U01AD80KMLK"
        ],
        "replies": [
            {
                "user": "U08294YLWJH",
                "ts": "1734734360.545979"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1734735784.693669"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1734740814.524289"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1734741252.109909"
            },
            {
                "user": "U07BD7U4S4R",
                "ts": "1734767439.777079"
            },
            {
                "user": "U018S42NMMM",
                "ts": "1735100761.836229"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1735103962.024699"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1735104043.918729"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1735107542.432769"
            },
            {
                "user": "U07BD7U4S4R",
                "ts": "1735134263.293849"
            },
            {
                "user": "UN57U8V53",
                "ts": "1735405251.972649"
            },
            {
                "user": "UN57U8V53",
                "ts": "1735405479.746419"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1735548475.479509"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1735584712.967259"
            },
            {
                "user": "UHNEKU7J7",
                "ts": "1736137849.237969"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1736138010.180899"
            },
            {
                "user": "UHNEKU7J7",
                "ts": "1736138066.754279"
            },
            {
                "user": "UHNEKU7J7",
                "ts": "1736138073.316079"
            },
            {
                "user": "UHNEKU7J7",
                "ts": "1736138211.485109"
            },
            {
                "user": "UHNEKU7J7",
                "ts": "1736138284.055269"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1736138343.702879"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1736171176.976739"
            },
            {
                "user": "UN57U8V53",
                "ts": "1736181836.974379"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1736183128.179289"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1736185579.489909"
            },
            {
                "user": "U01AD80KMLK",
                "ts": "1736236759.968469"
            },
            {
                "user": "UN57U8V53",
                "ts": "1736259755.497859"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fc25d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have been working with large-ish knowledge graphs on and off over the course of the year, and I keep running into the same problem... my intuition for what I have done when I modify the graph and how it will effect everything else is just dismally bad. I make what seems like will be an incremental change, and it doesn't do what I expected, or if it does, it breaks all my algorithms. This happens with other data structures, too, obviously. But with graph data it happens far more often, as in nearly always, and the time between \"it isn't working\" and \"oh, I know how I broke it\" is much longer. So I'm wondering, assuming that my experience is not unique, is there something about graphs that makes them harder to grok? The absence of a clear serialization, the absence of order, complexity of structure? Or is it a UI problem, and if I could just see what I was doing it wouldn't be so bad... Often, when I come to a particularly hard problem, I sample and visualize the graph, and learn that the previous three problems were not correctly solved. So visualization helps, but is that enough? Or is there something fundamentally inhuman about large, dense graphs?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UFEQUBNNT",
                    "U01AD80KMLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1734715077.410869",
        "client_msg_id": "1e74436b-fd46-477e-b7b7-6ff92469fefa",
        "text": "<https:\/\/graphviz.org\/|Graphviz> and <https:\/\/penrose.cs.cmu.edu\/|Penrose> are two graph DSLs that are quite different from Vega.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734684533.053209",
        "parent_user_id": "U05S2UGBHU1",
        "attachments": [
            {
                "from_url": "https:\/\/graphviz.org\/",
                "service_icon": "https:\/\/graphviz.org\/Resources\/favicon.png",
                "id": 1,
                "original_url": "https:\/\/graphviz.org\/",
                "fallback": "Graphviz",
                "text": "Please join the Graphviz forum to ask questions and discuss Graphviz.\nWhat is Graphviz? Graphviz is open source graph visualization software. Graph visualization is a way of representing structural information as diagrams of abstract graphs and networks. It has important applications in networking, bioinformatics, software engineering, database and web design, machine learning, and in visual interfaces for other technical domains.",
                "title": "Graphviz",
                "title_link": "https:\/\/graphviz.org\/",
                "service_name": "graphviz.org"
            },
            {
                "from_url": "https:\/\/penrose.cs.cmu.edu\/",
                "id": 2,
                "original_url": "https:\/\/penrose.cs.cmu.edu\/",
                "fallback": "Penrose",
                "text": "Create beautiful diagrams just by typing math notation in plain text.",
                "title": "Penrose",
                "title_link": "https:\/\/penrose.cs.cmu.edu\/",
                "service_name": "penrose.cs.cmu.edu"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hborv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/graphviz.org\/",
                                "text": "Graphviz"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/penrose.cs.cmu.edu\/",
                                "text": "Penrose"
                            },
                            {
                                "type": "text",
                                "text": " are two graph DSLs that are quite different from Vega."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thank-you",
                "users": [
                    "U05S2UGBHU1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U08294YLWJH",
        "type": "message",
        "ts": "1734734360.545979",
        "client_msg_id": "d79d7e94-9e69-4fe6-afe2-3fa545982251",
        "text": "can you give an example of issue you encountered?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "54bdcc3cea79",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-25\/8077168843205_54bdcc3cea79c3cee9ab_72.jpg",
            "first_name": "Oleksandr",
            "real_name": "Oleksandr Kryvonos",
            "display_name": "Oleksandr Kryvonos",
            "team": "T5TCAFTA9",
            "name": "oleksandr.kryvonos.od",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734713588.023319",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S5cek",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "can you give an example of issue you encountered?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U07BD7U4S4R"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1734735784.693669",
        "client_msg_id": "c469758a-a4eb-40cb-a134-b3caeb6121c0",
        "text": "In general, maybe? Like I have at least twice added edges of a different type to reflect a different relationship, and failed to appreciate the need to exclude those edges from how other algorithms in the system work, because the new edges represent relationships of a different type. And that mess-up has been invisible to me until I was investigating why steps far after that algorithm was applied were broken. But that's just one example, and it's not about the specifics. It's a pattern I'm beginning to see, and I wonder if it represents something, or if it's just the effects of a leaning curve, or what.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734713588.023319",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MSghm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In general, maybe? Like I have at least twice added edges of a different type to reflect a different relationship, and failed to appreciate the need to exclude those edges from how other algorithms in the system work, because the new edges represent relationships of a different type. And that mess-up has been invisible to me until I was investigating why steps far after that algorithm was applied were broken. But that's just one example, and it's not about the specifics. It's a pattern I'm beginning to see, and I wonder if it represents something, or if it's just the effects of a leaning curve, or what."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDCLA1HU4",
        "type": "message",
        "ts": "1734739998.619769",
        "client_msg_id": "533585c4-961a-4848-ae78-d9b10d08f83a",
        "text": "I've done a thing some time ago that may be relevant: <https:\/\/compostjs.github.io\/compost\/>\n\nIt is fairly small composable DSL for composing visualizations - unlike grammar of graphics libraries (vega), it is more low-level and you construct graphical primitives yourself - but it handles mapping of units from \"domain units\" to pixels (where domain units can be continuous or categorical) - so the idea is to have something that is a sweet spot between low level drawing and high-level (Vega, D3, etc) libraries...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bcf86f2e207e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-09-25\/7807695316512_bcf86f2e207ef54d3bda_72.jpg",
            "first_name": "",
            "real_name": "Tomas Petricek",
            "display_name": "tomasp",
            "team": "T5TCAFTA9",
            "name": "tomas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734684533.053209",
        "parent_user_id": "U05S2UGBHU1",
        "attachments": [
            {
                "from_url": "https:\/\/compostjs.github.io\/compost\/",
                "id": 1,
                "original_url": "https:\/\/compostjs.github.io\/compost\/",
                "fallback": "Compost.js: Composable data visualization library",
                "text": "Compost is a data visualization library that lets you compose rich interactive\n data visualizations from a small number of basic primitives. The library is\n based on the functional programming idea of composable domain-specific languages.\n Compost is simple (implemented in just 700 lines of code) and easy to understand.\n Compost is a plain JavaScript library. You use it by writing JavaScript code that\n generates a chart using some 15 basic Compost primitives.",
                "title": "Compost.js: Composable data visualization library",
                "title_link": "https:\/\/compostjs.github.io\/compost\/",
                "service_name": "compostjs.github.io"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Uc70Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've done a thing some time ago that may be relevant: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/compostjs.github.io\/compost\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIt is fairly small composable DSL for composing visualizations - unlike grammar of graphics libraries (vega), it is more low-level and you construct graphical primitives yourself - but it handles mapping of units from \"domain units\" to pixels (where domain units can be continuous or categorical) - so the idea is to have something that is a sweet spot between low level drawing and high-level (Vega, D3, etc) libraries..."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U05S2UGBHU1",
                    "U02E4DAQGSZ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1734740814.524289",
        "client_msg_id": "BEBF4DF7-7A8C-423A-B7CC-7F8D2F642CF6",
        "text": "In my experience, even linked lists are hard like that. It doesn’t seem like the problem goes away until you eliminate edges entirely and have arrays.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734713588.023319",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IMqx1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my experience"
                            },
                            {
                                "type": "text",
                                "text": ", even linked lists are hard like that. "
                            },
                            {
                                "type": "text",
                                "text": "It "
                            },
                            {
                                "type": "text",
                                "text": "doesn’t"
                            },
                            {
                                "type": "text",
                                "text": " seem like the problem goes away until you eliminate edges entirely and have arrays."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1734741252.109909",
        "client_msg_id": "803A01D1-437C-43D8-9840-1BCA5C4D1A33",
        "text": "In trees whose shape mirrors the shape of the recursive computation exactly, things can be simple. Thinking locally works.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734713588.023319",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cy2VS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In trees whose shape mirrors the shape of the recursive computation exactly, things can be simple"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Thinking locally works."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U02U0AS3J49"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U07BD7U4S4R",
        "type": "message",
        "ts": "1734767439.777079",
        "edited": {
            "user": "U07BD7U4S4R",
            "ts": "1734767657.000000"
        },
        "client_msg_id": "98ea0ae4-5ef6-49ce-a9a0-059a9d34371f",
        "text": "\"working with *knowledge* graphs\" makes it sound like you are clicking away in some notetaking™ UI, and not programmatically modifying particular data structure.\n\nif \"mistakes while programmatically modifying\" is the case – it is similar to working with dynamic (python\/clojure) vs static (java\/haskel) lang codebase: you know the general rules \"how to call method on thing\/get attribute of thing\", but dynamic-lang env (generally) hits you with \"that thing has no such method\/attribute\" at runtime, static (generally) – at compile\/IDE time.\n\nmaybe it can be generalized as: there are rules either 1) you are unaware of, or 2) are not enforced \"in time\"\n(whatever \"enforced\" and \"in time\" mean for you, eg. red squiggly line in IDE, or absence of method in autocomplete dropdown, etc.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d0343f70ca57",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-04\/7377091009748_d0343f70ca57c18eeb41_72.png",
            "first_name": "misha",
            "real_name": "misha",
            "display_name": "misha",
            "team": "T5TCAFTA9",
            "name": "misha.akovantsev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734713588.023319",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mdCdh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"working with "
                            },
                            {
                                "type": "text",
                                "text": "knowledge",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " graphs\" makes it sound like you are clicking away in some notetaking™ UI, and not programmatically modifying particular data structure.\n\nif \"mistakes while programmatically modifying\" is the case – it is similar to working with dynamic (python\/clojure) vs static (java\/haskel) lang codebase: you know the general rules \"how to call method on thing\/get attribute of thing\", but dynamic-lang env (generally) hits you with \"that thing has no such method\/attribute\" at runtime, static (generally) – at compile\/IDE time.\n\nmaybe it can be generalized as: there are rules either 1) you are unaware of, or 2) are not enforced \"in time\"\n(whatever \"enforced\" and \"in time\" mean for you, eg. red squiggly line in IDE, or absence of method in autocomplete dropdown, etc.)"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]