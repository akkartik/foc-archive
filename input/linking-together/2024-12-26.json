[
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1735206691.608499",
        "edited": {
            "user": "UGWUJUZHT",
            "ts": "1735206718.000000"
        },
        "client_msg_id": "d31274da-f884-42df-910a-ad64ac2212d9",
        "text": "In my experience, the big wins in Drakon are:\n1. smart editing\n2. skewers\n3. rules about control flow (i.e. the PDF that Kartik referenced)\nSkewers provide an \"obvious\" way to structure sequential control flow. Smart editing moves skewers aside to make room for wider code boxes - a very convenient, low-stress, low-mess way to create Drakon diagrams. Skewer-based control flow is \"obvious\" to human readers and tends to de-tangle program control flows. It's akin to \"structured programming\" for flowcharts, unlike, say Nassi-Shneiderman diagrams and Scratch, which are less \"obvious\" to human readers and visually more complex.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1735194562.461939",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "u+ieQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my experience, the big wins in Drakon are:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "smart editing"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "skewers"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "rules about control flow (i.e. the PDF that Kartik referenced)"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nSkewers provide an \"obvious\" way to structure sequential control flow. Smart editing moves skewers aside to make room for wider code boxes - a very convenient, low-stress, low-mess way to create Drakon diagrams. Skewer-based control flow is \"obvious\" to human readers and tends to de-tangle program control flows. It's akin to \"structured programming\" for flowcharts, unlike, say Nassi-Shneiderman diagrams and Scratch, which are less \"obvious\" to human readers and visually more complex."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1735206750.687219",
        "client_msg_id": "a0a0bdbd-9e27-4d83-9ff8-822bb0c2a593",
        "text": "I used Dragon in a real project, and, I hacked on the editor code to try to incorporate Lisp - actually a difficult task, since Lisp has a recursive syntax whereas most other languages have line-by-line syntaxes. The line-by-line assumption tends to get wired in at deep levels in almost all editors, Drakon notwithstanding.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1735194562.461939",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Enygm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I used Dragon in a real project, and, I hacked on the editor code to try to incorporate Lisp - actually a difficult task, since Lisp has a recursive syntax whereas most other languages have line-by-line syntaxes. The line-by-line assumption tends to get wired in at deep levels in almost all editors, Drakon notwithstanding."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1735220864.278579",
        "client_msg_id": "18a80e83-a973-47fe-9e52-313712c5af9f",
        "text": "those are some really great layout rules. At my work we already had the single exit rule for graphical representations but that pdf has a bunch more that I think we could use to improve legibility like skewers and horizontal returns.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1735194562.461939",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TntQp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "those are some really great layout rules. At my work we already had the single exit rule for graphical representations but that pdf has a bunch more that I think we could use to improve legibility like skewers and horizontal returns."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]