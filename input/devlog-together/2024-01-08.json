[
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1704736227.502649",
        "client_msg_id": "c2f3ba53-ce02-4e29-866c-90e080f6f1c4",
        "text": "\"thought keeping your data persistence layer in sync with your code would be easier than this\" Yes, exactly! I think if you took a close look at any large project with a UI, you find most of the time and  spent writing the code (and perhaps most of the code itself) is dealing with synchronization between the storage, the model,  the user interface, as well as syncing different parts of each of those layers with themselves, yet this problem is largely ignored and when it is addressed, it's only on a  subset of the problem.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704480422.634899",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DvEX0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"thought keeping your data persistence layer in sync with your code would be easier than this\" Yes, exactly! I think if you took a close look at any large project with a UI, you find most of the time and  spent writing the code (and perhaps most of the code itself) is dealing with synchronization between the storage, the model,  the user interface, as well as syncing different parts of each of those layers with themselves, yet this problem is largely ignored and when it is addressed, it's only on a  subset of the problem."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]