[
    {
        "user": "UAJ9DV971",
        "type": "message",
        "ts": "1555319247.033500",
        "client_msg_id": "7d43f127-d314-4a3f-9ff1-d8b72df43fd8",
        "text": "Hot take: language is an environment",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "540fc50d2192",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-12\/502004543669_540fc50d2192cc8aba20_72.jpg",
            "first_name": "Marcel",
            "real_name": "Marcel Goethals",
            "display_name": "wolkenmachine",
            "team": "T5TCAFTA9",
            "name": "accounts",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "parent_user_id": "UEGFXUK3M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wRpL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hot take: language is an environment"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1555371798.034900",
        "client_msg_id": "aacf4286-ee76-4baf-b298-efb21b06c436",
        "text": "I forget where (maybe Magic Ink or Learnable Programming), but Bret Victor talks about programming language (or code) playing the same role as a user interface (and when compared to other interfaces, it's a poor one)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "parent_user_id": "UEGFXUK3M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qOC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I forget where (maybe Magic Ink or Learnable Programming), but Bret Victor talks about programming language (or code) playing the same role as a user interface (and when compared to other interfaces, it's a poor one)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1555373755.035200",
        "client_msg_id": "90f8007e-61ac-4d01-a9df-76ecc3a06f5b",
        "text": "When you look at the various competing next gen language projects: Red, Luna, Dark, etc. you have a language and a compiler or interpreter, a runtime for the language that permits it to run on a given operating system, and then various other tools, like lnterface builders, source code beautifiers, source code obfuscators, package\/dependency managers, linters, cross reference tools, performance analyzers, post mortem\/runtime debuggers, component webstores, deployment aids of various kinds, to see how it looks on various different hardware devices, so many different parts to a modern toolchain, much more than of yesteryear. This is one reason why so little progress has been made; one person can make a compiler pretty easily in under 1000 hours, which roughly equates to six months of one's time. But to build a complete toolchain, across multiple platforms, with documentation, and examples is really quite a big task. I would argue that the supporting tools and reasonably complete libraries for any new language is in fact a massive undertaking. This is why i think it is dangerous for people to start in the tooling world, because you can get lost in that vortex. New languages like Chapel, Parasail, and Red started with working compilers and are adding in the tools and documentation gradually, which allows them to grow organically. It is true however, that if you have the tooling available at the beginning, then it can launch more like a rocket, as it is much easier to work with when the scaffolding is solid, versus doing it the hard way. A lot of really complex systems were built without any good tooling; nothing more than print() statements in the old languages to go on; tooling just lowers the bar so that a person without superhuman patience can accomplish something. I am sure there are some grumpy old mainframe programmers who think that only real men digest core dumps that use up half a box of lineprinter paper.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "parent_user_id": "UEGFXUK3M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VxP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When you look at the various competing next gen language projects: Red, Luna, Dark, etc. you have a language and a compiler or interpreter, a runtime for the language that permits it to run on a given operating system, and then various other tools, like lnterface builders, source code beautifiers, source code obfuscators, package\/dependency managers, linters, cross reference tools, performance analyzers, post mortem\/runtime debuggers, component webstores, deployment aids of various kinds, to see how it looks on various different hardware devices, so many different parts to a modern toolchain, much more than of yesteryear. This is one reason why so little progress has been made; one person can make a compiler pretty easily in under 1000 hours, which roughly equates to six months of one's time. But to build a complete toolchain, across multiple platforms, with documentation, and examples is really quite a big task. I would argue that the supporting tools and reasonably complete libraries for any new language is in fact a massive undertaking. This is why i think it is dangerous for people to start in the tooling world, because you can get lost in that vortex. New languages like Chapel, Parasail, and Red started with working compilers and are adding in the tools and documentation gradually, which allows them to grow organically. It is true however, that if you have the tooling available at the beginning, then it can launch more like a rocket, as it is much easier to work with when the scaffolding is solid, versus doing it the hard way. A lot of really complex systems were built without any good tooling; nothing more than print() statements in the old languages to go on; tooling just lowers the bar so that a person without superhuman patience can accomplish something. I am sure there are some grumpy old mainframe programmers who think that only real men digest core dumps that use up half a box of lineprinter paper."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    }
]