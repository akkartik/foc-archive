[
    {
        "user": "U067XHT91HV",
        "type": "message",
        "ts": "1704671104.165569",
        "edited": {
            "user": "U067XHT91HV",
            "ts": "1704671134.000000"
        },
        "client_msg_id": "40f15153-fcb1-4d34-8e08-15ef1c86d0ef",
        "text": "Several years ago, I've programmed a similar editor (main task is the event bindings) that's keystroke-logging\/autosaving <https:\/\/rumble.com\/vg2w21-hypertext-components-visualizing-tracked-text-changes.html> just 1. not in-browser (sandobx) but native (one Java Swing and one in C++\/Qt while not fully working), 2. creating revision history and visualizing it (no git). No variants\/branching (because no merging), not Ink&Switch so-called \"local-first\" CRDTs (because these are depending on, assuming, WWW SaaS and trapped inside localStorage WWW browser sandbox). May one day calculate\/resolve merging\/conflicts myself (hopefully). Obviously, next directions naturally would be proper buffer editing (standoff, structural, treesitter, other), streaming to HDD + remote server, and so on. Not sure why this isn't the standard\/default for all edit controls in GUI toolkits, and instead limited to just isolated specialized apps :-(",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "488abf9ee399",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-02\/6284140728162_488abf9ee399f7e43d8b_72.png",
            "first_name": "Stephan",
            "real_name": "Stephan Kreutzer",
            "display_name": "skreutzer",
            "team": "T5TCAFTA9",
            "name": "stephankreutzer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704231485.027899",
        "parent_user_id": "U02JQA5FY5C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wg4uv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Several years ago, I've programmed a similar editor (main task is the event bindings) that's keystroke-logging\/autosaving "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/rumble.com\/vg2w21-hypertext-components-visualizing-tracked-text-changes.html"
                            },
                            {
                                "type": "text",
                                "text": " just 1. not in-browser (sandobx) but native (one Java Swing and one in C++\/Qt while not fully working), 2. creating revision history and visualizing it (no git). No variants\/branching (because no merging), not Ink&Switch so-called \"local-first\" CRDTs (because these are depending on, assuming, WWW SaaS and trapped inside localStorage WWW browser sandbox). May one day calculate\/resolve merging\/conflicts myself (hopefully). Obviously, next directions naturally would be proper buffer editing (standoff, structural, treesitter, other), streaming to HDD + remote server, and so on. Not sure why this isn't the standard\/default for all edit controls in GUI toolkits, and instead limited to just isolated specialized apps :-("
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Proof of concept for having an LLM generate logical code in a visual coding environment for legislation.",
        "files": [
            {
                "id": "F06D6HGPJJD",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U02U0AS3J49",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NNoUG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Proof of concept for having an LLM generate logical code in a visual coding environment for legislation."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1704692625.564929",
        "client_msg_id": "08bc18d0-071e-4101-88e3-be9497421ac9",
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U03HC3XHZGW",
                    "U0123H7JRDM"
                ],
                "count": 2
            }
        ]
    }
]