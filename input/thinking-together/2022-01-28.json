[
    {
        "user": "U027P92A0N5",
        "type": "message",
        "ts": "1643360865.836999",
        "client_msg_id": "1d158f0f-7b24-428a-9f9f-6a9df18f8b1b",
        "text": "<@UA14TGLTC> to me it seems _algebras_ compose exceptionally well, both \"horizontally\" (algebra products) and \"vertically\" (algebra homomorphisms primarily). Whenever you manage to frame something as an algebra it becomes so much easier to work with. :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d6900487d910",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-07-07\/2254853369060_d6900487d9109f495c79_72.jpg",
            "first_name": "Alexander",
            "real_name": "Alexander Chichigin",
            "display_name": "Alex Chichigin",
            "team": "T5TCAFTA9",
            "name": "sad.ronin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639046352.207200",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pQBd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " to me it seems "
                            },
                            {
                                "type": "text",
                                "text": "algebras",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " compose exceptionally well, both \"horizontally\" (algebra products) and \"vertically\" (algebra homomorphisms primarily). Whenever you manage to frame something as an algebra it becomes so much easier to work with. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "sunglasses",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U027P92A0N5",
        "type": "message",
        "ts": "1643367880.789049",
        "client_msg_id": "8e025d2d-b54e-49c8-8721-215082da3636",
        "text": "How come <https:\/\/www.inkandswitch.com\/> didn't come up in the replies? :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d6900487d910",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-07-07\/2254853369060_d6900487d9109f495c79_72.jpg",
            "first_name": "Alexander",
            "real_name": "Alexander Chichigin",
            "display_name": "Alex Chichigin",
            "team": "T5TCAFTA9",
            "name": "sad.ronin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639520017.233900",
        "parent_user_id": "UF1ATC4RF",
        "attachments": [
            {
                "from_url": "https:\/\/www.inkandswitch.com\/",
                "thumb_url": "https:\/\/www.inkandswitch.com\/assets\/logo-favicon-196x196.png",
                "thumb_width": 196,
                "thumb_height": 196,
                "service_icon": "https:\/\/www.inkandswitch.com\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/www.inkandswitch.com\/",
                "fallback": "Ink &amp; Switch",
                "text": "Industrial research lab working on digital tools for creativity and productivity",
                "title": "Ink &amp; Switch",
                "title_link": "https:\/\/www.inkandswitch.com\/",
                "service_name": "inkandswitch.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nRrPW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How come "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.inkandswitch.com\/"
                            },
                            {
                                "type": "text",
                                "text": " didn't come up in the replies? "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U027P92A0N5",
        "type": "message",
        "ts": "1643368619.918549",
        "client_msg_id": "c1f089ea-8a4a-4b56-879d-acc9df44caf7",
        "text": "If you'll incorporate votes don't forget <https:\/\/www.evanmiller.org\/how-not-to-sort-by-average-rating.html> :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d6900487d910",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-07-07\/2254853369060_d6900487d9109f495c79_72.jpg",
            "first_name": "Alexander",
            "real_name": "Alexander Chichigin",
            "display_name": "Alex Chichigin",
            "team": "T5TCAFTA9",
            "name": "sad.ronin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639548828.247400",
        "parent_user_id": "U02E4DAQGSZ",
        "attachments": [
            {
                "from_url": "https:\/\/www.evanmiller.org\/how-not-to-sort-by-average-rating.html",
                "image_url": "https:\/\/www.evanmiller.org\/images\/previews\/how-not-to-sort-by-average-rating.png",
                "image_width": 476,
                "image_height": 250,
                "image_bytes": 308032,
                "service_icon": "https:\/\/www.evanmiller.org\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/www.evanmiller.org\/how-not-to-sort-by-average-rating.html",
                "fallback": "How Not To Sort By Average Rating",
                "text": "Users are rating items on your website. How do you know what the highest-rated items are?",
                "title": "How Not To Sort By Average Rating",
                "title_link": "https:\/\/www.evanmiller.org\/how-not-to-sort-by-average-rating.html",
                "service_name": "evanmiller.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ehj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you'll incorporate votes don't forget "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.evanmiller.org\/how-not-to-sort-by-average-rating.html"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U014WA16VNJ",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U027P92A0N5",
        "type": "message",
        "ts": "1643369263.384009",
        "client_msg_id": "ee16c042-ce66-4cc2-a266-c307ab5a5104",
        "text": "I don't have real experience with this (and I'm probably too late anyway) but you don't have to (to large extent you can't) stick with single IR for everything.\n\nFor the start you're going to begin with AST and I would define a compile-time interpreter\/evaluator right at this stage. Or you can transform to A-normal form which is equivalent to SSA but looks like very simple functional language which again is easy to interpret.\n\nFor lower-level optimisations I'd go with Sea-of-Nodes(-like) IR. And then maybe another (serial) IR for register allocation\/instruction selection phase(s).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d6900487d910",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-07-07\/2254853369060_d6900487d9109f495c79_72.jpg",
            "first_name": "Alexander",
            "real_name": "Alexander Chichigin",
            "display_name": "Alex Chichigin",
            "team": "T5TCAFTA9",
            "name": "sad.ronin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639974030.295800",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XZHe\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't have real experience with this (and I'm probably too late anyway) but you don't have to (to large extent you can't) stick with single IR for everything.\n\nFor the start you're going to begin with AST and I would define a compile-time interpreter\/evaluator right at this stage. Or you can transform to A-normal form which is equivalent to SSA but looks like very simple functional language which again is easy to interpret.\n\nFor lower-level optimisations I'd go with Sea-of-Nodes(-like) IR. And then maybe another (serial) IR for register allocation\/instruction selection phase(s)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1643380448.621629",
        "client_msg_id": "08425BA2-8AF7-43F0-A413-81A94FA66C41",
        "text": "An IDE with \"type checking\" for laws as pure functions + FSM + separating objective input and subjective interpretation weights could be amazing...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1643218203.543119",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ekm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "An IDE with \"type checking\" for laws as pure functions + FSM + separating objective input and subjective interpretation weights could be amazing..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1643380817.614829",
        "client_msg_id": "63F69F39-659C-42B3-92FA-2733705BE1C8",
        "text": "...see all possible outcomes and why, clearly, before signing the paper, + with probability distributions if given in input. Backtrace and see what would need to change to fix it. See dependencies with existing legal framework, and outcome changes\/interplay\/affected parties when introducing new law\/statement. Analysis connected to prejudicing cases. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1643218203.543119",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wgw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "...see all possible outcomes and why, clearly, before signing the paper, + with probability distributions if given in input. Backtrace and see what would need to change to fix it. See dependencies with existing legal framework, and outcome changes\/interplay\/affected parties when introducing new law\/statement. Analysis connected to prejudicing cases. "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1643382015.034759",
        "client_msg_id": "fae0c15c-4d08-49af-ae1f-5e567f7c0890",
        "text": "I don't think pure functions are a good idea for modelling laws, because laws aren't written that way. But otherwise that's the basic idea. It also improves the drafting.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1643218203.543119",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qr9X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't think pure functions are a good idea for modelling laws, because laws aren't written that way. But otherwise that's the basic idea. It also improves the drafting."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1643382120.825899",
        "client_msg_id": "ecf1138b-93ad-4f91-b877-213d7de1bcec",
        "text": "How would it influence drafting? Are you imagining automatic generation of legalese from such diagrams?!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1643218203.543119",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VaxE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How would it influence drafting? Are you imagining automatic generation of legalese from such diagrams?!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1643394322.413789",
        "client_msg_id": "dce6d2e9-8abd-4ae6-90b1-b5e08d7fcb49",
        "text": "No, the encoding that is used to generate the diagram is a model of the legislative text. The task of creating that model often reveals inadequacies in the legal text. The code can also be used to do things like search for loopholes in the abstract based on the model. So not these diagrams in particular, but it's benefit of the larger ecosystem of digitized rules.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1643218203.543119",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "de9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No, the encoding that is used to generate the diagram is a model of the legislative text. The task of creating that model often reveals inadequacies in the legal text. The code can also be used to do things like search for loopholes in the abstract based on the model. So not these diagrams in particular, but it's benefit of the larger ecosystem of digitized rules."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-4",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    }
]