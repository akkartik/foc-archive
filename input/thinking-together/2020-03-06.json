[
    {
        "user": "UKDM3GLAJ",
        "type": "message",
        "ts": "1583512067.095400",
        "client_msg_id": "8e9a40c5-fa7f-4d4a-a819-893422f69c82",
        "text": "Small UI thing I came across: <https:\/\/blog.repl.it\/clui>\n&gt; One of the unique parts about CLUI is that *any new UI is automatically generated from the data you give it.*",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "34e7a55348e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-01-04\/893378739792_34e7a55348e8c86c1901_72.jpg",
            "first_name": "",
            "real_name": "Jared Windover",
            "display_name": "Jared Windover",
            "team": "T5TCAFTA9",
            "name": "jaredwindover",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583512067.095400",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1583559889.098700",
        "reply_users": [
            "UC2A2ARPT",
            "U6KQ2S410",
            "UEQ6M68H0",
            "UJN1TAYEQ"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1583516281.095900"
            },
            {
                "user": "U6KQ2S410",
                "ts": "1583527303.096400"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1583530103.096600"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1583537099.097700"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1583559889.098700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "repl.it",
                "title": "CLUI: Building a Graphical Command Line",
                "title_link": "https:\/\/blog.repl.it\/clui",
                "text": "&gt; “Command line interfaces. Once that was all we had. Then they disappeared, replaced by what we thought was a great advance: GUIs. GUIs…",
                "fallback": "repl.it: CLUI: Building a Graphical Command Line",
                "image_url": "https:\/\/blog.repl.it\/images\/clui-cover.png",
                "from_url": "https:\/\/blog.repl.it\/clui",
                "image_width": 409,
                "image_height": 250,
                "image_bytes": 74657,
                "service_icon": "https:\/\/repl.it\/public\/images\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/blog.repl.it\/clui"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NEH7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Small UI thing I came across: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/blog.repl.it\/clui"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One of the unique parts about CLUI is that "
                            },
                            {
                                "type": "text",
                                "text": "any new UI is automatically generated from the data you give it.",
                                "style": {
                                    "bold": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1",
                    "UC2A2ARPT",
                    "UE0ETTCG7",
                    "UJ6LDMMN0",
                    "UCUSW7WVD",
                    "UV287BVSA",
                    "UJBAJNFLK",
                    "UV0NVB630",
                    "UQPHR6Y3S",
                    "UU1DTLRGB"
                ],
                "count": 10
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1583516281.095900",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1583516889.000000"
        },
        "client_msg_id": "ed14bcaf-5e93-495a-8218-9130e7777d2d",
        "text": "The top comment on hacker news captures a gripe I had about their criticism of complex GUIs: <https:\/\/news.ycombinator.com\/item?id=22499947>\n\nTo quote the article:\n\n&gt; The moment you want to add a feature to a GUI, there’s an immediate question about where to put that feature. Should it be in the top right? Bottom left? Nav bar? Behind a tab? In the sidebar? Revealed on hover? You end up with buttons, panels, and menus competing for space in the UI-- screen real estate. Every pixel becomes more and more valuable for primary features. You don’t need to look very far to see what happens when you need to include dozens of features into a tiny rectangle.\nThis writing makes it feel like the GUI design process is somehow willy-nilly. \"Let's just stuff the feature wherever we can find room.\" That's not a substantial critique — the problem, if any, with the design of GUIs isn't that they are sometimes executed poorly.\n\n&gt; Professional creative tools like Adobe Premiere are often so packed with features that they become unapproachable, slow, ugly, and unfocused.\n• Unapproachable — That's a well-solved problem.\n• Slow — Show me a CLI-based video editor with live preview of multiple 8k streams and then we'll talk about where this perf is going.\n• Ugly — That's not measurable. Maybe you'd prefer something.. flat and trendy? <http:\/\/nenadmilosevic.co\/ableton-live-redesign\/>\n• Unfocussed — That's a well-solved problem.\n\n:turkey:\n\nBut, I do like what they're trying to do by bridging the gap between the CLI and the GUI. More exploration of the space is a good thing. I just wish they could justify it by pointing out how the thing they were building was exciting compared to the GUI and CLI _at their best_, rather than trying to make the GUI and CLI look bad and then putting their thing next to it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583512067.095400",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X0nH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The top comment on hacker news captures a gripe I had about their criticism of complex GUIs: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22499947"
                            },
                            {
                                "type": "text",
                                "text": "\n\nTo quote the article:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The moment you want to add a feature to a GUI, there’s an immediate question about where to put that feature. Should it be in the top right? Bottom left? Nav bar? Behind a tab? In the sidebar? Revealed on hover? You end up with buttons, panels, and menus competing for space in the UI-- screen real estate. Every pixel becomes more and more valuable for primary features. You don’t need to look very far to see what happens when you need to include dozens of features into a tiny rectangle."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis writing makes it feel like the GUI design process is somehow willy-nilly. \"Let's just stuff the feature wherever we can find room.\" That's not a substantial critique — the problem, if any, with the design of GUIs isn't that they are sometimes executed poorly.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Professional creative tools like Adobe Premiere are often so packed with features that they become unapproachable, slow, ugly, and unfocused."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n• Unapproachable — That's a well-solved problem.\n• Slow — Show me a CLI-based video editor with live preview of multiple 8k streams and then we'll talk about where this perf is going.\n• Ugly — That's not measurable. Maybe you'd prefer something.. flat and trendy? "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/nenadmilosevic.co\/ableton-live-redesign\/"
                            },
                            {
                                "type": "text",
                                "text": "\n• Unfocussed — That's a well-solved problem.\n\n"
                            },
                            {
                                "type": "emoji",
                                "name": "turkey",
                                "unicode": "1f983"
                            },
                            {
                                "type": "text",
                                "text": "\n\nBut, I do like what they're trying to do by bridging the gap between the CLI and the GUI. More exploration of the space is a good thing. I just wish they could justify it by pointing out how the thing they were building was exciting compared to the GUI and CLI "
                            },
                            {
                                "type": "text",
                                "text": "at their best",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", rather than trying to make the GUI and CLI look bad and then putting their thing next to it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0",
                    "UV287BVSA",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U6KQ2S410",
        "type": "message",
        "ts": "1583527303.096400",
        "client_msg_id": "1c8f7205-7c10-41dc-a8ce-8c5bdb3ea5bf",
        "text": "It will be interesting to see how far they get with this approach. My main problem with the article was that they used Adobe Premiere as an example of how GUIs don’t scale, and then claim that their CLUI approach does scale. Yet they only show some trivial examples. They need to show how they can replace Premiere’s GUI with a CLUI to make that case.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e8f4c2151d2b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-09\/225308926294_e8f4c2151d2b70ebfae3_72.jpg",
            "first_name": "Jonathan",
            "real_name": "Jonathan Edwards",
            "display_name": "jonathoda",
            "team": "T5TCAFTA9",
            "name": "jonathoda",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583512067.095400",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+F3t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It will be interesting to see how far they get with this approach. My main problem with the article was that they used Adobe Premiere as an example of how GUIs don’t scale, and then claim that their CLUI approach does scale. Yet they only show some trivial examples. They need to show how they can replace Premiere’s GUI with a CLUI to make that case."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL",
                    "UBN9AFS0N",
                    "U8A5MS6R1",
                    "UE0ETTCG7",
                    "UNCP67JSK",
                    "UV287BVSA",
                    "UA14TGLTC",
                    "UML4ZEKDK"
                ],
                "count": 9
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1583530103.096600",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1583558628.000000"
        },
        "client_msg_id": "c3aa5246-f86a-4ca4-b753-81bfb2596588",
        "text": "People often review advanced products like video editors, and load them up on a single monitor, not realizing that they were intended for at least 2 monitors. Most of the Adobe product line which is only medium grade user interface quality, are assuming double monitors, with all their floating\/dockable patents it is natural for them to cling to an idea that was good only at a medium level of complexity, and that they through feature creep are now in a pretty ugly state.\n\nGiven that the command line tools of Linux have gotten out of control in terms of the number of options over time, i welcome seeing some GUI.  The LS command i think has over 80 options. Linux has evolved into a giant mess of command line options, and for some reason people make the unsupportable claim that Linux is easy. I put all my trailing edge friends and relatives onto either Windows 7 or Macintosh because the support costs are lower for me. Command line tools are only suitable for those people with great memories, and for most users past 60 who don't use a piece of software often enough, command line is the kiss of death.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583512067.095400",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ssxh8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "People often review advanced products like video editors, and load them up on a single monitor, not realizing that they were intended for at least 2 monitors. Most of the Adobe product line which is only medium grade user interface quality, are assuming double monitors, with all their floating\/dockable patents it is natural for them to cling to an idea that was good only at a medium level of complexity, and that they through feature creep are now in a pretty ugly state.\n\nGiven that the command line tools of Linux have gotten out of control in terms of the number of options over time, i welcome seeing some GUI.  The LS command i think has over 80 options. Linux has evolved into a giant mess of command line options, and for some reason people make the unsupportable claim that Linux is easy. I put all my trailing edge friends and relatives onto either Windows 7 or Macintosh because the support costs are lower for me. Command line tools are only suitable for those people with great memories, and for most users past 60 who don't use a piece of software often enough, command line is the kiss of death."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL",
                    "UV287BVSA",
                    "UBSMEUXAA",
                    "UA14TGLTC"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1583537099.097700",
        "client_msg_id": "35646124-6380-4ba5-a80b-e387f64989c3",
        "text": "It's true what Edward said about the Linux command line, that it requires a great memory, but that isn't the kind of UI being discussed in the CLUI article. The article  begins by quoting Donald Norman that search (eg, google search) is the new CLI. They go on to describe a UI where you use search to find the command you want, and you use autocomplete, drop-down menus and forms to select subcommands and options. This kind of interface is light years away from memorizing bash commands. I had extensive exposure to these kinds of interfaces in the 90's and early 2000's, and it's great experience to use a complex CLI where you don't have to memorize anything.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583512067.095400",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ydd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's true what Edward said about the Linux command line, that it requires a great memory, but that isn't the kind of UI being discussed in the CLUI article. The article  begins by quoting Donald Norman that search (eg, google search) is the new CLI. They go on to describe a UI where you use search to find the command you want, and you use autocomplete, drop-down menus and forms to select subcommands and options. This kind of interface is light years away from memorizing bash commands. I had extensive exposure to these kinds of interfaces in the 90's and early 2000's, and it's great experience to use a complex CLI where you don't have to memorize anything."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UV287BVSA"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UT9TWSZB5",
        "type": "message",
        "ts": "1583542997.098000",
        "client_msg_id": "2204a1cf-94a3-4a93-ad8d-82ccce2c9a11",
        "text": "Hey <@UJ6LDMMN0> just seeing this. Definitely going to use an append only log. I have this feeling that I can design it in a way that doesn't need a vector clock for causal consistency, but I havent thought that through yet. Otherwise, CRDT is implemented as a higher-level concept on top of this database and required the developer to carefully model their data. For example, for good text editing CRDT, you need to model characters as a tree that you traverse depth-first to construct the string. This requires no changes to the underlying database architecture and the CRDT behavior is entirely at the application layer :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9cb6f99c1d46",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-05\/941640103046_9cb6f99c1d4661569649_72.jpg",
            "first_name": "",
            "real_name": "Chet Corcos",
            "display_name": "Chet Corcos",
            "team": "T5TCAFTA9",
            "name": "ccorcos",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1582100143.211600",
        "parent_user_id": "UT9TWSZB5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MxH3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey "
                            },
                            {
                                "type": "user",
                                "user_id": "UJ6LDMMN0"
                            },
                            {
                                "type": "text",
                                "text": " just seeing this. Definitely going to use an append only log. I have this feeling that I can design it in a way that doesn't need a vector clock for causal consistency, but I havent thought that through yet. Otherwise, CRDT is implemented as a higher-level concept on top of this database and required the developer to carefully model their data. For example, for good text editing CRDT, you need to model characters as a tree that you traverse depth-first to construct the string. This requires no changes to the underlying database architecture and the CRDT behavior is entirely at the application layer "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1583559889.098700",
        "client_msg_id": "3021b690-1b03-435b-ab63-49c83c2f753a",
        "text": "why not go all the way, and instead of using wimpy google search, which has very little intelligence and uses how many inward links to rank pages which can go completely in the wrong direction, and use Watson to back up your UI? Natural language interfaces are good for low amounts of user input, but in any creative product it would be a hindrance to use a searching based interface. Video editors make tens of thousands of little tweaks, and use $1000 keyboards with jog wheels and tons of dedicated keys to speed it all up. Ultimately the best interface style all depends on how many decisions\/actions the user is going to make. Frankly in word processing people loved the old IBM XT keyboard with the 10 function keys on the left. People completely understood those keys did actions, they were in a convenient and special place, and you had little plastic templates for your word processor. People loved it but unfortunately the stupid PC industry standardized on the DEC keyboard which has the function keys way up at the top where nobody can reach them or have muscle memory for them.\n\nThis idea that users are supposed to stumble around their software and ask for help using text queries is really a strange attitude about UI. Why do commands have to have so many subcommands and options?  It is kind of nutty, to use super powerful search engine technology to fix the lack of intuitive workflow and tidy organization of functions. How does one know what is possible in such a system? it is completely undiscoverable, so I say Norman is completely incorrect.  And not only that, naive users have no clue as to how to describe in proper terminology what they are trying to accomplish. So their queries will end badly. The worst systems IMHO are those that present a dark screen with no clue was to what commands or functions are available. That reminds me of a survey where programmers asked which text editor was the easiest and some nerds answered vi and emacs. Yeah, right, people love using LISP for their word processing queries. Yikes.\n\nMS won the OS game by using wizards on top of a complex dialog box tree. if you have enough wizards people don't have to learn where all the functions are buried. In this sense they were compensating for their intrinsically more complex OS than Apple offered. MS. had a lot more hardware to support; it was a practical compromise and worked rather well for them.  Apple took the tack of drastically limiting hardware options which made it possible to offer a much simpler OS interface. That split between the two companies persists, but Apple has never really been able to crack 10% market share even in their best days, due to the tradeoffs this entails.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583512067.095400",
        "parent_user_id": "UKDM3GLAJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kIMC7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "why not go all the way, and instead of using wimpy google search, which has very little intelligence and uses how many inward links to rank pages which can go completely in the wrong direction, and use Watson to back up your UI? Natural language interfaces are good for low amounts of user input, but in any creative product it would be a hindrance to use a searching based interface. Video editors make tens of thousands of little tweaks, and use $1000 keyboards with jog wheels and tons of dedicated keys to speed it all up. Ultimately the best interface style all depends on how many decisions\/actions the user is going to make. Frankly in word processing people loved the old IBM XT keyboard with the 10 function keys on the left. People completely understood those keys did actions, they were in a convenient and special place, and you had little plastic templates for your word processor. People loved it but unfortunately the stupid PC industry standardized on the DEC keyboard which has the function keys way up at the top where nobody can reach them or have muscle memory for them.\n\nThis idea that users are supposed to stumble around their software and ask for help using text queries is really a strange attitude about UI. Why do commands have to have so many subcommands and options?  It is kind of nutty, to use super powerful search engine technology to fix the lack of intuitive workflow and tidy organization of functions. How does one know what is possible in such a system? it is completely undiscoverable, so I say Norman is completely incorrect.  And not only that, naive users have no clue as to how to describe in proper terminology what they are trying to accomplish. So their queries will end badly. The worst systems IMHO are those that present a dark screen with no clue was to what commands or functions are available. That reminds me of a survey where programmers asked which text editor was the easiest and some nerds answered vi and emacs. Yeah, right, people love using LISP for their word processing queries. Yikes.\n\nMS won the OS game by using wizards on top of a complex dialog box tree. if you have enough wizards people don't have to learn where all the functions are buried. In this sense they were compensating for their intrinsically more complex OS than Apple offered. MS. had a lot more hardware to support; it was a practical compromise and worked rather well for them.  Apple took the tack of drastically limiting hardware options which made it possible to offer a much simpler OS interface. That split between the two companies persists, but Apple has never really been able to crack 10% market share even in their best days, due to the tradeoffs this entails."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UV287BVSA"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1583565732.099000",
        "client_msg_id": "2009F3B1-894B-4469-94CD-9F2971C7BB33",
        "text": "<https:\/\/youtube.com\/watch?v=c6SUOeAqOjU|https:\/\/youtube.com\/watch?v=c6SUOeAqOjU>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583565732.099000",
        "reply_count": 35,
        "reply_users_count": 11,
        "latest_reply": "1585688197.059100",
        "reply_users": [
            "UC2A2ARPT",
            "UJN1TAYEQ",
            "UEQ6M68H0",
            "ULM3U6275",
            "UCUSW7WVD",
            "UJ6LDMMN0",
            "UA14TGLTC",
            "U8A5MS6R1",
            "UTM2DMHS6",
            "UJFN50C00",
            "U0112C10V4Y"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1583566231.109400"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1583601414.111900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1583603599.112200"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1583603920.112400"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1583604355.113100"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1583604688.113400"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1583605203.113800"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1583606066.114000"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1583607891.114700"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1583608684.118000"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1583608838.118800"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1583609732.120500"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1583609926.120900"
            },
            {
                "user": "ULM3U6275",
                "ts": "1583610228.121300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1583620184.127900"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1583622008.128300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1583622429.128500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1583623116.128900"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1583624368.131900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1583624855.132200"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1583649255.155300"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1583702903.203700"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1583754731.209000"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1583765612.210800"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1583784033.217000"
            },
            {
                "user": "UTM2DMHS6",
                "ts": "1583787528.217700"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1583800729.219000"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1583806319.219300"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1583813750.219700"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1583814134.220000"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1583868299.224500"
            },
            {
                "user": "UJFN50C00",
                "ts": "1584009169.244400"
            },
            {
                "user": "UJFN50C00",
                "ts": "1584009238.244600"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1585688060.058700"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1585688197.059100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Computers for Cynics 2 - It All Went Wrong at Xerox PARC",
                "title_link": "https:\/\/youtube.com\/watch?v=c6SUOeAqOjU",
                "author_name": "TheTedNelson",
                "author_link": "https:\/\/www.youtube.com\/user\/TheTedNelson",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/c6SUOeAqOjU\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Computers for Cynics 2 - It All Went Wrong at Xerox PARC",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/c6SUOeAqOjU?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/youtube.com\/watch?v=c6SUOeAqOjU",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtube.com\/watch?v=c6SUOeAqOjU"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wNx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/youtube.com\/watch?v=c6SUOeAqOjU",
                                "text": "https:\/\/youtube.com\/watch?v=c6SUOeAqOjU"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1",
                    "UTM2DMHS6"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1583566231.109400",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1583566821.000000"
        },
        "client_msg_id": "10A0AFD6-5667-4FD6-B489-E8E06654C227",
        "text": "I hadn't watched this before now. While I've heard a handful of different criticisms of PARC over the years, this one resonated with me particularly strongly. It's an interesting lens — of course Xerox the paper copier company would produce a research lab that turned computers into glorified paper copiers! If it's not a stretch to say so (it is), this story rhymes with the strategy for privatizing government-run services like healthcare in Canada: gradually open up the field for private competition, which lets corporations claim the profitable parts (Eg: elective surgeries) while the government-owned hospitals and such are left holding the bag on the more costly parts (Eg: emergency, recovery). In the case of the Alto and then the Macintosh, it's the easy-to-translate tasks that became the desktop metaphor, and the costly parts were left to the terminal, Algol-derived languages, or manual effort on the part of the user. If only the rush to privatize and productize computing hadn't happened, and we had computers designed to empower experts rather than just clerks and children.\n\nOf course, the vision pursued by Nelson (et al.) of much richer end-user programming is so foreign to me that I find myself overwhelmed imagining the complexity of it, unable to envision what it might feel like to actually have lived my whole life using such a system.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xWh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I hadn't watched this before now. While I've heard a handful of different criticisms of PARC over the years, this one resonated with me particularly strongly. It's an interesting lens — of course Xerox the paper copier company would produce a research lab that turned computers into glorified paper copiers! If it's not a stretch to say so (it is), this story rhymes with the strategy for privatizing government-run services like healthcare in Canada: gradually open up the field for private competition, which lets corporations claim the profitable parts (Eg: elective surgeries) while the government-owned hospitals and such are left holding the bag on the more costly parts (Eg: emergency, recovery). In the case of the Alto and then the Macintosh, it's the easy-to-translate tasks that became the desktop metaphor, and the costly parts were left to the terminal, Algol-derived languages, or manual effort on the part of the user. If only the rush to privatize and productize computing hadn't happened, and we had computers designed to empower experts rather than just clerks and children.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Of course, the vision pursued by Nelson (et al.) of much richer end-user programming is so foreign to me that I find myself overwhelmed imagining the complexity of it, unable to envision what it might feel like to actually have lived my whole life using such a system."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UAJ9DV971",
                    "UV287BVSA",
                    "UBSMEUXAA",
                    "UA14TGLTC"
                ],
                "count": 4
            },
            {
                "name": "point_up_2",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            }
        ]
    }
]