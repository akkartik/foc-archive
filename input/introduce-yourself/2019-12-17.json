[
    {
        "user": "UQ50Q5C7J",
        "type": "message",
        "ts": "1576609727.010600",
        "client_msg_id": "0864f1c0-8646-40af-94f8-f5735eb588b8",
        "text": "Hey Nick, late to the party, but I really enjoyed reading your self-experimentation in _The Motivation Hacker_.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g96e115ba3a5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/96e115ba3a54be33f49e5b9fa2ef2587.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "",
            "real_name": "Paul Cook",
            "display_name": "Paul Cook",
            "team": "T5TCAFTA9",
            "name": "paulrcook",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576198591.302700",
        "parent_user_id": "URMEM88JG",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MVju",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey Nick, late to the party, but I really enjoyed reading your self-experimentation in "
                            },
                            {
                                "type": "text",
                                "text": "The Motivation Hacker",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "URMEM88JG",
        "type": "message",
        "ts": "1576609926.010800",
        "client_msg_id": "bc2f8dec-31ff-4375-97f3-63176b5a8bbd",
        "text": "<@UJ6LDMMN0> I find that when you have small numbers of kids and an expert facilitator (such as yourself), the creative coding is the way to go; we are more useful in the space when a kid can’t get expert personalized instruction all the time and needs the computer system to be able to do that, where it helps to have short levels with more-or-less set tasks to aid the computer system in guiding students. That said, we’re adding more and more creative coding projects in our new classroom product, Ozaria.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbbb3b58f2be",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bbb3b58f2befe131d216498bd8fad307.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Nick",
            "real_name": "Nick Winter",
            "display_name": "nick",
            "team": "T5TCAFTA9",
            "name": "nick542",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576198591.302700",
        "parent_user_id": "URMEM88JG",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oZGs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJ6LDMMN0"
                            },
                            {
                                "type": "text",
                                "text": " I find that when you have small numbers of kids and an expert facilitator (such as yourself), the creative coding is the way to go; we are more useful in the space when a kid can’t get expert personalized instruction all the time and needs the computer system to be able to do that, where it helps to have short levels with more-or-less set tasks to aid the computer system in guiding students. That said, we’re adding more and more creative coding projects in our new classroom product, Ozaria."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "URMEM88JG",
        "type": "message",
        "ts": "1576609935.011000",
        "client_msg_id": "7a3c68a1-cd49-4f9b-b2b5-c1059b27d697",
        "text": "<@UQ50Q5C7J> glad you dug it!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbbb3b58f2be",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bbb3b58f2befe131d216498bd8fad307.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Nick",
            "real_name": "Nick Winter",
            "display_name": "nick",
            "team": "T5TCAFTA9",
            "name": "nick542",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576198591.302700",
        "parent_user_id": "URMEM88JG",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2IqH6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UQ50Q5C7J"
                            },
                            {
                                "type": "text",
                                "text": " glad you dug it!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1576611421.011200",
        "client_msg_id": "02746f99-2be3-485a-831b-ea5c9923a104",
        "text": "I didn't know Ozaria! I have not time now, but I am very curious about it, it sounds good. I have to try it out to see if it fits in our workshops!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576198591.302700",
        "parent_user_id": "URMEM88JG",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z\/Mz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I didn't know Ozaria! I have not time now, but I am very curious about it, it sounds good. I have to try it out to see if it fits in our workshops!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "URMEM88JG",
        "type": "message",
        "ts": "1576611561.011500",
        "client_msg_id": "86fbe618-662a-4e94-aee8-310f38552c48",
        "text": "It’s pretty new, beta phase. Some big revisions coming in Q1 based on early feedback. Added narrative-driven gameplay (lots of story), different theme (no violence), etc. Coding difficulty progresses more simply, towards creative coding game dev projects rather than game-AI-powered multiplayer arena combat. UX issues and missing features galore at this point but better already than CodeCombat for some use cases! :smile: looking for feedback if you get a chance to try it out",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbbb3b58f2be",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bbb3b58f2befe131d216498bd8fad307.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Nick",
            "real_name": "Nick Winter",
            "display_name": "nick",
            "team": "T5TCAFTA9",
            "name": "nick542",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576198591.302700",
        "parent_user_id": "URMEM88JG",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vDA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s pretty new, beta phase. Some big revisions coming in Q1 based on early feedback. Added narrative-driven gameplay (lots of story), different theme (no violence), etc. Coding difficulty progresses more simply, towards creative coding game dev projects rather than game-AI-powered multiplayer arena combat. UX issues and missing features galore at this point but better already than CodeCombat for some use cases! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " looking for feedback if you get a chance to try it out"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1576612633.011700",
        "client_msg_id": "7f3f2776-9588-46f6-b20d-92ab0802fbfc",
        "text": "I feel the urge to try it out, actually. But, I must resist for now as I have absolutely no time for it. But when I will do, I let you know my feelings. Don't hesitate to ping me on this later.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576198591.302700",
        "parent_user_id": "URMEM88JG",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/5Ckm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel the urge to try it out, actually. But, I must resist for now as I have absolutely no time for it. But when I will do, I let you know my feelings. Don't hesitate to ping me on this later."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1576626522.012600",
        "client_msg_id": "d637e8e7-81db-4bfa-84ff-6d45c6f2a39a",
        "text": "We have a <#CKC6FM9DF|category-theory> channel that is quite now and did have video conversations covering parts of Milewski <https:\/\/bartoszmilewski.com\/2014\/10\/28\/category-theory-for-programmers-the-preface\/>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576563075.009500",
        "parent_user_id": "URDJXHSSE",
        "attachments": [
            {
                "service_name": "  Bartosz Milewski's Programming Cafe",
                "service_url": "http:\/\/bartoszmilewski.com",
                "title": "Category Theory for Programmers: The Preface",
                "title_link": "https:\/\/bartoszmilewski.com\/2014\/10\/28\/category-theory-for-programmers-the-preface\/",
                "author_name": "Bartosz Milewski",
                "author_link": "https:\/\/bartoszmilewski.com\/author\/bartoszmilewski\/",
                "thumb_url": "https:\/\/bartoszmilewski.files.wordpress.com\/2014\/10\/beauvais_interior_supports.jpg?fit=200%2C150",
                "thumb_width": 113,
                "thumb_height": 150,
                "text": "Table of Contents\nPart One\nCategory: The Essence of Composition\nTypes and Functions\nCategories Great and Small\nKleisli Categories\nProducts and Coproducts\nSimple Algebraic Data Types\nFunctors\nFunctoriality\nFunction Types\nNatural Transformations\nPart Two\nDeclarative Programming\nLimits and Colimits\nFree Monoids\nRepresentable Functors\nThe Yoneda Lemma\nYoneda Embedding\nPart Three\nIt&rsquo;s All About Morphisms\nAdjunctions\nFree\/Forgetful Adjunctions\nMonads: Programmer&rsquo;s Definition\nMonads and Effects\nMonads Categorically\nComonads\nF-Algebras\nAlgebras for Monads\nEnds and Coends\nKan Extensions\nEnriched Categories\nTopoi\nLawvere Theories\nMonads, Monoids, and Categories\nThere is a free pdf version of this book with nicer typesetting available for download. You may order a hard-cover version with color illustrations at Blurb. Or you may watch me teaching this material to a live audience.\nPreface\nFor some time now I&rsquo;ve been floating the idea of writing a book about category theory that would be targeted at programmers. Mind you, not computer scientists but programmers &mdash; engineers rather than scientists. I know this sounds crazy and I am properly scared. I can&rsquo;t deny that there is a huge gap between science and engineering because I have worked on both sides of the divide. But I&rsquo;ve always felt a very strong compulsion to explain things. I have tremendous admiration for Richard Feynman who was the master of simple explanations. I know I&rsquo;m no Feynman, but I will try my best. I&rsquo;m starting by publishing this preface &mdash; which is supposed to motivate the reader to learn category theory &mdash; in hopes of starting a discussion and soliciting feedback.\nI will attempt, in the space of a few paragraphs, to convince you that this book is written for you, and whatever objections you might have to learning one of the most abstract branches of mathematics in your &ldquo;copious spare&nbsp;time&rdquo; are totally unfounded.\nMy optimism is based on several observations. First, category theory is a treasure trove&nbsp;of extremely useful programming ideas. Haskell programmers have been tapping this resource&nbsp;for a long time, and the ideas are slowly percolating into other languages, but this process is too slow. We need to speed it up.\nSecond, there are many different kinds of math, and they appeal to different audiences. You might be allergic to calculus or algebra, but it doesn&rsquo;t mean you won&rsquo;t enjoy category theory. I would go as far as to&nbsp;argue&nbsp;that category theory is the kind of math that is particularly well suited for the minds of programmers. That&rsquo;s because category theory &mdash; rather than dealing with particulars &mdash; deals with structure. It deals with the kind of structure that makes programs composable.\nComposition is at the very root of category theory &mdash; it&rsquo;s part of the definition of the category itself. And I will argue strongly that composition is the essence of programming. We&rsquo;ve been composing things forever, long before some great engineer came up with the idea of a subroutine. Some time ago the principles of structured programming revolutionized programming&nbsp;because they made blocks of code composable. Then came object oriented programming, which is all about composing objects. Functional programming is not only about composing functions and algebraic data structures &mdash; it makes concurrency composable &mdash; something that&rsquo;s virtually impossible with other programming paradigms.\nThird, I have a secret weapon, a butcher&rsquo;s knife, with which I will butcher math to make it more palatable to programmers. When you&rsquo;re a professional mathematician, you have to be very careful to get all your assumptions straight, qualify every statement properly, and construct all your proofs rigorously. This makes mathematical papers and books extremely hard to read for an outsider. I&rsquo;m a physicist by training, and in physics we made amazing advances using informal reasoning. Mathematicians laughed at the Dirac delta function, which was made up on the spot by the great physicist P. A. M. Dirac to solve some differential equations. They stopped laughing when they discovered a completely new branch of calculus called distribution theory that formalized Dirac&rsquo;s insights.\nOf course when using hand-waving arguments you run the risk of saying something blatantly wrong, so I will try to make sure that there is solid mathematical theory behind informal arguments in this book. I do have a worn-out copy of Saunders Mac Lane&rsquo;s Category Theory for the Working Mathematician on my nightstand.\nSince this is category theory for programmers I will illustrate all major concepts using computer code. You are probably aware that functional languages are closer to math than the more popular imperative languages. They also offer more abstracting power. So a natural temptation would be to say: You must learn Haskell before the bounty of category theory becomes available to you. But that would imply that category theory has no application outside of functional programming and that&rsquo;s simply not true. So I will provide a lot of C++ examples. Granted, you&rsquo;ll have to overcome some ugly syntax, the patterns might not stand out from the background of verbosity, and you might be forced to do some copy and paste in lieu of higher abstraction, but that&rsquo;s just the lot of a C++ programmer.\nBut you&rsquo;re not off the hook as far as Haskell is concerned. You don&rsquo;t have to become a Haskell programmer, but you need it as a language for sketching and documenting ideas to be implemented in C++. That&rsquo;s exactly how I got started with Haskell. I found its terse syntax and powerful type system a great help in understanding and implementing C++ templates, data structures, and algorithms. But since I can&rsquo;t expect the readers to already know Haskell, I will introduce it slowly and explain everything as I go.\nIf you&rsquo;re an experienced programmer, you might be asking yourself: I&rsquo;ve been coding for so long without worrying about category theory or functional methods, so what&rsquo;s changed? Surely you can&rsquo;t help but notice that there&rsquo;s been a steady stream of new functional features invading imperative languages. Even Java, the bastion of object-oriented programming, let the lambdas in C++ has recently been evolving at a frantic pace &mdash; a new standard every few years &mdash; trying to catch up with the changing world. All this activity is in preparation for a disruptive change or, as we physicist call it, a phase transition. If you keep heating water, it will eventually start boiling. We are now in the position of a frog that must decide if it should continue swimming in increasingly hot water, or start looking for some alternatives.\n\nOne of the forces that are driving the big change is the multicore revolution. The prevailing programming paradigm, object oriented programming, doesn&rsquo;t buy you anything in the realm of concurrency and parallelism, and instead encourages dangerous and buggy design. Data hiding, the basic premise of object orientation, when combined with sharing and mutation, becomes a recipe for data races. The idea of combining a mutex with the data it protects is nice but, unfortunately, locks don&rsquo;t compose, and lock hiding makes deadlocks more likely and harder to debug.\nBut even in the absence of concurrency, the growing complexity of software systems is testing the limits of scalability of the imperative paradigm. To put it simply, side effects are getting out of hand. Granted, functions that have side effects are often convenient and easy to write. Their effects can in principle be encoded in their names and in the comments. A function called SetPassword or WriteFile is obviously mutating some state and generating side effects, and we are used to dealing with that. It&rsquo;s only when we st…",
                "fallback": "  Bartosz Milewski's Programming Cafe Link: Category Theory for Programmers: The&nbsp;Preface",
                "from_url": "https:\/\/bartoszmilewski.com\/2014\/10\/28\/category-theory-for-programmers-the-preface\/",
                "service_icon": "https:\/\/s2.wp.com\/i\/webclip.png",
                "id": 1,
                "original_url": "https:\/\/bartoszmilewski.com\/2014\/10\/28\/category-theory-for-programmers-the-preface\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/L0EU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We have a "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CKC6FM9DF"
                            },
                            {
                                "type": "text",
                                "text": " channel that is quite now and did have video conversations covering parts of Milewski "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bartoszmilewski.com\/2014\/10\/28\/category-theory-for-programmers-the-preface\/"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "URDJXHSSE",
        "type": "message",
        "ts": "1576638210.012900",
        "client_msg_id": "db06d624-26fa-4f56-851d-7d29459266f8",
        "text": "thanks, I joined it. I used to use monads and adjunctions a lot in my research, but usually we thought of them in a pretty different way than the FPers do",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f5a3e5d83640",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-16\/876448714437_f5a3e5d836409852009a_72.jpg",
            "first_name": "",
            "real_name": "Alex Ellis",
            "display_name": "Alex Ellis",
            "team": "T5TCAFTA9",
            "name": "apellis",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576563075.009500",
        "parent_user_id": "URDJXHSSE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x33",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "thanks, I joined it. I used to use monads and adjunctions a lot in my research, but usually we thought of them in a pretty different way than the FPers do"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFPRPSA4S",
        "type": "message",
        "ts": "1576655271.013400",
        "client_msg_id": "b7a2b07f-3216-4ca5-8457-aebf02fd6a1e",
        "text": "Hi! I used to be a mathematician too if a couple years of grad school counts (fatally interested in algebraic topology). I'm curious what you mean by \"communication and writing have been forms of thought for me for a long time\". I think about those _as_ forms of thought often, but mostly because I'm looking for other ways of thinking.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5f4ac5375e5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f5f4ac5375e539e50ceedb08f65e9dd3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Robin Allison",
            "display_name": "Robin",
            "team": "T5TCAFTA9",
            "name": "robinps2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576563075.009500",
        "parent_user_id": "URDJXHSSE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EKMT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi! I used to be a mathematician too if a couple years of grad school counts (fatally interested in algebraic topology). I'm curious what you mean by \"communication and writing have been forms of thought for me for a long time\". I think about those "
                            },
                            {
                                "type": "text",
                                "text": "as",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " forms of thought often, but mostly because I'm looking for other ways of thinking."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]