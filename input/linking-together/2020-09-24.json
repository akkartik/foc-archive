[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1600933934.001000",
        "edited": {
            "user": "U013ZLJARC7",
            "ts": "1601613275.000000"
        },
        "client_msg_id": "05df0a25-5b7a-4a97-93ea-4194d5c13268",
        "text": "This is a very interesting approach to conversational AI via growing dataflow programs that (among other things) claims that \"Task-oriented dialogue is interactive programming\":\n<https:\/\/www.microsoft.com\/en-us\/research\/blog\/dialogue-as-dataflow-a-new-approach-to-conversational-ai\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600933934.001000",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1601018177.004600",
        "reply_users": [
            "UDQBTJ211",
            "U013ZLJARC7",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UDQBTJ211",
                "ts": "1600942972.001400"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1600952742.001600"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1601018177.004600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y1O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a very interesting approach to conversational AI via growing dataflow programs that (among other things) claims that \"Task-oriented dialogue is interactive programming\":\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.microsoft.com\/en-us\/research\/blog\/dialogue-as-dataflow-a-new-approach-to-conversational-ai\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDQBTJ211",
                    "ULK0Z4MPV",
                    "U013866H7LY",
                    "UA14TGLTC"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1600942972.001400",
        "client_msg_id": "7953b637-c1ab-440f-be8e-0fb860431c05",
        "text": "Great to see them putting an emphasis on trying to gracefully correct inevitable mistakes. Very practical and hype-free blog.\n\nI'm interested in how much builtin knowledge they are going to go for (\"...including pieces like *here* and *now* that are implicitly available from the beginning of the conversation...\"). Natural language is absolutely laced with assumed knowledge. Will it be able to understand \"my wife\", \"my sister\", \"my house\" etc. What about the gradient of niche or local knowledge - \"Boxing Day\" etc?\n\nThe problem with starting down this road is it is essentially arbitrary where you stop, and the user won't know where that is.\n\nI suppose it won't matter if the error correction is strong enough (\"When you say \"sister\" do you mean <mailto:Jane.Doe@outlook.com|Jane.Doe@outlook.com>?\")",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600933934.001000",
        "parent_user_id": "U013ZLJARC7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZgM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great to see them putting an emphasis on trying to gracefully correct inevitable mistakes. Very practical and hype-free blog.\n\nI'm interested in how much builtin knowledge they are going to go for (\"...including pieces like "
                            },
                            {
                                "type": "text",
                                "text": "here",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "now",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that are implicitly available from the beginning of the conversation...\"). Natural language is absolutely laced with assumed knowledge. Will it be able to understand \"my wife\", \"my sister\", \"my house\" etc. What about the gradient of niche or local knowledge - \"Boxing Day\" etc?\n\nThe problem with starting down this road is it is essentially arbitrary where you stop, and the user won't know where that is.\n\nI suppose it won't matter if the error correction is strong enough (\"When you say \"sister\" do you mean "
                            },
                            {
                                "type": "link",
                                "url": "mailto:Jane.Doe@outlook.com",
                                "text": "Jane.Doe@outlook.com"
                            },
                            {
                                "type": "text",
                                "text": "?\")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1600952742.001600",
        "client_msg_id": "b0894a0f-5401-45de-b48c-941b3da5e9f6",
        "text": "<@UDQBTJ211> What you're pointing to here is one of the fundamental problems of natural language understanding: to really understand language one must understand the world in which the speaker lives, including the agents who live there and their motivations.\n\nOne thing I find interesting about this paper in particular for FoC is that what they're doing in the personal assistant context could repurpose well to the narrower context of descriptive programming.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600933934.001000",
        "parent_user_id": "U013ZLJARC7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DGk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " What you're pointing to here is one of the fundamental problems of natural language understanding: to really understand language one must understand the world in which the speaker lives, including the agents who live there and their motivations.\n\nOne thing I find interesting about this paper in particular for FoC is that what they're doing in the personal assistant context could repurpose well to the narrower context of descriptive programming."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1600965052.001900",
        "client_msg_id": "e058daf8-e821-478e-80f2-a7202e67646a",
        "text": "<@U016VUZGUUQ> Regarding \"There just isn't anywhere else to go\":\n\n*Installing extensions* went from manual (TextMate\/Emacs\/Vim) -&gt; to third-party, centralized, but CLI style UI (Sublime Text's Package Control) -&gt; to integrated \"App Store\"-style extension installing experiences (Atom\/VS Code)\n\n*Extension capabilities* went from almost no ways to customize UI (TextMate, and VIM\/Emacs for anything non-textual) to customizing the UI through a custom API (Sublime Text) to customizing the UI in a standardized way with HTML\/CSS\/JS (Atom\/VS Code).\n\nThose are the progressions I don't see anywhere else they can go, i.e., installing extensions can't get any easier, and customizing UI can't get any easier.\n\nI think you're primarily asking about other parts of the API? But I'm not sure these APIs have had major limitations in other ways besides in customizing UI and installing extensions. The most notable example I can think of is async process management being added to Vim\/NeoVim. For the most part there just aren't other limitations, unless I'm missing them?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FTKr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " Regarding \"There just isn't anywhere else to go\":\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Installing extensions",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " went from manual (TextMate\/Emacs\/Vim) -> to third-party, centralized, but CLI style UI (Sublime Text's Package Control) -> to integrated \"App Store\"-style extension installing experiences (Atom\/VS Code)\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Extension capabilities",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " went from almost no ways to customize UI (TextMate, and VIM\/Emacs for anything non-textual) to customizing the UI through a custom API (Sublime Text) to customizing the UI in a standardized way with HTML\/CSS\/JS (Atom\/VS Code).\n\nThose are the progressions I don't see anywhere else they can go, i.e., installing extensions can't get any easier, and customizing UI can't get any easier.\n\nI think you're primarily asking about other parts of the API? But I'm not sure these APIs have had major limitations in other ways besides in customizing UI and installing extensions. The most notable example I can think of is async process management being added to Vim\/NeoVim. For the most part there just aren't other limitations, unless I'm missing them?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U016VUZGUUQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1600965892.002100",
        "client_msg_id": "28ae8239-1ae7-4453-8ecf-a2f5692c8814",
        "text": "<@UN9SCH5RD> Debugging and LSP are tough to address... to answer I think I have to zoom out. The way I wrote the piece was to draw on my observations watching conversations around people switching from TextMate to Sublime Text to Atom to VS Code, and reading people describing in their own words why they switching. And the overwhelming answer for Atom to VS Code isn't LSP or debugging, but it's because Atom was slow. (Note I'm leaving out the role extensions here because Atom and VS Code both have first-class extension support, whereas LSP is definitely a VS Code vs. Atom distinction.)\n\nThis isn't to say a lot of people don't also list debugging and LSP, but it was (and still is) dwarfed by performance discussions, and my goal was to have the article based as much as possible on what people are saying, not what I personally think is important.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8k15R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UN9SCH5RD"
                            },
                            {
                                "type": "text",
                                "text": " Debugging and LSP are tough to address... to answer I think I have to zoom out. The way I wrote the piece was to draw on my observations watching conversations around people switching from TextMate to Sublime Text to Atom to VS Code, and reading people describing in their own words why they switching. And the overwhelming answer for Atom to VS Code isn't LSP or debugging, but it's because Atom was slow. (Note I'm leaving out the role extensions here because Atom and VS Code both have first-class extension support, whereas LSP is definitely a VS Code vs. Atom distinction.)\n\nThis isn't to say a lot of people don't also list debugging and LSP, but it was (and still is) dwarfed by performance discussions, and my goal was to have the article based as much as possible on what people are saying, not what I personally think is important."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UN9SCH5RD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1600965971.002300",
        "client_msg_id": "d91ea1e7-6011-4ea6-86ad-d97f1f7613c9",
        "text": "Another point about LSP: Oddly enough, I think LSP benefits everyone except the incumbent more, because the incumbent can just get great support for these features through sheer inertia, whereas more resource-strapped outfits benefit more from the standardization by being able to work more efficiently.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zI6nG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another point about LSP: Oddly enough, I think LSP benefits everyone except the incumbent more, because the incumbent can just get great support for these features through sheer inertia, whereas more resource-strapped outfits benefit more from the standardization by being able to work more efficiently."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1600966188.002500",
        "client_msg_id": "48a85fe2-06df-478e-9aff-d4c8de0ba232",
        "text": "And a quick bit on debugging: Personally the debugging integration is my all-time favorite feature of VS Code. But I can't imagine very many people are using it, outside of experts. As far as I can tell, you have to make an `launch.json` file just to debug a default Node app? That's madness.\n\nThat's a great example of an early-stage VS Code feature, where a completely nutty implementation is just dropped on users. But over time I'm sure setting up debugging will be amazing, because of the pace of development. That's the VS Code way.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vgLo2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And a quick bit on debugging: Personally the debugging integration is my all-time favorite feature of VS Code. But I can't imagine very many people are using it, outside of experts. As far as I can tell, you have to make an "
                            },
                            {
                                "type": "text",
                                "text": "launch.json",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " file just to debug a default Node app? That's madness.\n\nThat's a great example of an early-stage VS Code feature, where a completely nutty implementation is just dropped on users. But over time I'm sure setting up debugging will be amazing, because of the pace of development. That's the VS Code way."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1600966490.002700",
        "client_msg_id": "ca7341be-0012-4294-b809-df623b936948",
        "text": "(As a side note I had a section that got cut that had more personal opinions on VS Code's features, especially LSP\/Debugging. But I decided to cut it and make it into a separate post because it was more based on what I personally think is important rather than what my pulse on the community at large thinks is important.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t6yvO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(As a side note I had a section that got cut that had more personal opinions on VS Code's features, especially LSP\/Debugging. But I decided to cut it and make it into a separate post because it was more based on what I personally think is important rather than what my pulse on the community at large thinks is important.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UT60XSVCN",
        "type": "message",
        "ts": "1600995381.004200",
        "client_msg_id": "7b826558-eb9c-4cab-a34a-ef1a18cc35aa",
        "text": "I have a feeling people here may enjoy this: <https:\/\/www.youtube.com\/watch?v=3C2tkQ3743E|https:\/\/www.youtube.com\/watch?v=3C2tkQ3743E>\nEspecially the first 10 minutes or so, before it starts going into fictional territory",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbc3e6041047",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bc3e6041047849518d1b042f0a29d5af.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "S.M Mukarram Nainar",
            "display_name": "S.M Mukarram Nainar",
            "team": "T5TCAFTA9",
            "name": "nainars",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Rethinking Progress. Techno Symphony by Victor Argonov Project",
                "title_link": "https:\/\/www.youtube.com\/watch?v=3C2tkQ3743E",
                "author_name": "complexnumbersgroup",
                "author_link": "https:\/\/www.youtube.com\/user\/complexnumbersgroup",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/3C2tkQ3743E\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Rethinking Progress. Techno Symphony by Victor Argonov Project",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/3C2tkQ3743E?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=3C2tkQ3743E",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=3C2tkQ3743E"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "brG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a feeling people here may enjoy this: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=3C2tkQ3743E",
                                "text": "https:\/\/www.youtube.com\/watch?v=3C2tkQ3743E"
                            },
                            {
                                "type": "text",
                                "text": "\nEspecially the first 10 minutes or so, before it starts going into fictional territory"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]