[
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1652112491.382469",
        "client_msg_id": "bb0a1def-510d-43b1-95c7-c041ccd47b81",
        "text": "For a couple years, I keep returning to ideas of composability, remix-ability, coding in small pieces, getting to snap them together and apart fluidly, like legos, and with lots of collaborators. This is what excites me about functional programming, how it lends itself to abstractions that compose really well. However I was recently inspired by <@UCUNN529Y> to throw elegant composability out of the window and simply enable coding in the small by appending small programs together...\n\n...and what we came up with is called *twittereval*. The idea is you add the words \"eval\" to a tweet's URL and then we evaluate it (and all the tweets above it or referenced) as JavaScript. It's obviously silly but also kinda neat, and I thought it would be thought provoking to this community. Excited to hear what ideas and suggestions you guys have! I'd also really love it if anyone tried it out and made anything cool :)\n\n<https:\/\/twitter.com\/stevekrouse\/status\/1523449402009948160>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652112491.382469",
        "reply_count": 17,
        "reply_users_count": 4,
        "latest_reply": "1652326942.650949",
        "reply_users": [
            "U01HKV85Y1J",
            "U5TCAFTD3",
            "UGWUJUZHT",
            "UCUSW7WVD"
        ],
        "replies": [
            {
                "user": "U01HKV85Y1J",
                "ts": "1652112701.965349"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1652112938.045199"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1652113391.680759"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1652113454.995469"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1652120128.061089"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1652130506.831289"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1652131750.588559"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1652131997.876329"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1652132114.274009"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1652163795.559989"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1652164030.216709"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1652288866.690159"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1652289531.674649"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1652289582.627959"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1652289624.145249"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1652306207.998469"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1652326942.650949"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1652326942.650949",
        "attachments": [
            {
                "from_url": "https:\/\/twitter.com\/stevekrouse\/status\/1523449402009948160",
                "ts": 1652053616,
                "id": 1,
                "original_url": "https:\/\/twitter.com\/stevekrouse\/status\/1523449402009948160",
                "fallback": "<https:\/\/twitter.com\/stevekrouse|@stevekrouse>: I rebuilt my personal website entirely on Twitter, in a series of tweets, &amp; evaluated with a silly :sparkles: new service :sparkles: <https:\/\/twitter.com\/JanPaul123|@JanPaul123> &amp; I hacked together to play with \"coding in the small\" or \"micro coding\"...\n\nIntroducing twittereval!",
                "text": "I rebuilt my personal website entirely on Twitter, in a series of tweets, &amp; evaluated with a silly :sparkles: new service :sparkles: <https:\/\/twitter.com\/JanPaul123|@JanPaul123> &amp; I hacked together to play with \"coding in the small\" or \"micro coding\"...\n\nIntroducing twittereval!",
                "author_name": "Steve Krouse",
                "author_link": "https:\/\/twitter.com\/stevekrouse\/status\/1523449402009948160",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/920962798590595074\/MHJaRnhd_normal.jpg",
                "author_subname": "@stevekrouse",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9h2A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For a couple years, I keep returning to ideas of composability, remix-ability, coding in small pieces, getting to snap them together and apart fluidly, like legos, and with lots of collaborators. This is what excites me about functional programming, how it lends itself to abstractions that compose really well. However I was recently inspired by "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUNN529Y"
                            },
                            {
                                "type": "text",
                                "text": " to throw elegant composability out of the window and simply enable coding in the small by appending small programs together...\n\n...and what we came up with is called "
                            },
                            {
                                "type": "text",
                                "text": "twittereval",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". The idea is you add the words \"eval\" to a tweet's URL and then we evaluate it (and all the tweets above it or referenced) as JavaScript. It's obviously silly but also kinda neat, and I thought it would be thought provoking to this community. Excited to hear what ideas and suggestions you guys have! I'd also really love it if anyone tried it out and made anything cool :)\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/stevekrouse\/status\/1523449402009948160"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC",
                    "U02MXPT5UDC",
                    "U02E4DAQGSZ",
                    "UJ6LDMMN0"
                ],
                "count": 5
            },
            {
                "name": "rolling_on_the_floor_laughing",
                "users": [
                    "U013ZLJARC7",
                    "UJ6LDMMN0"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U01HKV85Y1J",
        "type": "message",
        "ts": "1652112701.965349",
        "client_msg_id": "73666e14-ae73-442b-9dd2-9057c0b39f96",
        "text": "*just in case* you haven't heard of it (you probably have), check out \"flow-based programming\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf67023e922f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f67023e922f1b8898e41ad2ff927b301.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "David Brooks",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "brodavi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652112491.382469",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VWu5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "just in case",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " you haven't heard of it (you probably have), check out \"flow-based programming\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1652112938.045199",
        "client_msg_id": "4c05615f-e69d-466e-92a5-75a6a20bab12",
        "text": "Thanks! Quite familiar with that kind of thing. I normally refer a similar but slightly different category of things as \"node and wire\" programming. I'm somewhat into it, but not really for reasons of modularity &amp; composability. I normally think of node-and-wire environments as a UI that's an alternative to text, so the semantics aren't as relevant",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652112491.382469",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LfG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! Quite familiar with that kind of thing. I normally refer a similar but slightly different category of things as \"node and wire\" programming. I'm somewhat into it, but not really for reasons of modularity & composability. I normally think of node-and-wire environments as a UI that's an alternative to text, so the semantics aren't as relevant"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U023V63MF6V"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U01HKV85Y1J",
        "type": "message",
        "ts": "1652113391.680759",
        "client_msg_id": "26cc4462-1fc5-4836-83b8-c5286ccac6d3",
        "text": "It does get a bit mixed up with all the similar-looking tools out there, but Morrison's original idea definitely puts modularity and composability front and center. An \"old school\" flow-based programming program can be put together in text, for instance.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf67023e922f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f67023e922f1b8898e41ad2ff927b301.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "David Brooks",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "brodavi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652112491.382469",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xRMi8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It does get a bit mixed up with all the similar-looking tools out there, but Morrison's original idea definitely puts modularity and composability front and center. An \"old school\" flow-based programming program can be put together in text, for instance."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1652113454.995469",
        "client_msg_id": "9fa8c52d-f49c-482e-b983-03a4d4e51e29",
        "text": "Oh interesting, can you point me to a good resource?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652112491.382469",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oGv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh interesting, can you point me to a good resource?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1652120128.061089",
        "client_msg_id": "f50cd908-5c34-41b7-b2ee-62fd4b2356ab",
        "text": "a) I want to know more, but I don’t use Twitter much.  Where should I look?\n\nb) Knee-jerk thoughts about composition, FBP, etc.: &lt;to come&gt;",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652112491.382469",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hFJ6w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "a) I want to know more, but I don’t use Twitter much.  Where should I look?\n\nb) Knee-jerk thoughts about composition, FBP, etc.: <to come>"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01HKV85Y1J",
        "type": "message",
        "ts": "1652130506.831289",
        "client_msg_id": "5f7431f8-025a-4635-8563-a33e39f0ac05",
        "text": "Sure! His (Morrison's) website is a pretty good primer: <https:\/\/jpaulm.github.io\/fbp\/index.html>   he also wrote a book about it: <https:\/\/www.amazon.com\/Flow-Based-Programming-J-Paul-Morrison-ebook\/dp\/B004PLO66O>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf67023e922f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f67023e922f1b8898e41ad2ff927b301.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "David Brooks",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "brodavi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652112491.382469",
        "parent_user_id": "U5TCAFTD3",
        "attachments": [
            {
                "from_url": "https:\/\/jpaulm.github.io\/fbp\/index.html",
                "id": 1,
                "original_url": "https:\/\/jpaulm.github.io\/fbp\/index.html",
                "fallback": "Official website for flow-based programming",
                "text": "Official website for flow-based programming",
                "service_name": "jpaulm.github.io"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s8f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sure! His (Morrison's) website is a pretty good primer: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/jpaulm.github.io\/fbp\/index.html"
                            },
                            {
                                "type": "text",
                                "text": "   he also wrote a book about it: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.amazon.com\/Flow-Based-Programming-J-Paul-Morrison-ebook\/dp\/B004PLO66O"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1652131750.588559",
        "client_msg_id": "2edb6834-e2a0-4d54-a570-a12c435b1b36",
        "text": "Most FBP discussion is on discord <https:\/\/discord.gg\/tTgUa99c>\n\t\n(there is, too, a google group and slack group)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652112491.382469",
        "parent_user_id": "U5TCAFTD3",
        "attachments": [
            {
                "from_url": "https:\/\/discord.gg\/tTgUa99c",
                "image_url": "https:\/\/cdn.discordapp.com\/icons\/760229165856587817\/3db391e3e126fd2f1e3a0bbf2505964b.jpg?size=256",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 7616,
                "id": 1,
                "original_url": "https:\/\/discord.gg\/tTgUa99c",
                "fallback": "Discord: Join the Flow-based Programming Discord Server!",
                "text": "Check out the Flow-based Programming community on Discord - hang out with 88 other members and enjoy free voice and text chat.",
                "title": "Join the Flow-based Programming Discord Server!",
                "title_link": "https:\/\/discord.gg\/tTgUa99c",
                "service_name": "Discord"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sb1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Most FBP discussion is on discord "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/discord.gg\/tTgUa99c"
                            },
                            {
                                "type": "text",
                                "text": "\n\t\n(there is, too, a google group and slack group)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1652131997.876329",
        "client_msg_id": "a25f091e-45ce-48c7-b4c3-c756f5d104be",
        "text": "The secret sauce of composition is - *independence* (AKA concurrency[^parallelism] (I have begun to call it 0D (zero dependencies))).\n\nThe secret sauce of FBP is concurrency.\n\nOnce you have 0D, you can draw diagrams (if you wish), incl. node-and-wire diagrams.\n\nTrying to draw diagrams in a sync-based paradigm (i.e. just about every existing programming language) meets with resistance, and, eventually, hopelessness and bloatware.\n\n[^parallelism]: Parallelism is often conflated with concurrency, but is only a subset of concurrency.  Rob Pike’s talk (“Concurrency is not Parallelism, It’s Better”) gave me the words for dividing-and-conquering these concepts ...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652112491.382469",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T=je",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The secret sauce of composition is - *independence* (AKA concurrency[^parallelism] (I have begun to call it 0D (zero dependencies))).\n\nThe secret sauce of FBP is concurrency.\n\nOnce you have 0D, you can draw diagrams (if you wish), incl. node-and-wire diagrams.\n\nTrying to draw diagrams in a sync-based paradigm (i.e. just about every existing programming language) meets with resistance, and, eventually, hopelessness and bloatware.\n\n[^parallelism]: Parallelism is often conflated with concurrency, but is only a subset of concurrency.  Rob Pike’s talk (“Concurrency is not Parallelism, It’s Better”) gave me the words for dividing-and-conquering these concepts ..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01HKV85Y1J",
        "type": "message",
        "ts": "1652132114.274009",
        "client_msg_id": "b1f5b47f-a44c-4dd1-9ce1-22997e21c670",
        "text": "oh wow I didn't even know about the discord. thanks! :thumbsup_all:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf67023e922f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f67023e922f1b8898e41ad2ff927b301.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "David Brooks",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "brodavi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652112491.382469",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y8B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh wow I didn't even know about the discord. thanks! "
                            },
                            {
                                "type": "emoji",
                                "name": "thumbsup_all"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1652152640.335749",
        "client_msg_id": "09e3f53e-49fd-4e6b-a5f2-c226aa19ec60",
        "text": "I mean \"breeze\" as in \"wind\" as in.... like... pause right about here <https:\/\/youtu.be\/gdpJ-akDGdw?t=26> and it's hard from the mass of green where the edges of the trees are.  Then when you play, between the breeze and the camera movement, it's a lot easier to see individual trees.\n\nAnother thing is being able to shake a graph.  Like, take this <https:\/\/observablehq.com\/@d3\/force-directed-graph>.  Pulling nodes there is a little floppy.  Add `simulation.tick(10);` to the bottom of the `dragged` function to stiffen it up.  (Press the little play button to commit the change.)  Then you can even tell the centrality of a node with the edges turned off `linkStrokeOpacity = 0.0`.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cgp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I mean \"breeze\" as in \"wind\" as in.... like... pause right about here "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/gdpJ-akDGdw?t=26"
                            },
                            {
                                "type": "text",
                                "text": " and it's hard from the mass of green where the edges of the trees are.  Then when you play, between the breeze and the camera movement, it's a lot easier to see individual trees.\n\nAnother thing is being able to shake a graph.  Like, take this "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/observablehq.com\/@d3\/force-directed-graph"
                            },
                            {
                                "type": "text",
                                "text": ".  Pulling nodes there is a little floppy.  Add "
                            },
                            {
                                "type": "text",
                                "text": "simulation.tick(10);",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to the bottom of the "
                            },
                            {
                                "type": "text",
                                "text": "dragged",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " function to stiffen it up.  (Press the little play button to commit the change.)  Then you can even tell the centrality of a node with the edges turned off "
                            },
                            {
                                "type": "text",
                                "text": "linkStrokeOpacity = 0.0",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1652154819.897129",
        "client_msg_id": "0954dba3-cf93-464f-bdb5-bab786663c6b",
        "text": "<@U85HCL7JP> I'd say Replay <https:\/\/www.replay.io\/> is the coolest tracer I've seen recently.  It's use of \"print statements\" is very practical and well conceived.  Usually you want very precise slices into the whole of the trace.\n\nAnother view I really like, is to select, say, an instance variable then layout the trace so that every access of the ivar is on a line.  So if you picture the whole trace as a ribbon, this basically makes a sort of cylinder of it looping back around every time you use the ivar.  Tightness now corresponds to hotspots for that variable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS",
        "attachments": [
            {
                "from_url": "https:\/\/www.replay.io\/",
                "image_url": "https:\/\/assets.website-files.com\/613b96978e0f483f60fbb8c0\/6141ed0a4a91471950274966_OPG.png",
                "image_width": 478,
                "image_height": 250,
                "image_bytes": 91931,
                "id": 1,
                "original_url": "https:\/\/www.replay.io\/",
                "fallback": "The Time Travel Debugger for Web Development",
                "text": "Record play, pause, and inspect your web applications with familiar browser developer tools.",
                "title": "The Time Travel Debugger for Web Development",
                "title_link": "https:\/\/www.replay.io\/",
                "service_name": "replay.io"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mxge",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U85HCL7JP"
                            },
                            {
                                "type": "text",
                                "text": " I'd say Replay "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.replay.io\/"
                            },
                            {
                                "type": "text",
                                "text": " is the coolest tracer I've seen recently.  It's use of \"print statements\" is very practical and well conceived.  Usually you want very precise slices into the whole of the trace.\n\nAnother view I really like, is to select, say, an instance variable then layout the trace so that every access of the ivar is on a line.  So if you picture the whole trace as a ribbon, this basically makes a sort of cylinder of it looping back around every time you use the ivar.  Tightness now corresponds to hotspots for that variable."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "I can't see anything. Am I too late?",
        "files": [
            {
                "id": "F03EK8JBKFY",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UCUSW7WVD",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qfi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I can't see anything. Am I too late?"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1652163795.559989",
        "client_msg_id": "1439c63b-6e81-40ee-b050-40bcf918358b",
        "thread_ts": "1652112491.382469",
        "parent_user_id": "U5TCAFTD3"
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1652164030.216709",
        "client_msg_id": "eeb31f3b-ad7b-4f63-b54f-a6c2f53651cc",
        "text": "What do y'all do for sandboxing? :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652112491.382469",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DbP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What do y'all do for sandboxing? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]