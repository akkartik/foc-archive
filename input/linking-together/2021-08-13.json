[
    {
        "text": "The new <https:\/\/processing.org> features a structured editor that allows anyone to create a variation of the new logo. While the editor shows code, all manipulations can only be made using the mouse (scrubbers).",
        "files": [
            {
                "id": "F02BG72TMCH",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U01ULEWACPP",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NxwE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The new "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/processing.org"
                            },
                            {
                                "type": "text",
                                "text": " features a structured editor that allows anyone to create a variation of the new logo. While the editor shows code, all manipulations can only be made using the mouse (scrubbers)."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1628841494.049000",
        "thread_ts": "1628841494.049000",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1628925810.058400",
        "reply_users": [
            "U9C92716C",
            "U01ULEWACPP",
            "UF6RLAL7J"
        ],
        "replies": [
            {
                "user": "U9C92716C",
                "ts": "1628857721.052400"
            },
            {
                "user": "U01ULEWACPP",
                "ts": "1628862734.052800"
            },
            {
                "user": "UF6RLAL7J",
                "ts": "1628925810.058400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart_eyes",
                "users": [
                    "U02ADH37E02",
                    "U013ZLJARC7",
                    "U9C92716C",
                    "U019PRL1BNU",
                    "UDQBTJ211"
                ],
                "count": 5
            },
            {
                "name": "ok_hand",
                "users": [
                    "UN9SCH5RD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1628846662.049800",
        "client_msg_id": "36c67828-0dcb-41cd-84c7-6eb96967800e",
        "text": "Which are the primitives of your notation?\n\n&gt; So Lynch’s five primitives comprise a *notation.*\n&gt; It’s *composable.* A small number of simple elements can be combined, according to their own grammar, for more complex descriptions. There’s no cap on complexity; this isn’t paint by numbers. The city map can be infinitely large.\n&gt; Compositions are *shareable.* And what’s more, they’re *degradable:* a partial map still functions as a map; one re-drawn from memory on a whiteboard still carries the gist. So shareable, and pragmatically shareable.\n&gt; Not only are maps in this notation functional for communication, but it’s possible to look at a sketched city map and deconstruct it into its primitive elements (without knowing Lynch’s system) and see how to use those elements to extend or correct the map, or create a whole new one. So the notation is *learnable.*\n<https:\/\/interconnected.org\/home\/2021\/08\/12\/notation>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2qpI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Which are the primitives of your notation?\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So Lynch’s five primitives comprise a "
                            },
                            {
                                "type": "text",
                                "text": "notation.",
                                "style": {
                                    "bold": true
                                }
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s "
                            },
                            {
                                "type": "text",
                                "text": "composable.",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " A small number of simple elements can be combined, according to their own grammar, for more complex descriptions. There’s no cap on complexity; this isn’t paint by numbers. The city map can be infinitely large."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Compositions are "
                            },
                            {
                                "type": "text",
                                "text": "shareable.",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " And what’s more, they’re "
                            },
                            {
                                "type": "text",
                                "text": "degradable:",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " a partial map still functions as a map; one re-drawn from memory on a whiteboard still carries the gist. So shareable, and pragmatically shareable."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not only are maps in this notation functional for communication, but it’s possible to look at a sketched city map and deconstruct it into its primitive elements (without knowing Lynch’s system) and see how to use those elements to extend or correct the map, or create a whole new one. So the notation is "
                            },
                            {
                                "type": "text",
                                "text": "learnable.",
                                "style": {
                                    "bold": true
                                }
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/interconnected.org\/home\/2021\/08\/12\/notation"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U013ZLJARC7",
                    "U027P92A0N5"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1628855573.050800",
        "edited": {
            "user": "U01ULEWACPP",
            "ts": "1628856755.000000"
        },
        "client_msg_id": "b2328164-066d-499a-83dd-cb7c25229908",
        "text": "&gt; CodeTour is a VS Code extension that allows you to record and playback guided tours of codebases, directly within the editor. You can create tours and add steps. Just go to any file and click the (+) icon next to the line of code. You can then annotate this. After you’ve added steps, you can then playback a tour. \n&gt; \n&gt; <https:\/\/marketplace.visualstudio.com\/items?itemName=vsls-contrib.codetour>\n&gt; \n&gt; <https:\/\/twitter.com\/LostInTangent\/status\/1425901618780729345>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1628855573.050800",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1628866062.053200",
        "reply_users": [
            "U01ULEWACPP",
            "U0282PL61U1",
            "UCUSW7WVD"
        ],
        "replies": [
            {
                "user": "U01ULEWACPP",
                "ts": "1628856188.051600"
            },
            {
                "user": "U0282PL61U1",
                "ts": "1628856732.051800"
            },
            {
                "user": "U01ULEWACPP",
                "ts": "1628856947.052100"
            },
            {
                "user": "U0282PL61U1",
                "ts": "1628861073.052600"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1628866062.053200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "79x",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "CodeTour is a VS Code extension that allows you to record and playback guided tours of codebases, directly within the editor. You can create tours and add steps. Just go to any file and click the (+) icon next to the line of code. You can then annotate this. After you’ve added steps, you can then playback a tour. \n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/marketplace.visualstudio.com\/items?itemName=vsls-contrib.codetour"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/LostInTangent\/status\/1425901618780729345"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1628856188.051600",
        "client_msg_id": "9bedc77a-4275-494e-bf07-be07274a8d20",
        "text": "<@U0282PL61U1> This one might be interesting for you. Literate programming?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1628855573.050800",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tnb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0282PL61U1"
                            },
                            {
                                "type": "text",
                                "text": " This one might be interesting for you. Literate programming?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0282PL61U1",
        "type": "message",
        "ts": "1628856732.051800",
        "client_msg_id": "f92a9ba8-6ed5-443b-94bd-e9c476f2d222",
        "text": "Neat! I remember trying to use reveal.js to outline my codebase once :slightly_smiling_face: I think with voice over this extension could be quite useful. There were some youtubers trying to present complex projects like jquery but sadly that trend did not kick off. While this approach fixes code comprehension, literate programming solves the problem when such presentations and codebases go out of sync too.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8f365fd896e9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529753983250_8f365fd896e9c8f573b5_72.jpg",
            "first_name": "xyzzy",
            "real_name": "xyzzy",
            "display_name": "xyzzy",
            "team": "T5TCAFTA9",
            "name": "moodyharsh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1628855573.050800",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Ob",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Neat! I remember trying to use reveal.js to outline my codebase once "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " I think with voice over this extension could be quite useful. There were some youtubers trying to present complex projects like jquery but sadly that trend did not kick off. While this approach fixes code comprehension, literate programming solves the problem when such presentations and codebases go out of sync too."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1628856947.052100",
        "client_msg_id": "8a92f82f-cb6d-472c-9dcb-a3d510b49769",
        "text": "True, the syncing part might not be as great compared to literate programming. From what I can tell, the extension works by annotating the Line of Code @ File. But the extension keeps track of code changes and updates the annotations accordingly. Simple.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1628855573.050800",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "90aI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "True, the syncing part might not be as great compared to literate programming. From what I can tell, the extension works by annotating the Line of Code @ File. But the extension keeps track of code changes and updates the annotations accordingly. Simple."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U9C92716C",
        "type": "message",
        "ts": "1628857721.052400",
        "client_msg_id": "d8d6b699-576a-4fe6-8682-5b9b055b8811",
        "text": "It wants to be backdrivable so bad :stuck_out_tongue_winking_eye:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6bd6fe3fcf91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-20\/1137095139906_6bd6fe3fcf91b6f41781_72.jpg",
            "first_name": "",
            "real_name": "Dalton Banks",
            "display_name": "daltonb",
            "team": "T5TCAFTA9",
            "name": "dalton",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1628841494.049000",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jCS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It wants to be backdrivable so bad "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue_winking_eye",
                                "unicode": "1f61c"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0282PL61U1",
        "type": "message",
        "ts": "1628861073.052600",
        "client_msg_id": "8cae7d92-e0b3-4869-92f8-7b265b91cef1",
        "text": "An IDE for literate programming would be radically different, kinda like Scrivener which is used to write film screenplays. There’s also Leo editor. I think it is definitely high time for more tools like CodeTour that aim at code comprehension and not just code completion! It feels like intro.js but for code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8f365fd896e9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529753983250_8f365fd896e9c8f573b5_72.jpg",
            "first_name": "xyzzy",
            "real_name": "xyzzy",
            "display_name": "xyzzy",
            "team": "T5TCAFTA9",
            "name": "moodyharsh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1628855573.050800",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nWBL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "An IDE for literate programming would be radically different, kinda like Scrivener which is used to write film screenplays. There’s also Leo editor. I think it is definitely high time for more tools like CodeTour that aim at code comprehension and not just code completion! It feels like intro.js but for code."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1628862734.052800",
        "client_msg_id": "e644a0dd-c698-4e00-bc33-5c89cf8591a5",
        "text": "What does that mean?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1628841494.049000",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bjXy8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What does that mean?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1628866062.053200",
        "client_msg_id": "c107b61d-55c6-4fb6-83ce-29b384284b54",
        "text": "You could partially solve the problem of stale code locations by including git hashes in the location representations. Coupled with some visual indicator of how old a given line is in a tour, that helps readers\/viewers gauge how much to trust the tour.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1628855573.050800",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H+=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You could partially solve the problem of stale code locations by including git hashes in the location representations. Coupled with some visual indicator of how old a given line is in a tour, that helps readers\/viewers gauge how much to trust the tour."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "U01ULEWACPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "USF232R18",
        "type": "message",
        "ts": "1628889068.055400",
        "client_msg_id": "b12a4986-c866-43b0-930f-2ee30f7c09f9",
        "text": "Hi all! Question: Has anyone worked on, or used, a Jupyter\/IPython-style sketchbook\/notebook for a blocks-coding (or otherwise child-oriented) environment? Or do you know of any?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2a9da794e76",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2a9da794e76eb7f244c805380c5bf086.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0000-72.png",
            "first_name": "",
            "real_name": "Ben Wheeler",
            "display_name": "Ben Wheeler",
            "team": "T5TCAFTA9",
            "name": "wheeler.benjamin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nv2Ax",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi all! Question: Has anyone worked on, or used, a Jupyter\/IPython-style sketchbook\/notebook for a blocks-coding (or otherwise child-oriented) environment? Or do you know of any?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1628905589.058100",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1628912463.000000"
        },
        "client_msg_id": "c85774af-48f3-463c-a0e2-936395a1d2a2",
        "text": "<https:\/\/blog.bracha.org\/exemplarDemo\/exemplar2021.html?snapshot=BankAccountExemplarDemo.vfuel#>\n\nThis blog post by Gilad Bracha describes the recently added \"exemplar\" support to the Newspeak programming language. This lets you annotate the code with example values. Whenever you browse code, their IDE then shows you not just the code but also the example values and since the IDE is live you can play around with them.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qL1h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/blog.bracha.org\/exemplarDemo\/exemplar2021.html?snapshot=BankAccountExemplarDemo.vfuel#"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThis blog post by Gilad Bracha describes the recently added \"exemplar\" support to the Newspeak programming language. This lets you annotate the code with example values. Whenever you browse code, their IDE then shows you not just the code but also the example values and since the IDE is live you can play around with them."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UJBAJNFLK",
                    "U85HCL7JP",
                    "U013ZLJARC7",
                    "UJ6LDMMN0"
                ],
                "count": 5
            },
            {
                "name": "+1",
                "users": [
                    "U027P92A0N5"
                ],
                "count": 1
            }
        ]
    }
]