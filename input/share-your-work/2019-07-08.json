[
    {
        "user": "U85MWBKEY",
        "type": "message",
        "ts": "1562602057.135000",
        "edited": {
            "user": "U85MWBKEY",
            "ts": "1562602272.000000"
        },
        "client_msg_id": "58c5b4b0-5c16-4780-ac3a-1fc470aaa91f",
        "text": "Hey all, <@UDJ8A6RNH> and I have been playing around with the idea of making popular specifications (like OpenAPI, infrastructure as code tools, etc) into programs instead of giant yaml files. The work makes it really easy to create projectional editors on top of these standards. I think more and more of the systems we build will eventually be specified declaratively and systems like the ones we describe can help usher in some new approaches to old problems. Let us know what you think\n<https:\/\/link.medium.com\/KmdpsyrT9X>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "88eacb7e65ed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-08\/681438296241_88eacb7e65edebc579ab_72.jpg",
            "first_name": "Aidan",
            "real_name": "Aidan Cunniffe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "acunniffe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562602057.135000",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1562788060.142400",
        "reply_users": [
            "UHWC9PXBL",
            "U7C7B75R6"
        ],
        "replies": [
            {
                "user": "UHWC9PXBL",
                "ts": "1562783183.139300"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1562788060.142400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9Z9p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey all, "
                            },
                            {
                                "type": "user",
                                "user_id": "UDJ8A6RNH"
                            },
                            {
                                "type": "text",
                                "text": " and I have been playing around with the idea of making popular specifications (like OpenAPI, infrastructure as code tools, etc) into programs instead of giant yaml files. The work makes it really easy to create projectional editors on top of these standards. I think more and more of the systems we build will eventually be specified declaratively and systems like the ones we describe can help usher in some new approaches to old problems. Let us know what you think\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/link.medium.com\/KmdpsyrT9X"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6BRN7A0Y",
        "type": "message",
        "ts": "1562648008.135500",
        "client_msg_id": "56aee64b-1bd0-4af2-b273-4ec7056480dd",
        "text": "Sorry I missed the rest of this thread folks!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gee6ec3be3e3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eee6ec3be3e3176ff1e1119301630812.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Paul",
            "real_name": "Paul Biggar",
            "display_name": "pbiggar",
            "team": "T5TCAFTA9",
            "name": "pbiggar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ahj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry I missed the rest of this thread folks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6BRN7A0Y",
        "type": "message",
        "ts": "1562648068.135700",
        "client_msg_id": "cb0f9490-3c08-45fe-bb59-ebfa0ecb8145",
        "text": "<@UC6997THT> The point of that example was that you’re required to handle the case where the numbers aren’t integers, while in python (sub in your favorite exception-based lang) you’d have exceptions here. You can guard exceptions, but the compiler won’t tell you to.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gee6ec3be3e3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eee6ec3be3e3176ff1e1119301630812.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Paul",
            "real_name": "Paul Biggar",
            "display_name": "pbiggar",
            "team": "T5TCAFTA9",
            "name": "pbiggar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "60zcA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": " The point of that example was that you’re required to handle the case where the numbers aren’t integers, while in python (sub in your favorite exception-based lang) you’d have exceptions here. You can guard exceptions, but the compiler won’t tell you to."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1562652562.136000",
        "client_msg_id": "3eacfbdb-72e6-4c5b-84f9-b262ae0ff14d",
        "text": "Yes but it doesn't actually help anything in the example. If some other code calls it with `10, \"5\"` that code will just return 0 and now the error is hidden. The example is not a good example of how a type system solve issues. Instead it ends up being an example of how to make the code **silently** fail",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WVYq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes but it doesn't actually help anything in the example. If some other code calls it with "
                            },
                            {
                                "type": "text",
                                "text": "10, \"5\"",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that code will just return 0 and now the error is hidden. The example is not a good example of how a type system solve issues. Instead it ends up being an example of how to make the code **silently** fail"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]