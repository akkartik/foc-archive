[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1751630127.694909",
        "edited": {
            "user": "U013ZLJARC7",
            "ts": "1751630602.000000"
        },
        "client_msg_id": "1124C8FE-F285-4817-B188-B1265C6CB07D",
        "text": "FEXPRs made static analysis, and this compiler optimization, too hard during the period of the 80s when getting Lisp to run fast enough was a major concern. There’s a paper about it by Kent Pitman.\n\nEdit: here’s an annotated copy of the paper <https:\/\/www.nhplace.com\/kent\/Papers\/Special-Forms.html|https:\/\/www.nhplace.com\/kent\/Papers\/Special-Forms.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1749390179.045749",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wmFOQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FEXPRs made static analysis, and this compiler optimization, too hard during the period of the 80s when getting Lisp to run fast enough was a major concern. There’s a paper about it by Kent Pitman."
                            },
                            {
                                "type": "text",
                                "text": "\n\nEdit: "
                            },
                            {
                                "type": "text",
                                "text": "here’s"
                            },
                            {
                                "type": "text",
                                "text": " an annotated copy of the paper "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.nhplace.com\/kent\/Papers\/Special-Forms.html",
                                "text": "https:\/\/www.nhplace.com\/kent\/Papers\/Special-Forms.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1751634568.674989",
        "client_msg_id": "f4601546-9125-4631-b56a-467619198c05",
        "text": "I think of of T2T primarily as \"staged computation\". T2T is macros (with syntax beyond parens). Is T2T FEXPRs? I don't know now. I just learned that FEXPRs can be treated as full-blown 1st class entities, like 1st class functions. Macros execute at \"compile time\". FEXPRs execute at \"run time\".  Pondering ... <@UJBAJNFLK>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1749390179.045749",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DLSEM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think of of T2T primarily as \"staged computation\". T2T is macros (with syntax beyond parens). Is T2T FEXPRs? I don't know now. I just learned that FEXPRs can be treated as full-blown 1st class entities, like 1st class functions. Macros execute at \"compile time\". FEXPRs execute at \"run time\".  Pondering ... "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1751635107.869409",
        "client_msg_id": "e9ae73ed-c1c6-4424-ac14-38eb4863b7bc",
        "text": "Eval() \/is\/ awesome. We use it every day under the politically correct name \"compiler\". The dangerous part is allowing end-users access to it or using it to slurp in used chewing gum that we peel off of dirty sidewalks. That, to me, doesn't mean that eval() should be expunged from programming languages. Production Engineers and their tools should detect instances of eval() leaking into production code, but, design Engineers should not be prohibited from using it. IMO, t2t does a lot of stuff - in a separate pass - that I would use eval() for.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1749390179.045749",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h5GpV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Eval() \/is\/ awesome. We use it every day under the politically correct name \"compiler\". The dangerous part is allowing end-users access to it or using it to slurp in used chewing gum that we peel off of dirty sidewalks. That, to me, doesn't mean that eval() should be expunged from programming languages. Production Engineers and their tools should detect instances of eval() leaking into production code, but, design Engineers should not be prohibited from using it. IMO, t2t does a lot of stuff - in a separate pass - that I would use eval() for."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1751656544.186419",
        "client_msg_id": "e490c5a7-c4cf-4726-bfd3-f046043b128d",
        "text": "Very interesting. Thanks! I watched the video in the Welcome window. First impressions:\n1. I wish it were 3D. Layers.\n2. Multiple outputs would be nice. Output could be JSON, e.g. `console.log(\"Hello\");` produces `{\"stdout\": \"Hello\"}`. This would allow \"fan-out\" - feed the same output to multiple receivers, letting each receiver pick and choose outputs that it wants to deal with. Our function-based mindset implies that there is but one output, hence, output doesn't need to be tagged, something which I find to be very restrictive.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751438149.078389",
        "parent_user_id": "U08294YLWJH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nTC0i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very interesting. Thanks! I watched the video in the Welcome window. First impressions:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I wish it were 3D. Layers."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Multiple outputs would be nice. Output could be JSON, e.g. "
                                    },
                                    {
                                        "type": "text",
                                        "text": "console.log(\"Hello\");",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " produces "
                                    },
                                    {
                                        "type": "text",
                                        "text": "{\"stdout\": \"Hello\"}",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ". This would allow \"fan-out\" - feed the same output to multiple receivers, letting each receiver pick and choose outputs that it wants to deal with. Our function-based mindset implies that there is but one output, hence, output doesn't need to be tagged, something which I find to be very restrictive."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U07BD7U4S4R"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1751663910.266749",
        "client_msg_id": "0153fe36-f085-44ae-b918-0a39be44e3e3",
        "text": "&gt; private areas like this slack\nHalf of <https:\/\/futureofcoding.org\/community.html> is a description of the software people have set up to ensure that this is not a private area.\n\nI would love if we could have \"human-scale interactions\" here, but that's not what we've set up.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751470045.236319",
        "parent_user_id": "U08DYF4SEAE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wqQQu",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "private areas like this slack"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nHalf of "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.org\/community.html"
                            },
                            {
                                "type": "text",
                                "text": " is a description of the software people have set up to ensure that this is not a private area.\n\nI would love if we could have \"human-scale interactions\" here, but that's not what we've set up."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1751665037.379419",
        "client_msg_id": "2b2973e6-8622-4af9-a0b4-963cf07510e2",
        "text": "... to further illustrate what I mean: a multi-headed transpiler on my <https:\/\/github.com\/guitarvydas\/arith|github>, produces outputs \"{\"python\": \"...\", \"javascript\": \"...\", \"wasm\": \"...\"}\" where the \"...\" contain emitted code in the respective languages. This idea was also used to build an experimental REPL](<https:\/\/www.youtube.com\/watch?v=ZOsuC2Yx8D8>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751438149.078389",
        "parent_user_id": "U08294YLWJH",
        "attachments": [
            {
                "from_url": "https:\/\/www.youtube.com\/watch?v=ZOsuC2Yx8D8",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/ZOsuC2Yx8D8\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/ZOsuC2Yx8D8?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen title=\"Generate And Run Python Code (part 4, probe to view generated Python)\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=ZOsuC2Yx8D8",
                "fallback": "YouTube Video: Generate And Run Python Code (part 4, probe to view generated Python)",
                "title": "Generate And Run Python Code (part 4, probe to view generated Python)",
                "title_link": "https:\/\/www.youtube.com\/watch?v=ZOsuC2Yx8D8",
                "author_name": "Programming Simplicity",
                "author_link": "https:\/\/www.youtube.com\/@programmingsimplicity2980",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2b\/IM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "... to further illustrate what I mean: a multi-headed transpiler on my "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/guitarvydas\/arith",
                                "text": "github"
                            },
                            {
                                "type": "text",
                                "text": ", produces outputs \"{\"python\": \"...\", \"javascript\": \"...\", \"wasm\": \"...\"}\" where the \"...\" contain emitted code in the respective languages. This idea was also used to build an experimental REPL]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=ZOsuC2Yx8D8"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1751697293.259859",
        "client_msg_id": "467a7e68-a55c-4c17-bc4e-db8274344d58",
        "text": "Whatever private means these days... We (society at large, not our little group here) are going through some form of boundary crisis. Everyone wants to be inclusive, but wants that word to mean \"only nice people\" and maybe not too many either. We talk about privacy, knowing fully well that it hardly exists in the digital sphere. Certainly not in any obvious or verifiable way (did you ever check that fancy encryption technology actually works as advertised?). So it's all a big mess. Which is actually fine with me. National boundaries are fuzzy as well, disappearing in many essential aspects (climate, pollution) and becoming the topic of ever more polarized political debates about their desired permeability to people and to goods. I guess I could come up with more examples if I worked seriously on it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751470045.236319",
        "parent_user_id": "U08DYF4SEAE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a7bI1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Whatever private means these days... We (society at large, not our little group here) are going through some form of boundary crisis. Everyone wants to be inclusive, but wants that word to mean \"only nice people\" and maybe not too many either. We talk about privacy, knowing fully well that it hardly exists in the digital sphere. Certainly not in any obvious or verifiable way (did you ever check that fancy encryption technology actually works as advertised?). So it's all a big mess. Which is actually fine with me. National boundaries are fuzzy as well, disappearing in many essential aspects (climate, pollution) and becoming the topic of ever more polarized political debates about their desired permeability to people and to goods. I guess I could come up with more examples if I worked seriously on it."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]