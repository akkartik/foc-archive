[
    {
        "user": "U07BD7U4S4R",
        "type": "message",
        "ts": "1726988428.754969",
        "client_msg_id": "7a7c57b7-0fed-4d90-b7a3-ac89b9846324",
        "text": "For some reason I get \"then it does not matter\" from \"everything is complicated\" comments.\n\nIf everything is complicated, why not deal with essential complexity instead of incidental one?\nFeels like comparable amount of work, but radically different outcomes.\n\n<https:\/\/www.youtube.com\/watch?v=kZRE7HIO3vk|The Thirty Million Line Problem>\n<https:\/\/youtu.be\/rX0ItVEVjHc?t=1372|Mike Acton \"Data-Oriented Design\">\n\nSometimes treating different things the same way makes things easier or even simpler.\nSometimes treating similar things differently does.\n\nbut it seems to me, scanning this space of variations is more tractable from the root tree-side, where combinatorics haven't really kick in yet.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d0343f70ca57",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-04\/7377091009748_d0343f70ca57c18eeb41_72.png",
            "first_name": "misha",
            "real_name": "misha",
            "display_name": "misha",
            "team": "T5TCAFTA9",
            "name": "misha.akovantsev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1726569392.396589",
        "parent_user_id": "U07BD7U4S4R",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h8T4+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For some reason I get \"then it does not matter\" from \"everything is complicated\" comments.\n\nIf everything is complicated, why not deal with essential complexity instead of incidental one?\nFeels like comparable amount of work, but radically different outcomes.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=kZRE7HIO3vk",
                                "text": "The Thirty Million Line Problem"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/rX0ItVEVjHc?t=1372",
                                "text": "Mike Acton \"Data-Oriented Design\""
                            },
                            {
                                "type": "text",
                                "text": "\n\nSometimes treating different things the same way makes things easier or even simpler.\nSometimes treating similar things differently does.\n\nbut it seems to me, scanning this space of variations is more tractable from the root tree-side, where combinatorics haven't really kick in yet."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06MCTWJKSR",
        "type": "message",
        "ts": "1727049812.369579",
        "edited": {
            "user": "U06MCTWJKSR",
            "ts": "1727049901.000000"
        },
        "client_msg_id": "dd61a974-344d-4c4b-a25b-d48e9ee4db62",
        "text": "I have lots of functions that map sets of inputs to values - depending on some rules (if branches). Now I want to enumerate all the rules\/code paths; it will help me to analyse, optimise, explain, understand.\nThis can't be new, I guess it should be a thing that's feasible in any functional programming language. Maybe there is a name for this? Or a tool that does this?\nI'm thinking about writing something, but it seems like a typechecker like tsc would have a lot of related logic, and if I can I'll experiment using some other friendly tool first. Any tips\/references please shout, thanks!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5b4c95c70d98",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-04-10\/6931478324918_5b4c95c70d98784a05cc_72.jpg",
            "first_name": "Declan",
            "real_name": "Declan",
            "display_name": "Declan Naughton",
            "team": "T5TCAFTA9",
            "name": "declann1990",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727049812.369579",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1727217934.562469",
        "reply_users": [
            "UK3LH8CF5",
            "U01AD80KMLK",
            "U06MCTWJKSR"
        ],
        "replies": [
            {
                "user": "UK3LH8CF5",
                "ts": "1727064565.261959"
            },
            {
                "user": "U01AD80KMLK",
                "ts": "1727106723.175299"
            },
            {
                "user": "U06MCTWJKSR",
                "ts": "1727217934.562469"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PQSkv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have lots of functions that map sets of inputs to values - depending on some rules (if branches). Now I want to enumerate all the rules\/code paths; it will help me to analyse, optimise, explain, understand.\nThis can't be new, I guess it should be a thing that's feasible in any functional programming language. Maybe there is a name for this? Or a tool that does this?\nI'm thinking about writing something, but it seems like a typechecker like tsc would have a lot of related logic, and if I can I'll experiment using some other friendly tool first. Any tips\/references please shout, thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1727064565.261959",
        "client_msg_id": "DB78A12E-E6E0-4090-AB8A-338DC6C2BBAD",
        "text": "What you are talking about sounds either like building a control flow graph. Or doing abstract interpretation. Unclear if either those exactly fit what you want to do. But might be some useful starting points. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727049812.369579",
        "parent_user_id": "U06MCTWJKSR",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "la4Ee",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What you are talking about sounds either like building a control flow graph"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Or doing abstract interpretation"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Unclear if either those exactly fit what you want to do"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " But might be some useful starting points"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03U0SCU5LH",
        "type": "message",
        "ts": "1727073095.141339",
        "client_msg_id": "ef3dbd7a-c48c-42f6-8f5d-23be56b7abaf",
        "text": "Should code completion preselect in the dropdown?\nFor example, if I write \"object.l\", this opens a dropdown with \"length\". Should the length be selected, so pressing \"enter\", inserts it directly or should I first need to press \"down arrow\"?\nIn visual studio, it is not preselect if I write a function, but does preselect for members. Is there some common approach?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdf6784b7d6d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/df6784b7d6d97fb67dec89320cc88a84.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Dany",
            "real_name": "Dany",
            "display_name": "Dany",
            "team": "T5TCAFTA9",
            "name": "bitteldany",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727073095.141339",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1727147725.976049",
        "reply_users": [
            "U01AD80KMLK",
            "U03U0SCU5LH"
        ],
        "replies": [
            {
                "user": "U01AD80KMLK",
                "ts": "1727106803.795339"
            },
            {
                "user": "U03U0SCU5LH",
                "ts": "1727147725.976049"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2aqU6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Should code completion preselect in the dropdown?\nFor example, if I write \"object.l\", this opens a dropdown with \"length\". Should the length be selected, so pressing \"enter\", inserts it directly or should I first need to press \"down arrow\"?\nIn visual studio, it is not preselect if I write a function, but does preselect for members. Is there some common approach?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]