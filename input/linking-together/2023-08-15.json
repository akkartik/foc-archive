[
    {
        "user": "U03R0B9U1GD",
        "type": "message",
        "ts": "1692084468.478509",
        "client_msg_id": "33fd9977-e86e-439e-b830-b3ef0f6c1b68",
        "text": "That feels very relevant! Specifically the \"molding\" of things to the shape of their surroundings. I should explore this more, thanks for sharing! \n\nYou're right about something being better than nothing!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "78c476adad42",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-26\/3992499177765_78c476adad42ab6cfe32_72.png",
            "first_name": "Lu",
            "real_name": "Lu Wilson",
            "display_name": "TodePond",
            "team": "T5TCAFTA9",
            "name": "l2wilson94",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691829091.772779",
        "parent_user_id": "U03R0B9U1GD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pvgeQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That feels very relevant! Specifically the \"molding\" of things to the shape of their surroundings. I should explore this more, thanks for sharing! \n\nYou're right about something being better than nothing!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03R0B9U1GD",
        "type": "message",
        "ts": "1692084663.283629",
        "edited": {
            "user": "U03R0B9U1GD",
            "ts": "1692084877.000000"
        },
        "client_msg_id": "c9d04c4c-a532-49a6-8f17-40e4c34b63d0",
        "text": "As you might guess from my recent submission, I've often used composability in the form of 'escape hatch' as a crutch for things I can't figure out. eg: \"I don't know how to allow the user to do X in SpaceTode, so I'll just let them embed JavaScript instead\" (similar to how SPLAT allows you to embed Ulam).\n\nBut this doesn't feel like a satisfying form of composability. It's like a lego brick. Sure, there are lots of different studs that you can attach to, but they're still studs! You can't mold or interlace.\n\nSo CellPond was my attempt at avoiding that. What would happen if we don't rely on escape? Would it be good\/bad\/ugly? Answer: yes, those three\n\nNow that it's figured out, I want to ask: How could we reintroduce composability? What would it look like? Is it possible at all?\n\nAnyway, those are my current thoughts, I've got a lot of things to explore now. Thanks for your helpful feedback by the way! It's the most useful I've ever had!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "78c476adad42",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-26\/3992499177765_78c476adad42ab6cfe32_72.png",
            "first_name": "Lu",
            "real_name": "Lu Wilson",
            "display_name": "TodePond",
            "team": "T5TCAFTA9",
            "name": "l2wilson94",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691829091.772779",
        "parent_user_id": "U03R0B9U1GD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "axJd7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As you might guess from my recent submission, I've often used composability in the form of 'escape hatch' as a crutch for things I can't figure out. eg: \"I don't know how to allow the user to do X in SpaceTode, so I'll just let them embed JavaScript instead\" (similar to how SPLAT allows you to embed Ulam).\n\nBut this doesn't feel like a satisfying form of composability. It's like a lego brick. Sure, there are lots of different studs that you can attach to, but they're still studs! You can't mold or interlace.\n\nSo CellPond was my attempt at avoiding that. What would happen if we don't rely on escape? Would it be good\/bad\/ugly? Answer: yes, those three\n\nNow that it's figured out, I want to ask: How could we reintroduce composability? What would it look like? Is it possible at all?\n\nAnyway, those are my current thoughts, I've got a lot of things to explore now. Thanks for your helpful feedback by the way! It's the most useful I've ever had!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "UBKNXPBAB"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "Thanks for sharing <@U03R0B9U1GD>! I read this once before and have now read it twice :slightly_smiling_face:\n\nThe part on Observable resonates with me in relation to my work on Polytope. I like Observable and have used it to make <https:\/\/observablehq.com\/@vezwork\/qubit-playground|editors>, but really find myself wishing that I could use the editors I make in Observable as a part of my code (attached diagram shows the separation between the \"code\" part of Observable and the \"value\" part).\n\nI really want to get Polytope to a place where it is great for creating and editing editors. I am working on automatic Caret Navigation so that it is easy to create editors that have familiar controls that compose with the controls of any and all other editors you're using.\n\nI'm hoping that there will be a bit of a snowball effect once Polytope is a good platform for composable and rich editors where there will be some editors that make it easy to make editors that are good for making other editors that are good for making other editors that are good for making other editors and so on!",
        "files": [
            {
                "id": "F05MT6KTD37",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U05M5A8E0NT",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NlYh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for sharing "
                            },
                            {
                                "type": "user",
                                "user_id": "U03R0B9U1GD"
                            },
                            {
                                "type": "text",
                                "text": "! I read this once before and have now read it twice "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe part on Observable resonates with me in relation to my work on Polytope. I like Observable and have used it to make "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/observablehq.com\/@vezwork\/qubit-playground",
                                "text": "editors"
                            },
                            {
                                "type": "text",
                                "text": ", but really find myself wishing that I could use the editors I make in Observable as a part of my code (attached diagram shows the separation between the \"code\" part of Observable and the \"value\" part).\n\nI really want to get Polytope to a place where it is great for creating and editing editors. I am working on automatic Caret Navigation so that it is easy to create editors that have familiar controls that compose with the controls of any and all other editors you're using.\n\nI'm hoping that there will be a bit of a snowball effect once Polytope is a good platform for composable and rich editors where there will be some editors that make it easy to make editors that are good for making other editors that are good for making other editors that are good for making other editors and so on!"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1692114735.281889",
        "edited": {
            "user": "U05M5A8E0NT",
            "ts": "1692116735.000000"
        },
        "client_msg_id": "9b465a9b-9bc5-4763-befa-dd664c25bbcc",
        "thread_ts": "1691829091.772779",
        "parent_user_id": "U03R0B9U1GD"
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1692115762.589609",
        "edited": {
            "user": "U05M5A8E0NT",
            "ts": "1692115883.000000"
        },
        "client_msg_id": "622d45f9-19ba-40e0-b52f-7b7f0bbdfa6a",
        "text": "re: <@U03R0B9U1GD>'s first comment:\n&gt; there are predefined places (studs) [..] You're quite restricted with what can go where. It feels plastic, and hard.\n&gt; [..]\n&gt; Textual code doesn't feel plastic. It feels like 'playdough'\nI really agree! I love structured editors (and lego) when they allow you to explore into the depths of possible structures without totally knowing what they mean (like when you're learning) and without the fear of getting lost in the land of errors or meaninglessness. I don't love structured editors when they don't mingle well with other ways of expressing or exploring.\n\nI love text editors because there's so many ways to manipulate text. I don't love text editors when I'm trying to make big structural changes to programs or when I'm learning new things. Really like  <@U03R0B9U1GD>'s comment about JSX.\n\nI use the word \"*ummmstructured*\" (spelled with any number of '*m'*s &gt;1) to myself to think about the mixture of structured and unstructured stuff. I think its kind of funny (and maybe represents the confusion that comes with this concept? More 'm's = more complex mixture of structure and unstructure?) lol.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691829091.772779",
        "parent_user_id": "U03R0B9U1GD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T0gLG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "re: "
                            },
                            {
                                "type": "user",
                                "user_id": "U03R0B9U1GD"
                            },
                            {
                                "type": "text",
                                "text": "'s first comment:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there are predefined places (studs) [..] You're quite restricted with what can go where. It feels plastic, and hard.\n[..]\nTextual code doesn't feel plastic. It feels like 'playdough'"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really agree! I love structured editors (and lego) when they allow you to explore into the depths of possible structures without totally knowing what they mean (like when you're learning) and without the fear of getting lost in the land of errors or meaninglessness. I don't love structured editors when they don't mingle well with other ways of expressing or exploring.\n\nI love text editors because there's so many ways to manipulate text. I don't love text editors when I'm trying to make big structural changes to programs or when I'm learning new things. Really like  "
                            },
                            {
                                "type": "user",
                                "user_id": "U03R0B9U1GD"
                            },
                            {
                                "type": "text",
                                "text": "'s comment about JSX.\n\nI use the word \""
                            },
                            {
                                "type": "text",
                                "text": "ummmstructured",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\" (spelled with any number of '"
                            },
                            {
                                "type": "text",
                                "text": "m'",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "s >1) to myself to think about the mixture of structured and unstructured stuff. I think its kind of funny (and maybe represents the confusion that comes with this concept? More 'm's = more complex mixture of structure and unstructure?) lol."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "laughing",
                "users": [
                    "U03R0B9U1GD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1692116543.453799",
        "edited": {
            "user": "U05M5A8E0NT",
            "ts": "1692116563.000000"
        },
        "client_msg_id": "31c33f7d-6733-44be-a9cb-204fd8437bda",
        "text": "re: <@U03R0B9U1GD>'s second comment:\n\nI think banning escape hatches could be a good methodology for build a self-sufficient system? If you have to build everything using the building blocks in your system you learn a lot more about how that system expresses stuff and what it can express.\n\nI don't have examples or references, but I think its a pattern in programming language design to have a \"core\" language that is easy(er) to reason about and that you know can express everything in, and then have a \"wrapper\" language that makes the core language more expressive. Then if you put an escape hatch in the wrapper language, you don't lose the ability to reason about the core of the language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691829091.772779",
        "parent_user_id": "U03R0B9U1GD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IR7e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "re: "
                            },
                            {
                                "type": "user",
                                "user_id": "U03R0B9U1GD"
                            },
                            {
                                "type": "text",
                                "text": "'s second comment:\n\nI think banning escape hatches could be a good methodology for build a self-sufficient system? If you have to build everything using the building blocks in your system you learn a lot more about how that system expresses stuff and what it can express.\n\nI don't have examples or references, but I think its a pattern in programming language design to have a \"core\" language that is easy(er) to reason about and that you know can express everything in, and then have a \"wrapper\" language that makes the core language more expressive. Then if you put an escape hatch in the wrapper language, you don't lose the ability to reason about the core of the language."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03R0B9U1GD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1692116882.774689",
        "client_msg_id": "b499d5ea-67c8-4614-b2fb-1c90e8363d73",
        "text": "I want to talk about liveness too but I already wrote a lot so I'll leave it there for now :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691829091.772779",
        "parent_user_id": "U03R0B9U1GD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SAy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I want to talk about liveness too but I already wrote a lot so I'll leave it there for now "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03R0B9U1GD",
        "type": "message",
        "ts": "1692120671.157439",
        "client_msg_id": "f37b0749-ba7d-4fdf-ac98-c4a212b80ab0",
        "text": "I'd be keen to hear :) There's always <#C5T9GPWFL|thinking-together> as well if you have a separate point!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "78c476adad42",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-26\/3992499177765_78c476adad42ab6cfe32_72.png",
            "first_name": "Lu",
            "real_name": "Lu Wilson",
            "display_name": "TodePond",
            "team": "T5TCAFTA9",
            "name": "l2wilson94",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691829091.772779",
        "parent_user_id": "U03R0B9U1GD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mQBh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd be keen to hear :) There's always "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": " as well if you have a separate point!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U05M5A8E0NT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1692129506.362919",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1692130926.000000"
        },
        "client_msg_id": "2bcb366c-3646-4bc8-b47d-3d65b3d7e5ce",
        "text": "How we reduced the cost of building Twitter at Twitter-scale by 100x\n\n&gt; Rama unifies computation and storage into a coherent model capable of building end-to-end backends at any scale in 100x less code than otherwise. Rama integrates and generalizes data ingestion, processing, indexing, and querying.\n<https:\/\/blog.redplanetlabs.com\/2023\/08\/15\/how-we-reduced-the-cost-of-building-twitter-at-twitter-scale-by-100x\/>\n\nA summary from <@UHS9K1N6A> <https:\/\/news.ycombinator.com\/item?id=37137567>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692129506.362919",
        "reply_count": 6,
        "reply_users_count": 4,
        "latest_reply": "1692173727.737709",
        "reply_users": [
            "UK3LH8CF5",
            "U055V4HCHU7",
            "U6KQ2S410",
            "UBN9AFS0N"
        ],
        "replies": [
            {
                "user": "UK3LH8CF5",
                "ts": "1692133777.561909"
            },
            {
                "user": "U055V4HCHU7",
                "ts": "1692140954.449979"
            },
            {
                "user": "U6KQ2S410",
                "ts": "1692141192.371369"
            },
            {
                "user": "U6KQ2S410",
                "ts": "1692141480.594349"
            },
            {
                "user": "U055V4HCHU7",
                "ts": "1692141577.459169"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1692173727.737709"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "image_url": "https:\/\/blog.redplanetlabs.com\/wp-content\/uploads\/2023\/07\/cluster-ui-modules.png",
                "image_width": 3290,
                "image_height": 1870,
                "image_bytes": 1068575,
                "from_url": "https:\/\/blog.redplanetlabs.com\/2023\/08\/15\/how-we-reduced-the-cost-of-building-twitter-at-twitter-scale-by-100x\/",
                "service_icon": "https:\/\/i0.wp.com\/blog.redplanetlabs.com\/wp-content\/uploads\/2023\/04\/cropped-RPL-Twitter.png?fit=180%2C180&amp;ssl=1",
                "ts": 1692121968,
                "id": 1,
                "original_url": "https:\/\/blog.redplanetlabs.com\/2023\/08\/15\/how-we-reduced-the-cost-of-building-twitter-at-twitter-scale-by-100x\/",
                "fallback": "Blog: How we reduced the cost of building Twitter at Twitter-scale by 100x",
                "text": "I’m going to cover a lot of ground in this post, so here’s the TLDR: We built a Twitter-scale Mastodon instance from scratch in only 10k lines of code. This is 100x less code than the ~1M lines Twi…",
                "title": "How we reduced the cost of building Twitter at Twitter-scale by 100x",
                "title_link": "https:\/\/blog.redplanetlabs.com\/2023\/08\/15\/how-we-reduced-the-cost-of-building-twitter-at-twitter-scale-by-100x\/",
                "service_name": "Blog"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/Fh40",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How we reduced the cost of building Twitter at Twitter-scale by 100x\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Rama unifies computation and storage into a coherent model capable of building end-to-end backends at any scale in 100x less code than otherwise. Rama integrates and generalizes data ingestion, processing, indexing, and querying."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/blog.redplanetlabs.com\/2023\/08\/15\/how-we-reduced-the-cost-of-building-twitter-at-twitter-scale-by-100x\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nA summary from "
                            },
                            {
                                "type": "user",
                                "user_id": "UHS9K1N6A"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=37137567"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1692133777.561909",
        "edited": {
            "user": "UK3LH8CF5",
            "ts": "1692140977.000000"
        },
        "client_msg_id": "5330a6e3-c7a4-4f86-a0b8-c1394fa8daf8",
        "text": "I have to admit, I'm confused by the presentation here. Maybe this is just personal, but even if there is something to be super excited about, it is hard for me to get excited. I'm all for database stuff. I know clojure so I understand where some of this is coming from. But the presentation just makes it so I have to dig and dig to try and understand what is going on.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692129506.362919",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L1Tth",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have to admit, I'm confused by the presentation here. Maybe this is just personal, but even if there is something to be super excited about, it is hard for me to get excited. I'm all for database stuff. I know clojure so I understand where some of this is coming from. But the presentation just makes it so I have to dig and dig to try and understand what is going on."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U055V4HCHU7",
        "type": "message",
        "ts": "1692140954.449979",
        "client_msg_id": "1dfbd0cb-c139-4c3b-8739-1536958e6e25",
        "text": "So much cloak and dagger for backend infrastructure. I'd be intrigued to read their docs when it's more \"open\" -- `\/remindme august 22`",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "141ca9fd8fff",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-04\/5210750326597_141ca9fd8fff00418f9b_72.jpg",
            "first_name": "Walker",
            "real_name": "Walker Griggs",
            "display_name": "Walker Griggs",
            "team": "T5TCAFTA9",
            "name": "walker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692129506.362919",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LHb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So much cloak and dagger for backend infrastructure. I'd be intrigued to read their docs when it's more \"open\" -- "
                            },
                            {
                                "type": "text",
                                "text": "\/remindme august 22",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1692140970.286959",
        "client_msg_id": "463FF246-CB23-410B-9760-430CAC770E19",
        "text": "I just finished editing and published the talk from Rust East Coast. Perhaps some programming theory folks could find it interesting! cc <@UHWC9PXBL>\n&gt; In a large Rust codebase, it can be difficult to find just the code you need to implement a feature or fix a bug. This talk will introduce Flowistry, a tool for visualizing data dependencies in Rust programs that can help programmers quickly sort out irrelevant code. I will explain what makes static analysis of dependencies a difficult problem, and I will describe the key insight in Flowistry that makes the problem tractable.\nPresented by <@UFB8STN7K>\n<https:\/\/www.youtube.com\/watch?v=aYmuMlzvjvc|https:\/\/www.youtube.com\/watch?v=aYmuMlzvjvc>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "from_url": "https:\/\/www.youtube.com\/watch?v=aYmuMlzvjvc",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/aYmuMlzvjvc\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/aYmuMlzvjvc?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"Flowistry - Helping Rust Developers See Data Dependencies in the IDE (Will Crichton, August 2023)\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=aYmuMlzvjvc",
                "fallback": "YouTube Video: Flowistry - Helping Rust Developers See Data Dependencies in the IDE (Will Crichton, August 2023)",
                "title": "Flowistry - Helping Rust Developers See Data Dependencies in the IDE (Will Crichton, August 2023)",
                "title_link": "https:\/\/www.youtube.com\/watch?v=aYmuMlzvjvc",
                "author_name": "Rust East Coast",
                "author_link": "https:\/\/www.youtube.com\/@RustEastCoast",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IEW6G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just finished editing and published the talk from Rust East Coast. Perhaps some programming theory folks could find it interesting! cc "
                            },
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In a large Rust codebase, it can be difficult to find just the code you need to implement a feature or fix a bug. This talk will introduce Flowistry, a tool for visualizing data dependencies in Rust programs that can help programmers quickly sort out irrelevant code. I will explain what makes static analysis of dependencies a difficult problem, and I will describe the key insight in Flowistry that makes the problem tractable."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nPresented by "
                            },
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=aYmuMlzvjvc",
                                "text": "https:\/\/www.youtube.com\/watch?v=aYmuMlzvjvc"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U05PESXCC2E"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6KQ2S410",
        "type": "message",
        "ts": "1692141192.371369",
        "client_msg_id": "fdf17542-1810-46f6-b7e5-732b0113e8a9",
        "text": "I like that they are confronting the chronic impedance mismatch problem. But whatever new ideas they have are buried within a giant pile of custom tech they want you to adopt.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e8f4c2151d2b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-09\/225308926294_e8f4c2151d2b70ebfae3_72.jpg",
            "first_name": "Jonathan",
            "real_name": "Jonathan Edwards",
            "display_name": "jonathoda",
            "team": "T5TCAFTA9",
            "name": "jonathoda",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692129506.362919",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i=bB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like that they are confronting the chronic impedance mismatch problem. But whatever new ideas they have are buried within a giant pile of custom tech they want you to adopt."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6KQ2S410",
        "type": "message",
        "ts": "1692141480.594349",
        "client_msg_id": "b8ee8f1b-8983-4542-905d-64ea17cb2089",
        "text": "Bryan Cantrill is on it:\n<https:\/\/twitter.com\/bcantrill\/status\/1691565594766872778>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e8f4c2151d2b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-09\/225308926294_e8f4c2151d2b70ebfae3_72.jpg",
            "first_name": "Jonathan",
            "real_name": "Jonathan Edwards",
            "display_name": "jonathoda",
            "team": "T5TCAFTA9",
            "name": "jonathoda",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692129506.362919",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "image_url": "https:\/\/pbs.twimg.com\/media\/F3mlvdza4AIVneN.jpg:large",
                "image_width": 1923,
                "image_height": 607,
                "image_bytes": 176899,
                "from_url": "https:\/\/twitter.com\/bcantrill\/status\/1691565594766872778",
                "service_icon": "http:\/\/abs.twimg.com\/favicons\/twitter.3.ico",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/bcantrill\/status\/1691565594766872778",
                "fallback": "Twitter: Bryan Cantrill on Twitter",
                "text": "You may not like it, but this is what 100X looks like",
                "title": "Bryan Cantrill on Twitter",
                "title_link": "https:\/\/twitter.com\/bcantrill\/status\/1691565594766872778",
                "service_name": "Twitter"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ao85I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Bryan Cantrill is on it:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/bcantrill\/status\/1691565594766872778"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U055V4HCHU7",
        "type": "message",
        "ts": "1692141577.459169",
        "edited": {
            "user": "U055V4HCHU7",
            "ts": "1692141602.000000"
        },
        "client_msg_id": "462bc8c2-d1a9-4e50-8a83-c3715411132f",
        "text": "Oh well, in that case...\n\nEdit: there are few people I trust as a technology-barameter. Bryan is one",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "141ca9fd8fff",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-04\/5210750326597_141ca9fd8fff00418f9b_72.jpg",
            "first_name": "Walker",
            "real_name": "Walker Griggs",
            "display_name": "Walker Griggs",
            "team": "T5TCAFTA9",
            "name": "walker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692129506.362919",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xmc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh well, in that case...\n\nEdit: there are few people I trust as a technology-barameter. Bryan is one"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]