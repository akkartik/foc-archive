[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1645438391.089939",
        "client_msg_id": "9816d5cc-7663-4564-9227-de80132d616f",
        "text": "Well, it's a lens, anyway...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1645310715.363289",
        "parent_user_id": "USH01JEDQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oLv7n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, it's a lens, anyway..."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "sunglasses",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1645453537.564739",
        "client_msg_id": "dc352e0d-0db1-4c09-b03f-544e7ee965f2",
        "text": "Re: processes vs objects in mathematics.\n“_structurally_-as objects, and _operationally_-as processes” reminds me of work in structural computing that aims to synthesise notions of _structure_, _data_, and more recently _behaviour._ Asking questions like “what would it mean for an entity to be potentially _computed_ and _computing_ at any time?” or “system infrastructure must assume that any entity is at all times (at least potentially) both _structured_ and _structuring_.”\n\nSee <https:\/\/doi.org\/10.1007\/978-3-540-24647-3_12> and <https:\/\/doi.org\/10.1007\/978-3-540-24647-3_1>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1645310715.363289",
        "parent_user_id": "USH01JEDQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6P7w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Re: processes vs objects in mathematics.\n“"
                            },
                            {
                                "type": "text",
                                "text": "structurally",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "-as objects, and "
                            },
                            {
                                "type": "text",
                                "text": "operationally",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "-as processes” reminds me of work in structural computing that aims to synthesise notions of "
                            },
                            {
                                "type": "text",
                                "text": "structure",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "data",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and more recently "
                            },
                            {
                                "type": "text",
                                "text": "behaviour. ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "Asking questions like “what would it mean for an entity to be potentially "
                            },
                            {
                                "type": "text",
                                "text": "computed",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "computing",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " at any time?” or “system infrastructure must assume that any entity is at all times (at least potentially) both "
                            },
                            {
                                "type": "text",
                                "text": "structured",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "structuring",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".”\n\nSee "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/doi.org\/10.1007\/978-3-540-24647-3_12"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/doi.org\/10.1007\/978-3-540-24647-3_1"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U02PDVC9CNT",
        "type": "message",
        "ts": "1645471243.613739",
        "edited": {
            "user": "U02PDVC9CNT",
            "ts": "1645471335.000000"
        },
        "client_msg_id": "922502ae-99c0-452d-8b7d-815b89de0a55",
        "text": "For quick context, render guide has a lovely rundown that should read okay for someone who hasn’t touched blender. <https:\/\/renderguide.com\/blender-composition-tutorial\/>\n\non second thought you’d probably need to start here: <https:\/\/renderguide.com\/blender-shader-nodes-tutorial\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "735e4c98d276",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-07\/2834416174224_735e4c98d276cb0b0122_72.jpg",
            "first_name": "yeT",
            "real_name": "yeT",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jacob.t.wright",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1645382771.200199",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tA\/GE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For quick context, render guide has a lovely rundown that should read okay for someone who hasn’t touched blender. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/renderguide.com\/blender-composition-tutorial\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\non second thought you’d probably need to start here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/renderguide.com\/blender-shader-nodes-tutorial\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U01DBLH2DN1",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1645487474.259509",
        "client_msg_id": "846646CB-164C-4459-8E94-73D397E3C442",
        "text": "<@UCUSW7WVD> fair! The style of node-wire interface on display here is typical of compositing tools — Nuke and Shake had this style of GUI about 20 years ago IIRC. And if I have my history right, the Enso folks (formerly Luna) actually cut their teeth making a VPL for compositing before pivoting toward a more general programming tool. All the tools look and work similarly, because that's the expectation of people trained in the field.\n\nOther super-similar VPLs exist (in blender and elsewhere) for defining shaders, animation systems, rendering passes, and more.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1645382771.200199",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2+1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " fair! The style of node-wire interface on display here is typical of compositing tools — Nuke and Shake had this style of GUI about 20 years ago IIRC. And if I have my history right, the Enso folks (formerly Luna) actually cut their teeth making a VPL for compositing before pivoting toward a more general programming tool. All the tools look and work similarly, because that's the expectation of people trained in the field.\n\nOther super-similar VPLs exist (in blender and elsewhere) for defining shaders, animation systems, rendering passes, and more."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-4",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]