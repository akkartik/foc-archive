[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1600419617.003300",
        "client_msg_id": "60172e3d-dfe2-4696-9d57-c5ec1f985805",
        "text": "I was going to bring it back around to unification and cut, but I had dug myself a deep enough hole, so I went right on to abort.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600398283.002600",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "me2z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was going to bring it back around to unification and cut, but I had dug myself a deep enough hole, so I went right on to abort."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "joy",
                "users": [
                    "UDKTZSD6H"
                ],
                "count": 1
            }
        ]
    },
    {
        "subtype": "channel_topic",
        "user": "UCGAK10LS",
        "topic": "For discussions about program semantics based on formal logics. Inference, resolution, Datalog, OWL, etc.",
        "text": "set the channel topic: For discussions about program semantics based on formal logics. Inference, resolution, Datalog, OWL, etc.",
        "type": "message",
        "ts": "1600420269.003500"
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1600420684.003600",
        "client_msg_id": "02ee9e2c-3d80-4b25-b483-191b807ee3bd",
        "text": "Type systems are a form of static analysis, and some would argue static analysis is best performed in a logic language (see <https:\/\/souffle-lang.github.io\/|Soufflé>). That's what I understand Rust is doing with Chalk, but only _after_ the type system was already designed!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600359119.024100",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Nm\/Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Type systems are a form of static analysis, and some would argue static analysis is best performed in a logic language (see "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/souffle-lang.github.io\/",
                                "text": "Soufflé"
                            },
                            {
                                "type": "text",
                                "text": "). That's what I understand Rust is doing with Chalk, but only "
                            },
                            {
                                "type": "text",
                                "text": "after",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the type system was already designed!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1600420932.003800",
        "client_msg_id": "898ffbf2-6d1b-40e9-b2c5-afec80ad4a85",
        "text": "What if type-level programs and ordinary programs were all written in the same language? Seems do-able if the programming language is a logic language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600359119.024100",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nveR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What if type-level programs and ordinary programs were all written in the same language? Seems do-able if the programming language is a logic language."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1600421127.004000",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1600421271.000000"
        },
        "client_msg_id": "3dcfd43b-2233-43db-8ea0-9f358325060d",
        "text": "Tyrade is essentially that? Using macros to make type signatures look like ordinary Rust functions?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600359119.024100",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Iz5p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tyrade is essentially that? Using macros to make type signatures look like ordinary Rust functions?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1600422302.011400",
        "client_msg_id": "a10442d8-3386-4357-998a-e51a4010eb5c",
        "text": "Just to declare my own work:\nI'm working on a general-purpose logic programming system. My fundamental goal (life purpose?) is to remove as many unnecessary concerns on the path from ideas to implementation as I can identify, and I think logic programming offers hope for that, specifically because it's the simplest (only?) programming paradigm that doesn't immediately introduce unnecessary concerns like \"call stacks\" and hierarchical \"data structures\". Why am I using those innocent-looking concepts as examples? Because they induce a plethora of ancillary concepts and architectural patterns that have nothing to do with the problem domain itself. Call stacks demand value-shuffling, and data structures demand traversal code. There's a lot more to say, but that's a glimpse of my headspace.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600422302.011400",
        "reply_count": 7,
        "reply_users_count": 4,
        "latest_reply": "1601790079.031300",
        "reply_users": [
            "U013HU44GLS",
            "UA14TGLTC",
            "UJN1TAYEQ",
            "UCGAK10LS"
        ],
        "replies": [
            {
                "user": "U013HU44GLS",
                "ts": "1600467004.019500"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1600498287.039500"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1601761977.013500"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1601764227.024500"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1601764593.030600"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1601789433.031100"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1601790079.031300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QPx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just to declare my own work:\nI'm working on a general-purpose logic programming system. My fundamental goal (life purpose?) is to remove as many unnecessary concerns on the path from ideas to implementation as I can identify, and I think logic programming offers hope for that, specifically because it's the simplest (only?) programming paradigm that doesn't immediately introduce unnecessary concerns like \"call stacks\" and hierarchical \"data structures\". Why am I using those innocent-looking concepts as examples? Because they induce a plethora of ancillary concepts and architectural patterns that have nothing to do with the problem domain itself. Call stacks demand value-shuffling, and data structures demand traversal code. There's a lot more to say, but that's a glimpse of my headspace."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "ok_hand",
                "users": [
                    "UDKTZSD6H",
                    "U013HU44GLS",
                    "UA14TGLTC",
                    "UNV27TUKA"
                ],
                "count": 4
            },
            {
                "name": "heart",
                "users": [
                    "UBSMEUXAA"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1600422424.013200",
        "client_msg_id": "592d53d3-d493-4d0f-8084-14aceb55e8d9",
        "text": "That said, no logic language (or system) currently exists that can act as a substitute for traditional paradigms. So I'm stuck trying to invent my own semantics, based on some of the most primal existing work (e.g. Datalog), but hugely-extended such that it can hopefully become general-purpose.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600422424.013200",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1600841017.001500",
        "reply_users": [
            "UA14TGLTC",
            "UCGAK10LS"
        ],
        "replies": [
            {
                "user": "UA14TGLTC",
                "ts": "1600498442.039700"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1600507122.046400"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1600840348.001200"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1600841017.001500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fkNfN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That said, no logic language (or system) currently exists that can act as a substitute for traditional paradigms. So I'm stuck trying to invent my own semantics, based on some of the most primal existing work (e.g. Datalog), but hugely-extended such that it can hopefully become general-purpose."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1600422685.015800",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1600422783.000000"
        },
        "client_msg_id": "9f5cb137-36fd-431b-a874-9038c6293510",
        "text": "I've been working on tackling the chicken-egg problems of semantics, syntax, compilation, and system concerns (graphics APIs in a logic language!) by doing explorations in each of these areas in a cyclical fashion over the last year or so. I haven't really built much yet, because I haven't had a full picture of what needs to be built! I'm currently working on this project *full time*, on my own dime.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600422685.015800",
        "reply_count": 8,
        "reply_users_count": 4,
        "latest_reply": "1600839453.000900",
        "reply_users": [
            "UDKTZSD6H",
            "UCGAK10LS",
            "UBSMEUXAA",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UDKTZSD6H",
                "ts": "1600467593.022600"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1600468953.023900"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1600757120.058000"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1600759607.061300"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1600759714.063300"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1600794463.065300"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1600794548.065500"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1600839453.000900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hgSn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been working on tackling the chicken-egg problems of semantics, syntax, compilation, and system concerns (graphics APIs in a logic language!) by doing explorations in each of these areas in a cyclical fashion over the last year or so. I haven't really built much yet, because I haven't had a full picture of what needs to be built! I'm currently working on this project "
                            },
                            {
                                "type": "text",
                                "text": "full time",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", on my own dime."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1600427861.019100",
        "client_msg_id": "DD34A086-BD3E-42FD-A023-ECC5A40A2B2B",
        "text": "i think of types as macros, but maybe not in the usual sense. constraining a piece of data is exactly as much “programming” as assigning that piece of data. to get zen: is slicing the bread part of making the sandwich, even if a machine has done it before you got there? i think: yes.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600398283.002600",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xSZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i think of types as macros, but maybe not in the usual sense. constraining a piece of data is exactly as much “programming” as assigning that piece of data. to get zen: is slicing the bread part of making the sandwich, even if a machine has done it before you got there? i think: yes."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013HU44GLS",
        "type": "message",
        "ts": "1600467004.019500",
        "client_msg_id": "ffc1b634-c6ba-418d-a017-8363904b606b",
        "text": "Wow, cool Nick.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cb9e0e557132",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-12\/1132600153425_cb9e0e5571321437af24_72.jpg",
            "first_name": "Jean-Louis",
            "real_name": "Jean-Louis Villecroze",
            "display_name": "CocoaGeek",
            "team": "T5TCAFTA9",
            "name": "jeanlouis.villecroze",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600422302.011400",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iMg7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wow, cool Nick."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1600467411.021000",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1600467470.000000"
        },
        "client_msg_id": "E2941E7E-56B4-418F-AD70-B0DF481E00AF",
        "text": "Types are shapes: that pre and post select by arbitrary boundaries around your domain and codomain. They can be thought of as composition of logic operations but in the orthogonal direction.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600398283.002600",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kc40i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Types are shapes: that pre and post select by arbitrary boundaries around your domain and codomain. They can be thought of as composition of logic operations but in the orthogonal direction."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UGYGY18UX"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1600467593.022600",
        "client_msg_id": "0818A480-0596-400E-AC1A-CE79DD52D75A",
        "text": "Sounds really interesting. Would love to have a look if you have written something in long form about what you are driving towards.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600422685.015800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L+9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sounds really interesting. Would love to have a look if you have written something in long form about what you are driving towards."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1600468953.023900",
        "client_msg_id": "E332369D-D3DB-44BA-8F07-DAFD1581BE91",
        "text": "I haven’t written anything long-form, but I will eventually :slightly_smiling_face:. I need to validate my ideas further first.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600422685.015800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yoj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven’t written anything long-form, but I will eventually "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": ". I need to validate my ideas further first."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1600474924.024200",
        "client_msg_id": "5777a641-d64c-4a8a-8e82-836a3885ebd7",
        "text": "wikipedia to the rescue: \"a *type system* is a <https:\/\/en.wikipedia.org\/wiki\/Logical_system|logical system> comprising a set of rules that assigns a property called a <https:\/\/en.wikipedia.org\/wiki\/Type_(computer_science)|type> to the various constructs of a <https:\/\/en.wikipedia.org\/wiki\/Computer_program|computer program>, such as <https:\/\/en.wikipedia.org\/wiki\/Variable_(computer_science)|variables>, <https:\/\/en.wikipedia.org\/wiki\/Expression_(computer_science)|expressions>, <https:\/\/en.wikipedia.org\/wiki\/Function_(computer_science)|functions> or <https:\/\/en.wikipedia.org\/wiki\/Modular_programming|modules>.<https:\/\/en.wikipedia.org\/wiki\/Type_system#cite_note-FOOTNOTEPierce20021-1|[1]> These types formalize and enforce the otherwise implicit categories the programmer uses for <https:\/\/en.wikipedia.org\/wiki\/Algebraic_data_type|algebraic data types>, data structures, or other components (e.g. \"string\", \"array of float\", \"function returning boolean\")\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600398283.002600",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "chE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "wikipedia to the rescue: \"a "
                            },
                            {
                                "type": "text",
                                "text": "type system",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is a "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Logical_system",
                                "text": "logical system"
                            },
                            {
                                "type": "text",
                                "text": " comprising a set of rules that assigns a property called a "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Type_(computer_science)",
                                "text": "type"
                            },
                            {
                                "type": "text",
                                "text": " to the various constructs of a "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Computer_program",
                                "text": "computer program"
                            },
                            {
                                "type": "text",
                                "text": ", such as "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Variable_(computer_science)",
                                "text": "variables"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Expression_(computer_science)",
                                "text": "expressions"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Function_(computer_science)",
                                "text": "functions"
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Modular_programming",
                                "text": "modules"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Type_system#cite_note-FOOTNOTEPierce20021-1",
                                "text": "[1]"
                            },
                            {
                                "type": "text",
                                "text": " These types formalize and enforce the otherwise implicit categories the programmer uses for "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Algebraic_data_type",
                                "text": "algebraic data types"
                            },
                            {
                                "type": "text",
                                "text": ", data structures, or other components (e.g. \"string\", \"array of float\", \"function returning boolean\")\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1600474951.024400",
        "client_msg_id": "aeab090c-2ad3-4a07-9290-aac9e3c5bb45",
        "text": "so types are rules ....",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600398283.002600",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ppA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "so types are rules ...."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1600474977.024600",
        "client_msg_id": "11bfb29f-fa9d-466a-8bb2-98fe6c47f971",
        "text": "I'm interested in the relationship between type systems and schemas, I haven't seen them compared \/ contrasted in depth",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600398283.002600",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F2Sq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm interested in the relationship between type systems and schemas, I haven't seen them compared \/ contrasted in depth"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1600475224.024800",
        "client_msg_id": "f26a3a8a-00cb-4c40-a7e3-62f2122a9712",
        "text": "An interesting schema system (RELAXNG) uses regular expressions for defining a grammar that a certain tree of data should match, with leafs matching primitive types. Probably an equivalent type could be defined used recursive algebraic data types",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600398283.002600",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+OW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "An interesting schema system (RELAXNG) uses regular expressions for defining a grammar that a certain tree of data should match, with leafs matching primitive types. Probably an equivalent type could be defined used recursive algebraic data types"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1600475281.025000",
        "client_msg_id": "d9310005-c9b7-4716-ad30-e654127477d5",
        "text": "let's connect that to logic programming: ShEx is a schema system for RDF data <https:\/\/en.wikipedia.org\/wiki\/ShEx> inspired in RELAXNG",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600398283.002600",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gny4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "let's connect that to logic programming: ShEx is a schema system for RDF data "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/ShEx"
                            },
                            {
                                "type": "text",
                                "text": " inspired in RELAXNG"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1600475354.025200",
        "client_msg_id": "f85bb366-a63b-4d31-9ad0-b604515f003f",
        "text": "<https:\/\/en.wikipedia.org\/wiki\/SPARQL|S>PARQL is a query languages that has points of contact with prolog, so: \"logic progamming\" :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600398283.002600",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PoY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/SPARQL",
                                "text": "S"
                            },
                            {
                                "type": "text",
                                "text": "PARQL is a query languages that has points of contact with prolog, so: \"logic progamming\" "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1600475403.025400",
        "client_msg_id": "38f26436-0e7b-471c-8bda-542a7473c95c",
        "text": "so yeah, I think type systems are connect to logic programming, it is just not completely clear to me the \"shape\" of the relationship :stuck_out_tongue:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600398283.002600",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OH065",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "so yeah, I think type systems are connect to logic programming, it is just not completely clear to me the \"shape\" of the relationship "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "sunglasses",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1600498287.039500",
        "client_msg_id": "f4ce652a-77c0-4503-95ea-01753a07bafc",
        "text": "True that.  Unnecessary concerns!  Feel this proved Prolog's greatest weakness.  If the order of clauses matters, you're probably in for a bad time.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600422302.011400",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2A2U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "True that.  Unnecessary concerns!  Feel this proved Prolog's greatest weakness.  If the order of clauses matters, you're probably in for a bad time."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1600498442.039700",
        "client_msg_id": "c9ad2718-89cc-4b80-9aa3-acfdc8830eac",
        "text": "Why do you feel that is?  What do other paradigms have that logic does not?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600422424.013200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qCf4R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why do you feel that is?  What do other paradigms have that logic does not?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]