[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1661504279.429049",
        "client_msg_id": "1ED5202D-3B8A-4114-A234-86B51FF952BA",
        "text": "Ah!  This thread is good, and I’m mid move so can’t really comment.  But as far as learning by doing goes, for me personally, the Witness takes up the challenge better than any other work of philosophy or fiction.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661296709.406409",
        "parent_user_id": "U03CEGR3HSL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QjM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah!  This thread is good"
                            },
                            {
                                "type": "text",
                                "text": ","
                            },
                            {
                                "type": "text",
                                "text": " and I’m mid move so can’t "
                            },
                            {
                                "type": "text",
                                "text": "really"
                            },
                            {
                                "type": "text",
                                "text": " comment"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": "  But as far as learning by doing goes, "
                            },
                            {
                                "type": "text",
                                "text": "for"
                            },
                            {
                                "type": "text",
                                "text": " me personally, the Witness takes up the challenge better than any other work of philosophy or fiction"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USJ9LD0E4",
        "type": "message",
        "ts": "1661522293.468179",
        "edited": {
            "user": "USJ9LD0E4",
            "ts": "1661569152.000000"
        },
        "client_msg_id": "3a488bd2-8369-4152-adf8-243fbf58db21",
        "text": "<@UJFN50C00> <@UE6EFEPTQ> I’m still new to a lot of these ideas but I’m intrigued by the idea of building computing systems that are fundamentally more secure via *Capabilities*. <http:\/\/habitatchronicles.com\/2017\/05\/what-are-capabilities\/|This post> is my favourite introduction.\n\nThe general idea as I understand it is to escape the Access Control List (ACL) pattern, to stop asking “who are you?” along with every network request. Instead we could achieve the Principle of Least Authority (POLA) by explicitly passing around authority as data, allowing it to be manipulated\/attenuated, and only granting pieces of code the precise authority they need to do their job.\n\nBy building on this paradigm (and related stuff like CapTP)  Goblins allows you to write code that manipulates local “objects” that actually live across the (hostile!) network.\n\nI want to build safe, secure, P2P systems using lisp \/ functional programming and Spritely’s seems like an approach that might work!\n\nUltimately I’m hoping to bring Capabilities and\/or Goblins to Clojure :smile: I’d prefer it if someone else did it first but I’m increasingly worried i might have to get the ball rolling..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "467eec5533b7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-21\/1361648344759_467eec5533b7281db15a_72.jpg",
            "first_name": "Tom",
            "real_name": "Tom Hutchinson",
            "display_name": "Tom Hutchinson",
            "team": "T5TCAFTA9",
            "name": "futureofcoding249",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1660904754.095659",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iST\/L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJFN50C00"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": " I’m still new to a lot of these ideas but I’m intrigued by the idea of building computing systems that are fundamentally more secure via "
                            },
                            {
                                "type": "text",
                                "text": "Capabilities",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/habitatchronicles.com\/2017\/05\/what-are-capabilities\/",
                                "text": "This post"
                            },
                            {
                                "type": "text",
                                "text": " is my favourite introduction.\n\nThe general idea as I understand it is to escape the Access Control List (ACL) pattern, to stop asking “who are you?” along with every network request. Instead we could achieve the Principle of Least Authority (POLA) by explicitly passing around authority as data, allowing it to be manipulated\/attenuated, and only granting pieces of code the precise authority they need to do their job.\n\nBy building on this paradigm (and related stuff like CapTP)  Goblins allows you to write code that manipulates local “objects” that actually live across the (hostile!) network.\n\nI want to build safe, secure, P2P systems using lisp \/ functional programming and Spritely’s seems like an approach that might work!\n\nUltimately I’m hoping to bring Capabilities and\/or Goblins to Clojure "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " I’d prefer it if someone else did it first but I’m increasingly worried i might have to get the ball rolling.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1661539371.594599",
        "client_msg_id": "d8f5a852-bdcb-4421-97ac-2fb1afcd9c13",
        "text": "<@USJ9LD0E4> since spritely has been implemented in two different scheme dialects I think that port might be easier than you think",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1660904754.095659",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WvtPt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "USJ9LD0E4"
                            },
                            {
                                "type": "text",
                                "text": " since spritely has been implemented in two different scheme dialects I think that port might be easier than you think"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USJ9LD0E4",
        "type": "message",
        "ts": "1661553719.108189",
        "client_msg_id": "3edb6ea3-1433-4c2f-b293-850c2ca19963",
        "text": "<@UHWC9PXBL> I know what you mean but you may be overestimating my abilities :smile: I’m still finding the concepts difficult to wrap my head around. Trying to explain them here in a straightforward way is helping me a lot though",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "467eec5533b7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-21\/1361648344759_467eec5533b7281db15a_72.jpg",
            "first_name": "Tom",
            "real_name": "Tom Hutchinson",
            "display_name": "Tom Hutchinson",
            "team": "T5TCAFTA9",
            "name": "futureofcoding249",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1660904754.095659",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EjsO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " I know what you mean but you may be overestimating my abilities "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " I’m still finding the concepts difficult to wrap my head around. Trying to explain them here in a straightforward way is helping me a lot though"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            },
            {
                "name": "point_up_2",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "USJ9LD0E4",
        "type": "message",
        "ts": "1661554696.834289",
        "edited": {
            "user": "USJ9LD0E4",
            "ts": "1661555063.000000"
        },
        "client_msg_id": "20a4c59f-6e68-41e6-bb52-2a63286ff592",
        "text": "For one, I think I misrepresented an important detail in my description of Capabilities. Rather than just simply representing authorization in a flexible way (something like a <https:\/\/research.google\/pubs\/pub41892\/|macaroon>) a Capability is a _combination_ of your data and the authorization required to use it. <https:\/\/css.csail.mit.edu\/6.858\/2015\/readings\/confused-deputy.html|“Don’t separate designation from authority”>.\n\nSo as you program using Goblins you’re just passing around references to objects which have the authority to use them in particular ways embedded in them.\n\nNow my problem is that I’ve spent a long time avoiding references all together! When I program I want to be passing around _values_ not _objects!_ I don’t know how to reconcile the <http:\/\/erights.org\/talks\/thesis\/|Object Capability> model (where the reference graph is also the access graph) and functional programming as I do it in Clojure. I believe that Goblins is a step in this direction, it claims to “hybridize actors and the lambda calculus” but I still see a lot of objects! I’ll keep reading..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "467eec5533b7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-21\/1361648344759_467eec5533b7281db15a_72.jpg",
            "first_name": "Tom",
            "real_name": "Tom Hutchinson",
            "display_name": "Tom Hutchinson",
            "team": "T5TCAFTA9",
            "name": "futureofcoding249",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1660904754.095659",
        "parent_user_id": "UJFN50C00",
        "attachments": [
            {
                "from_url": "https:\/\/research.google\/pubs\/pub41892\/",
                "image_url": "https:\/\/research.google\/static\/images\/share-9cd7266ef5001b20f98e01062c26189fa69ed6c784df04caf809668887fd339a.png",
                "image_width": 1050,
                "image_height": 250,
                "image_bytes": 13815,
                "service_icon": "https:\/\/research.google\/static\/images\/favicon-6da5620880159634213e197fafca1dde0272153be3e4590818533fab8d040770.ico",
                "id": 1,
                "original_url": "https:\/\/research.google\/pubs\/pub41892\/",
                "fallback": "Google Research: Macaroons: Cookies with Contextual Caveats for Decentralized Authorization in the Cloud – Google Research",
                "title": "Macaroons: Cookies with Contextual Caveats for Decentralized Authorization in the Cloud – Google Research",
                "title_link": "https:\/\/research.google\/pubs\/pub41892\/",
                "service_name": "Google Research"
            },
            {
                "from_url": "http:\/\/erights.org\/talks\/thesis\/",
                "service_icon": "http:\/\/erights.org\/favicon.ico",
                "id": 2,
                "original_url": "http:\/\/erights.org\/talks\/thesis\/",
                "fallback": "Robust Composition: Towards a Unified Approach to Access Control and Concurrency Control",
                "text": "E: Cryptographic Capabilities for Distributed Smart Contracting",
                "title": "Robust Composition: Towards a Unified Approach to Access Control and Concurrency Control",
                "title_link": "http:\/\/erights.org\/talks\/thesis\/",
                "service_name": "erights.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LakA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For one, I think I misrepresented an important detail in my description of Capabilities. Rather than just simply representing authorization in a flexible way (something like a "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/research.google\/pubs\/pub41892\/",
                                "text": "macaroon"
                            },
                            {
                                "type": "text",
                                "text": ") a Capability is a "
                            },
                            {
                                "type": "text",
                                "text": "combination",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of your data and the authorization required to use it. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/css.csail.mit.edu\/6.858\/2015\/readings\/confused-deputy.html",
                                "text": "“Don’t separate designation from authority”"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nSo as you program using Goblins you’re just passing around references to objects which have the authority to use them in particular ways embedded in them.\n\nNow my problem is that I’ve spent a long time avoiding references all together! When I program I want to be passing around "
                            },
                            {
                                "type": "text",
                                "text": "values ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "not "
                            },
                            {
                                "type": "text",
                                "text": "objects! ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "I don’t know how to reconcile the "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/erights.org\/talks\/thesis\/",
                                "text": "Object Capability"
                            },
                            {
                                "type": "text",
                                "text": " ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "model (where the reference graph is also the access graph) and functional programming as I do it in Clojure. I believe that Goblins is a step in this direction, it claims to “hybridize actors and the lambda calculus” but I still see a lot of objects! I’ll keep reading.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1661569005.894169",
        "client_msg_id": "9E9E46C5-01CC-460F-B9C9-4EEC53AC912B",
        "text": "To be honest it sounds like you’re at the dip in the dunning kruger curve where you know how much you don’t know—and i think that’s sneakily the best time to get into a project, because you’re totally prepared to run into problems ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1660904754.095659",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OY7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To be honest it sounds like "
                            },
                            {
                                "type": "text",
                                "text": "you’re"
                            },
                            {
                                "type": "text",
                                "text": " at the dip in the dunning kruger curve where "
                            },
                            {
                                "type": "text",
                                "text": "y"
                            },
                            {
                                "type": "text",
                                "text": "ou know how much you "
                            },
                            {
                                "type": "text",
                                "text": "don’t"
                            },
                            {
                                "type": "text",
                                "text": " know—and i think "
                            },
                            {
                                "type": "text",
                                "text": "that’s"
                            },
                            {
                                "type": "text",
                                "text": " sneakily the best time to get into a project, because "
                            },
                            {
                                "type": "text",
                                "text": "you’re"
                            },
                            {
                                "type": "text",
                                "text": " totally prepared to run into problems "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USJ9LD0E4",
        "type": "message",
        "ts": "1661569312.494589",
        "client_msg_id": "86f07674-00a3-47e7-9639-578b021493c4",
        "text": "I appreciate you saying that, thank you. I suppose it can’t hurt to try, I’ll start a git repo :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "467eec5533b7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-21\/1361648344759_467eec5533b7281db15a_72.jpg",
            "first_name": "Tom",
            "real_name": "Tom Hutchinson",
            "display_name": "Tom Hutchinson",
            "team": "T5TCAFTA9",
            "name": "futureofcoding249",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1660904754.095659",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E8PFO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I appreciate you saying that, thank you. I suppose it can’t hurt to try, I’ll start a git repo "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL",
                    "UJFN50C00"
                ],
                "count": 2
            },
            {
                "name": "point_up_2",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            }
        ]
    }
]