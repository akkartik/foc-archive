[
    {
        "user": "U9C92716C",
        "type": "message",
        "ts": "1636573785.071200",
        "client_msg_id": "8caa5b04-facd-46df-8722-82dfda1a878d",
        "text": "thanks <@U8A5MS6R1>, good read. he’s definitely grappling with the same things &amp; i agree with a lot of the intuitions there. i think the decision to make ‘observation’ &amp; ‘modeling’ the two pillars of science leads to a bit of a muddled discussion of ‘empirical’ vs ‘explanatory’ models (where the ‘prediction’ part gets lumped in). i think it’s more clear to talk about three pillars - ‘coming up with representations for what’s out there’ (modeling), ‘checking how well a given model matches up with what’s actually out there’ (observation), and ‘finding rules for keeping models in sync with reality’ (prediction).\n\nto be a bit more explicit i was building up a sort of ‘DSL’ by making my own definitions of ‘science,’ ‘engineering,’ and ‘design’ in terms of modeling, since all three are pretty overloaded and lack canonical definitions. by that definition once you’ve decided what outcomes you want (‘design’), then ‘engineering’ is about picking the most relevant models &amp; rules from ‘science’ to achieve that outcome with your available resources, and bridging the gap between those models\/rules and the more complex reality they describe, (which can of course feed back into science, leading better models &amp; rules). sometimes you have to make do without much help from science (if existing models\/rules aren’t useful), and perhaps brute force your outcome through ‘guess &amp; check’ (science is still responsible for the ‘empirical data’ in the ‘check’ part though, and hopefully gives some intuitions to constrain the state space on the ‘guess’).\n\nas for model definition languages being designed - that’s indeed the crux of a lot of the confusion in our tools, and part of why this feels like an important thing to focus on. ultimately that’s true for all of them EXCEPT the one baked into our brains; everything else is a translation layer. \n\n<@U02JDAYKW7J> good point i introduced some unnecessary indirection with ‘reality’\/‘world’ vs ‘partial world’... could have just started with ‘model = something that represents a partial state of reality,’ then use ‘world’ when modeling to mean some (inclusive) subset of reality covered by the model.\n\nbtw i think the scare quotes on ‘reality’ may have been confusing too... overall i just wanted to acknowledge that there are other conceivable priors besides the ‘objective shared reality’ one, but it’s the one i’m adopting here along with the rest of ‘science’. \n\nthe general extrapolation science makes from there is that if we’re all perceiving the same ‘reality’ through tiny\/distorted keyholes (‘perceived reality’), we can come to a better consensus of what’s out there by testing hypotheses and sharing notes, which i think is best formalized as modeling, simulation (prediction), and observation.\n\nas to whatever mathematical formalisms you pick to structure your models, in the end they also have to be ‘hooked on’ to reality somewhere (which is why a model’s structure can give insight about the structure of a ‘hooked on’ referent).\n\nmy current perspective is that ‘OO was really about messages’ was a kind of ‘v1’ explanation from Kay &amp; a bit confusing in the end (for me at least.. e.g. does a hammer pass messages to a nail? it gets awkward for ‘direct’ sensing &amp; manipulation), and he got better at communicating the deeper issues after that. i guess now i see Smalltalk’s ‘message passing’ as more of an implementation detail for ‘decoupling enough’ within a ‘unified enough’ medium. the real sauce is components that are themselves capable of ‘universal structure’ (the ‘art of the wrap’), while also able to ‘hook on’ to other components as desired (not just a matter of message passing but also ‘alien communication’). the ‘metamedium’",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6bd6fe3fcf91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-20\/1137095139906_6bd6fe3fcf91b6f41781_72.jpg",
            "first_name": "",
            "real_name": "Dalton Banks",
            "display_name": "daltonb",
            "team": "T5TCAFTA9",
            "name": "dalton",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1635811447.034700",
        "parent_user_id": "U9C92716C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=Q=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": ", good read. he’s definitely grappling with the same things & i agree with a lot of the intuitions there. i think the decision to make ‘observation’ & ‘modeling’ the two pillars of science leads to a bit of a muddled discussion of ‘empirical’ vs ‘explanatory’ models (where the ‘prediction’ part gets lumped in). i think it’s more clear to talk about three pillars - ‘coming up with representations for what’s out there’ (modeling), ‘checking how well a given model matches up with what’s actually out there’ (observation), and ‘finding rules for keeping models in sync with reality’ (prediction).\n\nto be a bit more explicit i was building up a sort of ‘DSL’ by making my own definitions of ‘science,’ ‘engineering,’ and ‘design’ in terms of modeling, since all three are pretty overloaded and lack canonical definitions. by that definition once you’ve decided what outcomes you want (‘design’), then ‘engineering’ is about picking the most relevant models & rules from ‘science’ to achieve that outcome with your available resources, and bridging the gap between those models\/rules and the more complex reality they describe, (which can of course feed back into science, leading better models & rules). sometimes you have to make do without much help from science (if existing models\/rules aren’t useful), and perhaps brute force your outcome through ‘guess & check’ (science is still responsible for the ‘empirical data’ in the ‘check’ part though, and hopefully gives some intuitions to constrain the state space on the ‘guess’).\n\nas for model definition languages being designed - that’s indeed the crux of a lot of the confusion in our tools, and part of why this feels like an important thing to focus on. ultimately that’s true for all of them EXCEPT the one baked into our brains; everything else is a translation layer. \n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U02JDAYKW7J"
                            },
                            {
                                "type": "text",
                                "text": " good point i introduced some unnecessary indirection with ‘reality’\/‘world’ vs ‘partial world’... could have just started with ‘model = something that represents a partial state of reality,’ then use ‘world’ when modeling to mean some (inclusive) subset of reality covered by the model.\n\nbtw i think the scare quotes on ‘reality’ may have been confusing too... overall i just wanted to acknowledge that there are other conceivable priors besides the ‘objective shared reality’ one, but it’s the one i’m adopting here along with the rest of ‘science’. \n\nthe general extrapolation science makes from there is that if we’re all perceiving the same ‘reality’ through tiny\/distorted keyholes (‘perceived reality’), we can come to a better consensus of what’s out there by testing hypotheses and sharing notes, which i think is best formalized as modeling, simulation (prediction), and observation.\n\nas to whatever mathematical formalisms you pick to structure your models, in the end they also have to be ‘hooked on’ to reality somewhere (which is why a model’s structure can give insight about the structure of a ‘hooked on’ referent).\n\nmy current perspective is that ‘OO was really about messages’ was a kind of ‘v1’ explanation from Kay & a bit confusing in the end (for me at least.. e.g. does a hammer pass messages to a nail? it gets awkward for ‘direct’ sensing & manipulation), and he got better at communicating the deeper issues after that. i guess now i see Smalltalk’s ‘message passing’ as more of an implementation detail for ‘decoupling enough’ within a ‘unified enough’ medium. the real sauce is components that are themselves capable of ‘universal structure’ (the ‘art of the wrap’), while also able to ‘hook on’ to other components as desired (not just a matter of message passing but also ‘alien communication’). the ‘metamedium’"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1636575262.071400",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1636575307.000000"
        },
        "client_msg_id": "bc1366a2-6c95-454c-bed7-3324e9bf01c3",
        "text": "&gt; that’s indeed the crux of a lot of the confusion in our tools, and part of why this feels like an important thing to focus on\nI agree. When programming, I'm not sure I can clearly distinguish between \"using a modelling language to create a model\" and \"creating a new model definition language\". If we consider a programming language or system as a model definition language, any library or framework written in that system now is a new model definition language. It shares some aspect with the underlying language, but introduces new abstract concepts that can be instantiated to express a new kind of model. You don't even need a rich library for this. A trivial example is if I implement a Graph class in any OO language, and express various concepts in my programs as graphs, I've now created an ad-hoc modeling language where \"graphs\" can be expressed and processed.\n\nSo, in any final system that exhibits behavior, where is the boundary between creation of models vs creation of new modelling languages? Hard to tell. Is it possible that in other fields of science and engineering, we don't usually create model definition languages so easily? Maybe.\n\nI agree :100: on your original point that coding is not about data and functions. It's really about crafting systems via representations (~models). I'm not a fan of even the usual connotations of a program where you write it then run it. Rather, there are other ways to think about the system-representation correspondence that we should explore.\n\nOn the topic of modelling, another paper I really like is Winograd's Beyond Programming Languages in which he talks about the \"Three  Domains  of Description\" - essentially three perspectives of such representations that are desirable. <https:\/\/john.cs.olemiss.edu\/~dwilkins\/Seminar\/S05\/winogradPL.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1635811447.034700",
        "parent_user_id": "U9C92716C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "u8V8E",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that’s indeed the crux of a lot of the confusion in our tools, and part of why this feels like an important thing to focus on"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree. When programming, I'm not sure I can clearly distinguish between \"using a modelling language to create a model\" and \"creating a new model definition language\". If we consider a programming language or system as a model definition language, any library or framework written in that system now is a new model definition language. It shares some aspect with the underlying language, but introduces new abstract concepts that can be instantiated to express a new kind of model. You don't even need a rich library for this. A trivial example is if I implement a Graph class in any OO language, and express various concepts in my programs as graphs, I've now created an ad-hoc modeling language where \"graphs\" can be expressed and processed.\n\nSo, in any final system that exhibits behavior, where is the boundary between creation of models vs creation of new modelling languages? Hard to tell. Is it possible that in other fields of science and engineering, we don't usually create model definition languages so easily? Maybe.\n\nI agree "
                            },
                            {
                                "type": "emoji",
                                "name": "100",
                                "unicode": "1f4af"
                            },
                            {
                                "type": "text",
                                "text": " on your original point that coding is not about data and functions. It's really about crafting systems via representations (~models). I'm not a fan of even the usual connotations of a program where you write it then run it. Rather, there are other ways to think about the system-representation correspondence that we should explore.\n\nOn the topic of modelling, another paper I really like is Winograd's Beyond Programming Languages in which he talks about the \"Three  Domains  of Description\" - essentially three perspectives of such representations that are desirable. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/john.cs.olemiss.edu\/~dwilkins\/Seminar\/S05\/winogradPL.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02JDAYKW7J",
        "type": "message",
        "ts": "1636581585.071900",
        "client_msg_id": "a34baac0-10de-4267-a1e9-feddb6e21e52",
        "text": "<@U8A5MS6R1> good paper there - thanks!\n\n<@U9C92716C> The Kay explanation was probably reflecting what he was really thinking at the time when working on Smalltalk. A biological metaphor of how cells communicate, how the system stays stable, etc. So it was more about message than about objects; the objects part came from Simula, which was a direct influence on Smalltalk. And I would guess that he had a lot of Simula in his head and so named the thing OO, instead of Messages.  I’ll try to remember to ask AK about that…\n\nThe other part which I think is important is that all these objets were supposed to be fully fledged machines (virtual presumable). I’ve heard him say multiple times that “if you want to have something powerful you can’t have anything less than the machine itself” or something to that effect. Kind of like a cell is a self-contained and complete biological entity…\n\nOn the modeling side, I think we need to be able to model things like mathematical objects, or branches of math. In some sense category is about that. It’s pretty critical to be able to translate\/model one domain in\/on another - this elucidates structure. What much of math has to do with ‘reality’ depends on the definition of the latter; if you reality includes mathematical constructs then the answer is everything, otherwise not much…\n\nBut maybe your definition of model needs to exclude these kinds of artificial abstractions, which is worth thinking about. I suppose I think of a simulation close to what you think of as a model.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1ab8763ceb21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-14\/2826386958343_1ab8763ceb219317febf_72.jpg",
            "first_name": "Daniel",
            "real_name": "Daniel Krasner",
            "display_name": "Daniel Krasner",
            "team": "T5TCAFTA9",
            "name": "krasnerdaniel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1635811447.034700",
        "parent_user_id": "U9C92716C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WcQSv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " good paper there - thanks!\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U9C92716C"
                            },
                            {
                                "type": "text",
                                "text": " The Kay explanation was probably reflecting what he was really thinking at the time when working on Smalltalk. A biological metaphor of how cells communicate, how the system stays stable, etc. So it was more about message than about objects; the objects part came from Simula, which was a direct influence on Smalltalk. And I would guess that he had a lot of Simula in his head and so named the thing OO, instead of Messages.  I’ll try to remember to ask AK about that…\n\nThe other part which I think is important is that all these objets were supposed to be fully fledged machines (virtual presumable). I’ve heard him say multiple times that “if you want to have something powerful you can’t have anything less than the machine itself” or something to that effect. Kind of like a cell is a self-contained and complete biological entity…\n\nOn the modeling side, I think we need to be able to model things like mathematical objects, or branches of math. In some sense category is about that. It’s pretty critical to be able to translate\/model one domain in\/on another - this elucidates structure. What much of math has to do with ‘reality’ depends on the definition of the latter; if you reality includes mathematical constructs then the answer is everything, otherwise not much…\n\nBut maybe your definition of model needs to exclude these kinds of artificial abstractions, which is worth thinking about. I suppose I think of a simulation close to what you think of as a model."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1636592084.072400",
        "client_msg_id": "088009e0-2c06-4df8-be40-17f9ef0a84b6",
        "text": "Interesting thread <@U9C92716C>. I am currently on a neuroscience dive that started with thinking about modeling &amp; simulation. It's a bit tangential but sharing since my journey so far has led to more philosophical questions and perspectives on reality and the mind which some of your posts also bring up.\n\nI wrote my first multi-agent sim language\/engine this year. Once I had that hammer, I started looking for nails and at some point wondered \"can we model the brain with a multi-agent sim\"?\n\nGoogling this quickly turned up Minsky's \"Society of Mind\" from 1988.\n\nDoubly interesting not just for the ideas but because Minsky was writing this after helping invent the category of sim languages, (I had been referencing Logo\/NetLogo for my own).\n\nSo now I'm buried in reading SoM and AThousandBrains and cognitive modules, et cetera.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1635811447.034700",
        "parent_user_id": "U9C92716C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xiFe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting thread "
                            },
                            {
                                "type": "user",
                                "user_id": "U9C92716C"
                            },
                            {
                                "type": "text",
                                "text": ". I am currently on a neuroscience dive that started with thinking about modeling & simulation. It's a bit tangential but sharing since my journey so far has led to more philosophical questions and perspectives on reality and the mind which some of your posts also bring up.\n\nI wrote my first multi-agent sim language\/engine this year. Once I had that hammer, I started looking for nails and at some point wondered \"can we model the brain with a multi-agent sim\"?\n\nGoogling this quickly turned up Minsky's \"Society of Mind\" from 1988.\n\nDoubly interesting not just for the ideas but because Minsky was writing this after helping invent the category of sim languages, (I had been referencing Logo\/NetLogo for my own).\n\nSo now I'm buried in reading SoM and AThousandBrains and cognitive modules, et cetera."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02JDAYKW7J",
        "type": "message",
        "ts": "1636592468.072600",
        "client_msg_id": "b8f411a1-173b-465b-96fb-19fe7053d4f4",
        "text": "<@UMVFWPZ36> I’d add _The Emotion Machine_ by Minsky to the list; it’s a later, in some sense more rounded, discussion of the sorts of things you see in SoM",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1ab8763ceb21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-14\/2826386958343_1ab8763ceb219317febf_72.jpg",
            "first_name": "Daniel",
            "real_name": "Daniel Krasner",
            "display_name": "Daniel Krasner",
            "team": "T5TCAFTA9",
            "name": "krasnerdaniel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1635811447.034700",
        "parent_user_id": "U9C92716C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YCkA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UMVFWPZ36"
                            },
                            {
                                "type": "text",
                                "text": " I’d add "
                            },
                            {
                                "type": "text",
                                "text": "The Emotion Machine",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " by Minsky to the list; it’s a later, in some sense more rounded, discussion of the sorts of things you see in SoM"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    }
]