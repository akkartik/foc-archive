[
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1561965950.088200",
        "client_msg_id": "59f088ad-ce12-417a-ae1f-624c6b501c2f",
        "text": "Excel has a closed arithmetic where each cell can have a value of varying type, but there are 2 meta-values that a cell can have, undefined and error (denoted #UNDEF and #ERROR) which automatically propagate using a closed arithmetic (in the algebraic sense that all operations stay inside the same set). A predictable, stable arithmetic model that is not present in C for example which has maybe a 32 bit integer number, which cannot store either metavalue. Extending arithmetic has serious consequences, as you can no longer use the arithmetic of the underlying hardware, which means you are going to be 10x slower. So right away you must decide in your language, are you going for maximum performance, or maximum robustness. In my Beads project, i have imitated Excel, and it has vast repercussions, as connections to the outside world have to be converted. But it pays dividends in robustness as every operation has a predictable and consistent result, with zero chance of undefined behavior. Contrast that with other languages where uninitialized variables are basically random number generators, and languages where enums are represented by simple integers and one can accidentally do arithmetic on them.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561356917.297200",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nh2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Excel has a closed arithmetic where each cell can have a value of varying type, but there are 2 meta-values that a cell can have, undefined and error (denoted #UNDEF and #ERROR) which automatically propagate using a closed arithmetic (in the algebraic sense that all operations stay inside the same set). A predictable, stable arithmetic model that is not present in C for example which has maybe a 32 bit integer number, which cannot store either metavalue. Extending arithmetic has serious consequences, as you can no longer use the arithmetic of the underlying hardware, which means you are going to be 10x slower. So right away you must decide in your language, are you going for maximum performance, or maximum robustness. In my Beads project, i have imitated Excel, and it has vast repercussions, as connections to the outside world have to be converted. But it pays dividends in robustness as every operation has a predictable and consistent result, with zero chance of undefined behavior. Contrast that with other languages where uninitialized variables are basically random number generators, and languages where enums are represented by simple integers and one can accidentally do arithmetic on them."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1561966831.088400",
        "client_msg_id": "ca980a58-3262-45b1-be11-086213ce0d6c",
        "text": "or something on a scale between those two!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561894231.015200",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KtniK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "or something on a scale between those two!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1561966982.088600",
        "client_msg_id": "f98c1f49-a029-4bc4-85cb-48132d1e869f",
        "text": "Well thanks, that's a really comprehensive answer!!! Yes totally agree that numbers (etc) should be user-focused\/domain-focused not machine-focused. We can sort out optimisation later.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561356917.297200",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RWqB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well thanks, that's a really comprehensive answer!!! Yes totally agree that numbers (etc) should be user-focused\/domain-focused not machine-focused. We can sort out optimisation later."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1561967427.088800",
        "client_msg_id": "90b5a816-c24e-447e-944f-8eb0e8101a9e",
        "text": "In my Discus labeling product, which sold a million copies, it was written in a very efficient medium level language called Modula-2. But after profiling it, i found that certain operations were sluggish because it involved triple loops, with per-pixel calculations. Those operations were rewritten in assembler for that 4x speedup which only comes with hand tuning which registers hold which values, and taking advantage of the many weird quirks of the i386 architecture. So i say use the most efficient for programmer time language you have available, and only after the product is in testing do you run benchmarks, identify the slow parts, replace them. A huge fraction of a program is not performance sensitive, and the programming cost especially in elapsed time, is often of great importance. People are way too harsh about performance, and way too liberal with their time. There is undisputed evidence that a person writes about the same number of lines per day of debugged code regardless of the language, so leverage is applied by using a higher level, more powerful language. If you work for Adobe and are in charge of the Gaussian blur function, you will spend man years making it work on 20 core machines, but for most of us regular folk, getting our product out the door with few to no bugs is the overriding goal.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561133507.167500",
        "parent_user_id": "UHDQ62M4P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uGR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my Discus labeling product, which sold a million copies, it was written in a very efficient medium level language called Modula-2. But after profiling it, i found that certain operations were sluggish because it involved triple loops, with per-pixel calculations. Those operations were rewritten in assembler for that 4x speedup which only comes with hand tuning which registers hold which values, and taking advantage of the many weird quirks of the i386 architecture. So i say use the most efficient for programmer time language you have available, and only after the product is in testing do you run benchmarks, identify the slow parts, replace them. A huge fraction of a program is not performance sensitive, and the programming cost especially in elapsed time, is often of great importance. People are way too harsh about performance, and way too liberal with their time. There is undisputed evidence that a person writes about the same number of lines per day of debugged code regardless of the language, so leverage is applied by using a higher level, more powerful language. If you work for Adobe and are in charge of the Gaussian blur function, you will spend man years making it work on 20 core machines, but for most of us regular folk, getting our product out the door with few to no bugs is the overriding goal."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1561972771.089100",
        "client_msg_id": "22dac0f1-3656-4bb7-9c46-0f4e8702060b",
        "text": "my notebook battery life might be shorter but my notebook battery life is long enough that I don't care :slightly_smiling_face:.  I have 4 instances of Chrome running (well, 4 profiles in their own windows) with 47 tabs (3 of them slack), 2 instances of VS Code, 4 terminals serving 2 dev websites and one doing a watchful build, one instance of firefox, 2 projects open in sublime merge. Blender, itunes, and slickedit. My notebook will run 4-8 hours. My biggest battery drain is working on GPU related stuff, not slack.\n\nIn any case, if Apple is willing to start a team to make an open source cross browser and cross platform UI framework that runs in efficient Swift I'll seriously consider joining the team :stuck_out_tongue:   I guess Google is trying to do that with Flutter but I'm guessing Dart is not nearly as nifty as Swift. I'd also love to see or participate in a super-full stack solution (no just front-end + back-end but scaling\/testing\/ci\/staging\/deployment\/etc)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561852091.431500",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I3XsE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "my notebook battery life might be shorter but my notebook battery life is long enough that I don't care "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": ".  I have 4 instances of Chrome running (well, 4 profiles in their own windows) with 47 tabs (3 of them slack), 2 instances of VS Code, 4 terminals serving 2 dev websites and one doing a watchful build, one instance of firefox, 2 projects open in sublime merge. Blender, itunes, and slickedit. My notebook will run 4-8 hours. My biggest battery drain is working on GPU related stuff, not slack.\n\nIn any case, if Apple is willing to start a team to make an open source cross browser and cross platform UI framework that runs in efficient Swift I'll seriously consider joining the team "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": "   I guess Google is trying to do that with Flutter but I'm guessing Dart is not nearly as nifty as Swift. I'd also love to see or participate in a super-full stack solution (no just front-end + back-end but scaling\/testing\/ci\/staging\/deployment\/etc)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1561975525.090000",
        "client_msg_id": "D8F8C4F9-2D9E-48D4-A33B-2EA98051AEB7",
        "text": "<@UC6997THT> The WebKit team is hiring: <https:\/\/jobs.apple.com\/en-us\/details\/114151137\/webkit-architecture-engineer-performance?team=SFTWR> :stuck_out_tongue_winking_eye:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561852091.431500",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jjFU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": " The WebKit team is hiring: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/jobs.apple.com\/en-us\/details\/114151137\/webkit-architecture-engineer-performance?team=SFTWR"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue_winking_eye",
                                "unicode": "1f61c"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1561979577.090200",
        "client_msg_id": "be9cbca7-02c9-4c60-86fa-8b800b6c89d4",
        "text": "Let's meet online and talk about our note taking process this Wednesday — find the exact time in your timezone in the Doodle here: <https:\/\/doodle.com\/poll\/43w26m9zk49hhart>\n\nFeel free to join us even if you didn't participate in the Doodle.\n\nI can send a Zoom link, however that'll make us disconnect and reconnect after 40 mins. If you prefer a different conferencing platform, please suggest it here. Speak to you Wednesday!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561232606.230800",
        "parent_user_id": "UJTHWNH2T",
        "attachments": [
            {
                "title": "Doodle: Note-taking Nerds",
                "title_link": "https:\/\/doodle.com\/poll\/43w26m9zk49hhart",
                "text": "Doodle is the simplest way to schedule meetings with clients, colleagues, or friends. Find the best time for one-to-ones and team meetings with our user-friendly calendar tool. Get started today!",
                "fallback": "Doodle: Note-taking Nerds",
                "image_url": "https:\/\/doodle.com\/graphics\/static\/facebookSharingThumbnail.png",
                "from_url": "https:\/\/doodle.com\/poll\/43w26m9zk49hhart",
                "image_width": 300,
                "image_height": 200,
                "image_bytes": 6864,
                "service_icon": "https:\/\/cdn2.doodle.com\/dist\/i\/7479b568749fca315a2969e30cbee4f5.png",
                "service_name": "doodle.com",
                "id": 1,
                "original_url": "https:\/\/doodle.com\/poll\/43w26m9zk49hhart"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "op6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Let's meet online and talk about our note taking process this Wednesday — find the exact time in your timezone in the Doodle here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/doodle.com\/poll\/43w26m9zk49hhart"
                            },
                            {
                                "type": "text",
                                "text": "\n\nFeel free to join us even if you didn't participate in the Doodle.\n\nI can send a Zoom link, however that'll make us disconnect and reconnect after 40 mins. If you prefer a different conferencing platform, please suggest it here. Speak to you Wednesday!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1561979638.090500",
        "text": "In case you fell off the thread about note taking:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "[July 1st, 2019 12:12 PM] stefanlesser: Let's meet online and talk about our note taking process this Wednesday — find the exact time in your timezone in the Doodle here: <https:\/\/doodle.com\/poll\/43w26m9zk49hhart>\n\nFeel free to join us even if you didn't participate in the Doodle.\n\nI can send a Zoom link, however that'll make us disconnect and reconnect after 40 mins. If you prefer a different conferencing platform, please suggest it here. Speak to you Wednesday!",
                "ts": "1561979577.090200",
                "author_id": "U5STGTB3J",
                "author_subname": "Stefan Lesser",
                "channel_id": "C5T9GPWFL",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "Let's meet online and talk about our note taking process this Wednesday — find the exact time in your timezone in the Doodle here: <https:\/\/doodle.com\/poll\/43w26m9zk49hhart>\n\nFeel free to join us even if you didn't participate in the Doodle.\n\nI can send a Zoom link, however that'll make us disconnect and reconnect after 40 mins. If you prefer a different conferencing platform, please suggest it here. Speak to you Wednesday!",
                "author_name": "Stefan Lesser",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/U5STGTB3J",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1561979577090200?thread_ts=1561232606230800&cid=C5T9GPWFL",
                "is_share": true,
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A46xs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In case you fell off the thread about note taking:"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UF2GNRUTV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1561989935.091000",
        "client_msg_id": "b9370931-583c-426a-adb7-5372a2f66eeb",
        "text": "I have a computer that was mid-high-tier a few years ago. With Firefox, VSCode, Slack, Discord, Notion, sometimes Spotify, and Calibre up I often have noticeable lag. Notice how many of these are Electron apps!\n\nI regard the \"fast enough\" thing similarly to the Apple-only thing. Most developer have computers faster than 90%+ of consumers in the world. Okay, it's fast enough for you, so what?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561852091.431500",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zzh5+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a computer that was mid-high-tier a few years ago. With Firefox, VSCode, Slack, Discord, Notion, sometimes Spotify, and Calibre up I often have noticeable lag. Notice how many of these are Electron apps!\n\nI regard the \"fast enough\" thing similarly to the Apple-only thing. Most developer have computers faster than 90%+ of consumers in the world. Okay, it's fast enough for you, so what?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1561993715.091300",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1561993854.000000"
        },
        "client_msg_id": "bdcfe35c-e907-4f82-b922-7d3462a3ed8b",
        "text": "I'm also writing Electron apps, and I'm doing it in a way that doesn't kill battery. It's totally possible, you just can't throw every npm package under the sun into your project and think \"It's not the web, so it doesn't matter what my bundle size is, what event listeners I leave active, how many requestAnimationFrame loops I have running when there's nothing animating.\"\n\nThere's no escaping the RAM bloat, but you can definitely keep the CPU and overall energy use _very_ low.\n\n(In my case, I'm not using any 3rd party libraries or frameworks — just \"bare\" Electron, Node, the Browser.. so not that bare, haha — no React, nothing running in my JS process other than code I wrote that I can control exactly when and what it runs.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561852091.431500",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qNAMi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm also writing Electron apps, and I'm doing it in a way that doesn't kill battery. It's totally possible, you just can't throw every npm package under the sun into your project and think \"It's not the web, so it doesn't matter what my bundle size is, what event listeners I leave active, how many requestAnimationFrame loops I have running when there's nothing animating.\"\n\nThere's no escaping the RAM bloat, but you can definitely keep the CPU and overall energy use "
                            },
                            {
                                "type": "text",
                                "text": "very",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " low.\n\n(In my case, I'm not using any 3rd party libraries or frameworks — just \"bare\" Electron, Node, the Browser.. so not that bare, haha — no React, nothing running in my JS process other than code I wrote that I can control exactly when and what it runs.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1562011789.092500",
        "client_msg_id": "03b6776c-6b7f-4355-8450-4fb65e2f7330",
        "text": "<@UC2A2ARPT> you don't use any UI library\/framework? You don't need some?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561852091.431500",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mxg8\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " you don't use any UI library\/framework? You don't need some?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1562011937.092700",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1562012071.000000"
        },
        "client_msg_id": "a832dce0-6698-495b-8023-b31c37a742f3",
        "text": "I do a lot of perf-sensitive stuff (not Electron, but: <https:\/\/www.lunchboxsessions.com\/explore\/electrical>) so I prefer to write against whatever lowest-level primitives I have available to me. I've tried a lot of UI frameworks, component libraries, etc.. never found one I like well enough to sacrifice the performance. Also, I hate dependencies breaking under me.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561852091.431500",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m\/T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I do a lot of perf-sensitive stuff (not Electron, but: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.lunchboxsessions.com\/explore\/electrical"
                            },
                            {
                                "type": "text",
                                "text": ") so I prefer to write against whatever lowest-level primitives I have available to me. I've tried a lot of UI frameworks, component libraries, etc.. never found one I like well enough to sacrifice the performance. Also, I hate dependencies breaking under me."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UJTHWNH2T"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1562012982.093700",
        "client_msg_id": "896baf8f-2cc4-4ca3-964a-98121478cc4f",
        "text": "Even further than what Kartik suggested, how about “accessible, appealing configuration of existing solutions”. I see decades of fascinating ideas that have hardly ever been presented in a manner suitable for non-academics to use for real work.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561894231.015200",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ijj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Even further than what Kartik suggested, how about “accessible, appealing configuration of existing solutions”. I see decades of fascinating ideas that have hardly ever been presented in a manner suitable for non-academics to use for real work."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1562014290.093900",
        "client_msg_id": "9eb81fec-9b19-4394-a7a7-c342d7abb08e",
        "text": "<@UC2A2ARPT> I respect the decision, although I'm curious which lightweight frameworks you've tried. Surplus? Svelte 3?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561852091.431500",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "718",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I respect the decision, although I'm curious which lightweight frameworks you've tried. Surplus? Svelte 3?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1562027898.096200",
        "client_msg_id": "451ebba0-e3df-47a9-a4ad-f03362cbd547",
        "text": "Are people here generally aware of Cell lang? I searched on here and saw only a couple comments about it (in the history that I can see). I found it last night while searching for langs with reactivity built-in. It references stuff that I'm only familiar with from this community: Out of the Tarpit paper, importance of relational model outside SQL. <http:\/\/cell-lang.net\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562027898.096200",
        "reply_count": 10,
        "reply_users_count": 3,
        "latest_reply": "1562100991.123600",
        "reply_users": [
            "UJPHQ8Z3N",
            "UJN1TAYEQ",
            "UJTHWNH2T"
        ],
        "replies": [
            {
                "user": "UJPHQ8Z3N",
                "ts": "1562092266.121500"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1562095499.121700"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1562095664.121900"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1562095775.122200"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1562096273.122500"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1562096694.122700"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1562096924.122900"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1562097447.123100"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1562099303.123400"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1562100991.123600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "The Cell Programming Language",
                "title_link": "http:\/\/cell-lang.net\/",
                "text": "The Cell Programming Language",
                "fallback": "The Cell Programming Language",
                "from_url": "http:\/\/cell-lang.net\/",
                "service_name": "cell-lang.net",
                "id": 1,
                "original_url": "http:\/\/cell-lang.net\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rUfd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are people here generally aware of Cell lang? I searched on here and saw only a couple comments about it (in the history that I can see). I found it last night while searching for langs with reactivity built-in. It references stuff that I'm only familiar with from this community: Out of the Tarpit paper, importance of relational model outside SQL. "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/cell-lang.net\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart_eyes",
                "users": [
                    "UAJ9DV971"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UDKTZSD6H",
                    "UBSMEUXAA",
                    "UJN1TAYEQ",
                    "U8A5MS6R1"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1562044349.096800",
        "client_msg_id": "b197c883-9244-4604-86da-8f5ee10b01d3",
        "text": "<@UJTHWNH2T> I'm fond of the design of Svelte, but I haven't used it because I don't use TypeScript (yet). I'm also quite fond of Preact as a quick-and-dirty, get-the-job-done option. Also very interested in the design of thi.ng-umbrella. Not lightweight, but: when doing React, I quite liked using it via re-frame in ClojureScript. Even though I don't generally use them, I read up about pretty much every new UI framework that crosses my path — I'm always looking for techniques that'll help my browser code run faster, load quicker, etc. Never heard of Surplus, so now I'm going to go look into that!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561852091.431500",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bcC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJTHWNH2T"
                            },
                            {
                                "type": "text",
                                "text": " I'm fond of the design of Svelte, but I haven't used it because I don't use TypeScript (yet). I'm also quite fond of Preact as a quick-and-dirty, get-the-job-done option. Also very interested in the design of thi.ng-umbrella. Not lightweight, but: when doing React, I quite liked using it via re-frame in ClojureScript. Even though I don't generally use them, I read up about pretty much every new UI framework that crosses my path — I'm always looking for techniques that'll help my browser code run faster, load quicker, etc. Never heard of Surplus, so now I'm going to go look into that!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1562045543.097200",
        "client_msg_id": "3856a14b-ec91-4923-b73c-2e5ca66ce382",
        "text": "<@UC2A2ARPT> Going to sleep in a sec, but real quick. Svelte doesn't support TypeScript, yet... That's actually the reason I don't use it much yet. It's just plain JS. And, Surplus is built on top of the author's reactive library called S.js. Another library called Solid uses S.js under the hood. Very much worth looking into too; it's more flexible than Surplus. Btw, this isn't in the docs, I don't think, maybe it's an easter-egg: Surplus is based on synchronous reactive programming. SRP. Surplus",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561852091.431500",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mrR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " Going to sleep in a sec, but real quick. Svelte doesn't support TypeScript, yet... That's actually the reason I don't use it much yet. It's just plain JS. And, Surplus is built on top of the author's reactive library called S.js. Another library called Solid uses S.js under the hood. Very much worth looking into too; it's more flexible than Surplus. Btw, this isn't in the docs, I don't think, maybe it's an easter-egg: Surplus is based on synchronous reactive programming. SRP. Surplus"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1562045601.097400",
        "client_msg_id": "ba387d76-7ec7-4a3e-a123-a64171c4d6cb",
        "text": "Neat. I had thought Svelte was pure typescript, but I must be misremembering.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561852091.431500",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/q3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Neat. I had thought Svelte was pure typescript, but I must be misremembering."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1562045703.097600",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1562045835.000000"
        },
        "client_msg_id": "00068736-f38c-43b8-9a8b-a485192eb264",
        "text": "Backing up a bit, toward the main topic of the thread...\n\nWhat I like about Electron is that I can use the platform I'm most familiar with (HTML, CSS, JS, SVG, WebGL, etc) and am best equipped to do a good job of — call that dev productivity, sure, but for me (a dev team of 1) it's simply the difference between having a _so-so_ native app, or not having one at all... and my teammates would rather use a so-so native app than have to do their work in a browser. That's just the limitations I'm personally under, and Electron is a good fit.\n\nFor a team with the size and resources of Slack, it's downright negligent that they don't write first-class truly native apps for the three major platforms. Their Electron app is bloated, laggy, toxic garbage — it is a constant fixture in the \"APPS USING SIGNIFICANT ENERGY\" section of my battery toolbar, even when it's idle in the background... what the fuck. My electron app is never shows up there, and is a highly interactive drawing+coding tool that holds a steady 60fps when in active use, lags less while doing complex graphics than Slack lags while typing text, and _immediately_ drops to totally inert code (no running event loops) as soon as the user lets go. You can totally make a complex Electron app that is well behaved.\n\nI also have some native apps on my Mac that, like Slack, are _should be simple_ but also have these sorts of performance problems. You can write a bad, slow, misbehaving app using any toolkit. Electron just happens to have inherited the NPM culture of \"cobble it together on top of a big heavy UI framework\" and \"dependencies are fine\" and \"just use pre-made components\" and \"don't learn the low-level\", instead of the Obj-C\/Swift\/Rust\/C++ culture of mechanical empathy.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561852091.431500",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ShS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Backing up a bit, toward the main topic of the thread...\n\nWhat I like about Electron is that I can use the platform I'm most familiar with (HTML, CSS, JS, SVG, WebGL, etc) and am best equipped to do a good job of — call that dev productivity, sure, but for me (a dev team of 1) it's simply the difference between having a "
                            },
                            {
                                "type": "text",
                                "text": "so-so",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " native app, or not having one at all... and my teammates would rather use a so-so native app than have to do their work in a browser. That's just the limitations I'm personally under, and Electron is a good fit.\n\nFor a team with the size and resources of Slack, it's downright negligent that they don't write first-class truly native apps for the three major platforms. Their Electron app is bloated, laggy, toxic garbage — it is a constant fixture in the \"APPS USING SIGNIFICANT ENERGY\" section of my battery toolbar, even when it's idle in the background... what the fuck. My electron app is never shows up there, and is a highly interactive drawing+coding tool that holds a steady 60fps when in active use, lags less while doing complex graphics than Slack lags while typing text, and "
                            },
                            {
                                "type": "text",
                                "text": "immediately",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " drops to totally inert code (no running event loops) as soon as the user lets go. You can totally make a complex Electron app that is well behaved.\n\nI also have some native apps on my Mac that, like Slack, are "
                            },
                            {
                                "type": "text",
                                "text": "should be simple",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " but also have these sorts of performance problems. You can write a bad, slow, misbehaving app using any toolkit. Electron just happens to have inherited the NPM culture of \"cobble it together on top of a big heavy UI framework\" and \"dependencies are fine\" and \"just use pre-made components\" and \"don't learn the low-level\", instead of the Obj-C\/Swift\/Rust\/C++ culture of mechanical empathy."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U5STGTB3J"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1562046691.097900",
        "client_msg_id": "649b1640-e412-4ca3-8333-352c735ed90a",
        "text": "You should blog some techniques you use to create efficient Electron apps, <@UC2A2ARPT>. Would be super interesting and level up the conversation beyond knee-jerk love\/hate flame wars. Maybe call it \"mechanical empathy for Electron\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561852091.431500",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HZFy=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You should blog some techniques you use to create efficient Electron apps, "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": ". Would be super interesting and level up the conversation beyond knee-jerk love\/hate flame wars. Maybe call it \"mechanical empathy for Electron\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1562046804.098200",
        "client_msg_id": "cd5a07b5-24bd-474c-957f-5cca8666e5de",
        "text": "Maybe a blog post isn't the ideal vehicle for this. Create an example app (say a todo list) with the normal way people do it, and the way you do it. Let me run both on my Mac and viscerally feel the performance difference.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561852091.431500",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wld0V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe a blog post isn't the ideal vehicle for this. Create an example app (say a todo list) with the normal way people do it, and the way you do it. Let me run both on my Mac and viscerally feel the performance difference."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            }
        ]
    }
]