[
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1553877719.000700",
        "client_msg_id": "2a30b985-ab5b-4a7e-89d2-21d0279d7ee5",
        "text": "This tutorial series is illustrating how to build a Markdown editor that can execute code blocks by sending them to a REPL (it uses Swift and AppKit so it's macOS only)\n<https:\/\/talk.objc.io\/episodes\/S01E145-setting-up-a-document-based-app>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Setting Up a Document Based App",
                "title_link": "https:\/\/talk.objc.io\/episodes\/S01E145-setting-up-a-document-based-app",
                "text": "We start building our Markdown Playgrounds app from a plain command-line app package, leveraging AppKit's document architecture.",
                "fallback": "Setting Up a Document Based App",
                "image_url": "https:\/\/i.vimeocdn.com\/video\/769411132_600x338.jpg",
                "from_url": "https:\/\/talk.objc.io\/episodes\/S01E145-setting-up-a-document-based-app",
                "image_width": 444,
                "image_height": 250,
                "image_bytes": 28174,
                "service_icon": "https:\/\/talk.objc.io\/favicon.ico",
                "service_name": "talk.objc.io",
                "id": 1,
                "original_url": "https:\/\/talk.objc.io\/episodes\/S01E145-setting-up-a-document-based-app"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xHRc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This tutorial series is illustrating how to build a Markdown editor that can execute code blocks by sending them to a REPL (it uses Swift and AppKit so it's macOS only)\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/talk.objc.io\/episodes\/S01E145-setting-up-a-document-based-app"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHAH7BM71",
        "type": "message",
        "ts": "1553921074.000900",
        "client_msg_id": "94c5a68c-0d58-4f10-982f-e32d2840fafa",
        "text": "Both easier for beginners and more efficient for experts - most structure editing stuff is targeted at the former but I think there's a lot of untapped potential for the latter.\nThe main difference between sketch n sketch and many other structure editors is that sns also supports ordinary text editing, so if there's any difficulty with the usability of structure edits you can always fall back on text editing. Personally I would rather fix usability issues than rely on a fallback, but sns is primarily a text editing system.\nAs for the selection, up and down arrow go spatially up and down, not to parent and child, which I think is more intuitive and easier to use but somewhat more heuristic. I'd like to see how this works for others - maybe I can do a user study sometime\n\nThanks for the feedback!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4b34e669c0b2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-25\/588589419367_4b34e669c0b23fad4ab0_72.jpg",
            "first_name": "Nick",
            "real_name": "Nick Collins",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nick.m.collins",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1553555298.438000",
        "parent_user_id": "UHAH7BM71",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9b\/d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Both easier for beginners and more efficient for experts - most structure editing stuff is targeted at the former but I think there's a lot of untapped potential for the latter.\nThe main difference between sketch n sketch and many other structure editors is that sns also supports ordinary text editing, so if there's any difficulty with the usability of structure edits you can always fall back on text editing. Personally I would rather fix usability issues than rely on a fallback, but sns is primarily a text editing system.\nAs for the selection, up and down arrow go spatially up and down, not to parent and child, which I think is more intuitive and easier to use but somewhat more heuristic. I'd like to see how this works for others - maybe I can do a user study sometime\n\nThanks for the feedback!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]