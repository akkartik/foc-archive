[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1669996658.311599",
        "client_msg_id": "5384c38a-d7ac-486d-9ebf-c408868b1afd",
        "text": "Andrew, you make good points about \"hard to make small details meaningful in proportion to their visual weight.\"  The trick with any good visualization is making important features of the domain pop in the diagram.  When you say \"[size] emphatically [does not matter] for anything close to math or logic,\" I can only assume you have in mind the fact that a small change to an expression \"like a logical negation\" has a big impact.  However, if the visualization *is* faithful to the effect on, say the shape of possible runs of a program, then a negation can cause part of that shape to change significantly.\n\nAs for non-aesthetic smoothing, well the simplest example I can think of is using a line of best fit as a summary for a bunch of datapoints.   In cases of strong correlation, you can mostly ignore underlying points.\n\nI've got a good musical example handy of the interplay of continuity, aesthetics, and emphasized dimensions.  Here <https:\/\/www.youtube.com\/watch?v=OMtjlaDEMdI> smalin diagrams a performance of the Art of Fugue, which has, more or less, one repeating structure subject, primarily using a fancy piano roll with horizontal for time, vertical for pitch, and color for voice.  Sometimes the subject is delimited using a sort of axis L.  Starting at 1:00:46, he tries something a little different.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1669931082.605639",
        "parent_user_id": "UC2A2ARPT",
        "attachments": [
            {
                "from_url": "https:\/\/www.youtube.com\/watch?v=OMtjlaDEMdI",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/OMtjlaDEMdI\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/OMtjlaDEMdI?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"Bach, Art of Fugue (Complete --- Netherlands Bach Society)\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=OMtjlaDEMdI",
                "fallback": "YouTube Video: Bach, Art of Fugue (Complete --- Netherlands Bach Society)",
                "title": "Bach, Art of Fugue (Complete --- Netherlands Bach Society)",
                "title_link": "https:\/\/www.youtube.com\/watch?v=OMtjlaDEMdI",
                "author_name": "smalin",
                "author_link": "https:\/\/www.youtube.com\/@smalin",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b6d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Andrew, you make good points about \"hard to make small details meaningful in proportion to their visual weight.\"  The trick with any good visualization is making important features of the domain pop in the diagram.  When you say \"[size] emphatically [does not matter] for anything close to math or logic,\" I can only assume you have in mind the fact that a small change to an expression \"like a logical negation\" has a big impact.  However, if the visualization "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " faithful to the effect on, say the shape of possible runs of a program, then a negation can cause part of that shape to change significantly.\n\nAs for non-aesthetic smoothing, well the simplest example I can think of is using a line of best fit as a summary for a bunch of datapoints.   In cases of strong correlation, you can mostly ignore underlying points.\n\nI've got a good musical example handy of the interplay of continuity, aesthetics, and emphasized dimensions.  Here "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=OMtjlaDEMdI"
                            },
                            {
                                "type": "text",
                                "text": " smalin diagrams a performance of the Art of Fugue, which has, more or less, one repeating structure subject, primarily using a fancy piano roll with horizontal for time, vertical for pitch, and color for voice.  Sometimes the subject is delimited using a sort of axis L.  Starting at 1:00:46, he tries something a little different."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02028JHX37",
        "type": "message",
        "ts": "1669997283.896329",
        "client_msg_id": "551ef2d2-2262-4b4b-84fb-040aae963570",
        "text": "<@UA14TGLTC> Re: continuous visualisations not being appropriate. I think what <@U016VUZGUUQ> meant was that a function from logical expressions into logical expressions (notably the substitution function) is not continuous (whatever it means, you'd have to provide a metric on logical expressions). Since programming as done today is performed basically only using substitution (everything can be modelled by untyped lambda calculus), there's no point in trying to make visualisations continuous. Therefore, it makes more sense to give the colours more of an \"algebraic\" meaning, which I think is what he describes in the mid-to-latter part.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdf13e3ce9df",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/df13e3ce9dfc39e2f387bd3d6e87b952.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jan Ruzicka",
            "display_name": "Jan Ruzicka",
            "team": "T5TCAFTA9",
            "name": "jan.ruzicka01",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1669931082.605639",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gtNd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " Re: continuous visualisations not being appropriate. I think what "
                            },
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " meant was that a function from logical expressions into logical expressions (notably the substitution function) is not continuous (whatever it means, you'd have to provide a metric on logical expressions). Since programming as done today is performed basically only using substitution (everything can be modelled by untyped lambda calculus), there's no point in trying to make visualisations continuous. Therefore, it makes more sense to give the colours more of an \"algebraic\" meaning, which I think is what he describes in the mid-to-latter part."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1669998832.049739",
        "client_msg_id": "51989369-1B24-4CF2-9176-4D0126A4E8BE",
        "text": "\"There's no point in trying to make visualizations continuous\"\n\nWhy not? Why limit oneself?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1669931082.605639",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DLjg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"There's no point in trying to make visualizations continuous\"\n\nWhy not? Why limit oneself?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "I came across this example today: <https:\/\/engineering.fb.com\/2022\/11\/30\/data-infrastructure\/static-analysis-sql-queries\/|https:\/\/engineering.fb.com\/2022\/11\/30\/data-infrastructure\/static-analysis-sql-queries\/>.\n\nTheir diagram shows the \"narrow waist\" they created for representing SQL queries.",
        "files": [
            {
                "id": "F04DFA37VUM",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U0245E9RB2B",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OI2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I came across this example today: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/engineering.fb.com\/2022\/11\/30\/data-infrastructure\/static-analysis-sql-queries\/",
                                "text": "https:\/\/engineering.fb.com\/2022\/11\/30\/data-infrastructure\/static-analysis-sql-queries\/"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nTheir diagram shows the \"narrow waist\" they created for representing SQL queries."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1670000543.411819",
        "client_msg_id": "69f77b44-3857-40f3-b2d8-a7db2188e5c6",
        "thread_ts": "1669374194.253989",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1670000865.741479",
        "client_msg_id": "1c0ffff3-e38e-43ba-8a34-e09dfbcb6133",
        "text": "ChatGPT <https:\/\/chat.openai.com\/chat> appears to be open general use.  In this thread <https:\/\/twitter.com\/tylerangert\/status\/1598389755997290507> someone gets ChatGPT to \"redesign git step by step.\"  I thought it would be fun to ask about how Procs in Ruby work.  I'll say more as a comment.  tl;dr ChatGPT gets them confused with blocks, which any person might do who has read about Ruby but hasn't programmed in it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1670000865.741479",
        "reply_count": 3,
        "reply_users_count": 1,
        "latest_reply": "1670002596.329259",
        "reply_users": [
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UA14TGLTC",
                "ts": "1670002079.841449"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1670002482.847789"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1670002596.329259"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eVo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ChatGPT "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/chat.openai.com\/chat"
                            },
                            {
                                "type": "text",
                                "text": " appears to be open general use.  In this thread "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/tylerangert\/status\/1598389755997290507"
                            },
                            {
                                "type": "text",
                                "text": " someone gets ChatGPT to \"redesign git step by step.\"  I thought it would be fun to ask about how Procs in Ruby work.  I'll say more as a comment.  tl;dr ChatGPT gets them confused with blocks, which any person might do who has read about Ruby but hasn't programmed in it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "In my ChatGPT conversation, I it to make a list of ways to invoke Procs in Ruby.  One item on the list was `yield(10, &amp;my_proc)`, which really doesn't work at all.  So I said, \"&amp;my_proc allows you to pass my_proc as the block to a method, but yield(10, &amp;my_proc) won't usually call my_proc.  Can you define a method called silly_yield so that silly_yield(10, &amp;my_proc) does do what think yield is doing?”  Here's the reply.",
        "files": [
            {
                "id": "F04DJD65EHY",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UA14TGLTC",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XZxKq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my ChatGPT conversation, I it to make a list of ways to invoke Procs in Ruby.  One item on the list was "
                            },
                            {
                                "type": "text",
                                "text": "yield(10, &my_proc)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which really doesn't work at all.  So I said, \"&my_proc allows you to pass my_proc as the block to a method, but yield(10, &my_proc) won't usually call my_proc.  Can you define a method called silly_yield so that silly_yield(10, &my_proc) does do what think yield is doing?”  Here's the reply."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1670002079.841449",
        "client_msg_id": "9a361436-7e35-4bb6-a04c-c5b7f4b21b26",
        "thread_ts": "1670000865.741479",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "user": "U02028JHX37",
        "type": "message",
        "ts": "1670002403.827139",
        "client_msg_id": "e2e69115-e05c-4ae9-a533-905a8766b25b",
        "text": "I meant: \"Trying to make the function (which visualises program features) continuous.\" (In the mathematical sense; the function is taken to be from expressions and expression transformations to a 2D space with smooth colours)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdf13e3ce9df",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/df13e3ce9dfc39e2f387bd3d6e87b952.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jan Ruzicka",
            "display_name": "Jan Ruzicka",
            "team": "T5TCAFTA9",
            "name": "jan.ruzicka01",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1669931082.605639",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UpGk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I meant: \"Trying to make the function (which visualises program features) continuous.\" (In the mathematical sense; the function is taken to be from expressions and expression transformations to a 2D space with smooth colours)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Though the list didn't include all the other ways you can invoke a Proc, it did think of one that didn't immediately come to mind, `my_proc === 10`.  I asked vaguely why `===` is defined on Proc, how would you use it?  And eventually wrapped up with an example before, it seems, ChatGPT decided I had used too much of its CPU.",
        "files": [
            {
                "id": "F04DJE7G5DY",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UA14TGLTC",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/ftu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Though the list didn't include all the other ways you can invoke a Proc, it did think of one that didn't immediately come to mind, "
                            },
                            {
                                "type": "text",
                                "text": "my_proc === 10",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".  I asked vaguely why "
                            },
                            {
                                "type": "text",
                                "text": "===",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is defined on Proc, how would you use it?  And eventually wrapped up with an example before, it seems, ChatGPT decided I had used too much of its CPU."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1670002482.847789",
        "client_msg_id": "18caad3a-7cf5-4f79-9ce1-5639cab2658b",
        "thread_ts": "1670000865.741479",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1670002596.329259",
        "client_msg_id": "71a47ade-ab30-46a9-b949-66fb2aae88a1",
        "text": "My next message would have been, \"That's a nice example.  Did you know you can write `proc(&amp;:odd?)` instead?  Let's see the example using that shorter syntax instead.\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1670000865.741479",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wrp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My next message would have been, \"That's a nice example.  Did you know you can write "
                            },
                            {
                                "type": "text",
                                "text": "proc(&:odd?)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " instead?  Let's see the example using that shorter syntax instead.\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1670004669.573569",
        "client_msg_id": "007b7c30-6b97-492c-b720-120179282a42",
        "text": "<https:\/\/www.youtube.com\/watch?v=eDmxAWYPh4g|I'm making a Musical Sandbox game - Mix Universe Update 3 - Randomization, Multi-Edit, and more!>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "from_url": "https:\/\/www.youtube.com\/watch?v=eDmxAWYPh4g",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/eDmxAWYPh4g\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/eDmxAWYPh4g?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"I&#39;m making a Musical Sandbox game - Mix Universe Update 3 - Randomization, Multi-Edit, and more!\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=eDmxAWYPh4g",
                "fallback": "YouTube Video: I'm making a Musical Sandbox game - Mix Universe Update 3 - Randomization, Multi-Edit, and more!",
                "title": "I'm making a Musical Sandbox game - Mix Universe Update 3 - Randomization, Multi-Edit, and more!",
                "title_link": "https:\/\/www.youtube.com\/watch?v=eDmxAWYPh4g",
                "author_name": "chriszuko",
                "author_link": "https:\/\/www.youtube.com\/@chriszuko",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jjd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=eDmxAWYPh4g",
                                "text": "I'm making a Musical Sandbox game - Mix Universe Update 3 - Randomization, Multi-Edit, and more!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT",
                    "UQZ0SRA7N"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1670010481.678339",
        "client_msg_id": "ff1aeaa9-6f58-48a0-b1f3-10d3cd4d2c8d",
        "text": "To be clear, even if it does turn out that visualizations similar those above don't work out, we should still try to come up with counter examples. :)\n\nAnother approach: what kinds of useful information exists about structured data that can be expressed in such a detailed, real-number-oriented way?\n\nStatistical summary is an interesting angle for structured data, like <@UA14TGLTC> mentioned with regression. Summary, being inherently lossy but still useful, seems like a good way to get useful fuzzy data from structured data. Like if the representation of a database table gave you a pretty good idea of the distributions of its columns. Can you have a good graphical representation of the row that just stacks in the z-axis (with transparency) to get a passable summary? Can something like that work for less regular structures? (Of course this kind of merges with showing summarized runtime results if it goes far enough.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1669931082.605639",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qXn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To be clear, even if it does turn out that visualizations similar those above don't work out, we should still try to come up with counter examples. :)\n\nAnother approach: what kinds of useful information exists about structured data that can be expressed in such a detailed, real-number-oriented way?\n\nStatistical summary is an interesting angle for structured data, like "
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " mentioned with regression. Summary, being inherently lossy but still useful, seems like a good way to get useful fuzzy data from structured data. Like if the representation of a database table gave you a pretty good idea of the distributions of its columns. Can you have a good graphical representation of the row that just stacks in the z-axis (with transparency) to get a passable summary? Can something like that work for less regular structures? (Of course this kind of merges with showing summarized runtime results if it goes far enough.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1670020635.437219",
        "client_msg_id": "d6e39eb5-dd9d-49e0-9861-7ca4db30e4bd",
        "text": "Question: What do you see this syntax being compiled-to for a digital computer?\nOrthogonal brainstorming: Then, there’s the forgotten form of computing called Analogue Computing.  I wonder if this syntax has application to analogue computing?  If so, what operations does this syntax represent?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1669931082.605639",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h4Rd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Question: What do you see this syntax being compiled-to for a digital computer?\nOrthogonal brainstorming: Then, there’s the forgotten form of computing called Analogue Computing.  I wonder if this syntax has application to analogue computing?  If so, what operations does this syntax represent?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1670043253.013499",
        "client_msg_id": "4cd6fd1f-c802-427d-bd2f-17a2f4aa661d",
        "text": "Some fun picotron stuff shared semi-recently.  Specifically a lot of it is related to user apps being able to modify and customize system settings.  Might be of interest to <@UCUSW7WVD>\n<https:\/\/twitter.com\/lexaloffle\/status\/1598103326885056513>\n<https:\/\/twitter.com\/lexaloffle\/status\/1596076931899805697>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "from_url": "https:\/\/twitter.com\/lexaloffle\/status\/1598103326885056513",
                "ts": 1669852499,
                "thumb_url": "https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1598102882170990592\/pu\/img\/eOIJh-kf41A2HrIk.jpg",
                "thumb_width": 960,
                "thumb_height": 544,
                "video_html": "<video controls poster=\"https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1598102882170990592\/pu\/img\/eOIJh-kf41A2HrIk.jpg\" width=\"960\" height=\"544\"><source type=\"video\/mp4\" src=\"https:\/\/video.twimg.com\/ext_tw_video\/1598102882170990592\/pu\/vid\/960x544\/oX_d8z-ymksn43FW.mp4?tag=12\"><\/video>",
                "video_html_width": 960,
                "video_html_height": 544,
                "id": 1,
                "original_url": "https:\/\/twitter.com\/lexaloffle\/status\/1598103326885056513",
                "fallback": "<https:\/\/twitter.com\/lexaloffle|@lexaloffle>: Who needs desktop themes when you can just randomly poke palette values into ram until you find one that you like. #picotron",
                "text": "Who needs desktop themes when you can just randomly poke palette values into ram until you find one that you like. #picotron",
                "author_name": "zep.p8 🦣",
                "author_link": "https:\/\/twitter.com\/lexaloffle\/status\/1598103326885056513",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1156141790841331712\/lTwVHU0Z_normal.jpg",
                "author_subname": "@lexaloffle",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            },
            {
                "from_url": "https:\/\/twitter.com\/lexaloffle\/status\/1596076931899805697",
                "ts": 1669369368,
                "thumb_url": "https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1596076698197381121\/pu\/img\/LiusBnqsVeJgWW-P.jpg",
                "thumb_width": 960,
                "thumb_height": 544,
                "video_html": "<video controls poster=\"https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1596076698197381121\/pu\/img\/LiusBnqsVeJgWW-P.jpg\" width=\"960\" height=\"544\"><source type=\"video\/mp4\" src=\"https:\/\/video.twimg.com\/ext_tw_video\/1596076698197381121\/pu\/vid\/960x544\/xb5eYvDMUwI9bMEv.mp4?tag=12\"><\/video>",
                "video_html_width": 960,
                "video_html_height": 544,
                "id": 2,
                "original_url": "https:\/\/twitter.com\/lexaloffle\/status\/1596076931899805697",
                "fallback": "<https:\/\/twitter.com\/lexaloffle|@lexaloffle>: #picotron programs do not need to cooperate with the system palette if they don't want to. Look at this beautiful mess.",
                "text": "#picotron programs do not need to cooperate with the system palette if they don't want to. Look at this beautiful mess.",
                "author_name": "zep.p8 🦣",
                "author_link": "https:\/\/twitter.com\/lexaloffle\/status\/1596076931899805697",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1156141790841331712\/lTwVHU0Z_normal.jpg",
                "author_subname": "@lexaloffle",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7BaCs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some fun picotron stuff shared semi-recently.  Specifically a lot of it is related to user apps being able to modify and customize system settings.  Might be of interest to "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/lexaloffle\/status\/1598103326885056513"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/lexaloffle\/status\/1596076931899805697"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1670051443.571569",
        "client_msg_id": "ACE7EEC6-E027-4D27-A22F-69D0E91B7BA1",
        "text": "Yes!  Analog computing where the essential feature is that features of the mechanism match the domain.  <https:\/\/youtu.be\/GVsUOuSjvcg|https:\/\/youtu.be\/GVsUOuSjvcg>\n\nRather than connections being symbolic and arbitrary, they have to be intrinsic and, well, analogous.  So I don’t think the essence of analog is the quality of being contiguous rather than discrete.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1669931082.605639",
        "parent_user_id": "UC2A2ARPT",
        "attachments": [
            {
                "from_url": "https:\/\/youtu.be\/GVsUOuSjvcg",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/GVsUOuSjvcg\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/GVsUOuSjvcg?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"Future Computers Will Be Radically Different (Analog Computing)\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/GVsUOuSjvcg",
                "fallback": "YouTube Video: Future Computers Will Be Radically Different (Analog Computing)",
                "title": "Future Computers Will Be Radically Different (Analog Computing)",
                "title_link": "https:\/\/youtu.be\/GVsUOuSjvcg",
                "author_name": "Veritasium",
                "author_link": "https:\/\/www.youtube.com\/@veritasium",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZTbpq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes!  Analog computing where the essential feature is that features of the mechanism match the domain.  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/GVsUOuSjvcg",
                                "text": "https:\/\/youtu.be\/GVsUOuSjvcg"
                            },
                            {
                                "type": "text",
                                "text": "\n\nRather than connections being symbolic and arbitrary, they have to be intrinsic and, well"
                            },
                            {
                                "type": "text",
                                "text": ","
                            },
                            {
                                "type": "text",
                                "text": " analogous"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": "  So I don’t think the essence of analog is the quality of being contiguous rather than discrete"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    }
]