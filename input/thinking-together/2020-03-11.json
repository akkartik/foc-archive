[
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1583917725.233600",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1583917735.000000"
        },
        "client_msg_id": "3aeef8c0-d60d-4989-b327-e1404c3251de",
        "text": "\"Once upon a time there was a goodie and a baddie. The goodie won and they all lived happily ever after\".\nDead giveaway IMO.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583886143.232100",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "faT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Once upon a time there was a goodie and a baddie. The goodie won and they all lived happily ever after\".\nDead giveaway IMO."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1583923133.234000",
        "client_msg_id": "296ddf2d-543c-4d64-a831-b69df0141343",
        "text": "<https:\/\/medium.com\/feenk\/code-comments-as-live-wikis-in-ides-1c7b593749f5>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "Medium",
                "title": "Code comments as live wikis in IDEs",
                "title_link": "https:\/\/medium.com\/feenk\/code-comments-as-live-wikis-in-ides-1c7b593749f5",
                "text": "Utilizing interactive notebooks to document code through examples and custom views.",
                "fallback": "Medium: Code comments as live wikis in IDEs",
                "image_url": "https:\/\/miro.medium.com\/max\/1200\/1*0cZiDOjHEkvuH1T6udxAoQ.png",
                "fields": [
                    {
                        "title": "Reading time",
                        "value": "7 min read",
                        "short": true
                    }
                ],
                "ts": 1583920649,
                "from_url": "https:\/\/medium.com\/feenk\/code-comments-as-live-wikis-in-ides-1c7b593749f5",
                "image_width": 517,
                "image_height": 250,
                "image_bytes": 287849,
                "service_icon": "https:\/\/cdn-images-1.medium.com\/fit\/c\/152\/152\/1*8I-HPL0bfoIzGied-dzOvA.png",
                "id": 1,
                "original_url": "https:\/\/medium.com\/feenk\/code-comments-as-live-wikis-in-ides-1c7b593749f5"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kRe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/medium.com\/feenk\/code-comments-as-live-wikis-in-ides-1c7b593749f5"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK",
                    "U8A5MS6R1",
                    "UU45NNMHT",
                    "UEQ7QL15F"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1583937464.236500",
        "client_msg_id": "F4000180-8FCB-4B8B-8C34-D2ED00FDC52B",
        "text": "What exactly is the issue with the story in the paper? I don’t get it.\nIt’s not exactly “hidden” that the story is made up and just for the purpose of illustration, as it is introduced with the words:\n\n&gt; Let me introduce the topic of evolution with a parable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583886143.232100",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MzVss",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What exactly is the issue with the story in the paper? I don’t get it.\n"
                            },
                            {
                                "type": "text",
                                "text": "It’s not exactly “hidden” that the story is made up and just for the purpose of illustration, as it is introduced with the words:\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Let me introduce the topic of evolution with a parable."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFQQ3P867",
        "type": "message",
        "ts": "1583941031.237500",
        "client_msg_id": "2bbbeab7-2831-4703-9b10-08acd7f43e38",
        "text": "I'm less interested in the plugin development apis, more in the replication of a chrome devtools like thing in full",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "75bc4f5fbeed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-20\/882734188373_75bc4f5fbeedc5a2213e_72.jpg",
            "first_name": "",
            "real_name": "Max Krieger",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "photos482",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583874673.227000",
        "parent_user_id": "UFQQ3P867",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JJdmF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm less interested in the plugin development apis, more in the replication of a chrome devtools like thing in full"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1583959649.238200",
        "client_msg_id": "ec0dfc30-b547-4562-929c-e3886a033749",
        "text": "<https:\/\/chartio.com\/blog\/why-we-made-sql-visual-and-how-we-finally-did-it\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583959649.238200",
        "reply_count": 12,
        "reply_users_count": 4,
        "latest_reply": "1584038059.250600",
        "reply_users": [
            "UC2A2ARPT",
            "UBN9AFS0N",
            "UAJKEBGP8",
            "UGLSY9X3J"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1583960321.238300"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1583960528.238500"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1583960576.238700"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1583960642.238900"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1583960825.239200"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1583960867.239500"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1583961826.239700"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1583961869.239900"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1583961978.240100"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1583962250.240300"
            },
            {
                "user": "UGLSY9X3J",
                "ts": "1583967066.241200"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1584038059.250600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/m4=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/chartio.com\/blog\/why-we-made-sql-visual-and-how-we-finally-did-it\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1583960321.238300",
        "client_msg_id": "c6183b30-c3c7-46b1-a9f6-81a189439fce",
        "text": "I could have sworn I've seen this before.\n\nMariano, I'm curious to hear what you think of this, given you're working on a vaguely similar thing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583959649.238200",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jkt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I could have sworn I've seen this before.\n\nMariano, I'm curious to hear what you think of this, given you're working on a vaguely similar thing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1583960528.238500",
        "client_msg_id": "c7ef801b-a632-4df1-90fa-bca5ec6c8fae",
        "text": "The UI for building queries looks pretty nice to me.\n\nI'd love to see something like this integrated with <https:\/\/charticulator.com>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583959649.238200",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bcm+1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The UI for building queries looks pretty nice to me.\n\nI'd love to see something like this integrated with "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/charticulator.com"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1583960576.238700",
        "client_msg_id": "7231f25c-fad9-45df-b52c-c7f2330dca07",
        "text": "it surprises me for sql that it tool so long, being a declarative language, pretty limited amount of syntax composition and how well defined the data on it is, still it's a good sign that people are going over the last 15 years of reinventing the olap cube ui",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583959649.238200",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "esQE2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it surprises me for sql that it tool so long, being a declarative language, pretty limited amount of syntax composition and how well defined the data on it is, still it's a good sign that people are going over the last 15 years of reinventing the olap cube ui"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1583960642.238900",
        "client_msg_id": "b2f2bf75-4401-4af3-ad96-7541e78b592c",
        "text": "you may have seen ultorg <https:\/\/vimeo.com\/372006027>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583959649.238200",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "service_name": "Vimeo",
                "service_url": "https:\/\/vimeo.com\/",
                "title": "Ultorg: A User Interface for Relational Databases",
                "title_link": "https:\/\/vimeo.com\/372006027",
                "author_name": "Eirik Bakke",
                "author_link": "https:\/\/vimeo.com\/eirikbakke",
                "thumb_url": "https:\/\/i.vimeocdn.com\/video\/829699676_295x166.jpg",
                "thumb_width": 295,
                "thumb_height": 166,
                "text": "Ultorg is a new tool for interactive data and query visualization, originally based on a PhD project at MIT CSAIL, and now funded by the National Science Foundation. Using a small set of spreadsheet-like operations, the user can construct the visual equivalent of any SQL-92 query, simultaneously visualizing both the query and the data that results from it, as well as the join relationships in the underlying database. Query results are automatically laid out using nested table, form, or crosstab visualizations.",
                "fallback": "Vimeo Video: Ultorg: A User Interface for Relational Databases",
                "video_html": "<iframe src=\"https:\/\/player.vimeo.com\/video\/372006027?autoplay=1&amp;app_id=122963\" width=\"400\" height=\"250\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen title=\"Ultorg: A User Interface for Relational Databases\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 250,
                "from_url": "https:\/\/vimeo.com\/372006027",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/vimeo.png",
                "id": 1,
                "original_url": "https:\/\/vimeo.com\/372006027"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7llL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you may have seen ultorg "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/vimeo.com\/372006027"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1583960825.239200",
        "client_msg_id": "c9acf86d-24d3-4fff-8084-4a7e2d6dbee6",
        "text": "the ui of metabase is really cool too: <https:\/\/www.metabase.com\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583959649.238200",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "title": "Metabase",
                "title_link": "https:\/\/www.metabase.com\/",
                "text": "The fastest, easiest way to share data and analytics inside your company. An open source Business Intelligence server you can install in 5 minutes that connects to MySQL, PostgreSQL, MongoDB and more! Anyone can use it to build charts, dashboards and nightly email reports.",
                "fallback": "Metabase",
                "from_url": "https:\/\/www.metabase.com\/",
                "service_name": "metabase.com",
                "id": 1,
                "original_url": "https:\/\/www.metabase.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6O0R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the ui of metabase is really cool too: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.metabase.com\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1583960867.239500",
        "client_msg_id": "8c00b393-639a-4845-8efd-bb9142560475",
        "text": "the problem when you are so sql centric is that everything has to fit that model, which is ok, but many things don't, so you push the coplexity to the ETL process of getting the data to an sql database so you can do the easy part",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583959649.238200",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s54",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the problem when you are so sql centric is that everything has to fit that model, which is ok, but many things don't, so you push the coplexity to the ETL process of getting the data to an sql database so you can do the easy part"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1583961826.239700",
        "client_msg_id": "1c885c34-6d55-4a95-bddd-ce7d2030deec",
        "text": "oh man, I’ve dreamed of a visual SQL tool for many years now. Chartio used to have one but it wasn’t that great (this looks like a revamped one)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583959649.238200",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U5SQX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh man, I’ve dreamed of a visual SQL tool for many years now. Chartio used to have one but it wasn’t that great (this looks like a revamped one)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1583961869.239900",
        "client_msg_id": "bb77db8e-47bc-421e-a488-091f9d82405b",
        "text": "part of the challenge I still see with this approach laid on this blog post is it doesn’t focus enough on the actual workflow of SQL users (I’ve been a daily SQL user for 4+ years)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583959649.238200",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UO2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "part of the challenge I still see with this approach laid on this blog post is it doesn’t focus enough on the actual workflow of SQL users (I’ve been a daily SQL user for 4+ years)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1583961978.240100",
        "client_msg_id": "7293038d-345f-4955-9952-891b41e8dfe2",
        "text": "this seems to focus on making the act of writing SQL code more visual, with drag &amp; drop but the process doesn’t tap into and complement the visual model a SQL user actually has",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583959649.238200",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=581",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this seems to focus on making the act of writing SQL code more visual, with drag & drop but the process doesn’t tap into and complement the visual model a SQL user actually has"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1583962250.240300",
        "client_msg_id": "1ad6f210-4eaa-4ee1-8efc-32484ca10647",
        "text": "when I (and my team members) are writing SQL queries, we usually:\n\n• Start with a vague idea of what we need to query and do some select *’s + reading column names to identify relevant tables &amp; columns. _Pain point: I can’t quickly visualize the “table-space” of the database. Imagine a bunch of linked spreadsheets in a spatially oriented way to highlight the relationships between tables._\n• Start building up the query, run, iterate, add some joins. _Pain point: no SQL tool encourages prototyping and iteration in a more data-oriented way. They all make you throw away the query you wrote and ran and the results table every time_\n• At this point, I usually understand the “final form” of my query. What I want the table of results to actually look like, and then I have to work backwards and figure out the intermediate joins to get there. _Pain Point: I do this on pencil &amp; paper or in a vector drawing tool, but ideally this is somewhat augmented by the latent knowledge in the database tables._\n• Finally, I iterate on my long-ass SQL query until it feels right. _Pain point: iteration is kinda painful, both the speed but also the fact that results are thrown away each time you run a query. Its hard to feel a sense of partial progress_.\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583959649.238200",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oVi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "when I (and my team members) are writing SQL queries, we usually:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Start with a vague idea of what we need to query and do some select *’s + reading column names to identify relevant tables & columns. "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Pain point: I can’t quickly visualize the “table-space” of the database. Imagine a bunch of linked spreadsheets in a spatially oriented way to highlight the relationships between tables.",
                                        "style": {
                                            "italic": true
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Start building up the query, run, iterate, add some joins. "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Pain point: no SQL tool encourages prototyping and iteration in a more data-oriented way. They all make you throw away the query you wrote and ran and the results table every time",
                                        "style": {
                                            "italic": true
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "At this point, I usually understand the “final form” of my query. What I want the table of results to actually look like, and then I have to work backwards and figure out the intermediate joins to get there. "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Pain Point: I do this on pencil & paper or in a vector drawing tool, but ideally this is somewhat augmented by the latent knowledge in the database tables.",
                                        "style": {
                                            "italic": true
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Finally, I iterate on my long-ass SQL query until it feels right. "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Pain point: iteration is kinda painful, both the speed but also the fact that results are thrown away each time you run a query. Its hard to feel a sense of partial progress",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "+1::skin-tone-4",
                "users": [
                    "UBN9AFS0N"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGLSY9X3J",
        "type": "message",
        "ts": "1583967066.241200",
        "client_msg_id": "3BC169CB-E18D-4021-BE99-865FADC90148",
        "text": "Oh boy this top comment nails it - <https:\/\/news.ycombinator.com\/item?id=22550217|https:\/\/news.ycombinator.com\/item?id=22550217>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g03ebdf13bbe",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e03ebdf13bbeacace66454bea388b927.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Srini Kadamati",
            "display_name": "srini",
            "team": "T5TCAFTA9",
            "name": "srini",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583959649.238200",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "u7k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh boy this top comment nails it - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22550217",
                                "text": "https:\/\/news.ycombinator.com\/item?id=22550217"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1583981220.241500",
        "client_msg_id": "d915f6b6-5512-453a-8e71-533acbd7ce8d",
        "text": "At no point in the software construction process is your source code dropped and scrambled. Even in punchcard days there was a way to punch sequence numbers in the rightmost columns of the card so you can run them through a sorter. Isn't all software built more or less incrementally?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583886143.232100",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m+Uop",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At no point in the software construction process is your source code dropped and scrambled. Even in punchcard days there was a way to punch sequence numbers in the rightmost columns of the card so you can run them through a sorter. Isn't all software built more or less incrementally?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1583985404.241700",
        "client_msg_id": "4f45d098-c93e-47d3-a597-9cd20888d38b",
        "text": "Here's how I took it:\n\nI've worked on some projects where a great effort was spent up front to decompose the project into small pieces. As the months passed, whenever I got temporarily pulled off project to attend to other matters I found it easy to come back, since there was only a small amount of context that I needed to get back up to speed on. My SaaS business, for example — it's something I've worked at for about 6 years now, off and on, and right from the start I found it fairly easy to put aside and return to.\n\nOn the other hand — my current project, Hest, is completely fucked. It's proving insanely difficult for me to break down into small pieces, no matter how hard I try, because [bogus excuses \/ ugh \/ long story]. Since there are so many things about it that interact in so many subtle ways, whenever I get pulled away from it for a week, or even a few days, (which happens frequently) I'm basically starting over again when I come back to it. It absolutely feels like trying to build a 1000 piece clock all in one go. I've resorted to blocking out large chunks of my schedule, telling coworkers I'll be unavailable for a week or two or four, planning social engagements around it, so that I can load all the context into my head and take a few steps forward before something pulls me away again.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583886143.232100",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jad",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's how I took it:\n\nI've worked on some projects where a great effort was spent up front to decompose the project into small pieces. As the months passed, whenever I got temporarily pulled off project to attend to other matters I found it easy to come back, since there was only a small amount of context that I needed to get back up to speed on. My SaaS business, for example — it's something I've worked at for about 6 years now, off and on, and right from the start I found it fairly easy to put aside and return to.\n\nOn the other hand — my current project, Hest, is completely fucked. It's proving insanely difficult for me to break down into small pieces, no matter how hard I try, because [bogus excuses \/ ugh \/ long story]. Since there are so many things about it that interact in so many subtle ways, whenever I get pulled away from it for a week, or even a few days, (which happens frequently) I'm basically starting over again when I come back to it. It absolutely feels like trying to build a 1000 piece clock all in one go. I've resorted to blocking out large chunks of my schedule, telling coworkers I'll be unavailable for a week or two or four, planning social engagements around it, so that I can load all the context into my head and take a few steps forward before something pulls me away again."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1583991341.242100",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1583991516.000000"
        },
        "client_msg_id": "2998dc8c-3e5b-45e6-bda0-48d8154fbfc5",
        "text": "Some projects have tightly woven interdepencies between components. Computer games are a perfect example of a very tightly bound ball of code. This is why game programmers are among the best programmers of all; the complexity that they deal with is very high. Large creative products like InDesign and Photoshop are other examples of super hard product. I would bet that to duplicate Photoshop it would take 1000 man years of work. You see a lot of products cherry-picking the functionality of Adobe's CS products, but they are usually small subsets.\n\nHest is indeed one of these tightly wound balls of code, because fundamentally you are going forward and backwards in time, and moving from values as they mutate and flow through the code, and you are adding flow lines which are potential paths, so now you have routing issues that grow non-linearly.  The animations have to stay synchronized, and not overlap too much else it becomes a big animated mess.  I would suggest that you first design it for a giant monitor (at least 3k across) where space constraints don't enter into your considerations, and then after it is working okay then figure out how to squish. When you are trying to map everything at once onto the same diagram it does create interesting problems for control; it gets hard to pin down what you are clicking on when things overlap. You will likely either have to have toggling layers (like google earth), or i think small multiples running in parallel would be very clever. In other words, 3 different running copies of the same thing; with different data presented on each simultaneously. You are trying to make a visual computer here, showing results of the code not merely internal state.\n\nOne of the problems with Electron and other existing tools is that they don't automatically update the screen based on model changes, and your code has to handle all the implications, and since you are moving in different directions depending on whether it is running, or you are directing it in some way via user input, it creates a lot of very nasty micro-predicates that are sprinkled throughout your program. This is one area where Beads offer some help, because it is smart enough to repaint whatever needs to be repainted, because it tracks in the runtime the dependency of a screen object; if an underlying value that was used to draw changes its value, it reschedules the redraw of that object. If you are using WebGL and redrawing on each frame, this has no value, but in a DOM-based system the less you repaint the better, and when you have 500 screen objects that interact with each other, manually calculating proper rebuild is a big mess.\n\nThere is a big effort in some languages to defer calculations (lazy evaluation); however that can create very tricky problems in terms of understanding the code, as you are no longer sure when a piece of code is running, which is hardly helpful to comprehension.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583886143.232100",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BaHbc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some projects have tightly woven interdepencies between components. Computer games are a perfect example of a very tightly bound ball of code. This is why game programmers are among the best programmers of all; the complexity that they deal with is very high. Large creative products like InDesign and Photoshop are other examples of super hard product. I would bet that to duplicate Photoshop it would take 1000 man years of work. You see a lot of products cherry-picking the functionality of Adobe's CS products, but they are usually small subsets.\n\nHest is indeed one of these tightly wound balls of code, because fundamentally you are going forward and backwards in time, and moving from values as they mutate and flow through the code, and you are adding flow lines which are potential paths, so now you have routing issues that grow non-linearly.  The animations have to stay synchronized, and not overlap too much else it becomes a big animated mess.  I would suggest that you first design it for a giant monitor (at least 3k across) where space constraints don't enter into your considerations, and then after it is working okay then figure out how to squish. When you are trying to map everything at once onto the same diagram it does create interesting problems for control; it gets hard to pin down what you are clicking on when things overlap. You will likely either have to have toggling layers (like google earth), or i think small multiples running in parallel would be very clever. In other words, 3 different running copies of the same thing; with different data presented on each simultaneously. You are trying to make a visual computer here, showing results of the code not merely internal state.\n\nOne of the problems with Electron and other existing tools is that they don't automatically update the screen based on model changes, and your code has to handle all the implications, and since you are moving in different directions depending on whether it is running, or you are directing it in some way via user input, it creates a lot of very nasty micro-predicates that are sprinkled throughout your program. This is one area where Beads offer some help, because it is smart enough to repaint whatever needs to be repainted, because it tracks in the runtime the dependency of a screen object; if an underlying value that was used to draw changes its value, it reschedules the redraw of that object. If you are using WebGL and redrawing on each frame, this has no value, but in a DOM-based system the less you repaint the better, and when you have 500 screen objects that interact with each other, manually calculating proper rebuild is a big mess.\n\nThere is a big effort in some languages to defer calculations (lazy evaluation); however that can create very tricky problems in terms of understanding the code, as you are no longer sure when a piece of code is running, which is hardly helpful to comprehension."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]