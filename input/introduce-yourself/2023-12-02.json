[
    {
        "user": "U068EDCDKE0",
        "type": "message",
        "ts": "1701523925.192779",
        "client_msg_id": "a3647488-75ee-4ac7-909a-049643dcaad8",
        "text": "Hi all! My name is Boris Terzic, I'm a programmer originally from Belgium, now working and living in Germany. I discovered Future of Coding through the podcast (my new favorite) and after listening to a bunch of episodes got increasingly curious about what's going on here.\n\nBy day I am the head of development of a smaller Germany software company building a web based GIS and BI application.\n\nIn my free time I am very interested in offline-first datastructures and models like CRDTs and in general building web-native sites and applications. Deep down I think I may also want to be a graphics programmer, but I have almost no experience with it aside from some demo scene noodling when I was younger.\n\nHappy to be here and looking forward to read and share interesting thoughts!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5fcecc0c487",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5fcecc0c487aacd484a51351f2a8d595.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Boris",
            "real_name": "Boris Terzic",
            "display_name": "Boris Terzic",
            "team": "T5TCAFTA9",
            "name": "boris",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1701523925.192779",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1701630129.930379",
        "reply_users": [
            "U05UBCXHWM6",
            "U068EDCDKE0"
        ],
        "replies": [
            {
                "user": "U05UBCXHWM6",
                "ts": "1701565563.236259"
            },
            {
                "user": "U068EDCDKE0",
                "ts": "1701627149.398469"
            },
            {
                "user": "U05UBCXHWM6",
                "ts": "1701630129.930379"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rWDIO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi all! My name is Boris Terzic, I'm a programmer originally from Belgium, now working and living in Germany. I discovered Future of Coding through the podcast (my new favorite) and after listening to a bunch of episodes got increasingly curious about what's going on here.\n\nBy day I am the head of development of a smaller Germany software company building a web based GIS and BI application.\n\nIn my free time I am very interested in offline-first datastructures and models like CRDTs and in general building web-native sites and applications. Deep down I think I may also want to be a graphics programmer, but I have almost no experience with it aside from some demo scene noodling when I was younger.\n\nHappy to be here and looking forward to read and share interesting thoughts!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "UK3LH8CF5",
                    "U013ZLJARC7",
                    "U0123H7JRDM",
                    "USH01JEDQ",
                    "UJBAJNFLK",
                    "U85HCL7JP",
                    "UC2A2ARPT",
                    "U067RCH8NB0",
                    "UMV4B97GT",
                    "U0625T25APL",
                    "U05UBCXHWM6",
                    "U04QB9V2RNG",
                    "U065FUJ6TQW",
                    "U050XKVAGKF",
                    "UA14TGLTC"
                ],
                "count": 15
            },
            {
                "name": "wave::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U067XHT91HV",
        "type": "message",
        "ts": "1701531138.546459",
        "client_msg_id": "a3b768f2-dd82-4038-a500-67dc02ee7824",
        "text": "<https:\/\/skreutzer.de\/about.php>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "488abf9ee399",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-02\/6284140728162_488abf9ee399f7e43d8b_72.png",
            "first_name": "Stephan",
            "real_name": "Stephan Kreutzer",
            "display_name": "skreutzer",
            "team": "T5TCAFTA9",
            "name": "stephankreutzer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c3G90",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/skreutzer.de\/about.php"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "USH01JEDQ",
                    "UJBAJNFLK",
                    "U85HCL7JP",
                    "UC2A2ARPT",
                    "U067RCH8NB0",
                    "U0625T25APL",
                    "U05UBCXHWM6",
                    "U04QB9V2RNG",
                    "U050XKVAGKF",
                    "UA14TGLTC"
                ],
                "count": 10
            },
            {
                "name": "wave::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02QC0PPER3",
        "type": "message",
        "ts": "1701536008.171739",
        "client_msg_id": "540d3b07-1df8-4f18-890b-c761f9797397",
        "text": "Trying to think of particular things to recommend to someone studying CS now...  Random ones that come to _my_ mind:\n• If you take the wider perspective of \"how computing shapes the world and how we're free to [re-]shape computing\", it's interesting to pay attention which aspects of this your CS studies cover vs. which are out-of-scope or not even mentioned. :eyes:\n• Bret's <http:\/\/worrydream.com\/dbx\/> lecture (which also inspired the name for this community) humorously highlights how many past avenues of research have fallen outside the mainstream.  We do like \"mining the past\" for good stuff :slightly_smiling_face:\n• If you enjoy the academic format of CS, google \"papers we love\" for some of the best...\n• \"Softer\", more human-centric CS certainly exists, and <https:\/\/jackrusher.com\/classic-ux\/> curates great videos from one of the great conferences.\n• <https:\/\/liveprog.org\/all-programs.html> — another very FoC conference.\n• <https:\/\/www.inkandswitch.com\/> do legendary research — and write it up _very_ accessibly.\n• <https:\/\/futureofcoding.org\/episodes\/065> (and the article it covers) was one of most thought-provoking episodes in pointing out a deep user-facing challenge with most computing nowdays.\n• The \"<https:\/\/gtoolkit.com\/docs\/moldable\/|Moldable development>\" idea attacks another deep, developer-facing challenge: One should be able to make ad-hoc tools for every development problem\/decision they want, _rapidly_.  That sounds almost crazy, but they have very impressive achievements to show for it.  And even if their Smalltalk-super-powered environment is not for you (I haven't tried it yet either), it's an idea that's good to \"get infected with\" early on.  Your challenge, should you accept it: Ask yourself, which of the skills\/tools you learn are sufficiently \"moldable\", and if not, seek out ones that are.\nFinally, pay attention to what Bret said at the end of \"Inventing on Principle\": he showed _his_ guiding principle, but the meta-point was you can find _your_ principles to care for.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "90c9108c61f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-12\/2854686602576_90c9108c61f5d809eb8a_72.jpg",
            "first_name": "Beni",
            "real_name": "Beni Cherniavsky-Paskin",
            "display_name": "Beni Cherniavsky-Paskin",
            "team": "T5TCAFTA9",
            "name": "beni.cherniavsky",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700569449.220349",
        "parent_user_id": "U066PUFV6LA",
        "attachments": [
            {
                "image_url": "http:\/\/jackrusher.com\/classic-ux\/preview-card.png",
                "image_width": 2164,
                "image_height": 1210,
                "image_bytes": 1044969,
                "from_url": "https:\/\/jackrusher.com\/classic-ux\/",
                "id": 1,
                "original_url": "https:\/\/jackrusher.com\/classic-ux\/",
                "fallback": "Classic HCI demos",
                "text": "A curated collection of HCI demo videos produced during the golden age from 1983-2002.",
                "title": "Classic HCI demos",
                "title_link": "https:\/\/jackrusher.com\/classic-ux\/",
                "service_name": "jackrusher.com"
            },
            {
                "from_url": "https:\/\/www.inkandswitch.com\/",
                "service_icon": "https:\/\/www.inkandswitch.com\/apple-touch-icon.png",
                "thumb_url": "https:\/\/www.inkandswitch.com\/assets\/logo-favicon-196x196.png",
                "thumb_width": 196,
                "thumb_height": 196,
                "id": 2,
                "original_url": "https:\/\/www.inkandswitch.com\/",
                "fallback": "Ink &amp; Switch",
                "text": "Industrial research lab working on digital tools for creativity and productivity",
                "title": "Ink &amp; Switch",
                "title_link": "https:\/\/www.inkandswitch.com\/",
                "service_name": "inkandswitch.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KcJFd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Trying to think of particular things to recommend to someone studying CS now...  Random ones that come to "
                            },
                            {
                                "type": "text",
                                "text": "my",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " mind:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "If you take the wider perspective of \"how computing shapes the world and how we're free to [re-]shape computing\", it's interesting to pay attention which aspects of this your CS studies cover vs. which are out-of-scope or not even mentioned. "
                                    },
                                    {
                                        "type": "emoji",
                                        "name": "eyes",
                                        "unicode": "1f440"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Bret's "
                                    },
                                    {
                                        "type": "link",
                                        "url": "http:\/\/worrydream.com\/dbx\/"
                                    },
                                    {
                                        "type": "text",
                                        "text": " lecture (which also inspired the name for this community) humorously highlights how many past avenues of research have fallen outside the mainstream.  We do like \"mining the past\" for good stuff "
                                    },
                                    {
                                        "type": "emoji",
                                        "name": "slightly_smiling_face",
                                        "unicode": "1f642"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "If you enjoy the academic format of CS, google \"papers we love\" for some of the best..."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "\"Softer\", more human-centric CS certainly exists, and "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/jackrusher.com\/classic-ux\/"
                                    },
                                    {
                                        "type": "text",
                                        "text": " curates great videos from one of the great conferences."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/liveprog.org\/all-programs.html"
                                    },
                                    {
                                        "type": "text",
                                        "text": " — another very FoC conference."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/www.inkandswitch.com\/"
                                    },
                                    {
                                        "type": "text",
                                        "text": " do legendary research — and write it up "
                                    },
                                    {
                                        "type": "text",
                                        "text": "very",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " accessibly."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/futureofcoding.org\/episodes\/065"
                                    },
                                    {
                                        "type": "text",
                                        "text": " (and the article it covers) was one of most thought-provoking episodes in pointing out a deep user-facing challenge with most computing nowdays."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The \""
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/gtoolkit.com\/docs\/moldable\/",
                                        "text": "Moldable development"
                                    },
                                    {
                                        "type": "text",
                                        "text": "\" idea attacks another deep, developer-facing challenge: One should be able to make ad-hoc tools for every development problem\/decision they want, "
                                    },
                                    {
                                        "type": "text",
                                        "text": "rapidly",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ".  That sounds almost crazy, but they have very impressive achievements to show for it.  And even if their Smalltalk-super-powered environment is not for you (I haven't tried it yet either), it's an idea that's good to \"get infected with\" early on.  Your challenge, should you accept it: Ask yourself, which of the skills\/tools you learn are sufficiently \"moldable\", and if not, seek out ones that are."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nFinally, pay attention to what Bret said at the end of \"Inventing on Principle\": he showed "
                            },
                            {
                                "type": "text",
                                "text": "his",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " guiding principle, but the meta-point was you can find "
                            },
                            {
                                "type": "text",
                                "text": "your",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " principles to care for."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U066PUFV6LA"
                ],
                "count": 1
            },
            {
                "name": "star",
                "users": [
                    "U06CSJB5KNX"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02QC0PPER3",
        "type": "message",
        "ts": "1701536610.897999",
        "edited": {
            "user": "U02QC0PPER3",
            "ts": "1701536686.000000"
        },
        "client_msg_id": "268eabe5-b27b-4389-9a0b-d171be5dfb39",
        "text": "neat metaphor :heart:\n> The real wins, then, are tools which do not require everyone to be at their best at every moment: _ratchets_, not _levers_. Levers let you move things, but if you are holding something up with a lever, you have to keep holding it — forever. A ratchet lets you drive forward motion _without_ slipping back as soon as you let up on the pressure.\nYou might like <https:\/\/dercuano.github.io\/notes\/powerful-primitives.html|More thoughts on powerful primitives for simplified computer systems architecture>.  Be warned Kragen's blog is addictive if you're interested in eclectic radical simplicity :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "90c9108c61f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-12\/2854686602576_90c9108c61f5d809eb8a_72.jpg",
            "first_name": "Beni",
            "real_name": "Beni Cherniavsky-Paskin",
            "display_name": "Beni Cherniavsky-Paskin",
            "team": "T5TCAFTA9",
            "name": "beni.cherniavsky",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1701309465.846939",
        "parent_user_id": "U067RCH8NB0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pWko5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "neat metaphor "
                            },
                            {
                                "type": "emoji",
                                "name": "heart",
                                "unicode": "2764-fe0f"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The real wins, then, are tools which do not require everyone to be at their best at every moment: "
                            },
                            {
                                "type": "text",
                                "text": "ratchets",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", not "
                            },
                            {
                                "type": "text",
                                "text": "levers",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Levers let you move things, but if you are holding something up with a lever, you have to keep holding it — forever. A ratchet lets you drive forward motion "
                            },
                            {
                                "type": "text",
                                "text": "without",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " slipping back as soon as you let up on the pressure."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nYou might like "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/dercuano.github.io\/notes\/powerful-primitives.html",
                                "text": "More thoughts on powerful primitives for simplified computer systems architecture"
                            },
                            {
                                "type": "text",
                                "text": ".  Be warned Kragen's blog is addictive if you're interested in eclectic radical simplicity "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06008SU3ML",
        "type": "message",
        "ts": "1701546207.348129",
        "edited": {
            "user": "U06008SU3ML",
            "ts": "1701546308.000000"
        },
        "client_msg_id": "82343665-8648-43bb-8f5f-fc76b925b428",
        "text": "Oops turns out I wasn't logged into this slack group on my phone so missed these replies. But thank you all for taking an interest!\n\n<@U05PESXCC2E> Claro takes a fair bit of inspiration from Rust, largely in the form of the aim of \"fearless concurrency\", monomorphized <https:\/\/jasonsteving99.github.io\/claro-lang\/generics.html|generics>, their Traits system (which is tweaked to my preferences in the form of \"<https:\/\/jasonsteving99.github.io\/claro-lang\/generics\/contracts.html|Contracts>\"), <https:\/\/github.com\/JasonSteving99\/claro-lang\/blob\/d1de6374e22daf43ba8d0da421bffcfc884fc71f\/examples\/claro_programs\/error_handling_and_propagation.claro#L12-L16|error handling>, and <https:\/\/github.com\/JasonSteving99\/claro-lang\/blob\/d1de6374e22daf43ba8d0da421bffcfc884fc71f\/examples\/claro_programs\/match.claro#L214-L223|pattern matching> support (WIP). But I also have taken some inspiration from Python's simplicity goals, as well as some specific features like <https:\/\/github.com\/JasonSteving99\/claro-lang\/blob\/d1de6374e22daf43ba8d0da421bffcfc884fc71f\/examples\/claro_programs\/collection_comprehensions.claro#L30|lists\/set\/map comprehensions>. Claro's concurrency story is probably closer to Go than Erlang\/Elixir as this is not a message passing\/actors world. However, unlike Go, the goal really is strictly proving by construction that your concurrent code will be performant and correct - you simply declare your DAG of concurrent operations as a Graph Procedure and Claro generates the optimally scheduled async execution. This idea is explicitly an extension of Google's internal \"Java Producers Framework\" that was used to run all Java backend services for a decade+ (that framework is partially available as <https:\/\/dagger.dev\/dev-guide\/producers.html|Dagger Producers> but keep in mind this comes with none of Claro's compile-time correctness guarantees).\n\n<@U02U0AS3J49> thanks! I'm glad Graph Procedures seem interesting\/useful to you! I can resonate with your feeling that `root` is unintuitive. This is something that'll need workshopping to find ways to make it more clear so your feedback is really valuable to me. The textual ordering of `node`s in a Graph does not matter at all. Claro will simply schedule based on the actual dependency graph encoded. However, I've constrained the `root` node such that it must come either *first* or *last*. The best-practice organization is that nodes should be ordered in a topological sort (so that all data conceptually \"flows\" in one direction) but I think it's up to the user to decide whether it makes more sense to them for data to flow \"up\" or to flow \"down\". Ideally, I'd have some auto-formatter that could be configured to just reorder node definitions to align consistently with your preferred dataflow direction. Does that make sense?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "775d3cb6c023",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-07\/6006844107219_775d3cb6c023e44fc42e_72.jpg",
            "first_name": "Jason",
            "real_name": "Jason Steving",
            "display_name": "Jason Steving",
            "team": "T5TCAFTA9",
            "name": "jasonmail99",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1701470539.466689",
        "parent_user_id": "U06008SU3ML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+U6in",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oops turns out I wasn't logged into this slack group on my phone so missed these replies. But thank you all for taking an interest!\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U05PESXCC2E"
                            },
                            {
                                "type": "text",
                                "text": " Claro takes a fair bit of inspiration from Rust, largely in the form of the aim of \"fearless concurrency\", monomorphized "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/jasonsteving99.github.io\/claro-lang\/generics.html",
                                "text": "generics"
                            },
                            {
                                "type": "text",
                                "text": ", their Traits system (which is tweaked to my preferences in the form of \""
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/jasonsteving99.github.io\/claro-lang\/generics\/contracts.html",
                                "text": "Contracts"
                            },
                            {
                                "type": "text",
                                "text": "\"), "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/JasonSteving99\/claro-lang\/blob\/d1de6374e22daf43ba8d0da421bffcfc884fc71f\/examples\/claro_programs\/error_handling_and_propagation.claro#L12-L16",
                                "text": "error handling"
                            },
                            {
                                "type": "text",
                                "text": ", and "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/JasonSteving99\/claro-lang\/blob\/d1de6374e22daf43ba8d0da421bffcfc884fc71f\/examples\/claro_programs\/match.claro#L214-L223",
                                "text": "pattern matching"
                            },
                            {
                                "type": "text",
                                "text": " support (WIP). But I also have taken some inspiration from Python's simplicity goals, as well as some specific features like "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/JasonSteving99\/claro-lang\/blob\/d1de6374e22daf43ba8d0da421bffcfc884fc71f\/examples\/claro_programs\/collection_comprehensions.claro#L30",
                                "text": "lists\/set\/map comprehensions"
                            },
                            {
                                "type": "text",
                                "text": ". Claro's concurrency story is probably closer to Go than Erlang\/Elixir as this is not a message passing\/actors world. However, unlike Go, the goal really is strictly proving by construction that your concurrent code will be performant and correct - you simply declare your DAG of concurrent operations as a Graph Procedure and Claro generates the optimally scheduled async execution. This idea is explicitly an extension of Google's internal \"Java Producers Framework\" that was used to run all Java backend services for a decade+ (that framework is partially available as "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/dagger.dev\/dev-guide\/producers.html",
                                "text": "Dagger Producers"
                            },
                            {
                                "type": "text",
                                "text": " but keep in mind this comes with none of Claro's compile-time correctness guarantees).\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U02U0AS3J49"
                            },
                            {
                                "type": "text",
                                "text": " thanks! I'm glad Graph Procedures seem interesting\/useful to you! I can resonate with your feeling that "
                            },
                            {
                                "type": "text",
                                "text": "root",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is unintuitive. This is something that'll need workshopping to find ways to make it more clear so your feedback is really valuable to me. The textual ordering of "
                            },
                            {
                                "type": "text",
                                "text": "node",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "s in a Graph does not matter at all. Claro will simply schedule based on the actual dependency graph encoded. However, I've constrained the "
                            },
                            {
                                "type": "text",
                                "text": "root",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " node such that it must come either "
                            },
                            {
                                "type": "text",
                                "text": "first",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "text",
                                "text": "last",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". The best-practice organization is that nodes should be ordered in a topological sort (so that all data conceptually \"flows\" in one direction) but I think it's up to the user to decide whether it makes more sense to them for data to flow \"up\" or to flow \"down\". Ideally, I'd have some auto-formatter that could be configured to just reorder node definitions to align consistently with your preferred dataflow direction. Does that make sense?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1701551430.389879",
        "client_msg_id": "17ad5698-8915-4b55-8be8-a0c2fc5e5c2d",
        "text": "Makes sense, yes. But I would be inclined to look at the semantic meaninglessness of order as a strength. Forcing the ultimate node to be first or last might needlessly prevent some interesting things you could do with whitespace to make it look like a tree with the root in the centre, for a certain category of graph where that would work.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1701470539.466689",
        "parent_user_id": "U06008SU3ML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9ch0j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Makes sense, yes. But I would be inclined to look at the semantic meaninglessness of order as a strength. Forcing the ultimate node to be first or last might needlessly prevent some interesting things you could do with whitespace to make it look like a tree with the root in the centre, for a certain category of graph where that would work."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06008SU3ML",
        "type": "message",
        "ts": "1701551805.346079",
        "client_msg_id": "b5c0a51a-3173-4c20-a17e-2dba9905408a",
        "text": "That's a very interesting point, it's possible that I'm overstepping the types of decisions the language should impose on users. I may have my own personal style preference but perhaps there's value in leaving users free to choose. \n\nI leaned towards what I've done because in my experience using the Java Producers Framework at Google, the biggest things that people new to this declarative dataflow model complained about was being confused about the inversion of control flow. Standardizing the order that nodes were declared helped those people feel less lost and disorganized",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "775d3cb6c023",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-07\/6006844107219_775d3cb6c023e44fc42e_72.jpg",
            "first_name": "Jason",
            "real_name": "Jason Steving",
            "display_name": "Jason Steving",
            "team": "T5TCAFTA9",
            "name": "jasonmail99",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1701470539.466689",
        "parent_user_id": "U06008SU3ML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z+pgB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's a very interesting point, it's possible that I'm overstepping the types of decisions the language should impose on users. I may have my own personal style preference but perhaps there's value in leaving users free to choose. \n\nI leaned towards what I've done because in my experience using the Java Producers Framework at Google, the biggest things that people new to this declarative dataflow model complained about was being confused about the inversion of control flow. Standardizing the order that nodes were declared helped those people feel less lost and disorganized"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1701551886.592269",
        "client_msg_id": "63154ba9-ca4e-4cd5-8934-3b7a845110e5",
        "text": "That's fair. I come from a logic programming background, where the fact that there is any semantic meaning to order in a conjunction is a source of confusion. So my biases are in the other direction, and a minority view.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1701470539.466689",
        "parent_user_id": "U06008SU3ML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WKVgF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's fair. I come from a logic programming background, where the fact that there is any semantic meaning to order in a conjunction is a source of confusion. So my biases are in the other direction, and a minority view."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06008SU3ML",
        "type": "message",
        "ts": "1701552112.851739",
        "client_msg_id": "128e2e45-2c57-459a-989f-76666d04862d",
        "text": "That's actually super interesting that the perspective could be so influenced by the languages you've previously used. It's very encouraging to me that you and people with a similar background are proof that there's nothing *inherently* confusing about this inverted model. I'll say that it took me some adapting, but once I was steeped in this way of thinking I'd hate the prospect of needing to explicitly order concurrent operations to maximize parallelism",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "775d3cb6c023",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-07\/6006844107219_775d3cb6c023e44fc42e_72.jpg",
            "first_name": "Jason",
            "real_name": "Jason Steving",
            "display_name": "Jason Steving",
            "team": "T5TCAFTA9",
            "name": "jasonmail99",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1701470539.466689",
        "parent_user_id": "U06008SU3ML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JJVnZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's actually super interesting that the perspective could be so influenced by the languages you've previously used. It's very encouraging to me that you and people with a similar background are proof that there's nothing "
                            },
                            {
                                "type": "text",
                                "text": "inherently",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " confusing about this inverted model. I'll say that it took me some adapting, but once I was steeped in this way of thinking I'd hate the prospect of needing to explicitly order concurrent operations to maximize parallelism"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U067RCH8NB0",
        "type": "message",
        "ts": "1701554104.630649",
        "client_msg_id": "f1854cb3-b291-434d-9058-9e83ef5c6ddf",
        "text": ":eyes: and thanks!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0f75aaf019c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0f75aaf019cc59e83fd3321b64a36508.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Chris",
            "real_name": "Chris Krycho",
            "display_name": "Chris Krycho",
            "team": "T5TCAFTA9",
            "name": "hello870",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1701309465.846939",
        "parent_user_id": "U067RCH8NB0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1X6HX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "eyes",
                                "unicode": "1f440"
                            },
                            {
                                "type": "text",
                                "text": " and thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05UBCXHWM6",
        "type": "message",
        "ts": "1701565563.236259",
        "client_msg_id": "C0CE75C6-0BA7-469C-BB81-AD553B67E684",
        "text": "Oh, I also moved from Belgium to Germany, where do you live?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1beaa0968ce5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-23\/5937523466869_1beaa0968ce502c4375e_72.jpg",
            "first_name": "Arcade",
            "real_name": "Arcade Wise",
            "display_name": "Arcade Wise",
            "team": "T5TCAFTA9",
            "name": "arcade.b.wise",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1701523925.192779",
        "parent_user_id": "U068EDCDKE0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gaQYD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh, I also moved from Belgium to Germany"
                            },
                            {
                                "type": "text",
                                "text": ","
                            },
                            {
                                "type": "text",
                                "text": " where do you live?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]