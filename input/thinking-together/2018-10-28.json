[
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1540710053.019000",
        "client_msg_id": "d3df4ea7-7644-4968-8df9-2e96bb41f476",
        "text": "Dynamicland made me wonder if there are any, um, ah, input\/output standards out there that have been used to do some of the things seen at Dynamicland. Would be relatively easy to write. Just wondering if it already exists.\n\nHere's a video of what I saw. Not sure how clear it will be out of context\n\n<https:\/\/www.youtube.com\/watch?v=FtPOLzXtYIU>\n\nIn any case, one of the things in that video is how inputs and outputs are available from other programs. So for example they connect a \"dial\" program and use it to dial up the speed of the simulation (actually I think they dialed down the per frame delay).  They also had displays displaying number of sheep or number of plants. As well as dials for birth rate etc, and the graph.\n\nSo, that seems like a useful thing outside Dynamicland. Make various programs and they advertise their inputs and outputs. You can imagine for that plant-sheep-wolf sim as inputs their might be\n\n```\n--inputs--\n{ name: \"plantBirthRate\", type: \"Number\", range: [0, 100], precision: 1 },\n{ name: \"sheepBirthRate\", type: \"Number\", range: [0, 100], precision: 1 },\n{ name: \"frameDelay\", type: \"Number\", range: [0, 1], precision: 1, },\n--outputs--\n{ name: \"numPlants\", type: \"Integer\", },\n{ name: \"numSheep\", type: \"Integer\", },\n{ name: \"numWolves\", type: \"Integer\", },\n```\n\netc. I suppose outputs are just readonly inputs so no need to separate the two.\n\nAnyway, the idea is you could build various kinds of inputs and displays. Example: You write a USB Midi input controller and then plug in any midi device and it auto assigns inputs to dials\/sliders\/buttons. (and of course somewhere you can set which ones go to which). You make a USB DAC Analog VU meter and plug it in and it takes the first unread output and displays it on the VU meter. You make some UI APP on a phone or tablet, connect it to the program over wifi and it presents various sliders, and or readouts etc.\n\nThat seems like systems like that have to already exist.\n\nIt would be nice to be able to write various programs with no UI, just declare the data and you get a UI for free. This happens in C# with the property inspector and it happens in Unity for example but disconnect it slightly more so the displays of properties and the editing of properties can happen externally to the program using those properties.\n\nAnyone know of such projects?\n\nOf course I can already see lots of issues. You want specific sliders or specific knobs or specific tablets to control specific inputs so it takes time to go and for each input or display configure it to work with the specific value you want.  That's kind of solved at Dynamicland with the little lines poking out. The problem though is there's only room for so many of those lines so if your simulation has 50 settings you're kind of out of luck.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1540710053.019000",
        "reply_count": 16,
        "reply_users_count": 5,
        "latest_reply": "1540839343.032400",
        "reply_users": [
            "UCKRZS3DZ",
            "UC6997THT",
            "UDJ2TKB99",
            "UBJGA440K",
            "U8A5MS6R1"
        ],
        "replies": [
            {
                "user": "UCKRZS3DZ",
                "ts": "1540711892.019200"
            },
            {
                "user": "UC6997THT",
                "ts": "1540715441.019500"
            },
            {
                "user": "UDJ2TKB99",
                "ts": "1540740777.021600"
            },
            {
                "user": "UBJGA440K",
                "ts": "1540823542.026900"
            },
            {
                "user": "UBJGA440K",
                "ts": "1540823587.027100"
            },
            {
                "user": "UBJGA440K",
                "ts": "1540823608.027300"
            },
            {
                "user": "UBJGA440K",
                "ts": "1540823653.027500"
            },
            {
                "user": "UBJGA440K",
                "ts": "1540823720.027700"
            },
            {
                "user": "UBJGA440K",
                "ts": "1540823780.027900"
            },
            {
                "user": "UBJGA440K",
                "ts": "1540823810.028100"
            },
            {
                "user": "UBJGA440K",
                "ts": "1540823968.028300"
            },
            {
                "user": "UBJGA440K",
                "ts": "1540824030.028500"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1540836783.031700"
            },
            {
                "user": "UBJGA440K",
                "ts": "1540839312.032000"
            },
            {
                "user": "UBJGA440K",
                "ts": "1540839325.032200"
            },
            {
                "user": "UBJGA440K",
                "ts": "1540839343.032400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Dynamicland",
                "title_link": "https:\/\/www.youtube.com\/watch?v=FtPOLzXtYIU",
                "author_name": "greggman",
                "author_link": "https:\/\/www.youtube.com\/user\/gmanjapan",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/FtPOLzXtYIU\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Dynamicland",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/FtPOLzXtYIU?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/www.youtube.com\/watch?v=FtPOLzXtYIU",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=FtPOLzXtYIU"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/RYAs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Dynamicland made me wonder if there are any, um, ah, input\/output standards out there that have been used to do some of the things seen at Dynamicland. Would be relatively easy to write. Just wondering if it already exists.\n\nHere's a video of what I saw. Not sure how clear it will be out of context\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=FtPOLzXtYIU"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIn any case, one of the things in that video is how inputs and outputs are available from other programs. So for example they connect a \"dial\" program and use it to dial up the speed of the simulation (actually I think they dialed down the per frame delay).  They also had displays displaying number of sheep or number of plants. As well as dials for birth rate etc, and the graph.\n\nSo, that seems like a useful thing outside Dynamicland. Make various programs and they advertise their inputs and outputs. You can imagine for that plant-sheep-wolf sim as inputs their might be\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "--inputs--\n{ name: \"plantBirthRate\", type: \"Number\", range: [0, 100], precision: 1 },\n{ name: \"sheepBirthRate\", type: \"Number\", range: [0, 100], precision: 1 },\n{ name: \"frameDelay\", type: \"Number\", range: [0, 1], precision: 1, },\n--outputs--\n{ name: \"numPlants\", type: \"Integer\", },\n{ name: \"numSheep\", type: \"Integer\", },\n{ name: \"numWolves\", type: \"Integer\", },\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\netc. I suppose outputs are just readonly inputs so no need to separate the two.\n\nAnyway, the idea is you could build various kinds of inputs and displays. Example: You write a USB Midi input controller and then plug in any midi device and it auto assigns inputs to dials\/sliders\/buttons. (and of course somewhere you can set which ones go to which). You make a USB DAC Analog VU meter and plug it in and it takes the first unread output and displays it on the VU meter. You make some UI APP on a phone or tablet, connect it to the program over wifi and it presents various sliders, and or readouts etc.\n\nThat seems like systems like that have to already exist.\n\nIt would be nice to be able to write various programs with no UI, just declare the data and you get a UI for free. This happens in C# with the property inspector and it happens in Unity for example but disconnect it slightly more so the displays of properties and the editing of properties can happen externally to the program using those properties.\n\nAnyone know of such projects?\n\nOf course I can already see lots of issues. You want specific sliders or specific knobs or specific tablets to control specific inputs so it takes time to go and for each input or display configure it to work with the specific value you want.  That's kind of solved at Dynamicland with the little lines poking out. The problem though is there's only room for so many of those lines so if your simulation has 50 settings you're kind of out of luck."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1540711892.019200",
        "edited": {
            "user": "UCKRZS3DZ",
            "ts": "1540712650.000000"
        },
        "client_msg_id": "88124fcb-e3fa-4285-9418-de7fc7757339",
        "text": "Hey <@UC6997THT>! I was thinking about something similar, and had a discussion some time ago: <https:\/\/github.com\/d-cook\/SomethingNew\/issues\/24>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1540710053.019000",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hf=w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey "
                            },
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": "! I was thinking about something similar, and had a discussion some time ago: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/d-cook\/SomethingNew\/issues\/24"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1540715441.019500",
        "edited": {
            "user": "UC6997THT",
            "ts": "1540716280.000000"
        },
        "client_msg_id": "84589176-5b5b-4031-96d5-ff64e980fd2c",
        "text": "Interesting. I tried to do the hierarchy thing once and failed. Not saying it's a bad idea. If you want an external program to edit a tree then of course you need some kind of representation of that tree in the editor. For me though I'd prefer to start small I think and just allow the external apps to query for properties to edit, then maybe like JS apis they could `addEventListener` for changes if they want to be notified of changes to that specific property? I don't know until I make it\n\nI've seen at least one game engine that just provided a webserver that served up it's scenegraph and all objects. You could edit the properties on the objects from a browser. It wasn't live. It was just http get and put operations.\n\nSpeaking of which maybe I should look into the browser's debugger protocols for inspiration\n\n<https:\/\/chromedevtools.github.io\/devtools-protocol\/>\n\nI'm actually kind of interested in doing this as an internal library first (as in something I use in an app, not something that runs outside). Just as a way to simplifiy hacky interface building. Kind of like in C# I can just make a ProperyControl and point it at an instance of a class and I get a UI.  I do a lot of small JS things and end up writing the UI from scratch nearly every time\n\n\nI guess that's one advantage of a typed language for this kind of issue",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1540710053.019000",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HYR3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting. I tried to do the hierarchy thing once and failed. Not saying it's a bad idea. If you want an external program to edit a tree then of course you need some kind of representation of that tree in the editor. For me though I'd prefer to start small I think and just allow the external apps to query for properties to edit, then maybe like JS apis they could "
                            },
                            {
                                "type": "text",
                                "text": "addEventListener",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for changes if they want to be notified of changes to that specific property? I don't know until I make it\n\nI've seen at least one game engine that just provided a webserver that served up it's scenegraph and all objects. You could edit the properties on the objects from a browser. It wasn't live. It was just http get and put operations.\n\nSpeaking of which maybe I should look into the browser's debugger protocols for inspiration\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/chromedevtools.github.io\/devtools-protocol\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI'm actually kind of interested in doing this as an internal library first (as in something I use in an app, not something that runs outside). Just as a way to simplifiy hacky interface building. Kind of like in C# I can just make a ProperyControl and point it at an instance of a class and I get a UI.  I do a lot of small JS things and end up writing the UI from scratch nearly every time\n\n\n\nI guess that's one advantage of a typed language for this kind of issue"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDJ2TKB99",
        "type": "message",
        "ts": "1540740777.021600",
        "client_msg_id": "41E1C756-AEDF-42E7-B0C8-B726F045ECDC",
        "text": "<@UC6997THT> have you looked into systems aimed at art\/performance like <https:\/\/puredata.info>  and Max\/MSP\/Jitter?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7acd71947ea2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-04\/2564854327154_7acd71947ea203e9a69b_72.jpg",
            "first_name": "Joe",
            "real_name": "Joe Trellick",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1540710053.019000",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "boqS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": " have you looked into systems aimed at art\/performance like "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/puredata.info"
                            },
                            {
                                "type": "text",
                                "text": "  and Max\/MSP\/Jitter?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC6997THT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1540784593.021900",
        "client_msg_id": "568972c9-fb30-4ab8-bc26-d7b5ae1af565",
        "text": "I don't know of any such systems used outside of research. I hope to see such systems scale up.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1540584994.000500",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3iA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't know of any such systems used outside of research. I hope to see such systems scale up."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]