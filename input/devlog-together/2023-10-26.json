[
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1698347450.567589",
        "client_msg_id": "e474a073-6144-4749-b33d-ae657c9458e8",
        "text": "Some nice original research by <@UKVEBP5RD>: <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1698186483239009?thread_ts=1697733555.328719&amp;cid=C5T9GPWFL>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698347450.567589",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1698434607.693819",
        "reply_users": [
            "UKVEBP5RD"
        ],
        "replies": [
            {
                "user": "UKVEBP5RD",
                "ts": "1698434607.693819"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1698186483239009?thread_ts=1697733555.328719&amp;cid=C5T9GPWFL",
                "ts": "1698186483.239009",
                "author_id": "UKVEBP5RD",
                "channel_id": "C5T9GPWFL",
                "channel_team": "T5TCAFTA9",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T5TCAFTA9",
                        "channel": "C5T9GPWFL",
                        "ts": "1698186483.239009",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "GfxGN",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "user",
                                                    "user_id": "U01ULCCJB7X"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "\nI spontaneously decided to project your example to an ALD mockup to get a bit of a feeling for inhowfar ALDs are compatible with your code projection focused of concatenative code.\nSeems pretty good.\n\n★ One nice thing with ALDs is that library functions are threated exactly the same as argument values. They come in as semi-implicit arguments via the grey collection abstraction-line.\n★ One annoying (but I think good) restriction of ALD is that functions (and definitions in let sections) can only ever have just one single value-line as their final output (except one cheats a bit as I've done here with memocurry "
                                                },
                                                {
                                                    "type": "emoji",
                                                    "name": "smiling_imp",
                                                    "unicode": "1f608"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": ")."
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "files": [
                    {
                        "id": "F062Q62PF6G",
                        "created": 1698185347,
                        "timestamp": 1698185347,
                        "user": "UKVEBP5RD",
                        "is_hidden_by_limit": 1
                    }
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1698186483239009?thread_ts=1697733555.328719&amp;cid=C5T9GPWFL",
                "fallback": "[October 24th, 2023 3:28 PM] lukas.suess: <@U01ULCCJB7X>\nI spontaneously decided to project your example to an ALD mockup to get a bit of a feeling for inhowfar ALDs are compatible with your code projection focused of concatenative code.\nSeems pretty good.\n\n★ One nice thing with ALDs is that library functions are threated exactly the same as argument values. They come in as semi-implicit arguments via the grey collection abstraction-line.\n★ One annoying (but I think good) restriction of ALD is that functions (and definitions in let sections) can only ever have just one single value-line as their final output (except one cheats a bit as I've done here with memocurry :smiling_imp:).",
                "text": "<@U01ULCCJB7X>\nI spontaneously decided to project your example to an ALD mockup to get a bit of a feeling for inhowfar ALDs are compatible with your code projection focused of concatenative code.\nSeems pretty good.\n\n★ One nice thing with ALDs is that library functions are threated exactly the same as argument values. They come in as semi-implicit arguments via the grey collection abstraction-line.\n★ One annoying (but I think good) restriction of ALD is that functions (and definitions in let sections) can only ever have just one single value-line as their final output (except one cheats a bit as I've done here with memocurry :smiling_imp:).",
                "author_name": "Lukas Süss",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/UKVEBP5RD",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2023-10-25\/6091924176418_768bab52d41d31e13185_48.png",
                "author_subname": "Lukas Süss",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zHFVU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some nice original research by "
                            },
                            {
                                "type": "user",
                                "user_id": "UKVEBP5RD"
                            },
                            {
                                "type": "text",
                                "text": ": "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1698186483239009?thread_ts=1697733555.328719&cid=C5T9GPWFL"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    }
]