[
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1568623648.155900",
        "client_msg_id": "be1e4fa9-965c-4e15-946a-1c84be8f47ba",
        "text": "Yep that's the talk.  He has written a lot of books about Agile, and C++, but like most programming book authors has not built very many large projects. I don't expect him to, but Fred Brook's Mythical Man Month book is a bit more authoritative because Brooks managed 2000 programmers. Who gets to do that? To me a dozen is a big team.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567954767.205900",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ADJp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yep that's the talk.  He has written a lot of books about Agile, and C++, but like most programming book authors has not built very many large projects. I don't expect him to, but Fred Brook's Mythical Man Month book is a bit more authoritative because Brooks managed 2000 programmers. Who gets to do that? To me a dozen is a big team."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFZFETUH1",
        "type": "message",
        "ts": "1568632801.156400",
        "client_msg_id": "17d39047-7fa5-41b4-9678-ae7c80f88a8c",
        "text": "I think there is more stuff that can be built with paranthesis parsers. I'm thinking of monoidal parsing \/ incremental parsing for editor tooling. I could think of a paranthesis and indentation parser as a first stage of parsing, with a traditional parsing filling in the gaps between paranthesis. Using something like this: <https:\/\/www.youtube.com\/watch?v=090hIEiUoE0>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga72dfb84ee3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8a72dfb84ee31009c2810f7f590d4ff8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Philipp Kr√ºger",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "philipp.krueger1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568560014.127600",
        "parent_user_id": "UMVFWPZ36",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Monoidal Parsing - Boston Haskell Meetup",
                "title_link": "https:\/\/www.youtube.com\/watch?v=090hIEiUoE0",
                "author_name": "Boston Haskell",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCUCpgCWjaniUkX88wZrK_Ig",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/090hIEiUoE0\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Monoidal Parsing - Boston Haskell Meetup",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/090hIEiUoE0?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=090hIEiUoE0",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=090hIEiUoE0"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5WJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think there is more stuff that can be built with paranthesis parsers. I'm thinking of monoidal parsing \/ incremental parsing for editor tooling. I could think of a paranthesis and indentation parser as a first stage of parsing, with a traditional parsing filling in the gaps between paranthesis. Using something like this: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=090hIEiUoE0"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1568633054.156700",
        "client_msg_id": "04ec17b4-fe46-4b5f-91eb-1ef1f842eb2b",
        "text": "<@UEF95M2RH> Thanks for these links! I'm going to look into them, though I'm definitely looking for a type system that can deal with composition and reordering of changes. One use case I have in mind is making it impossible to express false dependencies between parts of a program. For example, instead of having the type signature of a state transition function inferred as `state -&gt; state`, I'd like to see it be given a type signature `state -&gt; delta state`, where the result value can only be consumed by other functions that (may) need to read from the subset of state that was changed (else you'd get a type error about a \"false dependency\", or the IDE would just rearrange the code to remove the false dependency). I need a type system that will let me test out this experience. Worst case, I'll have to become a type theorist and just invent it!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568542197.120200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BzY\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEF95M2RH"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for these links! I'm going to look into them, though I'm definitely looking for a type system that can deal with composition and reordering of changes. One use case I have in mind is making it impossible to express false dependencies between parts of a program. For example, instead of having the type signature of a state transition function inferred as "
                            },
                            {
                                "type": "text",
                                "text": "state -> state",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", I'd like to see it be given a type signature "
                            },
                            {
                                "type": "text",
                                "text": "state -> delta state",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", where the result value can only be consumed by other functions that (may) need to read from the subset of state that was changed (else you'd get a type error about a \"false dependency\", or the IDE would just rearrange the code to remove the false dependency). I need a type system that will let me test out this experience. Worst case, I'll have to become a type theorist and just invent it!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UNCP67JSK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1568641648.161100",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1568641718.000000"
        },
        "client_msg_id": "53A84877-E760-45FB-AC38-67B377602638",
        "text": "Do you know any language\/system which builds around invariants and the change of invariants in the evolution of the software?\n\nTo me Prolog feels somewhat like that with its \"relation\" like facts\/rules - which can be more and more refined.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568641648.161100",
        "reply_count": 6,
        "reply_users_count": 3,
        "latest_reply": "1568656852.185800",
        "reply_users": [
            "UN57U8V53",
            "UM1HH60GN",
            "UL3CJ7YKC"
        ],
        "replies": [
            {
                "user": "UN57U8V53",
                "ts": "1568642325.161500"
            },
            {
                "user": "UM1HH60GN",
                "ts": "1568643034.169200"
            },
            {
                "user": "UM1HH60GN",
                "ts": "1568643097.169900"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1568644657.179900"
            },
            {
                "user": "UN57U8V53",
                "ts": "1568648012.182600"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1568656852.185800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8KO\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do you know any language\/system which builds around invariants and the change of invariants in the evolution of the software?\n\nTo me Prolog feels somewhat like that with its \"relation\" like facts\/rules - which can be more and more refined."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1568642325.161500",
        "client_msg_id": "0eb4cdab-104a-433c-b43e-968cd185e06f",
        "text": "What kind of invariants? In general, any strong type system is practicing a limiting of the search space by some kind of invariant. Haskell libs in particular can derive code\/functions from specified invariants while dependently typed programs like Idris conversationally limits\/builds types and code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568641648.161100",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DD6y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What kind of invariants? In general, any strong type system is practicing a limiting of the search space by some kind of invariant. Haskell libs in particular can derive code\/functions from specified invariants while dependently typed programs like Idris conversationally limits\/builds types and code."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UL3CJ7YKC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1568642855.169000",
        "client_msg_id": "8243edce-9008-4c55-9071-c10666778f4f",
        "text": "Hi everyone, I'm poking around at the state of the art in session types &lt;-&gt; linear types (lambda calculus) and wondering if anyone has seen it applied to multi-threaded programming (particularly GPU\/CPU). In particular, I'm curious if anyone's seen languages that are biased towards pass by reference or have generation-less GC (which seems like it'd have to be rust-like).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QiX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi everyone, I'm poking around at the state of the art in session types <-> linear types (lambda calculus) and wondering if anyone has seen it applied to multi-threaded programming (particularly GPU\/CPU). In particular, I'm curious if anyone's seen languages that are biased towards pass by reference or have generation-less GC (which seems like it'd have to be rust-like)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UM1HH60GN",
        "type": "message",
        "ts": "1568643034.169200",
        "client_msg_id": "dc1a2388-2b24-42d6-864b-18f39396495e",
        "text": "it sounds suspiciously like this isabelle proof assistant talk I saw over the weekend, invariants and refinement: <https:\/\/www.youtube.com\/watch?v=7w4KC6i9Yac>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "50ee467d1311",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-08-07\/719033961125_50ee467d13114e4314c2_72.jpg",
            "first_name": "Gary",
            "real_name": "Gary Trakhman",
            "display_name": "Gary Trakhman",
            "team": "T5TCAFTA9",
            "name": "gary.trakhman",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568641648.161100",
        "parent_user_id": "UL3CJ7YKC",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "\"Correctness proofs of distributed systems with Isabelle\" by Martin Kleppmann",
                "title_link": "https:\/\/www.youtube.com\/watch?v=7w4KC6i9Yac",
                "author_name": "Strange Loop",
                "author_link": "https:\/\/www.youtube.com\/channel\/UC_QIfHvN9auy2CoOdSfMWDw",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/7w4KC6i9Yac\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: \"Correctness proofs of distributed systems with Isabelle\" by Martin Kleppmann",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/7w4KC6i9Yac?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=7w4KC6i9Yac",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=7w4KC6i9Yac"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q6mD+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it sounds suspiciously like this isabelle proof assistant talk I saw over the weekend, invariants and refinement: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=7w4KC6i9Yac"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UL3CJ7YKC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1568643072.169600",
        "client_msg_id": "e0468dc8-5d98-4a49-9872-cf6b58f116e8",
        "text": "I always watch Paul's talks: <https:\/\/www.youtube.com\/watch?v=gCWtkvDQ2ZI>\n\nThis talk by <@UFS53UWE5> was wonderful and very well received <https:\/\/www.youtube.com\/watch?v=AS1OHMW873s>\n\nThis talk was interesting enough to inspire me to make my own Spotify app... <https:\/\/www.youtube.com\/watch?v=nQ5He4gkCzc>\n\nI am looking forward to watching this talk! I heard amazing things. <@UD69XQ9J8> seems to be involved... <https:\/\/www.youtube.com\/watch?v=nQ5He4gkCzc>\n\nThis talk was very inspiring for a fellow RSI sufferer <https:\/\/www.youtube.com\/watch?v=YKuRkGkf5HU>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568560026.128000",
        "parent_user_id": "UMVFWPZ36",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "\"Unison: a new distributed programming language\" by Paul Chiusano",
                "title_link": "https:\/\/www.youtube.com\/watch?v=gCWtkvDQ2ZI",
                "author_name": "Strange Loop",
                "author_link": "https:\/\/www.youtube.com\/channel\/UC_QIfHvN9auy2CoOdSfMWDw",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/gCWtkvDQ2ZI\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: \"Unison: a new distributed programming language\" by Paul Chiusano",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/gCWtkvDQ2ZI?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=gCWtkvDQ2ZI",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=gCWtkvDQ2ZI"
            },
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "\"RGB to XYZ: The Science and History of Color\" by John Austin",
                "title_link": "https:\/\/www.youtube.com\/watch?v=AS1OHMW873s",
                "author_name": "Strange Loop",
                "author_link": "https:\/\/www.youtube.com\/channel\/UC_QIfHvN9auy2CoOdSfMWDw",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/AS1OHMW873s\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: \"RGB to XYZ: The Science and History of Color\" by John Austin",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/AS1OHMW873s?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=AS1OHMW873s",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 2,
                "original_url": "https:\/\/www.youtube.com\/watch?v=AS1OHMW873s"
            },
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "\"Better Spotify Playlists through Discrete Optimization\" by Cedric Hurst",
                "title_link": "https:\/\/www.youtube.com\/watch?v=nQ5He4gkCzc",
                "author_name": "Strange Loop",
                "author_link": "https:\/\/www.youtube.com\/channel\/UC_QIfHvN9auy2CoOdSfMWDw",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/nQ5He4gkCzc\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: \"Better Spotify Playlists through Discrete Optimization\" by Cedric Hurst",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/nQ5He4gkCzc?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=nQ5He4gkCzc",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 3,
                "original_url": "https:\/\/www.youtube.com\/watch?v=nQ5He4gkCzc"
            },
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "\"Voice Driven Development: Who needs a keyboard anyway?\" by Emily Shea",
                "title_link": "https:\/\/www.youtube.com\/watch?v=YKuRkGkf5HU",
                "author_name": "Strange Loop",
                "author_link": "https:\/\/www.youtube.com\/channel\/UC_QIfHvN9auy2CoOdSfMWDw",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/YKuRkGkf5HU\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: \"Voice Driven Development: Who needs a keyboard anyway?\" by Emily Shea",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/YKuRkGkf5HU?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=YKuRkGkf5HU",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 4,
                "original_url": "https:\/\/www.youtube.com\/watch?v=YKuRkGkf5HU"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UO5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I always watch Paul's talks: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=gCWtkvDQ2ZI"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThis talk by "
                            },
                            {
                                "type": "user",
                                "user_id": "UFS53UWE5"
                            },
                            {
                                "type": "text",
                                "text": " was wonderful and very well received "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=AS1OHMW873s"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThis talk was interesting enough to inspire me to make my own Spotify app... "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=nQ5He4gkCzc"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI am looking forward to watching this talk! I heard amazing things. "
                            },
                            {
                                "type": "user",
                                "user_id": "UD69XQ9J8"
                            },
                            {
                                "type": "text",
                                "text": " seems to be involved... "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=nQ5He4gkCzc"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThis talk was very inspiring for a fellow RSI sufferer "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=YKuRkGkf5HU"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36",
                    "U7C7B75R6"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UM1HH60GN",
        "type": "message",
        "ts": "1568643097.169900",
        "client_msg_id": "944de56e-0df1-493c-93fc-42e683141cf5",
        "text": "and apparently it can generate code from the specs into SML, OCaml, haskell and scala",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "50ee467d1311",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-08-07\/719033961125_50ee467d13114e4314c2_72.jpg",
            "first_name": "Gary",
            "real_name": "Gary Trakhman",
            "display_name": "Gary Trakhman",
            "team": "T5TCAFTA9",
            "name": "gary.trakhman",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568641648.161100",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6dctH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and apparently it can generate code from the specs into SML, OCaml, haskell and scala"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1568644025.172700",
        "edited": {
            "user": "U5TCAFTD3",
            "ts": "1568644233.000000"
        },
        "client_msg_id": "1db09ac8-8286-44da-8278-f9458deefca7",
        "text": "I really enjoyed reading through this: <https:\/\/twitter.com\/geoffreylitt\/status\/1173346223715053568>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568644025.172700",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1568726434.197300",
        "reply_users": [
            "UF2GNRUTV",
            "UHWC9PXBL",
            "UGLSY9X3J"
        ],
        "replies": [
            {
                "user": "UF2GNRUTV",
                "ts": "1568646695.180500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1568666150.188800"
            },
            {
                "user": "UGLSY9X3J",
                "ts": "1568726434.197300"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1568726434.197300",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/geoffreylitt|@geoffreylitt>: Wow, this \"comic\" is an incredible visual medium for communicating the essence of a user interface idea...\n\nIt combines narrative flow (like a screencast) AND quick nonlinear skimmability (like an essay) <https:\/\/twitter.com\/elzr\/status\/1171505815334739968>",
                "ts": 1568582514,
                "author_name": "Geoffrey Litt",
                "author_link": "https:\/\/twitter.com\/geoffreylitt\/status\/1173346223715053568",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/722626068293763072\/4erM-SPN_normal.jpg",
                "author_subname": "@geoffreylitt",
                "text": "Wow, this \"comic\" is an incredible visual medium for communicating the essence of a user interface idea...\n\nIt combines narrative flow (like a screencast) AND quick nonlinear skimmability (like an essay) <https:\/\/twitter.com\/elzr\/status\/1171505815334739968>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/geoffreylitt\/status\/1173346223715053568",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/geoffreylitt\/status\/1173346223715053568",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            },
            {
                "fallback": "<https:\/\/twitter.com\/elzr|@elzr>: Napkin, a blend of <https:\/\/twitter.com\/soulver|@soulver>, <https:\/\/twitter.com\/scratch|@scratch> &amp; spreadsheets with 4 kinds of cells: data, label, result &amp; function.\n\nMade a comic about it for friends back in 2014 but never published it. Still think it's a fun, powerful idea: lists, backbars, nesting! PDF at <http:\/\/elzr.com\/else\/napkin-comic.pdf> <https:\/\/pbs.twimg.com\/media\/EEIGUEJUEAEjimc.jpg>",
                "ts": 1568143726,
                "author_name": "Eli Parra üåä",
                "author_link": "https:\/\/twitter.com\/elzr\/status\/1171505815334739968",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/966407893988786176\/-dfNoJNh_normal.jpg",
                "author_subname": "@elzr",
                "text": "Napkin, a blend of <https:\/\/twitter.com\/soulver|@soulver>, <https:\/\/twitter.com\/scratch|@scratch> &amp; spreadsheets with 4 kinds of cells: data, label, result &amp; function.\n\nMade a comic about it for friends back in 2014 but never published it. Still think it's a fun, powerful idea: lists, backbars, nesting! PDF at <http:\/\/elzr.com\/else\/napkin-comic.pdf> <https:\/\/pbs.twimg.com\/media\/EEIGUEJUEAEjimc.jpg>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/elzr\/status\/1171505815334739968",
                "image_url": "https:\/\/pbs.twimg.com\/media\/EEIGUEJUEAEjimc.jpg",
                "image_width": 1199,
                "image_height": 734,
                "image_bytes": 115275,
                "indent": true,
                "color": "32BBF3",
                "id": 2,
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cG7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really enjoyed reading through this: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/geoffreylitt\/status\/1173346223715053568"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL",
                    "U85HCL7JP",
                    "UAL7940NM",
                    "U7C7B75R6",
                    "UP6G25H35"
                ],
                "count": 5
            },
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1568644207.175000",
        "edited": {
            "user": "U5TCAFTD3",
            "ts": "1568644227.000000"
        },
        "client_msg_id": "83f19cdf-78da-4ba7-82f6-7772e80b047a",
        "text": "Also, unrelatedly: I can't get this talk about of my mind. It's about how little we know about what works in software development. Is global state really bad? I sure think so but where's the empirical evidence?! If it were so clearly bad, then that badness we detect must somehow show up in reality and can be measured empirically. Is the issue that it's too costly to perform the test? Or that it's actually not as bad as we thing... (Reminds me of the debate I have with my mom about alternative medicine.) <https:\/\/hillelwayne.com\/talks\/what-we-know-we-dont-know\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568644207.175000",
        "reply_count": 9,
        "reply_users_count": 5,
        "latest_reply": "1573458008.322300",
        "reply_users": [
            "UF2GNRUTV",
            "UN57U8V53",
            "UA14TGLTC",
            "UEQ6M68H0",
            "UP6G25H35"
        ],
        "replies": [
            {
                "user": "UF2GNRUTV",
                "ts": "1568647103.180900"
            },
            {
                "user": "UN57U8V53",
                "ts": "1568647110.181100"
            },
            {
                "user": "UF2GNRUTV",
                "ts": "1568647235.181300"
            },
            {
                "user": "UN57U8V53",
                "ts": "1568647554.182100"
            },
            {
                "user": "UN57U8V53",
                "ts": "1568647768.182300"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1568649643.182900"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1568670299.191800"
            },
            {
                "user": "UP6G25H35",
                "ts": "1573441660.322000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1573458008.322300"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1573592415.343600",
        "attachments": [
            {
                "service_name": "Hillel Wayne",
                "title": "What We Know We Don't Know ‚Ä¢ Hillel Wayne",
                "title_link": "https:\/\/hillelwayne.com\/talks\/what-we-know-we-dont-know\/",
                "text": "Official Description: There are many things in software we believe are true but very little we know. Maybe testing reduces bugs, or maybe it‚Äôs just superstition. If we want to improve our craft, we need a way to distinguish fact from fallacy. We need to look for evidence, placing our trust in the hard data over our opinions. Empirical Software Engineering is the study of what actually works in programming.",
                "fallback": "Hillel Wayne: What We Know We Don't Know ‚Ä¢ Hillel Wayne",
                "ts": 1556409600,
                "from_url": "https:\/\/hillelwayne.com\/talks\/what-we-know-we-dont-know\/",
                "service_icon": "https:\/\/hillelwayne.com\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/hillelwayne.com\/talks\/what-we-know-we-dont-know\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fUn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, unrelatedly: I can't get this talk about of my mind. It's about how little we know about what works in software development. Is global state really bad? I sure think so but where's the empirical evidence?! If it were so clearly bad, then that badness we detect must somehow show up in reality and can be measured empirically. Is the issue that it's too costly to perform the test? Or that it's actually not as bad as we thing... (Reminds me of the debate I have with my mom about alternative medicine.) "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/hillelwayne.com\/talks\/what-we-know-we-dont-know\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UHDQ62M4P",
                    "UCSJ44X1S"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1568644657.179900",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1568644750.000000"
        },
        "client_msg_id": "59227414-D063-4976-8DFD-2389E923AD7E",
        "text": "Yeah guys, I think the very best answer to that is what you have answered: \"what kind of invariants\" \/ Dependent Types \/ Proof Assistants. :) I was afraid of that because those are my answers as well! :) \n\nI asked the question because half part of my intuition says there must be some useful system I am not aware of on the level of logic programming where Prolog sits, but the other half of my intuition accepts that the most sophisticated way might be the Dependent Typed \/ Proof Assistant way to go on.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568641648.161100",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LCDY=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah guys, I think the very best answer to that is what you have answered: \"what kind of invariants\" \/ Dependent Types \/ Proof Assistants. :) I was afraid of that because those are my answers as well! :) \n\nI asked the question because half part of my intuition says there must be some useful system I am not aware of on the level of logic programming where Prolog sits, but the other half of my intuition accepts that the most sophisticated way might be the Dependent Typed \/ Proof Assistant way to go on."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UF2GNRUTV",
        "type": "message",
        "ts": "1568646695.180500",
        "client_msg_id": "4814b175-589e-488b-ae00-19d4507723af",
        "text": "this is great. where can we get the funding to build it? :stuck_out_tongue:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g49320ca20ca",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/649320ca20cacd083cf9225990f990b0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Cedric Cogell",
            "display_name": "cogell",
            "team": "T5TCAFTA9",
            "name": "cedric.cogell",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568644025.172700",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kbmv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this is great. where can we get the funding to build it? "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UF2GNRUTV",
        "type": "message",
        "ts": "1568647103.180900",
        "client_msg_id": "62c41b3f-75b4-4636-9343-94bff38fc54c",
        "text": "epistemology!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g49320ca20ca",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/649320ca20cacd083cf9225990f990b0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Cedric Cogell",
            "display_name": "cogell",
            "team": "T5TCAFTA9",
            "name": "cedric.cogell",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568644207.175000",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZPVH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "epistemology!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1568647110.181100",
        "client_msg_id": "9c44d55e-ced7-4da7-b9f7-a44aeb4888c9",
        "text": "I put this in a recent proposal:\n&gt; Programmers develop a set of heuristics about what code patterns have or have not worked before. They internalize information about these patterns into abstractions, which they then use to reason about programs. These abstractions can differ from programmer to programmer and are often not explicitly known, named, or discussed. When writing code, a programmer isn‚Äôt often thinking in terms of code, but usually in terms of these abstractions. This isn‚Äôt always reliable: combining two abstractions often results in a bigger abstraction with different properties than either of the two abstractions. So in turn, programmers must develop more heuristics about the properties of composed abstractions. Any failure to identify a novel composition, create sound abstractions, or correctly use an abstraction can result in bugs or poor performance. In addition to this complexity of writing code, reading and changing code is usually harder: code doesn‚Äôt show what abstractions the writer was working with when they wrote it or what the impact of a ‚Äúsmall‚Äù change might be.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568644207.175000",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z1rp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I put this in a recent proposal:"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Programmers develop a set of heuristics about what code patterns have or have not worked before. They internalize information about these patterns into abstractions, which they then use to reason about programs. These abstractions can differ from programmer to programmer and are often not explicitly known, named, or discussed. When writing code, a programmer isn‚Äôt often thinking in terms of code, but usually in terms of these abstractions. This isn‚Äôt always reliable: combining two abstractions often results in a bigger abstraction with different properties than either of the two abstractions. So in turn, programmers must develop more heuristics about the properties of composed abstractions. Any failure to identify a novel composition, create sound abstractions, or correctly use an abstraction can result in bugs or poor performance. In addition to this complexity of writing code, reading and changing code is usually harder: code doesn‚Äôt show what abstractions the writer was working with when they wrote it or what the impact of a ‚Äúsmall‚Äù change might be."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5TCAFTD3",
                    "UHWC9PXBL",
                    "UNCP67JSK"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UF2GNRUTV",
        "type": "message",
        "ts": "1568647235.181300",
        "client_msg_id": "3d6df145-67af-42af-acfc-8297f3954c69",
        "text": "Reminds me a little of Peter Naur‚Äôs article ‚ÄúProgramming as Theory Building‚Äù which is near annual read for me now <http:\/\/pages.cs.wisc.edu\/~remzi\/Naur.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g49320ca20ca",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/649320ca20cacd083cf9225990f990b0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Cedric Cogell",
            "display_name": "cogell",
            "team": "T5TCAFTA9",
            "name": "cedric.cogell",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568644207.175000",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8Uuo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reminds me a little of Peter Naur‚Äôs article ‚ÄúProgramming as Theory Building‚Äù which is near annual read for me now "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/pages.cs.wisc.edu\/~remzi\/Naur.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UN57U8V53",
                    "U5TCAFTD3",
                    "UD3AK9JRF"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1568647554.182100",
        "edited": {
            "user": "UN57U8V53",
            "ts": "1568647843.000000"
        },
        "client_msg_id": "47c7f97d-9384-4407-b019-49ba81066f37",
        "text": "In the Computing education research field (CER) they've been doing research into what abstractions people build (usually conception\/misconceptions pairs).  Diana Franklin from University of Chicago won best paper at ICER 2017 for one of the first mappings of these: <https:\/\/dl.acm.org\/citation.cfm?id=3106166>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568644207.175000",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LbSkU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the Computing education research field (CER) they've been doing research into what abstractions people build (usually conception\/misconceptions pairs).  Diana Franklin from University of Chicago won best paper at ICER 2017 for one of the first mappings of these: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/dl.acm.org\/citation.cfm?id=3106166"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1568647768.182300",
        "client_msg_id": "88203f02-1c34-4137-ac26-4706c7a75405",
        "text": "More on this at <http:\/\/everydaycomputing.org\/> if y'all are interested",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568644207.175000",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I\/mC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More on this at "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/everydaycomputing.org\/"
                            },
                            {
                                "type": "text",
                                "text": " if y'all are interested"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1568648012.182600",
        "edited": {
            "user": "UN57U8V53",
            "ts": "1568648034.000000"
        },
        "client_msg_id": "14d2a7c4-e286-41f9-9dea-eb51d5a1da5d",
        "text": "I believe CQL also has an approach to this kind of thing: they generate adjunctions for schema changes given some constraints and relationships",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568641648.161100",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sdiD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I believe CQL also has an approach to this kind of thing: they generate adjunctions for schema changes given some constraints and relationships"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UL3CJ7YKC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1568649643.182900",
        "client_msg_id": "f6e8081c-1dd2-4de7-a7c7-fe5d8288f031",
        "text": "Surely, surely we could mine Github for honest answers to these questions!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568644207.175000",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8EWN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Surely, surely we could mine Github for honest answers to these questions!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNBUFSEKF",
        "type": "message",
        "ts": "1568653304.183600",
        "client_msg_id": "ab602719-331d-4bab-aacf-5700fa7bdb19",
        "text": "<https:\/\/colab.research.google.com\/drive\/1khUaPex-gyk1wXXLuqcopiWmHmcKl4UP>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf20645b16f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f20645b16f3f3a75f2f551bbfd1dffcc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "sandro pasquali",
            "display_name": "sandro pasquali",
            "team": "T5TCAFTA9",
            "name": "spasquali",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Google Colaboratory",
                "title_link": "https:\/\/colab.research.google.com\/drive\/1khUaPex-gyk1wXXLuqcopiWmHmcKl4UP",
                "fallback": "Google Colaboratory",
                "image_url": "https:\/\/colab.research.google.com\/img\/colab_favicon_256px.png",
                "from_url": "https:\/\/colab.research.google.com\/drive\/1khUaPex-gyk1wXXLuqcopiWmHmcKl4UP",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 5500,
                "service_icon": "https:\/\/colab.research.google.com\/img\/favicon.ico?vrz=colab-20190912-085300-RC00_268694941",
                "service_name": "colab.research.google.com",
                "id": 1,
                "original_url": "https:\/\/colab.research.google.com\/drive\/1khUaPex-gyk1wXXLuqcopiWmHmcKl4UP"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T1EF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/colab.research.google.com\/drive\/1khUaPex-gyk1wXXLuqcopiWmHmcKl4UP"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1568653866.185200",
        "client_msg_id": "52bfe864-2869-4d2d-867c-730010ce48c9",
        "text": "Found an interesting package for emacs on a conversation on Reddit about how to make something sort of like scratch within emacs -- this isn't that, but thought the concept was interesting. <https:\/\/github.com\/seanirby\/rainbow-blocks-bg>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568653866.185200",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1568653977.185300",
        "reply_users": [
            "UMQ6LR9NZ"
        ],
        "replies": [
            {
                "user": "UMQ6LR9NZ",
                "ts": "1568653977.185300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vmktz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Found an interesting package for emacs on a conversation on Reddit about how to make something sort of like scratch within emacs -- this isn't that, but thought the concept was interesting. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/seanirby\/rainbow-blocks-bg"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1568653977.185300",
        "client_msg_id": "eb143237-cdfa-4ddb-82cb-627e5e7c4fc6",
        "text": "Also, evidently emacs can display native widgets!? <https:\/\/www.gnu.org\/software\/emacs\/manual\/html_node\/elisp\/Xwidgets.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568653866.185200",
        "parent_user_id": "UMQ6LR9NZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VlqN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, evidently emacs can display native widgets!? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.gnu.org\/software\/emacs\/manual\/html_node\/elisp\/Xwidgets.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1568656852.185800",
        "client_msg_id": "de5bdb23-85bb-4b4d-a5a9-fd8ed8bf442e",
        "text": "Ty, I‚Äôll look it up!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568641648.161100",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "05av5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ty, I‚Äôll look it up!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1568662198.186500",
        "client_msg_id": "77ecd38f-236f-406d-8048-d8031c59ea04",
        "text": "Turns out there are a bunch of more corporate no-code platforms I've never heard of! <https:\/\/www.g2.com\/categories\/no-code-development-platforms>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568662198.186500",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1568673511.192500",
        "reply_users": [
            "UMXUZ97LJ",
            "U5TCAFTD3",
            "UC2A2ARPT"
        ],
        "replies": [
            {
                "user": "UMXUZ97LJ",
                "ts": "1568664053.186900"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1568664101.187300"
            },
            {
                "user": "UMXUZ97LJ",
                "ts": "1568664132.187500"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1568673511.192500"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1568687239.000002",
        "attachments": [
            {
                "service_name": "G2",
                "title": "Best No-Code Development Platforms Software in 2019 | G2",
                "title_link": "https:\/\/www.g2.com\/categories\/no-code-development-platforms",
                "text": "Find the best No-Code Development Platforms Software using real-time, up-to-date data from over 2056 verified user reviews. Read unbiased insights, compare features &amp; see pricing for 76 solutions. Request demos &amp; free trials to discover the right product for your business.",
                "fallback": "G2: Best No-Code Development Platforms Software in 2019 | G2",
                "image_url": "https:\/\/www.g2.com\/assets\/highest_rated_og-27978059e24685a14a3d56440938b3b55ec5fe23239a824482c5fb6c5c8ae61b.png",
                "from_url": "https:\/\/www.g2.com\/categories\/no-code-development-platforms",
                "image_width": 478,
                "image_height": 250,
                "image_bytes": 46201,
                "service_icon": "https:\/\/www.g2.com\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/www.g2.com\/categories\/no-code-development-platforms"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Ex",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Turns out there are a bunch of more corporate no-code platforms I've never heard of! "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.g2.com\/categories\/no-code-development-platforms"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "open_mouth",
                "users": [
                    "UMXUZ97LJ",
                    "UHWC9PXBL"
                ],
                "count": 2
            },
            {
                "name": "grinning",
                "users": [
                    "UHZNB3HRP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMXUZ97LJ",
        "type": "message",
        "ts": "1568664053.186900",
        "edited": {
            "user": "UMXUZ97LJ",
            "ts": "1568664056.000000"
        },
        "client_msg_id": "e1758dc4-aef4-4f69-9b16-6a21dd199425",
        "text": "Here's another one I recently heard about: <https:\/\/www.alteryx.com\/>\n\nThe way I've heard it is used at an unnamed \"big four\" accounting firm is like map reduce for spreadsheets. Where you can create workflows to transform data and get new spreadsheets, which ultimately help those folks file corporate taxes among other things.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2cbc18c8ae90",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-12\/760980944038_2cbc18c8ae90630cd996_72.png",
            "first_name": "",
            "real_name": "Parris",
            "display_name": "Parris",
            "team": "T5TCAFTA9",
            "name": "parris",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568662198.186500",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BzsCu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's another one I recently heard about: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.alteryx.com\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe way I've heard it is used at an unnamed \"big four\" accounting firm is like map reduce for spreadsheets. Where you can create workflows to transform data and get new spreadsheets, which ultimately help those folks file corporate taxes among other things."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1568664101.187300",
        "client_msg_id": "fc69d858-ba99-4552-bd0f-386987bbca2b",
        "text": "Neat! I have to give up trying to know them all. It's infinite!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568662198.186500",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fOX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Neat! I have to give up trying to know them all. It's infinite!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMXUZ97LJ",
        "type": "message",
        "ts": "1568664132.187500",
        "client_msg_id": "823f954d-5f02-4475-ae6e-a0642d310a63",
        "text": "Hah yea, I also didn't realize how big this space was until I joined this community!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2cbc18c8ae90",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-12\/760980944038_2cbc18c8ae90630cd996_72.png",
            "first_name": "",
            "real_name": "Parris",
            "display_name": "Parris",
            "team": "T5TCAFTA9",
            "name": "parris",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568662198.186500",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RadV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hah yea, I also didn't realize how big this space was until I joined this community!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1568666150.188800",
        "client_msg_id": "040F5DDC-5D96-42FA-BC37-900B165BCF58",
        "text": "this eli character should definitely get in this slack",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568644025.172700",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gm6HS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this eli character should definitely get in this slack"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UF2GNRUTV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1568667064.191400",
        "client_msg_id": "8C02221F-C627-4BED-BE33-B6DE861644B5",
        "text": "ah man i feel like i just realized the sheer scope of potential for ast hashing: for example, you could write a function that uses the unison environment to search for a function that transforms its argument‚Äôs datatype into a target one (and i‚Äôm sure the teams aware of this)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568603017.155300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y1=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ah man i feel like i just realized the sheer scope of potential for ast hashing: for example, you could write a function that uses the unison environment to search for a function that transforms its argument‚Äôs datatype into a target one (and i‚Äôm sure the teams aware of this)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1568670299.191800",
        "client_msg_id": "5f8ab951-b1de-496b-b7aa-aac44095b3d0",
        "text": "I am a big fan of empirical evidence. When coupled with solid math underneath you get an unbeatable combination.  I can prove in a series of examples, if one has the time to devote to it, that global mutable state is not only unavoidable (can only be concealed), but that done properly it creates near the minimum word count to express the program. I know them's fighting words, but nobody has been able to disprove it. The lack of a counter-example doesn't prove something is true, but in mathematics they occasionally know something is true long before the proof arrives such as in the 4 color map theorem.\n\nWhen you have had a 100,000 hours of river water flow against your body, you get rounded. I think all of the old practices of careful construction were built in response to painful learning experiences. As my friend Joon says, wisdom comes from experience. Experience comes from making mistakes, which comes from bad judgement.\n\nTesting has limited use, too many people are obsessed with tests, when in reality more time should have been spent making it unbreakable rather than trying to iterate possibilities. Better to spend the time reducing the number of states, than verifying 2^30 possible path combinations.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568644207.175000",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RQNYd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am a big fan of empirical evidence. When coupled with solid math underneath you get an unbeatable combination.  I can prove in a series of examples, if one has the time to devote to it, that global mutable state is not only unavoidable (can only be concealed), but that done properly it creates near the minimum word count to express the program. I know them's fighting words, but nobody has been able to disprove it. The lack of a counter-example doesn't prove something is true, but in mathematics they occasionally know something is true long before the proof arrives such as in the 4 color map theorem.\n\nWhen you have had a 100,000 hours of river water flow against your body, you get rounded. I think all of the old practices of careful construction were built in response to painful learning experiences. As my friend Joon says, wisdom comes from experience. Experience comes from making mistakes, which comes from bad judgement.\n\nTesting has limited use, too many people are obsessed with tests, when in reality more time should have been spent making it unbreakable rather than trying to iterate possibilities. Better to spend the time reducing the number of states, than verifying 2^30 possible path combinations."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1568672443.192000",
        "client_msg_id": "61dc98b4-4581-4229-856f-b7725caaa4dc",
        "text": "Sounds like hoogle? You can search by function signature. BTW Squean and Pharo also have 'search by example' (<https:\/\/wiki.squeak.org\/squeak\/1916>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568603017.155300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sPghz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sounds like hoogle? You can search by function signature. BTW Squean and Pharo also have 'search by example' ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/wiki.squeak.org\/squeak\/1916"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1568672581.192200",
        "client_msg_id": "a858ffa8-4341-4566-bc1a-25f5e5735677",
        "text": "With AST hashing you'd need the exact hash (or the exact source code that produced the hash) to search by hash? Or am I missing something\/",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568603017.155300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vxw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "With AST hashing you'd need the exact hash (or the exact source code that produced the hash) to search by hash? Or am I missing something\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1568673511.192500",
        "client_msg_id": "0cb2c7cb-71fc-4628-8604-ba319156fc37",
        "text": "\"MapReduce for spreadsheets\" is a fantastic elevator pitch.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568662198.186500",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n48a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"MapReduce for spreadsheets\" is a fantastic elevator pitch."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "laughing",
                "users": [
                    "U9C92716C"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1568673627.194500",
        "client_msg_id": "1416b972-c956-4b70-acd1-b8feac35d7ec",
        "text": "<@U6BRN7A0Y> where's the best place to send feedback for darklang? do you have a subreddit? looks great! I finally \"get it\". would love to recommend this instead of firebase\/lambdas\/gcf\/etc.....my nits are on the language and if you might be able to make some slight changes to the keywords to follow the paradigm of \"voice driven development\" (so ditch underscores, quotation marks, etc)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568673627.194500",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1568687931.195700",
        "reply_users": [
            "U6BRN7A0Y",
            "UMVFWPZ36"
        ],
        "replies": [
            {
                "user": "U6BRN7A0Y",
                "ts": "1568677844.195000"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1568687845.195300"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1568687904.195500"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1568687931.195700"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1568887428.000917",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Nu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U6BRN7A0Y"
                            },
                            {
                                "type": "text",
                                "text": " where's the best place to send feedback for darklang? do you have a subreddit? looks great! I finally \"get it\". would love to recommend this instead of firebase\/lambdas\/gcf\/etc.....my nits are on the language and if you might be able to make some slight changes to the keywords to follow the paradigm of \"voice driven development\" (so ditch underscores, quotation marks, etc)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1568673922.194900",
        "client_msg_id": "c6c0cf39-e67a-484f-aa07-df7d1555632d",
        "text": "(whoops! just saw the thread on <#CCL5VVBAN|share-your-work> )....still learning slac",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nMt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(whoops! just saw the thread on "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CCL5VVBAN"
                            },
                            {
                                "type": "text",
                                "text": " )....still learning slac"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6BRN7A0Y",
        "type": "message",
        "ts": "1568677844.195000",
        "client_msg_id": "3853b62e-0213-49b5-b516-adc0e4a4b792",
        "text": "haven‚Äôt heard of voice driven development before",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gee6ec3be3e3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eee6ec3be3e3176ff1e1119301630812.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Paul",
            "real_name": "Paul Biggar",
            "display_name": "pbiggar",
            "team": "T5TCAFTA9",
            "name": "pbiggar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568673627.194500",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I2lE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "haven‚Äôt heard of voice driven development before"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1568687845.195300",
        "client_msg_id": "1961959c-a5df-4727-b3f7-ce6190718ddd",
        "text": "i just heard the term \"voice driven development\" from a strangeloop talk <@U5TCAFTD3>  posted....but we've been following that paradigm for our new languages- stick to words and not syntax characters whenever possible so you could in theory dictate a program quite naturally, and it seems to be a good trend....if you assume an advanced editor, then the keystroke savings you get from using punctuation disappear (because of autocomplete, for example) and readability and accessibility and maintability increase",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568673627.194500",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GJwc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i just heard the term \"voice driven development\" from a strangeloop talk "
                            },
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": "  posted....but we've been following that paradigm for our new languages- stick to words and not syntax characters whenever possible so you could in theory dictate a program quite naturally, and it seems to be a good trend....if you assume an advanced editor, then the keystroke savings you get from using punctuation disappear (because of autocomplete, for example) and readability and accessibility and maintability increase"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1568687904.195500",
        "client_msg_id": "0ab71dc7-f0d8-4d64-9dd7-c4fabc8844bd",
        "text": "phonemes compose well but ;@#{[\"'` do not compose",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568673627.194500",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CsOal",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "phonemes compose well but ;@#{[\"'` do not compose"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1568687931.195700",
        "client_msg_id": "b666b77e-1f73-4ca1-a3bc-7497a52fd8d2",
        "text": "but those are a necessary evil if your tooling isn't advanced",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568673627.194500",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MDON",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but those are a necessary evil if your tooling isn't advanced"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]