[
    {
        "user": "U04MAEU6VHN",
        "type": "message",
        "ts": "1675515922.114959",
        "client_msg_id": "09831bf8-d90c-4a53-83e4-6202e4f210cb",
        "text": "Oh fascinating, thanks for the details response! So these nondeterministic event windows; do they pick a single rule to evaluate at random? Or do they evaluate all available rules? And is it critical that the window be a fixed size, or could it adapt to the size of the largest rule?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43e7ef32ef6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-01-25\/4713451001249_43e7ef32ef6c84455dbd_72.jpg",
            "first_name": "Jared",
            "real_name": "Jared Forsyth",
            "display_name": "Jared Forsyth",
            "team": "T5TCAFTA9",
            "name": "jabapyth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675409540.909829",
        "parent_user_id": "U03R0B9U1GD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lGb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh fascinating, thanks for the details response! So these nondeterministic event windows; do they pick a single rule to evaluate at random? Or do they evaluate all available rules? And is it critical that the window be a fixed size, or could it adapt to the size of the largest rule?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04MAEU6VHN",
        "type": "message",
        "ts": "1675516027.231629",
        "client_msg_id": "1e713ccc-37c7-4aba-9ae8-288c89adfc95",
        "text": "(I see movable feast has some papers written,I can just go read those as well)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43e7ef32ef6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-01-25\/4713451001249_43e7ef32ef6c84455dbd_72.jpg",
            "first_name": "Jared",
            "real_name": "Jared Forsyth",
            "display_name": "Jared Forsyth",
            "team": "T5TCAFTA9",
            "name": "jabapyth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675409540.909829",
        "parent_user_id": "U03R0B9U1GD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZVOAn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(I see movable feast has some papers written,I can just go read those as well)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04MAEU6VHN",
        "type": "message",
        "ts": "1675516215.638109",
        "client_msg_id": "434757f1-8d66-411a-b507-c11273d4faa9",
        "text": "In the London creative coding video, say at one point that cell splitting was a big leap forward, because it allowed you to encode direction, which was difficult before. How is it different from encoding direction as a color (blue goes up, red goes down) or pairs of colors in a non-split grid? (For that matter, I bet split grids make event windows quite complicated :sweat_smile:)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43e7ef32ef6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-01-25\/4713451001249_43e7ef32ef6c84455dbd_72.jpg",
            "first_name": "Jared",
            "real_name": "Jared Forsyth",
            "display_name": "Jared Forsyth",
            "team": "T5TCAFTA9",
            "name": "jabapyth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675409540.909829",
        "parent_user_id": "U03R0B9U1GD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z3o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the London creative coding video, say at one point that cell splitting was a big leap forward, because it allowed you to encode direction, which was difficult before. How is it different from encoding direction as a color (blue goes up, red goes down) or pairs of colors in a non-split grid? (For that matter, I bet split grids make event windows quite complicated "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03R0B9U1GD",
        "type": "message",
        "ts": "1675519085.030009",
        "client_msg_id": "efe6e44d-ff14-41d6-8b7f-10ebf6ff931c",
        "text": "So, in CellPond, I was hoping to do this:\n1. Pick a random position (within the 0.0 -&gt; 1.0 range of x and y)\n2. Apply a random rule (if it matches).\nHowever, for some performance reasons, it actually does this:\n1. Pick a random position.\n2. Shuffle all rules.\n3. Apply the first rule that matches.\nThe 'variable event window size' was a key new thing for the engine to do! The Moveable Feast Machine (MFM) has a fixed diamond-shaped window. SandPond has a square shaped one.\n\nCellPond needs to be flexible. The way it gets around this is...\nWhen you make a rule with the drag-and-drop interface, it actually gets compiled down into multiple rules -- one for each cell in the diagram silhouette.\n\nThe classic sand rule...\n:large_yellow_square::arrow_right::black_large_square:\n:black_large_square::arrow_right::large_yellow_square:\n\n... would produce two rules on the virtual machine.\nOne where the top cell (yellow) is the 'center\/origin' of the event window. And one where the bottom cell (black) is the origin.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "78c476adad42",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-26\/3992499177765_78c476adad42ab6cfe32_72.png",
            "first_name": "Lu",
            "real_name": "Lu Wilson",
            "display_name": "TodePond",
            "team": "T5TCAFTA9",
            "name": "l2wilson94",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675409540.909829",
        "parent_user_id": "U03R0B9U1GD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QvQA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So, in CellPond, I was hoping to do this:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Pick a random position (within the 0.0 -> 1.0 range of x and y)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Apply a random rule (if it matches)."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nHowever, for some performance reasons, it actually does this:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Pick a random position."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Shuffle all rules."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Apply the first rule that matches."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThe 'variable event window size' was a key new thing for the engine to do! The Moveable Feast Machine (MFM) has a fixed diamond-shaped window. SandPond has a square shaped one.\n\nCellPond needs to be flexible. The way it gets around this is...\nWhen you make a rule with the drag-and-drop interface, it actually gets compiled down into multiple rules -- one for each cell in the diagram silhouette.\n\nThe classic sand rule...\n"
                            },
                            {
                                "type": "emoji",
                                "name": "large_yellow_square",
                                "unicode": "1f7e8"
                            },
                            {
                                "type": "emoji",
                                "name": "arrow_right",
                                "unicode": "27a1-fe0f"
                            },
                            {
                                "type": "emoji",
                                "name": "black_large_square",
                                "unicode": "2b1b"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "emoji",
                                "name": "black_large_square",
                                "unicode": "2b1b"
                            },
                            {
                                "type": "emoji",
                                "name": "arrow_right",
                                "unicode": "27a1-fe0f"
                            },
                            {
                                "type": "emoji",
                                "name": "large_yellow_square",
                                "unicode": "1f7e8"
                            },
                            {
                                "type": "text",
                                "text": "\n\n... would produce two rules on the virtual machine.\nOne where the top cell (yellow) is the 'center\/origin' of the event window. And one where the bottom cell (black) is the origin."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03R0B9U1GD",
        "type": "message",
        "ts": "1675519590.646779",
        "client_msg_id": "1ee6bbb1-28b8-42e6-924a-8a2f7c2e0884",
        "text": "Regarding the encoded direction... You certainly could encode direction as colour! And I did it a lot in <https:\/\/youtu.be\/2qfjJ-0ZeVM|this video>!\n\nHowever, this isn't a very useful abstraction when it comes to writing rules. You'd need a rule for moving up, a rule for moving down, and so on.\n\nBy encoding direction as a spatial relationship, we can just make one rule: Move 'forward'.\n\nOther examples of this include:\nUsing a split cell where one cell indicates an element type, and the other cell indicates its temperature. You could make water that heats up and does something (eg: freeze\/evaporate) when it hits a certain temperaure.\n\nCold water\n:large_blue_square:\n:white_large_square:\n\nHot water\n:large_blue_square:\n:black_large_square:\n\nTepid water\n:large_blue_square:\n(grey)\n\nIt's nice that it lets you 'quote' extra data in a way! We can use the black colour to mean temperature when attached with a blue cell, but it might mean different things in other places.\n\nYou could use a similar thing to make the 'demon horde sort' that Dave Ackley uses to exemplify the MFM too by the way!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "78c476adad42",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-26\/3992499177765_78c476adad42ab6cfe32_72.png",
            "first_name": "Lu",
            "real_name": "Lu Wilson",
            "display_name": "TodePond",
            "team": "T5TCAFTA9",
            "name": "l2wilson94",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675409540.909829",
        "parent_user_id": "U03R0B9U1GD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dwA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regarding the encoded direction... You certainly could encode direction as colour! And I did it a lot in "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/2qfjJ-0ZeVM",
                                "text": "this video"
                            },
                            {
                                "type": "text",
                                "text": "!\n\nHowever, this isn't a very useful abstraction when it comes to writing rules. You'd need a rule for moving up, a rule for moving down, and so on.\n\nBy encoding direction as a spatial relationship, we can just make one rule: Move 'forward'.\n\nOther examples of this include:\nUsing a split cell where one cell indicates an element type, and the other cell indicates its temperature. You could make water that heats up and does something (eg: freeze\/evaporate) when it hits a certain temperaure.\n\nCold water\n"
                            },
                            {
                                "type": "emoji",
                                "name": "large_blue_square",
                                "unicode": "1f7e6"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "emoji",
                                "name": "white_large_square",
                                "unicode": "2b1c"
                            },
                            {
                                "type": "text",
                                "text": "\n\nHot water\n"
                            },
                            {
                                "type": "emoji",
                                "name": "large_blue_square",
                                "unicode": "1f7e6"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "emoji",
                                "name": "black_large_square",
                                "unicode": "2b1b"
                            },
                            {
                                "type": "text",
                                "text": "\n\nTepid water\n"
                            },
                            {
                                "type": "emoji",
                                "name": "large_blue_square",
                                "unicode": "1f7e6"
                            },
                            {
                                "type": "text",
                                "text": "\n(grey)\n\nIt's nice that it lets you 'quote' extra data in a way! We can use the black colour to mean temperature when attached with a blue cell, but it might mean different things in other places.\n\nYou could use a similar thing to make the 'demon horde sort' that Dave Ackley uses to exemplify the MFM too by the way!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04MAEU6VHN",
        "type": "message",
        "ts": "1675519808.058539",
        "client_msg_id": "471d75c9-fa3d-46c2-9ee7-25b14d54c711",
        "text": "hmm yeah that's neat! I wonder how it would be to have one (or several!) \"hidden\" or \"background\" layers for metadata, and rules that could take them into account, but the fore-most layer is the one that gets rendered :thinking_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43e7ef32ef6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-01-25\/4713451001249_43e7ef32ef6c84455dbd_72.jpg",
            "first_name": "Jared",
            "real_name": "Jared Forsyth",
            "display_name": "Jared Forsyth",
            "team": "T5TCAFTA9",
            "name": "jabapyth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675409540.909829",
        "parent_user_id": "U03R0B9U1GD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0sp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "hmm yeah that's neat! I wonder how it would be to have one (or several!) \"hidden\" or \"background\" layers for metadata, and rules that could take them into account, but the fore-most layer is the one that gets rendered "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03R0B9U1GD",
        "type": "message",
        "ts": "1675519902.698449",
        "client_msg_id": "729aee2f-a3ec-4363-b1bd-5501294a4452",
        "text": "Yes that would be great to try out! I was originally planning for every cell to be controlled by its own mini 9x9 cellular automata world, and the middle cell was the only one that got rendered when zoomed out. But when I started trying it out, I got tempted by the dynamic splitting\/merging idea :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "78c476adad42",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-26\/3992499177765_78c476adad42ab6cfe32_72.png",
            "first_name": "Lu",
            "real_name": "Lu Wilson",
            "display_name": "TodePond",
            "team": "T5TCAFTA9",
            "name": "l2wilson94",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675409540.909829",
        "parent_user_id": "U03R0B9U1GD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lw6xr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes that would be great to try out! I was originally planning for every cell to be controlled by its own mini 9x9 cellular automata world, and the middle cell was the only one that got rendered when zoomed out. But when I started trying it out, I got tempted by the dynamic splitting\/merging idea "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "U04MAEU6VHN"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1675528911.846879",
        "client_msg_id": "2f9218a0-22ef-411d-aa07-11f4968d9c40",
        "text": "Very interesting. I had no idea how large the influence of Dave Ackley and his MFM was here.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675409540.909829",
        "parent_user_id": "U03R0B9U1GD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qFEAW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very interesting. I had no idea how large the influence of Dave Ackley and his MFM was here."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03R0B9U1GD"
                ],
                "count": 1
            }
        ]
    }
]