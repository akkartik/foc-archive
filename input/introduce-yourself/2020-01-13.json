[
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1578919731.088400",
        "client_msg_id": "648349c9-0cef-4cb2-b513-f5b7cd248868",
        "text": "I agree with <@UEQ6M68H0> but I like the concept and can totally see how it can be useful in some cases. However, please consider redesigning the learn page (<https:\/\/www.operon.io\/learn>) as it is not very easy to follow.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578821833.086600",
        "parent_user_id": "USJSL2NVB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GhBpS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree with "
                            },
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " but I like the concept and can totally see how it can be useful in some cases. However, please consider redesigning the learn page ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.operon.io\/learn"
                            },
                            {
                                "type": "text",
                                "text": ") as it is not very easy to follow."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USJSL2NVB",
        "type": "message",
        "ts": "1578930008.089100",
        "client_msg_id": "cadc3443-ec51-4313-81e7-e689046268c8",
        "text": "Thanks for your feedback! I'm just starting out with the website and will definitely improve the documentation in the upcoming months (just took out the 1000+ unit tests and am scratching my head how to start organizing them into documentation :-D ).\n\nBut yes, querying and transforming JSON is the core of Operon's functionality. There's still more, as it supports components for both reading data-sources and writing to them (integrations). Below is an example of such functionality, using \"timer\" and \"file\" -components.\n\n`# Generate a random-number every 5 seconds`\n`# and write it into file.`\n`From`\n  `timer:test {`\n    `\"cron\": \"0\/5 * * * * ?\"`\n  `}`\n\n`Select`\n  `=&gt; random:Number()`\n\n  `-&gt; file:local {`\n    `\"path\": \"\/tmp\",`\n    `\"fileName\": \"random.dat\"`\n  `}`",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g05e50ce40a3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/05e50ce40a353aa043e7846eaa6745df.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "OperonGuy",
            "real_name": "OperonGuy",
            "display_name": "OperonGuy",
            "team": "T5TCAFTA9",
            "name": "tuomas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578821833.086600",
        "parent_user_id": "USJSL2NVB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gG11",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for your feedback! I'm just starting out with the website and will definitely improve the documentation in the upcoming months (just took out the 1000+ unit tests and am scratching my head how to start organizing them into documentation :-D ).\n\nBut yes, querying and transforming JSON is the core of Operon's functionality. There's still more, as it supports components for both reading data-sources and writing to them (integrations). Below is an example of such functionality, using \"timer\" and \"file\" -components.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "# Generate a random-number every 5 seconds",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "# and write it into file.",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "From",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "  timer:test {",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    \"cron\": \"0\/5 * * * * ?\"",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "  }",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Select",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "  => random:Number()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "  -> file:local {",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    \"path\": \"\/tmp\",",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    \"fileName\": \"random.dat\"",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "  }",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "URV7B2542",
        "type": "message",
        "ts": "1578960710.091700",
        "edited": {
            "user": "URV7B2542",
            "ts": "1578960731.000000"
        },
        "client_msg_id": "1d14c1db-f4c7-4a5d-bdcc-9b8c54d2df1a",
        "text": "hey all! been lurking here for a week or two now. this looks like a very cool interesting community. i come from toronto, i've worked 5 years at a few tech companies and i'm excited to delve into and explore why the state of web development and software development is currently the way it is",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4fac751c855",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/4fac751c8553a13462093f0ff7d3edf1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "",
            "real_name": "Matt",
            "display_name": "Matt",
            "team": "T5TCAFTA9",
            "name": "mattvleming",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zMbN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "hey all! been lurking here for a week or two now. this looks like a very cool interesting community. i come from toronto, i've worked 5 years at a few tech companies and i'm excited to delve into and explore why the state of web development and software development is currently the way it is"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "US6TKS2HW",
                    "UC2A2ARPT",
                    "UMVFWPZ36",
                    "U8A5MS6R1",
                    "UR482RFPY",
                    "USJSL2NVB",
                    "UFLN9JFRT",
                    "UJBAJNFLK",
                    "USCSC4JF2",
                    "UJ6LDMMN0",
                    "UDRQ4V0CT",
                    "UHWC9PXBL",
                    "UCKRZS3DZ",
                    "U5TCAFTD3"
                ],
                "count": 14
            }
        ]
    },
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1578980955.092900",
        "client_msg_id": "a99aaeb4-9ebc-4bd8-9918-282ba466f2fa",
        "text": "Nice!  How does Opteron compare to something like KamelK? <https:\/\/github.com\/apache\/camel-k>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578821833.086600",
        "parent_user_id": "USJSL2NVB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RCQf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice!  How does Opteron compare to something like KamelK? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/apache\/camel-k"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USJSL2NVB",
        "type": "message",
        "ts": "1578984878.093100",
        "client_msg_id": "3dbe3770-24b0-4d51-9145-bb28c2ad9ce2",
        "text": "Hi, and thanks :slightly_smiling_face: Operon is heavily influenced by Camel and XQuery. I've been using Camel for 7 years. Haven't tested Camel-K yet, but the route-building logic seems to be the same. Operon has the same premise as Camel-K; get rid of all the boilerplate, and focus on what matters, i.e. into the routing the data.\n\nBasically Operon has similar concepts that Camel has for building flows, but the data processing is nearer to XQuery's capabilities, while trying to make it leaner and better suited for today's microservices.\n\nMy main pain point with Camel has been that transforming data has been too tedious. Operon can fix this for JSON-data: I (or someone else) could e.g. build camel-operon -component, i.e. Operon could be used from Camel routes to transform data (jsonpath simply isn't enough, and other scripting languages are too verbose). However, the goal is to be able to use Operon as a standalone service for both integrations and data transformations, whenever possible. For this purpose a bunch of components has to builded, and for this task I will definitely need as much help as possible.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g05e50ce40a3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/05e50ce40a353aa043e7846eaa6745df.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "OperonGuy",
            "real_name": "OperonGuy",
            "display_name": "OperonGuy",
            "team": "T5TCAFTA9",
            "name": "tuomas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578821833.086600",
        "parent_user_id": "USJSL2NVB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1G3Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi, and thanks "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " Operon is heavily influenced by Camel and XQuery. I've been using Camel for 7 years. Haven't tested Camel-K yet, but the route-building logic seems to be the same. Operon has the same premise as Camel-K; get rid of all the boilerplate, and focus on what matters, i.e. into the routing the data.\n\nBasically Operon has similar concepts that Camel has for building flows, but the data processing is nearer to XQuery's capabilities, while trying to make it leaner and better suited for today's microservices.\n\nMy main pain point with Camel has been that transforming data has been too tedious. Operon can fix this for JSON-data: I (or someone else) could e.g. build camel-operon -component, i.e. Operon could be used from Camel routes to transform data (jsonpath simply isn't enough, and other scripting languages are too verbose). However, the goal is to be able to use Operon as a standalone service for both integrations and data transformations, whenever possible. For this purpose a bunch of components has to builded, and for this task I will definitely need as much help as possible."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1578985994.093300",
        "edited": {
            "user": "UFLN9JFRT",
            "ts": "1578986327.000000"
        },
        "client_msg_id": "ffc20c0f-0c68-482b-a4f4-488ae4ec08a8",
        "text": "very cool! I should be meeting the guy who made Kamel K hopefully this week (as he is my colleague at work) so I'll show Operon to him and see if it could be something useful for us too!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578821833.086600",
        "parent_user_id": "USJSL2NVB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FDU1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "very cool! I should be meeting the guy who made Kamel K hopefully this week (as he is my colleague at work) so I'll show Operon to him and see if it could be something useful for us too!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USJSL2NVB",
        "type": "message",
        "ts": "1578988151.093600",
        "client_msg_id": "3998c50a-75cf-4eb6-87d3-7364456e1a2b",
        "text": "Super! Yesterday I uploaded the raw unit-tests, which can be found here: \"<https:\/\/github.com\/operon-io\/operon.io-documentation\/releases\/download\/0.0.1\/operon-tests.pdf>\". That could be used to check if you find Operon interesting. As of now I don't have better documentation, but that will keep improving :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g05e50ce40a3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/05e50ce40a353aa043e7846eaa6745df.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "OperonGuy",
            "real_name": "OperonGuy",
            "display_name": "OperonGuy",
            "team": "T5TCAFTA9",
            "name": "tuomas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578821833.086600",
        "parent_user_id": "USJSL2NVB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4y3Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Super! Yesterday I uploaded the raw unit-tests, which can be found here: \""
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/operon-io\/operon.io-documentation\/releases\/download\/0.0.1\/operon-tests.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\". That could be used to check if you find Operon interesting. As of now I don't have better documentation, but that will keep improving "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]