[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1641459983.000600",
        "client_msg_id": "688fe2b9-76a8-4b0a-9dcf-8f26cef1bd7f",
        "text": "I built a prototype of a thing like this in 2010. The main problems with adoption were: app devs aren't interested in building for a platform without users, and users aren't interested in signing up for a service unless it has a killer app. Do you have any plans to overcome this trap?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q8DG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I built a prototype of a thing like this in 2010. The main problems with adoption were: app devs aren't interested in building for a platform without users, and users aren't interested in signing up for a service unless it has a killer app. Do you have any plans to overcome this trap?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02C3SH9L2J",
        "type": "message",
        "ts": "1641478803.000800",
        "client_msg_id": "28812e5c-6e94-45a6-8c45-6ce44f632fd9",
        "text": "<@U013ZLJARC7> yeah that’s exactly right and easily the biggest risk in building something like this. I think it’s going to be very difficult to overcome no matter what. But we’re trying a couple things:\n\nFirst, we’re prioritizing getting Aspen in to the hands of people that are both devs _and_ users (like the lovely folks in this community!) so we can all build apps for ourselves and each other.\n\nSecond, while we probably won’t directly come up with the killer app on our own, we’re working really hard to provide the right tools and complementary API’s for the developer or designer who does have the brilliant idea. For example, we’ve noticed a lot of really cool productivity apps like Superhuman or Cron, are primarily innovating on the frontend. So we’re trying to provide robust, canonical agent (i.e. backend) implementations of common API’s like calendar, messaging, documents, etc. This way if someone has a great idea for an app, they can skip all the of the tedious authentication, authorization, db management, token management, etc and just build the frontend of their dreams. Same goes for backend devs who don’t want to bother with a frontend: they can just build and upload an agent for others to use from the terminal or connect to their own frontend.\n\nIt’s going to be a challenge but we’re very committed to our mission and will spend whatever time and effort it takes to polish the UI, refine the API,  and support the developers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "c32c2c4d6375",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-06-21\/5459215329909_c32c2c4d6375f7ce1819_72.png",
            "first_name": "Matthew",
            "real_name": "Matthew Linkous",
            "display_name": "Matthew Linkous",
            "team": "T5TCAFTA9",
            "name": "matt386",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ruWmG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " yeah that’s exactly right and easily the biggest risk in building something like this. I think it’s going to be very difficult to overcome no matter what. But we’re trying a couple things:\n\nFirst, we’re prioritizing getting Aspen in to the hands of people that are both devs "
                            },
                            {
                                "type": "text",
                                "text": "and",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " users (like the lovely folks in this community!) so we can all build apps for ourselves and each other.\n\nSecond, while we probably won’t directly come up with the killer app on our own, we’re working really hard to provide the right tools and complementary API’s for the developer or designer who does have the brilliant idea. For example, we’ve noticed a lot of really cool productivity apps like Superhuman or Cron, are primarily innovating on the frontend. So we’re trying to provide robust, canonical agent (i.e. backend) implementations of common API’s like calendar, messaging, documents, etc. This way if someone has a great idea for an app, they can skip all the of the tedious authentication, authorization, db management, token management, etc and just build the frontend of their dreams. Same goes for backend devs who don’t want to bother with a frontend: they can just build and upload an agent for others to use from the terminal or connect to their own frontend.\n\nIt’s going to be a challenge but we’re very committed to our mission and will spend whatever time and effort it takes to polish the UI, refine the API,  and support the developers."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02C3SH9L2J",
        "type": "message",
        "ts": "1641479486.001000",
        "client_msg_id": "4175c8d5-81a8-48be-857c-a923013e24d1",
        "text": "<@U02NN5F35L1> yeah that’s pretty much it. We’re working on a more detailed overview with explainer graphics to fully illustrate how persistence works. But the main way to persist data is to store events on an append-only log. It’s not a static file but we inject a runtime object into the agents code so they can call methods like `pushEvent` and create projections of the data through aggregations. If you’ve used Redux, it’s a very similar pattern except in Aspen it runs on the server and is automatically persisted.\n\nHere is an example of a task manager agent I made: <https:\/\/github.com\/matlin\/todos-backend\/blob\/main\/src\/index.ts>\nDisclaimer: some of these API’s will very likely change",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "c32c2c4d6375",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-06-21\/5459215329909_c32c2c4d6375f7ce1819_72.png",
            "first_name": "Matthew",
            "real_name": "Matthew Linkous",
            "display_name": "Matthew Linkous",
            "team": "T5TCAFTA9",
            "name": "matt386",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J",
        "attachments": [
            {
                "from_url": "https:\/\/github.com\/matlin\/todos-backend\/blob\/main\/src\/index.ts",
                "image_url": "https:\/\/opengraph.githubassets.com\/b62f938c8fc88d6cda8c23cc05993bf61a968ab0385cf20c8b6cded7b1f6c8d8\/matlin\/todos-backend",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 128867,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/matlin\/todos-backend\/blob\/main\/src\/index.ts",
                "fallback": "GitHub: todos-backend\/index.ts at main · matlin\/todos-backend",
                "text": "Simple Todo List Agent for Aspen PC. Contribute to matlin\/todos-backend development by creating an account on GitHub.",
                "title": "todos-backend\/index.ts at main · matlin\/todos-backend",
                "title_link": "https:\/\/github.com\/matlin\/todos-backend\/blob\/main\/src\/index.ts",
                "service_name": "GitHub"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kFed1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02NN5F35L1"
                            },
                            {
                                "type": "text",
                                "text": " yeah that’s pretty much it. We’re working on a more detailed overview with explainer graphics to fully illustrate how persistence works. But the main way to persist data is to store events on an append-only log. It’s not a static file but we inject a runtime object into the agents code so they can call methods like "
                            },
                            {
                                "type": "text",
                                "text": "pushEvent",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and create projections of the data through aggregations. If you’ve used Redux, it’s a very similar pattern except in Aspen it runs on the server and is automatically persisted.\n\nHere is an example of a task manager agent I made: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/matlin\/todos-backend\/blob\/main\/src\/index.ts"
                            },
                            {
                                "type": "text",
                                "text": "\nDisclaimer: some of these API’s will very likely change"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02C3SH9L2J",
        "type": "message",
        "ts": "1641479604.001300",
        "client_msg_id": "d6e7c444-529a-4152-8a94-d58da1321548",
        "text": "The main thing to note with that example agent is that it’s a complete backend for multi-tenant, multi-list task manager all in ~100 lines of Typescript",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "c32c2c4d6375",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-06-21\/5459215329909_c32c2c4d6375f7ce1819_72.png",
            "first_name": "Matthew",
            "real_name": "Matthew Linkous",
            "display_name": "Matthew Linkous",
            "team": "T5TCAFTA9",
            "name": "matt386",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QkUw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The main thing to note with that example agent is that it’s a complete backend for multi-tenant, multi-list task manager all in ~100 lines of Typescript"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02NN5F35L1",
        "type": "message",
        "ts": "1641484665.001500",
        "client_msg_id": "566aa62c-d269-4722-9361-372f567a0356",
        "text": "Nice! I haven’t worked with Redux, but I have worked with XState, which also combines all logic in one massive object.\n\nWill be interested to read that overview of your persistence implementation details. In particular, timing and syncing events. Martin Kleppmann’s Designing Data-Intensive Applications had some interesting discussion of this, but I’m sure you know that one already!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e1a019c028c1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-22\/2770197337937_e1a019c028c176591195_72.jpg",
            "first_name": "Andy",
            "real_name": "Andy Jakubowski",
            "display_name": "Andy Jakubowski",
            "team": "T5TCAFTA9",
            "name": "hello545",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ljLG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice! I haven’t worked with Redux, but I have worked with XState, which also combines all logic in one massive object.\n\nWill be interested to read that overview of your persistence implementation details. In particular, timing and syncing events. Martin Kleppmann’s Designing Data-Intensive Applications had some interesting discussion of this, but I’m sure you know that one already!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02C3SH9L2J",
        "type": "message",
        "ts": "1641508317.001700",
        "client_msg_id": "1b79298a-2c69-459e-a16d-37555519d095",
        "text": "Martin’s work is definitely a big influence. Currently everything is serialized on the server but this obviously doesn’t scale in terms of latency from the client so we have an implementation that acts mostly like a CRDT that we’ll share more details on in the future!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "c32c2c4d6375",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-06-21\/5459215329909_c32c2c4d6375f7ce1819_72.png",
            "first_name": "Matthew",
            "real_name": "Matthew Linkous",
            "display_name": "Matthew Linkous",
            "team": "T5TCAFTA9",
            "name": "matt386",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lwu6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Martin’s work is definitely a big influence. Currently everything is serialized on the server but this obviously doesn’t scale in terms of latency from the client so we have an implementation that acts mostly like a CRDT that we’ll share more details on in the future!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]