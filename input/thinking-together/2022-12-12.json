[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1670834368.735079",
        "client_msg_id": "1c3fcd36-95ae-4f8b-a457-7071d9235df1",
        "text": "Indeed, it was the same set of things Kay writes about and <@U03CEGR3HSL> enumerated. The feedback loop from experiment to observation to understanding is so much faster in a computational medium that you can learn (and thus do) things that would otherwise be extremely difficult\/impossible. One of the reasons I champion interactive programming to anyone who will listen is that I've found this to be true throughout my life in a wide variety of situations.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1670711298.043479",
        "parent_user_id": "U02028JHX37",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NuG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Indeed, it was the same set of things Kay writes about and "
                            },
                            {
                                "type": "user",
                                "user_id": "U03CEGR3HSL"
                            },
                            {
                                "type": "text",
                                "text": " enumerated. The feedback loop from experiment to observation to understanding is so much faster in a computational medium that you can learn (and thus do) things that would otherwise be extremely difficult\/impossible. One of the reasons I champion interactive programming to anyone who will listen is that I've found this to be true throughout my life in a wide variety of situations."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02028JHX37",
        "type": "message",
        "ts": "1670836396.935489",
        "client_msg_id": "62289399-3943-45ec-bd65-57ee8a478338",
        "text": "<@U013ZLJARC7>  <@U03CEGR3HSL> I suspected that, too, but was curious to see if this was indeed the perfect example of Dunning-Kruger. A second-order difference equation is nowhere near \"re-invented calculus from scratch\". (Worth noting that calculus didn't take Newton a lifetime, maybe read up on it?)\n\nAlso, simulating free fall in homogeneous field does not make you \"understand differential equations\".\n\n<@UA14TGLTC>  Actually, you do learn about dampening in an intro class (even in an intro class for pure mathematicians).\n\nYou also learn about resonance (damped and driven oscillator), which I don't imagine you can discover by playing around, due to it being dependent on a critical value of a combination of the input parameters (a certain multiple of the driving frequency, dampening rate and intrinsic frequency). Despite what e.g. Bret Victor says, I'm not convinced that much understanding can come from simulations alone, without actually studying the models (equations, which are much nicer to study than computer code).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdf13e3ce9df",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/df13e3ce9dfc39e2f387bd3d6e87b952.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jan Ruzicka",
            "display_name": "Jan Ruzicka",
            "team": "T5TCAFTA9",
            "name": "jan.ruzicka01",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1670711298.043479",
        "parent_user_id": "U02028JHX37",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ts+Fq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": "  "
                            },
                            {
                                "type": "user",
                                "user_id": "U03CEGR3HSL"
                            },
                            {
                                "type": "text",
                                "text": " I suspected that, too, but was curious to see if this was indeed the perfect example of Dunning-Kruger. A second-order difference equation is nowhere near \"re-invented calculus from scratch\". (Worth noting that calculus didn't take Newton a lifetime, maybe read up on it?)\n\nAlso, simulating free fall in homogeneous field does not make you \"understand differential equations\".\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": "  Actually, you do learn about dampening in an intro class (even in an intro class for pure mathematicians).\n\nYou also learn about resonance (damped and driven oscillator), which I don't imagine you can discover by playing around, due to it being dependent on a critical value of a combination of the input parameters (a certain multiple of the driving frequency, dampening rate and intrinsic frequency). Despite what e.g. Bret Victor says, I'm not convinced that much understanding can come from simulations alone, without actually studying the models (equations, which are much nicer to study than computer code)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1670843909.427699",
        "client_msg_id": "467ebe09-2a88-40e6-a9c5-407c7ac7286c",
        "text": "Well, we at least agree that there's some Dunning-Kruger going on in this conversation :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1670711298.043479",
        "parent_user_id": "U02028JHX37",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nAp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, we at least agree that there's some Dunning-Kruger going on in this conversation "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1670848486.238359",
        "client_msg_id": "84deccb9-f6bf-4971-8296-ab6854d7a24b",
        "text": "Computers can be bicycles for the mind, but, this is currently discouraged by programming notation.\n\nNotation and language affects the way you allow yourself to think.\n\nI would say that computers are a new medium for expression in 4 dimensions x\/y\/z\/t.\n\nIMO, this medium has yet to be explored in depth.\n\nText-based functional notation, e.g. `f(x)` or `f(x,y,z)` addresses only one use-case for computers - computers as sophisticated calculators - but cannot easily express other uses of computers, e.g. sequencers (time, history), IoT, robotics, internet, blockchain, gaming, animation, etc.\n\nObviously, we CAN express these other concepts in the current notation, but, programmers are encouraged - by exclusive use of this single notation - to think in 2D and to create calculators.\n\nWhen all you’ve got is a single notation for describing calculators, everything looks like a calculator.\n\nA calculator takes one input (which might look like several inputs, thanks to the miracle of destructuring) and produces one output.  The calculator model is so insufficient for expressing programs, that a bag has been added onto the side of the model, called ‘exceptions’.\n\nIf you want to build YAC (Yet Another Calculator), the current notation is appropriate.  If you want to build a sequencer, switch to another notation(s).  When starting a new project, it is unnecessary to jump to the premature conclusion that the project is YAC until you’ve savoured all of the project’s details.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1670711298.043479",
        "parent_user_id": "U02028JHX37",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XDoZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Computers can be bicycles for the mind, but, this is currently discouraged by programming notation.\n\nNotation and language affects the way you allow yourself to think.\n\nI would say that computers are a new medium for expression in 4 dimensions x\/y\/z\/t.\n\nIMO, this medium has yet to be explored in depth.\n\nText-based functional notation, e.g. "
                            },
                            {
                                "type": "text",
                                "text": "f(x)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "text",
                                "text": "f(x,y,z)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " addresses only one use-case for computers - computers as sophisticated calculators - but cannot easily express other uses of computers, e.g. sequencers (time, history), IoT, robotics, internet, blockchain, gaming, animation, etc.\n\nObviously, we CAN express these other concepts in the current notation, but, programmers are encouraged - by exclusive use of this single notation - to think in 2D and to create calculators.\n\nWhen all you’ve got is a single notation for describing calculators, everything looks like a calculator.\n\nA calculator takes one input (which might look like several inputs, thanks to the miracle of destructuring) and produces one output.  The calculator model is so insufficient for expressing programs, that a bag has been added onto the side of the model, called ‘exceptions’.\n\nIf you want to build YAC (Yet Another Calculator), the current notation is appropriate.  If you want to build a sequencer, switch to another notation(s).  When starting a new project, it is unnecessary to jump to the premature conclusion that the project is YAC until you’ve savoured all of the project’s details."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]