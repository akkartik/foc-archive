[
    {
        "user": "U0242H3GHHT",
        "type": "message",
        "ts": "1671790095.487559",
        "client_msg_id": "27D1F4F2-E143-4FBE-976B-4BE146CDB10E",
        "text": "Finally managed to go back and solve this sort of elegantly. One thing I haven’t figured out in Clojure \/ functional languages in general is how to indicate progress in recursive processes.\nIn this case, I would have loved an indicator for the current depth down the tree that I’m breadth-first-searching through.\n\nI think atoms could help there - in C++, I’d reach for something like `std::atomic`, so that makes sense :thinking_face: ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd6d3825871f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d6d3825871fcd174c36fe3eada6d5fce.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Nils Berg",
            "display_name": "Nils Berg",
            "team": "T5TCAFTA9",
            "name": "berg.nils",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671280036.096029",
        "parent_user_id": "U0242H3GHHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s4GQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Finally managed to go back and solve this sort of elegantly. One thing I haven’t figured out in Clojure \/ functional languages in general is how to indicate progress in recursive processes.\nIn this case, I would have loved an indicator for the current depth down the tree that I’m breadth-first-searching through.\n\nI think atoms could help there - in C++, "
                            },
                            {
                                "type": "text",
                                "text": "I’d"
                            },
                            {
                                "type": "text",
                                "text": " reach for something like "
                            },
                            {
                                "type": "text",
                                "text": "std::atomic",
                                "style": {
                                    "bold": false,
                                    "italic": false,
                                    "strike": false,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", so that makes sense "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ]
    }
]