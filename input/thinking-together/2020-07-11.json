[
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1594455251.215600",
        "edited": {
            "user": "UJ6LDMMN0",
            "ts": "1594455261.000000"
        },
        "client_msg_id": "95700c5f-5f98-42ec-bd3c-a86253f338bf",
        "text": "I see circle graphs (with three and five nodes)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594417065.212100",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9fu1G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I see circle graphs (with three and five nodes)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0137BUHUBW",
        "type": "message",
        "ts": "1594457541.216300",
        "client_msg_id": "10997A0D-2D55-47E2-AC21-2F3C62B34480",
        "text": "I imagine the output from 1-100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g974d4348dee",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/974d4348deec4de326ee55cbe30eb686.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Tor",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "tor.bruce",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594417065.212100",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iU3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I imagine the output from 1-100"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0137BUHUBW",
        "type": "message",
        "ts": "1594458004.219100",
        "client_msg_id": "F4CFD35A-9B10-4A0C-8014-31556194B1F0",
        "text": "What are some good resources around the power imbalance in the interaction of software and users? For example, the disregard for consent in a dialog box where the option “No” is replaced with “Not now”.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g974d4348dee",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/974d4348deec4de326ee55cbe30eb686.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Tor",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "tor.bruce",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "reply_count": 27,
        "reply_users_count": 10,
        "latest_reply": "1594585306.322200",
        "reply_users": [
            "U0137BUHUBW",
            "UBN9AFS0N",
            "UJN1TAYEQ",
            "UCUSW7WVD",
            "UHDQ62M4P",
            "U8A5MS6R1",
            "UEQ6M68H0",
            "UC2A2ARPT",
            "U5STGTB3J",
            "UMWF81HTP"
        ],
        "replies": [
            {
                "user": "U0137BUHUBW",
                "ts": "1594458078.220600"
            },
            {
                "user": "U0137BUHUBW",
                "ts": "1594458505.227400"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1594459086.227700"
            },
            {
                "user": "U0137BUHUBW",
                "ts": "1594461271.230100"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1594468259.234100"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1594468604.234300"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1594470751.234800"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1594478580.235600"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1594484000.235800"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1594484076.236000"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1594484199.236200"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1594484227.236400"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1594485196.236600"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1594492835.237100"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1594499056.237900"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1594499258.238100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1594500245.249000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1594502538.249200"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1594503613.249500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1594503824.249700"
            },
            {
                "user": "U0137BUHUBW",
                "ts": "1594506342.260000"
            },
            {
                "user": "U0137BUHUBW",
                "ts": "1594506560.262000"
            },
            {
                "user": "U0137BUHUBW",
                "ts": "1594506856.264800"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1594517595.269100"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1594546751.293900"
            },
            {
                "user": "UMWF81HTP",
                "ts": "1594549464.304500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1594585306.322200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tmh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What are some good resources around the power imbalance in the interaction of software and users? For example, the disregard for consent in a dialog box where the option “No” is replaced with “Not now”."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UP28ETUSE",
        "type": "message",
        "ts": "1594458058.220300",
        "client_msg_id": "50147a54-0872-4da3-a3d4-c946a422fe18",
        "text": "I think I see a stream of numbers flowing from left to right entering some boxes that would: 1. limit the stream to 100 numbers and 2. map each incoming number to its string representation, as asked by the problem. And what I see in the boxes is code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7cefc64f7b1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7cefc64f7b1b53513625bf3487ecd16d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "Ionuț",
            "real_name": "Ionuț G. Stan",
            "display_name": "Ionuț G. Stan",
            "team": "T5TCAFTA9",
            "name": "ionut.g.stan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594417065.212100",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NKF\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think I see a stream of numbers flowing from left to right entering some boxes that would: 1. limit the stream to 100 numbers and 2. map each incoming number to its string representation, as asked by the problem. And what I see in the boxes is code."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0137BUHUBW",
        "type": "message",
        "ts": "1594458078.220600",
        "edited": {
            "user": "U0137BUHUBW",
            "ts": "1594458096.000000"
        },
        "client_msg_id": "DF490970-C661-4283-B443-305EA1DF7688",
        "text": "Or the way many apps hold your data “hostage” and only allows you to work on it with whatever functionality is implemented in the app",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g974d4348dee",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/974d4348deec4de326ee55cbe30eb686.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Tor",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "tor.bruce",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "45aD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Or the way many apps hold your data “hostage” and only allows you to work on it with whatever functionality is implemented in the app"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0137BUHUBW",
        "type": "message",
        "ts": "1594458505.227400",
        "edited": {
            "user": "U0137BUHUBW",
            "ts": "1594458722.000000"
        },
        "client_msg_id": "3815F5F5-5649-4E2E-A11E-4D33D123D4C0",
        "text": "Would it be an exaggeration to make a political analogy to fascism? As I understand fascism it’s designed to be acceptable to the majority, despite being an autocratic\/bureaucratic and nonconsensual system. That seems to be the ideology behind a lot of software as well: it only has the pretense of the user having power, when the system actually has absolute power and probably won’t accept user actions that go against its own interests. But for the most part we accept the system for the benefits we can get from it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g974d4348dee",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/974d4348deec4de326ee55cbe30eb686.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Tor",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "tor.bruce",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ob02w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would it be an exaggeration to make a political analogy to fascism? As I understand fascism it’s designed to be acceptable to the majority, despite being an autocratic\/bureaucratic and nonconsensual system. That seems to be the ideology behind a lot of software as well: it only has the pretense of the user having power, when the system actually has absolute power and probably won’t accept user actions that go against its own interests. But for the most part we accept the system for the benefits we can get from it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1594459086.227700",
        "client_msg_id": "43c3b6db-4c3b-4708-916d-178622267e58",
        "text": "<https:\/\/www.darkpatterns.org\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "attachments": [
            {
                "title": "Dark Patterns",
                "title_link": "https:\/\/www.darkpatterns.org\/",
                "text": "Dark Patterns are tricks used in websites and apps that make you buy or sign up for things that you didn't mean to. The purpose of this site is to spread awareness and to shame companies that use them.",
                "fallback": "Dark Patterns",
                "from_url": "https:\/\/www.darkpatterns.org\/",
                "service_name": "darkpatterns.org",
                "id": 1,
                "original_url": "https:\/\/www.darkpatterns.org\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "36ai",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.darkpatterns.org\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0137BUHUBW",
        "type": "message",
        "ts": "1594461271.230100",
        "edited": {
            "user": "U0137BUHUBW",
            "ts": "1594461286.000000"
        },
        "client_msg_id": "767E7FA0-4D0A-45C8-8518-B018E8A742BC",
        "text": "Thanks. Dark patterns are a good collection of examples of violations, but I’m looking for more of an idea-based or philosophical perspective on these issues. I’m imagining the free software movement might have ideas, but I’m not sure they are always so concerned with the user-experience angle",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g974d4348dee",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/974d4348deec4de326ee55cbe30eb686.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Tor",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "tor.bruce",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JrCzP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks. Dark patterns are a good collection of examples of violations, but I’m looking for more of an idea-based or philosophical perspective on these issues. I’m imagining the free software movement might have ideas, but I’m not sure they are always so concerned with the user-experience angle"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1594468259.234100",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1594468691.000000"
        },
        "client_msg_id": "d9be5371-dd4e-42e3-b203-52b4fd6d1ff7",
        "text": "For a philosophical perspective on power imbalance in technology, you could look at Ivan Illich's book \"Tools for Conviviality\". Here are some quotes I took from my reading of the book:\n1. I use the term “tool” broadly enough to include not only simple hardware such as drills, pots, syringes, brooms, building elements, or motors, and not just large machines like cars or power stations; I also include among tools productive institutions such as factories that produce tangible commodities like corn flakes or electric current, and productive systems for intangible commodities such as those which produce “education,” “health,” “knowledge,” or “decisions.” I use this term because it allows me to subsume into one category all rationally designed devices, be they artifacts or rules, codes or operators, and to distinguish all these planned and engineered instrumentalities from other things such as basic food or implements, which in a given culture are not deemed to be subject to rationalization. School curricula or marriage laws are no less purposely shaped social devices than road networks.\n2. A convivial society should be designed to allow all its members the most autonomous action by means of tools least controlled by others. People feel joy, as opposed to mere pleasure, to the extent that their activities are creative; while the growth of tools beyond a certain point increases regimentation, dependence, exploitation, and impotence.\n3. Tools are intrinsic to social relationships. An individual relates himself in action to his society through the use of tools that he actively masters, or by which he is passively acted upon. To the degree that he masters his tools, he can invest the world with his meaning; to the degree that he is mastered by his tools, the shape of the tool determines his own self-image. Convivial tools are those which give each person who uses them the greatest opportunity to enrich the environment with the fruits of his or her vision. Industrial tools deny this possibility to those who use them and they allow their designers to determine the meaning and expectations of others. Most tools today cannot be used in a convivial fashion.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ohtA+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For a philosophical perspective on power imbalance in technology, you could look at Ivan Illich's book \"Tools for Conviviality\". Here are some quotes I took from my reading of the book:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I use the term “tool” broadly enough to include not only simple hardware such as drills, pots, syringes, brooms, building elements, or motors, and not just large machines like cars or power stations; I also include among tools productive institutions such as factories that produce tangible commodities like corn flakes or electric current, and productive systems for intangible commodities such as those which produce “education,” “health,” “knowledge,” or “decisions.” I use this term because it allows me to subsume into one category all rationally designed devices, be they artifacts or rules, codes or operators, and to distinguish all these planned and engineered instrumentalities from other things such as basic food or implements, which in a given culture are not deemed to be subject to rationalization. School curricula or marriage laws are no less purposely shaped social devices than road networks."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "A convivial society should be designed to allow all its members the most autonomous action by means of tools least controlled by others. People feel joy, as opposed to mere pleasure, to the extent that their activities are creative; while the growth of tools beyond a certain point increases regimentation, dependence, exploitation, and impotence."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Tools are intrinsic to social relationships. An individual relates himself in action to his society through the use of tools that he actively masters, or by which he is passively acted upon. To the degree that he masters his tools, he can invest the world with his meaning; to the degree that he is mastered by his tools, the shape of the tool determines his own self-image. Convivial tools are those which give each person who uses them the greatest opportunity to enrich the environment with the fruits of his or her vision. Industrial tools deny this possibility to those who use them and they allow their designers to determine the meaning and expectations of others. Most tools today cannot be used in a convivial fashion."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D",
                    "U5STGTB3J",
                    "UHWC9PXBL",
                    "UMWF81HTP"
                ],
                "count": 4
            },
            {
                "name": "+1",
                "users": [
                    "U0137BUHUBW",
                    "U013ZLJARC7",
                    "UMWF81HTP"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1594468604.234300",
        "client_msg_id": "ee1cbad1-8533-43e1-8173-f44c840f0734",
        "text": "In May, there was a \"Convivial Computing Salon\", with organizers, presenters and attendees drawn from the FoC community, and inspired by Illich's book. I like the term \"convivial computing\" as a slogan for humanistic computing. <https:\/\/2020.programming-conference.org\/home\/salon-2020#About>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "attachments": [
            {
                "title": "Convivial Computing Salon 2020 - ‹Programming› 2020",
                "title_link": "https:\/\/2020.programming-conference.org\/home\/salon-2020#About",
                "fallback": "Convivial Computing Salon 2020 - ‹Programming› 2020",
                "image_url": "https:\/\/2020.programming-conference.org\/getImage\/carousel\/slide2_3.jpg?1554195896000",
                "from_url": "https:\/\/2020.programming-conference.org\/home\/salon-2020#About",
                "image_width": 375,
                "image_height": 250,
                "image_bytes": 419428,
                "service_icon": "https:\/\/2020.programming-conference.org\/favicon.ico",
                "service_name": "2020.programming-conference.org",
                "id": 1,
                "original_url": "https:\/\/2020.programming-conference.org\/home\/salon-2020#About"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aUY6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In May, there was a \"Convivial Computing Salon\", with organizers, presenters and attendees drawn from the FoC community, and inspired by Illich's book. I like the term \"convivial computing\" as a slogan for humanistic computing. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/2020.programming-conference.org\/home\/salon-2020#About"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1594470751.234800",
        "client_msg_id": "23583438-7e52-4d66-a21f-368dfe7509f3",
        "text": "In my own thinking on humanistic or human-centred computing, I distinguish between two rather different goals for computing technology:\n1. Computers are tools that make us smarter (as individual users), that \"augment human intellect\", in the words of Douglas Engelbart. Computers serve the needs of users.\n2. Computers are tools that exist to serve the needs of the oligarchy and the state. The role of users is to be exploited by the corporations that create, own and control the technology. Cory Doctorow's blog and the <http:\/\/EFF.org|EFF.org> (Electronic Frontier Foundation) are working to publicize this trend and organize resistance against it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xxk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my own thinking on humanistic or human-centred computing, I distinguish between two rather different goals for computing technology:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Computers are tools that make us smarter (as individual users), that \"augment human intellect\", in the words of Douglas Engelbart. Computers serve the needs of users."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Computers are tools that exist to serve the needs of the oligarchy and the state. The role of users is to be exploited by the corporations that create, own and control the technology. Cory Doctorow's blog and the "
                                    },
                                    {
                                        "type": "link",
                                        "url": "http:\/\/EFF.org",
                                        "text": "EFF.org"
                                    },
                                    {
                                        "type": "text",
                                        "text": " (Electronic Frontier Foundation) are working to publicize this trend and organize resistance against it."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1594473689.235100",
        "client_msg_id": "49bb634c-58e6-4652-b8ed-ac770b2fd527",
        "text": "FWIW, regarding friction, I have the iPad Pro with a Paperlike 2 screen protector, and it is easily the closest thing to paper I've ever used.   I mostly use iPad for notes these days (along with the 'Concepts' app with an infinite canvas).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594409036.201800",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hQn5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FWIW, regarding friction, I have the iPad Pro with a Paperlike 2 screen protector, and it is easily the closest thing to paper I've ever used.   I mostly use iPad for notes these days (along with the 'Concepts' app with an infinite canvas)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1594478580.235600",
        "client_msg_id": "fef1c116-4cdf-4987-828b-b08067616d9d",
        "text": "Jaron Lanier's writings might be relevant. I think he's talked about AI being on one side of this divide and IA on the other. I don't have a citation off-hand, sadly.\n\nI've never heard mainstream software compared explicitly to Fascism, though. Also curious if any one else has.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c867a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Jaron Lanier's writings might be relevant. I think he's talked about AI being on one side of this divide and IA on the other. I don't have a citation off-hand, sadly.\n\nI've never heard mainstream software compared explicitly to Fascism, though. Also curious if any one else has."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1594484000.235800",
        "client_msg_id": "b33df02a-d4ef-4bf8-94c9-47ebcbb8a928",
        "text": "besides \"dark pattern\", \"user hostile\" is another good term to google for",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IfI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "besides \"dark pattern\", \"user hostile\" is another good term to google for"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1594484076.236000",
        "edited": {
            "user": "UHDQ62M4P",
            "ts": "1594485381.000000"
        },
        "client_msg_id": "fc414e58-a88e-41b5-bbf0-58448f8e6144",
        "text": "sadly, this mode of software is almost the default for any software where not 100% of the functionality\/data is on the local device (i.e. connects to a \"cloud\").",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w\/5jo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "sadly, this mode of software is almost the default for any software where not 100% of the functionality\/data is on the local device (i.e. connects to a \"cloud\")."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1594484199.236200",
        "client_msg_id": "16806efc-2321-49f6-b5f6-4fcf0e2b6ca8",
        "text": "software thats entirely local (old-skool productivity app, or a single player game) has no motivation to use dark patterns, since it can't profit from it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zDdB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "software thats entirely local (old-skool productivity app, or a single player game) has no motivation to use dark patterns, since it can't profit from it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1594484227.236400",
        "client_msg_id": "e21744d3-e203-4d87-9a00-864319a2a932",
        "text": "So that's increasingly the kind of software I am drawn to.. its refreshing",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z9+7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So that's increasingly the kind of software I am drawn to.. its refreshing"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1594485196.236600",
        "client_msg_id": "4bcc178f-3bf9-4d8b-bec2-405fe79d5466",
        "text": "Even something like the Slack we're typing this into.. it is clear we are the product, not the customer. Slack's goal is to attract as many users as possible, not to make anyone individually happy. Which means UI design optimized for the middle of the bell curve. I remeber the last desktop slack-like I used, Mirc, with its gazillion options and user side scripting. Slack would never have that because it doesn't serve its purpose. It's only meant to help you when it helps them.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rag9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Even something like the Slack we're typing this into.. it is clear we are the product, not the customer. Slack's goal is to attract as many users as possible, not to make anyone individually happy. Which means UI design optimized for the middle of the bell curve. I remeber the last desktop slack-like I used, Mirc, with its gazillion options and user side scripting. Slack would never have that because it doesn't serve its purpose. It's only meant to help you when it helps them."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1594492835.237100",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1594493671.000000"
        },
        "client_msg_id": "db6b1751-436b-4a57-bc71-a0e306b8f3ff",
        "text": "If we're talking about agency and ownership on data, Local-first software may be relevant: <https:\/\/www.inkandswitch.com\/local-first.html|https:\/\/www.inkandswitch.com\/local-first.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "attachments": [
            {
                "title": "Local-first software: You own your data, in spite of the cloud",
                "title_link": "https:\/\/www.inkandswitch.com\/local-first.html",
                "text": "A new generation of collaborative software that allows users to retain ownership of their data.",
                "fallback": "Local-first software: You own your data, in spite of the cloud",
                "image_url": "https:\/\/www.inkandswitch.com\/media\/local-first\/cuneiform.jpg",
                "from_url": "https:\/\/www.inkandswitch.com\/local-first.html",
                "image_width": 326,
                "image_height": 250,
                "image_bytes": 67054,
                "service_icon": "https:\/\/www.inkandswitch.com\/assets\/logo-favicon-apple-touch.png",
                "service_name": "inkandswitch.com",
                "id": 1,
                "original_url": "https:\/\/www.inkandswitch.com\/local-first.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i\/rA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If we're talking about agency and ownership on data, Local-first software may be relevant: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.inkandswitch.com\/local-first.html",
                                "text": "https:\/\/www.inkandswitch.com\/local-first.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1594495137.237700",
        "client_msg_id": "cfae7fa9-7ecc-45ff-a71e-4622b5da0fbc",
        "text": "Random story. I graduated from UNLV the semester before Dr. Stefik was hired there. I remember there being some buzz in the CS department about this new professor lol. I regret that I never was able to meet him or take a class with him. His work is really interesting.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594384366.198400",
        "parent_user_id": "U0136G8R8KG",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5BJaL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Random story. I graduated from UNLV the semester before Dr. Stefik was hired there. I remember there being some buzz in the CS department about this new professor lol. I regret that I never was able to meet him or take a class with him. His work is really interesting."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1594499056.237900",
        "client_msg_id": "bb98b1a4-a444-4f06-a536-b2b8b2ca3a0f",
        "text": "Unfortunately, the greed and stupidity of users has brought us to the current situation, where companies have been forced by the communists\/fascists amongst us, who insist that all software be free. But companies are a kind of living thing, they need to obtain energy in the form of money to keep their staffs going, and so inevitably you then see ruthless firms like Facebook who intensely data mine so as to generate an income stream. If people would pay a fair price for the services they use, the companies wouldn't need to resort to tricks to find revenue on the back end. You don't see Adobe Creative Cloud users getting mined like this, because they are paying a subscription fee, and Adobe thus doesn't need to do this kind of thing. But the minute you make a service that actually costs hundreds of millions to run free to users, then you are going to have some invisible revenue generating mechanism, that might be highly detrimental to your privacy or have other non-obvious negative effects.\n\nAsking something for nothing is my definition of a jerk. Yet people now have been trained by savage firms to expect this, and it is quite unfortunate.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p01M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Unfortunately, the greed and stupidity of users has brought us to the current situation, where companies have been forced by the communists\/fascists amongst us, who insist that all software be free. But companies are a kind of living thing, they need to obtain energy in the form of money to keep their staffs going, and so inevitably you then see ruthless firms like Facebook who intensely data mine so as to generate an income stream. If people would pay a fair price for the services they use, the companies wouldn't need to resort to tricks to find revenue on the back end. You don't see Adobe Creative Cloud users getting mined like this, because they are paying a subscription fee, and Adobe thus doesn't need to do this kind of thing. But the minute you make a service that actually costs hundreds of millions to run free to users, then you are going to have some invisible revenue generating mechanism, that might be highly detrimental to your privacy or have other non-obvious negative effects.\n\nAsking something for nothing is my definition of a jerk. Yet people now have been trained by savage firms to expect this, and it is quite unfortunate."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "The article above by Ink and Switch has a fun graph (optimistic numbers, not really achievable) of the time between cities.",
        "files": [
            {
                "id": "F016WMC1Y93",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UEQ6M68H0",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rky",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The article above by Ink and Switch has a fun graph (optimistic numbers, not really achievable) of the time between cities."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1594499258.238100",
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1594499962.244700",
        "client_msg_id": "a3f638d5-e3b3-4134-8a41-7e388b4592cc",
        "text": "Ever since the iPad lowered its price dramatically (often during holiday times, dropping below $300), Apple has crushed the Android competition, and with its incredible software store is a formidable computing platform, now actually a larger installed base than their desktop computers.  I can see the real reason for ARM on the MacBooks is that they want to have the same software available, because the Mac OS has stagnated, and as a percentage of total computing is dropping fast. I sure didn't like it when Apple orphaned the iPad 2 and 3, turned my pristine devices into paperweights. But that's Apple for you; fairly ruthless about backwards compatibility.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594409036.201800",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4iY9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ever since the iPad lowered its price dramatically (often during holiday times, dropping below $300), Apple has crushed the Android competition, and with its incredible software store is a formidable computing platform, now actually a larger installed base than their desktop computers.  I can see the real reason for ARM on the MacBooks is that they want to have the same software available, because the Mac OS has stagnated, and as a percentage of total computing is dropping fast. I sure didn't like it when Apple orphaned the iPad 2 and 3, turned my pristine devices into paperweights. But that's Apple for you; fairly ruthless about backwards compatibility."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1594500245.249000",
        "client_msg_id": "D2369394-BFF3-4B78-B588-64AE48BF5BAE",
        "text": "Adobe are a great example of this sort of power imbalance. They introduce undocumented breaking changes into CC apps, but don't let you stay on old versions past a certain point — this one has repeatedly hurt our art team. They only let businesses adjust licensing on a fixed schedule, so you can't easily downsize your plan if (say) half of your art team switches entirely to non-Adobe tools. They use all the bundling tactics we hate from cable companies. They're increasingly requiring reliance on their cloud features instead of local, user-ownable data. They continue to use _pseudo_-proprietary file formats for said local data. They are a vendor of various adtech integrations (sup, TypeKit).\n\nAdobe are _a land of contrasts_, to borrow a meme. We often look at their products as exemplars of direct manipulation and iterative evolution across decades, but as a business they're every bit as hostile as FAANG.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OkMf4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Adobe are a great example of this sort of power imbalance. They introduce undocumented breaking changes into CC apps, but don't let you stay on old versions past a certain point — this one has repeatedly hurt our art team. They only let businesses adjust licensing on a fixed schedule, so you can't easily downsize your plan if (say) half of your art team switches entirely to non-Adobe tools. They use all the bundling tactics we hate from cable companies. They're increasingly requiring reliance on their cloud features instead of local, user-ownable data. They continue to use "
                            },
                            {
                                "type": "text",
                                "text": "pseudo",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "-proprietary file formats for said local data. They are a vendor of various adtech integrations (sup, TypeKit).\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Adobe are "
                            },
                            {
                                "type": "text",
                                "text": "a land of contrasts",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", to borrow a meme. We often look at their products as exemplars of direct manipulation and iterative evolution across decades, but as a business they're every bit as hostile as FAANG."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1594502538.249200",
        "client_msg_id": "538139f4-12b5-4f97-9693-23b47af98661",
        "text": "More so, from the sound of it.  More like Oracle or IBM levels of evil.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9w=I5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More so, from the sound of it.  More like Oracle or IBM levels of evil."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1594503613.249500",
        "client_msg_id": "77855b58-653c-4c7e-a703-e40914477c5f",
        "text": "<@UEQ6M68H0> err.. that graph contains roundtrip numbers for packets, and they are entirely achievable",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "86x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " err.. that graph contains roundtrip numbers for packets, and they are entirely achievable"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1594503824.249700",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1594504130.000000"
        },
        "client_msg_id": "62a2e680-fedd-445d-bfcd-d4b5757bab64",
        "text": "A few years ago I wrote <https:\/\/www.ribbonfarm.com\/2014\/09\/09\/geopolitics-for-individuals>, which seems relevant here. Every new technology creates a space for a more geopolitical way of thinking to come to the fore. (Not everyone does it, but those who do find surprising opportunities.) The original age of diplomacy was about the implications of oil. The age of Fascism was about mass media. We're currently exploring the implications of software infrastructure. Firefox and Adobe don't have a fixed pecking order when it comes to virtue. Each can do things that _align more_ with one group or another. Our periodic angst about Slack is also a sign of relying on something whose provider isn't aligned perfectly with us. In that situation it's easy for alliance to slip into exploitation. (And I use both words without any connotation of good or bad. It's worth thinking of them as just different parts of a single state space.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "attachments": [
            {
                "service_name": "ribbonfarm",
                "title": "Geopolitics for Individuals",
                "title_link": "https:\/\/www.ribbonfarm.com\/2014\/09\/09\/geopolitics-for-individuals",
                "text": "Kartik is a 2014 blogging resident visiting us from his home turf at akkartik.name. I recently spent a month playing a board game called Diplomacy, and it turned out to be a surprisingly mind-broad…",
                "fallback": "ribbonfarm: Geopolitics for Individuals",
                "thumb_url": "https:\/\/206hwf3fj4w52u3br03fi242-wpengine.netdna-ssl.com\/wp-content\/uploads\/2014\/09\/LifeAnimation.gif",
                "ts": 1410288542,
                "from_url": "https:\/\/www.ribbonfarm.com\/2014\/09\/09\/geopolitics-for-individuals",
                "thumb_width": 500,
                "thumb_height": 500,
                "service_icon": "https:\/\/206hwf3fj4w52u3br03fi242-wpengine.netdna-ssl.com\/wp-content\/uploads\/2019\/03\/cropped-rfnewlogo-180x180.png",
                "id": 1,
                "original_url": "https:\/\/www.ribbonfarm.com\/2014\/09\/09\/geopolitics-for-individuals"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qyg8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A few years ago I wrote "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.ribbonfarm.com\/2014\/09\/09\/geopolitics-for-individuals"
                            },
                            {
                                "type": "text",
                                "text": ", which seems relevant here. Every new technology creates a space for a more geopolitical way of thinking to come to the fore. (Not everyone does it, but those who do find surprising opportunities.) The original age of diplomacy was about the implications of oil. The age of Fascism was about mass media. We're currently exploring the implications of software infrastructure. Firefox and Adobe don't have a fixed pecking order when it comes to virtue. Each can do things that "
                            },
                            {
                                "type": "text",
                                "text": "align more",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " with one group or another. Our periodic angst about Slack is also a sign of relying on something whose provider isn't aligned perfectly with us. In that situation it's easy for alliance to slip into exploitation. (And I use both words without any connotation of good or bad. It's worth thinking of them as just different parts of a single state space.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1594504815.250800",
        "client_msg_id": "fc374913-3ed2-4266-b402-c0fd70be53f7",
        "text": "you might also be pleased to see (if you haven’t) the inspiration for sparklines: <https:\/\/www.edwardtufte.com\/bboard\/q-and-a-fetch-msg?msg_id=00004p>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594305313.149000",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iOP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you might also be pleased to see (if you haven’t) the inspiration for sparklines: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.edwardtufte.com\/bboard\/q-and-a-fetch-msg?msg_id=00004p"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "roughly “if you look at saturn with a really great lens on your telescope, it looks like &lt;this&gt;. if you look at it with a really crappy lens, it looks like &lt;this&gt;—galileo",
        "files": [
            {
                "id": "F016YA19P2P",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UHWC9PXBL",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PELk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "roughly “if you look at saturn with a really great lens on your telescope, it looks like <this>. if you look at it with a really crappy lens, it looks like <this>—galileo"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1594504872.251000",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1594504924.000000"
        },
        "thread_ts": "1594305313.149000",
        "parent_user_id": "UHWC9PXBL",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "finally found a blog post about rebol\/red that communicates some of what I suspected was interesting about it: <http:\/\/www.codeconscious.com\/rebol\/articles\/rebol-concepts.html> . in particular, in the screencap: the body of a function and its argument list are just data structures. so you can use them as first-class citzens as you like. please let me know if any of you know of any other languages with this level of flexibility!",
        "files": [
            {
                "id": "F017ANDA6F3",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UHWC9PXBL",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TrX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "finally found a blog post about rebol\/red that communicates some of what I suspected was interesting about it: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.codeconscious.com\/rebol\/articles\/rebol-concepts.html"
                            },
                            {
                                "type": "text",
                                "text": " . in particular, in the screencap: the body of a function and its argument list are just data structures. so you can use them as first-class citzens as you like. please let me know if any of you know of any other languages with this level of flexibility!"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1594505114.252600",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1594505233.000000"
        },
        "thread_ts": "1594505114.252600",
        "reply_count": 37,
        "reply_users_count": 10,
        "latest_reply": "1594610547.326300",
        "reply_users": [
            "UHWC9PXBL",
            "U01661S9F34",
            "UCUSW7WVD",
            "UEQ6M68H0",
            "UJN1TAYEQ",
            "U8A5MS6R1",
            "U01448TH3PG",
            "UJBAJNFLK",
            "UMWF81HTP",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UHWC9PXBL",
                "ts": "1594505161.253000"
            },
            {
                "user": "U01661S9F34",
                "ts": "1594507792.265000"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594508966.265500"
            },
            {
                "user": "U01661S9F34",
                "ts": "1594512848.265900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1594513549.266300"
            },
            {
                "user": "U01661S9F34",
                "ts": "1594513910.266600"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1594514481.266900"
            },
            {
                "user": "U01661S9F34",
                "ts": "1594515716.267100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1594516033.267300"
            },
            {
                "user": "U01661S9F34",
                "ts": "1594516262.267500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1594516425.267700"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1594516435.268000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1594516510.268200"
            },
            {
                "user": "U01661S9F34",
                "ts": "1594517419.268600"
            },
            {
                "user": "U01661S9F34",
                "ts": "1594518181.269300"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1594518874.269500"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1594519130.269700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594519551.270000"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594519564.270300"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594519738.270600"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594520261.270800"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1594520893.271200"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1594521541.271600"
            },
            {
                "user": "U01661S9F34",
                "ts": "1594521843.271800"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1594523397.272100"
            },
            {
                "user": "U01448TH3PG",
                "ts": "1594523679.272500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594525342.273300"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594525430.273600"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1594525697.273800"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1594544808.275300"
            },
            {
                "user": "UMWF81HTP",
                "ts": "1594545543.281700"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1594549458.304300"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1594549707.304800"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1594552273.305200"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1594575681.312200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1594580277.318200"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1594610547.326300"
            }
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1594505161.253000",
        "client_msg_id": "b6e72ff2-5bad-48f1-94d5-3320c5be6694",
        "text": "bizarrely, some of rebol’s choices about mutability extend to the source code:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E\/0y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "bizarrely, some of rebol’s choices about mutability extend to the source code:"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0137BUHUBW",
        "type": "message",
        "ts": "1594506342.260000",
        "client_msg_id": "FB8A4219-B8C3-4005-A19F-98BD78CFD6A8",
        "text": "Thanks everybody for insights. Speaking of the types of business practices <@UC2A2ARPT> mentioned, it strikes me that maybe this is not really a problem of our relationship with the software itself, but of business behind it. The software is a similar proxy as a traditional service rep; both are employed to help customers when helping them is in the interest of the business, politely refusing to help using specific sanctioned language when it’s not, and just empathizing without really helping in the gray area between.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g974d4348dee",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/974d4348deec4de326ee55cbe30eb686.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Tor",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "tor.bruce",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KjB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks everybody for insights. Speaking of the types of business practices "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " mentioned, it strikes me that maybe this is not really a problem of our relationship with the software itself, but of business behind it. The software is a similar proxy as a traditional service rep; both are employed to help customers when helping them is in the interest of the business, politely refusing to help using specific sanctioned language when it’s not, and just empathizing without really helping in the gray area between."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0137BUHUBW",
        "type": "message",
        "ts": "1594506560.262000",
        "client_msg_id": "7C6EFB3A-73EE-4E79-A7EC-1E71D1B04BD9",
        "text": "Thus when Apple insists on me updating my OS, they can’t allow me to tell them “No”, because they believe they need to keep as many users as possible in the latest version.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g974d4348dee",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/974d4348deec4de326ee55cbe30eb686.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Tor",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "tor.bruce",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W5n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thus when Apple insists on me updating my OS, they can’t allow me to tell them “No”, because they believe they need to keep as many users as possible in the latest version."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0137BUHUBW",
        "type": "message",
        "ts": "1594506856.264800",
        "client_msg_id": "20F0A4FD-C47C-4856-9264-82E6CE8CC4A5",
        "text": "Of course, I can just keep hitting “remind me later” and it’s effectively a “No”, so it’s effectively just a silly power demonstration",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g974d4348dee",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/974d4348deec4de326ee55cbe30eb686.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Tor",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "tor.bruce",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VNNNe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Of course, I can just keep hitting “remind me later” and it’s effectively a “No”, so it’s effectively just a silly power demonstration"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1594507792.265000",
        "edited": {
            "user": "U01661S9F34",
            "ts": "1594507914.000000"
        },
        "client_msg_id": "47ee77b9-083b-4d43-98ff-8e6afc757bd3",
        "text": "Lisp is the benevolent grandparent of this concept. But this aspect of Red \/ Rebol reminds me more of concatenative languages and stack languages like <https:\/\/en.wikipedia.org\/wiki\/Forth_(programming_language)|Forth>.\n\nMy hobby language of choice is <https:\/\/nim-lang.org\/|Nim>. Nim is a much more traditional programming language in many ways. It exposes the \"code as data\" \/ macro features by essentially providing you with the same AST data structures that the compiler itself uses. Macros in Nim are \"compiler plugins\" in a very concrete way. This has it's own pros and cons and gotchas.\n\nNot many \"big syntax\", non-homoiconic languages are able to do this. Rebol\/Red is one of the few in this category that can.\n\nRuby and Smalltalk arguably achieve similar things, but in a different way. They push more semantics into the runtime via OOP and message passing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U9X+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lisp is the benevolent grandparent of this concept. But this aspect of Red \/ Rebol reminds me more of concatenative languages and stack languages like "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Forth_(programming_language)",
                                "text": "Forth"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nMy hobby language of choice is "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/nim-lang.org\/",
                                "text": "Nim"
                            },
                            {
                                "type": "text",
                                "text": ". Nim is a much more traditional programming language in many ways. It exposes the \"code as data\" \/ macro features by essentially providing you with the same AST data structures that the compiler itself uses. Macros in Nim are \"compiler plugins\" in a very concrete way. This has it's own pros and cons and gotchas.\n\nNot many \"big syntax\", non-homoiconic languages are able to do this. Rebol\/Red is one of the few in this category that can.\n\nRuby and Smalltalk arguably achieve similar things, but in a different way. They push more semantics into the runtime via OOP and message passing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1594508966.265500",
        "client_msg_id": "c090ae29-27b4-415f-abf9-0f84d80e25c9",
        "text": "yeah—this is a step beyond lisp (and by extension ruby, and maaybe smalltalk)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QfC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah—this is a step beyond lisp (and by extension ruby, and maaybe smalltalk)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1594512848.265900",
        "edited": {
            "user": "U01661S9F34",
            "ts": "1594512859.000000"
        },
        "client_msg_id": "a4288970-328d-4ece-87b8-a5c232b21449",
        "text": "Can you elaborate on what you mean by \"a step beyond lisp\"?\n\nIt's pretty hard to beat lisp on flexibility lol.\nIf you look at <https:\/\/gist.github.com\/chaitanyagupta\/9324402|lisp reader macros>, and Racket with <https:\/\/cacm.acm.org\/magazines\/2018\/3\/225475-a-programmable-programming-language\/fulltext|it's many DSL's philosophy>, I think you will see the same level of flexibility, just in a different form.\n\nIMO this is not a case in which one solution is strictly better or more powerful than another. I have a hunch that many macro, DSL generation, \"code as data\", and \"programmable programming language\" ideas are isomorphic to each other and are fundamentally equivalent.\n\nIt comes down to taste, and which solution you prefer on a practical level. I think this is an example of the phrase \"there are many ways to cook an egg...\" (replace with equivalent phrase from your childhood here :slightly_smiling_face: ).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "026j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can you elaborate on what you mean by \"a step beyond lisp\"?\n\nIt's pretty hard to beat lisp on flexibility lol.\nIf you look at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/gist.github.com\/chaitanyagupta\/9324402",
                                "text": "lisp reader macros"
                            },
                            {
                                "type": "text",
                                "text": ", and Racket with "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/cacm.acm.org\/magazines\/2018\/3\/225475-a-programmable-programming-language\/fulltext",
                                "text": "it's many DSL's philosophy"
                            },
                            {
                                "type": "text",
                                "text": ", I think you will see the same level of flexibility, just in a different form.\n\nIMO this is not a case in which one solution is strictly better or more powerful than another. I have a hunch that many macro, DSL generation, \"code as data\", and \"programmable programming language\" ideas are isomorphic to each other and are fundamentally equivalent.\n\nIt comes down to taste, and which solution you prefer on a practical level. I think this is an example of the phrase \"there are many ways to cook an egg...\" (replace with equivalent phrase from your childhood here "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " )."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1594513549.266300",
        "client_msg_id": "c08bc708-eaa2-4557-a510-ea0d27970ef5",
        "text": "It's beyond Lisp because arguments are received unevaluated, and different operations may parse their args in very different ways. More powerful than reader macros.\n\nAlso, there's a principled way for macros to track the scope of variables.\n\nI'm not experienced in it so don't have a sense for what the cons (ha!) are.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nspi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's beyond Lisp because arguments are received unevaluated, and different operations may parse their args in very different ways. More powerful than reader macros.\n\nAlso, there's a principled way for macros to track the scope of variables.\n\nI'm not experienced in it so don't have a sense for what the cons (ha!) are."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "rolling_on_the_floor_laughing",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1594513910.266600",
        "edited": {
            "user": "U01661S9F34",
            "ts": "1594513934.000000"
        },
        "client_msg_id": "98821032-4d97-4c66-95b0-886614b04ab0",
        "text": "\"It's beyond Lisp because arguments are received unevaluated, and different operations may parse their args in very different ways.\"\nCan you explain that more? I have to admit I have limited experience with reader macros myself. What you are describing sounds equivalent to reader macros to me.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kS=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"It's beyond Lisp because arguments are received unevaluated, and different operations may parse their args in very different ways.\"\nCan you explain that more? I have to admit I have limited experience with reader macros myself. What you are describing sounds equivalent to reader macros to me."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1594514481.266900",
        "client_msg_id": "10875740-69fa-471e-9ddc-42f1999767ae",
        "text": "Reader macros have to follow certain rules Red doesn't. I don't remember the details, but Red allows special syntax for urls and html I believe. You can't do that with reader macros.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s14ep",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reader macros have to follow certain rules Red doesn't. I don't remember the details, but Red allows special syntax for urls and html I believe. You can't do that with reader macros."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1594515716.267100",
        "client_msg_id": "a06e55ea-02a0-42cc-80bd-e057bb28075e",
        "text": "The link in my first post uses as an example a reader macro for embedding a full JSON object directly into a lisp program. And <https:\/\/docs.racket-lang.org\/scribble\/index.html|Racket Scribble> is like a fully embedded markdown parser that can freely mix with lisp code to create a \"literate code\" experience.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5NU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The link in my first post uses as an example a reader macro for embedding a full JSON object directly into a lisp program. And "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.racket-lang.org\/scribble\/index.html",
                                "text": "Racket Scribble"
                            },
                            {
                                "type": "text",
                                "text": " is like a fully embedded markdown parser that can freely mix with lisp code to create a \"literate code\" experience."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1594516033.267300",
        "client_msg_id": "125183f7-00c4-44a7-91bf-755a5f862964",
        "text": "I'm not an expert on reader macros, and I wasn't including Scribble. Feel free to dig into Red and show me how I'm wrong :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0tC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not an expert on reader macros, and I wasn't including Scribble. Feel free to dig into Red and show me how I'm wrong "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1594516262.267500",
        "client_msg_id": "8dabf22a-8791-41b9-8638-f96d5904d641",
        "text": "lol. Fair enough. I'm not trying to attack your premise. I'm legitimately curious what the differences are now. I find macros and DSL's endlessly fascinating :slightly_smiling_face: . I'm now googling for more details, though I'm not sure if it will bear any fruit.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "brb+3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "lol. Fair enough. I'm not trying to attack your premise. I'm legitimately curious what the differences are now. I find macros and DSL's endlessly fascinating "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " . I'm now googling for more details, though I'm not sure if it will bear any fruit."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1594516425.267700",
        "client_msg_id": "1e13c760-8e52-4575-afea-49e6e4765db5",
        "text": "No reason to be skeptical. I'm sure this has been discussed many times out there. I haven't seen anyone say Lisp reader macros are equivalent.\n\nAh, found the link about how Red tracks variable scope in macros: <https:\/\/stackoverflow.com\/questions\/21964110\/is-there-a-overall-explanation-about-definitional-scoping-in-rebol-and-red>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "attachments": [
            {
                "service_name": "Stack Overflow",
                "title": "Is there a overall explanation about definitional scoping in Rebol and Red",
                "title_link": "https:\/\/stackoverflow.com\/questions\/21964110\/is-there-a-overall-explanation-about-definitional-scoping-in-rebol-and-red",
                "text": "From the REBOL\/Core Users Guide, and What is Red, I have learned that both Rebol and Red use definitional scoping. From the guide, I know it is a form of static scoping, \"the scope of a variable is",
                "fallback": "Stack Overflow: Is there a overall explanation about definitional scoping in Rebol and Red",
                "thumb_url": "https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon@2.png?v=73d79a89bded",
                "from_url": "https:\/\/stackoverflow.com\/questions\/21964110\/is-there-a-overall-explanation-about-definitional-scoping-in-rebol-and-red",
                "thumb_width": 316,
                "thumb_height": 316,
                "service_icon": "https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon.png?v=c78bd457575a",
                "id": 1,
                "original_url": "https:\/\/stackoverflow.com\/questions\/21964110\/is-there-a-overall-explanation-about-definitional-scoping-in-rebol-and-red"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Py6ws",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No reason to be skeptical. I'm sure this has been discussed many times out there. I haven't seen anyone say Lisp reader macros are equivalent.\n\nAh, found the link about how Red tracks variable scope in macros: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/stackoverflow.com\/questions\/21964110\/is-there-a-overall-explanation-about-definitional-scoping-in-rebol-and-red"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01661S9F34",
                    "UHWC9PXBL",
                    "UFLN9JFRT"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1594516435.268000",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1594525269.000000"
        },
        "client_msg_id": "dcda1f34-1079-446b-94cd-d1f8b7cb3a39",
        "text": "Red is the rebirth of Rebol. Nenad is running the project. They have funding (done via a Crypto coin offering), and they have very active community on Gitter. They don't visit here at FoC at all. I occasionally pop in and kibitz. Anyway Rebol is effectively a language where each function is its own domain specific language.\n\nIt is fairly jarring to those coming from Algol family languages. They use colon (:) for the equal sign, and parameters to functions, which they call refinements, are prefaced with a slash \/. They use a clever feature to distinguish type name spaces, a type name has an exclamation point afterwards like rect!, and then you can tell if a name is a variable or is it a type name. I've considered imitating this feature, it solves a lot of namespace collision issues.\n\nThere are various libraries which go way beyond what a Python library does for example, because it is a whole domain specific language. Red can be justly proud of its \"Parse\" module, which approaches the pattern matching power of Icon, the king of string manipulators.\n\nThe Red team is focusing on crypto contracts, but it has a GUI library that can make interesting things. Any dynamic language like LISP or Red abounds with user created custom languages, and learning the subtleties of those languages is not easy. I personally find that the dynamic languages create a memory burden on the reader, as the reader must have in their mind the domain specific language. For very bright people, these languages are attractive, but the high leverage achieved in these languages means that small changes can have drastic effects. Leverage works both ways.\n\nInstead of trying to create ever more powerful stacks of function by long sequences of domain specific languages or function composition, i have tried in my Beads language to create compartmentalization, where a section of code's possible effects are constantly being narrowed, so that a mistake in a module can only have a local effect, and thus the overall system is more robust.\n\nCSS is an example of a language i consider maddening, because an extra or missing character can cause a baffling scrambling of a page's layout. This type of fragility is not friendly to maintenance. PHP has a similar fragility to it, because it is typically generating HTML\/CSS code, and thus doubly fragile. For this reason PHP is losing its luster.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uh4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Red is the rebirth of Rebol. Nenad is running the project. They have funding (done via a Crypto coin offering), and they have very active community on Gitter. They don't visit here at FoC at all. I occasionally pop in and kibitz. Anyway Rebol is effectively a language where each function is its own domain specific language.\n\nIt is fairly jarring to those coming from Algol family languages. They use colon (:) for the equal sign, and parameters to functions, which they call refinements, are prefaced with a slash \/. They use a clever feature to distinguish type name spaces, a type name has an exclamation point afterwards like rect!, and then you can tell if a name is a variable or is it a type name. I've considered imitating this feature, it solves a lot of namespace collision issues.\n\nThere are various libraries which go way beyond what a Python library does for example, because it is a whole domain specific language. Red can be justly proud of its \"Parse\" module, which approaches the pattern matching power of Icon, the king of string manipulators.\n\nThe Red team is focusing on crypto contracts, but it has a GUI library that can make interesting things. Any dynamic language like LISP or Red abounds with user created custom languages, and learning the subtleties of those languages is not easy. I personally find that the dynamic languages create a memory burden on the reader, as the reader must have in their mind the domain specific language. For very bright people, these languages are attractive, but the high leverage achieved in these languages means that small changes can have drastic effects. Leverage works both ways.\n\nInstead of trying to create ever more powerful stacks of function by long sequences of domain specific languages or function composition, i have tried in my Beads language to create compartmentalization, where a section of code's possible effects are constantly being narrowed, so that a mistake in a module can only have a local effect, and thus the overall system is more robust.\n\nCSS is an example of a language i consider maddening, because an extra or missing character can cause a baffling scrambling of a page's layout. This type of fragility is not friendly to maintenance. PHP has a similar fragility to it, because it is typically generating HTML\/CSS code, and thus doubly fragile. For this reason PHP is losing its luster."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "U01661S9F34",
                    "UFLN9JFRT"
                ],
                "count": 2
            },
            {
                "name": "point_up",
                "users": [
                    "UUQ2EQW21",
                    "UC6997THT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1594516510.268200",
        "client_msg_id": "21a73422-8dc9-4912-9fb4-78338b9321c6",
        "text": "&gt; Instead of trying to create ever more powerful stacks of function by long sequences of domain specific languages or function composition, i have tried in my Beads language to create compartmentalization, where a section of code's possible effects are constantly being narrowed, so that a mistake in a module can only have a local effect, and thus the overall system is more robust.\nNice!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0YW65",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Instead of trying to create ever more powerful stacks of function by long sequences of domain specific languages or function composition, i have tried in my Beads language to create compartmentalization, where a section of code's possible effects are constantly being narrowed, so that a mistake in a module can only have a local effect, and thus the overall system is more robust."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nNice!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1594517419.268600",
        "edited": {
            "user": "U01661S9F34",
            "ts": "1594517426.000000"
        },
        "client_msg_id": "f6a6ace8-51b2-450a-b6e2-65e46f4eab36",
        "text": "&gt; I personally find that the dynamic languages create a memory burden on the reader, as the reader must have in their mind the domain specific language. For very bright people, these languages are attractive, but the high leverage achieved in these languages means that small changes can have drastic effects. Leverage works both ways.\nThis is a really good point. DSL's and Macros are a double edge sword for exactly this reason. I think it has been a big contributor to lisps downfall. It's something I personally struggle with reconciling.\n\n&gt; Beads language to create compartmentalization, where a section of code's possible effects are constantly being narrowed, so that a mistake in a module can only have a local effect, and thus the overall system is more robust.\nI'm curious about how you achieve this. It reminds me of this research project, <https:\/\/github.com\/melt-umn\/ableC|AbleC>, in which they try to create a C compiler that supports extensions \/ plugins that could be proven to have only local effects in much the same way.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2e1",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I personally find that the dynamic languages create a memory burden on the reader, as the reader must have in their mind the domain specific language. For very bright people, these languages are attractive, but the high leverage achieved in these languages means that small changes can have drastic effects. Leverage works both ways."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a really good point. DSL's and Macros are a double edge sword for exactly this reason. I think it has been a big contributor to lisps downfall. It's something I personally struggle with reconciling.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Beads language to create compartmentalization, where a section of code's possible effects are constantly being narrowed, so that a mistake in a module can only have a local effect, and thus the overall system is more robust."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm curious about how you achieve this. It reminds me of "
                            },
                            {
                                "type": "text",
                                "text": "this research project, ",
                                "style": {
                                    "unlink": true
                                }
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/melt-umn\/ableC",
                                "text": "AbleC"
                            },
                            {
                                "type": "text",
                                "text": ",",
                                "style": {
                                    "unlink": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in which they try to create a C compiler that supports extensions \/ plugins that could be proven to have only local effects in much the same way."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1594517595.269100",
        "client_msg_id": "e96a8fe5-2425-4d91-8971-001bd74e6c2d",
        "text": "Adobe in the post Warnock era, has shifted from a purchase model to a rental model, and this has its attendant drawbacks. As a long time user of Adobe's Creative Suite, one cannot lay all of the problems with breaking changes on Adobe. Apple has deliberately broken with each successive version of OSX the super important CS series. OSX 10.14 breaks many of the apps, and OSX 10.15 kills off all 32 bit apps for no good reason other than to force you to buy new stuff. When you pay over $1000 for software, you plan to keep it working, and i personally hate subscription model software when it is a program i use perhaps once a month. Most of us are not practicing artists, and Adobe is creating the competition that may eventually damage them severely. But i also have to point out that other big companies in the software field have always been envious of Adobe, and have at times gone to war against them, spending resources to hinder or destroy them.  They have also been massive victims of piracy in the past, and the OS vendors did nothing to help them. The iTunes App Store is the first piracy free ecosystem for the PC, and it has flourished. Cheating ruins the game of capitalism, and there is so much cheating today that people are souring on the concept of capitalism. Mutually beneficial exchange of goods and services is the foundation of modern civilization, but many entities figure out it is cheaper to rig the game than to do more for less, which is the promise of ever higher technology.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594458004.219100",
        "parent_user_id": "U0137BUHUBW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+fON",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Adobe in the post Warnock era, has shifted from a purchase model to a rental model, and this has its attendant drawbacks. As a long time user of Adobe's Creative Suite, one cannot lay all of the problems with breaking changes on Adobe. Apple has deliberately broken with each successive version of OSX the super important CS series. OSX 10.14 breaks many of the apps, and OSX 10.15 kills off all 32 bit apps for no good reason other than to force you to buy new stuff. When you pay over $1000 for software, you plan to keep it working, and i personally hate subscription model software when it is a program i use perhaps once a month. Most of us are not practicing artists, and Adobe is creating the competition that may eventually damage them severely. But i also have to point out that other big companies in the software field have always been envious of Adobe, and have at times gone to war against them, spending resources to hinder or destroy them.  They have also been massive victims of piracy in the past, and the OS vendors did nothing to help them. The iTunes App Store is the first piracy free ecosystem for the PC, and it has flourished. Cheating ruins the game of capitalism, and there is so much cheating today that people are souring on the concept of capitalism. Mutually beneficial exchange of goods and services is the foundation of modern civilization, but many entities figure out it is cheaper to rig the game than to do more for less, which is the promise of ever higher technology."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1594518181.269300",
        "client_msg_id": "0ce70362-0612-4415-a17e-b1ebe5e08088",
        "text": "<@UCUSW7WVD> That Stack Overflow article about scoping was very enlightening. Thank you! It makes Red remind me even more of Forth now! That's the only other language I can think of that works in a similar way.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QQd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " That Stack Overflow article about scoping was very enlightening. Thank you! It makes Red remind me even more of Forth now! That's the only other language I can think of that works in a similar way."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1594518874.269500",
        "client_msg_id": "0364806f-48d4-4074-9b29-317bdf5dda9f",
        "text": "&gt; It's beyond Lisp because arguments are received unevaluated, and different operations may parse their args in very different ways.\nSo it's the same thing as FEXPRs in Lisp. Not really beyond Lisp, because the idea was invented by Lisp first. <https:\/\/en.wikipedia.org\/wiki\/Fexpr>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n1ys",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's beyond Lisp because arguments are received unevaluated, and different operations may parse their args in very different ways."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So it's the same thing as FEXPRs in Lisp. Not really beyond Lisp, because the idea was invented by Lisp first. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Fexpr"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            },
            {
                "name": "-1",
                "users": [
                    "UCUSW7WVD",
                    "UJN1TAYEQ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1594519130.269700",
        "client_msg_id": "4767d6d7-9df8-4415-8a42-e85a2c7cb501",
        "text": "Smalltalk-72 had something similar: an object could dynamically parse the token stream as a sequence of unevaluated arguments, and that is how message passing worked. It was incredibly powerful, but the idea was abandoned in Smalltalk-76 for a syntax that is more static and more amenable to compilation. The real issue for Smalltalk was that it was difficult for humans to predict how a program would be parsed, and the API for parsing the message stream was more complex than what Smalltalk uses today for specifying message patterns.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Crzy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Smalltalk-72 had something similar: an object could dynamically parse the token stream as a sequence of unevaluated arguments, and that is how message passing worked. It was incredibly powerful, but the idea was abandoned in Smalltalk-76 for a syntax that is more static and more amenable to compilation. The real issue for Smalltalk was that it was difficult for humans to predict how a program would be parsed, and the API for parsing the message stream was more complex than what Smalltalk uses today for specifying message patterns."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMWF81HTP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1594519551.270000",
        "client_msg_id": "7a316e6b-3de9-4a95-a961-b37fd3eee44e",
        "text": "when I was referencing lisp, I meant modern and popular lisps from today—I think rebol’s model is a lot like fexprs but they seem to have a bunch of different handles for dealing with that situation. and they seem to use fexpr-equivalent stuff about a thousand times more often than older lisp programs did. I said “maybe smalltalk” because I was specifically thinking about that thing about every object carrying its own parser. i think rebol gets around some of the lack of clarity by in general writing very small programs (I’m not an expert) and keeping rules for how to treat unevaluated data very close to where you use those rules",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zJZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "when I was referencing lisp, I meant modern and popular lisps from today—I think rebol’s model is a lot like fexprs but they seem to have a bunch of different handles for dealing with that situation. and they seem to use fexpr-equivalent stuff about a thousand times more often than older lisp programs did. I said “maybe smalltalk” because I was specifically thinking about that thing about every object carrying its own parser. i think rebol gets around some of the lack of clarity by in general writing very small programs (I’m not an expert) and keeping rules for how to treat unevaluated data very close to where you use those rules"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1594519564.270300",
        "client_msg_id": "43179997-6af2-4641-ae66-ea6744527f56",
        "text": "forth is super similar, and I think factor’s compilation model leverages some very similar stuff",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hxqx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "forth is super similar, and I think factor’s compilation model leverages some very similar stuff"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1594519738.270600",
        "client_msg_id": "eb997f5e-b184-4a7a-90b1-b90c9e428621",
        "text": "as far as the extra tooling for fexpr-like stuff—red\/rebol seem to have a bunch of quote-like facilities for dealing with different stages of evaluation etc. like a `set-word:` vs a `'lit-word` vs a `:get-word` vs a `word`. havent figured out how all of it works together yet, but it seems like it uses the same data structure in pretty much every case… almost like clojure’s omnipresent use of nested maps\/edn—but it seems to extend to binding syntax instead of just raw data. idk. I’m finding it pretty mind-bending",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K4G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "as far as the extra tooling for fexpr-like stuff—red\/rebol seem to have a bunch of quote-like facilities for dealing with different stages of evaluation etc. like a "
                            },
                            {
                                "type": "text",
                                "text": "set-word:",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vs a "
                            },
                            {
                                "type": "text",
                                "text": "'lit-word",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vs a "
                            },
                            {
                                "type": "text",
                                "text": ":get-word",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vs a "
                            },
                            {
                                "type": "text",
                                "text": "word",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". havent figured out how all of it works together yet, but it seems like it uses the same data structure in pretty much every case… almost like clojure’s omnipresent use of nested maps\/edn—but it seems to extend to binding syntax instead of just raw data. idk. I’m finding it pretty mind-bending"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1594520261.270800",
        "client_msg_id": "6dcc1e91-4465-4364-b3a3-782a93a6bc53",
        "text": "<http:\/\/blog.hostilefork.com\/rebol-vs-lisp-macros\/> found via a thread",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "attachments": [
            {
                "title": "rebol : Rebol vs. Lisp Macros",
                "title_link": "http:\/\/blog.hostilefork.com\/rebol-vs-lisp-macros\/",
                "text": "Author: HostileFork, Title: Rebol vs. Lisp Macros, Date: 19-Apr-2016, Length: 2220 words",
                "fallback": "rebol : Rebol vs. Lisp Macros",
                "from_url": "http:\/\/blog.hostilefork.com\/rebol-vs-lisp-macros\/",
                "service_icon": "http:\/\/blog.hostilefork.com\/favicon.ico",
                "service_name": "blog.hostilefork.com",
                "id": 1,
                "original_url": "http:\/\/blog.hostilefork.com\/rebol-vs-lisp-macros\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p=Mqs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/blog.hostilefork.com\/rebol-vs-lisp-macros\/"
                            },
                            {
                                "type": "text",
                                "text": " found via a thread"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "amiga-tick",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1594520893.271200",
        "client_msg_id": "76c03f48-67b3-4d20-a734-328873d0306f",
        "text": "Also relevant <https:\/\/en.m.wikipedia.org\/wiki\/Fexpr|https:\/\/en.m.wikipedia.org\/wiki\/Fexpr>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "attachments": [
            {
                "title": "Fexpr",
                "title_link": "https:\/\/en.m.wikipedia.org\/wiki\/Fexpr",
                "from_url": "https:\/\/en.m.wikipedia.org\/wiki\/Fexpr",
                "author_name": "Wikipedia",
                "author_link": "https:\/\/en.wikipedia.org\/",
                "text": "In Lisp programming languages, a fexpr is a function whose operands are passed to it without being evaluated. When a fexpr is called, only the body of the fexpr is evaluated; no other evaluations take place except when explicitly initiated by the fexpr. In contrast, when an ordinary Lisp function is called, the operands are evaluated automatically, and only the results of these evaluations are provided to the function; and when a (traditional) Lisp macro is called, the operands are passed in unevaluated, but whatever result the macro function returns is automatically evaluated.",
                "fallback": "wikipedia: Fexpr",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/wikipedia.png",
                "id": 1,
                "original_url": "https:\/\/en.m.wikipedia.org\/wiki\/Fexpr"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AJW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also relevant "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.m.wikipedia.org\/wiki\/Fexpr",
                                "text": "https:\/\/en.m.wikipedia.org\/wiki\/Fexpr"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1594521541.271600",
        "client_msg_id": "e0d6e0c8-db53-4c24-8b14-84e750469d20",
        "text": "There is also this Hacker News discussion: <https:\/\/news.ycombinator.com\/item?id=11587952>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7oz0g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is also this Hacker News discussion: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=11587952"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1594521843.271800",
        "client_msg_id": "f732c1ee-10c0-42ff-aa8f-4284b9dea28f",
        "text": "Lol. I've been schooled. I was not familiar with this particular corner of comparative PL analysis. :rolling_on_the_floor_laughing: Thank you all for the reading material. :pray:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bro",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lol. I've been schooled. I was not familiar with this particular corner of comparative PL analysis. "
                            },
                            {
                                "type": "emoji",
                                "name": "rolling_on_the_floor_laughing",
                                "unicode": "1f923"
                            },
                            {
                                "type": "text",
                                "text": " Thank you all for the reading material. "
                            },
                            {
                                "type": "emoji",
                                "name": "pray",
                                "unicode": "1f64f"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1594523397.272100",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1594523503.000000"
        },
        "client_msg_id": "1c8d8511-dbbf-4a3c-a9e8-f5a44d119d4c",
        "text": "As someone who's built an fexpr-based Lisp: no, Red is not like fexprs. Y'all know I like Lisp, but we lispers need to beware of treating other models as equivalent just because we can do what they do _as long as we stick to s-expressions_. Even reader macros (which are quite unlispy) don't get you out of jail free from the restrictions of s-expressions.\n\nThe _correct_ response from a lisper on conversations of syntax is to pooh-pooh it: \"syntax doesn't matter, dontcha know?\" :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YeS\/3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As someone who's built an fexpr-based Lisp: no, Red is not like fexprs. Y'all know I like Lisp, but we lispers need to beware of treating other models as equivalent just because we can do what they do "
                            },
                            {
                                "type": "text",
                                "text": "as long as we stick to s-expressions",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Even reader macros (which are quite unlispy) don't get you out of jail free from the restrictions of s-expressions.\n\nThe "
                            },
                            {
                                "type": "text",
                                "text": "correct",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " response from a lisper on conversations of syntax is to pooh-pooh it: \"syntax doesn't matter, dontcha know?\" "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U01448TH3PG",
        "type": "message",
        "ts": "1594523679.272500",
        "edited": {
            "user": "U01448TH3PG",
            "ts": "1594523695.000000"
        },
        "client_msg_id": "fbcaab97-5c09-4c9d-a714-24ae867e950f",
        "text": "I'm sure I could google this, but what's the debugging experience like in rebol? It seems like the very flexible syntax you're describing would make visualizing debug information kind of tricky.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d9087b7dc5a6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-13\/1262329708080_d9087b7dc5a6a8e2dc86_72.jpg",
            "first_name": "Aleks",
            "real_name": "Aleks Litynski",
            "display_name": "Aleks",
            "team": "T5TCAFTA9",
            "name": "tavern.joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vuRh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm sure I could google this, but what's the debugging experience like in rebol? It seems like the very flexible syntax you're describing would make visualizing debug information kind of tricky."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1594525342.273300",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1594525359.000000"
        },
        "client_msg_id": "4ef92d71-711c-4921-a9b7-c36fce884cbe",
        "text": "red and rebol are both actually extremely difficult to google, and the documentation is either scattered or written directly to new programmers or at people who fully grok the language (the community is similar to that of APL in this regard). from what I can tell, debugging relies very heavily on the same reflection capabilities—they have some specialized words i’m not fluent in, like `probe`, `mold`,  `bind` , and `BIND?`. I imagine that if you’ve fully learned to read the matrix, it can be really pleasant to hook into code and inspect what’s bound where, evaluate with one function and compare it to another. Like if you had wrenches that fit all the nuts and bolts on your step-through debugger—but it also seems like you have to build the debugger yourself from the kit. I’m no expert, though. I hope (wish?) we have some people with more experience with red and\/or rebol specifically in the slack",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3cG7=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "red and rebol are both actually extremely difficult to google, and the documentation is either scattered or written directly to new programmers or at people who fully grok the language (the community is similar to that of APL in this regard). from what I can tell, debugging relies very heavily on the same reflection capabilities—they have some specialized words i’m not fluent in, like "
                            },
                            {
                                "type": "text",
                                "text": "probe",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "mold",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ",  "
                            },
                            {
                                "type": "text",
                                "text": "bind",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " , and "
                            },
                            {
                                "type": "text",
                                "text": "BIND?",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". I imagine that if you’ve fully learned to read the matrix, it can be really pleasant to hook into code and inspect what’s bound where, evaluate with one function and compare it to another. Like if you had wrenches that fit all the nuts and bolts on your step-through debugger—but it also seems like you have to build the debugger yourself from the kit. I’m no expert, though. I hope (wish?) we have some people with more experience with red and\/or rebol specifically in the slack"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1594525430.273600",
        "client_msg_id": "6a66fd5a-a941-4a5e-a5bd-630de3a51592",
        "text": "sidenote: APL *also* has a really weird scoping model that I don’t fully understand but that’s alluded to during a very fast-paced breakdown of the defn compiler (available on youtube. I can find the link if anyone wants it)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "siw89",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "sidenote: APL "
                            },
                            {
                                "type": "text",
                                "text": "also",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " has a really weird scoping model that I don’t fully understand but that’s alluded to during a very fast-paced breakdown of the defn compiler (available on youtube. I can find the link if anyone wants it)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1594525697.273800",
        "client_msg_id": "b8d7d277-9ba3-4a12-b496-fea526f89d32",
        "text": "I should also point out that there are 2 main dialects of Red, Red\/System is a special limited version that is intended for raw metal. It is intended for systems programming applications. Red has one big advantage is that the entire toolchain is around 1MB. So it is like FORTH in that it is super small.  A clever person can get a lot out of a language like Red.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594505114.252600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "373k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I should also point out that there are 2 main dialects of Red, Red\/System is a special limited version that is intended for raw metal. It is intended for systems programming applications. Red has one big advantage is that the entire toolchain is around 1MB. So it is like FORTH in that it is super small.  A clever person can get a lot out of a language like Red."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1594533499.274400",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1594533522.000000"
        },
        "client_msg_id": "5cf8b4ce-01ba-4335-b76c-7abd44356060",
        "text": "I don't want to deviate the topic too much, but have a look at \"video game historian\" on YouTube. It's amazing how work, history, and context there is behind some things. Apparently Tetris played a major role in bridging connections between the US and Russia in the wake of the cold war.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586022158.113700",
        "parent_user_id": "U01176YGU4W",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e3yX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't want to deviate the topic too much, but have a look at \"video game historian\" on YouTube. It's amazing how work, history, and context there is behind some things. Apparently Tetris played a major role in bridging connections between the US and Russia in the wake of the cold war."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]