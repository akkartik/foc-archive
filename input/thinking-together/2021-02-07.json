[
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1612689178.130800",
        "client_msg_id": "631469ef-5448-4b21-a00a-7226a8a59069",
        "text": "There's a good talk from I think Strange Loop which is basically the system <@U016VUZGUUQ> describes. It's a sort of infinite stack of Lisp interpreters. Whenever an unhandled error occurs, it doesn't crash, it bumps you up one meta-level and gives you a chance to \"explain yourself\".\n\nUnfortunately I can't remember the speaker's name so I can't find it now... I think she might actually be on the Slack.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612656314.123000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yfi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's a good talk from I think Strange Loop which is basically the system "
                            },
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " describes. It's a sort of infinite stack of Lisp interpreters. Whenever an unhandled error occurs, it doesn't crash, it bumps you up one meta-level and gives you a chance to \"explain yourself\".\n\nUnfortunately I can't remember the speaker's name so I can't find it now... I think she might actually be on the Slack."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCGAK10LS",
                    "UAVCC2X70",
                    "UMVFWPZ36"
                ],
                "count": 3
            },
            {
                "name": "bulb",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UF71PR58X",
        "type": "message",
        "ts": "1612717793.131300",
        "client_msg_id": "7ea3ca42-b380-4a63-b70e-f133cb696428",
        "text": "I think you might be referring to this talk by Nada Amin: <https:\/\/www.youtube.com\/watch?v=SrKj4hYic5A&amp;ab_channel=StrangeLoopConference>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga7e159fad28",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8a7e159fad28f672ca794fb7f2bf7f0f.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Miles Sabin",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "miles",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612656314.123000",
        "parent_user_id": "UCGAK10LS",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "\"Programming Should Eat Itself\" by Nada Amin",
                "title_link": "https:\/\/www.youtube.com\/watch?v=SrKj4hYic5A&amp;ab_channel=StrangeLoopConference",
                "author_name": "Strange Loop Conference",
                "author_link": "https:\/\/www.youtube.com\/channel\/UC_QIfHvN9auy2CoOdSfMWDw",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/SrKj4hYic5A\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: \"Programming Should Eat Itself\" by Nada Amin",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/SrKj4hYic5A?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=SrKj4hYic5A&amp;ab_channel=StrangeLoopConference",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=SrKj4hYic5A&amp;ab_channel=StrangeLoopConference"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BO4e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think you might be referring to this talk by Nada Amin: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=SrKj4hYic5A&ab_channel=StrangeLoopConference"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UDQBTJ211",
                    "UHWC9PXBL",
                    "U013ZLJARC7"
                ],
                "count": 3
            },
            {
                "name": "fire",
                "users": [
                    "U016VUZGUUQ",
                    "UAVCC2X70"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1612722075.132700",
        "client_msg_id": "BE0ECC20-7ABA-4E63-9AE7-6ED9B51EDDC3",
        "text": "the behavior <@U016VUZGUUQ> describes is pretty much exactly how smalltalk works: <https:\/\/youtu.be\/eGaKZBr0ga4|https:\/\/youtu.be\/eGaKZBr0ga4>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612656314.123000",
        "parent_user_id": "UCGAK10LS",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "MountainWest RubyConf 2014 - But Really, You Should Learn Smalltalk",
                "title_link": "https:\/\/youtu.be\/eGaKZBr0ga4",
                "author_name": "Confreaks",
                "author_link": "https:\/\/www.youtube.com\/user\/Confreaks",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/eGaKZBr0ga4\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: MountainWest RubyConf 2014 - But Really, You Should Learn Smalltalk",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/eGaKZBr0ga4?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/eGaKZBr0ga4",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/eGaKZBr0ga4"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8xeX5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the behavior "
                            },
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " describes is pretty much exactly how smalltalk works: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/eGaKZBr0ga4",
                                "text": "https:\/\/youtu.be\/eGaKZBr0ga4"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016LEA3J1H",
        "type": "message",
        "ts": "1612734749.133000",
        "client_msg_id": "36d1b7d0-1d32-49a4-a99e-fa97f8bd55ba",
        "text": "you might also be interested in the \"typed holes\" concept that Darklang and others have been pushing forward, its not quite error-less but it is a lot closer to runnable-while-incomplete programs",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7082261f477c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-06\/1225163496802_7082261f477cd8a85548_72.jpg",
            "first_name": "Harry",
            "real_name": "Harry Brundage",
            "display_name": "Harry Brundage",
            "team": "T5TCAFTA9",
            "name": "harry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612656314.123000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OI\/C",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you might also be interested in the \"typed holes\" concept that Darklang and others have been pushing forward, its not quite error-less but it is a lot closer to runnable-while-incomplete programs"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1612735490.133200",
        "client_msg_id": "5ae73f60-4603-49c3-83f0-4749f583b56d",
        "text": "Combining \"no syntax errors\" and \"composable expressions\" might be actually impossible. I'm guessing you would start by dealing with the case when you can't tell where an expression ends and the outer one it is composed with resumes. Or maybe mandatory structured editing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612656314.123000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1Y91",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Combining \"no syntax errors\" and \"composable expressions\" might be actually impossible. I'm guessing you would start by dealing with the case when you can't tell where an expression ends and the outer one it is composed with resumes. Or maybe mandatory structured editing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1612747339.133800",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1612747467.000000"
        },
        "client_msg_id": "02e212de-f8d2-4402-bf11-fed43599ef59",
        "text": "<@U016LEA3J1H> Typed holes are interesting. <https:\/\/hazel.org\/|Hazel> (which I linked earlier) is perhaps the most interesting iteration of the idea, because it _propagates_ erroneous subexpressions (instead of crashing), and shows you them in the output. However, I don't believe they've developed a means of programmatically _recovering from_ (responding to) such an error. Their goal is mainly to aid code comprehension and debugging.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612656314.123000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=JH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016LEA3J1H"
                            },
                            {
                                "type": "text",
                                "text": " Typed holes are interesting. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/hazel.org\/",
                                "text": "Hazel"
                            },
                            {
                                "type": "text",
                                "text": " (which I linked earlier) is perhaps the most interesting iteration of the idea, because it "
                            },
                            {
                                "type": "text",
                                "text": "propagates",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " erroneous subexpressions (instead of crashing), and shows you them in the output. However, I don't believe they've developed a means of programmatically "
                            },
                            {
                                "type": "text",
                                "text": "recovering from",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (responding to) such an error. Their goal is mainly to aid code comprehension and debugging."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1612747414.134200",
        "client_msg_id": "cbb3aaf2-2c9b-4ecd-9f16-cec37b828d06",
        "text": "<@U016VUZGUUQ> Yeah for text-string languages it's probably not realistic (unless your language looks something like Dan Cook's suggestions). I am indeed focusing on structured editing in my own work.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612656314.123000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MYj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " Yeah for text-string languages it's probably not realistic (unless your language looks something like Dan Cook's suggestions). I am indeed focusing on structured editing in my own work."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U016VUZGUUQ",
                    "UA14TGLTC",
                    "U013ZLJARC7"
                ],
                "count": 3
            }
        ]
    }
]