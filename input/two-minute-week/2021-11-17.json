[
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1637138047.054700",
        "client_msg_id": "5f12c1ae-a832-4374-af6c-ac282cefc2bc",
        "text": "&gt; One question that occurs to me is how valuable the ability to modify runtime state is when the unit of sharing is static code.\nJust to quote (emphasis are mine) the first quote in the teliva repo: “Enable all people to *modify* the software they use *in the course of using it*.”\n\nI'm a user, the app is running, it has a state, and I see some behavior that I would like to change now. I can hit Ctrl-e, make the change, come back to running it with the new behavior with the previous state. Like a chat app, where a discussion is ongoing, but I want to change the display, like adding a view of all users names, and I don't want to loose previous messages when I'm back.\n\nOr for live coding.\n\nBut when I close the app, I'm OK if the state is not persisted. It can be an interesting feature, but another one.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1636928453.051600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t4q",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One question that occurs to me is how valuable the ability to modify runtime state is when the unit of sharing is static code."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just to quote (emphasis are mine) the first quote in the teliva repo: “Enable all people to "
                            },
                            {
                                "type": "text",
                                "text": "modify",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the software they use "
                            },
                            {
                                "type": "text",
                                "text": "in the course of using it",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".”\n\nI'm a user, the app is running, it has a state, and I see some behavior that I would like to change now. I can hit Ctrl-e, make the change, come back to running it with the new behavior with the previous state. Like a chat app, where a discussion is ongoing, but I want to change the display, like adding a view of all users names, and I don't want to loose previous messages when I'm back.\n\nOr for live coding.\n\nBut when I close the app, I'm OK if the state is not persisted. It can be an interesting feature, but another one."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1637159952.054900",
        "client_msg_id": "9c1f71ed-5b2e-49ef-9694-f9bfbefb68a7",
        "text": "I'm definitely going to be looking for ways to implement hot-patching as I continue to understand the Lua implementation.\n\nThe point of brutalism is to reduce costs. Here the set of features provided and their complexity. I'm not sure Lua is a good substrate for transparently allowing hot-patching. That might require a Smalltalk. So far my ambition has been just to allow apps to be written in a crash-only manner. For example, build the chat app to frequently save data to disk. When it starts, by default look for data from the previous run to reload. Starting afresh becomes an easy special case there.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1636928453.051600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w9oyk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm definitely going to be looking for ways to implement hot-patching as I continue to understand the Lua implementation.\n\nThe point of brutalism is to reduce costs. Here the set of features provided and their complexity. I'm not sure Lua is a good substrate for transparently allowing hot-patching. That might require a Smalltalk. So far my ambition has been just to allow apps to be written in a crash-only manner. For example, build the chat app to frequently save data to disk. When it starts, by default look for data from the previous run to reload. Starting afresh becomes an easy special case there."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE0H4170F",
        "type": "message",
        "ts": "1637166847.055200",
        "client_msg_id": "3c6d40cb-699a-45fd-8e9b-9259ec165809",
        "text": "Neat project! I like the data\/function overview and the general concept. I’ve done live coding performances in Lua before… curious what you think the drawbacks are of hot-patching.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2cfca823894",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/72cfca823894034e7bdbc31623c007d3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Charlie Roberts",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "charlie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1636928453.051600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kjA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Neat project! I like the data\/function overview and the general concept. I’ve done live coding performances in Lua before… curious what you think the drawbacks are of hot-patching."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1637166908.055400",
        "client_msg_id": "727804cd-7110-4e85-81d6-9c9337eaf911",
        "text": "Saving data from the app, is a kind of \"VM save\". But this is up to the user to define what it means to save the app state. Which is great because: 1. reduce complexity on the teliva side (keep it \"brutalist\") 2. this \"power\" is in the user's hand.\n\nMaybe Lua already provides some serialization tools?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1636928453.051600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WGN=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Saving data from the app, is a kind of \"VM save\". But this is up to the user to define what it means to save the app state. Which is great because: 1. reduce complexity on the teliva side (keep it \"brutalist\") 2. this \"power\" is in the user's hand.\n\nMaybe Lua already provides some serialization tools?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1637172406.055600",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1637180705.000000"
        },
        "client_msg_id": "d647e5b7-5c14-47f2-8d43-02198bfda6be",
        "text": "<@UE0H4170F> Mostly just that I don't know how to do it, and how much effort is involved. If you have experience using hot-patching in Lua I'm very interested to pick your brain! Do you happen to have a repo for an old live-coding session lying around, for example?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1636928453.051600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qW1lS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE0H4170F"
                            },
                            {
                                "type": "text",
                                "text": " Mostly just that I don't know how to do it, and how much effort is involved. If you have experience using hot-patching in Lua I'm very interested to pick your brain! Do you happen to have a repo for an old live-coding session lying around, for example?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1637172567.055800",
        "client_msg_id": "ce1e67d3-9e33-49eb-aac4-06a9d8be8edf",
        "text": "<@UJ6LDMMN0> do I understand correctly that you're suggesting just focusing on saving\/restarting in-memory state during a session, and punting on saving to disk as an app-level concern?\n\nI've never dealt with hot-patching before. If I set a breakpoint in the middle of a function, then modify the code for the function, what is the expected result when I resume?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1636928453.051600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QdZr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJ6LDMMN0"
                            },
                            {
                                "type": "text",
                                "text": " do I understand correctly that you're suggesting just focusing on saving\/restarting in-memory state during a session, and punting on saving to disk as an app-level concern?\n\nI've never dealt with hot-patching before. If I set a breakpoint in the middle of a function, then modify the code for the function, what is the expected result when I resume?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1637179542.056100",
        "client_msg_id": "80fa7b5f-edd7-44db-8040-c5bbca65a837",
        "text": "Sorry I wasn't clear, I was talking about your idea: \"build the chat app to frequently save data to disk. When it starts, by default look for data from the previous run to reload. Starting afresh becomes an easy special case there.\"\n\nIt is a kind of poor man \"VM save\" and is up to the user to decide what it really means. And as with this kind of experiment, the idea is to empower the user, it might good enough while keeping things simpler for teliva.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1636928453.051600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i7oXx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry I wasn't clear, I was talking about your idea: \"build the chat app to frequently save data to disk. When it starts, by default look for data from the previous run to reload. Starting afresh becomes an easy special case there.\"\n\nIt is a kind of poor man \"VM save\" and is up to the user to decide what it really means. And as with this kind of experiment, the idea is to empower the user, it might good enough while keeping things simpler for teliva."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1637180678.056300",
        "client_msg_id": "7792da5a-c394-41c5-a5e4-4820d70d5423",
        "text": "Oh, so no changes needed?! I fear I'm having trouble hearing what you're suggesting because my brain is too full of my own ideas.\n\nTo answer one previous question, yes I think Lua has good support for serializing arbitrary data. I might package a JSON library by default or something like that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1636928453.051600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SJ0AJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh, so no changes needed?! I fear I'm having trouble hearing what you're suggesting because my brain is too full of my own ideas.\n\nTo answer one previous question, yes I think Lua has good support for serializing arbitrary data. I might package a JSON library by default or something like that."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1637183017.056600",
        "client_msg_id": "8bc12870-9a63-41be-a93e-39d08e8c15e6",
        "text": "Yes, it would be nice to provide a way to make it easy for the app dev\/user to persist her app state. And maybe with automatic save and restore around any code edit?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1636928453.051600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ivOO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, it would be nice to provide a way to make it easy for the app dev\/user to persist her app state. And maybe with automatic save and restore around any code edit?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1637183234.056800",
        "client_msg_id": "4a0227e1-ee77-4349-a392-5b6e1ac172f6",
        "text": "Also to be clear, I also like the hot reload way of doing things (and the power it brings), but I also fully understand your point, the brutalist approach, which might be \"malleable\" enough and much simpler.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1636928453.051600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GgvX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also to be clear, I also like the hot reload way of doing things (and the power it brings), but I also fully understand your point, the brutalist approach, which might be \"malleable\" enough and much simpler."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0H4170F",
        "type": "message",
        "ts": "1637187871.057000",
        "client_msg_id": "6357e4d3-0830-4a8a-8dff-3046b92e9392",
        "text": "<@UCUSW7WVD> I was just thinking with `loadstring`… you lose local scope, but if your data is stored globally I don’t think that would matter. But here’s a paper on a Lua-based creative coding system I was involved with many years ago that called out to Clang, compiled C code (based on data representations provided by the Lua app), and linked the resulting JIT-compiled function back into the running Lua application: <https:\/\/www.researchgate.net\/publication\/242725288_LuaAV_Extensibility_and_Heterogeneity_for_Audiovisual_Computing>\nIt worked surprisingly well tbh…  although I wasn’t involved with that part and it always seemed like deep dark magic to me :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2cfca823894",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/72cfca823894034e7bdbc31623c007d3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Charlie Roberts",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "charlie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1636928453.051600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zVwZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " I was just thinking with "
                            },
                            {
                                "type": "text",
                                "text": "loadstring",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "… you lose local scope, but if your data is stored globally I don’t think that would matter. But here’s a paper on a Lua-based creative coding system I was involved with many years ago that called out to Clang, compiled C code (based on data representations provided by the Lua app), and linked the resulting JIT-compiled function back into the running Lua application: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.researchgate.net\/publication\/242725288_LuaAV_Extensibility_and_Heterogeneity_for_Audiovisual_Computing"
                            },
                            {
                                "type": "text",
                                "text": "\nIt worked surprisingly well tbh…  although I wasn’t involved with that part and it always seemed like deep dark magic to me "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]