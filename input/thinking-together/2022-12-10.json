[
    {
        "user": "U02028JHX37",
        "type": "message",
        "ts": "1670711298.043479",
        "client_msg_id": "6c3fbc48-d1cd-4317-ba7d-d08ec9d7af80",
        "text": "Do computers make a qualitative difference compared to paper and a concentrated human mind?\n\nThey certainly improve the speed at which we can perform certain mechanical tasks by automating them (e.g. calculations, simulations and rendering of their results, even some basic logical inference can be done automatically). So even though this all can be in principle performed manually, ain’t nobody got time for that :)) This is similar to how paper dramatically expands the working and long-term memory, hence augmenting mental capabilities.\n\nHowever, paper also expands qualitatively over mere speech by adding a second dimension for expression. This allows for not only planar, but also spatial objects to be represented trivially (they’re sometimes easier to represent than text). Also, it makes possible the use of maps and graphs, which are just impossible to imitate using just speech.\n\nComputers add a dimension for expression, namely time. One can create objects that change in time, and also dynamically change them while they’re changing. But this is where I’m not sure if it makes that much of a difference. In my opinion, there’s always a certain limit beyond which changing a dynamic object gets unbelievably difficult (the “walled-garden” or “programmer-didn’t-think-of-that” phenomenon). On paper, you might need to work with a static representation of a process, but you can manipulate it without restraints. Also from the same phenomenon, we get a limited compositionality\/mobility of dynamic objects. This is not a problem with paper, where the mind is free to consider different mental and symbolic objects to interact.\n\nThe last point might have something to do with the fact that whereas we know some threshold for literacy (at least limited to using paper and writing for personal thinking), and that is:\n\n1. learn to read and write letters\n2. learn to organize thoughts on paper\n3. done (there’s always room for improvement, but this baseline still covers the qualitative advantages of paper)\nCompare that with “computing literacy” which not only doesn’t exist, but if it did, would be something like:\n\n1. learn to use some basic programs and how programs work in general\n2. learn to write basic procedural programs in some “nice” programming environment (= not complex systems, not parallel, but not necessarily in a procedural language; what the environment should look like is of concern to e.g. Jonathan Edwards)\n… so far so good, but when you hit the limit …\n\n3. either wait for some programmer\/company to expand the stuff you’re using, or …\n4. learn to program in universal languages, on general-purpose platforms\n5. rewrite the stuff you’re using, but somewhat better\n6. done? (not really - your program is buggy \/ your program can’t interoperate with all the other stuff that’s out there which the old program could interoperate with \/ …)\n\nWe know how unreal of a threshold numbers 4 and 5 are for the general public. If we instead restrict the threshold to 1 and 2, we don’t get the qualitative advantage of the computer.\n\nSo the question is: If viewed as means to augment human intellect, do computers provide qualitative (not just quantitative) advantages over pen, paper and the human mind?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdf13e3ce9df",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/df13e3ce9dfc39e2f387bd3d6e87b952.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jan Ruzicka",
            "display_name": "Jan Ruzicka",
            "team": "T5TCAFTA9",
            "name": "jan.ruzicka01",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1670711298.043479",
        "reply_count": 16,
        "reply_users_count": 8,
        "latest_reply": "1671091699.717409",
        "reply_users": [
            "U03CEGR3HSL",
            "U016VUZGUUQ",
            "U013ZLJARC7",
            "U02028JHX37",
            "U03B14DUZSA",
            "UA14TGLTC",
            "UGWUJUZHT",
            "U035QJ14NN9"
        ],
        "replies": [
            {
                "user": "U03CEGR3HSL",
                "ts": "1670713026.527349"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1670720071.031889"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1670753402.132579"
            },
            {
                "user": "U02028JHX37",
                "ts": "1670769414.765469"
            },
            {
                "user": "U03B14DUZSA",
                "ts": "1670806922.277079"
            },
            {
                "user": "U03CEGR3HSL",
                "ts": "1670807177.187999"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1670823345.850969"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1670834368.735079"
            },
            {
                "user": "U02028JHX37",
                "ts": "1670836396.935489"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1670843909.427699"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1670848486.238359"
            },
            {
                "user": "U035QJ14NN9",
                "ts": "1670962295.226619"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1670994471.700029"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1671052728.222779"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1671077137.819909"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1671091699.717409"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zA4G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do computers make a qualitative difference compared to paper and a concentrated human mind?\n\nThey certainly improve the speed at which we can perform certain mechanical tasks by automating them (e.g. calculations, simulations and rendering of their results, even some basic logical inference can be done automatically). So even though this all can be in principle performed manually, ain’t nobody got time for that :)) This is similar to how paper dramatically expands the working and long-term memory, hence augmenting mental capabilities.\n\nHowever, paper also expands qualitatively over mere speech by adding a second dimension for expression. This allows for not only planar, but also spatial objects to be represented trivially (they’re sometimes easier to represent than text). Also, it makes possible the use of maps and graphs, which are just impossible to imitate using just speech.\n\nComputers add a dimension for expression, namely time. One can create objects that change in time, and also dynamically change them while they’re changing. But this is where I’m not sure if it makes that much of a difference. In my opinion, there’s always a certain limit beyond which changing a dynamic object gets unbelievably difficult (the “walled-garden” or “programmer-didn’t-think-of-that” phenomenon). On paper, you might need to work with a static representation of a process, but you can manipulate it without restraints. Also from the same phenomenon, we get a limited compositionality\/mobility of dynamic objects. This is not a problem with paper, where the mind is free to consider different mental and symbolic objects to interact.\n\nThe last point might have something to do with the fact that whereas we know some threshold for literacy (at least limited to using paper and writing for personal thinking), and that is:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "learn to read and write letters"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "learn to organize thoughts on paper"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "done (there’s always room for improvement, but this baseline still covers the qualitative advantages of paper)"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nCompare that with “computing literacy” which not only doesn’t exist, but if it did, would be something like:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "learn to use some basic programs and how programs work in general"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "learn to write basic procedural programs in some “nice” programming environment (= not complex systems, not parallel, but not necessarily in a procedural language; what the environment should look like is of concern to e.g. Jonathan Edwards)"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n… so far so good, but when you hit the limit …\n\n3. either wait for some programmer\/company to expand the stuff you’re using, or …\n4. learn to program in universal languages, on general-purpose platforms\n5. rewrite the stuff you’re using, but somewhat better\n6. done? (not really - your program is buggy \/ your program can’t interoperate with all the other stuff that’s out there which the old program could interoperate with \/ …)\n\nWe know how unreal of a threshold numbers 4 and 5 are for the general public. If we instead restrict the threshold to 1 and 2, we don’t get the qualitative advantage of the computer.\n\nSo the question is: If viewed as means to augment human intellect, do computers provide qualitative (not just quantitative) advantages over pen, paper and the human mind?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1670713026.527349",
        "client_msg_id": "c978f7ab-b244-464c-9629-f2e3633c09ac",
        "text": "You may find this article from the original wiki interesting. <https:\/\/wiki.c2.com\/?IsAnythingBetterThanPaper|https:\/\/wiki.c2.com\/?IsAnythingBetterThanPaper>\n\nOne of the things Richard stallman discusses in the original Emacs paper is the gradual progression that a good programmable program can provide for users. At first they can just use the program. Then they can alter settings. Then they can add tiny one-line hooks to customize specific behaviors. Then they can move on to actually implementing larger pieces of functionality. At some point a user may realize that they are now programming, but it is difficult to identify the moment when they transitioned from being a user to being a programmer.\n\n<https:\/\/dspace.mit.edu\/handle\/1721.1\/5736|https:\/\/dspace.mit.edu\/handle\/1721.1\/5736>\n\nA similar progression can happen in many command line-based systems, such as with Unix. At first the user simply uses the commands the system provides. Then they create a few aliases for convenience. Then they create some very simple shell scripts that just run a couple commands. Then they create slightly more sophisticated shell scripts that process multiple files or contain a conditional. Then those scripts get longer, and at some point they are obviously programming, but again it is difficult to spot the moment when they shifted from just using the software to programming, because the on ramp is so gradual.\n\nFor many things, such as calculations or database management, computers \"just\" allow us to perform the same actions at a greater scale, but at some point, when one is looking at multiple orders of magnitude difference in a quantitative measurement, it creates a qualitative difference in the types of activities that are possible.\n\nFrom a communications perspective, the amazing thing a computer can do that paper cannot is respond to the reader. If I create a spreadsheet modeling my projections for income and expenses next year and email it to you, you can then adjust the spreadsheet numbers and watch what happens within my model. With just paper, you need to understand my model well enough to perform the calculations yourself before you can experiment with alternative inputs.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7fd1bd5c536",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7fd1bd5c53681452a80086a54ebb2ad1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Personal",
            "real_name": "Personal Dynamic Media",
            "display_name": "Personal Dynamic Media",
            "team": "T5TCAFTA9",
            "name": "personaldynamicmedia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1670711298.043479",
        "parent_user_id": "U02028JHX37",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6sN6X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You may find this article from the original wiki interesting. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/wiki.c2.com\/?IsAnythingBetterThanPaper",
                                "text": "https:\/\/wiki.c2.com\/?IsAnythingBetterThanPaper"
                            },
                            {
                                "type": "text",
                                "text": "\n\nOne of the things Richard stallman discusses in the original Emacs paper is the gradual progression that a good programmable program can provide for users. At first they can just use the program. Then they can alter settings. Then they can add tiny one-line hooks to customize specific behaviors. Then they can move on to actually implementing larger pieces of functionality. At some point a user may realize that they are now programming, but it is difficult to identify the moment when they transitioned from being a user to being a programmer.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/dspace.mit.edu\/handle\/1721.1\/5736",
                                "text": "https:\/\/dspace.mit.edu\/handle\/1721.1\/5736"
                            },
                            {
                                "type": "text",
                                "text": "\n\nA similar progression can happen in many command line-based systems, such as with Unix. At first the user simply uses the commands the system provides. Then they create a few aliases for convenience. Then they create some very simple shell scripts that just run a couple commands. Then they create slightly more sophisticated shell scripts that process multiple files or contain a conditional. Then those scripts get longer, and at some point they are obviously programming, but again it is difficult to spot the moment when they shifted from just using the software to programming, because the on ramp is so gradual.\n\nFor many things, such as calculations or database management, computers \"just\" allow us to perform the same actions at a greater scale, but at some point, when one is looking at multiple orders of magnitude difference in a quantitative measurement, it creates a qualitative difference in the types of activities that are possible.\n\nFrom a communications perspective, the amazing thing a computer can do that paper cannot is respond to the reader. If I create a spreadsheet modeling my projections for income and expenses next year and email it to you, you can then adjust the spreadsheet numbers and watch what happens within my model. With just paper, you need to understand my model well enough to perform the calculations yourself before you can experiment with alternative inputs."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1670720071.031889",
        "client_msg_id": "8be62a59-12ae-4f29-b896-bfc39db1f525",
        "text": "\"Augment human intellect\" is rather specific compared to the space of things you might compare to \"paper and a concentrated human mind\", but still not specific enough IMO to support a definite answer. It will depend on the problem to be solved. And the problem-solving style of the person involved.\n\nThere are some problems where being able to rapidly run variations on a model (I'm thinking of my budget expressed, honestly, currently expressed as a Python program), without context switching between arithmetic and conceptual thought, is handy. But doing the arithmetic by hand can also be helpful. Similar for the general case of solving program-shaped problems, there are insights to be had both in writing the program\/model, running it and examining the results, and doing the work manually.\n\nPractically IMO, the most useful thing about computers for what you might call \"augmentation\" is their memory, not so much computation per se. Hence all the myriad notes\/personal database apps, digital whiteboards, etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1670711298.043479",
        "parent_user_id": "U02028JHX37",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1zvGL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Augment human intellect\" is rather specific compared to the space of things you might compare to \"paper and a concentrated human mind\", but still not specific enough IMO to support a definite answer. It will depend on the problem to be solved. And the problem-solving style of the person involved.\n\nThere are some problems where being able to rapidly run variations on a model (I'm thinking of my budget expressed, honestly, currently expressed as a Python program), without context switching between arithmetic and conceptual thought, is handy. But doing the arithmetic by hand can also be helpful. Similar for the general case of solving program-shaped problems, there are insights to be had both in writing the program\/model, running it and examining the results, and doing the work manually.\n\nPractically IMO, the most useful thing about computers for what you might call \"augmentation\" is their memory, not so much computation per se. Hence all the myriad notes\/personal database apps, digital whiteboards, etc."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]