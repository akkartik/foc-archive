[
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1611150525.049900",
        "client_msg_id": "df78a7fd-2762-4560-9e6c-0388da7e24cf",
        "text": "I have a question, and maybe it is already something that exists. But I do not know and hence asking here (also kind of food for thought). I was wondering if there is any language which has been designed from ground up to make mathematical formalism as a first class citizen. Precisely I was thinking some kind of way to write set builder notation and then built-in functions to perform and  generate (here the generate word is used in a double meaning, think about generators, as some of those operations can generate infinite data) basic operations, such that intersection, union, sigma algebra, and such?\n\nIt is something I am thinking. As having something like this will open up doors to programming into a lot of mathematical domains pretty accessible. Topology, Measure theory, Order Theory, Category Theory etc. etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611150525.049900",
        "reply_count": 9,
        "reply_users_count": 8,
        "latest_reply": "1611360200.014900",
        "reply_users": [
            "U013ZLJARC7",
            "UJBAJNFLK",
            "UPVBV34EL",
            "U01AD80KMLK",
            "U019CPED6T1",
            "UFPRPSA4S",
            "UA14TGLTC",
            "UDKTZSD6H"
        ],
        "replies": [
            {
                "user": "U013ZLJARC7",
                "ts": "1611151281.050600"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1611151484.050800"
            },
            {
                "user": "UPVBV34EL",
                "ts": "1611159230.051400"
            },
            {
                "user": "U01AD80KMLK",
                "ts": "1611166813.059800"
            },
            {
                "user": "U019CPED6T1",
                "ts": "1611173424.066100"
            },
            {
                "user": "UFPRPSA4S",
                "ts": "1611208977.000800"
            },
            {
                "user": "UPVBV34EL",
                "ts": "1611221603.004300"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1611280699.006500"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1611360200.014900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MxJi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a question, and maybe it is already something that exists. But I do not know and hence asking here (also kind of food for thought). I was wondering if there is any language which has been designed from ground up to make mathematical formalism as a first class citizen. Precisely I was thinking some kind of way to write set builder notation and then built-in functions to perform and  generate (here the generate word is used in a double meaning, think about generators, as some of those operations can generate infinite data) basic operations, such that intersection, union, sigma algebra, and such?\n\nIt is something I am thinking. As having something like this will open up doors to programming into a lot of mathematical domains pretty accessible. Topology, Measure theory, Order Theory, Category Theory etc. etc."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1611151281.050600",
        "client_msg_id": "713b303c-1949-4efc-abcb-f94346956fbb",
        "text": "Consider Agda, for example this recursive set tutorial:\n<https:\/\/people.inf.elte.hu\/divip\/AgdaTutorial\/Sets.Recursive.html#1>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611150525.049900",
        "parent_user_id": "UPVBV34EL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1AO2x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Consider Agda, for example this recursive set tutorial:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/people.inf.elte.hu\/divip\/AgdaTutorial\/Sets.Recursive.html#1"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UPVBV34EL",
                    "UA14TGLTC",
                    "U017P07TA8L"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1611151484.050800",
        "client_msg_id": "658bd53a-c78b-4091-bf71-6bcf16e59d9e",
        "text": "Not sure anything corresponds exactly to what you are looking for, but Lean (<https:\/\/leanprover.github.io\/about\/>) is certainly worth a look, as are other proof-oriented languages such as Coq's (<https:\/\/coq.inria.fr\/>) underlying language Gallina. Computer algebra systems are another candidate. Axiom (<https:\/\/github.com\/daly\/axiom>) is huge but also the most likely to contain what you are looking for. There are also more specialized systems popular in specific branches of mathematics, which unfortunately I don't know much about.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611150525.049900",
        "parent_user_id": "UPVBV34EL",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "daly\/axiom",
                "title_link": "https:\/\/github.com\/daly\/axiom",
                "text": "Axiom is a free, open source computer algebra system - daly\/axiom",
                "fallback": "GitHub: daly\/axiom",
                "thumb_url": "https:\/\/avatars0.githubusercontent.com\/u\/1325?s=400&v=4",
                "from_url": "https:\/\/github.com\/daly\/axiom",
                "thumb_width": 100,
                "thumb_height": 100,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/daly\/axiom"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rgyz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure anything corresponds exactly to what you are looking for, but Lean ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/leanprover.github.io\/about\/"
                            },
                            {
                                "type": "text",
                                "text": ") is certainly worth a look, as are other proof-oriented languages such as Coq's ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/coq.inria.fr\/"
                            },
                            {
                                "type": "text",
                                "text": ") underlying language Gallina. Computer algebra systems are another candidate. Axiom ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/daly\/axiom"
                            },
                            {
                                "type": "text",
                                "text": ") is huge but also the most likely to contain what you are looking for. There are also more specialized systems popular in specific branches of mathematics, which unfortunately I don't know much about."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UPVBV34EL",
                    "U017P07TA8L"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1611159230.051400",
        "client_msg_id": "3ee7c4ff-656c-4891-b8f6-131d1f44f46d",
        "text": "Thanks both of you. I will look into them. Also, interesting to see what it (may) take to build such a system with an extension \/ library system built in so that people can take the basic system as extend it to the domain they are interested into",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611150525.049900",
        "parent_user_id": "UPVBV34EL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8lb8u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks both of you. I will look into them. Also, interesting to see what it (may) take to build such a system with an extension \/ library system built in so that people can take the basic system as extend it to the domain they are interested into"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1611164461.059600",
        "client_msg_id": "428706f6-f824-4758-ae23-72383902223b",
        "text": "I was reading some text vs. binary file arguments and one thing that kept coming up was that text files are easier to recover when they get corrupted. I've got a couple of questions regarding this and would like to hear your thoughts:\n1. When did you have to deal with corrupted files and what was causing the corruption? \n2. How did the corruption look like (single swapped bits, part of the file missing, ...)? \nMy current line of thought is that small errors in binary files could simply be corrected by adding redundency to the format (crc etc.) and larger missing parts wouldn't be easy to recover from in text formats as well. Therefore the argument wouldn't make much sense. I'm curious what you might have experienced as I can't remember to have seen corrupted files in the last couple of years.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611164461.059600",
        "reply_count": 10,
        "reply_users_count": 10,
        "latest_reply": "1611222408.004800",
        "reply_users": [
            "U01AD80KMLK",
            "U0112C10V4Y",
            "UHWC9PXBL",
            "U016VUZGUUQ",
            "UJBAJNFLK",
            "UAL7940NM",
            "UL5AX4G2H",
            "UCUSW7WVD",
            "U013ZLJARC7",
            "UBN9AFS0N"
        ],
        "replies": [
            {
                "user": "U01AD80KMLK",
                "ts": "1611166920.060000"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611168319.060200"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1611169133.063400"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1611169930.064200"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1611170449.064400"
            },
            {
                "user": "UAL7940NM",
                "ts": "1611174856.066600"
            },
            {
                "user": "UL5AX4G2H",
                "ts": "1611175067.066800"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1611193852.000100"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1611217692.004100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1611222408.004800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bsZK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was reading some text vs. binary file arguments and one thing that kept coming up was that text files are easier to recover when they get corrupted. I've got a couple of questions regarding this and would like to hear your thoughts:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "When did you have to deal with corrupted files and what was causing the corruption? "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "How did the corruption look like (single swapped bits, part of the file missing, ...)? "
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My current line of thought is that small errors in binary files could simply be corrected by adding redundency to the format (crc etc.) and larger missing parts wouldn't be easy to recover from in text formats as well. Therefore the argument wouldn't make much sense. I'm curious what you might have experienced as I can't remember to have seen corrupted files in the last couple of years."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01AD80KMLK",
        "type": "message",
        "ts": "1611166813.059800",
        "client_msg_id": "9308061a-2e54-46ea-b2ac-a804c46d37de",
        "text": "Fortran was designed to do exactly that",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a07cdcb6d037",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-09\/1376906509376_a07cdcb6d037bf7b6a5e_72.jpg",
            "first_name": "",
            "real_name": "Denny Vrandečić",
            "display_name": "Denny Vrandečić",
            "team": "T5TCAFTA9",
            "name": "dvrandecic",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611150525.049900",
        "parent_user_id": "UPVBV34EL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gmLYm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Fortran was designed to do exactly that"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01AD80KMLK",
        "type": "message",
        "ts": "1611166920.060000",
        "client_msg_id": "62755443-ab0d-4efe-be41-0b3257e6225f",
        "text": "I saw corrupted files frequently, mostly when they are coming from the network and were cut in the middle, or when a stream wasn't working well, but also as part of memory dumps where some parts of the memory was written over etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a07cdcb6d037",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-09\/1376906509376_a07cdcb6d037bf7b6a5e_72.jpg",
            "first_name": "",
            "real_name": "Denny Vrandečić",
            "display_name": "Denny Vrandečić",
            "team": "T5TCAFTA9",
            "name": "dvrandecic",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611164461.059600",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0cQR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I saw corrupted files frequently, mostly when they are coming from the network and were cut in the middle, or when a stream wasn't working well, but also as part of memory dumps where some parts of the memory was written over etc."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0112C10V4Y",
        "type": "message",
        "ts": "1611168319.060200",
        "edited": {
            "user": "U0112C10V4Y",
            "ts": "1611168406.000000"
        },
        "client_msg_id": "23642152-f4df-4c5b-8918-444c46cedfe9",
        "text": "In some ways the distinction between text and binary is arbitrary. Text files just have a whole ecosystem of tools that are able to parse (and display) the bits in a certain way. I expect any issues of corruption or error-correction would equally apply to both.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf521cc065bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f521cc065bb724c90c57c263ec7ee857.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Naveen Michaud-Agrawal",
            "display_name": "Naveen Michaud-Agrawal",
            "team": "T5TCAFTA9",
            "name": "naveen.michaudagrawal",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611164461.059600",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FKdW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In some ways the distinction between text and binary is arbitrary. Text files just have a whole ecosystem of tools that are able to parse (and display) the bits in a certain way. I expect any issues of corruption or error-correction would equally apply to both."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UFZFETUH1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1611169133.063400",
        "client_msg_id": "7f0b8183-932e-4a8d-9fab-093b41c4e82e",
        "text": "text files often indicate (to some extent) human-readable files and human-readable files have a lot of redundancy built in—all human languages do",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611164461.059600",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/KT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "text files often indicate (to some extent) human-readable files and human-readable files have a lot of redundancy built in—all human languages do"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1611169930.064200",
        "client_msg_id": "dbab5ca7-b28d-477b-b1c6-3c7b4490aa75",
        "text": "Yep. When a human reads a file, they can eyeball it to see if it looks corrupt, make a guess at what it should have looked like, and manually patch it. With binary files, usually your parser just barfs. All the recovery steps a human performs have to be programmed in.\n\nAs to the actual question, the only time I can remember personally was from downloading ISOs: s couple of them failed their hash check and had to be re-downloaded. Bad disk dismounts are the other classic case, with a broader category of bad disk write\/flush handling that can leave a file in weird states (<https:\/\/danluu.com\/file-consistency\/|https:\/\/danluu.com\/file-consistency\/>). TBH I wouldn't want to hand-restore one of those files either.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611164461.059600",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OB=Jr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yep. When a human reads a file, they can eyeball it to see if it looks corrupt, make a guess at what it should have looked like, and manually patch it. With binary files, usually your parser just barfs. All the recovery steps a human performs have to be programmed in.\n\nAs to the actual question, the only time I can remember personally was from downloading ISOs: s couple of them failed their hash check and had to be re-downloaded. Bad disk dismounts are the other classic case, with a broader category of bad disk write\/flush handling that can leave a file in weird states ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/danluu.com\/file-consistency\/",
                                "text": "https:\/\/danluu.com\/file-consistency\/"
                            },
                            {
                                "type": "text",
                                "text": "). TBH I wouldn't want to hand-restore one of those files either."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1611170449.064400",
        "client_msg_id": "26a14fed-0e9c-47c9-af96-d0a92dc91be5",
        "text": "Corrupted files have always been part of my digital life. The main cause: software bugs. Number two: aborted computation jobs, usually due to resource limitations on batch systems.\n\nFor programs that write serialized output, a corrupted file is usually just truncated. That is usuallyl recoverable. But when working on large binary files, random-access modification is quite frequent and can result in just about any mistake.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611164461.059600",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CQ4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Corrupted files have always been part of my digital life. The main cause: software bugs. Number two: aborted computation jobs, usually due to resource limitations on batch systems.\n\nFor programs that write serialized output, a corrupted file is usually just truncated. That is usuallyl recoverable. But when working on large binary files, random-access modification is quite frequent and can result in just about any mistake."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0112C10V4Y",
        "type": "message",
        "ts": "1611171731.065400",
        "client_msg_id": "14c2a04f-f5ec-4986-a04c-ca839ce9b5f0",
        "text": "Question for anyone in the know - was there ever a formal system description of the RealTalk system powering DynamicLand? My current understanding has mostly been pieced together from tweets and a few of <@UCL9Q87P0>'s more detailed blogposts. As I currently understand it, the system functions mostly as a federated Linda-like tuple space where wishes and claims are evaluated 60 times a sec and acted upon, and there is a base set of verbs and nouns (mostly related to the hardware) that are implemented in the system.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf521cc065bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f521cc065bb724c90c57c263ec7ee857.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Naveen Michaud-Agrawal",
            "display_name": "Naveen Michaud-Agrawal",
            "team": "T5TCAFTA9",
            "name": "naveen.michaudagrawal",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "reply_count": 61,
        "reply_users_count": 11,
        "latest_reply": "1628344094.046100",
        "reply_users": [
            "UFPPABQ7P",
            "U01JNTE35QS",
            "U0112C10V4Y",
            "UBSMEUXAA",
            "UA14TGLTC",
            "UBM0S2AN4",
            "UDQBTJ211",
            "UBN1G4C1J",
            "UHWC9PXBL",
            "UBJGA440K",
            "U023N18CFFX"
        ],
        "replies": [
            {
                "user": "UFPPABQ7P",
                "ts": "1611171860.065500"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1611172030.065700"
            },
            {
                "user": "U01JNTE35QS",
                "ts": "1611172680.065900"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611173915.066300"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611184428.067000"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611184440.067200"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611184636.067400"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611184999.068000"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611185046.068200"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1611185142.068400"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611185147.068600"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611185239.068800"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611185292.069200"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611185316.069400"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1611195521.000400"
            },
            {
                "user": "UBM0S2AN4",
                "ts": "1611210784.002100"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611234721.005100"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1611258143.005400"
            },
            {
                "user": "U01JNTE35QS",
                "ts": "1611261507.005700"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1611280476.006300"
            },
            {
                "user": "U01JNTE35QS",
                "ts": "1611293707.006700"
            },
            {
                "user": "U01JNTE35QS",
                "ts": "1611293932.006900"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611322438.008000"
            },
            {
                "user": "UBN1G4C1J",
                "ts": "1611339618.012000"
            },
            {
                "user": "UBN1G4C1J",
                "ts": "1611339634.012200"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1611340235.012500"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611355706.014100"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611366636.015100"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611366756.015300"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611366760.015500"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611366791.015700"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611366800.015900"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611366819.016100"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611366823.016300"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611366989.016500"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611367029.016800"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611367182.017000"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611367208.017200"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611367281.017500"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611367305.017700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1611367683.019300"
            },
            {
                "user": "U01JNTE35QS",
                "ts": "1611370094.019900"
            },
            {
                "user": "U01JNTE35QS",
                "ts": "1611370236.020100"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1611370257.020500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1611370354.021200"
            },
            {
                "user": "U01JNTE35QS",
                "ts": "1611371016.021400"
            },
            {
                "user": "UBJGA440K",
                "ts": "1611407226.024200"
            },
            {
                "user": "UBJGA440K",
                "ts": "1611407300.025400"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611425865.026300"
            },
            {
                "user": "U01JNTE35QS",
                "ts": "1611469169.026800"
            },
            {
                "user": "U01JNTE35QS",
                "ts": "1611469293.027000"
            },
            {
                "user": "UBJGA440K",
                "ts": "1611576998.027800"
            },
            {
                "user": "UBJGA440K",
                "ts": "1611577097.028000"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611583005.028200"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611583147.028400"
            },
            {
                "user": "U01JNTE35QS",
                "ts": "1611593889.028800"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611604554.029000"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611604599.029200"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1611639918.029800"
            },
            {
                "user": "U01JNTE35QS",
                "ts": "1611642241.035200"
            },
            {
                "user": "U023N18CFFX",
                "ts": "1628344094.046100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d2M2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Question for anyone in the know - was there ever a formal system description of the RealTalk system powering DynamicLand? My current understanding has mostly been pieced together from tweets and a few of "
                            },
                            {
                                "type": "user",
                                "user_id": "UCL9Q87P0"
                            },
                            {
                                "type": "text",
                                "text": "'s more detailed blogposts. As I currently understand it, the system functions mostly as a federated Linda-like tuple space where wishes and claims are evaluated 60 times a sec and acted upon, and there is a base set of verbs and nouns (mostly related to the hardware) that are implemented in the system."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1611171860.065500",
        "client_msg_id": "a7b16269-e760-40e6-84e0-85e7d236e825",
        "text": "Not to my knowledge is there anything online as a specification, because the system was constantly changing and being experimented with.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "74KDa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not to my knowledge is there anything online as a specification, because the system was constantly changing and being experimented with."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1611172030.065700",
        "client_msg_id": "b0019a0d-396e-4a3d-b252-524cfeb2099a",
        "text": "I understand that it's implemented as a superset of Lua which probably was getting desugared to Lua. IIRC from my convos with Joshua Horowitz is that the whole system (a couple years ago at least) has one system input \"time\" which advances everything else forwards.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5z00j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I understand that it's implemented as a superset of Lua which probably was getting desugared to Lua. IIRC from my convos with Joshua Horowitz is that the whole system (a couple years ago at least) has one system input \"time\" which advances everything else forwards."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01JNTE35QS",
        "type": "message",
        "ts": "1611172680.065900",
        "client_msg_id": "268d3782-fb59-47a9-a369-137a2111ea87",
        "text": "There is a photograph of the source of the realtalk system in one of Bret Victors tweets. I believe it used either Ohm or OMeta as the parsing system.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "97155db555c2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-01-13\/1631845309525_97155db555c2091ecd20_72.jpg",
            "first_name": "",
            "real_name": "Vijay Chakravarthy",
            "display_name": "Vijay Chakravarthy",
            "team": "T5TCAFTA9",
            "name": "vchakrav",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cfcH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is a photograph of the source of the realtalk system in one of Bret Victors tweets. I believe it used either Ohm or OMeta as the parsing system."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U019CPED6T1",
        "type": "message",
        "ts": "1611173424.066100",
        "client_msg_id": "640460a7-9844-400a-be1a-49d775b2828e",
        "text": "I mentioned this in a other thread but Pure Lang has many pieces that make it useful for both symbolic and computational mathematics",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa03454e2d2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa03454e2d26593c48c2f67c9fc90534.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Andrew",
            "real_name": "Andrew Carr",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewcarr06",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611150525.049900",
        "parent_user_id": "UPVBV34EL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MaRtW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I mentioned this in a other thread but Pure Lang has many pieces that make it useful for both symbolic and computational mathematics"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0112C10V4Y",
        "type": "message",
        "ts": "1611173915.066300",
        "edited": {
            "user": "U0112C10V4Y",
            "ts": "1611173928.000000"
        },
        "client_msg_id": "16a81eb0-96d5-4347-826a-585577fed99b",
        "text": "My understanding is mostly from \"Background of Realtalk\" section from Omar's \"<https:\/\/omar.website\/posts\/notes-from-dynamicland-geokit\/|Notes from DynamicLand: Geokit>\". Looks like while they've been fairly quiet recently they are still continuing on with research.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf521cc065bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f521cc065bb724c90c57c263ec7ee857.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Naveen Michaud-Agrawal",
            "display_name": "Naveen Michaud-Agrawal",
            "team": "T5TCAFTA9",
            "name": "naveen.michaudagrawal",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CBng",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My understanding is mostly from \""
                            },
                            {
                                "type": "text",
                                "text": "Background of Realtalk",
                                "style": {
                                    "unlink": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\" section from Omar's \""
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/omar.website\/posts\/notes-from-dynamicland-geokit\/",
                                "text": "Notes from DynamicLand: Geokit"
                            },
                            {
                                "type": "text",
                                "text": "\". Looks like while they've been fairly quiet recently they are still continuing on with research."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1611174856.066600",
        "client_msg_id": "ad8e184e-e8b8-4f37-9dfe-207901cca3e0",
        "text": "<@U0112C10V4Y> The \"advantage\" of text files is that characters are encoded individually and each character only takes a couple of bytes. If there's an incorrect byte, the corruption is limited to at most two characters. In binary encodings, a single error (e.g. in a length field) can corrupt everything that follows.\n\nBut you're right, text files are basically a subset of binary files and all advantages they have could also be achieved in other (non-text) formats.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611164461.059600",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gr\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0112C10V4Y"
                            },
                            {
                                "type": "text",
                                "text": " The \"advantage\" of text files is that characters are encoded individually and each character only takes a couple of bytes. If there's an incorrect byte, the corruption is limited to at most two characters. In binary encodings, a single error (e.g. in a length field) can corrupt everything that follows.\n\nBut you're right, text files are basically a subset of binary files and all advantages they have could also be achieved in other (non-text) formats."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL5AX4G2H",
        "type": "message",
        "ts": "1611175067.066800",
        "client_msg_id": "b121c834-fc1a-482c-afa7-abe2ee21268d",
        "text": "I think <@U016VUZGUUQ> nailed it with \"they can eyeball it\". It's less of a theoretical math problem and more of a pragmatic \"how long does it take you to figure out exactly what the file should be and what it is\".\n\nI worked at a data storage company so we'd corrupt binary stuff all the time in dev, it was really hard to tell what was broken when it was binary.  I really wanted to, but never got around to, a to_json serializer so I could see system state in a structured, textual format.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b05739c44158",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-12-05\/1552783044467_b05739c44158d860f3bd_72.png",
            "first_name": "",
            "real_name": "Tyler Adams",
            "display_name": "Tyler Adams",
            "team": "T5TCAFTA9",
            "name": "coppero1237",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611164461.059600",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a\/3Ua",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think "
                            },
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " nailed it with \"they can eyeball it\". It's less of a theoretical math problem and more of a pragmatic \"how long does it take you to figure out exactly what the file should be and what it is\".\n\nI worked at a data storage company so we'd corrupt binary stuff all the time in dev, it was really hard to tell what was broken when it was binary.  I really wanted to, but never got around to, a to_json serializer so I could see system state in a structured, textual format."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1611184428.067000",
        "client_msg_id": "cc486312-53d1-47da-a4fc-b8b49911b60c",
        "text": "I took some photos and videos when I visited a couple of years ago (with the Bay Area FOC group) that I need to share",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dwdT=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I took some photos and videos when I visited a couple of years ago (with the Bay Area FOC group) that I need to share"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1611184440.067200",
        "client_msg_id": "56131553-0a81-470c-96a1-82197cf8ad4a",
        "text": "specifically I have some real-talk photos",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ljDd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "specifically I have some real-talk photos"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Didn't get much but here are a couple",
        "files": [
            {
                "id": "F01KQL3A1U1",
                "mode": "tombstone"
            },
            {
                "id": "F01L1SC3UJU",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oGVW2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Didn't get much but here are a couple"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1611184636.067400",
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "reactions": [
            {
                "name": "star",
                "users": [
                    "USH01JEDQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1611184999.068000",
        "client_msg_id": "9cd8df26-b377-447e-8fa1-5a67cd45a786",
        "text": "I believe this is a lot of the code that parses\\desugars the natural language datalog query language used in \"say\" and \"when\" statements, there is probably a lot missing though",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vywXK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I believe this is a lot of the code that parses\\desugars the natural language datalog query language used in \"say\" and \"when\" statements, there is probably a lot missing though"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1611185046.068200",
        "client_msg_id": "d82d557c-785e-4ec9-a1cc-1eea34985fc9",
        "text": "I'm also not certain that Dynamicland has made it.  Walking by their old space in Oakland it seems vacated, but maybe they just moved",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3prIv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm also not certain that Dynamicland has made it.  Walking by their old space in Oakland it seems vacated, but maybe they just moved"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1611185142.068400",
        "client_msg_id": "bd9912c6-6697-4c95-ab5e-cac24c11b255",
        "text": "It has been a wild year with COVID-19.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RDV0X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It has been a wild year with COVID-19."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0112C10V4Y",
        "type": "message",
        "ts": "1611185147.068600",
        "client_msg_id": "a96e2fed-2dec-46ba-a1f1-d8049d5cdf3d",
        "text": "<@UBSMEUXAA> thanks, so most of those pages look like the pure lua bits.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf521cc065bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f521cc065bb724c90c57c263ec7ee857.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Naveen Michaud-Agrawal",
            "display_name": "Naveen Michaud-Agrawal",
            "team": "T5TCAFTA9",
            "name": "naveen.michaudagrawal",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OjGo2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBSMEUXAA"
                            },
                            {
                                "type": "text",
                                "text": " thanks, so most of those pages look like the pure lua bits."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0112C10V4Y",
        "type": "message",
        "ts": "1611185239.068800",
        "client_msg_id": "586ca889-02b5-404c-8f6c-19411fc0ade8",
        "text": "Looks like they are still going - <https:\/\/twitter.com\/worrydream\/status\/1349606736047443968>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf521cc065bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f521cc065bb724c90c57c263ec7ee857.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Naveen Michaud-Agrawal",
            "display_name": "Naveen Michaud-Agrawal",
            "team": "T5TCAFTA9",
            "name": "naveen.michaudagrawal",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/worrydream|@worrydream>: <https:\/\/twitter.com\/houshuang|@houshuang> <https:\/\/twitter.com\/Dynamicland1|@Dynamicland1> We're still hard at work, just keeping quiet for now.",
                "ts": 1610606295,
                "author_name": "Bret Victor",
                "author_link": "https:\/\/twitter.com\/worrydream\/status\/1349606736047443968",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1346337405230452737\/8KjkmdWw_normal.jpg",
                "author_subname": "@worrydream",
                "text": "<https:\/\/twitter.com\/houshuang|@houshuang> <https:\/\/twitter.com\/Dynamicland1|@Dynamicland1> We're still hard at work, just keeping quiet for now.",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/worrydream\/status\/1349606736047443968",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/worrydream\/status\/1349606736047443968",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oWU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looks like they are still going - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/worrydream\/status\/1349606736047443968"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UBSMEUXAA"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1611185292.069200",
        "client_msg_id": "0b875cf2-4a7c-47d6-aeeb-936bb59ad432",
        "text": "I thought COVID might have done them in because of the physical computing aspect",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dRo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I thought COVID might have done them in because of the physical computing aspect"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1611185316.069400",
        "client_msg_id": "2558f667-32fc-4d01-aee3-6195f6e61400",
        "text": "good thing investors (or whoever is supporting the project now) aren't thinking so near term on this",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qu5mn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "good thing investors (or whoever is supporting the project now) aren't thinking so near term on this"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1611193852.000100",
        "client_msg_id": "724d68d1-63e4-4e74-84e1-833a875dbae9",
        "text": "Most people don't appreciate how easy it is to undelete a file on Unix:\n* make the file system read-only (to prevent more writes)\n* `grep -n10000` the device of the hard disk,  go get a coffee\n* Scan the output in a text editor, find the right section, delete above and below.\n\nIf it's a binary file you now need more tooling.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611164461.059600",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rUg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Most people don't appreciate how easy it is to undelete a file on Unix:\n* make the file system read-only (to prevent more writes)\n* "
                            },
                            {
                                "type": "text",
                                "text": "grep -n10000",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the device of the hard disk,  go get a coffee\n* Scan the output in a text editor, find the right section, delete above and below.\n\nIf it's a binary file you now need more tooling."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "UL5AX4G2H"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1611195521.000400",
        "client_msg_id": "628b7778-5d27-482b-b74c-d8535d6f751f",
        "text": "Keep in mind that RealTalk isn't really documented because it was always provisional.  Beyond two takeaways, the rest of the details (all the syntax, the use of Lua) are irrelevant.\n1. Loose coupling between components.  They don't directly reference each other.  Often physical proximity was the way of doing dependency injection.  No need for explicit patching when valid wirings are mostly unambiguous.\n2. Having a distinction between \"wishes\" and \"claims\" where a \"claim\" tells you something about the world, and a wish requests that the world change to have some quality.\nCan't think of anything else.  I mean there's the whole spacial\/collaborative aspect of Dynamicland but that aspect is pretty obvious.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2KG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Keep in mind that RealTalk isn't really documented because it was always provisional.  Beyond two takeaways, the rest of the details (all the syntax, the use of Lua) are irrelevant.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Loose coupling between components.  They don't directly reference each other.  Often physical proximity was the way of doing dependency injection.  No need for explicit patching when valid wirings are mostly unambiguous."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Having a distinction between \"wishes\" and \"claims\" where a \"claim\" tells you something about the world, and a wish requests that the world change to have some quality."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can't think of anything else.  I mean there's the whole spacial\/collaborative aspect of Dynamicland but that aspect is pretty obvious."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "star",
                "users": [
                    "UFEQUBNNT",
                    "UBM0S2AN4",
                    "U0112C10V4Y",
                    "UBSMEUXAA",
                    "U013ZLJARC7"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UFPRPSA4S",
        "type": "message",
        "ts": "1611208977.000800",
        "client_msg_id": "ff958092-c6da-4b3d-a572-a642cae5fec5",
        "text": "Do you have in mind examples how such a language would be used and what it would be used for? What kind of programming would you do with topology? If it is theorem proving in topology then lean seems like the kind of language you're looking for. Just curious.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5f4ac5375e5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f5f4ac5375e539e50ceedb08f65e9dd3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Robin Allison",
            "display_name": "Robin",
            "team": "T5TCAFTA9",
            "name": "robinps2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611150525.049900",
        "parent_user_id": "UPVBV34EL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KI=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do you have in mind examples how such a language would be used and what it would be used for? What kind of programming would you do with topology? If it is theorem proving in topology then lean seems like the kind of language you're looking for. Just curious."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBM0S2AN4",
        "type": "message",
        "ts": "1611210784.002100",
        "client_msg_id": "E25BAC83-3E18-421E-BD1B-33283939166C",
        "text": "Recurse center has a project inspired by realtalk <https:\/\/www.recurse.com\/blog\/132-living-room-making-rc-programmable|https:\/\/www.recurse.com\/blog\/132-living-room-making-rc-programmable> and the code is online <https:\/\/github.com\/living-room\/turing|https:\/\/github.com\/living-room\/turing>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "51fa9d9a15c7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-04\/783621221861_51fa9d9a15c7c36a4a28_72.png",
            "first_name": "",
            "real_name": "Brian Zindler",
            "display_name": "zindlurb",
            "team": "T5TCAFTA9",
            "name": "zindlerb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611171731.065400",
        "parent_user_id": "U0112C10V4Y",
        "attachments": [
            {
                "service_name": "Recurse Center",
                "title": "Living Room: Making RC programmable - Blog - Recurse Center",
                "title_link": "https:\/\/www.recurse.com\/blog\/132-living-room-making-rc-programmable",
                "text": "RC alum Jonathan Dahan is building a system to make RC physically programmable.",
                "fallback": "Recurse Center: Living Room: Making RC programmable - Blog - Recurse Center",
                "thumb_url": "https:\/\/d29xw0ra2h4o4u.cloudfront.net\/assets\/logo_square-051508b5ecf8868635aea567bb86f423f4d1786776e5dfce4adf2bc7edf05804.png",
                "from_url": "https:\/\/www.recurse.com\/blog\/132-living-room-making-rc-programmable",
                "thumb_width": 250,
                "thumb_height": 250,
                "service_icon": "https:\/\/d29xw0ra2h4o4u.cloudfront.net\/assets\/favicon-fd33bcf9469496ce49e8d76911c3d3c05e6ca4240f8fa614655b7d98f5a01969.ico",
                "id": 1,
                "original_url": "https:\/\/www.recurse.com\/blog\/132-living-room-making-rc-programmable"
            },
            {
                "service_name": "GitHub",
                "title": "living-room\/turing",
                "title_link": "https:\/\/github.com\/living-room\/turing",
                "text": ":octopus: programmable space at Recurse Center. Contribute to living-room\/turing development by creating an account on GitHub.",
                "fallback": "GitHub: living-room\/turing",
                "thumb_url": "https:\/\/avatars0.githubusercontent.com\/u\/38536547?s=400&v=4",
                "from_url": "https:\/\/github.com\/living-room\/turing",
                "thumb_width": 256,
                "thumb_height": 256,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 2,
                "original_url": "https:\/\/github.com\/living-room\/turing"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hfRy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Recurse center has a project inspired by realtalk "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.recurse.com\/blog\/132-living-room-making-rc-programmable",
                                "text": "https:\/\/www.recurse.com\/blog\/132-living-room-making-rc-programmable"
                            },
                            {
                                "type": "text",
                                "text": " and the code is online "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/living-room\/turing",
                                "text": "https:\/\/github.com\/living-room\/turing"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]