[
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1581409855.081900",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1581409881.000000"
        },
        "client_msg_id": "1eb550a9-74d3-4363-8a9a-f60f69b65c92",
        "text": "In an interesting case of threads merging, the creator of Behavioral Programming[1] recently wrote a paper on Statecharts[2]:\n\n<https:\/\/arxiv.org\/pdf\/1911.10691.pdf>\n\n[1] <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1580955499046800> on <#C5T9GPWFL|thinking-together>\n[2] <https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1581097755051800> on <#CCL5VVBAN|share-your-work>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581409855.081900",
        "reply_count": 3,
        "reply_users_count": 1,
        "latest_reply": "1581432412.088400",
        "reply_users": [
            "UEBG0NPDK"
        ],
        "replies": [
            {
                "user": "UEBG0NPDK",
                "ts": "1581432119.084700"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1581432334.087700"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1581432412.088400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nIbWr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In an interesting case of threads merging, the creator of Behavioral Programming[1] recently wrote a paper on Statecharts[2]:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/arxiv.org\/pdf\/1911.10691.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\n\n[1] "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1580955499046800"
                            },
                            {
                                "type": "text",
                                "text": " on "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": "\n[2] "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1581097755051800"
                            },
                            {
                                "type": "text",
                                "text": " on "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CCL5VVBAN"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-2",
                "users": [
                    "UP28ETUSE"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UHZUS56SV"
                ],
                "count": 1
            },
            {
                "name": "open_mouth",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGS8TUVK6",
        "type": "message",
        "ts": "1581410080.082400",
        "client_msg_id": "5a8fa574-fa27-4bd9-8102-7973333faf32",
        "text": "<@UR482RFPY> I believe <http:\/\/runkit.com|runkit.com> also works similar to mathematica, see <http:\/\/blog.runkit.com\/2015\/09\/10\/time-traveling-in-node-js-notebooks\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b2204b9c98e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-10\/691633887223_2b2204b9c98e11f0ad1f_72.jpg",
            "first_name": "Martin",
            "real_name": "Martin Kavalar",
            "display_name": "mk",
            "team": "T5TCAFTA9",
            "name": "martin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581337872.066300",
        "parent_user_id": "UR482RFPY",
        "attachments": [
            {
                "service_name": "RunKit Blog",
                "title": "Time Traveling in Node.js Notebooks",
                "title_link": "http:\/\/blog.runkit.com\/2015\/09\/10\/time-traveling-in-node-js-notebooks\/",
                "text": "As part of a two-post series, I'd like to share some in-depth details behind one of RunKit's most asked about features: time traveling. In this first installment I'll be focusing mainly on how the back-end works: specifically, how we're able to not only rewind the state of your code, but any changes to the filesystem and spawned subprocesses as well. From a high level, this allows for a lot of cool functionality like real undo in a REPL. However, we'll also see how time traveling is actually essential to the way notebooks fundamentally work in RunKit.",
                "fallback": "RunKit Blog: Time Traveling in Node.js Notebooks",
                "image_url": "http:\/\/blog.runkit.com\/assets\/poster-sharing.jpg",
                "from_url": "http:\/\/blog.runkit.com\/2015\/09\/10\/time-traveling-in-node-js-notebooks\/",
                "image_width": 265,
                "image_height": 250,
                "image_bytes": 72339,
                "id": 1,
                "original_url": "http:\/\/blog.runkit.com\/2015\/09\/10\/time-traveling-in-node-js-notebooks\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gk6nq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UR482RFPY"
                            },
                            {
                                "type": "text",
                                "text": " I believe "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/runkit.com",
                                "text": "runkit.com"
                            },
                            {
                                "type": "text",
                                "text": " also works similar to mathematica, see "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/blog.runkit.com\/2015\/09\/10\/time-traveling-in-node-js-notebooks\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1581432119.084700",
        "client_msg_id": "451735B1-5CEC-47F2-BC3C-27753D7593FE",
        "text": "He did invent them both. :slightly_smiling_face: He’s actually written a couple of papers about using them together, eg <http:\/\/www.wisdom.weizmann.ac.il\/~harel\/papers\/SBP%20in%20Statecharts.pdf|http:\/\/www.wisdom.weizmann.ac.il\/~harel\/papers\/SBP%20in%20Statecharts.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581409855.081900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JBE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "He did invent them both. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " He’s actually written a couple of papers about using them together, eg "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.wisdom.weizmann.ac.il\/~harel\/papers\/SBP%20in%20Statecharts.pdf",
                                "text": "http:\/\/www.wisdom.weizmann.ac.il\/~harel\/papers\/SBP%20in%20Statecharts.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "grin",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1581432334.087700",
        "client_msg_id": "6E34F7EA-0751-4B76-9948-4D5F3CB4C6FF",
        "text": "I love the principle behind behavioral programming and Eve itself was very similar in concept, but I’m not particularly optimistic about it being a good direction. I’m really bullish on statecharts though.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581409855.081900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DgV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I love the principle behind behavioral programming and Eve itself was very similar in concept, but I’m not particularly optimistic about it being a good direction. I’m really bullish on statecharts though."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1581432412.088400",
        "client_msg_id": "8485B098-192E-499A-B3A9-1FC0F4D21873",
        "text": "Someone actually asked me about this just yesterday <https:\/\/twitter.com\/ibdknox\/status\/1226893212540735488?s=21|https:\/\/twitter.com\/ibdknox\/status\/1226893212540735488?s=21>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581409855.081900",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/ibdknox|@ibdknox>: <https:\/\/twitter.com\/lmatteis|@lmatteis> <https:\/\/twitter.com\/joshuafcole|@joshuafcole> <https:\/\/twitter.com\/with_eve|@with_eve> One of the biggest problems with Eve was that nothing served as a map of what the program did. Individual blocks made it very easy to add functionality, but very hard to understand its effect",
                "ts": 1581349111,
                "author_name": "Chris Granger",
                "author_link": "https:\/\/twitter.com\/ibdknox\/status\/1226893212540735488",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/515964179128143872\/KjpYt9xi_normal.jpeg",
                "author_subname": "@ibdknox",
                "text": "<https:\/\/twitter.com\/lmatteis|@lmatteis> <https:\/\/twitter.com\/joshuafcole|@joshuafcole> <https:\/\/twitter.com\/with_eve|@with_eve> One of the biggest problems with Eve was that nothing served as a map of what the program did. Individual blocks made it very easy to add functionality, but very hard to understand its effect",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/ibdknox\/status\/1226893212540735488?s=21",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/ibdknox\/status\/1226893212540735488?s=21",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K25",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Someone actually asked me about this just yesterday "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/ibdknox\/status\/1226893212540735488?s=21",
                                "text": "https:\/\/twitter.com\/ibdknox\/status\/1226893212540735488?s=21"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UF1ATC4RF",
        "type": "message",
        "ts": "1581432785.088800",
        "client_msg_id": "cd356a7c-fe71-4029-a4d8-e5247cbd33b6",
        "text": "Greg Law on Debugging, Record &amp; Replay of Data, and Hyper-Observability\n<http:\/\/infoq.com\/podcasts\/debugging-record-replay-data|infoq.com\/podcasts\/debugging-record-replay-data>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f7d23ee4d8b2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1069322068471_f7d23ee4d8b2dbb3c1ad_72.jpg",
            "first_name": "Deepak",
            "real_name": "Deepak Karki",
            "display_name": "karki",
            "team": "T5TCAFTA9",
            "name": "deepak6k",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581432785.088800",
        "reply_count": 2,
        "reply_users_count": 1,
        "latest_reply": "1581441743.090600",
        "reply_users": [
            "UN9R2KEUE"
        ],
        "replies": [
            {
                "user": "UN9R2KEUE",
                "ts": "1581441736.090400"
            },
            {
                "user": "UN9R2KEUE",
                "ts": "1581441743.090600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zkD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Greg Law on Debugging, Record & Replay of Data, and Hyper-Observability\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/infoq.com\/podcasts\/debugging-record-replay-data",
                                "text": "infoq.com\/podcasts\/debugging-record-replay-data"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UF1ATC4RF",
        "type": "message",
        "ts": "1581432807.089100",
        "client_msg_id": "c5dda8a3-e11f-44eb-97a2-c6de0b0d3d8d",
        "text": "&gt; _In this podcast, Daniel Bryant sat down with <https:\/\/www.linkedin.com\/in\/gregthelaw\/|Greg Law>, CTO at Undo. Topics discussed included: the challenges with debugging modern software systems, the need for “hyper-observability” and the benefit of being able to record and replay exact application execution; and the challenges with implementing the capture of nondeterministic system data in Undo’s LiveRecorder product for JVM-based languages that are Just-In-Time (JIT) compiled._",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f7d23ee4d8b2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1069322068471_f7d23ee4d8b2dbb3c1ad_72.jpg",
            "first_name": "Deepak",
            "real_name": "Deepak Karki",
            "display_name": "karki",
            "team": "T5TCAFTA9",
            "name": "deepak6k",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6p1",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In this podcast, Daniel Bryant sat down with ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.linkedin.com\/in\/gregthelaw\/",
                                "text": "Greg Law",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", CTO at Undo. Topics discussed included: the challenges with debugging modern software systems, the need for “hyper-observability” and the benefit of being able to record and replay exact application execution; and the challenges with implementing the capture of nondeterministic system data in Undo’s LiveRecorder product for JVM-based languages that are Just-In-Time (JIT) compiled.",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9R2KEUE",
        "type": "message",
        "ts": "1581434464.089200",
        "client_msg_id": "aba74b46-6087-4d62-bfa0-05ce8452ab79",
        "text": "thanks for sharing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gc23e230acc1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c23e230acc1f73990d92f810871e4cde.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Jason",
            "real_name": "Jason Laster",
            "display_name": "Jason Laster",
            "team": "T5TCAFTA9",
            "name": "jason.laster.11",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581375393.077000",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "so2D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "thanks for sharing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9R2KEUE",
        "type": "message",
        "ts": "1581434481.089400",
        "client_msg_id": "65573f45-3b5b-4d34-b431-67322934c9bc",
        "text": "I think probes are interesting and something we can add directly into the firefox debugger",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gc23e230acc1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c23e230acc1f73990d92f810871e4cde.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Jason",
            "real_name": "Jason Laster",
            "display_name": "Jason Laster",
            "team": "T5TCAFTA9",
            "name": "jason.laster.11",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581375393.077000",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HFVn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think probes are interesting and something we can add directly into the firefox debugger"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9R2KEUE",
        "type": "message",
        "ts": "1581434514.089600",
        "client_msg_id": "6b781378-373f-4275-a345-140e5c23b272",
        "text": "we added preview this past summer - <https:\/\/developer.mozilla.org\/en-US\/docs\/Tools\/Debugger\/How_to\/Set_a_breakpoint#Inline_variable_preview>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gc23e230acc1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c23e230acc1f73990d92f810871e4cde.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Jason",
            "real_name": "Jason Laster",
            "display_name": "Jason Laster",
            "team": "T5TCAFTA9",
            "name": "jason.laster.11",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581375393.077000",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "service_name": "MDN Web Docs",
                "title": "Set a breakpoint",
                "title_link": "https:\/\/developer.mozilla.org\/en-US\/docs\/Tools\/Debugger\/How_to\/Set_a_breakpoint#Inline_variable_preview",
                "text": "There are many different types of breakpoint that can be set in the debugger; this article covers standard (unconditional) breakpoints and conditional breakpoints.",
                "fallback": "MDN Web Docs: Set a breakpoint",
                "thumb_url": "https:\/\/developer.mozilla.org\/static\/img\/opengraph-logo.72382e605ce3.png",
                "from_url": "https:\/\/developer.mozilla.org\/en-US\/docs\/Tools\/Debugger\/How_to\/Set_a_breakpoint#Inline_variable_preview",
                "thumb_width": 600,
                "thumb_height": 600,
                "service_icon": "https:\/\/developer.mozilla.org\/static\/img\/favicon144.e7e21ca263ca.png",
                "id": 1,
                "original_url": "https:\/\/developer.mozilla.org\/en-US\/docs\/Tools\/Debugger\/How_to\/Set_a_breakpoint#Inline_variable_preview"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FPT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "we added preview this past summer - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/developer.mozilla.org\/en-US\/docs\/Tools\/Debugger\/How_to\/Set_a_breakpoint#Inline_variable_preview"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9R2KEUE",
        "type": "message",
        "ts": "1581434526.089900",
        "client_msg_id": "aada81fa-8471-4cb0-9592-bf29b7bc264a",
        "text": "i think we can go further though",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gc23e230acc1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c23e230acc1f73990d92f810871e4cde.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Jason",
            "real_name": "Jason Laster",
            "display_name": "Jason Laster",
            "team": "T5TCAFTA9",
            "name": "jason.laster.11",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581375393.077000",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tyok",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i think we can go further though"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9R2KEUE",
        "type": "message",
        "ts": "1581441736.090400",
        "client_msg_id": "8cbf1209-5d7c-4bbe-b73b-45d183e92697",
        "text": "Thanks for sharing!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gc23e230acc1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c23e230acc1f73990d92f810871e4cde.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Jason",
            "real_name": "Jason Laster",
            "display_name": "Jason Laster",
            "team": "T5TCAFTA9",
            "name": "jason.laster.11",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581432785.088800",
        "parent_user_id": "UF1ATC4RF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WDChP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for sharing!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9R2KEUE",
        "type": "message",
        "ts": "1581441743.090600",
        "client_msg_id": "ef682fea-3ca8-412b-9e49-6cecb779f300",
        "text": "I look forward to listening",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gc23e230acc1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c23e230acc1f73990d92f810871e4cde.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Jason",
            "real_name": "Jason Laster",
            "display_name": "Jason Laster",
            "team": "T5TCAFTA9",
            "name": "jason.laster.11",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581432785.088800",
        "parent_user_id": "UF1ATC4RF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4J5bM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I look forward to listening"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1581449714.091200",
        "client_msg_id": "4a048d44-aa51-41fd-b997-435660e6efb1",
        "text": "<@UR482RFPY> in an interview a while back Stephen Wolfram pointed out that Mathematica is free actually, if you use the kids' learning portal; it has a kiddie looking interface but it is full engine. Not only is Mathematica the only big symbolic computation system around (it can produce arbitrary precision if you wish), he has spent the last 10 years building up a database of knowledge about the world, with historical records for a vast number of real things. He has spent hundreds of millions building up databases that can be accessed.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581337872.066300",
        "parent_user_id": "UR482RFPY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9P7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UR482RFPY"
                            },
                            {
                                "type": "text",
                                "text": " in an interview a while back Stephen Wolfram pointed out that Mathematica is free actually, if you use the kids' learning portal; it has a kiddie looking interface but it is full engine. Not only is Mathematica the only big symbolic computation system around (it can produce arbitrary precision if you wish), he has spent the last 10 years building up a database of knowledge about the world, with historical records for a vast number of real things. He has spent hundreds of millions building up databases that can be accessed."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1581451036.095100",
        "client_msg_id": "62371fa3-694e-4175-9856-bc02dbf4e1ff",
        "text": "<@UF1ATC4RF> the approach of Undo's time traveling debugging is to capture microscopic level of changes. This is a heavy process and would not be normally enabled for a customer running a graphical interactive program. So what would be more desirable is such a lightweight recording technology that it can be enabled at all times, and then if a problem occurs the recording can be transmitted and now you are in an era of 100% repeatable, fixable software. This is the approach i have used in Beads.  But Undo is offering debugging for systems that were never designed for this, which is very clever.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qEh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UF1ATC4RF"
                            },
                            {
                                "type": "text",
                                "text": " the approach of Undo's time traveling debugging is to capture microscopic level of changes. This is a heavy process and would not be normally enabled for a customer running a graphical interactive program. So what would be more desirable is such a lightweight recording technology that it can be enabled at all times, and then if a problem occurs the recording can be transmitted and now you are in an era of 100% repeatable, fixable software. This is the approach i have used in Beads.  But Undo is offering debugging for systems that were never designed for this, which is very clever."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1581452198.096300",
        "client_msg_id": "FB53F322-AC1E-4881-84F9-8588C4722DB0",
        "text": "Last time I toyed around with that database even simple queries that gave results in wikidata went empty there ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581337872.066300",
        "parent_user_id": "UR482RFPY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q03",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Last time I toyed around with that database even simple queries that gave results in wikidata went empty there "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1581452227.097300",
        "client_msg_id": "7D144DF2-9CCF-4F9B-B43E-CE090D186E97",
        "text": "And for something with financial backup I would expect even better quality ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581337872.066300",
        "parent_user_id": "UR482RFPY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1k=u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And for something with financial backup I would expect even better quality "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1581452917.097500",
        "client_msg_id": "fabf957e-a333-4894-95cf-2d6c54ed494c",
        "text": "I don't know what you mean by Wikidata. The Wolfram|Alpha knowledge engine is what it is called. I am not a user, so i can't comment on the quantity, accuracy and breadth of their data, but i am very familiar with Wolfram's long career and you don't get to be one of the largest language vendor companies on the planet (700 employees) without doing something right. I just tested it, and asked it \"temperature records for NYC\" and it gave me a fantastic readout. Google doesn't do anything near to this. Google's search engine is based on page ranks, and its purpose is to sell advertising; Alpha is trying to understand human speech, and uses thousands of heuristics. It has evolved considerably over the 10 years, and it is to my knowledge the best knowledge engine for general use; only Watson has a deeper model of the world, and Watson is not available for consumer use.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581337872.066300",
        "parent_user_id": "UR482RFPY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JUiz8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't know what you mean by Wikidata. The Wolfram|Alpha knowledge engine is what it is called. I am not a user, so i can't comment on the quantity, accuracy and breadth of their data, but i am very familiar with Wolfram's long career and you don't get to be one of the largest language vendor companies on the planet (700 employees) without doing something right. I just tested it, and asked it \"temperature records for NYC\" and it gave me a fantastic readout. Google doesn't do anything near to this. Google's search engine is based on page ranks, and its purpose is to sell advertising; Alpha is trying to understand human speech, and uses thousands of heuristics. It has evolved considerably over the 10 years, and it is to my knowledge the best knowledge engine for general use; only Watson has a deeper model of the world, and Watson is not available for consumer use."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1581454737.097700",
        "client_msg_id": "4827d168-b612-4652-8e48-10ee21d5d776",
        "text": "Wikidata is a semantic\/structured database that is editable like Wikipedia. It's a wiki Foundation project. It's built around \"triples\" of the form (entity relationship entity). For example E123 might be \"London\", R34 might be \"is the capital of\" and E25 might be \"UK\", then one entry would be (E123 R34 E25)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581337872.066300",
        "parent_user_id": "UR482RFPY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kpU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wikidata is a semantic\/structured database that is editable like Wikipedia. It's a wiki Foundation project. It's built around \"triples\" of the form (entity relationship entity). For example E123 might be \"London\", R34 might be \"is the capital of\" and E25 might be \"UK\", then one entry would be (E123 R34 E25)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1581455078.098000",
        "client_msg_id": "b35e8f6e-c9a1-4bfd-ab2b-582b11e0278b",
        "text": "<@UJFN50C00> What's an example query you tried?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581337872.066300",
        "parent_user_id": "UR482RFPY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1UEPx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJFN50C00"
                            },
                            {
                                "type": "text",
                                "text": " What's an example query you tried?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1581457613.099600",
        "client_msg_id": "813c28be-05a3-4ff4-8432-1be6c1afa4af",
        "text": "in erlang you can turn distributed tracing per module, function or even function with a guard to match specific values on the arguments, then you can log them or ship them somewhere else. No extra stuff needed, always available at runtime. I fixed a really weird bug that I couldn't reproduce by tracing some functions in less than 15 minutes, directly in production",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581457613.099600",
        "reply_count": 6,
        "reply_users_count": 3,
        "latest_reply": "1581537938.108100",
        "reply_users": [
            "UC2A2ARPT",
            "UBN9AFS0N",
            "UEQ6M68H0"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1581459246.100200"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1581459361.100400"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1581497371.101000"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1581497406.101200"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1581497470.101400"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1581537938.108100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DKz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "in erlang you can turn distributed tracing per module, function or even function with a guard to match specific values on the arguments, then you can log them or ship them somewhere else. No extra stuff needed, always available at runtime. I fixed a really weird bug that I couldn't reproduce by tracing some functions in less than 15 minutes, directly in production"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1581459246.100200",
        "client_msg_id": "64ad7961-397d-4298-84d8-1b5602c6f938",
        "text": "<@UEQ6M68H0> <@UF1ATC4RF> Let's move the discussion of tracing into this thread, so we're not adding a lot of scrollback to the main channel.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581457613.099600",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3IwRe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UF1ATC4RF"
                            },
                            {
                                "type": "text",
                                "text": " Let's move the discussion of tracing into this thread, so we're not adding a lot of scrollback to the main channel."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1581459361.100400",
        "client_msg_id": "d3fd2a28-b115-4b7a-ad3c-5e1b036d596b",
        "text": "To add to the discussion — I'm very keen on the idea of doing the replay capture within customer software.. but that seems like such a huge divergence from how things currently work. There's privacy concerns, right? There's performance concerns, for sure.\n\n<@UEQ6M68H0>, how do you do this in Beads?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1581457613.099600",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "itR7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To add to the discussion — I'm very keen on the idea of doing the replay capture within customer software.. but that seems like such a huge divergence from how things currently work. There's privacy concerns, right? There's performance concerns, for sure.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": ", how do you do this in Beads?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]