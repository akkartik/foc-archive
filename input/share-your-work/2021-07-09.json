[
    {
        "text": "Haven't posted here in a while, but still lurking from time to time :smile:\n\nWe've added a \"portal\" system to our node\/wire based programming software GraphN, which instantly removed 90% of all readability issues you often have when wires cross over, creating a spaghetti-like view of your graph.\n\nInternally, this is basically just a variable, but funnily enough, our CTO had implemented the system, but I didn't \"get\" how it could benefit artists until I started thinking of it as \"portals\" :smiling_face_with_tear: was really surprised that such an easy concept doesn't exist in most art-focused node graphs.\n\nThe interface you see me tweaking at the top-right corner is basically a set of \"exposed\" parameter of that graph, which makes it easy to create powerful tools for artists, without asking them to touch visual coding at all. If they ever get curious, they can always dive in and change stuff, of course.",
        "files": [
            {
                "id": "F027UES9T4L",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U018HK8QM2R",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SR8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Haven't posted here in a while, but still lurking from time to time "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "\n\nWe've added a \"portal\" system to our node\/wire based programming software GraphN, which instantly removed 90% of all readability issues you often have when wires cross over, creating a spaghetti-like view of your graph.\n\nInternally, this is basically just a variable, but funnily enough, our CTO had implemented the system, but I didn't \"get\" how it could benefit artists until I started thinking of it as \"portals\" "
                            },
                            {
                                "type": "emoji",
                                "name": "smiling_face_with_tear",
                                "unicode": "1f972"
                            },
                            {
                                "type": "text",
                                "text": " was really surprised that such an easy concept doesn't exist in most art-focused node graphs.\n\nThe interface you see me tweaking at the top-right corner is basically a set of \"exposed\" parameter of that graph, which makes it easy to create powerful tools for artists, without asking them to touch visual coding at all. If they ever get curious, they can always dive in and change stuff, of course."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1625872585.151400",
        "thread_ts": "1625872585.151400",
        "reply_count": 16,
        "reply_users_count": 7,
        "latest_reply": "1633047450.066900",
        "reply_users": [
            "U018HK8QM2R",
            "UMVFWPZ36",
            "U01ULEWACPP",
            "UC2A2ARPT",
            "UEH5JQS0J",
            "UUQ2EQW21",
            "U01661S9F34"
        ],
        "replies": [
            {
                "user": "U018HK8QM2R",
                "ts": "1625872593.151500"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1625883291.155300"
            },
            {
                "user": "U01ULEWACPP",
                "ts": "1625890920.161300"
            },
            {
                "user": "U018HK8QM2R",
                "ts": "1625892016.161600"
            },
            {
                "user": "U018HK8QM2R",
                "ts": "1625892091.161800"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1625892570.162000"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1625892607.162200"
            },
            {
                "user": "U018HK8QM2R",
                "ts": "1625893408.162400"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1625936459.167100"
            },
            {
                "user": "UEH5JQS0J",
                "ts": "1626133665.170600"
            },
            {
                "user": "U018HK8QM2R",
                "ts": "1626139988.171000"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1626731609.172200"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1626747868.172800"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1626762489.173700"
            },
            {
                "user": "U01661S9F34",
                "ts": "1628541549.010600"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1633047450.066900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UML4ZEKDK"
                ],
                "count": 2
            }
        ]
    },
    {
        "text": "The graph",
        "files": [
            {
                "id": "F027N8WPTQS",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U018HK8QM2R",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FDGY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The graph"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1625872593.151500",
        "thread_ts": "1625872585.151400",
        "parent_user_id": "U018HK8QM2R"
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1625883291.155300",
        "client_msg_id": "ab1a1dac-fb9c-4020-b5d8-9f477949b25b",
        "text": "Nice looking graph! I'm interested in what you said here, but don't quite understand: \"We've added a \"portal\" system to our node\/wire based programming software GraphN, which instantly removed 90% of all readability issues you often have when wires cross over, creating a spaghetti-like view of your graph.\"\n\nDo you have a before\/after?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625872585.151400",
        "parent_user_id": "U018HK8QM2R",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GFm8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice looking graph! I'm interested in what you said here, but don't quite understand: \"We've added a \"portal\" system to our node\/wire based programming software GraphN, which instantly removed 90% of all readability issues you often have when wires cross over, creating a spaghetti-like view of your graph.\"\n\nDo you have a before\/after?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1625890920.161300",
        "edited": {
            "user": "U01ULEWACPP",
            "ts": "1625890960.000000"
        },
        "client_msg_id": "175C67DB-DC87-4197-9307-5B25B8F82E29",
        "text": "From my understanding: instead of finding the right nodes in order to tweak parameters, there’s a panel that shows a few curated \/ exposed parameters from the graph. So as an artist who might not have created the graph itself, instead of being overwhelmed, one can focus on the essential nodes \/ inputs.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625872585.151400",
        "parent_user_id": "U018HK8QM2R",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wejy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "From my understanding: instead of finding the right nodes in order to tweak parameters, there’s a panel that shows a few curated \/ exposed parameters from the graph. So as an artist who might not have created the graph itself, instead of being overwhelmed, one can focus on the essential nodes \/ inputs."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "<@UMVFWPZ36> with portals, the idea is to avoid wire intersections, and this before\/after hopefully shows it better :slightly_smiling_face:",
        "files": [
            {
                "id": "F028C7NAG72",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U018HK8QM2R",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m+ost",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UMVFWPZ36"
                            },
                            {
                                "type": "text",
                                "text": " with portals, the idea is to avoid wire intersections, and this before\/after hopefully shows it better "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1625892016.161600",
        "thread_ts": "1625872585.151400",
        "parent_user_id": "U018HK8QM2R",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U018HK8QM2R",
        "type": "message",
        "ts": "1625892091.161800",
        "client_msg_id": "1eb8ba4e-6802-4836-94ef-b5e7f29e141c",
        "text": "<@U01ULEWACPP> the system you mentioned is also there, but under a different name \"\"exposed properties\". There, the idea is that if you have a graph with say 30 nodes, all of them having a total of 100 inputs\/outputs properties, you can just right click on the ones you constantly keep getting back to, and \"expose\" them in an interface for easier access.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0ec300e9c9dd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-07-13\/2265960140709_0ec300e9c9ddca7b587b_72.png",
            "first_name": "Adnan",
            "real_name": "Adnan Chaumette",
            "display_name": "Adnan Chaumette",
            "team": "T5TCAFTA9",
            "name": "founder",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625872585.151400",
        "parent_user_id": "U018HK8QM2R",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i3Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01ULEWACPP"
                            },
                            {
                                "type": "text",
                                "text": " the system you mentioned is also there, but under a different name \"\"exposed properties\". There, the idea is that if you have a graph with say 30 nodes, all of them having a total of 100 inputs\/outputs properties, you can just right click on the ones you constantly keep getting back to, and \"expose\" them in an interface for easier access."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U01ULEWACPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1625892570.162000",
        "client_msg_id": "1652da01-4270-4614-8538-859253d25b83",
        "text": "Very clear diagrams. Thanks <@U018HK8QM2R>! I totally get it now. It's a nice clean architecture. I also like the term \"portals\". Always seems to pay off when you can maximize the immutability of your graph.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625872585.151400",
        "parent_user_id": "U018HK8QM2R",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6XKd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very clear diagrams. Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U018HK8QM2R"
                            },
                            {
                                "type": "text",
                                "text": "! I totally get it now. It's a nice clean architecture. I also like the term \"portals\". Always seems to pay off when you can maximize the immutability of your graph."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1625892607.162200",
        "client_msg_id": "d68a9638-1c20-4db4-8c5d-ee019dde31d4",
        "text": "I can see how some may just call these variables or inputs, but I am a visual thinker and so like the portals concept",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625872585.151400",
        "parent_user_id": "U018HK8QM2R",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/maeJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I can see how some may just call these variables or inputs, but I am a visual thinker and so like the portals concept"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U018HK8QM2R",
        "type": "message",
        "ts": "1625893408.162400",
        "client_msg_id": "8f20655b-55b2-4a8e-aa2f-0889c7370e23",
        "text": "and I just noticed all the typos, clearly I need to go to sleep :smile:\n\nBut yeah, it's such a tiny yet major feature in node graphs, which really lack innovative\/clever solutions to avoid clutter. It's crazy how little has changed since Alan Kay's <https:\/\/www.youtube.com\/watch?v=QQhVQ1UG6aM|GRAIL demo> from 1968 :no_mouth:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0ec300e9c9dd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-07-13\/2265960140709_0ec300e9c9ddca7b587b_72.png",
            "first_name": "Adnan",
            "real_name": "Adnan Chaumette",
            "display_name": "Adnan Chaumette",
            "team": "T5TCAFTA9",
            "name": "founder",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625872585.151400",
        "parent_user_id": "U018HK8QM2R",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Alan Kay Demos GRaIL",
                "title_link": "https:\/\/www.youtube.com\/watch?v=QQhVQ1UG6aM",
                "author_name": "Vincent Gable",
                "author_link": "https:\/\/www.youtube.com\/user\/vincentgable",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/QQhVQ1UG6aM\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Alan Kay Demos GRaIL",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/QQhVQ1UG6aM?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/www.youtube.com\/watch?v=QQhVQ1UG6aM",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=QQhVQ1UG6aM"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DMV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and I just noticed all the typos, clearly I need to go to sleep "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "\n\nBut yeah, it's such a tiny yet major feature in node graphs, which really lack innovative\/clever solutions to avoid clutter. It's crazy how little has changed since Alan Kay's "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=QQhVQ1UG6aM",
                                "text": "GRAIL demo"
                            },
                            {
                                "type": "text",
                                "text": " from 1968 "
                            },
                            {
                                "type": "emoji",
                                "name": "no_mouth",
                                "unicode": "1f636"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1625895048.164200",
        "client_msg_id": "81ca7e83-c77b-4b87-9657-a8a1d3a86aad",
        "text": "[Dida](<https:\/\/github.com\/jamii\/dida>) updates:\n* Added a js&lt;-&gt;wasm api (example [here](<https:\/\/github.com\/jamii\/dida\/blob\/2caffd4461037fe5c06b2457251a94e74cfda1dc\/examples\/core.html>), sugar upcoming so it looks more like [this](<https:\/\/github.com\/jamii\/dida\/blob\/2caffd4461037fe5c06b2457251a94e74cfda1dc\/examples\/sugar.zig))>. From the js side the wasm api looks exactly the same as the node api, so you can share code between them.\n* Indexes are now LSM trees instead of, uh, unsorted arrays. Joins are no longer silly.\n* Distinct got a faster implementation.\n* Added a reduce operator.\n* Fixed a bug in pointstamp order by adding a new constraint to graph layout.\n* Lots more unit tests.\n\nStill not quite worth using, but might get there in the next month or two.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625895048.164200",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1625895094.164400",
        "reply_users": [
            "U71PMQ1V0"
        ],
        "replies": [
            {
                "user": "U71PMQ1V0",
                "ts": "1625895094.164400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TOIR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Dida]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/jamii\/dida"
                            },
                            {
                                "type": "text",
                                "text": ") updates:\n* Added a js<->wasm api (example [here]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/jamii\/dida\/blob\/2caffd4461037fe5c06b2457251a94e74cfda1dc\/examples\/core.html"
                            },
                            {
                                "type": "text",
                                "text": "), sugar upcoming so it looks more like [this]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/jamii\/dida\/blob\/2caffd4461037fe5c06b2457251a94e74cfda1dc\/examples\/sugar.zig))"
                            },
                            {
                                "type": "text",
                                "text": ". From the js side the wasm api looks exactly the same as the node api, so you can share code between them.\n* Indexes are now LSM trees instead of, uh, unsorted arrays. Joins are no longer silly.\n* Distinct got a faster implementation.\n* Added a reduce operator.\n* Fixed a bug in pointstamp order by adding a new constraint to graph layout.\n* Lots more unit tests.\n\nStill not quite worth using, but might get there in the next month or two."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1625895094.164400",
        "edited": {
            "user": "U71PMQ1V0",
            "ts": "1625895185.000000"
        },
        "client_msg_id": "709c5a8e-be8e-45d5-8ea7-6d31538a9187",
        "text": "I would have thought that ticking the 'Format messages with markup' would have done the job here, but alas, their markup does not support links at all.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625895048.164200",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9RBC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would have thought that ticking the 'Format messages with markup' would have done the job here, but alas, their markup does not support links at all."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "grimacing",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1625895244.165600",
        "client_msg_id": "a79b4d0d-5c2e-4549-92c1-5aef34db0398",
        "text": "Also maybe of interest - <https:\/\/scattered-thoughts.net\/writing\/against-sql> - the underlying language design mistakes that make sql such a nightmare to use and implement, and how to avoid them in future languages.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625895244.165600",
        "reply_count": 9,
        "reply_users_count": 3,
        "latest_reply": "1626131540.170300",
        "reply_users": [
            "UA14TGLTC",
            "U016LEA3J1H",
            "U71PMQ1V0"
        ],
        "replies": [
            {
                "user": "UA14TGLTC",
                "ts": "1625932193.165900"
            },
            {
                "user": "U016LEA3J1H",
                "ts": "1626107218.168600"
            },
            {
                "user": "U016LEA3J1H",
                "ts": "1626107273.168800"
            },
            {
                "user": "U016LEA3J1H",
                "ts": "1626107390.169000"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1626126621.169300"
            },
            {
                "user": "U016LEA3J1H",
                "ts": "1626129685.169500"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1626129990.169800"
            },
            {
                "user": "U016LEA3J1H",
                "ts": "1626131498.170100"
            },
            {
                "user": "U016LEA3J1H",
                "ts": "1626131540.170300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y2GUj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also maybe of interest - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/scattered-thoughts.net\/writing\/against-sql"
                            },
                            {
                                "type": "text",
                                "text": " - the underlying language design mistakes that make sql such a nightmare to use and implement, and how to avoid them in future languages."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC",
                    "U01JNTE35QS"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UML4ZEKDK",
                    "UFPPABQ7P"
                ],
                "count": 3
            }
        ]
    }
]