[
    {
        "text": "In literate programming, test cases can become part of documentation.\n\"When you do X, Y will happen, e.g. &lt;ACTUAL EXECUTED CODE WITH ASSERTION AND THE ABILITY FOR THE READER TO EDIT&gt;\"\nI have a reactive unit testing library for Observablehq (@tomlarkworthy\/testing). Observable has in built version history so you don;t get to add \"commit description\", but for things like major releases I write a *change log* entry in prose as part of the notebook text.",
        "files": [
            {
                "id": "F02NVA3K00L",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U02E4DAQGSZ",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hhQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In literate programming, test cases can become part of documentation.\n\"When you do X, Y will happen, e.g. <ACTUAL EXECUTED CODE WITH ASSERTION AND THE ABILITY FOR THE READER TO EDIT>\"\nI have a reactive unit testing library for Observablehq (@tomlarkworthy\/testing). Observable has in built version history so you don;t get to add \"commit description\", but for things like major releases I write a "
                            },
                            {
                                "type": "text",
                                "text": "change log",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " entry in prose as part of the notebook text."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1638088046.161100",
        "client_msg_id": "4609570d-d173-42e5-979d-dc06e4fa083e",
        "thread_ts": "1638023928.156400",
        "parent_user_id": "U02M6PM725T",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U027P92A0N5",
                    "U02M6PM725T"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1638088127.161300",
        "client_msg_id": "eeacc58a-7776-4fcd-b419-2aba018c085b",
        "text": "This application notebook has some tests in it. When you say LP I think linear programming because of this notebook, lol. Its LP LP\n<https:\/\/observablehq.com\/@tomlarkworthy\/mip>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1638023928.156400",
        "parent_user_id": "U02M6PM725T",
        "attachments": [
            {
                "from_url": "https:\/\/observablehq.com\/@tomlarkworthy\/mip",
                "title": "Mixed Integer \/ Linear Programming",
                "title_link": "https:\/\/observablehq.com\/@tomlarkworthy\/mip",
                "text": "Mixed integer programming for the browser! Mixed integer programming is restricted but powerful formalism for solving optimization problems. Variables can be non-negative continuous (default) integer binary (which is integer restricted to 0 or 1) You can request to minimize or maximize some linear objective function e.g. . Note the main linear limitation is you cannot multiply variables. The solver will then find a solution that is optimal for your objective (though may take a long time). This solver fron",
                "image_url": "https:\/\/static.observableusercontent.com\/thumbnail\/3234e68cc41a98f52c407622e95a56235e37809798513461b06a41de114adf18.jpg",
                "image_width": 400,
                "image_height": 250,
                "image_bytes": 26694,
                "fallback": "Mixed Integer \/ Linear Programming",
                "service_icon": "https:\/\/observablehq.com\/favicon-512.png",
                "service_name": "observablehq.com",
                "id": 1,
                "original_url": "https:\/\/observablehq.com\/@tomlarkworthy\/mip"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wLnt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This application notebook has some tests in it. When you say LP I think linear programming because of this notebook, lol. Its LP LP\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/observablehq.com\/@tomlarkworthy\/mip"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD",
                    "U02M6PM725T"
                ],
                "count": 2
            }
        ]
    }
]