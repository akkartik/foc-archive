[
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1563785205.062000",
        "client_msg_id": "db37b65e-b3e0-418f-a35a-c2f3bd8fd764",
        "text": "These are my favorite FRP resources: <https:\/\/futureofcoding.org\/essays\/dctp#further-resources>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562990343.225500",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NT8Jg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "These are my favorite FRP resources: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.org\/essays\/dctp#further-resources"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UKQT95T1V"
                ],
                "count": 1
            },
            {
                "name": "raised_hands",
                "users": [
                    "UKQT95T1V"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1563788015.062500",
        "client_msg_id": "a2fa71bc-1714-4146-9e45-e54600b250eb",
        "text": "\"Wrangling graphs in TensorFlow 1.x (declarative programming) was disorienting for many, but it’s all just a bad dream now with eager execution (imperative programming).\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aEP3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Wrangling graphs in TensorFlow 1.x (declarative programming) was disorienting for many, but it’s all just a bad dream now with eager execution (imperative programming).\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1563788023.062700",
        "client_msg_id": "d5b86a94-09ab-43a7-adc8-97ca491659df",
        "text": "that feels backwards :stuck_out_tongue:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vwHS9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that feels backwards "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1563788077.063000",
        "client_msg_id": "36f28e0c-e010-4cc8-b4e4-1d6989322713",
        "text": "_citation needed_ :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563788077.063000",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1563788150.063500",
        "reply_users": [
            "UBN9AFS0N"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1563788150.063500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mda6B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "citation needed",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "I don't see how this is not declarative",
        "files": [
            {
                "id": "FLMJCRCGG",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "UBN9AFS0N",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RYW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't see how this is not declarative"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1563788139.063200",
        "client_msg_id": "14861ad5-37ed-43d2-9344-1f19077ae666",
        "thread_ts": "1563788139.063200",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1564592283.114600",
        "reply_users": [
            "U8A5MS6R1"
        ],
        "replies": [
            {
                "user": "U8A5MS6R1",
                "ts": "1564592283.114600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1563788150.063500",
        "client_msg_id": "783ddac3-948f-4d0f-8de6-a4341744fde5",
        "text": "<https:\/\/hackernoon.com\/tensorflow-is-dead-long-live-tensorflow-49d3e975cf04>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563788077.063000",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/CYR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/hackernoon.com\/tensorflow-is-dead-long-live-tensorflow-49d3e975cf04"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UE6EFEPTQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": ":man-facepalming:peak HN galaxy brain",
        "files": [
            {
                "id": "FLAF2MQ82",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "UHWC9PXBL",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/58O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "man-facepalming",
                                "unicode": "1f926-200d-2642-fe0f"
                            },
                            {
                                "type": "text",
                                "text": "peak HN galaxy brain"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1563805402.064500",
        "client_msg_id": "E6520A13-E763-4585-A295-E649B3EDDDA7",
        "thread_ts": "1563675156.049700",
        "parent_user_id": "UKFSDUCH2"
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1563805533.065100",
        "client_msg_id": "2e2acbfc-ea0a-4e4f-b759-a7172ec36a79",
        "text": "Do Mosley and Marks argue we need a new language to achieve functional relational programming? It seemed to me that they were saying: “logic programming is the right medium for business logic; use user-defined functions to extend that where needed; write your user-defined functions and\/or infrastructure in an imperative language if you absolutely have to for performance reasons”. The most exciting development I’ve seen in this area is what folks in academia are doing with Answer Set Programming, particularly in the Clingo toolchain (<https:\/\/potassco.org>), which provides a very powerful logic language with an extensible architecture that I think could get us a long way.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563525337.318100",
        "parent_user_id": "UCGAK10LS",
        "attachments": [
            {
                "title": "Potassco",
                "title_link": "https:\/\/potassco.org\/",
                "text": "Tools for Answer Set Programming developed at the University of Potsdam.",
                "fallback": "Potassco",
                "from_url": "https:\/\/potassco.org\/",
                "service_icon": "https:\/\/potassco.org\/favicon.ico",
                "service_name": "potassco.org",
                "id": 1,
                "original_url": "https:\/\/potassco.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hS3XC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do Mosley and Marks argue we need a new language to achieve functional relational programming? It seemed to me that they were saying: “logic programming is the right medium for business logic; use user-defined functions to extend that where needed; write your user-defined functions and\/or infrastructure in an imperative language if you absolutely have to for performance reasons”. The most exciting development I’ve seen in this area is what folks in academia are doing with Answer Set Programming, particularly in the Clingo toolchain ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/potassco.org"
                            },
                            {
                                "type": "text",
                                "text": "), which provides a very powerful logic language with an extensible architecture that I think could get us a long way."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1563808804.065500",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1563808972.000000"
        },
        "client_msg_id": "13c63cc7-1d66-48c6-a0fe-81122d00017f",
        "text": "My reaction was even stronger. Forget \"order of magnitude\", I question whether the world wide web, for all its other gains, has had even a _net positive_ effect on \"programming productivity\/reliability\/simplicity\".\n\nThe latter two axes seem fairly uncontroversial? For productivity it would depend on how you define it. If you chose a metric of \"LoC generated\" we're doing amazing. But that metric seems misguided.\n\nIn general, the terms of Brooks's essay map to today's world in non-obvious ways. We _have_ started \"growing software more organically\" as Brooks recommended. And that has generated new problems that OP seems to largely ignore.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563749183.061400",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xeH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My reaction was even stronger. Forget \"order of magnitude\", I question whether the world wide web, for all its other gains, has had even a "
                            },
                            {
                                "type": "text",
                                "text": "net positive",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " effect on \"programming productivity\/reliability\/simplicity\".\n\nThe latter two axes seem fairly uncontroversial? For productivity it would depend on how you define it. If you chose a metric of \"LoC generated\" we're doing amazing. But that metric seems misguided.\n\nIn general, the terms of Brooks's essay map to today's world in non-obvious ways. We "
                            },
                            {
                                "type": "text",
                                "text": "have",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " started \"growing software more organically\" as Brooks recommended. And that has generated new problems that OP seems to largely ignore."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1563810079.066500",
        "client_msg_id": "c25be2f0-9d2d-4343-a9a5-9a48027d4f15",
        "text": "I feel like it’s wrong to call the problem declarative vs imperative. It’s just about staged metaprogramming, and the eager API removes the staging.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Dh0R2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel like it’s wrong to call the problem declarative vs imperative. It’s just about staged metaprogramming, and the eager API removes the staging."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1563810216.067100",
        "client_msg_id": "5bf10408-b2fb-4029-ab15-b9c7362a1650",
        "text": "(Maybe, I don’t know TF 2+ specifically.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dVZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Maybe, I don’t know TF 2+ specifically.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKFSDUCH2",
        "type": "message",
        "ts": "1563814711.067200",
        "client_msg_id": "8d5f5a43-1412-4668-9bdd-73138de49aee",
        "text": "ha hah",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcc9260f41ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0cc9260f41ff521633069f4d94782cc7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Josh Marinacci",
            "display_name": "Josh Marinacci",
            "team": "T5TCAFTA9",
            "name": "joshua",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563675156.049700",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YUPe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ha hah"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKFSDUCH2",
        "type": "message",
        "ts": "1563814718.067400",
        "client_msg_id": "b1b74fc6-f6bc-4990-8c41-e40b5cce2fdf",
        "text": "again HN misses the point",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcc9260f41ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0cc9260f41ff521633069f4d94782cc7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Josh Marinacci",
            "display_name": "Josh Marinacci",
            "team": "T5TCAFTA9",
            "name": "joshua",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563675156.049700",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HMU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "again HN misses the point"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKFSDUCH2",
        "type": "message",
        "ts": "1563814743.067600",
        "client_msg_id": "c85191a8-c6e7-47bd-bc5b-ac282989be0b",
        "text": "ooh. what’s Red? I haven’t heard of that one.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcc9260f41ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0cc9260f41ff521633069f4d94782cc7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Josh Marinacci",
            "display_name": "Josh Marinacci",
            "team": "T5TCAFTA9",
            "name": "joshua",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563741130.059800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c=t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ooh. what’s Red? I haven’t heard of that one."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKFSDUCH2",
        "type": "message",
        "ts": "1563814799.068500",
        "client_msg_id": "792d9721-1d52-44eb-a9c9-15e09696f279",
        "text": "i get the feeling there aren’t strict separation between declarative and imperative. it’s a spectrum and real world languages fall somewhere on the spectrum",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcc9260f41ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0cc9260f41ff521633069f4d94782cc7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Josh Marinacci",
            "display_name": "Josh Marinacci",
            "team": "T5TCAFTA9",
            "name": "joshua",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "reply_count": 27,
        "reply_users_count": 5,
        "latest_reply": "1564206260.346700",
        "reply_users": [
            "UJK8MKYAZ",
            "UHZUS56SV",
            "UAVCC2X70",
            "UJN1TAYEQ",
            "UKQT95T1V"
        ],
        "replies": [
            {
                "user": "UJK8MKYAZ",
                "ts": "1563816121.069600"
            },
            {
                "user": "UHZUS56SV",
                "ts": "1563818869.075900"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1563820318.076400"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1563820339.076600"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1563820353.076800"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1563820462.077000"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1563825975.077700"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1563827841.078300"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1563827968.078700"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1563828087.078900"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1563828377.079100"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1563828896.079500"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1563839796.079800"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1563839885.080000"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1563839941.080200"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1563840284.080400"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1563842307.080800"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1563842784.081000"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1563844907.081200"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1563845606.081500"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1563845701.081700"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1563845855.081900"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1563846488.082100"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1563848639.082400"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1563911602.276500"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1563967626.286000"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1564206260.346700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2Ld0T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i get the feeling there aren’t strict separation between declarative and imperative. it’s a spectrum and real world languages fall somewhere on the spectrum"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1563816121.069600",
        "client_msg_id": "ab730370-51e1-41f1-b165-86c656203adb",
        "text": "It seems to me that at the conceptual level there is a clear, grammatical distinction. It’s easy to detect in code with the following test: does execution order of a series of expressions matter? If so, it’s imperative. But it also appears to me that there is a kind of “coinherence” between knowledge and imperative knowledge (to borrow the term from theology) - knowledge of what and how seem inextricably embedded in each other, though definitely distinct. I don’t know if this coinherence has any manifestation in formal logic, but wouldn’t be at all surprised to find it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Os0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It seems to me that at the conceptual level there is a clear, grammatical distinction. It’s easy to detect in code with the following test: does execution order of a series of expressions matter? If so, it’s imperative. But it also appears to me that there is a kind of “coinherence” between knowledge and imperative knowledge (to borrow the term from theology) - knowledge of what and how seem inextricably embedded in each other, though definitely distinct. I don’t know if this coinherence has any manifestation in formal logic, but wouldn’t be at all surprised to find it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEP7RL0HX",
        "type": "message",
        "ts": "1563816906.075500",
        "client_msg_id": "84b4a095-2390-4ba0-b33c-0acca75df197",
        "text": "I'm designing a language that takes both roads. Objects are defined declaratively (and in any order), but object property values may be \"defined\" imperatively or declaratively. If the value of an object property depends on the value of another object property, its value is (by default) reevaluated (i.e., reactively) whenever the depended-on value changes. Like in a spreadsheet, but without the spreadsheet.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4c54a8f7c01",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c4c54a8f7c01b3e22a1e82ae29c85f70.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Dan Swirsky",
            "display_name": "Dan Swirsky",
            "team": "T5TCAFTA9",
            "name": "dswirsky",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563816906.075500",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1563827948.078500",
        "reply_users": [
            "UJK8MKYAZ",
            "UKFSDUCH2",
            "UEP7RL0HX"
        ],
        "replies": [
            {
                "user": "UJK8MKYAZ",
                "ts": "1563817016.075700"
            },
            {
                "user": "UKFSDUCH2",
                "ts": "1563820213.076200"
            },
            {
                "user": "UEP7RL0HX",
                "ts": "1563827636.078100"
            },
            {
                "user": "UKFSDUCH2",
                "ts": "1563827948.078500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lwj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm designing a language that takes both roads. Objects are defined declaratively (and in any order), but object property values may be \"defined\" imperatively or declaratively. If the value of an object property depends on the value of another object property, its value is (by default) reevaluated (i.e., reactively) whenever the depended-on value changes. Like in a spreadsheet, but without the spreadsheet."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "ok_hand",
                "users": [
                    "UJK8MKYAZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1563817016.075700",
        "client_msg_id": "c65d7169-3604-4c53-9573-c142ebef5672",
        "text": "This makes a lot of sense. It seems just as intuitive as what we have now, and in some ways more so.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563816906.075500",
        "parent_user_id": "UEP7RL0HX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "inK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This makes a lot of sense. It seems just as intuitive as what we have now, and in some ways more so."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "UHZUS56SV",
        "thread_ts": "1563814799.068500",
        "root": {
            "user": "UKFSDUCH2",
            "type": "message",
            "ts": "1563814799.068500",
            "client_msg_id": "792d9721-1d52-44eb-a9c9-15e09696f279",
            "text": "i get the feeling there aren’t strict separation between declarative and imperative. it’s a spectrum and real world languages fall somewhere on the spectrum",
            "team": "T5TCAFTA9",
            "thread_ts": "1563814799.068500",
            "reply_count": 27,
            "reply_users_count": 5,
            "latest_reply": "1564206260.346700",
            "reply_users": [
                "UJK8MKYAZ",
                "UHZUS56SV",
                "UAVCC2X70",
                "UJN1TAYEQ",
                "UKQT95T1V"
            ],
            "replies": [
                {
                    "user": "UJK8MKYAZ",
                    "ts": "1563816121.069600"
                },
                {
                    "user": "UHZUS56SV",
                    "ts": "1563818869.075900"
                },
                {
                    "user": "UJK8MKYAZ",
                    "ts": "1563820318.076400"
                },
                {
                    "user": "UJK8MKYAZ",
                    "ts": "1563820339.076600"
                },
                {
                    "user": "UJK8MKYAZ",
                    "ts": "1563820353.076800"
                },
                {
                    "user": "UJK8MKYAZ",
                    "ts": "1563820462.077000"
                },
                {
                    "user": "UAVCC2X70",
                    "ts": "1563825975.077700"
                },
                {
                    "user": "UJN1TAYEQ",
                    "ts": "1563827841.078300"
                },
                {
                    "user": "UJN1TAYEQ",
                    "ts": "1563827968.078700"
                },
                {
                    "user": "UJK8MKYAZ",
                    "ts": "1563828087.078900"
                },
                {
                    "user": "UJN1TAYEQ",
                    "ts": "1563828377.079100"
                },
                {
                    "user": "UJN1TAYEQ",
                    "ts": "1563828896.079500"
                },
                {
                    "user": "UKQT95T1V",
                    "ts": "1563839796.079800"
                },
                {
                    "user": "UKQT95T1V",
                    "ts": "1563839885.080000"
                },
                {
                    "user": "UKQT95T1V",
                    "ts": "1563839941.080200"
                },
                {
                    "user": "UKQT95T1V",
                    "ts": "1563840284.080400"
                },
                {
                    "user": "UJN1TAYEQ",
                    "ts": "1563842307.080800"
                },
                {
                    "user": "UJN1TAYEQ",
                    "ts": "1563842784.081000"
                },
                {
                    "user": "UKQT95T1V",
                    "ts": "1563844907.081200"
                },
                {
                    "user": "UJN1TAYEQ",
                    "ts": "1563845606.081500"
                },
                {
                    "user": "UKQT95T1V",
                    "ts": "1563845701.081700"
                },
                {
                    "user": "UKQT95T1V",
                    "ts": "1563845855.081900"
                },
                {
                    "user": "UJN1TAYEQ",
                    "ts": "1563846488.082100"
                },
                {
                    "user": "UJN1TAYEQ",
                    "ts": "1563848639.082400"
                },
                {
                    "user": "UKQT95T1V",
                    "ts": "1563911602.276500"
                },
                {
                    "user": "UJK8MKYAZ",
                    "ts": "1563967626.286000"
                },
                {
                    "user": "UKQT95T1V",
                    "ts": "1564206260.346700"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "RfaUl",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "i get the feeling there aren’t strict separation between declarative and imperative. it’s a spectrum and real world languages fall somewhere on the spectrum"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1563818869.075900",
        "client_msg_id": "5c0212cf-aea9-4db5-a838-88f37b91eb72",
        "text": "<@UJK8MKYAZ> Isn't that the distinction we already have with pure functions \/ side effects?\n\nAnd anyway pure functions are abstractions too :slightly_smiling_face: You just decide to ignore the side-effects (for very good reasons).\n\nWe like to categorize things but in the end I think it's just about whether you work at the right level of abstraction or not.",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kVo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJK8MKYAZ"
                            },
                            {
                                "type": "text",
                                "text": " Isn't that the distinction we already have with pure functions \/ side effects?\n\nAnd anyway pure functions are abstractions too "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " You just decide to ignore the side-effects (for very good reasons).\n\nWe like to categorize things but in the end I think it's just about whether you work at the right level of abstraction or not."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKFSDUCH2",
        "type": "message",
        "ts": "1563820213.076200",
        "client_msg_id": "ff1f18d4-11d6-4ade-9301-b0f7f660c9ac",
        "text": "ooh. i’d like to see this. how do you calculate the re-evaluation? some lazy algorithm?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcc9260f41ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0cc9260f41ff521633069f4d94782cc7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Josh Marinacci",
            "display_name": "Josh Marinacci",
            "team": "T5TCAFTA9",
            "name": "joshua",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563816906.075500",
        "parent_user_id": "UEP7RL0HX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cjw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ooh. i’d like to see this. how do you calculate the re-evaluation? some lazy algorithm?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1563820318.076400",
        "client_msg_id": "bd9d50ec-5401-46c3-85ce-660d2481536b",
        "text": "Not exactly. composing map after fold and fold after map produce two very different results.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4YsxT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not exactly. composing map after fold and fold after map produce two very different results."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1563820339.076600",
        "client_msg_id": "13b9a047-7d95-4aa7-8b59-4375d91b1930",
        "text": "But in a purely declarative language, the order of expressions really doesn’t matter.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7sdSD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But in a purely declarative language, the order of expressions really doesn’t matter."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1563820353.076800",
        "client_msg_id": "765eb998-6595-4c22-bd17-22d12c9ce2c6",
        "text": "(Nor does the order of execution)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+ax=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Nor does the order of execution)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1563820462.077000",
        "client_msg_id": "21d16f36-e9b0-404e-8bed-5aa147cd4160",
        "text": "I may be wrong about order of expressions. But, most definitely, the order of execution never affects declarative languages.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J16HU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I may be wrong about order of expressions. But, most definitely, the order of execution never affects declarative languages."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1563821720.077200",
        "client_msg_id": "d06a179d-8650-48f2-8582-65b29c29b624",
        "text": "Red is the rebirth of Rebol. A very powerful language, it is on the spreadsheet as one of the emerging languages. It has a very unusual syntax. Very compact.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563741130.059800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c\/3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Red is the rebirth of Rebol. A very powerful language, it is on the spreadsheet as one of the emerging languages. It has a very unusual syntax. Very compact."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKFSDUCH2",
        "type": "message",
        "ts": "1563825966.077500",
        "client_msg_id": "452316d1-219c-47f0-9254-d9fc7d409ffc",
        "text": "link?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcc9260f41ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0cc9260f41ff521633069f4d94782cc7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Josh Marinacci",
            "display_name": "Josh Marinacci",
            "team": "T5TCAFTA9",
            "name": "joshua",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563741130.059800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dTi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "link?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1563825975.077700",
        "client_msg_id": "c94f249b-ff58-4853-b954-505fa5007ceb",
        "text": "The order in which you call map and fold \"matters\" not because of order of execution, but because of the dependency graph or structure. It's the same difference between an array of dictionaries and a dictionary of arrays",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O11ct",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The order in which you call map and fold \"matters\" not because of order of execution, but because of the dependency graph or structure. It's the same difference between an array of dictionaries and a dictionary of arrays"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKFSDUCH2",
        "type": "message",
        "ts": "1563825991.077900",
        "client_msg_id": "73850a6d-74dc-432e-9872-2a506a313fcc",
        "text": "it’s not this, is it? <http:\/\/noderedguide.com\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcc9260f41ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0cc9260f41ff521633069f4d94782cc7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Josh Marinacci",
            "display_name": "Josh Marinacci",
            "team": "T5TCAFTA9",
            "name": "joshua",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563741130.059800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q7B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it’s not this, is it? "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/noderedguide.com\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEP7RL0HX",
        "type": "message",
        "ts": "1563827636.078100",
        "client_msg_id": "3e7c127a-d7e5-4535-b5c2-7ff3c8597bbf",
        "text": "Oddly enough, I'm designing the language without worrying about it's implementation. I'm going to leave that to far more clever people. But I'm assuming it can rely on existing reactive techniques.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4c54a8f7c01",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c4c54a8f7c01b3e22a1e82ae29c85f70.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Dan Swirsky",
            "display_name": "Dan Swirsky",
            "team": "T5TCAFTA9",
            "name": "dswirsky",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563816906.075500",
        "parent_user_id": "UEP7RL0HX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U=0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oddly enough, I'm designing the language without worrying about it's implementation. I'm going to leave that to far more clever people. But I'm assuming it can rely on existing reactive techniques."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1563827841.078300",
        "client_msg_id": "85b67bbd-9d4c-42eb-b2c2-e673bccf2b1a",
        "text": "Pure declarative languages only really exist in mathematics. In math, you have the luxury of abstracting away everything that isn't relevant to the description of some mathematical object. The order of subexpressions in a declarative sentence only matters iff you are describing a mathematical object with ordered elements. Eg, you might be describing a sequence of events that occur over time.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EpiZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Pure declarative languages only really exist in mathematics. In math, you have the luxury of abstracting away everything that isn't relevant to the description of some mathematical object. The order of subexpressions in a declarative sentence only matters iff you are describing a mathematical object with ordered elements. Eg, you might be describing a sequence of events that occur over time."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKFSDUCH2",
        "type": "message",
        "ts": "1563827948.078500",
        "client_msg_id": "54f27146-832e-45e6-82c6-54aed101dc43",
        "text": "ha hah. good point",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcc9260f41ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0cc9260f41ff521633069f4d94782cc7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Josh Marinacci",
            "display_name": "Josh Marinacci",
            "team": "T5TCAFTA9",
            "name": "joshua",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563816906.075500",
        "parent_user_id": "UEP7RL0HX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cTJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ha hah. good point"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1563827968.078700",
        "client_msg_id": "52717683-388f-4d1d-b7e5-e635e5dfccf9",
        "text": "Once you take a declarative language and make it executable, then it becomes a leaky abstraction. Once you have to worry about memory consumption and execution time, once you start changing a declarative description in order to optimize performance in the underlying execution engine, then the description is no longer purely declarative.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xu6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Once you take a declarative language and make it executable, then it becomes a leaky abstraction. Once you have to worry about memory consumption and execution time, once you start changing a declarative description in order to optimize performance in the underlying execution engine, then the description is no longer purely declarative."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1563828087.078900",
        "client_msg_id": "05d74d39-5ea6-488b-9575-5f0d1dfa44da",
        "text": "&gt; you might be describing a sequence of events that occur over time\nYou articulated precisely what I had a vague feeling about, that order may be an important language construct for efficiently communicating the idea, even if it doesn’t affect the final outcome.\nI’d like to point to Answer Set Programming as a pretty darn good counter example to the assertion that there are no declarative languages. The tech is still young, so some problems do require the optimization you’re describing, but many problems can be encoded completely naively, and termination is always guaranteed.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s\/F9a",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you might be describing a sequence of events that occur over time"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You articulated precisely what I had a vague feeling about, that order may be an important language construct for efficiently communicating the idea, even if it doesn’t affect the final outcome.\nI’d like to point to Answer Set Programming as a pretty darn good counter example to the assertion that there are no declarative languages. The tech is still young, so some problems do require the optimization you’re describing, but many problems can be encoded completely naively, and termination is always guaranteed."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1563828377.079100",
        "client_msg_id": "721209a6-0954-44bd-97fb-d686721b8d5e",
        "text": "Music notation is an example of a declarative language that uses ordering of subexpressions to describe a time ordered series of events.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bmd\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Music notation is an example of a declarative language that uses ordering of subexpressions to describe a time ordered series of events."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1563828477.079400",
        "client_msg_id": "bc1ee0dd-24e6-4475-85ca-9afe1f5242a1",
        "text": "<http:\/\/regent-lang.org\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563828477.079400",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1564061906.300800",
        "reply_users": [
            "UJBAJNFLK"
        ],
        "replies": [
            {
                "user": "UJBAJNFLK",
                "ts": "1564061906.300800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wLqOv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/regent-lang.org\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULADE0N0J"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1563828896.079500",
        "client_msg_id": "83b9d704-2490-4749-b820-e858f6f259c6",
        "text": "Regular expressions are a very successful example of a declarative language. Regular expressons are far simpler and more abstract than the equivalent imperative program working on an array of characters. In their original \"pure\" form, regular expressions were used in mathematics to describe sets of strings. Perl and Unix regular expressions are less declarative than their mathematical predecessors, because you need to understand how the execution engine works, you need to execute the regex in your head, in order to understand what substring will be captured by a \\(...\\) subexpression, for example.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BKUJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regular expressions are a very successful example of a declarative language. Regular expressons are far simpler and more abstract than the equivalent imperative program working on an array of characters. In their original \"pure\" form, regular expressions were used in mathematics to describe sets of strings. Perl and Unix regular expressions are less declarative than their mathematical predecessors, because you need to understand how the execution engine works, you need to execute the regex in your head, in order to understand what substring will be captured by a \\(...\\) subexpression, for example."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKQT95T1V",
        "type": "message",
        "ts": "1563839796.079800",
        "client_msg_id": "c5db1b62-5e31-43ee-bd7e-69cfc2b8b7d9",
        "text": "Is there a connection between scope and imperativeness? The whole concept of introducing bindings into a scope that are accessible in subsequent statements, whether or not mutation or effects are allowed?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5602bab02fb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c5602bab02fb00f0c9a052ee6c220513.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Alan Johnson",
            "display_name": "Alan Johnson",
            "team": "T5TCAFTA9",
            "name": "alan135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Es3F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there a connection between scope and imperativeness? The whole concept of introducing bindings into a scope that are accessible in subsequent statements, whether or not mutation or effects are allowed?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKQT95T1V",
        "type": "message",
        "ts": "1563839885.080000",
        "client_msg_id": "bce5b28d-e1de-4792-ae24-43ea46145f32",
        "text": "Or I guess you could say outcome or validity depending on lexical order?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5602bab02fb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c5602bab02fb00f0c9a052ee6c220513.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Alan Johnson",
            "display_name": "Alan Johnson",
            "team": "T5TCAFTA9",
            "name": "alan135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x12py",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Or I guess you could say outcome or validity depending on lexical order?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKQT95T1V",
        "type": "message",
        "ts": "1563839941.080200",
        "client_msg_id": "3a489a07-52aa-49d8-ab43-14fecd2e0fd7",
        "text": "If so, then musical notation is imperative for sure. Things like key signatures and dynamics could be said to be stored in scope as the piece is played",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5602bab02fb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c5602bab02fb00f0c9a052ee6c220513.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Alan Johnson",
            "display_name": "Alan Johnson",
            "team": "T5TCAFTA9",
            "name": "alan135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DHAxe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If so, then musical notation is imperative for sure. Things like key signatures and dynamics could be said to be stored in scope as the piece is played"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKQT95T1V",
        "type": "message",
        "ts": "1563840284.080400",
        "client_msg_id": "855aa9af-9578-4b6a-b254-531bed471da1",
        "text": "In a pure functional language without shadowing of identifiers, order is arguably a convention. You _could_ choose to infer execution order. Shadowing is just syntactic sugar for choosing a new name.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5602bab02fb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c5602bab02fb00f0c9a052ee6c220513.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Alan Johnson",
            "display_name": "Alan Johnson",
            "team": "T5TCAFTA9",
            "name": "alan135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hgqaI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In a pure functional language without shadowing of identifiers, order is arguably a convention. You "
                            },
                            {
                                "type": "text",
                                "text": "could",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " choose to infer execution order. Shadowing is just syntactic sugar for choosing a new name."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1563842307.080800",
        "client_msg_id": "c06c07ab-735e-400e-a493-f7585ce30aaf",
        "text": "<@UKQT95T1V> In Haskell, the list expression [a,b,c] produces a different result than [c,b,a], because a list is an ordered sequence of values. So the outcome depends on lexical order. This doesn't make Haskell an imperative language. But Haskell has lazy evaluation, and the order in which the subexpressions a, b and c are evaluated depends upon context, unlike in an imperative language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oH7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UKQT95T1V"
                            },
                            {
                                "type": "text",
                                "text": " In Haskell, the list expression [a,b,c] produces a different result than [c,b,a], because a list is an ordered sequence of values. So the outcome depends on lexical order. This doesn't make Haskell an imperative language. But Haskell has lazy evaluation, and the order in which the subexpressions a, b and c are evaluated depends upon context, unlike in an imperative language."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1563842784.081000",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1563845094.000000"
        },
        "client_msg_id": "bb7272ab-f997-4f30-9474-c68ab2c87459",
        "text": "The essence of imperative programming is: Mutable variables that can be modified by assignment statements; Algorithms expressed by executing statements, which have side effects, in some order, using sequential, conditional and iterative control structures.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EW+7N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The essence of imperative programming is: Mutable variables that can be modified by assignment statements; Algorithms expressed by executing statements, which have side effects, in some order, using sequential, conditional and iterative control structures."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKQT95T1V",
        "type": "message",
        "ts": "1563844907.081200",
        "client_msg_id": "80b5e334-0195-48a2-9074-bd0e7d982b68",
        "text": "I guess I should specify that I mean the outcome of the elemental \"sentences\" of the language, not that it can define data structures with inherent order",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5602bab02fb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c5602bab02fb00f0c9a052ee6c220513.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Alan Johnson",
            "display_name": "Alan Johnson",
            "team": "T5TCAFTA9",
            "name": "alan135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m4UU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess I should specify that I mean the outcome of the elemental \"sentences\" of the language, not that it can define data structures with inherent order"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1563845606.081500",
        "client_msg_id": "436cf8a9-83d7-470a-8070-761755b022e6",
        "text": "<@UKQT95T1V> said \"Is there a connection between scope and imperativeness? The whole concept of introducing bindings into a scope that are accessible in subsequent statements, whether or not mutation or effects are allowed?\" Scoped variables are a feature of every non-esoteric high level programming language. Even the lambda calculus has this. I would say no, you need mutable state in order to quality as an imperative language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R8os",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UKQT95T1V"
                            },
                            {
                                "type": "text",
                                "text": " said \"Is there a connection between scope and imperativeness? The whole concept of introducing bindings into a scope that are accessible in subsequent statements, whether or not mutation or effects are allowed?\" Scoped variables are a feature of every non-esoteric high level programming language. Even the lambda calculus has this. I would say no, you need mutable state in order to quality as an imperative language."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKQT95T1V",
        "type": "message",
        "ts": "1563845701.081700",
        "client_msg_id": "0c8e09e2-aca3-4b32-a8ea-b92c050578d9",
        "text": "Prolog doesn't really have them, and I wouldn't say it's esoteric",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5602bab02fb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c5602bab02fb00f0c9a052ee6c220513.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Alan Johnson",
            "display_name": "Alan Johnson",
            "team": "T5TCAFTA9",
            "name": "alan135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gv0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Prolog doesn't really have them, and I wouldn't say it's esoteric"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKQT95T1V",
        "type": "message",
        "ts": "1563845855.081900",
        "client_msg_id": "11b0da41-b939-483e-a46a-65c67049eb73",
        "text": "For some reason, I think of the (simple) lambda calculus a bit differently from having scope, in the sense I'm thinking of. Maybe that's because it doesn't natively have statements",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5602bab02fb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c5602bab02fb00f0c9a052ee6c220513.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Alan Johnson",
            "display_name": "Alan Johnson",
            "team": "T5TCAFTA9",
            "name": "alan135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XXuG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For some reason, I think of the (simple) lambda calculus a bit differently from having scope, in the sense I'm thinking of. Maybe that's because it doesn't natively have statements"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1563846488.082100",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1563846642.000000"
        },
        "client_msg_id": "a04f3697-e978-4fbe-90b8-0ab9af9889fa",
        "text": "Prolog does have scoped variables, by my way of thinking. In this program:\n\n  mother_child(trude, sally).\n  father_child(tom, sally).\n  father_child(tom, erica).\n  father_child(mike, tom).\n  sibling(X, Y) :- parent_child(Z, X), parent_child(Z, Y).\n  parent_child(X, Y) :- father_child(X, Y).\n  parent_child(X, Y) :- mother_child(X, Y).\n\nthe X, Y and Z variables have local scope in each rule they occur in, analogous to function parameters in a functional language or in the lambda calculus. Lower cased variables like tom and sally have global scope.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=h0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Prolog does have scoped variables, by my way of thinking. In this program:\n\n  mother_child(trude, sally).\n  father_child(tom, sally).\n  father_child(tom, erica).\n  father_child(mike, tom).\n  sibling(X, Y) :- parent_child(Z, X), parent_child(Z, Y).\n  parent_child(X, Y) :- father_child(X, Y).\n  parent_child(X, Y) :- mother_child(X, Y).\n\nthe X, Y and Z variables have local scope in each rule they occur in, analogous to function parameters in a functional language or in the lambda calculus. Lower cased variables like tom and sally have global scope."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1563848639.082400",
        "client_msg_id": "d1a8408a-0457-4ff9-a15c-d63936e6e0b0",
        "text": "<@UKQT95T1V> The meaning of the word \"variable\" is different for imperative and functional programmers. I have a functional and declarative programming mindset, so for me, a variable is an immutable association between a name and a value, defined over some scope. I use the term \"mutable variable\" to refer to imperative variables. If I'm thinking formally, from the perspective of denotational semantics, then I think of an imperative variable as an immutable association between a name and the address of a mutable memory location. I've participated in forum threads where imperative programmers prefer to call functional variables \"constants\", and I notice that the Swift language documentation uses this terminology. (I think that's wrong: a constant is an expression which always has the same value, in every execution of a program. 42 is a constant.) So there is a cultural divide, where the two cultures use the same words differently. It appears we may have a different understanding of the word \"scope\", so maybe that's related?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563814799.068500",
        "parent_user_id": "UKFSDUCH2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/vSHf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UKQT95T1V"
                            },
                            {
                                "type": "text",
                                "text": " The meaning of the word \"variable\" is different for imperative and functional programmers. I have a functional and declarative programming mindset, so for me, a variable is an immutable association between a name and a value, defined over some scope. I use the term \"mutable variable\" to refer to imperative variables. If I'm thinking formally, from the perspective of denotational semantics, then I think of an imperative variable as an immutable association between a name and the address of a mutable memory location. I've participated in forum threads where imperative programmers prefer to call functional variables \"constants\", and I notice that the Swift language documentation uses this terminology. (I think that's wrong: a constant is an expression which always has the same value, in every execution of a program. 42 is a constant.) So there is a cultural divide, where the two cultures use the same words differently. It appears we may have a different understanding of the word \"scope\", so maybe that's related?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1563848881.082600",
        "client_msg_id": "65c7c44a-5499-4793-abc0-0f8c98ba7a83",
        "text": "LoC generated is a liability :slightly_smiling_face: If anything, a problem we'll face is we're producing more stuff than we can maintain, or that the people that depend on the software can pay to be maintained",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563749183.061400",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xXcry",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "LoC generated is a liability "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " If anything, a problem we'll face is we're producing more stuff than we can maintain, or that the people that depend on the software can pay to be maintained"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1563849792.082800",
        "client_msg_id": "1b350454-72cf-472b-9aed-55d5b98b7a85",
        "text": "Well the authors of the paper were designing their own language, so I believe that was their perspective (they stopped working on it shortly after).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563525337.318100",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+Ka",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well the authors of the paper were designing their own language, so I believe that was their perspective (they stopped working on it shortly after)."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]