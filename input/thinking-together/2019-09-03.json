[
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1567502100.064900",
        "client_msg_id": "78601def-8304-4e3d-af5b-60727011120f",
        "text": "Some good points, although he glosses over Prof. Wirth's work. I was a disciple of Prof. Wirth and used his Modula-2 language, perhaps one of only 100 people in the USA making products with it against the C juggernaut. The problem with language selection is 1) inertia is the most powerful force in the universe, and 2) it is an intrinsically conservative part of the brain to acquire and repeat a language, we are not wired to learn new ones, but keep using the current one,  3) humans are a herd animal, and seek safety by copying the majority, with prevents change.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1eHdR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some good points, although he glosses over Prof. Wirth's work. I was a disciple of Prof. Wirth and used his Modula-2 language, perhaps one of only 100 people in the USA making products with it against the C juggernaut. The problem with language selection is 1) inertia is the most powerful force in the universe, and 2) it is an intrinsically conservative part of the brain to acquire and repeat a language, we are not wired to learn new ones, but keep using the current one,  3) humans are a herd animal, and seek safety by copying the majority, with prevents change."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "UEF95M2RH",
        "thread_ts": "1567478444.062000",
        "root": {
            "user": "UCUSW7WVD",
            "type": "message",
            "ts": "1567478444.062000",
            "client_msg_id": "9b08086c-cff4-4c33-af0f-f1fcf79f97b9",
            "text": "Today's computers are cars rather than bicycles for the mind\n\n<https:\/\/www.cs.kent.ac.uk\/people\/staff\/srk21\/research\/talks\/kell19software-slides.pdf>",
            "team": "T5TCAFTA9",
            "thread_ts": "1567478444.062000",
            "reply_count": 5,
            "reply_users_count": 3,
            "latest_reply": "1568054410.238900",
            "reply_users": [
                "UEF95M2RH",
                "UCUSW7WVD",
                "UJBAJNFLK"
            ],
            "replies": [
                {
                    "user": "UEF95M2RH",
                    "ts": "1567505588.065400"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1567565114.071200"
                },
                {
                    "user": "UJBAJNFLK",
                    "ts": "1567844533.197800"
                },
                {
                    "user": "UEF95M2RH",
                    "ts": "1568042548.213500"
                },
                {
                    "user": "UJBAJNFLK",
                    "ts": "1568054410.238900"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "4qY=B",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "Today's computers are cars rather than bicycles for the mind\n\n"
                                },
                                {
                                    "type": "link",
                                    "url": "https:\/\/www.cs.kent.ac.uk\/people\/staff\/srk21\/research\/talks\/kell19software-slides.pdf"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1567505588.065400",
        "edited": {
            "user": "UEF95M2RH",
            "ts": "1567505760.000000"
        },
        "client_msg_id": "c53c142e-92f1-4d97-846f-cc41d65d0dec",
        "text": "I really like the comparative method as a way of growing one's understanding of a complex system: instead of seeing it only from the inside view, as an expert in that particular system (eg. US politics, human biology), take an outside view by comparing it to other similar things (eg. world politics &amp; history, other species).\n\nWhat I find disappointing about Kell's slides is that he applies the comparative method only half-heartedly. He claims there is a systemic problem in software-development stemming from the same roots (following Illich) as problems in medicine, transportation, and education... and then _ignores_ this comparison when he proposes solutions! In particular, he doesn't ask whether there's any evidence his proposed solution ─ changing computer science education to create a different programming culture ─ would or wouldn't also work in those other fields. Could changing medical education have made medicine more convivial? Could changing education somehow have avoided the rise of car-centric urban design? It seems unlikely, but I'd be interested to hear a counter-argument.\n\nPersonally, I suspect the root problems involved are economic. This does not make me optimistic about finding a solution any time soon, and it makes me pessimistic about the value of communities like this one, which focus primarily on _technical_ solutions.",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nXE0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really like the comparative method as a way of growing one's understanding of a complex system: instead of seeing it only from the inside view, as an expert in that particular system (eg. US politics, human biology), take an outside view by comparing it to other similar things (eg. world politics & history, other species).\n\nWhat I find disappointing about Kell's slides is that he applies the comparative method only half-heartedly. He claims there is a systemic problem in software-development stemming from the same roots (following Illich) as problems in medicine, transportation, and education... and then "
                            },
                            {
                                "type": "text",
                                "text": "ignores",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " this comparison when he proposes solutions! In particular, he doesn't ask whether there's any evidence his proposed solution ─ changing computer science education to create a different programming culture ─ would or wouldn't also work in those other fields. Could changing medical education have made medicine more convivial? Could changing education somehow have avoided the rise of car-centric urban design? It seems unlikely, but I'd be interested to hear a counter-argument.\n\nPersonally, I suspect the root problems involved are economic. This does not make me optimistic about finding a solution any time soon, and it makes me pessimistic about the value of communities like this one, which focus primarily on "
                            },
                            {
                                "type": "text",
                                "text": "technical",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " solutions."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKJGU23KP",
                    "UBSMEUXAA",
                    "UD6EXQVM0"
                ],
                "count": 3
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UL3EE9WR1",
        "type": "message",
        "ts": "1567536211.068800",
        "client_msg_id": "f3fac0b1-c196-459f-971b-f6e63a534556",
        "text": "I'm reading Range by David Epstein right now (which is fantastic) and he talks about the benefits of cross system\/genre thinking like this (as an aid to solution finding)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gb6b8c893530",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/4b6b8c8935300db9089a9277d7e76a88.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "",
            "real_name": "Alex Miller",
            "display_name": "Alex Miller",
            "team": "T5TCAFTA9",
            "name": "alex678",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567536211.068800",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1567539519.069100",
        "reply_users": [
            "UGLSY9X3J"
        ],
        "replies": [
            {
                "user": "UGLSY9X3J",
                "ts": "1567539519.069100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Sk9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm reading Range by David Epstein right now (which is fantastic) and he talks about the benefits of cross system\/genre thinking like this (as an aid to solution finding)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGLSY9X3J",
        "type": "message",
        "ts": "1567539519.069100",
        "client_msg_id": "b53f4eb2-906d-4419-93e3-d5373426fd4f",
        "text": "I concur! Love the book",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g03ebdf13bbe",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e03ebdf13bbeacace66454bea388b927.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Srini Kadamati",
            "display_name": "srini",
            "team": "T5TCAFTA9",
            "name": "srini",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567536211.068800",
        "parent_user_id": "UL3EE9WR1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qyuqx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I concur! Love the book"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1567552493.070600",
        "client_msg_id": "C13173AD-F127-44E6-9648-A1DEA1F6F22F",
        "text": "<@U6BRN7A0Y> May I ask what darklang learns from Erlang and its ecosystem? :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567552493.070600",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1567642418.090500",
        "reply_users": [
            "U6BRN7A0Y",
            "UL3CJ7YKC"
        ],
        "replies": [
            {
                "user": "U6BRN7A0Y",
                "ts": "1567552870.070700"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1567633782.087900"
            },
            {
                "user": "U6BRN7A0Y",
                "ts": "1567642402.089900"
            },
            {
                "user": "U6BRN7A0Y",
                "ts": "1567642418.090500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dv4zW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U6BRN7A0Y"
                            },
                            {
                                "type": "text",
                                "text": " May I ask what darklang learns from Erlang and its ecosystem? :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6BRN7A0Y",
        "type": "message",
        "ts": "1567552870.070700",
        "client_msg_id": "9e148094-1567-4a46-b0fd-d60db8e14f81",
        "text": "Not much I would say. Afraid that erlang\/BEAM\/elixir is one part of PL that I know very little about.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gee6ec3be3e3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eee6ec3be3e3176ff1e1119301630812.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Paul",
            "real_name": "Paul Biggar",
            "display_name": "pbiggar",
            "team": "T5TCAFTA9",
            "name": "pbiggar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567552493.070600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sWlqV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not much I would say. Afraid that erlang\/BEAM\/elixir is one part of PL that I know very little about."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UL3CJ7YKC"
                ],
                "count": 2
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "UCUSW7WVD",
        "thread_ts": "1567478444.062000",
        "root": {
            "user": "UCUSW7WVD",
            "type": "message",
            "ts": "1567478444.062000",
            "client_msg_id": "9b08086c-cff4-4c33-af0f-f1fcf79f97b9",
            "text": "Today's computers are cars rather than bicycles for the mind\n\n<https:\/\/www.cs.kent.ac.uk\/people\/staff\/srk21\/research\/talks\/kell19software-slides.pdf>",
            "team": "T5TCAFTA9",
            "thread_ts": "1567478444.062000",
            "reply_count": 5,
            "reply_users_count": 3,
            "latest_reply": "1568054410.238900",
            "reply_users": [
                "UEF95M2RH",
                "UCUSW7WVD",
                "UJBAJNFLK"
            ],
            "replies": [
                {
                    "user": "UEF95M2RH",
                    "ts": "1567505588.065400"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1567565114.071200"
                },
                {
                    "user": "UJBAJNFLK",
                    "ts": "1567844533.197800"
                },
                {
                    "user": "UEF95M2RH",
                    "ts": "1568042548.213500"
                },
                {
                    "user": "UJBAJNFLK",
                    "ts": "1568054410.238900"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "R\/BPF",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "Today's computers are cars rather than bicycles for the mind\n\n"
                                },
                                {
                                    "type": "link",
                                    "url": "https:\/\/www.cs.kent.ac.uk\/people\/staff\/srk21\/research\/talks\/kell19software-slides.pdf"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1567565114.071200",
        "client_msg_id": "dc61426f-06dc-4945-bd92-d479db6954c4",
        "text": "I saw a similar dissonance between a well-framed problem statement and the solution to it. The problem: \"one class monopolizes, creating distances for all but providing the means to shrink them only for a few\". But the solution is (paraphrasing) to support all cars that have come before.\n\nI would like to think I spend time thinking about social implications. One concrete bit of evidence: I think about what operations to make _more difficult_ than they are today, sculpting a new social contract out of a harder medium. I think I've been following Illich's dictum to \"avoid speeds much above a bicycle\". But I think interoperating with C merely continues to enable the \"monopoly of the recent\".",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mrgiw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I saw a similar dissonance between a well-framed problem statement and the solution to it. The problem: \"one class monopolizes, creating distances for all but providing the means to shrink them only for a few\". But the solution is (paraphrasing) to support all cars that have come before.\n\nI would like to think I spend time thinking about social implications. One concrete bit of evidence: I think about what operations to make "
                            },
                            {
                                "type": "text",
                                "text": "more difficult",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " than they are today, sculpting a new social contract out of a harder medium. I think I've been following Illich's dictum to \"avoid speeds much above a bicycle\". But I think interoperating with C merely continues to enable the \"monopoly of the recent\"."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1567565554.071800",
        "client_msg_id": "3ACE78F2-73C2-4B84-8AD5-708D4A8F3E23",
        "text": "loose thoughts related to eg <https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1567285748046200?thread_ts=1567229532.043700&amp;channel=C5U3SEW6A&amp;message_ts=1567285748.046200>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567285828.044100",
        "parent_user_id": "UHWC9PXBL",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1567285748046200?thread_ts=1567229532.043700&amp;channel=C5U3SEW6A&amp;message_ts=1567285748.046200",
                "fallback": "[August 31st, 2019 2:09 PM] garth: “When you put app logic in event handlers (like `onClick` or `onSubmit`), any event can potentially have an effect at any time. \n\nState machines follow an explicit event-state-action paradigm, where effects are based on event *and* state, not just event.” \n\nthis tweet really gets to the heart of it i think. it seems weird to me that when i’m programming interfaces i suddenly lose all context for the task the user is trying to do. whereas in programming we have stuff like scope, environment, self, call stacks, etc",
                "ts": "1567285748.046200",
                "author_id": "UHWC9PXBL",
                "author_subname": "Garth Goldwater",
                "channel_id": "C5U3SEW6A",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "“When you put app logic in event handlers (like `onClick` or `onSubmit`), any event can potentially have an effect at any time. \n\nState machines follow an explicit event-state-action paradigm, where effects are based on event *and* state, not just event.” \n\nthis tweet really gets to the heart of it i think. it seems weird to me that when i’m programming interfaces i suddenly lose all context for the task the user is trying to do. whereas in programming we have stuff like scope, environment, self, call stacks, etc",
                "author_name": "Garth Goldwater",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/UHWC9PXBL",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F136bc%2Fimg%2Favatars%2Fuser_shapes%2Fava_0019-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1567285748046200?thread_ts=1567229532.043700&amp;channel=C5U3SEW6A&amp;message_ts=1567285748.046200",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wET",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "loose thoughts related to eg "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1567285748046200?thread_ts=1567229532.043700&amp;channel=C5U3SEW6A&amp;message_ts=1567285748.046200",
                                "text": "https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1567285748046200?thread_ts=1567229532.043700&channel=C5U3SEW6A&message_ts=1567285748.046200"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1567565597.073300",
        "client_msg_id": "932B21BE-0907-4776-A8FA-6B1499FFF7D4",
        "text": "basically trying to figure out what a language for creating interactive programs rather than batch processes would look like if we started from the ground up",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567285828.044100",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JzIkD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "basically trying to figure out what a language for creating interactive programs rather than batch processes would look like if we started from the ground up"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1567565810.078900",
        "client_msg_id": "7DEB4440-CF2B-4212-8849-97ED9BC520EE",
        "text": "the analogy i’m thinking of at the moment is games where you gather and construct greater abilities out of smaller pieces —you gain the ability to double jump or rocket jump by combining existing skills you’ve learned. in programming terms: what would it look like if we were designing things in terms of user abilities and the programming environment rather than building metaphors from scratch over and over again, so that instead of wiring together “enter” and “submit form” we were wiring together domain specific terms from the get-go with particular controls tagged on afterwards",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567285828.044100",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eUUED",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the analogy i’m thinking of at the moment is games where you gather and construct greater abilities out of smaller pieces —you gain the ability to double jump or rocket jump by combining existing skills you’ve learned. in programming terms: what would it look like if we were designing things in terms of user abilities and the programming environment rather than building metaphors from scratch over and over again, so that instead of wiring together “enter” and “submit form” we were wiring together domain specific terms from the get-go with particular controls tagged on afterwards"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1567565817.079300",
        "client_msg_id": "25C488E6-DD7A-48E6-88D1-C4373E50C8E7",
        "text": "this is super hazy and half formed",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567285828.044100",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7XJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this is super hazy and half formed"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1567567141.079800",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1567567168.000000"
        },
        "client_msg_id": "d8599a68-c401-49f5-8ee6-3c582115b09e",
        "text": "sounds like Dreams (PS4) and Little Big Planet before that to some degree",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567285828.044100",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V\/oq+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "sounds like Dreams (PS4) and Little Big Planet before that to some degree"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]