[
    {
        "user": "U02B6FQKZK8",
        "type": "message",
        "ts": "1693507682.325009",
        "client_msg_id": "2C5AC035-262C-4F4F-BCFB-6C1E6EF24846",
        "text": "I think we need a name for this more general design principle <@UMQ6LR9NZ> is trying to entail. I particularly like the tie to input (methods and contexts), because it makes it very tangible, and the emergent benefits can be often surprising (mostly thinking about programming interfaces here):\n\n1) If my interface can be completely controllable\/readable by voice, then any person (not only people with impaired vision for any reason) could use it in many arbitrary situations; I can program while cooking;\n\n2) Similarly, if my system can be controlled completely by hand gestures, then I don't have to speak, or even touch the keyboard\/mouse\/touchpad; I can then build something very casually, like a game, using muscle memory alone; \n\n3) Interesting research can be made on the ergonomics of interfaces considering arbitrary handicaps \"Single Handed Programming\", \"Single Finger Coding\", \"Software Bending\" (Programming using body gestures, which doesn't even exist yet), and their many design challenges' particularities;\n\n4) The fact that one can program on the phone at all is a very sophisticated accessibility feat already, but (at least) that front gets talked about around as \"Mobile First\" design; still a very rare feat in current software ecosystem, especially for coding;\n\n5) Repeat that for many devices (what about programming only with a joystick?) or body\/mental state conditions (I have very little\/high energy right now...) or environmental (would this tool be more helpful to code underwater?)... etc... etc...\n\nThese are a few examples of this unnamed phenomenon. I will try to compress it: \"if you design with limitations in mind, the overall solution might improve\". \n\nWhat is the name?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "16df1f0f2f03",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-08-16\/2387476364451_16df1f0f2f036c730a6f_72.jpg",
            "first_name": "Samuel",
            "real_name": "Samuel Timbó",
            "display_name": "Samuel Timbó",
            "team": "T5TCAFTA9",
            "name": "samuelmtimbo",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1693241844.727769",
        "parent_user_id": "UMQ6LR9NZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g4w0Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think we need a name for this more general design principle "
                            },
                            {
                                "type": "user",
                                "user_id": "UMQ6LR9NZ"
                            },
                            {
                                "type": "text",
                                "text": " is trying to entail. I particularly like the tie to input (methods and contexts), because it makes it very tangible, and the emergent benefits can be often surprising (mostly thinking about programming interfaces here):\n\n1) If my interface can be completely controllable\/readable by voice, then any person (not only people with impaired vision for any reason) could use it in many arbitrary situations; I can program while cooking;\n\n2) Similarly, if my system can be controlled completely by hand gestures, then I don't have to speak, or even touch the keyboard\/mouse\/touchpad; I can then build something very casually, like a game, using muscle memory alone; \n\n3) Interesting research can be made on the ergonomics of interfaces considering arbitrary handicaps \"Single Handed Programming\", \"Single Finger Coding\", \"Software Bending\" (Programming using body gestures, which doesn't even exist yet), and their many design challenges' particularities;\n\n4) The fact that one can program on the phone at all is a very sophisticated accessibility feat already, but (at least) that front gets talked about around as \"Mobile First\" design; still a very rare feat in current software ecosystem, especially for coding;\n\n5) Repeat that for many devices (what about programming only with a joystick?) or body\/mental state conditions (I have very little\/high energy right now...) or environmental (would this tool be more helpful to code underwater?)... etc... etc...\n\nThese are a few examples of this unnamed phenomenon. I will try to compress it: \"if you design with limitations in mind, the overall solution might improve\". \n\nWhat is the name?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UMQ6LR9NZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1693510913.235389",
        "client_msg_id": "0f8e7777-60dc-4b54-a4e9-a7600d8d8a81",
        "text": "I’ve run into this kind of thing and seen it called stuff like\n\n• accessibility beyond compliance\n• inclusive design (adjacent to _participatory design_)\n• designing for resiliency \n• …\nBut I don’t think they _really_ capture what you are doing a great job of describing, <@U02B6FQKZK8>.\n\nI wonder about something like reclaiming Interaction Design, but with a broader scope of what _interaction_ encompasses?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1693241844.727769",
        "parent_user_id": "UMQ6LR9NZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qP2ro",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve run into this kind of thing and seen it called stuff like\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "accessibility beyond compliance"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "inclusive design (adjacent to "
                                    },
                                    {
                                        "type": "text",
                                        "text": "participatory design",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ")"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "designing for resiliency "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "…"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nBut I don’t think they "
                            },
                            {
                                "type": "text",
                                "text": "really",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " capture what you are doing a great job of describing, "
                            },
                            {
                                "type": "user",
                                "user_id": "U02B6FQKZK8"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nI wonder about something like reclaiming Interaction Design, but with a broader scope of what "
                            },
                            {
                                "type": "text",
                                "text": "interaction",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " encompasses?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02QC0PPER3",
        "type": "message",
        "ts": "1693513673.253879",
        "client_msg_id": "2b53e1f5-2087-4c45-9d8e-6bcd2d60bb86",
        "text": "One interesting angle is _porting_ vs. _emulation_.\nIf I recompile my Go program for another CPU\/OS, and it works with little modification, that proves the underlying instruction set or OS didn't matter much; the Go-level concepts (functions, interfaces, channels etc.), and OS concepts (files etc.) have a \"reality of their own\".\n\nOn the other hand if I have a C game directly accessing IBM PC registers, and playing with interrupt vectors, I can still run without modifications on another CPU\/OS inside an emulator like DOSBox - but that's different!\nThe hardware and DOS\/BIOS internals now do matter, and they still exist byte-for-byte in DOSBox, even if virtually.  The C-level behavior hern cannot be understood other than by reductionism to assembly-level concepts.\nAt least not all of it.  Some parts probably have \"abstract reality\"...  \n\nIronically, if you look one layer above to the _player's experience_, that's usually well-insulated from the implementation.  If you ask a player what game XYZ _is_, they'll probably talk of the game rules, strategies for winning, plot etc. -- and not a particular sequence of bytes on disk implementing those!\n(And they certainly won't care whether the implementation used abstract layers or strongly tangled with lower layers.)\nWell, unless you get into glitching\/cheating\/modding... which are things many gamers enjoy too :-)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "90c9108c61f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-12\/2854686602576_90c9108c61f5d809eb8a_72.jpg",
            "first_name": "Beni",
            "real_name": "Beni Cherniavsky-Paskin",
            "display_name": "Beni Cherniavsky-Paskin",
            "team": "T5TCAFTA9",
            "name": "beni.cherniavsky",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692925047.641699",
        "parent_user_id": "U05597GCDDK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fol0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One interesting angle is "
                            },
                            {
                                "type": "text",
                                "text": "porting",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vs. "
                            },
                            {
                                "type": "text",
                                "text": "emulation",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\nIf I recompile my Go program for another CPU\/OS, and it works with little modification, that proves the underlying instruction set or OS didn't matter much; the Go-level concepts (functions, interfaces, channels etc.), and OS concepts (files etc.) have a \"reality of their own\".\n\nOn the other hand if I have a C game directly accessing IBM PC registers, and playing with interrupt vectors, I can still run without modifications on another CPU\/OS inside an emulator like DOSBox - but that's different!\nThe hardware and DOS\/BIOS internals now do matter, and they still exist byte-for-byte in DOSBox, even if virtually.  The C-level behavior hern cannot be understood other than by reductionism to assembly-level concepts.\nAt least not all of it.  Some parts probably have \"abstract reality\"...  \n\nIronically, if you look one layer above to the "
                            },
                            {
                                "type": "text",
                                "text": "player's experience",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", that's usually well-insulated from the implementation.  If you ask a player what game XYZ "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", they'll probably talk of the game rules, strategies for winning, plot etc. -- and not a particular sequence of bytes on disk implementing those!\n(And they certainly won't care whether the implementation used abstract layers or strongly tangled with lower layers.)\nWell, unless you get into glitching\/cheating\/modding... which are things many gamers enjoy too :-)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1693542230.321329",
        "client_msg_id": "286355b9-d306-49b5-b406-24796d720d2d",
        "text": "Turing-complete runtimes suffer from a similar problem.  :flushed:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1693231453.379599",
        "parent_user_id": "U03LJBR6THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9jPAp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Turing-complete runtimes suffer from a similar problem.  "
                            },
                            {
                                "type": "emoji",
                                "name": "flushed",
                                "unicode": "1f633"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03LJBR6THT",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    }
]