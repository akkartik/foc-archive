[
    {
        "user": "UKLV35EEM",
        "type": "message",
        "ts": "1563185257.219200",
        "client_msg_id": "e8d2f1e7-2bfa-425a-99e8-3b2f3eb5c7fe",
        "text": "Thanks for the link.  I like the non-parametric flavor!  Though resorting to mods like BESAT exemplify the kind of finite effects I worry about.  Is the idea that the adaptive evaluation framework would be applied in an 'ongoing process' framework, with closed-loop interactions through an environment?  Simple Prolog examples subconsciously convey 'finite algorithm' to me, but it would be cool if the adaptive stats are expected to carry over from one program evaluation to the next as input assumptions change.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdb664c49890",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/9db664c49890423e2263d51f331aab76.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "",
            "real_name": "Dave Ackley",
            "display_name": "Dave Ackley",
            "team": "T5TCAFTA9",
            "name": "ackley",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562186111.103400",
        "parent_user_id": "UL3FQ4PHB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hy0DI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the link.  I like the non-parametric flavor!  Though resorting to mods like BESAT exemplify the kind of finite effects I worry about.  Is the idea that the adaptive evaluation framework would be applied in an 'ongoing process' framework, with closed-loop interactions through an environment?  Simple Prolog examples subconsciously convey 'finite algorithm' to me, but it would be cool if the adaptive stats are expected to carry over from one program evaluation to the next as input assumptions change."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1563205840.243800",
        "client_msg_id": "eb367e72-1e1f-4b5e-9840-29df01173e58",
        "text": "Hi everyone! I have just posted this question to hackernews and got to the frontpage. One of the comments suggested this channel but I don't really know anyone. (<https:\/\/news.ycombinator.com\/item?id=20431879>)\n\nI am 26, have a BSc in computers science. I did not go further to MSc, because I deeply felt my university does not emphasize the right things. Eg. we barely learned about FP and nothing on Dependent Types, but my interest was always to write the cleanest and most expressive code possible.\n\nI tried to look up and search many things in the last years: OOP, Uncle Bobs Clean Code series, classic GoF Design Patterns, DCI Architecture, Prolog and Logic programming, UML, Statecharts, reading on FP &amp; Type Systems, research on Temporal Logic and model validation, TDD, property based testing, using (runtime) assertions to reason, Eiffel and Design By Contract. None of these made me happy, I always felt something is just missing. My intuition said it is closely related to logic, reasoning, and boolean \"tagging\" of values\/objects as \"properties\" (how to model odd\/even numbers), the support of incremental implementation of code, plus a huge one: some help\/reasoning on ordering of computations: aka taming async code which might get complicated really quickly... and of course some neat IDE support for that: neat \"views\" to focus on different but related parts of the implemented code and study their relations with or without other logic statements already coded up.\n\n2 years ago I have found a youtube video on Idris and Dependent Types from Edward Brady and I was fascinated. I've seen the \"properties\" part I was looking for, the holes in code and some awesome self-written definitions, awesome case split. I googled Dependent Types, I have found Agda, Coq and Idris, checked some videos about them, but I was not sure if they are what I am really looking for or is there something more. This lead me to write the Ask HN post I mentioned above, I wanted to make sure I am not missing anything before investing in learning Dependent Types.\n\nAfter reading the comments and connecting some dots I think the main intuitions I had are addressed exactly by Dependent Types, but I am really curious about further\/other ideas what are going on, plus to join to a community who might use these tools.\n\nI am wondering about the jobs and the fit of Dependent Types for my personal projects. I am a game developer now (Unity), but before that I used React \/ React Native, I am really interested in bindings with these technologies, but maybe it is not even necessary. I'd really happy to learn about real world options, how\/where to use DT to make some money.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563205840.243800",
        "reply_count": 17,
        "reply_users_count": 5,
        "latest_reply": "1595543506.489100",
        "reply_users": [
            "UCUSW7WVD",
            "UL3CJ7YKC",
            "UDKTZSD6H",
            "ULF1Y4N4V",
            "UAVCC2X70"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1563207194.244000"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1563209598.244500"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1563802570.000600"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1563802711.000900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1563806296.001400"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1563808741.001600"
            },
            {
                "user": "ULF1Y4N4V",
                "ts": "1564005426.012500"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1564107014.022400"
            },
            {
                "user": "ULF1Y4N4V",
                "ts": "1564114118.022900"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1564147410.024100"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1564358681.030700"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1564364596.031000"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1564364596.031200"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1564365862.031800"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1564372614.033000"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1586662316.034500"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1595543506.489100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IUQ5S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi everyone! I have just posted this question to hackernews and got to the frontpage. One of the comments suggested this channel but I don't really know anyone. ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=20431879"
                            },
                            {
                                "type": "text",
                                "text": ")\n\nI am 26, have a BSc in computers science. I did not go further to MSc, because I deeply felt my university does not emphasize the right things. Eg. we barely learned about FP and nothing on Dependent Types, but my interest was always to write the cleanest and most expressive code possible.\n\nI tried to look up and search many things in the last years: OOP, Uncle Bobs Clean Code series, classic GoF Design Patterns, DCI Architecture, Prolog and Logic programming, UML, Statecharts, reading on FP & Type Systems, research on Temporal Logic and model validation, TDD, property based testing, using (runtime) assertions to reason, Eiffel and Design By Contract. None of these made me happy, I always felt something is just missing. My intuition said it is closely related to logic, reasoning, and boolean \"tagging\" of values\/objects as \"properties\" (how to model odd\/even numbers), the support of incremental implementation of code, plus a huge one: some help\/reasoning on ordering of computations: aka taming async code which might get complicated really quickly... and of course some neat IDE support for that: neat \"views\" to focus on different but related parts of the implemented code and study their relations with or without other logic statements already coded up.\n\n2 years ago I have found a youtube video on Idris and Dependent Types from Edward Brady and I was fascinated. I've seen the \"properties\" part I was looking for, the holes in code and some awesome self-written definitions, awesome case split. I googled Dependent Types, I have found Agda, Coq and Idris, checked some videos about them, but I was not sure if they are what I am really looking for or is there something more. This lead me to write the Ask HN post I mentioned above, I wanted to make sure I am not missing anything before investing in learning Dependent Types.\n\nAfter reading the comments and connecting some dots I think the main intuitions I had are addressed exactly by Dependent Types, but I am really curious about further\/other ideas what are going on, plus to join to a community who might use these tools.\n\nI am wondering about the jobs and the fit of Dependent Types for my personal projects. I am a game developer now (Unity), but before that I used React \/ React Native, I am really interested in bindings with these technologies, but maybe it is not even necessary. I'd really happy to learn about real world options, how\/where to use DT to make some money."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "UC2A2ARPT",
                    "UBSMEUXAA",
                    "UJCHWTMH6",
                    "UHWC9PXBL",
                    "UJ6LDMMN0",
                    "U85HCL7JP",
                    "U5TCAFTD3",
                    "U7C7B75R6",
                    "UC21F8Q48",
                    "UA14TGLTC",
                    "ULF1Y4N4V",
                    "UFPRPSA4S",
                    "UF71PR58X",
                    "UD6EXQVM0"
                ],
                "count": 14
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1563207194.244000",
        "client_msg_id": "b91c45c3-19c4-4775-90a1-9291f0998722",
        "text": "Hi! I'm akkartik.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563205840.243800",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "95g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi! I'm akkartik."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "UL3CJ7YKC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1563209598.244500",
        "client_msg_id": "06d0c0c3-fbec-423b-861e-90e58cf2e6b3",
        "text": "<@UCUSW7WVD> Hi! :slightly_smiling_face: Thanks for the invitation!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563205840.243800",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qqaY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Hi! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for the invitation!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]