[
    {
        "user": "U0296ACR13M",
        "type": "message",
        "ts": "1721642000.821539",
        "client_msg_id": "bd0061b2-98f9-4b65-9caa-7695474af738",
        "text": "In principle this seems to be very similar solution the black box problem of LLMs as my idea with Levlo: Put a human (non-developer) readable deterministic language between LLM and some sort of a runtime. So I certainly see the value! :slightly_smiling_face: I made a demo about my approach couple months ago as well: <https:\/\/www.youtube.com\/watch?v=9ri0Cwv43wE>. The language in the demo is fairly \"low-level\" and designed for arithmethics and boolean algebra, but it could just as well be more of a logic programming language for law.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "59de929720a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-09-08\/4075674207584_59de929720a2fe0a13d8_72.jpg",
            "first_name": "",
            "real_name": "Jarno Montonen",
            "display_name": "Jarno Montonen",
            "team": "T5TCAFTA9",
            "name": "jarno.montonen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1721111830.884469",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kenw5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In principle this seems to be very similar solution the black box problem of LLMs as my idea with Levlo: Put a human (non-developer) readable deterministic language between LLM and some sort of a runtime. So I certainly see the value! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " I made a demo about my approach couple months ago as well: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=9ri0Cwv43wE"
                            },
                            {
                                "type": "text",
                                "text": ". The language in the demo is fairly \"low-level\" and designed for arithmethics and boolean algebra, but it could just as well be more of a logic programming language for law."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U02U0AS3J49"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1721674673.632369",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1721712570.000000"
        },
        "client_msg_id": "eca42edf-b786-48cf-9cd0-8f0a827da9f0",
        "text": "For the past month I've been doing something very unnatural for myself: \"throwing the first one away.\" Going back and rewriting an aspect of a working program just to improve one property of the _code_ rather than the behavior: eliminating all derived data structures and re-deriving everything all the time in a performant way.\n\nThe result is a simpler API that seems applicable to pixel-based editors that use proportional fonts. Basically the problem is: as you do line-wrapping on a screen, how do you deal with interactive operations like clicking at a pixel coordinate or pressing the down arrow (which might result in a scroll). These primitives seem to make the implementation fairly self-evident: <https:\/\/git.sr.ht\/~akkartik\/lines2.love\/tree\/main\/item\/move.lua#L11-28|https:\/\/git.sr.ht\/~akkartik\/lines2.love\/tree\/main\/item\/move.lua#L11-28>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1721674673.632369",
        "reply_count": 9,
        "reply_users_count": 5,
        "latest_reply": "1725431176.793149",
        "reply_users": [
            "UCUSW7WVD",
            "UC2A2ARPT",
            "UJBAJNFLK",
            "UBN9AFS0N",
            "UGWUJUZHT"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1725335659.871449"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1725342314.166969"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1725344767.707229"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1725345407.757489"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1725349222.814729"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1725357203.250829"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1725359467.553559"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1725373126.089599"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1725431176.793149"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tRfk9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For the past month I've been doing something very unnatural for myself: \"throwing the first one away.\" Going back and rewriting an aspect of a working program just to improve one property of the "
                            },
                            {
                                "type": "text",
                                "text": "code",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " rather than the behavior: eliminating all derived data structures and re-deriving everything all the time in a performant way.\n\nThe result is a simpler API that seems applicable to pixel-based editors that use proportional fonts. Basically the problem is: as you do line-wrapping on a screen, how do you deal with interactive operations like clicking at a pixel coordinate or pressing the down arrow (which might result in a scroll). These primitives seem to make the implementation fairly self-evident: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/git.sr.ht\/~akkartik\/lines2.love\/tree\/main\/item\/move.lua#L11-28",
                                "text": "https:\/\/git.sr.ht\/~akkartik\/lines2.love\/tree\/main\/item\/move.lua#L11-28"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U013ZLJARC7",
                    "U023V63MF6V",
                    "UJBAJNFLK"
                ],
                "count": 4
            }
        ]
    }
]