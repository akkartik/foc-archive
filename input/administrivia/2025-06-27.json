[
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1751050991.635639",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1751051031.000000"
        },
        "client_msg_id": "adc80389-7ad4-4c5b-827a-7f29adaa4fe2",
        "text": "meta thought on <https:\/\/futureofcoding.slack.com\/archives\/C01932BJGE8\/p1751025396555809?thread_ts=1751025396.555809&cid=C01932BJGE8|this current thread> in <#C01932BJGE8|present-company>: It belongs in <#C5T9GPWFL|thinking-together>, to my mind! I think there was one other post like this in recent months. And both are by long-time members. So I wonder if maybe this distinction is still hard to follow. \n\nAlso, now that we don't have \"future\" in our name, \"present\" feels less salient. Until now I thought of it as, \"anything not trying to think about the blue-sky future belongs in the long present.\" But now that contrast may be less accessible to newcomers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751050991.635639",
        "reply_count": 6,
        "reply_users_count": 4,
        "latest_reply": "1751296709.903579",
        "reply_users": [
            "UJBAJNFLK",
            "U06NSFX5119",
            "U089J8FNGB1",
            "UCUSW7WVD"
        ],
        "replies": [
            {
                "user": "UJBAJNFLK",
                "ts": "1751096637.957809"
            },
            {
                "user": "U06NSFX5119",
                "ts": "1751182108.977979"
            },
            {
                "user": "U089J8FNGB1",
                "ts": "1751288715.065469"
            },
            {
                "user": "U089J8FNGB1",
                "ts": "1751288748.184199"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1751293240.471289"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1751296709.903579"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C01932BJGE8\/p1751025396555809?thread_ts=1751025396.555809&amp;cid=C01932BJGE8",
                "ts": "1751025396.555809",
                "author_id": "U02E4DAQGSZ",
                "channel_id": "C01932BJGE8",
                "channel_team": "T5TCAFTA9",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T5TCAFTA9",
                        "channel": "C01932BJGE8",
                        "ts": "1751025396.555809",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "BrCxM",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "Thinking about "
                                                },
                                                {
                                                    "type": "link",
                                                    "url": "https:\/\/bsky.app\/profile\/interjectedfuture.com\/post\/3lsjxqmfoxa2l"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": " implying node-and-wires are mutally exclusive with ASCII code and also thinking about "
                                                },
                                                {
                                                    "type": "user",
                                                    "user_id": "UGWUJUZHT"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": " dislike of functions. Also connecting it with my own ideas that a good notebook should offer \"multiple views of the same thing\".\n\nMade me think: why is everyone stuck on the idea that there is one one possible representation? And I think "
                                                },
                                                {
                                                    "type": "user",
                                                    "user_id": "UGWUJUZHT"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": " has a point, it may be the function calling paradigm. In my work, I don't have this problem because cells subscribe to other cells in dataflow, so multiple consumers of a computation is not a problem. cells "
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "pull",
                                                    "style": {
                                                        "italic": true
                                                    }
                                                },
                                                {
                                                    "type": "text",
                                                    "text": " their dependancies. Whereas function calling is \"pushing\" values. The problem with pushing is you can only have one target. But with pulling you can have multiple consumers from one source. functions is building out of 1-to-1 links, but pulling is 1-to-many inherently.\n\nI don't think that argument is water tight coz, of course, its all Turing computable, but I do think there is something in there that function calling ends up naturally reducing computational reusability so that trying to do pub-sub communication patterns ends up way harder and buggier than it should so you shouldn't bother unless absolutely necessary. But if you build out of pub-sub exclusively then you don't see multiple views of the same thing as an unusual concept."
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C01932BJGE8\/p1751025396555809?thread_ts=1751025396.555809&amp;cid=C01932BJGE8",
                "fallback": "[June 27th, 2025 4:56 AM] tom.larkworthy: Thinking about <https:\/\/bsky.app\/profile\/interjectedfuture.com\/post\/3lsjxqmfoxa2l> implying node-and-wires are mutally exclusive with ASCII code and also thinking about <@UGWUJUZHT> dislike of functions. Also connecting it with my own ideas that a good notebook should offer \"multiple views of the same thing\".\n\nMade me think: why is everyone stuck on the idea that there is one one possible representation? And I think <@UGWUJUZHT> has a point, it may be the function calling paradigm. In my work, I don't have this problem because cells subscribe to other cells in dataflow, so multiple consumers of a computation is not a problem. cells _pull_ their dependancies. Whereas function calling is \"pushing\" values. The problem with pushing is you can only have one target. But with pulling you can have multiple consumers from one source. functions is building out of 1-to-1 links, but pulling is 1-to-many inherently.\n\nI don't think that argument is water tight coz, of course, its all Turing computable, but I do think there is something in there that function calling ends up naturally reducing computational reusability so that trying to do pub-sub communication patterns ends up way harder and buggier than it should so you shouldn't bother unless absolutely necessary. But if you build out of pub-sub exclusively then you don't see multiple views of the same thing as an unusual concept.",
                "text": "Thinking about <https:\/\/bsky.app\/profile\/interjectedfuture.com\/post\/3lsjxqmfoxa2l> implying node-and-wires are mutally exclusive with ASCII code and also thinking about <@UGWUJUZHT> dislike of functions. Also connecting it with my own ideas that a good notebook should offer \"multiple views of the same thing\".\n\nMade me think: why is everyone stuck on the idea that there is one one possible representation? And I think <@UGWUJUZHT> has a point, it may be the function calling paradigm. In my work, I don't have this problem because cells subscribe to other cells in dataflow, so multiple consumers of a computation is not a problem. cells _pull_ their dependancies. Whereas function calling is \"pushing\" values. The problem with pushing is you can only have one target. But with pulling you can have multiple consumers from one source. functions is building out of 1-to-1 links, but pulling is 1-to-many inherently.\n\nI don't think that argument is water tight coz, of course, its all Turing computable, but I do think there is something in there that function calling ends up naturally reducing computational reusability so that trying to do pub-sub communication patterns ends up way harder and buggier than it should so you shouldn't bother unless absolutely necessary. But if you build out of pub-sub exclusively then you don't see multiple views of the same thing as an unusual concept.",
                "author_name": "Tom Larkworthy",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/U02E4DAQGSZ",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_48.gif",
                "author_subname": "Tom Larkworthy",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M7tp5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "meta thought on "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C01932BJGE8\/p1751025396555809?thread_ts=1751025396.555809&cid=C01932BJGE8",
                                "text": "this current thread"
                            },
                            {
                                "type": "text",
                                "text": " in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C01932BJGE8"
                            },
                            {
                                "type": "text",
                                "text": ": It belongs in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": ", to my mind! I think there was one other post like this in recent months. And both are by long-time members. So I wonder if maybe this distinction is still hard to follow. \n\nAlso, now that we don't have \"future\" in our name, \"present\" feels less salient. Until now I thought of it as, \"anything not trying to think about the blue-sky future belongs in the long present.\" But now that contrast may be less accessible to newcomers."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]