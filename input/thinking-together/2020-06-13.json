[
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1592036049.245900",
        "client_msg_id": "7755051F-91CB-4398-B8DC-22703FA6C716",
        "text": "Interesting. Do you regard Deno as a FoC type project? I seem to but wonder if I am missing why we don’t cover it more here ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590787615.273300",
        "parent_user_id": "UFLN9JFRT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jRq9L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting. Do you regard Deno as a FoC type project? I seem to but wonder if I am missing why we don’t cover it more here "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1592041627.246200",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1592041637.000000"
        },
        "client_msg_id": "d3ace27c-c141-4967-9696-cdd5683d9d4a",
        "text": "this is quite new: <https:\/\/github.com\/timberio\/vector\/pull\/2341>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iV+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this is quite new: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/timberio\/vector\/pull\/2341"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1592041668.246500",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1592041684.000000"
        },
        "client_msg_id": "c7e8cbfd-36ee-433b-81ae-cc73f43207b5",
        "text": "<https:\/\/github.com\/Hoverbear\/vector\/blob\/41d90b7df1995429d179c89a4f1c176d72a263f1\/rfcs\/2020-04-15-wasm-plugins.md>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LWY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/Hoverbear\/vector\/blob\/41d90b7df1995429d179c89a4f1c176d72a263f1\/rfcs\/2020-04-15-wasm-plugins.md"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1592041679.246800",
        "client_msg_id": "6a351f20-364e-44ef-a522-78cd94934939",
        "text": "have you seen wasmer? <https:\/\/wasmer.io\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "attachments": [
            {
                "title": "Wasmer - The Universal WebAssembly Runtime",
                "title_link": "https:\/\/wasmer.io\/",
                "text": "Wasmer - The Universal WebAssembly Runtime",
                "fallback": "Wasmer - The Universal WebAssembly Runtime",
                "image_url": "https:\/\/wasmer.io\/static\/icons\/social-icon.png",
                "from_url": "https:\/\/wasmer.io\/",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 17230,
                "service_icon": "https:\/\/wasmer.io\/static\/icons\/apple-icon-57x57.png",
                "service_name": "wasmer.io",
                "id": 1,
                "original_url": "https:\/\/wasmer.io\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/Bx+W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "have you seen wasmer? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/wasmer.io\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1592047355.248300",
        "client_msg_id": "D8FE8A69-2757-4FAF-94A2-0AC734388421",
        "text": "<@UCGAK10LS> Well possible that it’s an old-fashioned term. I learned about this 25 years ago.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591869278.153800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HgA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " Well possible that it’s an old-fashioned term. I learned about this 25 years ago."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1592051627.250000",
        "edited": {
            "user": "UPVBV34EL",
            "ts": "1592169103.000000"
        },
        "client_msg_id": "4a48135a-6913-40e3-8dc5-29bb693ae4b7",
        "text": "Hey FoC community, here we are back with the first notebook in a series which shows how to use our `codeBERT` model for Python.\n\n<https:\/\/colab.research.google.com\/drive\/17QNGQOsQOUBPlblqc7maiOKPbT4hDZfv?usp=sharing>\n\nComments and suggestions welcome :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cSA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey FoC community, here we are back with the first notebook in a series which shows how to use our "
                            },
                            {
                                "type": "text",
                                "text": "codeBERT",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " model for Python.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/colab.research.google.com\/drive\/17QNGQOsQOUBPlblqc7maiOKPbT4hDZfv?usp=sharing"
                            },
                            {
                                "type": "text",
                                "text": "\n\nComments and suggestions welcome "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1592051828.250200",
        "client_msg_id": "5b19f306-b553-42b0-a8ae-67a43c3f601a",
        "text": "I want to create a web assembly compiler and runtime for my language (so I can embed an entire IDE in a web page). Last time I looked, it seemed that WASM was a half-completed work in progress, and the tooling wasn't complete. So the longer you wait, the easier it will be. I figured the sweet spot will be 2021 for my purposes, otherwise I'd be working around limitations and constantly running to catch up. WASM seems to be progressing quickly, so for projects with fewer requirements than mine, it may be ready right now. Issues I noticed, last time I checked, included lack of support for C++ exceptions, threads, vectorized instructions, GPU access, and difficulty of using the C++ build tools. Rust appeared to have the best tooling.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NXD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I want to create a web assembly compiler and runtime for my language (so I can embed an entire IDE in a web page). Last time I looked, it seemed that WASM was a half-completed work in progress, and the tooling wasn't complete. So the longer you wait, the easier it will be. I figured the sweet spot will be 2021 for my purposes, otherwise I'd be working around limitations and constantly running to catch up. WASM seems to be progressing quickly, so for projects with fewer requirements than mine, it may be ready right now. Issues I noticed, last time I checked, included lack of support for C++ exceptions, threads, vectorized instructions, GPU access, and difficulty of using the C++ build tools. Rust appeared to have the best tooling."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1592052167.250400",
        "edited": {
            "user": "UPVBV34EL",
            "ts": "1592052444.000000"
        },
        "client_msg_id": "8b8765f1-1474-4157-91c9-c4c9a6944802",
        "text": "Hello <@UFEQUBNNT> Thanks for the comments. At the moment this model is a pure Masked Language Model (a version of RoBERTa) which has 10 layers, and 12 attention head per layer.(With a max position embedding of 1024) And it was trained on about 6M lines of code. So this is just a start. Context Awareness in code means something slightly different than what it means for Natural Language. We have big plans for future. We plan to try out mix modal models (one where we mix graph based and text based information together) to bring more code centric awareness in it. Also, we plan to run some kind of Rule Engine on top of the prediction to cut some noise (Here we can hook into the actual Python runtime\/interpreter to gain more insights). Also we are planning to train longformer or refomrer type model to calculate local attention based on a large body of code.\n\nAt the moment the `&lt;mask&gt;` token is only for a single token. However, we have plans to fine-tune this model for many downstream tasks.\n\nWe started a series of notebooks showing different applications of this model and will release more powerful and hybird models in future. You can checkout our first notebook (Colab) here - <https:\/\/colab.research.google.com\/drive\/17QNGQOsQOUBPlblqc7maiOKPbT4hDZfv?usp=sharing>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591023770.311300",
        "parent_user_id": "UPU0YJ1CM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KFP3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello "
                            },
                            {
                                "type": "user",
                                "user_id": "UFEQUBNNT"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for the comments. At the moment this model is a pure Masked Language Model (a version of RoBERTa) which has 10 layers, and 12 attention head per layer.(With a max position embedding of 1024) And it was trained on about 6M lines of code. So this is just a start. Context Awareness in code means something slightly different than what it means for Natural Language. We have big plans for future. We plan to try out mix modal models (one where we mix graph based and text based information together) to bring more code centric awareness in it. Also, we plan to run some kind of Rule Engine on top of the prediction to cut some noise (Here we can hook into the actual Python runtime\/interpreter to gain more insights). Also we are planning to train longformer or refomrer type model to calculate local attention based on a large body of code.\n\nAt the moment the "
                            },
                            {
                                "type": "text",
                                "text": "<mask>",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " token is only for a single token. However, we have plans to fine-tune this model for many downstream tasks.\n\nWe started a series of notebooks showing different applications of this model and will release more powerful and hybird models in future. You can checkout our first notebook (Colab) here - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/colab.research.google.com\/drive\/17QNGQOsQOUBPlblqc7maiOKPbT4hDZfv?usp=sharing"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "star-struck",
                "users": [
                    "UPU0YJ1CM"
                ],
                "count": 1
            },
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1592052924.251600",
        "client_msg_id": "DF5EECBB-BCF3-4A8A-8FFE-0747A9DDF3AC",
        "text": "<https:\/\/youtu.be\/Ox5P7QyL774|https:\/\/youtu.be\/Ox5P7QyL774> i will never get tired of posting the self language video in this slack. no one can stop me",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591889749.164700",
        "parent_user_id": "UK500AGQ4",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Self: The Movie;",
                "title_link": "https:\/\/youtu.be\/Ox5P7QyL774",
                "author_name": "Jecel Assumpção Jr",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCrGUwjwhuvI_xpRMkR1zw8Q",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/Ox5P7QyL774\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Self: The Movie;",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/Ox5P7QyL774?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/youtu.be\/Ox5P7QyL774",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/Ox5P7QyL774"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NlM+k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/Ox5P7QyL774",
                                "text": "https:\/\/youtu.be\/Ox5P7QyL774"
                            },
                            {
                                "type": "text",
                                "text": " i will never get tired of posting the self language video in this slack. no one can stop me"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1592084415.253900",
        "client_msg_id": "BC8B2925-62E6-4CD6-BC7A-DB2552529658",
        "text": "It looks like the Vector’s WASM support is still only a proposal(?), and they don’t intend to support my primary OS :-\/",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qDfxB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It looks like the Vector’s WASM support is still only a proposal(?), and they don’t intend to support my primary OS :-\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1592084471.254500",
        "client_msg_id": "1E0DF444-D420-4777-BD56-60247E9E445B",
        "text": "Wasmer looks very promising! Thank you!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7DvK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wasmer looks very promising! Thank you!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1592084756.257600",
        "client_msg_id": "DCEDCEC6-6108-4AED-AE6D-52D63167D1D1",
        "text": "<@UJN1TAYEQ> If you’re targeting browsers, Rust and Go have decent preliminary support. I’m doing the opposite, wanting to run WebAssembly outside the browser. It looks like Wasmer does that. I’ll dig deeper when I’m at my laptop.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QWI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " If you’re targeting browsers, Rust and Go have decent preliminary support. I’m doing the opposite, wanting to run WebAssembly outside the browser. It looks like Wasmer does that. I’ll dig deeper when I’m at my laptop."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1592087323.257800",
        "client_msg_id": "e0109108-368b-4841-98ea-d898b8b901a8",
        "text": "<@UFEQUBNNT> Yeah, I know about Rust. But I'm using C++, and I have large C++ library dependencies. I would only expect Rust to be better if I am compiling pure Rust code. Which isn't an option: those C++ libraries are written by specialists, and some have no Rust equivalents. Compiling a mix of C++ and Rust to WASM is not going to be easier than compiling pure C++ to WASM, I'm pretty sure. It would be an easier choice if the Rust library ecosystem were more mature.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LxT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFEQUBNNT"
                            },
                            {
                                "type": "text",
                                "text": " Yeah, I know about Rust. But I'm using C++, and I have large C++ library dependencies. I would only expect Rust to be better if I am compiling pure Rust code. Which isn't an option: those C++ libraries are written by specialists, and some have no Rust equivalents. Compiling a mix of C++ and Rust to WASM is not going to be easier than compiling pure C++ to WASM, I'm pretty sure. It would be an easier choice if the Rust library ecosystem were more mature."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U014Y19RYA3",
        "type": "message",
        "ts": "1592094120.258600",
        "client_msg_id": "18cb8e9e-87aa-4006-a966-d4f867ca8db5",
        "text": "<@UFEQUBNNT> if you want to embed and are interested in the security properties of WASM especially, I *highly* recommend Lucet",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3ab4d3a66e4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ab4d3a66e470ce10eb7ec812fab3c46.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Stephen",
            "real_name": "Stephen Paul Weber",
            "display_name": "singpolyma",
            "team": "T5TCAFTA9",
            "name": "singpolyma",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y3XCm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFEQUBNNT"
                            },
                            {
                                "type": "text",
                                "text": " if you want to embed and are interested in the security properties of WASM especially, I "
                            },
                            {
                                "type": "text",
                                "text": "highly",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " recommend Lucet"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014Y19RYA3",
        "type": "message",
        "ts": "1592094179.258800",
        "edited": {
            "user": "U014Y19RYA3",
            "ts": "1592094363.000000"
        },
        "client_msg_id": "63747d64-f8bd-4a21-b9fa-2d11a5e1c1b5",
        "text": "<@UJN1TAYEQ> If you have all the source code and it's all in C++ (no inline assembly, etc) then emscripten should be able to handle compiling to WASM+JS shim for web or nodejs or deno",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3ab4d3a66e4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ab4d3a66e470ce10eb7ec812fab3c46.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Stephen",
            "real_name": "Stephen Paul Weber",
            "display_name": "singpolyma",
            "team": "T5TCAFTA9",
            "name": "singpolyma",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z+Kh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " If you have all the source code and it's all in C++ (no inline assembly, etc) then emscripten should be able to handle compiling to WASM+JS shim for web or nodejs or deno"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1592094508.261000",
        "client_msg_id": "E1A1CCC5-A2AB-4A75-AF55-A95612B469E3",
        "text": "I wish I could, but that’s what Vector uses and that RFC says it’s Linux-only. I honestly don’t care if it’s built out of Fisher Price blocks if it works, I’m just prototyping. :laughing: Have you used Lucet?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KJn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wish I could, but that’s what Vector uses and that RFC says it’s Linux-only. I honestly don’t care if it’s built out of Fisher Price blocks if it works, I’m just prototyping. "
                            },
                            {
                                "type": "emoji",
                                "name": "laughing",
                                "unicode": "1f606"
                            },
                            {
                                "type": "text",
                                "text": " Have you used Lucet?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014Y19RYA3",
        "type": "message",
        "ts": "1592094650.261200",
        "client_msg_id": "6fb0bb27-62bb-488b-b38e-819de58d0cc0",
        "text": "Yes. Lucet is great.  It runs on MacOS also, though their MacOS support is beta\/best effort so not for production use",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3ab4d3a66e4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ab4d3a66e470ce10eb7ec812fab3c46.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Stephen",
            "real_name": "Stephen Paul Weber",
            "display_name": "singpolyma",
            "team": "T5TCAFTA9",
            "name": "singpolyma",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IPo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes. Lucet is great.  It runs on MacOS also, though their MacOS support is beta\/best effort so not for production use"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1592094744.261800",
        "client_msg_id": "0A17EA7D-FFE8-47AB-AE7A-ECA877F2CCAA",
        "text": "Interesting! Worth a look for me, then, thanks!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+j4I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting! Worth a look for me, then, thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014Y19RYA3",
        "type": "message",
        "ts": "1592094758.262000",
        "client_msg_id": "0915fca9-1f35-495d-afcb-f42e0f984dd4",
        "text": "I was on the team building a Lucet-based WASM serverless system at $DAYJOB",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3ab4d3a66e4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ab4d3a66e470ce10eb7ec812fab3c46.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Stephen",
            "real_name": "Stephen Paul Weber",
            "display_name": "singpolyma",
            "team": "T5TCAFTA9",
            "name": "singpolyma",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wlk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was on the team building a Lucet-based WASM serverless system at $DAYJOB"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014Y19RYA3",
        "type": "message",
        "ts": "1592094774.262200",
        "client_msg_id": "483f1f3e-1999-4e84-b56a-00fefba1d855",
        "text": "it's not live yet, but very promising generally, especially if security features interest you",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3ab4d3a66e4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ab4d3a66e470ce10eb7ec812fab3c46.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Stephen",
            "real_name": "Stephen Paul Weber",
            "display_name": "singpolyma",
            "team": "T5TCAFTA9",
            "name": "singpolyma",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ne+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it's not live yet, but very promising generally, especially if security features interest you"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1592095420.262600",
        "client_msg_id": "61344B77-DEEB-4831-A36F-63BABD80A2A9",
        "text": "They do long term, if I get there. :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "emY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "They do long term, if I get there. :)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1592108457.262800",
        "client_msg_id": "4c64a82e-5404-4bf0-b992-3e56ee2046eb",
        "text": "web assembly is intentionally brain damaged. At present, it is limited to running in a separate thread, and cannot access the DOM directly.  All of us JS-haters were hoping for a clean virtual machine with direct API access to the BIOS which would be the DOM. If they had done that it would have created a virtual OS that would have permitted all the languages to easily move to that new universal OS. Instead, JS still rules, and WebAsm is for async heavy computation. Sure you can implement some complex back-and-forth system, but that defeats the whole purpose of getting closer to the metal. If Google &amp; co. let other languages in, it could well lessen their control of the ecosystem. At present the V8 engine reigns supreme; it is an exceptional performing piece of code, but also super complex.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1Q4+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "web assembly is intentionally brain damaged. At present, it is limited to running in a separate thread, and cannot access the DOM directly.  All of us JS-haters were hoping for a clean virtual machine with direct API access to the BIOS which would be the DOM. If they had done that it would have created a virtual OS that would have permitted all the languages to easily move to that new universal OS. Instead, JS still rules, and WebAsm is for async heavy computation. Sure you can implement some complex back-and-forth system, but that defeats the whole purpose of getting closer to the metal. If Google & co. let other languages in, it could well lessen their control of the ecosystem. At present the V8 engine reigns supreme; it is an exceptional performing piece of code, but also super complex."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1592108692.263900",
        "client_msg_id": "1FCF9569-63DD-48DE-B8C1-D5B3AA53461C",
        "text": "I write Go that accesses the DOM all the time and haven’t noticed any indirection. What do you mean?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+fOK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I write Go that accesses the DOM all the time and haven’t noticed any indirection. What do you mean?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]