[
    {
        "user": "U01003H81UM",
        "type": "message",
        "ts": "1584171672.101400",
        "edited": {
            "user": "U01003H81UM",
            "ts": "1584171928.000000"
        },
        "text": "Hey everyone,\nI'm a gamedev at an indie studio and before my bg was in real time raytracing research. I stumbled on this community while researching the current state of the art of node editors for implementing my Nth node\/visual editor.  My holy grail is trifecta of performance by default, rich visualization\/debugging, and adding a procedural\/scripting layer to tools for artists. Currently to me, the solution to those goals converged to imperative  programming with a functional core, relational code architectures (e.g. in games ECS over OOP). I just discovered \"Language oriented design\/projectional editors\" which seem to be the final missing piece so I'm excited to dive more",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bf5b5671ecea",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-03-14\/1000271226192_bf5b5671eceac85250cf_72.png",
            "first_name": "",
            "real_name": "ikrima",
            "display_name": "ikrima",
            "team": "T5TCAFTA9",
            "name": "e228",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l79OJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey everyone,\nI'm a gamedev at an indie studio and before my bg was in real time raytracing research. I stumbled on this community while researching the current state of the art of node editors for implementing my Nth node\/visual editor.  My holy grail is trifecta of performance by default, rich visualization\/debugging, and adding a procedural\/scripting layer to tools for artists. Currently to me, the solution to those goals converged to imperative  programming with a functional core, relational code architectures (e.g. in games ECS over OOP). I just discovered \"Language oriented design\/projectional editors\" which seem to be the final missing piece so I'm excited to dive more"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "UC2A2ARPT",
                    "UUVSSA60K",
                    "U85HCL7JP",
                    "UBSMEUXAA",
                    "UAHHWT22U",
                    "U8A5MS6R1",
                    "UV1CVSXGC",
                    "UA14TGLTC",
                    "UJ6LDMMN0",
                    "UJBAJNFLK",
                    "UML4ZEKDK",
                    "UC21F8Q48",
                    "UD6EXQVM0"
                ],
                "count": 13
            }
        ]
    },
    {
        "user": "U01003H81UM",
        "type": "message",
        "ts": "1584173612.101600",
        "text": "That's amazing! This is right along what I'm starting to work on so that I can embed it inside DCC apps\/unreal. I also want to be able to go 1-1 between textual and node graph based",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bf5b5671ecea",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-03-14\/1000271226192_bf5b5671eceac85250cf_72.png",
            "first_name": "",
            "real_name": "ikrima",
            "display_name": "ikrima",
            "team": "T5TCAFTA9",
            "name": "e228",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583430519.048800",
        "parent_user_id": "UUQ2EQW21",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fao+d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's amazing! This is right along what I'm starting to work on so that I can embed it inside DCC apps\/unreal. I also want to be able to go 1-1 between textual and node graph based"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01003H81UM",
        "type": "message",
        "ts": "1584173665.101800",
        "text": "btw, NSight graphics is :ok_hand::ok_hand:, night and day from the old version that was integrated into vs-studio",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bf5b5671ecea",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-03-14\/1000271226192_bf5b5671eceac85250cf_72.png",
            "first_name": "",
            "real_name": "ikrima",
            "display_name": "ikrima",
            "team": "T5TCAFTA9",
            "name": "e228",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583430519.048800",
        "parent_user_id": "UUQ2EQW21",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S1qP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "btw, NSight graphics is "
                            },
                            {
                                "type": "emoji",
                                "name": "ok_hand",
                                "unicode": "1f44c"
                            },
                            {
                                "type": "emoji",
                                "name": "ok_hand",
                                "unicode": "1f44c"
                            },
                            {
                                "type": "text",
                                "text": ", night and day from the old version that was integrated into vs-studio"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1584177502.105400",
        "client_msg_id": "309241F9-7985-4C6A-9F31-189F1207160D",
        "text": "Thanks <@U01003H81UM> - yes, embedding it has been something I’ve thought about too - like making it a VST plug-in and embedding it in Bitwig as a programmable music\/visual interface....  Text-Node based is certainly a goal for me when designing synths. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583430519.048800",
        "parent_user_id": "UUQ2EQW21",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ocq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U01003H81UM"
                            },
                            {
                                "type": "text",
                                "text": " - yes, embedding it has been something I’ve thought about too - like making it a VST plug-in and embedding it in Bitwig as a programmable music\/visual interface....  Text-Node based is certainly a goal for me when designing synths. "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0H4170F",
        "type": "message",
        "ts": "1584206245.106200",
        "client_msg_id": "52ab264f-9a87-4ba1-b2ce-d9084dd429ae",
        "text": "I experimented with this in ableton live a while back… although eventually decided that just having a separate editor that communicated through sockets made more sense for what I was interested in. <https:\/\/vimeo.com\/162157104>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2cfca823894",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/72cfca823894034e7bdbc31623c007d3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Charlie Roberts",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "charlie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1583430519.048800",
        "parent_user_id": "UUQ2EQW21",
        "attachments": [
            {
                "service_name": "Vimeo",
                "service_url": "https:\/\/vimeo.com\/",
                "title": "Gibberwocky (Gibber + Max4Live  Integration)",
                "title_link": "https:\/\/vimeo.com\/162157104",
                "author_name": "charlie roberts",
                "author_link": "https:\/\/vimeo.com\/thecharlie",
                "thumb_url": "https:\/\/i.vimeocdn.com\/video\/564556294_295x166.jpg",
                "thumb_width": 295,
                "thumb_height": 166,
                "text": "This video is a technical demo of some of the features of Gibberwocky, a Max\/MSP external that enables live coding and algorithmic composition using JavaScript in Ableton Live. It was developed by myself and Graham Wakefield, and features MIDI sequencing and Gen~ integration. You can download the repo at: \n\nThis is still very much alpha. But it's coming along...",
                "fallback": "Vimeo Video: Gibberwocky (Gibber + Max4Live  Integration)",
                "video_html": "<iframe src=\"https:\/\/player.vimeo.com\/video\/162157104?autoplay=1&amp;app_id=122963\" width=\"400\" height=\"225\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen title=\"Gibberwocky (Gibber + Max4Live  Integration)\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/vimeo.com\/162157104",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/vimeo.png",
                "id": 1,
                "original_url": "https:\/\/vimeo.com\/162157104"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F1+\/m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I experimented with this in ableton live a while back… although eventually decided that just having a separate editor that communicated through sockets made more sense for what I was interested in. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/vimeo.com\/162157104"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]