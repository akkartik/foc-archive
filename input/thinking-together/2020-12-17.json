[
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1608218332.345700",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1608218342.000000"
        },
        "client_msg_id": "986D915F-5C5B-4F7F-A386-6AA07838E7F4",
        "text": "i think collections and branching are the two hardest things for a stack language to pull off ergonomically. \n\nhere’s how factor handles them: <https:\/\/docs.factorcode.org\/content\/article-cookbook-combinators.html|https:\/\/docs.factorcode.org\/content\/article-cookbook-combinators.html> . i like the approach of using quotations for control flow, although it could get hairy since your quotations would also have variable names in them. \n\ni may have some harebrained ideas incoming on a couple of these fronts, although they may be nonstandard (example preview: you should have a stack language, an array language, and a hash\/record\/dictionary language, and their editors should just compose\/nest )",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607887127.284300",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "11Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i think collections and branching are the two hardest things for a stack language to pull off ergonomically. \n\nhere’s how factor handles them: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.factorcode.org\/content\/article-cookbook-combinators.html",
                                "text": "https:\/\/docs.factorcode.org\/content\/article-cookbook-combinators.html"
                            },
                            {
                                "type": "text",
                                "text": " . i like the approach of using quotations for control flow, although it could get hairy since your quotations would also have variable names in them. \n\ni may have some harebrained ideas incoming on a couple of these fronts, although they may be nonstandard (example preview: you should have a stack language, an array language, and a hash\/record\/dictionary language, and their editors should just compose\/nest )"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1608219697.346000",
        "client_msg_id": "89908179-11b3-49ca-928e-86b60b84919a",
        "text": "I've been thinking similarly. Though I'm not sure what an array language with indexing looks like.\n\nI should have mentioned quotations. I'm resistant to them because they occupy space on the stack without advancing the computation. However, Daniel Garcia did point out that the effect of `if` could be expanded like a function call. So it's worth trying.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607887127.284300",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l7yPZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been thinking similarly. Though I'm not sure what an array language with indexing looks like.\n\nI should have mentioned quotations. I'm resistant to them because they occupy space on the stack without advancing the computation. However, Daniel Garcia did point out that the effect of `if` could be expanded like a function call. So it's worth trying."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]