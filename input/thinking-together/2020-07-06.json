[
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1594020264.370000",
        "client_msg_id": "d8cd2bfa-bfea-4c12-8e16-1493ec4f1e3b",
        "text": "I interpreted the walled garden as FB Messenger, WhatsApp, WeChat, iMessage, Line, Kik, etc do not work with each other. I can't be in WhatsApp and message someone using WeChat.\n\nSame with Zoom, Facetime, Meet, Skype, etc... I can't video conference with someone from Zoom if they're running Facetime. They have to download Zoom.\n\nI don't know if re-mixing and open standards are important here or not. Except for iMessage (haha) all the others work everywhere and are free so if someone says \"contact me on X\" I just install X. I think it's likely to get worse. If you believe in the acceleration of change then before you can standardize something it will become irrelevant? Like there was a SMS standard. Who still uses it (I'm sure India or some place like that still uses it). My point is a 140 character standard has mostly been supplanted. Next we need images in our messages. Then we need video clips, then live voice, then live video, tomorrow we'll require shared AR or shared VR or something.\n\nOn the other hand, the Web is pretty good at remixing. Iframes and other APIs let me mix stuff from all over.\n\n<https:\/\/driveandlisten.herokuapp.com\/>\n\nYet another reason I'm glad for web tech and often anti-native apps :stuck_out_tongue:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593692019.136100",
        "parent_user_id": "U5STGTB3J",
        "attachments": [
            {
                "title": "Drive &amp; Listen",
                "title_link": "https:\/\/driveandlisten.herokuapp.com\/",
                "text": "Drive around cities while listening to their local radios",
                "fallback": "Drive &amp; Listen",
                "thumb_url": "https:\/\/ph-files.imgix.net\/76a102e0-4873-470d-b8ce-2e4b8addf160?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=304&h=190&fit=max&dpr=2",
                "from_url": "https:\/\/driveandlisten.herokuapp.com\/",
                "thumb_width": 608,
                "thumb_height": 380,
                "service_icon": "https:\/\/driveandlisten.herokuapp.com\/favicon.ico",
                "service_name": "driveandlisten.herokuapp.com",
                "id": 1,
                "original_url": "https:\/\/driveandlisten.herokuapp.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yQX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I interpreted the walled garden as FB Messenger, WhatsApp, WeChat, iMessage, Line, Kik, etc do not work with each other. I can't be in WhatsApp and message someone using WeChat.\n\nSame with Zoom, Facetime, Meet, Skype, etc... I can't video conference with someone from Zoom if they're running Facetime. They have to download Zoom.\n\nI don't know if re-mixing and open standards are important here or not. Except for iMessage (haha) all the others work everywhere and are free so if someone says \"contact me on X\" I just install X. I think it's likely to get worse. If you believe in the acceleration of change then before you can standardize something it will become irrelevant? Like there was a SMS standard. Who still uses it (I'm sure India or some place like that still uses it). My point is a 140 character standard has mostly been supplanted. Next we need images in our messages. Then we need video clips, then live voice, then live video, tomorrow we'll require shared AR or shared VR or something.\n\nOn the other hand, the Web is pretty good at remixing. Iframes and other APIs let me mix stuff from all over.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/driveandlisten.herokuapp.com\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nYet another reason I'm glad for web tech and often anti-native apps "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFLN9JFRT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1594021452.370300",
        "client_msg_id": "70cc944e-820d-4f87-8fb0-0ce4cae87d0e",
        "text": "I have been playing with it for a while, see <https:\/\/github.com\/khinsen\/ipfs-pharo> and <https:\/\/github.com\/activepapers\/activepapers-pharo> (though neither project is likely to be of interest to you unless you care about the application domains they address). There are lots of good ideas in there, and I also like its visual style. Be warned though that it says \"alpha release\" for a reason (but stability has improved enormously in recent months).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593677610.126000",
        "parent_user_id": "UJFN50C00",
        "attachments": [
            {
                "fallback": "activepapers\/activepapers-pharo",
                "title": "activepapers\/activepapers-pharo",
                "footer": "<https:\/\/github.com\/activepapers\/activepapers-pharo|activepapers\/activepapers-pharo>",
                "id": 1,
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "ts": 1554980104,
                "color": "24292f",
                "fields": [
                    {
                        "title": "Website",
                        "value": "<http:\/\/www.activepapers.org\/>",
                        "short": true
                    },
                    {
                        "title": "Stars",
                        "value": "8",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text",
                    "fields"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https:\/\/github.com\/activepapers\/activepapers-pharo",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P1Dcd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have been playing with it for a while, see "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/khinsen\/ipfs-pharo"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/activepapers\/activepapers-pharo"
                            },
                            {
                                "type": "text",
                                "text": " (though neither project is likely to be of interest to you unless you care about the application domains they address). There are lots of good ideas in there, and I also like its visual style. Be warned though that it says \"alpha release\" for a reason (but stability has improved enormously in recent months)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UT60XSVCN",
        "type": "message",
        "ts": "1594026437.380600",
        "edited": {
            "user": "UT60XSVCN",
            "ts": "1594059937.000000"
        },
        "client_msg_id": "ff38095b-327d-4980-85ec-86b6f730c10e",
        "text": "<@UCUSW7WVD> This reminds me of your code organization scheme, with the feature splicing and stuff: <https:\/\/github.com\/kiselgra\/cm-fop|https:\/\/github.com\/kiselgra\/cm-fop> , though their focus is more on outputs than inputs—they ended up with this by optimizing for exploratory programming with heterogenous outputs, not readability\/understandablity. I think it goes to show how much overlap there is between those goals—maintaining understanding of a codebase is a key part of enabling exploration. \nI'd never heard of feature-oriented programming before, but it's neat",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbc3e6041047",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bc3e6041047849518d1b042f0a29d5af.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "S.M Mukarram Nainar",
            "display_name": "S.M Mukarram Nainar",
            "team": "T5TCAFTA9",
            "name": "nainars",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594026437.380600",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1594026555.380800",
        "reply_users": [
            "UT60XSVCN"
        ],
        "replies": [
            {
                "user": "UT60XSVCN",
                "ts": "1594026555.380800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "exa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " This reminds me of your code organization scheme, with the feature splicing and stuff: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/kiselgra\/cm-fop",
                                "text": "https:\/\/github.com\/kiselgra\/cm-fop"
                            },
                            {
                                "type": "text",
                                "text": " , though their focus is more on outputs than inputs—they ended up with this by optimizing for exploratory programming with heterogenous outputs, not readability\/understandablity. I think it goes to show how much overlap there is between those goals—maintaining understanding of a codebase is a key part of enabling exploration. \nI'd never heard of feature-oriented programming before, but it's neat"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UT60XSVCN",
        "type": "message",
        "ts": "1594026555.380800",
        "client_msg_id": "6fd7a34f-4777-4e37-8280-44d16615b7d1",
        "text": "Also, there's a nice paper on it: <http:\/\/dl.acm.org\/citation.cfm?id=2814220|http:\/\/dl.acm.org\/citation.cfm?id=2814220>\npaywalled, unfortunately, though",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbc3e6041047",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bc3e6041047849518d1b042f0a29d5af.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "S.M Mukarram Nainar",
            "display_name": "S.M Mukarram Nainar",
            "team": "T5TCAFTA9",
            "name": "nainars",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594026437.380600",
        "parent_user_id": "UT60XSVCN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mFd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, there's a nice paper on it: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/dl.acm.org\/citation.cfm?id=2814220",
                                "text": "http:\/\/dl.acm.org\/citation.cfm?id=2814220"
                            },
                            {
                                "type": "text",
                                "text": "\npaywalled, unfortunately, though"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "It's nice to see someone exploring this space. Has the teamed looked at `undo-tree` in emacs? It also provides, as the name suggests, a tree-structured undo model.\n\n(A-ha! Found the reference in the paper. :blush:)",
        "files": [
            {
                "id": "F016L69BJHZ",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "U013ZLJARC7",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C=E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's nice to see someone exploring this space. Has the teamed looked at "
                            },
                            {
                                "type": "text",
                                "text": "undo-tree",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in emacs? It also provides, as the name suggests, a tree-structured undo model.\n\n(A-ha! Found the reference in the paper. "
                            },
                            {
                                "type": "emoji",
                                "name": "blush",
                                "unicode": "1f60a"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1594028124.381200",
        "edited": {
            "user": "U013ZLJARC7",
            "ts": "1594028240.000000"
        },
        "thread_ts": "1594010464.369300",
        "parent_user_id": "UMWF81HTP",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UMWF81HTP"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1594037831.384900",
        "client_msg_id": "6CBF28AC-422A-47CC-AB19-BD64CE9B5AD2",
        "text": "in my normal work I don’t use Undo of work very often. It’s one of the reasons I’ve never liked source code control systems because it’s extremely rare to undo work. Understanding the implications of making changes to code it is really at the crux of the future of computing. Can you make it so that someone can easily understand the implications of what they’re about to change? This is why strong typing It’s so important because it helps the reader understand what could go in a variable. In 99% of the code each variable is going to be used a single way. Users name is never going to become his age. The name is always a string, and it’s only point is to mostly disambiguate a human being from another. One of the problems with these editor Features is that it is not recording why you made the change, so you have this branching tree but you don’t know why you did what you did, so it isn’t that useful.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594010464.369300",
        "parent_user_id": "UMWF81HTP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oI+V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "in my normal work I don’t use Undo of work very often. It’s one of the reasons I’ve never liked source code control systems because it’s extremely rare to undo work. Understanding the implications of making changes to code it is really at the crux of the future of computing. Can you make it so that someone can easily understand the implications of what they’re about to change? This is why strong typing It’s so important because it helps the reader understand what could go in a variable. In 99% of the code each variable is going to be used a single way. Users name is never going to become his age. The name is always a string, and it’s only point is to mostly disambiguate a human being from another. One of the problems with these editor Features is that it is not recording why you made the change, so you have this branching tree but you don’t know why you did what you did, so it isn’t that useful."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1594046573.386000",
        "client_msg_id": "6f96c0f7-5c5d-4d2e-852c-04bd81839a59",
        "text": "<@UD3AK9JRF> I sent you a dm if you want to join our call later today",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3+8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UD3AK9JRF"
                            },
                            {
                                "type": "text",
                                "text": " I sent you a dm if you want to join our call later today"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1594047733.386900",
        "client_msg_id": "87333018-DEC1-48E8-9AC8-13A0301339CF",
        "text": "Which application domains do they address?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593677610.126000",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7K3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Which application domains do they address?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1594053695.387200",
        "client_msg_id": "95683def-a61e-4faf-ad60-cbb12b44a1b6",
        "text": "The first is an <http:\/\/ipfs.io\/|IPFS> interface to Pharo, with a user interface layer using GToolkit that (for now) contains an explorer for data stored in IPFS and a reader\/editor for Wikis stored in IPFS.\n\nThe second is a proof-of-concept implementation of a next-generation computational notebook for use in computational science.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593677610.126000",
        "parent_user_id": "UJFN50C00",
        "attachments": [
            {
                "service_name": "IPFS",
                "title": "IPFS Powers the Distributed Web",
                "title_link": "http:\/\/ipfs.io\/",
                "text": "The InterPlanetary File System is a peer-to-peer hypermedia protocol designed to make the web faster, safer, and more open.",
                "fallback": "IPFS: IPFS Powers the Distributed Web",
                "from_url": "http:\/\/ipfs.io\/",
                "service_icon": "https:\/\/ipfs.io\/.\/images\/favicon.png",
                "id": 1,
                "original_url": "http:\/\/ipfs.io\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "waw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The first is an "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/ipfs.io\/",
                                "text": "IPFS"
                            },
                            {
                                "type": "text",
                                "text": " interface to Pharo, with a user interface layer using GToolkit that (for now) contains an explorer for data stored in IPFS and a reader\/editor for Wikis stored in IPFS.\n\nThe second is a proof-of-concept implementation of a next-generation computational notebook for use in computational science."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD3AK9JRF",
        "type": "message",
        "ts": "1594054986.387500",
        "client_msg_id": "4e70e636-683b-455e-8c04-51e5703bd772",
        "text": "Thanks! The biggest thing for me entering this discourse is that we tend to jump right into a solution space—structures, mechanisms, techniques—without spending enough time thinking about the problems in their own terms: audience, goals, expressivity, timeliness, coherence, and so forth. I was glad to hear <@UFQQ3P867> talk in his comic about the “sublime symbiosis of speaking”. I don’t want to reduce discourse to an organizational problem.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g35dfa49055c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/235dfa49055c0a25f2ccfc667a7a6b77.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Peter",
            "real_name": "Peter Abrahamsen",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "rainhead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IV0M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! The biggest thing for me entering this discourse is that we tend to jump right into a solution space—structures, mechanisms, techniques—without spending enough time thinking about the problems in their own terms: audience, goals, expressivity, timeliness, coherence, and so forth. I was glad to hear "
                            },
                            {
                                "type": "user",
                                "user_id": "UFQQ3P867"
                            },
                            {
                                "type": "text",
                                "text": " talk in his comic about the “sublime symbiosis of speaking”. I don’t want to reduce discourse to an organizational problem."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFQQ3P867",
                    "UJ6LDMMN0",
                    "ULK0Z4MPV"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UD3AK9JRF",
        "type": "message",
        "ts": "1594055223.387700",
        "client_msg_id": "384adf17-362a-4087-ad3c-ae8cb7fe95f4",
        "text": "Some scoping is necessary. When I think about these things, I often ground myself by thinking about the social life and work of this community, which are deeply intellectual. Do you all have the same kind of thing in mind?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g35dfa49055c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/235dfa49055c0a25f2ccfc667a7a6b77.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Peter",
            "real_name": "Peter Abrahamsen",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "rainhead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xrwlv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some scoping is necessary. When I think about these things, I often ground myself by thinking about the social life and work of this community, which are deeply intellectual. Do you all have the same kind of thing in mind?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016LEA3J1H",
        "type": "message",
        "ts": "1594060589.389400",
        "client_msg_id": "7ed6b140-f135-4704-90e2-f4499a13b4f9",
        "text": "Is anyone aware of a good meta-analysis on why node and link based programming has only found limited success? lookin' to learn more",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7082261f477c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-06\/1225163496802_7082261f477cd8a85548_72.jpg",
            "first_name": "Harry",
            "real_name": "Harry Brundage",
            "display_name": "Harry Brundage",
            "team": "T5TCAFTA9",
            "name": "harry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "reply_count": 58,
        "reply_users_count": 14,
        "latest_reply": "1595345145.072700",
        "reply_users": [
            "UC2A2ARPT",
            "U01448TH3PG",
            "U016LEA3J1H",
            "UEBG0NPDK",
            "UJ6LDMMN0",
            "UKP3B2J5D",
            "USH01JEDQ",
            "U6FKVSVCK",
            "UJN1TAYEQ",
            "U5STGTB3J",
            "UHWC9PXBL",
            "UA14TGLTC",
            "UFQQ3P867",
            "UN57U8V53"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1594060867.389700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1594061600.390100"
            },
            {
                "user": "U01448TH3PG",
                "ts": "1594062232.392800"
            },
            {
                "user": "U016LEA3J1H",
                "ts": "1594062293.393200"
            },
            {
                "user": "U016LEA3J1H",
                "ts": "1594062325.393500"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1594062409.393700"
            },
            {
                "user": "U016LEA3J1H",
                "ts": "1594062414.393900"
            },
            {
                "user": "U016LEA3J1H",
                "ts": "1594062655.394500"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1594062900.394700"
            },
            {
                "user": "UKP3B2J5D",
                "ts": "1594063084.395100"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1594063117.395300"
            },
            {
                "user": "UKP3B2J5D",
                "ts": "1594063290.395900"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1594063335.396100"
            },
            {
                "user": "U01448TH3PG",
                "ts": "1594063527.396500"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1594063614.396700"
            },
            {
                "user": "UKP3B2J5D",
                "ts": "1594063664.397000"
            },
            {
                "user": "USH01JEDQ",
                "ts": "1594064449.397600"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1594065152.398000"
            },
            {
                "user": "USH01JEDQ",
                "ts": "1594065210.398300"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1594071941.398900"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1594072004.399100"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1594076494.399400"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1594110059.440000"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594133080.478900"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594133382.483900"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594133462.485000"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1594136793.496000"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1594136903.496800"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1594137265.001300"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1594138840.015700"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1594139885.038400"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1594141174.039100"
            },
            {
                "user": "UFQQ3P867",
                "ts": "1594141991.039900"
            },
            {
                "user": "UFQQ3P867",
                "ts": "1594142185.041200"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1594142404.045200"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594143501.049700"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1594149257.051400"
            },
            {
                "user": "U01448TH3PG",
                "ts": "1594151070.052300"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1594152332.052500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594152844.053100"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1594157554.054100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1594159640.055300"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1594162816.060200"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1594162823.060400"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1594162946.062500"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1594163242.063900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1594164030.064100"
            },
            {
                "user": "USH01JEDQ",
                "ts": "1594165381.064700"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1594196717.067400"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1594196776.067600"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1594215349.071500"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1594215531.071700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1594220517.076400"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594225619.081600"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594225694.083600"
            },
            {
                "user": "UN57U8V53",
                "ts": "1594633586.336600"
            },
            {
                "user": "U01448TH3PG",
                "ts": "1595344640.063200"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1595345145.072700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BOMik",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is anyone aware of a good meta-analysis on why node and link based programming has only found limited success? lookin' to learn more"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U01448TH3PG",
                    "ULK0Z4MPV",
                    "UUMQH3TA5"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1594060627.389500",
        "client_msg_id": "0d3b0f3e-41b8-4e89-8622-227b95736956",
        "text": "In Photoshop, I frequently make use of the History panel and Snapshot features, so that I can branch off new variations of an artwork at various points in the past. I could see myself adopting a similarly exploratory programming workflow if my entire toolset were more accommodating of it. Current programming wasn't designed with this freedom in mind, so of course we don't do much of it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594010464.369300",
        "parent_user_id": "UMWF81HTP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qBZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In Photoshop, I frequently make use of the History panel and Snapshot features, so that I can branch off new variations of an artwork at various points in the past. I could see myself adopting a similarly exploratory programming workflow if my entire toolset were more accommodating of it. Current programming wasn't designed with this freedom in mind, so of course we don't do much of it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1594060867.389700",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1594060892.000000"
        },
        "client_msg_id": "64091686-79e6-4330-96c7-2c6729829ffa",
        "text": "I have the littlest stub of something like this in my Visual Programming Codex: <https:\/\/github.com\/ivanreese\/visual-programming-codex\/blob\/master\/criticisms.md>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dzsC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have the littlest stub of something like this in my Visual Programming Codex: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/ivanreese\/visual-programming-codex\/blob\/master\/criticisms.md"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "U016LEA3J1H"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1594061600.390100",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1594061719.000000"
        },
        "client_msg_id": "6c9b2134-47de-4739-a826-e917c76dcb22",
        "text": "My personal feeling is that visual programming hasn't had its moment yet because we haven't yet seen an Autodesk-calibre VP tool. There's a bit of a catch 22 here. Most new VP tools are made for non-programmers, or are created by small teams with tight constraints. As a result, these tools aren't appealing to existing programmers, which reinforces the myth that visual programming isn't for _real_ programmers.\n\nI think one recipe for a breakthrough VP tool is:\n\n• Borrow heavily from video games — modern graphics tech, time manipulation, high visual interest, tight latency, fluid feel, engrossing first-run \/ self-tutorial, and insane polish\n• Focus on advanced programmers, not beginners\n• Focus on expert users, ensuring they can fly through the tool like experts can fly through Photoshop or Modo\n• Don't make it easy to drop down to text\n• Focus more on interactive performance than execution performance\n(I have like 20 more of these things that I see as \"reasons current tools are bad\", but they get increasingly.. weeds-y)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Sjd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My personal feeling is that visual programming hasn't had its moment yet because we haven't yet seen an Autodesk-calibre VP tool. There's a bit of a catch 22 here. Most new VP tools are made for non-programmers, or are created by small teams with tight constraints. As a result, these tools aren't appealing to existing programmers, which reinforces the myth that visual programming isn't for "
                            },
                            {
                                "type": "text",
                                "text": "real",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " programmers.\n\nI think one recipe for a breakthrough VP tool is:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Borrow heavily from video games — modern graphics tech, time manipulation, high visual interest, tight latency, fluid feel, engrossing first-run \/ self-tutorial, and insane polish"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Focus on advanced programmers, not beginners"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Focus on expert users, ensuring they can fly through the tool like experts can fly through Photoshop or Modo"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Don't make it easy to drop down to text"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Focus more on interactive performance than execution performance"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n(I have like 20 more of these things that I see as \"reasons current tools are bad\", but they get increasingly.. weeds-y)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D",
                    "UA14TGLTC",
                    "UHWC9PXBL",
                    "UMWF81HTP",
                    "UML4ZEKDK",
                    "U01003H81UM"
                ],
                "count": 6
            }
        ]
    },
    {
        "user": "U01448TH3PG",
        "type": "message",
        "ts": "1594062232.392800",
        "edited": {
            "user": "U01448TH3PG",
            "ts": "1594063062.000000"
        },
        "client_msg_id": "8344806c-8ecf-4985-8164-a8c201ecad43",
        "text": "I have a theory about this, but haven't seen it explored formally anywhere.\n\nMostly, I think node-and-wire programming hasn't _tried_ to be generally successful and is happy with being used in limited contexts.\n\nConsider python, a 'generally successful' programming language. It can be used to program embedded systems, write web servers, script game engines, and script 3d modeling tools like blender. It's widely used for scientific computing and data processing. There's some things you might not _want_ to do with python, but there's nothing you _can't_ do with python.\n\nCompare that to the most successful node-and-wire systems. They're always tied up in some complex runtime. I can't copy Unreal Blueprints into Max MSP the way I could copy python from a web server to a Blender script.\n\nIt feels like node-and-wire systems are in the same place scripting languages were in the 90s. Every application has its own bespoke node-and-wire system. None of them are very high performance, and none of them work together.\n\nOften, there's no library ecosystem for node-and-write tools, and even if there were an ecosystem, every platform would end up re-implementing the same libraries.\n\nPresumably, expert users also fall out of these tools. At some point, I assume the best users of Unreal Blueprints just start learning C++, so you end up with only the mediocre users and the users with a principled attachment to the tool sticking around.\n\nWhich is to say, node-and-wire tools need to reach all the way down the stack (there can't be a moment where you need to leave the node and wire system to use the more powerful tool 'underneath') and they need to reach across the stack - a node-and-write tool that only works for one very particular use case will never have the general success that a tool like C# has.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d9087b7dc5a6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-13\/1262329708080_d9087b7dc5a6a8e2dc86_72.jpg",
            "first_name": "Aleks",
            "real_name": "Aleks Litynski",
            "display_name": "Aleks",
            "team": "T5TCAFTA9",
            "name": "tavern.joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZFN1e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a theory about this, but haven't seen it explored formally anywhere.\n\nMostly, I think node-and-wire programming hasn't "
                            },
                            {
                                "type": "text",
                                "text": "tried",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to be generally successful and is happy with being used in limited contexts.\n\nConsider python, a 'generally successful' programming language. It can be used to program embedded systems, write web servers, script game engines, and script 3d modeling tools like blender. It's widely used for scientific computing and data processing. There's some things you might not "
                            },
                            {
                                "type": "text",
                                "text": "want",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to do with python, but there's nothing you "
                            },
                            {
                                "type": "text",
                                "text": "can't",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " do with python.\n\nCompare that to the most successful node-and-wire systems. They're always tied up in some complex runtime. I can't copy Unreal Blueprints into Max MSP the way I could copy python from a web server to a Blender script.\n\nIt feels like node-and-wire systems are in the same place scripting languages were in the 90s. Every application has its own bespoke node-and-wire system. None of them are very high performance, and none of them work together.\n\nOften, there's no library ecosystem for node-and-write tools, and even if there were an ecosystem, every platform would end up re-implementing the same libraries.\n\nPresumably, expert users also fall out of these tools. At some point, I assume the best users of Unreal Blueprints just start learning C++, so you end up with only the mediocre users and the users with a principled attachment to the tool sticking around.\n\nWhich is to say, node-and-wire tools need to reach all the way down the stack (there can't be a moment where you need to leave the node and wire system to use the more powerful tool 'underneath') and they need to reach across the stack - a node-and-write tool that only works for one very particular use case will never have the general success that a tool like C# has."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U6FKVSVCK",
                    "UA14TGLTC",
                    "US370TRJA"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UMWF81HTP"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U016LEA3J1H",
        "type": "message",
        "ts": "1594062293.393200",
        "edited": {
            "user": "U016LEA3J1H",
            "ts": "1594062321.000000"
        },
        "client_msg_id": "09d29ff8-6dce-45bc-ba4b-6fa0228ea46d",
        "text": "^ i think that criticism is actually captured in the snippets Ivan pulled out from No Silver Bullet, haven't been any examples of abstraction in the visual world that is as powerful as objects in the OO world",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7082261f477c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-06\/1225163496802_7082261f477cd8a85548_72.jpg",
            "first_name": "Harry",
            "real_name": "Harry Brundage",
            "display_name": "Harry Brundage",
            "team": "T5TCAFTA9",
            "name": "harry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ez+4V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "^ i think that criticism is actually captured in the snippets Ivan pulled out from No Silver Bullet, haven't been any examples of abstraction in the visual world that is as powerful as objects in the OO world"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016LEA3J1H",
        "type": "message",
        "ts": "1594062325.393500",
        "client_msg_id": "5e61a992-ccec-420a-b6f4-db9ce695b22f",
        "text": "it's named functions at best",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7082261f477c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-06\/1225163496802_7082261f477cd8a85548_72.jpg",
            "first_name": "Harry",
            "real_name": "Harry Brundage",
            "display_name": "Harry Brundage",
            "team": "T5TCAFTA9",
            "name": "harry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N3O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it's named functions at best"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1594062409.393700",
        "client_msg_id": "908a317d-c77d-49d2-a049-ced3fc291f8b",
        "text": "<@UC2A2ARPT> I'd be curious to hear more about those 20 weeds-y things if you ever write them down. We're taking an approach pretty similar to what you described and always looking to learn more.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S+J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I'd be curious to hear more about those 20 weeds-y things if you ever write them down. We're taking an approach pretty similar to what you described and always looking to learn more."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0",
                    "UKP3B2J5D",
                    "U016LEA3J1H",
                    "UFBQNBYER",
                    "UA14TGLTC",
                    "UHWC9PXBL"
                ],
                "count": 6
            },
            {
                "name": "beers",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016LEA3J1H",
        "type": "message",
        "ts": "1594062414.393900",
        "client_msg_id": "bca01e0a-4513-4996-ad71-3fed09fcd074",
        "text": "oh nevermind sorry it's not in No Silver Bullet, but i think the argument still has weight, it's hard to capture procedure + state together in a visual abstraction that can be re-used",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7082261f477c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-06\/1225163496802_7082261f477cd8a85548_72.jpg",
            "first_name": "Harry",
            "real_name": "Harry Brundage",
            "display_name": "Harry Brundage",
            "team": "T5TCAFTA9",
            "name": "harry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NMmX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh nevermind sorry it's not in No Silver Bullet, but i think the argument still has weight, it's hard to capture procedure + state together in a visual abstraction that can be re-used"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016LEA3J1H",
        "type": "message",
        "ts": "1594062655.394500",
        "client_msg_id": "9361f250-67f4-4883-baa6-8273f509467d",
        "text": "i find the argument from No Silver Bullet about there being no natural spatial embedding for general software systems kind of weird also -- there's also no natural embedding into a set of files and folders, yet we find a way to do that every time anyways by just picking a convention",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7082261f477c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-06\/1225163496802_7082261f477cd8a85548_72.jpg",
            "first_name": "Harry",
            "real_name": "Harry Brundage",
            "display_name": "Harry Brundage",
            "team": "T5TCAFTA9",
            "name": "harry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6ZMaI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i find the argument from No Silver Bullet about there being no natural spatial embedding for general software systems kind of weird also -- there's also no natural embedding into a set of files and folders, yet we find a way to do that every time anyways by just picking a convention"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1594062900.394700",
        "client_msg_id": "62a9cd79-8365-40ca-9b46-aaf0d34dc3e4",
        "text": "&gt; why node and link based programming has only found limited success?\nMy guess is that node and link programming expressivity is limited. I mean it is extremely expressive for some programming artifacts (say, audio processing, event flow, etc.) but very poor for some others (math expressions first come to mind, but I need to find mor examples). So I guess a language that is exclusively based on nodes and links won't be able to be general enough for major success.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qC6u",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "why node and link based programming has only found limited success?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My guess is that node and link programming expressivity is limited. I mean it is extremely expressive for some programming artifacts (say, audio processing, event flow, etc.) but very poor for some others (math expressions first come to mind, but I need to find mor examples). So I guess a language that is exclusively based on nodes and links won't be able to be general enough for major success."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UKP3B2J5D",
        "type": "message",
        "ts": "1594063084.395100",
        "client_msg_id": "0486fe1b-c29b-4f23-93ec-d3723f3908eb",
        "text": "plus won’t it still need labels and text? To be powerful it would need primitives, combinations, abstraction and a way of generalising over patterns. not obvious to me how to do that with just nodes. Sounds like it would require learning another alphabet",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4980e1f3e51a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-03\/1220847671058_4980e1f3e51a273b630a_72.png",
            "first_name": "Ope",
            "real_name": "Ope",
            "display_name": "opeispo",
            "team": "T5TCAFTA9",
            "name": "ogunks900",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oUAA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "plus won’t it still need labels and text? To be powerful it would need primitives, combinations, abstraction and a way of generalising over patterns. not obvious to me how to do that with just nodes. Sounds like it would require learning another alphabet"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1594063117.395300",
        "client_msg_id": "fb3aaadd-210d-42ad-bcc6-e8403211bbc7",
        "text": "That is why I was really impress by the expressivity and easy of use of PureData and Max\/MSP for lots of programming task and feel very frustrated when I wanted to do some simple message\/string manipulation. I then fall back to JavaScript and the combination of the two was very good.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "urn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That is why I was really impress by the expressivity and easy of use of PureData and Max\/MSP for lots of programming task and feel very frustrated when I wanted to do some simple message\/string manipulation. I then fall back to JavaScript and the combination of the two was very good."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC6997THT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UKP3B2J5D",
        "type": "message",
        "ts": "1594063290.395900",
        "client_msg_id": "ef32d201-ab4f-4fa5-9824-38d0f7ec686e",
        "text": "I wish there was visual documentation\/annotation instead. Perhaps might help with documentation and debugging.  I know I often need to draw diagrams to design\/understand what my code does",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4980e1f3e51a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-03\/1220847671058_4980e1f3e51a273b630a_72.png",
            "first_name": "Ope",
            "real_name": "Ope",
            "display_name": "opeispo",
            "team": "T5TCAFTA9",
            "name": "ogunks900",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EYM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wish there was visual documentation\/annotation instead. Perhaps might help with documentation and debugging.  I know I often need to draw diagrams to design\/understand what my code does"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1594063335.396100",
        "client_msg_id": "4ff5fce5-499d-4d1a-a59d-7f6e2a1cb28b",
        "text": "That means that I don't fully agree with <@UC2A2ARPT> point \"Don't make it easy to drop down to text\" :wink: Or, I can agree if there is another visual \"semantic\" for the cases where \"node and link\" are poorly expressive.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NX7T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That means that I don't fully agree with "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " point \"Don't make it easy to drop down to text\" "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            },
                            {
                                "type": "text",
                                "text": " Or, I can agree if there is another visual \"semantic\" for the cases where \"node and link\" are poorly expressive."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01448TH3PG",
        "type": "message",
        "ts": "1594063527.396500",
        "client_msg_id": "0c25619c-220c-4473-9ea7-bca5b98b6622",
        "text": "I suspect visual programming will eventually be adapted for a very mundane reason - textual programming languages are running out of space. A rust function signature might look like\n```fn longest&lt;'a, 'b&gt;(x: &amp;'a str, y: &amp;'b str) -&gt; &amp;str```\nand you can easily imagine a language wanting to say\n```public static async fn longest&lt;'a, 'b&gt;(x: &amp;'a str, y: &amp;'b str) -&gt; &amp;str```\nIf its not happening already, textual languages will eventually have to turn down features because they just make the function signature too long.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d9087b7dc5a6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-13\/1262329708080_d9087b7dc5a6a8e2dc86_72.jpg",
            "first_name": "Aleks",
            "real_name": "Aleks Litynski",
            "display_name": "Aleks",
            "team": "T5TCAFTA9",
            "name": "tavern.joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G\/G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suspect visual programming will eventually be adapted for a very mundane reason - textual programming languages are running out of space. A rust function signature might look like\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "fn longest<'a, 'b>(x: &'a str, y: &'b str) -> &str"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and you can easily imagine a language wanting to say\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "public static async fn longest<'a, 'b>(x: &'a str, y: &'b str) -> &str"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIf its not happening already, textual languages will eventually have to turn down features because they just make the function signature too long."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1594063614.396700",
        "client_msg_id": "fec4ba70-ae90-4baf-b8c4-97d9da5a2029",
        "text": "But I fully agree with this one: \"Focus on expert users, ensuring they can fly through the tool like experts can fly through Photoshop or Modo\" :100: Power users are very important. In fact one way to achieve that is to consider yourself (as a designer of a visual language) as the first user with all the tools you like (good shortcuts, etc.).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wD=aD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But I fully agree with this one: \"Focus on expert users, ensuring they can fly through the tool like experts can fly through Photoshop or Modo\" "
                            },
                            {
                                "type": "emoji",
                                "name": "100",
                                "unicode": "1f4af"
                            },
                            {
                                "type": "text",
                                "text": " Power users are very important. In fact one way to achieve that is to consider yourself (as a designer of a visual language) as the first user with all the tools you like (good shortcuts, etc.)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UKP3B2J5D",
                    "U01448TH3PG",
                    "U013ZLJARC7"
                ],
                "count": 3
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UKP3B2J5D",
        "type": "message",
        "ts": "1594063664.397000",
        "client_msg_id": "5cb8f819-e519-4d5e-a2d9-ee910c97a144",
        "text": "<@UC2A2ARPT> nice stuff in that repo! Defo hadn’t heard of Dynamic land",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4980e1f3e51a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-03\/1220847671058_4980e1f3e51a273b630a_72.png",
            "first_name": "Ope",
            "real_name": "Ope",
            "display_name": "opeispo",
            "team": "T5TCAFTA9",
            "name": "ogunks900",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tT8d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " nice stuff in that repo! Defo hadn’t heard of Dynamic land"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            },
            {
                "name": "tada",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "USH01JEDQ",
        "type": "message",
        "ts": "1594064449.397600",
        "edited": {
            "user": "USH01JEDQ",
            "ts": "1594064456.000000"
        },
        "client_msg_id": "4926cf78-6850-443d-914e-c0d8505dc383",
        "text": "Spatial thinking is a skill that has to be obtained, vs linear thinking which is typically innate <https:\/\/www.nap.edu\/read\/11019\/chapter\/6>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "854f96b690f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-17\/6370745671793_854f96b690f51d1266ee_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Galtenberg",
            "display_name": "Chris G",
            "team": "T5TCAFTA9",
            "name": "galtenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B+d31",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Spatial thinking is a skill that has to be obtained, vs linear thinking which is typically innate "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.nap.edu\/read\/11019\/chapter\/6"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1594065152.398000",
        "edited": {
            "user": "UJ6LDMMN0",
            "ts": "1594065165.000000"
        },
        "client_msg_id": "4fd7eb7f-dc53-4f47-8747-f3dd01d9465e",
        "text": "<@USH01JEDQ> Yes, but some problems don't fit well with linear representations, mainly problems that are inherently trees or graphs. For example: audio processing, infrastructure architecture, relations in a database...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Eto",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "USH01JEDQ"
                            },
                            {
                                "type": "text",
                                "text": " Yes, but some problems don't fit well with linear representations, mainly problems that are inherently trees or graphs. For example: audio processing, infrastructure architecture, relations in a database..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USH01JEDQ",
        "type": "message",
        "ts": "1594065210.398300",
        "client_msg_id": "3ba35da8-3910-4296-a7ad-f1c0edbbd030",
        "text": "I wasn't suggesting that problems be fit into a particular mode",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "854f96b690f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-17\/6370745671793_854f96b690f51d1266ee_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Galtenberg",
            "display_name": "Chris G",
            "team": "T5TCAFTA9",
            "name": "galtenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eXvej",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wasn't suggesting that problems be fit into a particular mode"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6FKVSVCK",
        "type": "message",
        "ts": "1594071941.398900",
        "client_msg_id": "5cb26ee5-86e4-40e9-8a7e-5d13cf4c667e",
        "text": "Most node and wire tools confine themselves to a domain— they are designed to work on one kind of data, and the primitives are chosen by the system designers to be the ones _they_ think you need _for that domain._ If you need new\/different primitives to solve your problem, it's usually difficult or impossible to create\/express them.\n\nSuccessful programming languages have primitives which are agnostic about the domain\/problem you are solving, and furthermore are chosen to elegantly span the space of computable functions, which means you never have to leave the system to fully express your solution.\n\nDisagree that the first successful node-and-wire programming language will be targeted at high-power developers. See: the exact reasons that Dark had to scale back the other week.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cad501b70b26",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-07\/786673147216_cad501b70b26e7666ed0_72.png",
            "first_name": "Tim",
            "real_name": "Tim Babb",
            "display_name": "tbabb",
            "team": "T5TCAFTA9",
            "name": "tbabb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IHt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Most node and wire tools confine themselves to a domain— they are designed to work on one kind of data, and the primitives are chosen by the system designers to be the ones "
                            },
                            {
                                "type": "text",
                                "text": "they",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " think you need "
                            },
                            {
                                "type": "text",
                                "text": "for that domain.",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " If you need new\/different primitives to solve your problem, it's usually difficult or impossible to create\/express them.\n\nSuccessful programming languages have primitives which are agnostic about the domain\/problem you are solving, and furthermore are chosen to elegantly span the space of computable functions, which means you never have to leave the system to fully express your solution.\n\nDisagree that the first successful node-and-wire programming language will be targeted at high-power developers. See: the exact reasons that Dark had to scale back the other week."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6FKVSVCK",
        "type": "message",
        "ts": "1594072004.399100",
        "client_msg_id": "c0b0d70e-dc37-4e29-9101-04b1bf044c3a",
        "text": "You cannot start with a complex system and add simplicity. You must start with a simple system and remove restrictions.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cad501b70b26",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-07\/786673147216_cad501b70b26e7666ed0_72.png",
            "first_name": "Tim",
            "real_name": "Tim Babb",
            "display_name": "tbabb",
            "team": "T5TCAFTA9",
            "name": "tbabb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N6Ci",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You cannot start with a complex system and add simplicity. You must start with a simple system and remove restrictions."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U01448TH3PG"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1594076494.399400",
        "client_msg_id": "cc6bc56a-ea65-4cce-82b5-9296be04e9dd",
        "text": "I would distinguish node+wire style visual programming from visual programming in the broader sense. In the broad sense, it's definitely possible to create a powerful, wide spectrum visual programming language that scales as well as text only languages. I would start with the principle that code has a hierarchical structure (like a syntax tree). Each node in the tree has potentially multiple different visualizations available, depending on its type, and you can flip between different visual syntaxes. You can create different visual DSLs for different domains (eg, music sequencing languages use different visual conventions than 3D graphics languages). And you can mix multiple DSLs in the same program: these are just different node types.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F\/d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would distinguish node+wire style visual programming from visual programming in the broader sense. In the broad sense, it's definitely possible to create a powerful, wide spectrum visual programming language that scales as well as text only languages. I would start with the principle that code has a hierarchical structure (like a syntax tree). Each node in the tree has potentially multiple different visualizations available, depending on its type, and you can flip between different visual syntaxes. You can create different visual DSLs for different domains (eg, music sequencing languages use different visual conventions than 3D graphics languages). And you can mix multiple DSLs in the same program: these are just different node types."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]