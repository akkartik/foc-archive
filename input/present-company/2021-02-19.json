[
    {
        "user": "UEDDR6L5Q",
        "type": "message",
        "ts": "1613738433.076800",
        "client_msg_id": "ea8aa041-f74b-4786-8bdf-9a1bd64320df",
        "text": "Thanks for adding your take.\nIf the idea is to take ideas to use in your own projects then that's probably true.\n\nAs a base format, though, it seems like a useful synthesis that would solve\/improve a number of present-day problems.\nI'd consider the editor as separate, but an easily-parseable, compact, recursively self-descriptive, structured data format with s-expression-like \"commands\" seems like it has a lot of potential for improving user experience without a heavy abstraction cost.\nIf the data has structure then I assume a general-purpose editor would need to be structured as well. (correct me if I'm misusing the term). The current alternatives seem to be a plethora of subpar general-purpose text formats or custom binary formats for each use-case. I'd be happy to be proven wrong here if there are other, better alternatives! :smile:\nBoth Infra and UTF-8 purport to be general-purpose binary formats, but Infra seems to allow for many more use-cases.\n\n&gt; all of which have traditionally been addressed as separate research areas\nThis jarred for me slightly: siloed research presumably has some benefits for investigating orthogonal concepts, but surely at some point the lessons need to be synthesized for real-world use-cases. In order to have a structured editor or programming-by-example system you need to have some format, and a binary format with the above-described benefits doesn't seem like a bad choice.\n\n(I'm open to being corrected here btw)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "adf09dea9be2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-04-20\/1975289475446_adf09dea9be29fa422a0_72.png",
            "first_name": "",
            "real_name": "Andrew Reece",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "azmreece",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613663800.074600",
        "parent_user_id": "UEDDR6L5Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LBWHQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for adding your take.\nIf the idea is to take ideas to use in your own projects then that's probably true.\n\nAs a base format, though, it seems like a useful synthesis that would solve\/improve a number of present-day problems.\nI'd consider the editor as separate, but an easily-parseable, compact, recursively self-descriptive, structured data format with s-expression-like \"commands\" seems like it has a lot of potential for improving user experience without a heavy abstraction cost.\nIf the data has structure then I assume a general-purpose editor would need to be structured as well. (correct me if I'm misusing the term). The current alternatives seem to be a plethora of subpar general-purpose text formats or custom binary formats for each use-case. I'd be happy to be proven wrong here if there are other, better alternatives! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "\nBoth Infra and UTF-8 purport to be general-purpose binary formats, but Infra seems to allow for many more use-cases.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "all of which have traditionally been addressed as separate research areas"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This jarred for me slightly: siloed research presumably has some benefits for investigating orthogonal concepts, but surely at some point the lessons need to be synthesized for real-world use-cases. In order to have a structured editor or programming-by-example system you need to have some format, and a binary format with the above-described benefits doesn't seem like a bad choice.\n\n(I'm open to being corrected here btw)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEDDR6L5Q",
        "type": "message",
        "ts": "1613739228.077000",
        "client_msg_id": "e6b9bf2f-cb18-4fba-8871-caaf1a2cc99a",
        "text": "To weaken my previous statement:\nAlthough I feel like I have an appreciation for the benefits of lisp-like things, I've never actually spent that much time with them, and so probably don't fully grok them.\nThe modifications &amp; side-effects being part of the base format definitely has a few question marks in my mind. Something about it appeals on an aesthetic level but I don't feel like I have a great idea of how it would actually be applied in practice",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "adf09dea9be2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-04-20\/1975289475446_adf09dea9be29fa422a0_72.png",
            "first_name": "",
            "real_name": "Andrew Reece",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "azmreece",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613663800.074600",
        "parent_user_id": "UEDDR6L5Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i5v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To weaken my previous statement:\nAlthough I feel like I have an appreciation for the benefits of lisp-like things, I've never actually spent that much time with them, and so probably don't fully grok them.\nThe modifications & side-effects being part of the base format definitely has a few question marks in my mind. Something about it appeals on an aesthetic level but I don't feel like I have a great idea of how it would actually be applied in practice"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01JNTE35QS",
        "type": "message",
        "ts": "1613748064.077200",
        "client_msg_id": "70a7fa4a-517f-4bc4-8b57-d65f7ac040dc",
        "text": "I think its awesome work. I’m seeing a lot of parallels between this and what we are working on. Especially the notion of patch based commands for derivative structures from trees and graphs. A few observations:\n1. this is a great fit for WASM. The heap format for WASM can mirror this, and there is a strong association with capabilities the host provides (for example, even mathematical computations)\n2. Portions of the structure are mappable to virtual dom to provide a good way to do reactive UI’s.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "97155db555c2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-01-13\/1631845309525_97155db555c2091ecd20_72.jpg",
            "first_name": "",
            "real_name": "Vijay Chakravarthy",
            "display_name": "Vijay Chakravarthy",
            "team": "T5TCAFTA9",
            "name": "vchakrav",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613663800.074600",
        "parent_user_id": "UEDDR6L5Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vQE=4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think its awesome work. I’m seeing a lot of parallels between this and what we are working on. Especially the notion of patch based commands for derivative structures from trees and graphs. A few observations:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "this is a great fit for WASM. The heap format for WASM can mirror this, and there is a strong association with capabilities the host provides (for example, even mathematical computations)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Portions of the structure are mappable to virtual dom to provide a good way to do reactive UI’s."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1613779531.077400",
        "client_msg_id": "46a98450-95c9-4040-9e90-c210c5933c66",
        "text": "I agree, if you're looking at Infra as a _product_, then you might determine it has practical utility. However, I'm only interested in Infra as a _research artifact_, and from that perspective I personally don't find it very interesting.\n\n&gt; In order to have a structured editor or programming-by-example system you need to have some format, and a binary format with the above-described benefits doesn't seem like a bad choice.\nA structured editor (by definition) presents and allows manipulation of the _abstract structure_ of a document (usually, we talk about ASTs). An abstract structure is a format for a *human* to consume. This is orthogonal to a serialization (\"binary\") format, which is a format for *hardware* to consume. A binary format's only purpose is to instruct the computer how to encode data in its transistors, capacitors, electrons and photons. Only low-level engineers (ideally: OS engineers) need to concern themselves with binary formats, and that's why I consider them orthogonal to structured editing. My conclusion: they are best researched separately. If you are making a _product_, aimed at allowing low-level engineers to manipulate binary formats using structured editors, then that's all well-and-good, but it's not research unless you're doing HCI.\n\n(I'd extend my argument to include programming-by-example but this is getting quite wordy.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613663800.074600",
        "parent_user_id": "UEDDR6L5Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DZA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree, if you're looking at Infra as a "
                            },
                            {
                                "type": "text",
                                "text": "product",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", then you might determine it has practical utility. However, I'm only interested in Infra as a "
                            },
                            {
                                "type": "text",
                                "text": "research artifact",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and from that perspective I personally don't find it very interesting.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In order to have a structured editor or programming-by-example system you need to have some format, and a binary format with the above-described benefits doesn't seem like a bad choice."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nA structured editor (by definition) presents and allows manipulation of the "
                            },
                            {
                                "type": "text",
                                "text": "abstract structure",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of a document (usually, we talk about ASTs). An abstract structure is a format for a "
                            },
                            {
                                "type": "text",
                                "text": "human",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to consume. This is orthogonal to a serialization (\"binary\") format, which is a format for "
                            },
                            {
                                "type": "text",
                                "text": "hardware",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to consume. A binary format's only purpose is to instruct the computer how to encode data in its transistors, capacitors, electrons and photons. Only low-level engineers (ideally: OS engineers) need to concern themselves with binary formats, and that's why I consider them orthogonal to structured editing. My conclusion: they are best researched separately. If you are making a "
                            },
                            {
                                "type": "text",
                                "text": "product",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", aimed at allowing low-level engineers to manipulate binary formats using structured editors, then that's all well-and-good, but it's not research unless you're doing HCI.\n\n(I'd extend my argument to include programming-by-example but this is getting quite wordy.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1613785493.002400",
        "client_msg_id": "9C797369-F291-4132-A1BF-E84A4203E0B9",
        "text": "i see the conversation that nick and i have been having in DM has spilled into the real world! i’m definitely on the “infra is an important piece of work from a research perspective” side and i’ll just copy paste my latest message from DMs here: \n\ni think the core of the infra project is about structural editing done homoiconically. the binary format is just the logical bottom for the homoiconic part. so the reason i don’t see it as a mishmash is that all the structural actions are in the same language as normal data updates. so instead of type.addCase or whatever, you interpret the data structure of a table as representing cases and do a primitive table add when you want to add a case. it’s the same as any other table. having trouble articulating it and maybe it’s something all structure editors have—idk. but infra’s symbol semantics and patch datatype also represent functions in the same plain old data structures—so a function is just a partially interpreted table where some symbols evaluate to themselves. that seems pretty different to me",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613663800.074600",
        "parent_user_id": "UEDDR6L5Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=nm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i see the conversation that nick and i have been having in DM has spilled into the real world! i’m definitely on the “infra is an important piece of work from a research perspective” side and i’ll just copy paste my latest message from DMs here: \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "i think the core of the infra project is about structural editing done homoiconically. the binary format is just the logical bottom for the homoiconic part. so the reason i don’t see it as a mishmash is that all the structural actions are in the same language as normal data updates. so instead of type.addCase or whatever, you interpret the data structure of a table as representing cases and do a primitive table add when you want to add a case. it’s the same as any other table. having trouble articulating it and maybe it’s something all structure editors have—idk. but infra’s symbol semantics and patch datatype also represent functions in the same plain old data structures—so a function is just a partially interpreted table where some symbols evaluate to themselves. that seems pretty different to me"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1613785541.003900",
        "client_msg_id": "42146E93-40C1-49F2-AA3C-12F406E38A8F",
        "text": "i have no idea what the status of the project is but it seems like the last update had to do with UCSB not releasing intellectual property rights?? idk. would love to talk to him if he’s available",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613663800.074600",
        "parent_user_id": "UEDDR6L5Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cjLR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i have no idea what the status of the project is but it seems like the last update had to do with UCSB not releasing intellectual property rights?? idk. would love to talk to him if he’s available"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1613785767.006500",
        "client_msg_id": "691BDA18-6B50-49D1-9D5F-D3A6520D415A",
        "text": "my impression of the binary format stuff is that it goes a bit further in tying the knot on metacircularity than lisp’s special forms do. in particular: the bit about functions being tables whose symbols evaluate to themselves unless they’re interpreted by passing them a symbol table",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613663800.074600",
        "parent_user_id": "UEDDR6L5Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XUnmK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "my impression of the binary format stuff is that it goes a bit further in tying the knot on metacircularity than lisp’s special forms do. in particular: the bit about functions being tables whose symbols evaluate to themselves unless they’re interpreted by passing them a symbol table"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1613785795.007500",
        "client_msg_id": "384E0C3D-14EF-4A41-A4C2-1F6A3A190EB4",
        "text": "i’ve printed out and gone through a big chunk of the thesis with a highlighter and it’s extremely hard to talk about lol",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613663800.074600",
        "parent_user_id": "UEDDR6L5Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yh1s+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i’ve printed out and gone through a big chunk of the thesis with a highlighter and it’s extremely hard to talk about lol"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1613785852.009100",
        "client_msg_id": "7A936C06-1134-4EA5-A01D-450C311DB550",
        "text": "i’m implementing something adjacent, starting with a weird interpretation of edn query language but for javascript objects (insert whatever digression you might imagine)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613663800.074600",
        "parent_user_id": "UEDDR6L5Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8PAZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i’m implementing something adjacent, starting with a weird interpretation of edn query language but for javascript objects (insert whatever digression you might imagine)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1613785994.010600",
        "client_msg_id": "0F013FD1-9C09-422D-A0F9-1C93D33630F4",
        "text": "<@UFPPABQ7P> is a big proponent of explaining things over zoom with an ipad if you decide to make this app and want to do some user interviews ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613408375.066300",
        "parent_user_id": "UF71PR58X",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NJyP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFPPABQ7P"
                            },
                            {
                                "type": "text",
                                "text": " is a big proponent of explaining things over zoom with an ipad if you decide to make this app and want to do some user interviews "
                            }
                        ]
                    }
                ]
            }
        ]
    }
]