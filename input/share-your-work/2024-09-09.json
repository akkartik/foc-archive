[
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1725868381.776559",
        "client_msg_id": "ab8da222-d4f3-4450-baf4-d15212202238",
        "text": "A minimalist project for creating arbitrary policies for drawing text to screen while remembering where you put everything so you can respond to mouse and keyboard events.\n\n<https:\/\/git.sr.ht\/~akkartik\/fractions.love#readme|https:\/\/git.sr.ht\/~akkartik\/fractions.love#readme>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bW0is",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A minimalist project for creating arbitrary policies for drawing text to screen while remembering where you put everything so you can respond to mouse and keyboard events.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/git.sr.ht\/~akkartik\/fractions.love#readme",
                                "text": "https:\/\/git.sr.ht\/~akkartik\/fractions.love#readme"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U02E4DAQGSZ",
                    "UJBAJNFLK",
                    "U06SS0DHZD1"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1725872325.177019",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1725872439.000000"
        },
        "client_msg_id": "2574cce1-30d9-40ff-9554-fca0135d7b3c",
        "text": "I remember the General Magic UI, wow, flashback!\n<https:\/\/learn.adafruit.com\/magic-cap-the-smartphone-os-from-the-90s\/using-magic-cap>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725804680.701599",
        "parent_user_id": "UE6EFEPTQ",
        "attachments": [
            {
                "from_url": "https:\/\/learn.adafruit.com\/magic-cap-the-smartphone-os-from-the-90s\/using-magic-cap",
                "image_url": "https:\/\/cdn-learn.adafruit.com\/guides\/images\/000\/002\/697\/medium800\/magic04c.jpg",
                "image_width": 640,
                "image_height": 480,
                "image_bytes": 95955,
                "service_icon": "https:\/\/learn.adafruit.com\/assets\/favicon-11d9964de07961a3a796b93805a7a240050c6b9f27a213b4002f3ed1efbe2a44.ico",
                "id": 1,
                "original_url": "https:\/\/learn.adafruit.com\/magic-cap-the-smartphone-os-from-the-90s\/using-magic-cap",
                "fallback": "Adafruit Learning System: Explore Magic Cap, a smartphone OS from a decade before the iPhone",
                "text": "Magic Cap was a smartphone before smartphones were smartphones!",
                "title": "Explore Magic Cap, a smartphone OS from a decade before the iPhone",
                "title_link": "https:\/\/learn.adafruit.com\/magic-cap-the-smartphone-os-from-the-90s\/using-magic-cap",
                "service_name": "Adafruit Learning System"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OP3R4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I remember the General Magic UI, wow, flashback!\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/learn.adafruit.com\/magic-cap-the-smartphone-os-from-the-90s\/using-magic-cap"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1725875291.714789",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1725875312.000000"
        },
        "client_msg_id": "ee3c4ccf-f13a-4aa8-88a8-116d428b50b7",
        "text": "I believe it still had applications in the UI and it was architected with persistent but more-or-less trad objects, so not what I call \"Inverted\". Your stuff, like contacts, messages, notes and events, could only be interacted with within the boundaries of their apps rather than being free-floating and having \"physical\" properties, like weight, being stackable and pinnable etc. There wasn't anything in the UI to allow arbitrary mashing up of the stuff on the desktop there, like grabbing a contact from the Rolodex (!) and stapling it to the diary on tomorrow's date page.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725804680.701599",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F10LK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I believe it still had applications in the UI and it was architected with persistent but more-or-less trad objects, so not what I call \"Inverted\". Your stuff, like contacts, messages, notes and events, could only be interacted with within the boundaries of their apps rather than being free-floating and having \"physical\" properties, like weight, being stackable and pinnable etc. There wasn't anything in the UI to allow arbitrary mashing up of the stuff on the desktop there, like grabbing a contact from the Rolodex (!) and stapling it to the diary on tomorrow's date page."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6KQ2S410",
        "type": "message",
        "ts": "1725885405.311109",
        "client_msg_id": "66a98d3e-901e-4736-97b0-7c7c77cac6f6",
        "text": "An ambitious and inspiring vision <@U07KR4BMKNW>! I’ve been banging on related ideas for over 20 years now in my <https:\/\/www.subtext-lang.org|Subtext> research project. We need to innovate on many dimensions at once to escape the local maximum programming is stuck in. But it is incredibly hard to invent new solutions to so many different problems at the same time. All of us who have come before you have failed. I’ve thought a lot about why that is and how to avoid it. One common failure pattern is to try to build a usable product. There is a fundamental conflict between building a product and inventing new technologies. It’s conventional wisdom now to budget “innovation tokens”. People whose whole job is Science or research have evolved different approaches. They share partial results and iterate upon each other’s ideas. Some of us have been trying to grow such spaces patterned on academic workshops and conferences. Like LIVE, PAINT, PX, Onward!. I’d be happy to introduce you to those communities, or more specifically talk about your ideas. Good luck!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e8f4c2151d2b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-09\/225308926294_e8f4c2151d2b70ebfae3_72.jpg",
            "first_name": "Jonathan",
            "real_name": "Jonathan Edwards",
            "display_name": "jonathoda",
            "team": "T5TCAFTA9",
            "name": "jonathoda",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725436552.259159",
        "parent_user_id": "U07KR4BMKNW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LZgES",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "An ambitious and inspiring vision "
                            },
                            {
                                "type": "user",
                                "user_id": "U07KR4BMKNW"
                            },
                            {
                                "type": "text",
                                "text": "! I’ve been banging on related ideas for over 20 years now in my "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.subtext-lang.org",
                                "text": "Subtext"
                            },
                            {
                                "type": "text",
                                "text": " research project. We need to innovate on many dimensions at once to escape the local maximum programming is stuck in. But it is incredibly hard to invent new solutions to so many different problems at the same time. All of us who have come before you have failed. I’ve thought a lot about why that is and how to avoid it. One common failure pattern is to try to build a usable product. There is a fundamental conflict between building a product and inventing new technologies. It’s conventional wisdom now to budget “innovation tokens”. People whose whole job is Science or research have evolved different approaches. They share partial results and iterate upon each other’s ideas. Some of us have been trying to grow such spaces patterned on academic workshops and conferences. Like LIVE, PAINT, PX, Onward!. I’d be happy to introduce you to those communities, or more specifically talk about your ideas. Good luck!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U066ESUNRL3",
        "type": "message",
        "ts": "1725893857.804849",
        "client_msg_id": "3f82440a-ba24-4b7c-a191-78344440e915",
        "text": "Very early days (and not as innovative as a lot of the things I see on here), but I started working on a vscode extension that takes some ideas from semantic editing to build something sort of vimlike but that has things like functions, parameters, etc as first class ideas so you can e.g. press f to select the nearest function, press q to go to parameters, and then press a to append a new parameter at the end (which adds a comma and space, or newline and space, or whatever, and then drops you in insert mode) Here's a little video if you're interested - <https:\/\/youtu.be\/owuuFxDBQh4>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "203eb068574b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-11-19\/6241999047872_203eb068574b4ad25b16_72.png",
            "first_name": "Zak",
            "real_name": "Zak Miller",
            "display_name": "Zak Miller",
            "team": "T5TCAFTA9",
            "name": "zmillerfl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725893857.804849",
        "reply_count": 7,
        "reply_users_count": 3,
        "latest_reply": "1726008189.121539",
        "reply_users": [
            "UCUSW7WVD",
            "U066ESUNRL3",
            "U85HCL7JP"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1725895001.629589"
            },
            {
                "user": "U066ESUNRL3",
                "ts": "1725898116.134929"
            },
            {
                "user": "U066ESUNRL3",
                "ts": "1725898423.245199"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1725934147.867139"
            },
            {
                "user": "U066ESUNRL3",
                "ts": "1726003306.612679"
            },
            {
                "user": "U066ESUNRL3",
                "ts": "1726003321.191039"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1726008189.121539"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/youtu.be\/owuuFxDBQh4",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/owuuFxDBQh4\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/owuuFxDBQh4?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen title=\"Juice demo (vim++)\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https:\/\/youtu.be\/owuuFxDBQh4",
                "fallback": "YouTube Video: Juice demo (vim++)",
                "title": "Juice demo (vim++)",
                "title_link": "https:\/\/youtu.be\/owuuFxDBQh4",
                "author_name": "Zak Miller",
                "author_link": "https:\/\/www.youtube.com\/@ZakMiller-wow",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+YE5H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very early days (and not as innovative as a lot of the things I see on here), but I started working on a vscode extension that takes some ideas from semantic editing to build something sort of vimlike but that has things like functions, parameters, etc as first class ideas so you can e.g. press f to select the nearest function, press q to go to parameters, and then press a to append a new parameter at the end (which adds a comma and space, or newline and space, or whatever, and then drops you in insert mode) Here's a little video if you're interested - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/owuuFxDBQh4"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heartbeat",
                "users": [
                    "UCUSW7WVD",
                    "UMV4B97GT",
                    "U05UF5P8PT8",
                    "U02QC0PPER3"
                ],
                "count": 4
            },
            {
                "name": "cake",
                "users": [
                    "U85HCL7JP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1725895001.629589",
        "client_msg_id": "85baef38-507a-4e03-91a0-ecc62eef0b19",
        "text": "Ooh so cool! I can't believe I haven't thought to want this before.\n\nI wonder how many such polyglot concepts there are like statement, function, argument. Argument in particular is a powerful one that many tools don't do much with.\n\nIdea: include a couple of paredit like hotkeys for broadening or narrowing the selection. For example, wanting to append to the lhs and then rhs of a parallel assignment statement.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725893857.804849",
        "parent_user_id": "U066ESUNRL3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "slUqh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ooh so cool! I can't believe I haven't thought to want this before.\n\nI wonder how many such polyglot concepts there are like statement, function, argument. Argument in particular is a powerful one that many tools don't do much with.\n\nIdea: include a couple of paredit like hotkeys for broadening or narrowing the selection. For example, wanting to append to the lhs and then rhs of a parallel assignment statement."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U066ESUNRL3",
        "type": "message",
        "ts": "1725898116.134929",
        "client_msg_id": "c3ce262e-e3a0-4e84-ad0a-d84155ff7292",
        "text": "That's a good idea! I have a way to go up and down on the tree, (e.g. go from one parameter to all of them) but I don't have something for extending to include siblings but it would be easy to add",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "203eb068574b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-11-19\/6241999047872_203eb068574b4ad25b16_72.png",
            "first_name": "Zak",
            "real_name": "Zak Miller",
            "display_name": "Zak Miller",
            "team": "T5TCAFTA9",
            "name": "zmillerfl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725893857.804849",
        "parent_user_id": "U066ESUNRL3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MYzMz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's a good idea! I have a way to go up and down on the tree, (e.g. go from one parameter to all of them) but I don't have something for extending to include siblings but it would be easy to add"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U066ESUNRL3",
        "type": "message",
        "ts": "1725898423.245199",
        "client_msg_id": "98639eca-4659-4ae0-978b-cc1e74da56b6",
        "text": "My thinking was that there are a relatively small number of concepts that people care about in most languages, and c like languages are similar enough that you can get 95% of what you want across all those languages pretty easily. The demo is typescript but I've done some testing with go and rust and it mostly works",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "203eb068574b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-11-19\/6241999047872_203eb068574b4ad25b16_72.png",
            "first_name": "Zak",
            "real_name": "Zak Miller",
            "display_name": "Zak Miller",
            "team": "T5TCAFTA9",
            "name": "zmillerfl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725893857.804849",
        "parent_user_id": "U066ESUNRL3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2ZXy7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My thinking was that there are a relatively small number of concepts that people care about in most languages, and c like languages are similar enough that you can get 95% of what you want across all those languages pretty easily. The demo is typescript but I've done some testing with go and rust and it mostly works"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1725934147.867139",
        "edited": {
            "user": "U85HCL7JP",
            "ts": "1726008082.000000"
        },
        "client_msg_id": "3C6C08CD-87C3-4F81-A853-8563C7A4E7C9",
        "text": "This is really cool. \nDid you follow any tutorial on how to create a vscode extension?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725893857.804849",
        "parent_user_id": "U066ESUNRL3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rsqU6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is really cool. \nDid you follow any tutorial on how to create a vscode extension?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1725950387.394849",
        "client_msg_id": "42F8481D-5936-4369-B483-F9B682B55350",
        "text": "Keyword: Variable Data Printing. \n\nI like how you simply define placeholders with curly braces and that you cannot only fill them with a specific column from the spreadsheet but use expressions. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725624790.441319",
        "parent_user_id": "U0296ACR13M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lpd8b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Keyword: Variable Data Printing. \n\nI like how you simply define placeholders with curly braces and that you cannot only fill them with a specific column from the spreadsheet but use expressions. "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "U0296ACR13M"
                ],
                "count": 1
            }
        ]
    }
]