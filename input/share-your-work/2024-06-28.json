[
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1719606573.026489",
        "edited": {
            "user": "UGWUJUZHT",
            "ts": "1719608986.000000"
        },
        "client_msg_id": "0c8de7f5-4766-43ba-929e-e11c46ce49ff",
        "text": "In my demo, I made the statement \"... t2t doesn't need the full power of OhmJS ...\", but, I didn't clarify.\n\nFor t2t - text to text transpilation - primarily, you need to pattern-match incoming text, then emit text based on the input.\n\nOhmJS parses incoming text, then gives you the full power of JavaScript to do anything you want with the parse tree.\n\nFor t2t, you don't need to resort to class hierarchies, functions, closures, etc., etc. You primarily need to pattern match, then, create and modify text. In addition to OhmJS' ability to pattern-match, Javascript's \"template strings\" are about all you need - the ability to create text and to interpolate text from the tree walk of the parsed input.\n\nThis _seems_ to be unnecessarily restrictive, but, turns out to be quite powerful and mind-freeing. Fewer options -> less clutter -> increased ability to think about interesting issues. After all, \"simplicity\" == \"lack of nuance\", and, my goal is to simplify DX.\n\n[Infrequently, one needs to do a tiny bit more (like gensym() a new symbol and leave it on a scoped stack for use during the tree-walk), so I provide a way to break out and call a Javascript function, but, this kind of power is not needed in most cases. I guess that, in the future, I will restrict this some more, but, I'm still experimenting].",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719606573.026489",
        "reply_count": 5,
        "reply_users_count": 2,
        "latest_reply": "1719666713.459399",
        "reply_users": [
            "UGWUJUZHT",
            "UJBAJNFLK"
        ],
        "replies": [
            {
                "user": "UGWUJUZHT",
                "ts": "1719607280.641969"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1719647021.745029"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1719654413.433109"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1719666061.529359"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1719666713.459399"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nhkAn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my demo, I made the statement \"... t2t doesn't need the full power of OhmJS ...\", but, I didn't clarify.\n\nFor t2t - text to text transpilation - primarily, you need to pattern-match incoming text, then emit text based on the input.\n\nOhmJS parses incoming text, then gives you the full power of JavaScript to do anything you want with the parse tree.\n\nFor t2t, you don't need to resort to class hierarchies, functions, closures, etc., etc. You primarily need to pattern match, then, create and modify text. In addition to OhmJS' ability to pattern-match, Javascript's \"template strings\" are about all you need - the ability to create text and to interpolate text from the tree walk of the parsed input.\n\nThis "
                            },
                            {
                                "type": "text",
                                "text": "seems",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to be unnecessarily restrictive, but, turns out to be quite powerful and mind-freeing. Fewer options -> less clutter -> increased ability to think about interesting issues. After all, \"simplicity\" == \"lack of nuance\", and, my goal is to simplify DX.\n\n[Infrequently, one needs to do a tiny bit more (like gensym() a new symbol and leave it on a scoped stack for use during the tree-walk), so I provide a way to break out and call a Javascript function, but, this kind of power is not needed in most cases. I guess that, in the future, I will restrict this some more, but, I'm still experimenting]."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1719607280.641969",
        "client_msg_id": "0438315b-847f-4d78-b4c9-2b75a2404740",
        "text": "Given this simplification, I easily invented a nano-DSL to handle the string building bit. I call it RWR (for ReWRite). RWR is, itself, just t2t - it transpiles the RWR spec into Javascript that is compatible with OhmJS.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719606573.026489",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LqqTo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Given this simplification, I easily invented a nano-DSL to handle the string building bit. I call it RWR (for ReWRite). RWR is, itself, just t2t - it transpiles the RWR spec into Javascript that is compatible with OhmJS."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "I’m close to publicly releasing an AI powered coding assistant for LabVIEW, a visual programming language. Here is a teaser: <https:\/\/www.linkedin.com\/posts\/jimkring_labview-sparkles-is-an-ai-copilot-for-activity-7212597622111449088-VQKe|https:\/\/www.linkedin.com\/posts\/jimkring_labview-sparkles-is-an-ai-copilot-for-activity-7212597622111449088-VQKe>",
        "files": [
            {
                "id": "F07A8DL0JN9",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U079PRQNZQD",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "unOS1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m close to publicly releasing an AI powered coding assistant for LabVIEW, a visual programming language. Here is a teaser: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.linkedin.com\/posts\/jimkring_labview-sparkles-is-an-ai-copilot-for-activity-7212597622111449088-VQKe",
                                "text": "https:\/\/www.linkedin.com\/posts\/jimkring_labview-sparkles-is-an-ai-copilot-for-activity-7212597622111449088-VQKe"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1719619807.724589",
        "client_msg_id": "856298A6-D9EA-4C68-9ED9-5B657ECE726F",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U06BUK2M2RH"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1719632103.161249",
        "client_msg_id": "84c7a9df-cd93-470a-9dac-634a69d8145f",
        "text": "Is the APL assignment operator analogical?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7fd1bd5c536",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7fd1bd5c53681452a80086a54ebb2ad1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Personal",
            "real_name": "Personal Dynamic Media",
            "display_name": "Personal Dynamic Media",
            "team": "T5TCAFTA9",
            "name": "personaldynamicmedia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1718804841.784739",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/eibj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is the APL assignment operator analogical?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1719632165.011509",
        "client_msg_id": "864E43EF-06AE-4396-9AE6-3D5B81587128",
        "text": "I'll bite! What is it analogous to? And what makes it special compared to other assignment operators? (I've always been curious about APL, but know very little about it)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1718804841.784739",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WH5zu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'll bite! What is it analogous to? And what makes it special compared to other assignment operators? (I've always been curious about APL, but know very little about it)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1719632337.625339",
        "client_msg_id": "5ce863a9-8b59-4089-842e-975fdba92586",
        "text": "It's an arrow pointing to the left. Rendered in ASCII art it looks something like \"i &lt;- 1\"\n\nPresumably it represents the movement of the value on the right to the location named on the left.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7fd1bd5c536",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7fd1bd5c53681452a80086a54ebb2ad1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Personal",
            "real_name": "Personal Dynamic Media",
            "display_name": "Personal Dynamic Media",
            "team": "T5TCAFTA9",
            "name": "personaldynamicmedia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1718804841.784739",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QT\/oi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's an arrow pointing to the left. Rendered in ASCII art it looks something like \"i <- 1\"\n\nPresumably it represents the movement of the value on the right to the location named on the left."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1719635288.232059",
        "client_msg_id": "a4e5d7fc-e418-4732-91f7-24a872045b50",
        "text": "Ah that opens up a bunch of great questions! Is an arrow from A to B analogous to the movement of something from A to B? I could argue either side of that one!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1718804841.784739",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "szDF7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah that opens up a bunch of great questions! Is an arrow from A to B analogous to the movement of something from A to B? I could argue either side of that one!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1719643055.527569",
        "client_msg_id": "F9509ED2-3C9B-4FAD-A6EA-926018706B3F",
        "text": "And now I’ll bite and argue for one side with cognitive science. The term to look for is _kinesthetic\/cognitive image schemas_. Specifically the PATH schema seems relevant.\n\nI wouldn’t quite call it philosophy of language, but if you want to climb down that rabbit hole, Lakoff and Johnson’s _Metaphors We Live By_ is a pretty good starting point.\n\nHere’s a small presentation about Pointing, which I just found in a few seconds that seems to provide some good material to support this: <http:\/\/faculty.lawrence.edu\/wp-content\/uploads\/sites\/18\/2015\/11\/Pointing.pdf|http:\/\/faculty.lawrence.edu\/wp-content\/uploads\/sites\/18\/2015\/11\/Pointing.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1718804841.784739",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nWt4o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And now I’ll bite and argue for one side with cognitive science. The term to look for is "
                            },
                            {
                                "type": "text",
                                "text": "kinesthetic\/cognitive image schemas",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Specifically the PATH schema seems relevant.\n\nI wouldn’t quite call it philosophy of language, but if you want to climb down that rabbit hole, Lakoff and Johnson’s "
                            },
                            {
                                "type": "text",
                                "text": "Metaphors We Live By",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " is a pretty good starting point.\n\nHere’s a small presentation about Pointing, which I just found in a few seconds that seems to provide some good material to support this: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/faculty.lawrence.edu\/wp-content\/uploads\/sites\/18\/2015\/11\/Pointing.pdf",
                                "text": "http:\/\/faculty.lawrence.edu\/wp-content\/uploads\/sites\/18\/2015\/11\/Pointing.pdf"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1719643620.254189",
        "edited": {
            "user": "U5STGTB3J",
            "ts": "1719643880.000000"
        },
        "client_msg_id": "94B4B4BB-76F1-4BAF-AF1D-865FC85F9182",
        "text": "If I’m not mistaken, then Iverson tried to pick notation that was visually connected with the functions it stood for. That was way before cognitive science became excited about embodiment, I think, so he couldn’t have based it on this research, but had pretty good intuition.\nSection 1 in his _<https:\/\/dl.acm.org\/doi\/pdf\/10.1145\/358896.358899|Notation as a Tool of Thought>_ discussed the balance between several criteria he tried to strike.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1718804841.784739",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IQyev",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If I’m not mistaken, then Iverson tried to pick notation that was visually connected with the functions it stood for. That was way before cognitive science became excited about embodiment, I think, so he couldn’t have based it on this research, but had pretty good intuition.\nSection 1 in his "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/dl.acm.org\/doi\/pdf\/10.1145\/358896.358899",
                                "text": "Notation as a Tool of Thought",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " discussed the balance between several criteria he tried to strike"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]