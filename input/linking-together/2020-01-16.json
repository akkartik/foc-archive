[
    {
        "user": "UAZT04VT4",
        "type": "message",
        "ts": "1579176069.212200",
        "client_msg_id": "039291b5-6972-4935-ad0b-46b73e4a6342",
        "text": "What I’ve found tremendously helpful is “How to take Smart Notes” <https:\/\/www.amazon.de\/dp\/1542866502\/ref=sr_1_1?crid=RRE6EIMBB235&amp;keywords=how+to+take+smart+notes&amp;qid=1579175930&amp;sprefix=how+to+take+smar%2Caps%2C157&amp;sr=8-1>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3d63cdd3157",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-16\/2861597891505_f3d63cdd315711ff17a4_72.jpg",
            "first_name": "Paul",
            "real_name": "Paul Sonnentag",
            "display_name": "Paul Sonnentag",
            "team": "T5TCAFTA9",
            "name": "paul.sonnentag",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579124732.180900",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8WCY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What I’ve found tremendously helpful is “How to take Smart Notes” "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.amazon.de\/dp\/1542866502\/ref=sr_1_1?crid=RRE6EIMBB235&keywords=how+to+take+smart+notes&qid=1579175930&sprefix=how+to+take+smar%2Caps%2C157&sr=8-1"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1579187914.213500",
        "client_msg_id": "3b7e1f1b-01fc-45d5-87d6-eadf8890f2f6",
        "text": "Can we close this channel? It's pointless if we have two channels for the same material. <@U5TCAFTD3>?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MeL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can we close this channel? It's pointless if we have two channels for the same material. "
                            },
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": "?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1579189028.214300",
        "client_msg_id": "7ea697ac-b2a2-450f-a01a-b413c3203f6a",
        "text": "Isn't <@UC2A2ARPT> in charge now?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579189028.214300",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1579198971.215700",
        "reply_users": [
            "UC2A2ARPT",
            "UE6EFEPTQ"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1579195326.214500"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1579198024.215000"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1579198971.215700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QgBrM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Isn't "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " in charge now?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1579195326.214500",
        "client_msg_id": "90347b93-7639-4a72-b72c-988c02ffdd24",
        "text": "Only for the _loosest_ definition of \"in charge\" ;)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579189028.214300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O=Qh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Only for the "
                            },
                            {
                                "type": "text",
                                "text": "loosest",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " definition of \"in charge\" ;)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1579198024.215000",
        "client_msg_id": "17b0a119-5f3c-4c04-86e3-555a4dac6e75",
        "text": "Yeah but I was assuming Steve still has the keys to Slack?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579189028.214300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gfhL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah but I was assuming Steve still has the keys to Slack?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1579198905.215500",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1579379708.000000"
        },
        "client_msg_id": "f4327459-9250-41e7-983c-8cdcb2336e8c",
        "text": "<https:\/\/www.youtube.com\/watch?v=K4DlqsxdOfY&amp;t=4212>\n\nThere's a new glitch that was discovered in Legend of Zelda: Ocarina of Time a few months ago, which was exhibited live as part of the Games Done Quick speedrunning charity marathon last week. This glitch is an incredible feat of both reverse engineering and virtuosic game input, and the commentators do a good job of explaining what happens. For those who aren't gamers this might not carry much significance, but for anyone who plays games in general or Ocarina of Time in particular this should be a real head trip.\n\nThis category of speedrun is \"100% no source requirement\", which means the runner needs to acquire every single item in the game, but that item doesn't need to be acquired from its original source. This glitch is the skeleton key that unlocks every item in the game.\n\nAll the below is explained better by the video, so if you're interested you should watch that instead of reading this.\n\nIn summary, the glitch works by abusing the boomerang, a chest, and water. There's a deku scrub that gives Link a heart. ZFG (the player) collects that heart with the boomerang. The boomerang \"moves\" the heart by copying the boomerang's position to the heart's position every frame. Through a series of very careful inputs, ZFG causes the game to unload the heart from memory while it's being boomeranged, and load something else (Zelda's Letter) in its place, causing the boomerang to write position values on that object instead. ZFG then causes a room with a chest to load exactly when the boomerang is in a very precise position, so that the chest ends up containing the item being carried by the boomerang. This item is normally never found inside a chest, so when Link collects this item from the chest, the game actually ends up giving Link a _different_ item — and which item Link receives is determined by the angle (in 256th increments) Link is facing. By repeatedly going out bounds, dying, and being revived by a fairy, ZFG tricks the game into thinking Link is underwater when he's not, and is able to collect multiple specific items from the chest.\n\nNo way in hell would I post this to <#C5T9GPWFL|thinking-together> :P",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579198905.215500",
        "reply_count": 8,
        "reply_users_count": 3,
        "latest_reply": "1587506839.087400",
        "reply_users": [
            "UHWC9PXBL",
            "UC2A2ARPT",
            "UD6EXQVM0"
        ],
        "replies": [
            {
                "user": "UHWC9PXBL",
                "ts": "1580571606.039600"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1580580848.041600"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1581367982.112800"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1581368022.114300"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1581368234.114500"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1581368283.114800"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1587501977.087100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1587506839.087400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "The Legend of Zelda: Ocarina of Time by ZFG in 2:50:12  - AGDQ2020",
                "title_link": "https:\/\/www.youtube.com\/watch?v=K4DlqsxdOfY&amp;t=4212",
                "author_name": "Games Done Quick",
                "author_link": "https:\/\/www.youtube.com\/user\/gamesdonequick",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/K4DlqsxdOfY\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: The Legend of Zelda: Ocarina of Time by ZFG in 2:50:12  - AGDQ2020",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/K4DlqsxdOfY?feature=oembed&start=4212&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=K4DlqsxdOfY&amp;t=4212",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=K4DlqsxdOfY&amp;t=4212"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2RosZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=K4DlqsxdOfY&t=4212"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThere's a new glitch that was discovered in Legend of Zelda: Ocarina of Time a few months ago, which was exhibited live as part of the Games Done Quick speedrunning charity marathon last week. This glitch is an incredible feat of both reverse engineering and virtuosic game input, and the commentators do a good job of explaining what happens. For those who aren't gamers this might not carry much significance, but for anyone who plays games in general or Ocarina of Time in particular this should be a real head trip.\n\nThis category of speedrun is \"100% no source requirement\", which means the runner needs to acquire every single item in the game, but that item doesn't need to be acquired from its original source. This glitch is the skeleton key that unlocks every item in the game.\n\nAll the below is explained better by the video, so if you're interested you should watch that instead of reading this.\n\nIn summary, the glitch works by abusing the boomerang, a chest, and water. There's a deku scrub that gives Link a heart. ZFG (the player) collects that heart with the boomerang. The boomerang \"moves\" the heart by copying the boomerang's position to the heart's position every frame. Through a series of very careful inputs, ZFG causes the game to unload the heart from memory while it's being boomeranged, and load something else (Zelda's Letter) in its place, causing the boomerang to write position values on that object instead. ZFG then causes a room with a chest to load exactly when the boomerang is in a very precise position, so that the chest ends up containing the item being carried by the boomerang. This item is normally never found inside a chest, so when Link collects this item from the chest, the game actually ends up giving Link a "
                            },
                            {
                                "type": "text",
                                "text": "different",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " item — and which item Link receives is determined by the angle (in 256th increments) Link is facing. By repeatedly going out bounds, dying, and being revived by a fairy, ZFG tricks the game into thinking Link is underwater when he's not, and is able to collect multiple specific items from the chest.\n\nNo way in hell would I post this to "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": " :P"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "rolling_on_the_floor_laughing",
                "users": [
                    "UCUSW7WVD",
                    "URDRJEWS0",
                    "UJRDRMWQN",
                    "UBSMEUXAA",
                    "UBRKVHMCL",
                    "UA14TGLTC"
                ],
                "count": 6
            },
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1579198971.215700",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1579198986.000000"
        },
        "client_msg_id": "952d160d-fe87-4147-894b-426d8c83b35f",
        "text": "Yes, Steve still has the Slack ownership. I'll nag him for that once we've decided if we're staying or going. (I've got a long list of things I'm nagging him for right now, so I'm trying not to blow up his email any further until he catches up on the backlog, hah)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579189028.214300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g2E6N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, Steve still has the Slack ownership. I'll nag him for that once we've decided if we're staying or going. (I've got a long list of things I'm nagging him for right now, so I'm trying not to blow up his email any further until he catches up on the backlog, hah)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1579199901.216300",
        "client_msg_id": "2f560f93-8e45-409c-a236-810616f54205",
        "text": "&gt; <@U8A5MS6R1> \"We don't want to model types (which containerized the information, and overspecify the proximity of values), we want to model the information in some other normal form (kinda like 6NF in relational).\"\nI think there are \"functional\" and \"relational\" styles of programming, which are appropriate in different contexts.\n\nIn my project (Curv), there is currently no state. It is purely functional. You build up geometric shapes using function composition: applying shape operators to shape values. The functional style is focussed on values, which containerize information and force it to be hierarchical. But, this style works really well in Curv. <@UCUSW7WVD> Integers &amp; arithmetic are another example where functional style works well.\n\nThe functional style, with its containerized, hierarchical data, seems to be bad for modelling \"real world\" data, with its non-hierarchical relationships, and seems to be bad for managing state in game programming. For that, you want \"relational\" programming, which is what I think is what Shalabh is talking about. I'm using this term loosely to describe Entity Component Systems, Datalog, etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579153117.205300",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "voe",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " \"We don't want to model types (which containerized the information, and overspecify the proximity of values), we want to model the information in some other normal form (kinda like 6NF in relational).\""
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think there are \"functional\" and \"relational\" styles of programming, which are appropriate in different contexts.\n\nIn my project (Curv), there is currently no state. It is purely functional. You build up geometric shapes using function composition: applying shape operators to shape values. The functional style is focussed on values, which containerize information and force it to be hierarchical. But, this style works really well in Curv. "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Integers & arithmetic are another example where functional style works well.\n\nThe functional style, with its containerized, hierarchical data, seems to be bad for modelling \"real world\" data, with its non-hierarchical relationships, and seems to be bad for managing state in game programming. For that, you want \"relational\" programming, which is what I think is what Shalabh is talking about. I'm using this term loosely to describe Entity Component Systems, Datalog, etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1579201258.216900",
        "client_msg_id": "63b60f63-f4e9-42c7-9dbd-f03a40a4cd49",
        "text": "Here's a well reasoned discussion of \"relational programming\" in the context of the Cell programming language, which explains the issues better than I can: <http:\/\/cell-lang.net\/relations.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579153117.205300",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "title": "The Cell Programming Language",
                "title_link": "http:\/\/cell-lang.net\/relations.html",
                "text": "The Cell Programming Language",
                "fallback": "The Cell Programming Language",
                "from_url": "http:\/\/cell-lang.net\/relations.html",
                "service_name": "cell-lang.net",
                "id": 1,
                "original_url": "http:\/\/cell-lang.net\/relations.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jcf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's a well reasoned discussion of \"relational programming\" in the context of the Cell programming language, which explains the issues better than I can: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/cell-lang.net\/relations.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_topic",
        "user": "UE6EFEPTQ",
        "topic": "*** Fun or out-there stuff: NOT directly Future of Coding! ***",
        "text": "set the channel topic: *** Fun or out-there stuff: NOT directly Future of Coding! ***",
        "type": "message",
        "ts": "1579206153.217500"
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1579206169.217800",
        "client_msg_id": "28edb3e7-0325-4563-bbfa-27cd5f29e1ab",
        "text": "↑ Wow didn't know I had The Power to do that!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579206169.217800",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1579457615.024300",
        "reply_users": [
            "UC2A2ARPT",
            "U8A5MS6R1"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1579206309.218000"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1579457543.024100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1579457615.024300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+tCN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "↑ Wow didn't know I had The Power to do that!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "muscle",
                "users": [
                    "USCSC4JF2",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1579206309.218000",
        "client_msg_id": "e9585574-3731-4a10-9b29-4b211bbf9bb1",
        "text": "Yeah! The problem is people sometimes clear it, not knowing what it's for — there used to be a topic set here, IIRC, for instance. _The Slack Owner_ might be able to restrict that ability, which might be a good idea if we decide to stick with Slack.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579206169.217800",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OdplH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah! The problem is people sometimes clear it, not knowing what it's for — there used to be a topic set here, IIRC, for instance. "
                            },
                            {
                                "type": "text",
                                "text": "The Slack Owner",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " might be able to restrict that ability, which might be a good idea if we decide to stick with Slack."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP6B3FCGZ",
        "type": "message",
        "ts": "1579207981.229300",
        "client_msg_id": "2c9a9683-6faf-491d-81f5-9bebfb9e08a1",
        "text": "Hi everyone. I'm currently working on permissions for our saas product and this led me to a lot of thinking about FOC topics. The way I see it, permission is a topic that can get quite complex, but really does not add a lot of value to the end users. As a PM, I really don't want to spend a lot of time on it, I just expect it to get done. And I think that any person that is trying to hack something for the real world eventually reaches a point where they need to think about this, but they would rather spend the time solving the problems they really care about, and not about the tables for a RBAC permission model.\nSo it seemed to me quite obvious that this was a ' solved' problem in programming. I can just use an API in the code to define what is fenced with acces control, I automatically get a GUI to manage that, and voilà, I can handle role-based permissions without worrying too much about it.\nI have not found such thing, which makes me think that I'm not looking right (hopefully). Anyone has any experience with these things?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a0c4ebfabd85",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-30\/876580998658_a0c4ebfabd857fcb7733_72.jpg",
            "first_name": "Pere",
            "real_name": "Pere",
            "display_name": "Pere",
            "team": "T5TCAFTA9",
            "name": "molinsp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579207981.229300",
        "reply_count": 4,
        "reply_users_count": 4,
        "latest_reply": "1580571712.041200",
        "reply_users": [
            "UBN9AFS0N",
            "UFLN9JFRT",
            "UP6B3FCGZ",
            "UHWC9PXBL"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1579208264.229400"
            },
            {
                "user": "UFLN9JFRT",
                "ts": "1579266866.006200"
            },
            {
                "user": "UP6B3FCGZ",
                "ts": "1579466300.024600"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1580571712.041200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xc1Aq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi everyone. I'm currently working on permissions for our saas product and this led me to a lot of thinking about FOC topics. The way I see it, permission is a topic that can get quite complex, but really does not add a lot of value to the end users. As a PM, I really don't want to spend a lot of time on it, I just expect it to get done. And I think that any person that is trying to hack something for the real world eventually reaches a point where they need to think about this, but they would rather spend the time solving the problems they really care about, and not about the tables for a RBAC permission model.\nSo it seemed to me quite obvious that this was a ' solved' problem in programming. I can just use an API in the code to define what is fenced with acces control, I automatically get a GUI to manage that, and voilà, I can handle role-based permissions without worrying too much about it.\nI have not found such thing, which makes me think that I'm not looking right (hopefully). Anyone has any experience with these things?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275",
                    "UA14TGLTC",
                    "UHWC9PXBL"
                ],
                "count": 3
            },
            {
                "name": "thinking_face",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1579208264.229400",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1579208276.000000"
        },
        "client_msg_id": "6841dd4d-b0ec-4c59-9ddb-e023707fab01",
        "text": "same here, implemented RBAC too many times already, nothing generic I've found in the languages I use :confused:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579207981.229300",
        "parent_user_id": "UP6B3FCGZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qmx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "same here, implemented RBAC too many times already, nothing generic I've found in the languages I use "
                            },
                            {
                                "type": "emoji",
                                "name": "confused",
                                "unicode": "1f615"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1579246421.000500",
        "client_msg_id": "d24a569f-b3f5-4be9-a332-5b86435bb0e1",
        "text": "My take on this: types are fine, it's type systems that are a problem. All type systems I know impose a single type structure on \"everything\", typically meaning \"a program\", which is a somewhat arbitrarily defined subsystem of a computing system.\nEvery type system I have seen is great for some use cases and horrible for others. So either we need to find the one type system that's good for everything, or admit that we need different type systems and find a way to make them collaborate.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579153117.205300",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Uzl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My take on this: types are fine, it's type systems that are a problem. All type systems I know impose a single type structure on \"everything\", typically meaning \"a program\", which is a somewhat arbitrarily defined subsystem of a computing system.\nEvery type system I have seen is great for some use cases and horrible for others. So either we need to find the one type system that's good for everything, or admit that we need different type systems and find a way to make them collaborate."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1579247011.000700",
        "client_msg_id": "114bbe62-f3c3-44a5-9e8f-46cb7009993f",
        "text": "ADTs don't really work because record types do not satisfy my criteria. It's the `car.wheels` vs `wheel.car` problem. In the information model there is only one relationship between the car and the wheels. (This goes back to the domain types vs machine types discussion we had at some point.) In something like RDF, or any graph model there is only one (obvious) way to model the car-wheel relationship: there's a car, there's a wheel, there's a 1:many relationship between car and wheels.\n\nWhen using record types, you have to partition the information into two records - now you must decide where the link goes. This is what I mean by the 'relationship should be outside the entity' but it is inside in records. Sometimes I might want to lookup the car for a given wheel. Now I have a few options: Loop over all the cars and see if they contain this wheel, construct a reverse mapping using a new data structure `Dict[Wheel, Car]`. If you do that and it's somewhat long lived, you now have to keep the data consistent. The point is your code is not written to fit the domain model but it is written to fit this type model that contains various projections of the domain model. Importantly these projections are manually constructed and maintained. Other concerns (such as optimization) might lead to decisions like lets keep both `car.wheels` and `wheel.car` because we need fast lookup in both directions.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579153117.205300",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T\/M0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ADTs don't really work because record types do not satisfy my criteria. It's the "
                            },
                            {
                                "type": "text",
                                "text": "car.wheels",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vs "
                            },
                            {
                                "type": "text",
                                "text": "wheel.car",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " problem. In the information model there is only one relationship between the car and the wheels. (This goes back to the domain types vs machine types discussion we had at some point.) In something like RDF, or any graph model there is only one (obvious) way to model the car-wheel relationship: there's a car, there's a wheel, there's a 1:many relationship between car and wheels.\n\nWhen using record types, you have to partition the information into two records - now you must decide where the link goes. This is what I mean by the 'relationship should be outside the entity' but it is inside in records. Sometimes I might want to lookup the car for a given wheel. Now I have a few options: Loop over all the cars and see if they contain this wheel, construct a reverse mapping using a new data structure "
                            },
                            {
                                "type": "text",
                                "text": "Dict[Wheel, Car]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". If you do that and it's somewhat long lived, you now have to keep the data consistent. The point is your code is not written to fit the domain model but it is written to fit this type model that contains various projections of the domain model. Importantly these projections are manually constructed and maintained. Other concerns (such as optimization) might lead to decisions like lets keep both "
                            },
                            {
                                "type": "text",
                                "text": "car.wheels",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "wheel.car",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " because we need fast lookup in both directions."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]