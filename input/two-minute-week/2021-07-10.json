[
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1625925873.065000",
        "edited": {
            "user": "U01ULEWACPP",
            "ts": "1625926475.000000"
        },
        "client_msg_id": "74a0045b-c5c4-4262-a55b-e90f888efc26",
        "text": "Today, I’m sharing a first glimpse of my new programming environment for prototyping and building user interfaces and apps. It’s like a breadboard for building software. You can wire up components, prototype, figure out, think, iterate. It’s a tool for creating tools. I think the closest reference I’ve looked at is _Fabrik_ (as seen in <@UC2A2ARPT>’s <https:\/\/github.com\/ivanreese\/visual-programming-codex|Visual Programming Codex>).\n\nIt’s tough to share all the potential things it can be used for in one short video. I’ll try to refine it through more videos and writing in the next weeks. :slightly_smiling_face:\n\n*The video is uncommented. So here’s a summary of noteworthy things:*\n\n• There are workspaces, blocks and wires. It’s like nodes &amp; wires, but with strict layout and user interfaces in mind.\n• This doesn’t try to replace code, but makes working with code easier.  \n• Programming (dealing with data and organizing chunks of code) can be done visually.\n• Copy &amp; Paste as first-class citizen → Code becomes tangible\n• By visualising and showing data, it reduces the mental overhead of keeping state and data in my head.\n• Wires are a tool, not a necessity (in theory, a workspace could have a single self-contained block and no wires at all)\n• Instead of  needing to wire up every input, blocks can define their own inputs through inspectors or by providing their own UI – some blocks allow both: external inputs and UI\n• Blocks can have high levels of abstraction (no need to create blocks to do something easy like `a+b`)\n• Wires can be hidden and the program still makes sense because there is always some layout, user interface, …\n• Various mechanisms for abstraction (wire up something, then copy the resulting block elsewhere), collapse blocks to hide data\/UI, combine low level blocks (many inputs) into larger blocks (few inputs)\n<https:\/\/vimeo.com\/573378340|https:\/\/vimeo.com\/573378340>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625925873.065000",
        "reply_count": 6,
        "reply_users_count": 3,
        "latest_reply": "1626448149.097100",
        "reply_users": [
            "UC2A2ARPT",
            "U01ULEWACPP",
            "UG0EL18H3"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1625936020.065800"
            },
            {
                "user": "U01ULEWACPP",
                "ts": "1625945253.070700"
            },
            {
                "user": "UG0EL18H3",
                "ts": "1626388759.075100"
            },
            {
                "user": "U01ULEWACPP",
                "ts": "1626442762.078900"
            },
            {
                "user": "UG0EL18H3",
                "ts": "1626446642.096700"
            },
            {
                "user": "U01ULEWACPP",
                "ts": "1626448149.097100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "Vimeo",
                "service_url": "https:\/\/vimeo.com\/",
                "title": "Programming with Ratio",
                "title_link": "https:\/\/vimeo.com\/573378340",
                "author_name": "Florian Schulz",
                "author_link": "https:\/\/vimeo.com\/getflourish",
                "thumb_url": "https:\/\/i.vimeocdn.com\/video\/1185767098_295x166",
                "thumb_width": 295,
                "thumb_height": 166,
                "text": "Brief overview of a my new programming environment for prototyping and building user interfaces and apps. \n\nWhat’s included:\n\n- Programming using Blocks and Wires\n- Blocks as Objects: Cut, Copy, Paste, Rename\n- Organization with Tabbed Workspaces and Layouts\n- Data Fetching and Data Flow\n- Creation and Inspection of Blocks\n- Configuration of the Environment itself through Blocks",
                "fallback": "Vimeo Video: Programming with Ratio",
                "video_html": "<iframe src=\"https:\/\/player.vimeo.com\/video\/573378340?autoplay=1&amp;app_id=122963\" width=\"400\" height=\"247\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen title=\"Programming with Ratio\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 247,
                "from_url": "https:\/\/vimeo.com\/573378340",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/vimeo.png",
                "id": 2,
                "original_url": "https:\/\/vimeo.com\/573378340"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mwZ+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Today, I’m sharing a first glimpse of my new programming environment for prototyping and building user interfaces and apps. It’s like a breadboard for building software. You can wire up components, prototype, figure out, think, iterate. It’s a tool for creating tools. I think the closest reference I’ve looked at is "
                            },
                            {
                                "type": "text",
                                "text": "Fabrik",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (as seen in "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": "’s "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/ivanreese\/visual-programming-codex",
                                "text": "Visual Programming Codex"
                            },
                            {
                                "type": "text",
                                "text": ").\n\nIt’s tough to share all the potential things it can be used for in one short video. I’ll try to refine it through more videos and writing in the next weeks. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "The video is uncommented. So here’s a summary of noteworthy things:",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "There are workspaces, blocks and wires. It’s like nodes & wires, but with strict layout and user interfaces in mind."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "This doesn’t try to replace code, but makes working with code easier.  "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Programming (dealing with data and organizing chunks of code) can be done visually."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Copy & Paste as first-class citizen → Code becomes tangible"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "By visualising and showing data, it reduces the mental overhead of keeping state and data in my head."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Wires are a tool, not a necessity (in theory, a workspace could have a single self-contained block and no wires at all)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Instead of  needing to wire up every input, blocks can define their own inputs through inspectors or by providing their own UI – some blocks allow both: external inputs and UI"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Blocks can have high levels of abstraction (no need to create blocks to do something easy like "
                                    },
                                    {
                                        "type": "text",
                                        "text": "a+b",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ")"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Wires can be hidden and the program still makes sense because there is always some layout, user interface, …"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Various mechanisms for abstraction (wire up something, then copy the resulting block elsewhere), collapse blocks to hide data\/UI, combine low level blocks (many inputs) into larger blocks (few inputs)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "offset": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/vimeo.com\/573378340",
                                "text": "https:\/\/vimeo.com\/573378340"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0139HUPMQ9",
                    "U013ZLJARC7",
                    "U013HU44GLS",
                    "UMVFWPZ36",
                    "U01A0KANUUU",
                    "U013866H7LY",
                    "UHWC9PXBL"
                ],
                "count": 7
            },
            {
                "name": "exploding_head",
                "users": [
                    "UC2A2ARPT",
                    "U018HK8QM2R",
                    "U01MYN7ECR3",
                    "UJ6LDMMN0"
                ],
                "count": 4
            },
            {
                "name": "tada",
                "users": [
                    "U018HK8QM2R",
                    "UA14TGLTC",
                    "U01MYN7ECR3"
                ],
                "count": 3
            },
            {
                "name": "100",
                "users": [
                    "USJ9LD0E4"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1625936020.065800",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1625936205.000000"
        },
        "client_msg_id": "e5067ad3-1ec6-47b2-a8a6-777c52eaea18",
        "text": "Holy shit! This looks like a promising start.\n\nI like that you've picked a specific spot in the conceptual space for this to sit — in between existing code and existing data, to make working with both better. I can see this being a really powerful alternative to something like Paw \/ Postman, and a good tool for building integration tests. I'll be keen to see what you use it for, and how you choose to refine it as you go.\n\nWhat sort of feedback are you looking for at this point, if any? What sorts of questions should we be asking?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625925873.065000",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oLf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Holy shit! This looks like a promising start.\n\nI like that you've picked a specific spot in the conceptual space for this to sit — in between existing code and existing data, to make working with both better. I can see this being a really powerful alternative to something like Paw \/ Postman, and a good tool for building integration tests. I'll be keen to see what you use it for, and how you choose to refine it as you go.\n\nWhat sort of feedback are you looking for at this point, if any? What sorts of questions should we be asking?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01R76LELBT",
        "type": "message",
        "ts": "1625936268.067500",
        "edited": {
            "user": "U01R76LELBT",
            "ts": "1625937138.000000"
        },
        "client_msg_id": "32FBE62C-4586-48E3-B0E7-5EFABD2F0AA2",
        "text": "I wrote a little bit of code to simplify a workflow so I would know what I’ve processed already and what has yet to be processed! I don’t want it to be the case that every time I move things from my personal vault into my shared vault, I have to reprocess everything. \n\nI’m feeling pretty proud of myself because I’m learning to code and I successfully executed on a practical personal project\n\n<https:\/\/twitter.com\/roberthaisfield\/status\/1413561614431789061?s=21|https:\/\/twitter.com\/roberthaisfield\/status\/1413561614431789061?s=21>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9751078823a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-10\/1846261486882_9751078823a2ecfe91c4_72.jpg",
            "first_name": "Rob",
            "real_name": "Rob Haisfield",
            "display_name": "Rob Haisfield",
            "team": "T5TCAFTA9",
            "name": "rob969",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625936268.067500",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1625936607.068100",
        "reply_users": [
            "UC2A2ARPT"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1625936607.068100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/RobertHaisfield|@RobertHaisfield>: .<https:\/\/twitter.com\/JoelChan86|@JoelChan86> and I are working on a research project in a shared Obsidian vault. Two things we keep track of are our claims and questions. I have my own vault where I write out messier notes (but still track claims and questions), but then I process them into our shared vault.",
                "ts": 1625854326,
                "author_name": "Robert Haisfield",
                "author_link": "https:\/\/twitter.com\/RobertHaisfield\/status\/1413561614431789061",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1366539177618120704\/Bvsro76e_normal.jpg",
                "author_subname": "@RobertHaisfield",
                "text": ".<https:\/\/twitter.com\/JoelChan86|@JoelChan86> and I are working on a research project in a shared Obsidian vault. Two things we keep track of are our claims and questions. I have my own vault where I write out messier notes (but still track claims and questions), but then I process them into our shared vault.",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/roberthaisfield\/status\/1413561614431789061?s=21",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/roberthaisfield\/status\/1413561614431789061?s=21",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V=ZM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wrote a little bit of code to simplify a workflow so I would know what I’ve processed already and what has yet to be processed! I don’t want it to be the case that every time I move things from my personal vault into my shared vault, I have to reprocess everything. \n\nI’m feeling pretty proud of myself because I’m learning to code and I successfully executed on a practical personal project\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/roberthaisfield\/status\/1413561614431789061?s=21",
                                "text": "https:\/\/twitter.com\/roberthaisfield\/status\/1413561614431789061?s=21"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1625936607.068100",
        "client_msg_id": "bbe7c356-70f6-4bb1-8c50-1ea31412482b",
        "text": "[Moved from top level, original post by <@U01R76LELBT>]\n\n<https:\/\/twitter.com\/roberthaisfield\/status\/1413561714205888514?s=21>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625936268.067500",
        "parent_user_id": "U01R76LELBT",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/RobertHaisfield|@RobertHaisfield>: So I wrote a bit of Clojure. Each time I process notes, I paste the results of the search into an Excel row. The code compares the last two rows to find the elements that were added since the last time I processed the search. Each sheet in the workbook is named after the search <https:\/\/pbs.twimg.com\/media\/E5361xjVkAEHyUM.jpg>",
                "ts": 1625854350,
                "author_name": "Robert Haisfield",
                "author_link": "https:\/\/twitter.com\/RobertHaisfield\/status\/1413561714205888514",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1366539177618120704\/Bvsro76e_normal.jpg",
                "author_subname": "@RobertHaisfield",
                "text": "So I wrote a bit of Clojure. Each time I process notes, I paste the results of the search into an Excel row. The code compares the last two rows to find the elements that were added since the last time I processed the search. Each sheet in the workbook is named after the search <https:\/\/pbs.twimg.com\/media\/E5361xjVkAEHyUM.jpg>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/roberthaisfield\/status\/1413561714205888514?s=21",
                "image_url": "https:\/\/pbs.twimg.com\/media\/E5361xjVkAEHyUM.jpg",
                "image_width": 1199,
                "image_height": 738,
                "image_bytes": 73444,
                "id": 1,
                "original_url": "https:\/\/twitter.com\/roberthaisfield\/status\/1413561714205888514?s=21",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            },
            {
                "text": "<https:\/\/pbs.twimg.com\/media\/E5361xiUYAAmM8i.jpg>",
                "image_url": "https:\/\/pbs.twimg.com\/media\/E5361xiUYAAmM8i.jpg",
                "image_width": 1199,
                "image_height": 702,
                "image_bytes": 88555,
                "id": 2
            },
            {
                "text": "<https:\/\/pbs.twimg.com\/media\/E5361xhVEAk5qt6.jpg>",
                "image_url": "https:\/\/pbs.twimg.com\/media\/E5361xhVEAk5qt6.jpg",
                "image_width": 1054,
                "image_height": 116,
                "image_bytes": 19245,
                "id": 3
            },
            {
                "text": "<https:\/\/pbs.twimg.com\/media\/E5361xhVIAA9XFO.jpg>",
                "image_url": "https:\/\/pbs.twimg.com\/media\/E5361xhVIAA9XFO.jpg",
                "image_width": 356,
                "image_height": 1062,
                "image_bytes": 16535,
                "id": 4
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dGj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Moved from top level, original post by "
                            },
                            {
                                "type": "user",
                                "user_id": "U01R76LELBT"
                            },
                            {
                                "type": "text",
                                "text": "]\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/roberthaisfield\/status\/1413561714205888514?s=21"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1625943406.070300",
        "client_msg_id": "68962887-5401-46c6-8b96-61db57e8ff69",
        "text": "Continuing my experiments with wiring up the audio graph visually.  I'm prototyping mostly, trying to decide what is worth doing.  I haven't had much opportunity to work on this, so progress is slow, and I'm still trying to decide what I actually want!\n<https:\/\/youtu.be\/f3J0dyniX6k>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625943406.070300",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1626374613.074900",
        "reply_users": [
            "UUQ2EQW21",
            "U01ULEWACPP",
            "UE0H4170F"
        ],
        "replies": [
            {
                "user": "UUQ2EQW21",
                "ts": "1625943460.070500"
            },
            {
                "user": "U01ULEWACPP",
                "ts": "1626011072.071600"
            },
            {
                "user": "UE0H4170F",
                "ts": "1626374233.074700"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1626374613.074900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Box &amp; Wire Synth",
                "title_link": "https:\/\/youtu.be\/f3J0dyniX6k",
                "author_name": "Christopher Maughan",
                "author_link": "https:\/\/www.youtube.com\/user\/mornycmorny",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/f3J0dyniX6k\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Box & Wire Synth",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/f3J0dyniX6k?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/f3J0dyniX6k",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/f3J0dyniX6k"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AywT7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Continuing my experiments with wiring up the audio graph visually.  I'm prototyping mostly, trying to decide what is worth doing.  I haven't had much opportunity to work on this, so progress is slow, and I'm still trying to decide what I actually want!\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/f3J0dyniX6k"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "U013HU44GLS"
                ],
                "count": 2
            },
            {
                "name": "sunglasses",
                "users": [
                    "U0123H7JRDM",
                    "UJ6LDMMN0",
                    "U85HCL7JP"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1625943460.070500",
        "client_msg_id": "6acbb71a-e601-4378-8a72-9995fffad8de",
        "text": "It might be fun to show the FFT on the wires instead of the audio signal; I could totally do that, but it probably wouldn't be practical for complex graphs.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625943406.070300",
        "parent_user_id": "UUQ2EQW21",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=QG4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It might be fun to show the FFT on the wires instead of the audio signal; I could totally do that, but it probably wouldn't be practical for complex graphs."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1625945253.070700",
        "client_msg_id": "7e260dcc-2e9d-4cd6-96b6-24b98863abe1",
        "text": "Ha, Paw\/Postman are good references.\n\nFetching data, extracting parts of it and listing results are common tasks when building apps (aren’t the majority of apps just lists?), which is why some of my first blocks were for data fetching, extracting and listing API results. With Ratio, I want to be able to move fluently from looking at data to the next step which is manipulating and rendering the data in a user interface. The interesting part is that I can build up a Mini-Paw, mess with the API\/Data and once finished, can move on.\n\nBesides lists, I’ve been working with HTML and CSS parsers, building AST explorers \/ editors on top, eventually moving on to more visual design\/dev tools. Incrementally progressing. The goal is to have useful tools at any time. Starting with raw code, followed by simple structure editors, onto more specialized UIs.\n\nI’ve also built personal apps: time tracker, notes, todo list, reading list, … only to realize that this is becoming an user-programmable operating system. :sweat_smile:\n\nI’m currently not looking for specific feedback on the UI as I’m trying to focus on the bigger conceptual ideas.\n\nMaybe some questions in return:\n\n• What general questions do you have?\n• What would you like to see me build as a proof of concept?\n• Where do you think this approach might fall short?\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625925873.065000",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Eep",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ha, Paw\/Postman are good references.\n\nFetching data, extracting parts of it and listing results are common tasks when building apps (aren’t the majority of apps just lists?), which is why some of my first blocks were for data fetching, extracting and listing API results. With Ratio, I want to be able to move fluently from looking at data to the next step which is manipulating and rendering the data in a user interface. The interesting part is that I can build up a Mini-Paw, mess with the API\/Data and once finished, can move on.\n\nBesides lists, I’ve been working with HTML and CSS parsers, building AST explorers \/ editors on top, eventually moving on to more visual design\/dev tools. Incrementally progressing. The goal is to have useful tools at any time. Starting with raw code, followed by simple structure editors, onto more specialized UIs.\n\nI’ve also built personal apps: time tracker, notes, todo list, reading list, … only to realize that this is becoming an user-programmable operating system. "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI’m currently not looking for specific feedback on the UI as I’m trying to focus on the bigger conceptual ideas.\n\nMaybe some questions in return:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "What general questions do you have?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "What would you like to see me build as a proof of concept?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Where do you think this approach might fall short?"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    }
]