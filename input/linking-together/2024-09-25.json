[
    {
        "text": "If you want to go in all four directions (like down, right, and then up) you'll need to have a four-ways infinite tree, like the diagram shown here of the free group on two generators.\n\nI don't know if this is relevant to what you're getting at, cuz I don't know what you're getting at.",
        "files": [
            {
                "id": "F07NY6LM690",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UBKNXPBAB",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WtN4D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you want to go in all four directions (like down, right, and then up) you'll need to have a four-ways infinite tree, like the diagram shown here of the free group on two generators.\n\nI don't know if this is relevant to what you're getting at, cuz I don't know what you're getting at."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1727251595.837229",
        "client_msg_id": "25cd777b-764a-4857-a72a-ed677a0cc0a8",
        "thread_ts": "1727247298.811129",
        "parent_user_id": "UFPRPSA4S",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "U05UK5T7LPP",
                    "U05M5A8E0NT"
                ],
                "count": 2
            },
            {
                "name": "bulb",
                "users": [
                    "UFPRPSA4S"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U07CGRNH6S2",
        "type": "message",
        "ts": "1727273410.894979",
        "client_msg_id": "6a640140-e1e8-495e-a18d-33c6207ba7ab",
        "text": "What would be a simple and real example of this?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdd63ba2bec5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/dd63ba2bec5f7ecc9f23801caf0ace88.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "Jari",
            "real_name": "Jari",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mr.jari.kuusisto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727247298.811129",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FM9n9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What would be a simple and real example of this?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04Q53X6P7W",
        "type": "message",
        "ts": "1727285050.699829",
        "client_msg_id": "10D118FF-4825-42A5-9C36-C0AAE0D561F2",
        "text": "Oh hey that’s me",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "402a5ff55c77",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-07-05\/5533188035202_402a5ff55c77365d5465_72.jpg",
            "first_name": "Alexander",
            "real_name": "Alexander Bandukwala",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "alexander",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722014456.469799",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XP7M8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh hey "
                            },
                            {
                                "type": "text",
                                "text": "that’s"
                            },
                            {
                                "type": "text",
                                "text": " me"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U05UK5T7LPP",
        "type": "message",
        "ts": "1727287101.819389",
        "client_msg_id": "d455a184-ca49-4000-b3f0-61e89737a04d",
        "text": "Oh rad, I see why it's the free monoid, since the parse tree is built up by concatenation (no inverse required).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87f45e326f3a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-30\/5997119242352_87f45e326f3a692ca55c_72.png",
            "first_name": "Jasmine",
            "real_name": "Jasmine Otto",
            "display_name": "Jasmine Otto",
            "team": "T5TCAFTA9",
            "name": "ottojasmine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727247298.811129",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FmIqB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh rad, I see why it's the free monoid, since the parse tree is built up by concatenation (no inverse required)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05UK5T7LPP",
        "type": "message",
        "ts": "1727289035.179019",
        "client_msg_id": "99000b61-b197-4daf-a605-a45814e81ff4",
        "text": "I agree that there's a few different thesis statements here that have accreted over time and are now duking it out. I like the claim that parse trees are readily represented by spreadsheets, if only we throw out commutativity.\n\nFor my part, I'd like the tree itself to work as a paper tool, e.g. if I'm authoring a generative grammar in a Tracery-style IDE with progressive disclosure. <https:\/\/artbot.club\/> is playing with these ideas, but I hit overwhelm much faster than I would in a (non)commutative spreadsheet.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87f45e326f3a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-30\/5997119242352_87f45e326f3a692ca55c_72.png",
            "first_name": "Jasmine",
            "real_name": "Jasmine Otto",
            "display_name": "Jasmine Otto",
            "team": "T5TCAFTA9",
            "name": "ottojasmine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727247298.811129",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q3mDG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree that there's a few different thesis statements here that have accreted over time and are now duking it out. I like the claim that parse trees are readily represented by spreadsheets, if only we throw out commutativity.\n\nFor my part, I'd like the tree itself to work as a paper tool, e.g. if I'm authoring a generative grammar in a Tracery-style IDE with progressive disclosure. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/artbot.club\/"
                            },
                            {
                                "type": "text",
                                "text": " is playing with these ideas, but I hit overwhelm much faster than I would in a (non)commutative spreadsheet."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1727294460.365299",
        "client_msg_id": "da3487dd-03e7-4481-9ed6-1703fca60d3c",
        "text": "I created a wiki page about <https:\/\/wiki.futureofcoding.org\/Propagators\/|Propagators> any resource you would add? Do you know of related ideas?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727294460.365299",
        "reply_count": 7,
        "reply_users_count": 5,
        "latest_reply": "1727355489.576509",
        "reply_users": [
            "U03R0B9U1GD",
            "U0378MDUG1Y",
            "U06BUK2M2RH",
            "U02PUDETGRW",
            "UBN9AFS0N"
        ],
        "replies": [
            {
                "user": "U03R0B9U1GD",
                "ts": "1727297038.698439"
            },
            {
                "user": "U0378MDUG1Y",
                "ts": "1727306287.764839"
            },
            {
                "user": "U0378MDUG1Y",
                "ts": "1727306362.463589"
            },
            {
                "user": "U06BUK2M2RH",
                "ts": "1727308688.988659"
            },
            {
                "user": "U06BUK2M2RH",
                "ts": "1727308758.096799"
            },
            {
                "user": "U02PUDETGRW",
                "ts": "1727334869.513839"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1727355489.576509"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hm8rG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I created a wiki page about "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/wiki.futureofcoding.org\/Propagators\/",
                                "text": "Propagators"
                            },
                            {
                                "type": "text",
                                "text": " any resource you would add? Do you know of related ideas?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U05UK5T7LPP",
                    "U06BUK2M2RH",
                    "U013ZLJARC7",
                    "UFPRPSA4S",
                    "UJBAJNFLK",
                    "UA14TGLTC"
                ],
                "count": 7
            }
        ]
    },
    {
        "user": "U03R0B9U1GD",
        "type": "message",
        "ts": "1727297038.698439",
        "client_msg_id": "e6c69bd8-6d5a-45d5-b832-6c82ac7d860b",
        "text": "do scoped propagators count?\n<https:\/\/www.orionreed.com\/posts\/scoped-propagators|https:\/\/www.orionreed.com\/posts\/scoped-propagators>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "78c476adad42",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-26\/3992499177765_78c476adad42ab6cfe32_72.png",
            "first_name": "Lu",
            "real_name": "Lu Wilson",
            "display_name": "TodePond",
            "team": "T5TCAFTA9",
            "name": "l2wilson94",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727294460.365299",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "image_url": "https:\/\/www.orionreed.com\/website-embed.png",
                "image_width": 800,
                "image_height": 418,
                "image_bytes": 28423,
                "from_url": "https:\/\/www.orionreed.com\/posts\/scoped-propagators",
                "service_icon": "https:\/\/www.orionreed.com\/favicon.ico?v=4",
                "id": 1,
                "original_url": "https:\/\/www.orionreed.com\/posts\/scoped-propagators",
                "fallback": "Orion Reed",
                "text": "My research investigates the intersection of computing, human-system interfaces, and emancipatory politics. I am interested in the potential of computing as a medium for thought, as a tool for collective action, and as a means of emancipation.",
                "title": "Orion Reed",
                "title_link": "https:\/\/www.orionreed.com\/posts\/scoped-propagators",
                "service_name": "orionreed.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FVg6T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "do scoped propagators count?\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.orionreed.com\/posts\/scoped-propagators",
                                "text": "https:\/\/www.orionreed.com\/posts\/scoped-propagators"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1727306287.764839",
        "client_msg_id": "795E0719-0179-4F9A-AA6B-39F089662842",
        "text": "Cc <@U06BUK2M2RH> ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1092a4f97098",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-23\/3286745266387_1092a4f970985ebc8d2b_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Shank",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chris.shank.23",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727294460.365299",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dvUiV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cc "
                            },
                            {
                                "type": "user",
                                "user_id": "U06BUK2M2RH"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1727306362.463589",
        "client_msg_id": "275123A8-3F2D-4B3E-96A4-3B22E71ED431",
        "text": "Dennis is working on a propagator network project called holograph \n\n<https:\/\/futureofcoding.slack.com\/archives\/C03RR0W5DGC\/p1722025110960059|https:\/\/futureofcoding.slack.com\/archives\/C03RR0W5DGC\/p1722025110960059>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1092a4f97098",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-23\/3286745266387_1092a4f970985ebc8d2b_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Shank",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chris.shank.23",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727294460.365299",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C03RR0W5DGC\/p1722025110960059",
                "ts": "1722025110.960059",
                "author_id": "U06BUK2M2RH",
                "channel_id": "C03RR0W5DGC",
                "channel_team": "T5TCAFTA9",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T5TCAFTA9",
                        "channel": "C03RR0W5DGC",
                        "ts": "1722025110.960059",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "y435Y",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "Hello- little update on "
                                                },
                                                {
                                                    "type": "link",
                                                    "url": "http:\/\/www.holograph.so",
                                                    "text": "www.holograph.so"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": " - formerly known as the "
                                                },
                                                {
                                                    "type": "link",
                                                    "url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1716413598853019",
                                                    "text": "propagator simulator"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "- I am working on performance had had the nerdiest proud moment ever and figured of all people, ya'll would appreciate it.\n\nI built a propagation speed profiler in holograph to test how fast propagation was occurring for a little recursively incrementing loop (in the grey box). Im using a buffer to collect and average the values over time and another buffer to collect and display averages as a chart. You can see the propagation speed and compare it with the total Propagations Per Second (PPS in the top left). Before this work i was at a hard cap of 60 pps and now total pps often gets over 300. Still a long road ahead but it feels like a big win right now "
                                                },
                                                {
                                                    "type": "emoji",
                                                    "name": "tada",
                                                    "unicode": "1f389"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "\n\nIn any case, this example demonstrates major stuff added since my first post here:\n"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "rich_text_list",
                                            "elements": [
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "Get and set shape properties"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "Trigger click events"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "Dashed arrows that don't fire propagators"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "Async functions\/fetch\/await syntax"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "Lots of cool examples to explore- including some made my folk here :)"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "style": "bullet",
                                            "indent": 0,
                                            "offset": 0,
                                            "border": 0
                                        },
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "\nHope ya'll enjoyed the update! If ya'll find anything wonky or have ideas let me know !"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "files": [
                    {
                        "id": "F07ECFZPEJG",
                        "created": 1722024135,
                        "timestamp": 1722024135,
                        "user": "U06BUK2M2RH",
                        "is_hidden_by_limit": 1
                    }
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C03RR0W5DGC\/p1722025110960059",
                "fallback": "[July 26th, 2024 1:18 PM] dhansen909: Hello- little update on <http:\/\/www.holograph.so|www.holograph.so> - formerly known as the <https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1716413598853019|propagator simulator>- I am working on performance had had the nerdiest proud moment ever and figured of all people, ya'll would appreciate it.\n\nI built a propagation speed profiler in holograph to test how fast propagation was occurring for a little recursively incrementing loop (in the grey box). Im using a buffer to collect and average the values over time and another buffer to collect and display averages as a chart. You can see the propagation speed and compare it with the total Propagations Per Second (PPS in the top left). Before this work i was at a hard cap of 60 pps and now total pps often gets over 300. Still a long road ahead but it feels like a big win right now :tada:\n\nIn any case, this example demonstrates major stuff added since my first post here:\n• Get and set shape properties\n• Trigger click events\n• Dashed arrows that don't fire propagators\n• Async functions\/fetch\/await syntax\n• Lots of cool examples to explore- including some made my folk here :)\nHope ya'll enjoyed the update! If ya'll find anything wonky or have ideas let me know !",
                "text": "Hello- little update on <http:\/\/www.holograph.so|www.holograph.so> - formerly known as the <https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1716413598853019|propagator simulator>- I am working on performance had had the nerdiest proud moment ever and figured of all people, ya'll would appreciate it.\n\nI built a propagation speed profiler in holograph to test how fast propagation was occurring for a little recursively incrementing loop (in the grey box). Im using a buffer to collect and average the values over time and another buffer to collect and display averages as a chart. You can see the propagation speed and compare it with the total Propagations Per Second (PPS in the top left). Before this work i was at a hard cap of 60 pps and now total pps often gets over 300. Still a long road ahead but it feels like a big win right now :tada:\n\nIn any case, this example demonstrates major stuff added since my first post here:\n• Get and set shape properties\n• Trigger click events\n• Dashed arrows that don't fire propagators\n• Async functions\/fetch\/await syntax\n• Lots of cool examples to explore- including some made my folk here :)\nHope ya'll enjoyed the update! If ya'll find anything wonky or have ideas let me know !",
                "author_name": "Dennis Hansen",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/U06BUK2M2RH",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2023-12-28\/6396121022742_9eac202d45a2827e9fa6_48.jpg",
                "author_subname": "Dennis Hansen",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vSv6h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Dennis is working on a propagator network project called holograph \n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C03RR0W5DGC\/p1722025110960059",
                                "text": "https:\/\/futureofcoding.slack.com\/archives\/C03RR0W5DGC\/p1722025110960059"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U06BUK2M2RH"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U06BUK2M2RH",
        "type": "message",
        "ts": "1727308688.988659",
        "client_msg_id": "9AD1293A-A460-44BE-BF15-447514FA7C72",
        "text": "Thanks for the mention <@U0378MDUG1Y> . Also Edward Kmett did a Haskell implementation  <https:\/\/github.com\/ekmett\/propagators|https:\/\/github.com\/ekmett\/propagators>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9eac202d45a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-28\/6396121022742_9eac202d45a2827e9fa6_72.jpg",
            "first_name": "Dennis",
            "real_name": "Dennis Hansen",
            "display_name": "Dennis Hansen",
            "team": "T5TCAFTA9",
            "name": "dhansen909",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727294460.365299",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kcuiT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the mention "
                            },
                            {
                                "type": "user",
                                "user_id": "U0378MDUG1Y"
                            },
                            {
                                "type": "text",
                                "text": " . Also Edward Kmett did a Haskell implementation  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/ekmett\/propagators",
                                "text": "https:\/\/github.com\/ekmett\/propagators"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06BUK2M2RH",
        "type": "message",
        "ts": "1727308758.096799",
        "client_msg_id": "F474BA1F-5DC9-4EC7-B243-FF9B2B10C4B0",
        "text": "Also this was great <https:\/\/youtu.be\/JXOOO9MLvhs?si=uNEe547eGFaAjVDp|https:\/\/youtu.be\/JXOOO9MLvhs?si=uNEe547eGFaAjVDp>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9eac202d45a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-28\/6396121022742_9eac202d45a2827e9fa6_72.jpg",
            "first_name": "Dennis",
            "real_name": "Dennis Hansen",
            "display_name": "Dennis Hansen",
            "team": "T5TCAFTA9",
            "name": "dhansen909",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727294460.365299",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "from_url": "https:\/\/youtu.be\/JXOOO9MLvhs?si=uNEe547eGFaAjVDp",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/JXOOO9MLvhs\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/JXOOO9MLvhs?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen title=\"Thomas Kristensen - Propagators in Clojure\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https:\/\/youtu.be\/JXOOO9MLvhs?si=uNEe547eGFaAjVDp",
                "fallback": "YouTube Video: Thomas Kristensen - Propagators in Clojure",
                "title": "Thomas Kristensen - Propagators in Clojure",
                "title_link": "https:\/\/youtu.be\/JXOOO9MLvhs?si=uNEe547eGFaAjVDp",
                "author_name": "ClojureTV",
                "author_link": "https:\/\/www.youtube.com\/@ClojureTV",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yvhlr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also this was great "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/JXOOO9MLvhs?si=uNEe547eGFaAjVDp",
                                "text": "https:\/\/youtu.be\/JXOOO9MLvhs?si=uNEe547eGFaAjVDp"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06BUK2M2RH",
        "type": "message",
        "ts": "1727309264.152129",
        "client_msg_id": "C00925B6-A93F-420C-B049-D5BDC3799AD9",
        "text": "Yep good observation <@UJBAJNFLK>- I haven’t run into major issues with precision so haven’t solved it yet but but as it becomes problematic i suspect I can utilize fractions-based data structures or employ heuristics to stop oscillations as needed. Not too sure yet.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9eac202d45a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-28\/6396121022742_9eac202d45a2827e9fa6_72.jpg",
            "first_name": "Dennis",
            "real_name": "Dennis Hansen",
            "display_name": "Dennis Hansen",
            "team": "T5TCAFTA9",
            "name": "dhansen909",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1726587933.655259",
        "parent_user_id": "U05UK5T7LPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i8Cm2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yep good observation "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": "- "
                            },
                            {
                                "type": "text",
                                "text": "I haven’t"
                            },
                            {
                                "type": "text",
                                "text": " run into major issues with precision so "
                            },
                            {
                                "type": "text",
                                "text": "haven’t"
                            },
                            {
                                "type": "text",
                                "text": " solved it yet but but as it becomes problematic i suspect I can utilize fractions-based data structures or employ heuristics to stop oscillations as needed. Not too sure yet."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPRPSA4S",
        "type": "message",
        "ts": "1727315013.354569",
        "client_msg_id": "88f02a8f-7ff1-438d-a63e-594901a0873a",
        "text": "<@UBKNXPBAB> I was trying to avoid 'getting at anything'. I definitely have ideas for what you can do with this kind of a spreadsheet, but I wanted to convey the idea of this kind of a spreadsheet independently.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5f4ac5375e5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f5f4ac5375e539e50ceedb08f65e9dd3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Robin Allison",
            "display_name": "Robin",
            "team": "T5TCAFTA9",
            "name": "robinps2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727247298.811129",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iLytW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBKNXPBAB"
                            },
                            {
                                "type": "text",
                                "text": " I was trying to avoid 'getting at anything'. I definitely have ideas for what you can do with this kind of a spreadsheet, but I wanted to convey the idea of this kind of a spreadsheet independently."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPRPSA4S",
        "type": "message",
        "ts": "1727315556.741189",
        "edited": {
            "user": "UFPRPSA4S",
            "ts": "1727315773.000000"
        },
        "client_msg_id": "bd086449-e39b-4bab-bf9f-cc68e3d66043",
        "text": "But the diagram you included is totally another example of a 'non-abelian' spreadsheet I have in mind. In general you can model a spreadsheet on any monoid* (so the cells of the spreadsheet are the elements of the monoid) and still have relative references. If you take the free group on two generators then it is also a monoid and it can be visualized as that diagram. For fun: if you take the abelian group (Z\/nZ) \\times (Z\/mZ), the corresponding spreadsheet can be visualized on a torus. I don't know why you would ever do that, but I think its kinda amusing.\n(* not 100% sure of this, but it works for a handful)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5f4ac5375e5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f5f4ac5375e539e50ceedb08f65e9dd3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Robin Allison",
            "display_name": "Robin",
            "team": "T5TCAFTA9",
            "name": "robinps2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727247298.811129",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZsrG4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But the diagram you included is totally another example of a 'non-abelian' spreadsheet I have in mind. In general you can model a spreadsheet on any monoid* (so the cells of the spreadsheet are the elements of the monoid) and still have relative references. If you take the free group on two generators then it is also a monoid and it can be visualized as that diagram. For fun: if you take the abelian group (Z\/nZ) \\times (Z\/mZ), the corresponding spreadsheet can be visualized on a torus. I don't know why you would ever do that, but I think its kinda amusing.\n(* not 100% sure of this, but it works for a handful)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPRPSA4S",
        "type": "message",
        "ts": "1727316086.657349",
        "client_msg_id": "2b4f12bc-49aa-4741-8086-eab80591ea98",
        "text": "<@U07CGRNH6S2> The example with (a+b)*c is the closest I have to 'simple and real'.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5f4ac5375e5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f5f4ac5375e539e50ceedb08f65e9dd3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Robin Allison",
            "display_name": "Robin",
            "team": "T5TCAFTA9",
            "name": "robinps2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727247298.811129",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qycrG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U07CGRNH6S2"
                            },
                            {
                                "type": "text",
                                "text": " The example with (a+b)*c is the closest I have to 'simple and real'."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPRPSA4S",
        "type": "message",
        "ts": "1727319046.341889",
        "client_msg_id": "c354dd1f-9122-4384-b04a-e49258619f8e",
        "text": "<@U05UK5T7LPP> Its been a while since I've seen generative grammar stuff. Cool link!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5f4ac5375e5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f5f4ac5375e539e50ceedb08f65e9dd3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Robin Allison",
            "display_name": "Robin",
            "team": "T5TCAFTA9",
            "name": "robinps2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727247298.811129",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7843w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U05UK5T7LPP"
                            },
                            {
                                "type": "text",
                                "text": " Its been a while since I've seen generative grammar stuff. Cool link!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]