[
    {
        "user": "U02RBSADCMS",
        "type": "message",
        "ts": "1644186231.325779",
        "edited": {
            "user": "U02RBSADCMS",
            "ts": "1644186297.000000"
        },
        "client_msg_id": "65639bb4-4d2c-468b-a5be-e21c908f3205",
        "text": "Yes absolutely. It is in many ways similar to functional programming, but I'd say it is \"looser\" as you don't get this strict hierarchy of functions. I suppose it could analogically be called \"equational programming\" as you can often utilize implicit inversion strategies that make natural syntax for things like relational algebra. In fact a big focus has been to unify logic and relational algebra as I find them to be homogenous. \"Union\" being \"or\", while \"intersection\" being \"and\" etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "83ca575f3f7f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-02-01\/3040481020067_83ca575f3f7f1b6f14ce_72.jpg",
            "first_name": "Noah",
            "real_name": "Noah Tell",
            "display_name": "Noah Tell",
            "team": "T5TCAFTA9",
            "name": "noah.tell",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1643739282.862219",
        "parent_user_id": "U02RBSADCMS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yxzI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes absolutely. It is in many ways similar to functional programming, but I'd say it is \"looser\" as you don't get this strict hierarchy of functions. I suppose it could analogically be called \"equational programming\" as you can often utilize implicit inversion strategies that make natural syntax for things like relational algebra. In fact a big focus has been to unify logic and relational algebra as I find them to be homogenous. \"Union\" being \"or\", while \"intersection\" being \"and\" etc."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]