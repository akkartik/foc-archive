[
    {
        "user": "U85MWBKEY",
        "type": "message",
        "ts": "1540147440.000100",
        "edited": {
            "user": "U85MWBKEY",
            "ts": "1540147570.000000"
        },
        "client_msg_id": "54e4a8cd-e1d2-4f57-b2f8-03173d7e01eb",
        "text": "Hey all -- I spent a lot of time the last few months thinking about how to make it easier to connect applications together. I think with the advent of microservices and the abundance of 3rd party APIs for just about everything has created a need to make it easier to automatically connect software.\n\nI wrote up this abstract this morning for a programming language that'd make this easier out of the box -- it's probably not super novel but I thought I'd share. Thanks in advance for feedback. I'm not at all possessive of this idea so feel free to remix the best parts if you want :slightly_smiling_face:  <https:\/\/gist.github.com\/acunniffe\/031caf85261a790b7406e1c0f5658605>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "88eacb7e65ed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-08\/681438296241_88eacb7e65edebc579ab_72.jpg",
            "first_name": "Aidan",
            "real_name": "Aidan Cunniffe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "acunniffe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1540147440.000100",
        "reply_count": 10,
        "reply_users_count": 6,
        "latest_reply": "1540328769.000100",
        "reply_users": [
            "U5TCAFTD3",
            "U85MWBKEY",
            "UCGAK10LS",
            "UC21F8Q48",
            "UDCLT064X",
            "U8A5MS6R1"
        ],
        "replies": [
            {
                "user": "U5TCAFTD3",
                "ts": "1540151189.000100"
            },
            {
                "user": "U85MWBKEY",
                "ts": "1540162680.000100"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1540166399.000100"
            },
            {
                "user": "U85MWBKEY",
                "ts": "1540178534.000100"
            },
            {
                "user": "UC21F8Q48",
                "ts": "1540256832.000100"
            },
            {
                "user": "UC21F8Q48",
                "ts": "1540258111.000100"
            },
            {
                "user": "UDCLT064X",
                "ts": "1540261942.000100"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1540318843.000100"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1540318962.000100"
            },
            {
                "user": "U85MWBKEY",
                "ts": "1540328769.000100"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1540364841.000000",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "80a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey all -- I spent a lot of time the last few months thinking about how to make it easier to connect applications together. I think with the advent of microservices and the abundance of 3rd party APIs for just about everything has created a need to make it easier to automatically connect software.\n\nI wrote up this abstract this morning for a programming language that'd make this easier out of the box -- it's probably not super novel but I thought I'd share. Thanks in advance for feedback. I'm not at all possessive of this idea so feel free to remix the best parts if you want "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/gist.github.com\/acunniffe\/031caf85261a790b7406e1c0f5658605"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCXR52MU2",
                    "UD98CHSLS",
                    "U8A5MS6R1"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1540151189.000100",
        "client_msg_id": "1a0df8fa-6a03-4903-9276-8cfb6ea456ee",
        "text": "I agree with the problem you identify (low level imperitive code) and the solution (higher level declarative abstractions). It's a great point that the documentation spec should serve as the code itself, not an added description. I wonder if an executable spec language already exists to do something similar. It feels similar in spirit to graphQL in some ways",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1540147440.000100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UGcr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree with the problem you identify (low level imperitive code) and the solution (higher level declarative abstractions). It's a great point that the documentation spec should serve as the code itself, not an added description. I wonder if an executable spec language already exists to do something similar. It feels similar in spirit to graphQL in some ways"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U85MWBKEY",
        "type": "message",
        "ts": "1540162680.000100",
        "client_msg_id": "0B21F54A-E826-4AA3-8433-41B78C093BB8",
        "text": "Yeah there are definitely some that create some documentation but it’s not very reliable. \n\nI think the main idea I’d love to see further explored is a compiler that’s behavior changes based on which other project graphs you consume. \n\nI like graphQL in some cases but I feel like there’s still tremendous value in having a simpler strict input\/output structure to an API. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "88eacb7e65ed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-08\/681438296241_88eacb7e65edebc579ab_72.jpg",
            "first_name": "Aidan",
            "real_name": "Aidan Cunniffe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "acunniffe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1540147440.000100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "85MR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah there are definitely some that create some documentation but it’s not very reliable. \n\nI think the main idea I’d love to see further explored is a compiler that’s behavior changes based on which other project graphs you consume. \n\nI like graphQL in some cases but I feel like there’s still tremendous value in having a simpler strict input\/output structure to an API."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1540166399.000100",
        "client_msg_id": "dfe9f98d-10f5-41e9-9b59-b2df6cd6e364",
        "text": "Regarding what’s been done: OpenAPI and AsyncAPI are two projects that provide a language to specify the interface between actors (REST and Pub\/Sub APIs respectively). And researchers of Session Types are investigating how to statically type communications between actors.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1540147440.000100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e6L80",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regarding what’s been done: OpenAPI and AsyncAPI are two projects that provide a language to specify the interface between actors (REST and Pub\/Sub APIs respectively). And researchers of Session Types are investigating how to statically type communications between actors."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U85MWBKEY",
        "type": "message",
        "ts": "1540178534.000100",
        "client_msg_id": "F516887C-F022-41D1-96AE-658574246833",
        "text": "<@UCGAK10LS> Re: session types do you know if they are doing this in a polyglot way? Something like protobuff maybe... ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "88eacb7e65ed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-08\/681438296241_88eacb7e65edebc579ab_72.jpg",
            "first_name": "Aidan",
            "real_name": "Aidan Cunniffe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "acunniffe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1540147440.000100",
        "parent_user_id": "U85MWBKEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U+wr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " Re: session types do you know if they are doing this in a polyglot way? Something like protobuff maybe..."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]