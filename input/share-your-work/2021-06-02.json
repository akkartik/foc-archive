[
    {
        "user": "UFS53UWE5",
        "type": "message",
        "ts": "1622648573.036300",
        "edited": {
            "user": "UFS53UWE5",
            "ts": "1622648788.000000"
        },
        "client_msg_id": "9b681e9c-df25-48aa-b836-24b5f0837771",
        "text": "Hadn't seen this before! I'm also thinking about these exact same problems, but I'm not sure I agree with the solution. Most of the problems you demonstrate in the start of the Handmade Seattle video aren't really problems with the file format, they're problems with the editor interface.\n\nIf you've written an editor to prevent certain classes of errors, you can still write the output of that editor to a textual format. As long as you don't modify that file with other tools, all of your invariants still hold.\n\nOnce you're thinking in this projectional way, you could, for instance, save to a text format that is simplified (removing braces\/other syntax). But I don't see a strong reason to change the underlying format itself. Moving to a binary (or a 'new text') format just sounds like it would obfuscate the actual data, and require an entirely new toolchain to read and manipulate.\n\nThat said, I'm all for that goal if you're fine with it taking many years. :slightly_smiling_face: But it's not just about programming -- it would need to consider all of computing, in some sort of holistic way. It'd be interesting to explore a text-like format with just slightly more structure, but I'm not really sure what that would look like.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a88832bbbfe7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-12\/1359700849458_a88832bbbfe7c26df530_72.jpg",
            "first_name": "John",
            "real_name": "John Austin",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "kleptine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622561472.032400",
        "parent_user_id": "U01TEJCSQ3Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y3N6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hadn't seen this before! I'm also thinking about these exact same problems, but I'm not sure I agree with the solution. Most of the problems you demonstrate in the start of the Handmade Seattle video aren't really problems with the file format, they're problems with the editor interface.\n\nIf you've written an editor to prevent certain classes of errors, you can still write the output of that editor to a textual format. As long as you don't modify that file with other tools, all of your invariants still hold.\n\nOnce you're thinking in this projectional way, you could, for instance, save to a text format that is simplified (removing braces\/other syntax). But I don't see a strong reason to change the underlying format itself. Moving to a binary (or a 'new text') format just sounds like it would obfuscate the actual data, and require an entirely new toolchain to read and manipulate.\n\nThat said, I'm all for that goal if you're fine with it taking many years. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " But it's not just about programming -- it would need to consider all of computing, in some sort of holistic way. It'd be interesting to explore a text-like format with just slightly more structure, but I'm not really sure what that would look like."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01R76LELBT",
        "type": "message",
        "ts": "1622654184.036700",
        "client_msg_id": "2039aed3-5ab5-4fc6-bb71-f524f7adfe64",
        "text": "Could a new syntax be designed if you’re manipulating the structure of the code and not text?\n\nIn Clojure everything is nested parentheses. But could overlapping parentheses be represented in a graphical structural editor that could not be represented with parens in a text file? <https:\/\/twitter.com\/cristianvasquez\/status\/1400111992174698501?s=20>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9751078823a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-10\/1846261486882_9751078823a2ecfe91c4_72.jpg",
            "first_name": "Rob",
            "real_name": "Rob Haisfield",
            "display_name": "Rob Haisfield",
            "team": "T5TCAFTA9",
            "name": "rob969",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622561472.032400",
        "parent_user_id": "U01TEJCSQ3Y",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/cristianvasquez|@cristianvasquez>: <https:\/\/twitter.com\/RobertHaisfield|@RobertHaisfield> Nothing fancy, just overlapping parentheses. Just trying to see what kind of additional information these parentheses could convey <https:\/\/pbs.twimg.com\/media\/E24yb4AXoAAuzep.jpg>",
                "ts": 1622647686,
                "author_name": "Cristian Vasquez",
                "author_link": "https:\/\/twitter.com\/cristianvasquez\/status\/1400111992174698501",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/454624905963642880\/KAYLzhfg_normal.jpeg",
                "author_subname": "@cristianvasquez",
                "text": "<https:\/\/twitter.com\/RobertHaisfield|@RobertHaisfield> Nothing fancy, just overlapping parentheses. Just trying to see what kind of additional information these parentheses could convey <https:\/\/pbs.twimg.com\/media\/E24yb4AXoAAuzep.jpg>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/cristianvasquez\/status\/1400111992174698501?s=20",
                "image_url": "https:\/\/pbs.twimg.com\/media\/E24yb4AXoAAuzep.jpg",
                "image_width": 1200,
                "image_height": 472,
                "image_bytes": 23405,
                "id": 1,
                "original_url": "https:\/\/twitter.com\/cristianvasquez\/status\/1400111992174698501?s=20",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yS8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Could a new syntax be designed if you’re manipulating the structure of the code and not text?\n\nIn Clojure everything is nested parentheses. But could overlapping parentheses be represented in a graphical structural editor that could not be represented with parens in a text file? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/cristianvasquez\/status\/1400111992174698501?s=20"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UC2A2ARPT",
                    "UFS53UWE5"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U01R76LELBT",
        "type": "message",
        "ts": "1622654232.037000",
        "client_msg_id": "31e05833-e93d-4a31-badb-fa4511321d71",
        "text": "Would a purely structural editor sort of file format allow more effective merge operations?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9751078823a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-10\/1846261486882_9751078823a2ecfe91c4_72.jpg",
            "first_name": "Rob",
            "real_name": "Rob Haisfield",
            "display_name": "Rob Haisfield",
            "team": "T5TCAFTA9",
            "name": "rob969",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622561472.032400",
        "parent_user_id": "U01TEJCSQ3Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bX3Pp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would a purely structural editor sort of file format allow more effective merge operations?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFS53UWE5",
        "type": "message",
        "ts": "1622658692.037400",
        "client_msg_id": "dadff174-d1ca-4b6b-afa4-320a084065a1",
        "text": "Yeah, I'd be interested in seeing that direction. And I think that's a good point and example of something that would be hard to represent as text. The editor you presented in the video didn't seem to take advantage of that (or at least not in the first few minutes. :slightly_smiling_face:)\n\nIt'd be cool to see more use cases, though, as I can't immediately think of a reason to have overlapping parenthesis, other than maybe succinctness of variable definition. Moving off text requires reimplementing every tool in the workflow, so you have to find a justification for that cost.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a88832bbbfe7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-12\/1359700849458_a88832bbbfe7c26df530_72.jpg",
            "first_name": "John",
            "real_name": "John Austin",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "kleptine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622561472.032400",
        "parent_user_id": "U01TEJCSQ3Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C86",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I'd be interested in seeing that direction. And I think that's a good point and example of something that would be hard to represent as text. The editor you presented in the video didn't seem to take advantage of that (or at least not in the first few minutes. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": ")\n\nIt'd be cool to see more use cases, though, as I can't immediately think of a reason to have overlapping parenthesis, other than maybe succinctness of variable definition. Moving off text requires reimplementing every tool in the workflow, so you have to find a justification for that cost."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFS53UWE5",
        "type": "message",
        "ts": "1622658775.037600",
        "client_msg_id": "cd927552-7861-4ff5-a0cd-76ad4819c64d",
        "text": "Semantic Merge has been done before, and is perfectly possible with a text-based format. My understanding is it largely hasn't caught on for pragmatic reasons -- building a productive merge tool with semantic information is a big task that doesn't provide too much of a benefit. Not enough to get people to pay for it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a88832bbbfe7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-12\/1359700849458_a88832bbbfe7c26df530_72.jpg",
            "first_name": "John",
            "real_name": "John Austin",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "kleptine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622561472.032400",
        "parent_user_id": "U01TEJCSQ3Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/=Vgv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Semantic Merge has been done before, and is perfectly possible with a text-based format. My understanding is it largely hasn't caught on for pragmatic reasons -- building a productive merge tool with semantic information is a big task that doesn't provide too much of a benefit. Not enough to get people to pay for it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFS53UWE5",
        "type": "message",
        "ts": "1622658837.037800",
        "client_msg_id": "baed7bc6-6544-48df-a229-856d4584c80f",
        "text": "This is all relevant to my interests because I'm building a visual language, but specifically choosing a text-based file format. :slightly_smiling_face: So far I haven't found much that text can't represent.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a88832bbbfe7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-12\/1359700849458_a88832bbbfe7c26df530_72.jpg",
            "first_name": "John",
            "real_name": "John Austin",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "kleptine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622561472.032400",
        "parent_user_id": "U01TEJCSQ3Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ojrY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is all relevant to my interests because I'm building a visual language, but specifically choosing a text-based file format. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " So far I haven't found much that text can't represent."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]