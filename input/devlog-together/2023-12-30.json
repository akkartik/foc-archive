[
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1703938614.561319",
        "client_msg_id": "9CB95EFF-77D1-4521-8B70-BD512138FC50",
        "text": "\nIn this video <https:\/\/youtu.be\/YtDvPAfJ8jE|https:\/\/youtu.be\/YtDvPAfJ8jE> I show an implementation of the quicksort algorithm using my visual programming system and not only that, but also the different steps of the output of the algorithm are visualized using a node tree. \nOne thing I noticed when making these kinds of algorithm flows, that they tend to grow horizontally quickly. So, to help prevent that, I've introduced the concept of \"decorators\" (they are in the \"stacked\" nodes). Decorators can be added before or after node-types that support this. \n\nNow at least flows can also grow vertically a bit more. In the future I also want to be able to combine multiple nodes in a component or grouped node. \n\nThere are currently only 2 decorator types: expressions and sending data to the node-tree. Editing is not yet possible via the editor itself but only directly in the underlying json data of a flow. Also I needed to improve the way scoped variables work with regard to recursive functions, the same for the \"merge\"-node-type. Each node receives a scopeId depending on the scope within it is executed (every call to a function creates a new scope, this scopeId is passed to the function-node which passes it through to its connected nodes and so on).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1703938614.561319",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1703938695.049399",
        "reply_users": [
            "U0123H7JRDM"
        ],
        "replies": [
            {
                "user": "U0123H7JRDM",
                "ts": "1703938695.049399"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/youtu.be\/YtDvPAfJ8jE",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/YtDvPAfJ8jE\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/YtDvPAfJ8jE?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"Quicksort with visualization and decorators build using my own visual programming system\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https:\/\/youtu.be\/YtDvPAfJ8jE",
                "fallback": "YouTube Video: Quicksort with visualization and decorators build using my own visual programming system",
                "title": "Quicksort with visualization and decorators build using my own visual programming system",
                "title_link": "https:\/\/youtu.be\/YtDvPAfJ8jE",
                "author_name": "Maikel van de Lisdonk",
                "author_link": "https:\/\/www.youtube.com\/@maikelvandelisdonk7024",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2qxuy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIn this video "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/YtDvPAfJ8jE",
                                "text": "https:\/\/youtu.be\/YtDvPAfJ8jE"
                            },
                            {
                                "type": "text",
                                "text": " I show an implementation of the quicksort algorithm using my visual programming system and not only that, but also the different steps of the output of the algorithm are visualized using a node tree. \nOne thing I noticed when making these kinds of algorithm flows, that they tend to grow horizontally quickly. So, to help prevent that, I've introduced the concept of \"decorators\" (they are in the \"stacked\" nodes). Decorators can be added before or after node-types that support this. \n\nNow at least flows can also grow vertically a bit more. In the future I also want to be able to combine multiple nodes in a component or grouped node. \n\nThere are currently only 2 decorator types: expressions and sending data to the node-tree. Editing is not yet possible via the editor itself but only directly in the underlying json data of a flow. Also I needed to improve the way scoped variables work with regard to recursive functions, the same for the \"merge\"-node-type. Each node receives a scopeId depending on the scope within it is executed (every call to a function creates a new scope, this scopeId is passed to the function-node which passes it through to its connected nodes and so on)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UMV4B97GT"
                ],
                "count": 2
            }
        ]
    },
    {
        "text": "This is the flow which is in the video: ",
        "files": [
            {
                "id": "F06CBURLPQR",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U0123H7JRDM",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oOYKC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is the flow which is in the video: "
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1703938695.049399",
        "client_msg_id": "8ABDDA9B-DCAA-44F4-8DC4-64FEEC4F1F2F",
        "thread_ts": "1703938614.561319",
        "parent_user_id": "U0123H7JRDM"
    },
    {
        "text": "",
        "files": [
            {
                "id": "F06C2A9TATE",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UCUSW7WVD",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hCn+5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1703971894.149309",
        "client_msg_id": "72b7b2eb-638a-4e67-aad5-673ffb8fb64a",
        "thread_ts": "1703971894.149309",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1704039826.307969",
        "reply_users": [
            "U0123H7JRDM",
            "UCUSW7WVD"
        ],
        "replies": [
            {
                "user": "U0123H7JRDM",
                "ts": "1704036303.709819"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1704039826.307969"
            }
        ],
        "is_locked": false,
        "subscribed": false
    }
]