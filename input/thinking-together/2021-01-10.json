[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1610272062.493100",
        "client_msg_id": "1db89fe6-81f5-43d4-a74b-b5726510de7e",
        "text": "<@UAL7940NM> First of all, your description of the status quo seems correct and complete. As someone trying to help non-techies (also called \"family\") manage their electronic data, I can only confirm that there is no good solution today.\n\nOne aspect I wonder about is the conflation of data storage, data syndication\/synchronization, and backup. There are decent solutions to each aspect, but non for the combination, which is however exactly what matters for end users. It's perhaps the syndication'\/synchronization aspect that is hardest to solve because it is inherently cross-platform and today's tech world is more oriented towards platform domination than cross-platform mediation.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610201089.487900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L=BU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAL7940NM"
                            },
                            {
                                "type": "text",
                                "text": " First of all, your description of the status quo seems correct and complete. As someone trying to help non-techies (also called \"family\") manage their electronic data, I can only confirm that there is no good solution today.\n\nOne aspect I wonder about is the conflation of data storage, data syndication\/synchronization, and backup. There are decent solutions to each aspect, but non for the combination, which is however exactly what matters for end users. It's perhaps the syndication'\/synchronization aspect that is hardest to solve because it is inherently cross-platform and today's tech world is more oriented towards platform domination than cross-platform mediation."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1610286633.493300",
        "client_msg_id": "0ec52d24-fb91-46b2-8c0f-ad7acd1e706c",
        "text": "<@UJBAJNFLK> Thanks!\n\nThat's right. I also noticed that I was mixing synchronization, storage and backup in the post during proofreading. It's pretty hard to distinguish these aspects though. Synchronizing data between devices (when done correctly) also serves as a backup and can improve data availability, regular backups give you history which is also part of many file systems, etc.. Thinking about these aspects from the start will probably lead to a simple solution that performs well on all use-cases.\nSynchronization is indeed a tough problem. I hope that a simple data model and great UX will get me pretty far.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgr端ber",
            "display_name": "Felix Kohlgr端ber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610201089.487900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+UxSH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " Thanks!\n\nThat's right. I also noticed that I was mixing synchronization, storage and backup in the post during proofreading. It's pretty hard to distinguish these aspects though. Synchronizing data between devices (when done correctly) also serves as a backup and can improve data availability, regular backups give you history which is also part of many file systems, etc.. Thinking about these aspects from the start will probably lead to a simple solution that performs well on all use-cases.\nSynchronization is indeed a tough problem. I hope that a simple data model and great UX will get me pretty far."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1610309558.495600",
        "client_msg_id": "9652B37D-ACB8-4340-8ED7-23E02F4F068B",
        "text": "<@UAL7940NM> yeah you hit the nail on the head for the kind of thing i was envisioning. the biggest problem is honestly port forwarding for end users. i think that kind of thing could be prototyped on a raspberry pie and use something like hypercore as the storage engine",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610201089.487900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xFl9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAL7940NM"
                            },
                            {
                                "type": "text",
                                "text": " yeah you hit the nail on the head for the kind of thing i was envisioning. the biggest problem is honestly port forwarding for end users. i think that kind of thing could be prototyped on a raspberry pie and use something like hypercore as the storage engine"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1610312013.495800",
        "client_msg_id": "19c26c14-dc9d-4873-b375-810a849ce1c8",
        "text": "<@UHWC9PXBL> there are a couple of options, upnp, hole punching, etc. I'm not an expert but other p2p software seems to have solved this already. I was thinking of using libp2p (which is for example powering IPFS), but hypercore looks interesting too. I'll check it out, thanks :-)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgr端ber",
            "display_name": "Felix Kohlgr端ber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610201089.487900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rw7H=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " there are a couple of options, upnp, hole punching, etc. I'm not an expert but other p2p software seems to have solved this already. I was thinking of using libp2p (which is for example powering IPFS), but hypercore looks interesting too. I'll check it out, thanks :-)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1610351250.496200",
        "client_msg_id": "9147275b-a987-4ca8-a4cf-5dcdcd76985d",
        "text": "Network configuration is indeed an issue, in particular since it involves routers, over which users sometimes have limited control. On the software side, the best one can do is propose a software distribution with minimal installation\/maintenance effort (something like YunoHost, <https:\/\/yunohost.org\/>). Users then have the options (1) RPi or similar at home, implying router configuration or (2) renting a VPS for hosting. Service providers could then jump in and make (2) a zero-effort approach.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610201089.487900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8M04",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Network configuration is indeed an issue, in particular since it involves routers, over which users sometimes have limited control. On the software side, the best one can do is propose a software distribution with minimal installation\/maintenance effort (something like YunoHost, "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/yunohost.org\/"
                            },
                            {
                                "type": "text",
                                "text": "). Users then have the options (1) RPi or similar at home, implying router configuration or (2) renting a VPS for hosting. Service providers could then jump in and make (2) a zero-effort approach."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]