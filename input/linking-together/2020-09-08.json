[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1599550576.093700",
        "client_msg_id": "115dcd6b-164f-4448-a2b7-efb24e853637",
        "text": "Maybe the focus on the REPL is not the best way to approach the topic of this thread. It's a technicality, a detail of implementation. The more fundamental distinction is that between a programming language and a programming system.\nIn a programming system, there is a system state that includes code and data, and events that update the system state. A particular important type of event is a code update event, but it's just a special case of an instruction sent to the system for updating its internal state. There is no notion of a \"program\" that you could write, compile, and run. A REPL is a tool to send events to the system, but there can be others, and much better ones, as discussed above. Emacs is such a programming system by itself, and it also become a popular user interface to other Lisp-bases systems such as Common Lisp or Clojure. The other well-known family of programming systems is Smalltalk, which pioneered better-than-REPL interfaces to programming systems.\nIn contrast, a programming language is designed to write a program, representing a process that runs inside a larger computing system that is considered outside. The process is seen as primarily self-contained, and interaction with the rest of the system is considered exceptional and must be made explicit using relatively cumbersome techniques (I\/O, shared memory, etc.).\nBoth points of view have good and bad points, and what I'd really like to see is a hybrid: a programming system that permits the creation of well-defined subsystems with well-defined interfaces that can be the subject of contracts, type-checking, sandboxing, etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B6a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe the focus on the REPL is not the best way to approach the topic of this thread. It's a technicality, a detail of implementation. The more fundamental distinction is that between a programming language and a programming system.\nIn a programming system, there is a system state that includes code and data, and events that update the system state. A particular important type of event is a code update event, but it's just a special case of an instruction sent to the system for updating its internal state. There is no notion of a \"program\" that you could write, compile, and run. A REPL is a tool to send events to the system, but there can be others, and much better ones, as discussed above. Emacs is such a programming system by itself, and it also become a popular user interface to other Lisp-bases systems such as Common Lisp or Clojure. The other well-known family of programming systems is Smalltalk, which pioneered better-than-REPL interfaces to programming systems.\nIn contrast, a programming language is designed to write a program, representing a process that runs inside a larger computing system that is considered outside. The process is seen as primarily self-contained, and interaction with the rest of the system is considered exceptional and must be made explicit using relatively cumbersome techniques (I\/O, shared memory, etc.).\nBoth points of view have good and bad points, and what I'd really like to see is a hybrid: a programming system that permits the creation of well-defined subsystems with well-defined interfaces that can be the subject of contracts, type-checking, sandboxing, etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U013ZLJARC7",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1599551607.094000",
        "client_msg_id": "7b3204da-e99a-430f-a9e9-27dcb4f29ce3",
        "text": "<@U5STGTB3J> From my above-linked workflow writeup: \"the keybindings I use to perform these operations are the same for every dynamic language I use, so my process is similar from Clojure to Racket to OCaml to Ruby to Python\". That said, I strongly prefer using a language whose syntax facilitates easy structural operations. An example of this in the case of Lisp-family languages is that with syntax like `(foo (bar 1) (baz 2))` it's trivial to position the cursor after the sub-expression `(bar 1)` and evaluate just that, allowing one to tease apart a larger piece of code in order to test\/understand it. In languages with more complicated syntax that lack clear scope delimiters it's much harder to make a good UX for this.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1Lf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " From my above-linked workflow writeup: \"the keybindings I use to perform these operations are the same for every dynamic language I use, so my process is similar from Clojure to Racket to OCaml to Ruby to Python\". That said, I strongly prefer using a language whose syntax facilitates easy structural operations. An example of this in the case of Lisp-family languages is that with syntax like "
                            },
                            {
                                "type": "text",
                                "text": "(foo (bar 1) (baz 2))",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " it's trivial to position the cursor after the sub-expression "
                            },
                            {
                                "type": "text",
                                "text": "(bar 1)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and evaluate just that, allowing one to tease apart a larger piece of code in order to test\/understand it. In languages with more complicated syntax that lack clear scope delimiters it's much harder to make a good UX for this."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U5STGTB3J",
                    "UJBAJNFLK",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1599551711.094200",
        "edited": {
            "user": "U013ZLJARC7",
            "ts": "1599551747.000000"
        },
        "client_msg_id": "fe644c4a-4243-4b03-a37f-b5e832f50d80",
        "text": "<@UHWC9PXBL> Also, for a very lightweight introduction to this kind of in-place evaluation, you can take a pass through: <https:\/\/www.maria.cloud\/intro>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q=LfI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " Also, for a very lightweight introduction to this kind of in-place evaluation, you can take a pass through: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.maria.cloud\/intro"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1599555082.094800",
        "client_msg_id": "8a924f56-28ba-45f0-826f-1dc31a842208",
        "text": "Back in my day the Lisp image was a source of truth.  When you're done for the day, commit whatever image you're working on back into CSV.  Source files were there to reset parts of the image.  This worked only slightly better than you might expect what with no clean way to merge images.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XQI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Back in my day the Lisp image was a source of truth.  When you're done for the day, commit whatever image you're working on back into CSV.  Source files were there to reset parts of the image.  This worked only slightly better than you might expect what with no clean way to merge images."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1599572976.099300",
        "client_msg_id": "6362134F-9700-4E1E-A314-755AE4777BBC",
        "text": "<@U013ZLJARC7> i did the maria cloud tutorial a little while ago—it’s one of the things that makes me want to be directly interacting with that kind of system in my development work\n\n<@UA14TGLTC> this is pretty much what i want lol",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lW1\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " i did the maria cloud tutorial a little while ago—it’s one of the things that makes me want to be directly interacting with that kind of system in my development work\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " this is pretty much what i want lol"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1599580256.099800",
        "client_msg_id": "4202101d-0ae1-4cb4-a705-aa7c867a4d0d",
        "text": "<@UHWC9PXBL> though we don't keep whole images around these days, we do store whole runs for debugging\/testing\/auditing.  Could work a more smoothly, but there is a direct line from bug report to getting to the same screen on your own development environment.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vUDv4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " though we don't keep whole images around these days, we do store whole runs for debugging\/testing\/auditing.  Could work a more smoothly, but there is a direct line from bug report to getting to the same screen on your own development environment."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599582417.100000",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1599582427.000000"
        },
        "client_msg_id": "a2672729-baeb-4c9f-b044-80d3afe044cf",
        "text": "This from <@U013ZLJARC7>'s nitty-gritty details description is great:\n\n&gt; I resist anything that involves a context change (changing windows\/buffers, copy\/pasting more than absolutely needed, etc) – flow states are sacred.\n(<https:\/\/clojureverse.org\/t\/share-the-nitty-gritty-details-of-your-clojure-workflow\/1208\/8>)\n\nCompare <https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1598741044000700?thread_ts=1598713285.112800&amp;cid=C5U3SEW6A>. It almost sounds like the world that CA and his acolytes were trying to bring to pass may already exist?!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CCEz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This from "
                            },
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": "'s nitty-gritty details description is great:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I resist anything that involves a context change (changing windows\/buffers, copy\/pasting more than absolutely needed, etc) – flow states are sacred."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/clojureverse.org\/t\/share-the-nitty-gritty-details-of-your-clojure-workflow\/1208\/8"
                            },
                            {
                                "type": "text",
                                "text": ")\n\nCompare "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1598741044000700?thread_ts=1598713285.112800&cid=C5U3SEW6A"
                            },
                            {
                                "type": "text",
                                "text": ". It almost sounds like the world that CA and his acolytes were trying to bring to pass may already exist?!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1599582832.101400",
        "client_msg_id": "26A3F99F-B65A-4605-82F2-68CDE81C4384",
        "text": "<https:\/\/youtu.be\/mjVtXfdTZIQ|https:\/\/youtu.be\/mjVtXfdTZIQ> the rebol community is wild. i like this prototype way of building webpages",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Building Rebol Web Apps",
                "title_link": "https:\/\/youtu.be\/mjVtXfdTZIQ",
                "author_name": "Hostile Fork",
                "author_link": "https:\/\/www.youtube.com\/user\/hostilefork",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/mjVtXfdTZIQ\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Building Rebol Web Apps",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/mjVtXfdTZIQ?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/mjVtXfdTZIQ",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/mjVtXfdTZIQ"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3x8e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/mjVtXfdTZIQ",
                                "text": "https:\/\/youtu.be\/mjVtXfdTZIQ"
                            },
                            {
                                "type": "text",
                                "text": " the rebol community is wild. i like this prototype way of building webpages"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "ULK0Z4MPV",
                    "USH01JEDQ",
                    "U018LAH5QCT",
                    "U01A1C2K8MP"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "USH01JEDQ",
        "type": "message",
        "ts": "1599590101.104700",
        "client_msg_id": "5E5F3076-9965-4BB6-9B6B-BC8FC031E159",
        "text": "Roc: a new Elm-derived language for servers, CLIs, desktop UIs, built in Rust, compiles to binary, very alpha rn - talk starts ~1:19:00\nSharing this section of the talk that talks about aspirations for a BVictor-inspired editor that will ship with the language <https:\/\/youtu.be\/ZnYa99QoznE?t=5870|https:\/\/youtu.be\/ZnYa99QoznE?t=5870>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "854f96b690f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-17\/6370745671793_854f96b690f51d1266ee_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Galtenberg",
            "display_name": "Chris G",
            "team": "T5TCAFTA9",
            "name": "galtenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599590101.104700",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1599642790.120900",
        "reply_users": [
            "UEBG0NPDK",
            "UHWC9PXBL",
            "UJ6LDMMN0"
        ],
        "replies": [
            {
                "user": "UEBG0NPDK",
                "ts": "1599593761.108000"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1599593802.108200"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1599594336.109100"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1599642767.120700"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1599642790.120900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "FP Forum Online",
                "title_link": "https:\/\/youtu.be\/ZnYa99QoznE?t=5870",
                "author_name": "Berlin Functional Programming Group",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCNp-DVb8cQRIOo32sZhWgNg",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/ZnYa99QoznE\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: FP Forum Online",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/ZnYa99QoznE?start=5870&feature=oembed&start=5870&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/ZnYa99QoznE?t=5870",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/ZnYa99QoznE?t=5870"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JvKaA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Roc: a new Elm-derived language for servers, CLIs, desktop UIs, built in Rust, compiles to binary, very alpha rn - talk starts ~1:19:00\nSharing this section of the talk that talks about aspirations for a BVictor-inspired editor that will ship with the language "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/ZnYa99QoznE?t=5870",
                                "text": "https:\/\/youtu.be\/ZnYa99QoznE?t=5870"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cool",
                "users": [
                    "UUB7RA7PF",
                    "UUQ2EQW21",
                    "UHWC9PXBL",
                    "UBSMEUXAA",
                    "U013ZLJARC7",
                    "UJ6LDMMN0",
                    "U019CPED6T1"
                ],
                "count": 7
            },
            {
                "name": "+1",
                "users": [
                    "UUQ2EQW21",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1599592790.107800",
        "client_msg_id": "A577976A-2CBD-43A1-A97C-84AFC8C95863",
        "text": "<https:\/\/youtu.be\/R3MNcA2dpts|https:\/\/youtu.be\/R3MNcA2dpts> i really, really like the ux model from this demo of a concatenative programming environment—in particular, how the cursor gives you a live update of the stack and the definition of new words at ~2:40. anyone know of any similar projects?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599592790.107800",
        "reply_count": 18,
        "reply_users_count": 7,
        "latest_reply": "1599984599.150800",
        "reply_users": [
            "U019CPED6T1",
            "UHWC9PXBL",
            "UCUSW7WVD",
            "U013ZLJARC7",
            "UJBAJNFLK",
            "UJ6LDMMN0",
            "UDQBTJ211"
        ],
        "replies": [
            {
                "user": "U019CPED6T1",
                "ts": "1599594230.108500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1599594460.109800"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1599596122.110100"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1599597190.110700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1599597246.112000"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1599597260.112500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1599600619.113300"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1599601611.115500"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1599632090.118000"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1599632574.118200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1599632785.118500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1599634775.118800"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1599637788.119400"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1599643779.121700"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1599660823.122400"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1599663203.123100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1599663865.124200"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1599984599.150800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "\"Brief\" Concatenative Programming Language Demo",
                "title_link": "https:\/\/youtu.be\/R3MNcA2dpts",
                "author_name": "Ashley Feniello",
                "author_link": "https:\/\/www.youtube.com\/user\/AshLeaFen",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/R3MNcA2dpts\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: \"Brief\" Concatenative Programming Language Demo",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/R3MNcA2dpts?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/youtu.be\/R3MNcA2dpts",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/R3MNcA2dpts"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c2MN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/R3MNcA2dpts",
                                "text": "https:\/\/youtu.be\/R3MNcA2dpts"
                            },
                            {
                                "type": "text",
                                "text": " i really, really like the ux model from this demo of a concatenative programming environment—in particular, how the cursor gives you a live update of the stack and the definition of new words at ~2:40. anyone know of any similar projects?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UEBG0NPDK"
                ],
                "count": 1
            },
            {
                "name": "heart_eyes",
                "users": [
                    "ULK0Z4MPV",
                    "UCUSW7WVD",
                    "UJ6LDMMN0",
                    "UFQQ3P867"
                ],
                "count": 4
            },
            {
                "name": "+1",
                "users": [
                    "U016VUZGUUQ",
                    "U013ZLJARC7"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UDQBTJ211"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1599593761.108000",
        "client_msg_id": "75eff38a-187e-44ee-8006-4e445aaab7b6",
        "text": "Once upon a time ago, we talked about that for Light Table as well! <https:\/\/www.chris-granger.com\/2012\/05\/21\/the-future-is-specific\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599590101.104700",
        "parent_user_id": "USH01JEDQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GGD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Once upon a time ago, we talked about that for Light Table as well! "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.chris-granger.com\/2012\/05\/21\/the-future-is-specific\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1599593802.108200",
        "client_msg_id": "53d94fef-1f87-4e6b-bc83-134307793f30",
        "text": "In case the video embed doesn’t work, here’s the video: <https:\/\/vimeo.com\/42595773>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599590101.104700",
        "parent_user_id": "USH01JEDQ",
        "attachments": [
            {
                "service_name": "Vimeo",
                "service_url": "https:\/\/vimeo.com\/",
                "title": "Light Table - The future is specific",
                "title_link": "https:\/\/vimeo.com\/42595773",
                "author_name": "Chris Granger",
                "author_link": "https:\/\/vimeo.com\/user11261775",
                "thumb_url": "https:\/\/i.vimeocdn.com\/video\/295561911_295x166.jpg",
                "thumb_width": 295,
                "thumb_height": 166,
                "text": "The second demo for Light Table, read more here: ",
                "fallback": "Vimeo Video: Light Table - The future is specific",
                "video_html": "<iframe src=\"https:\/\/player.vimeo.com\/video\/42595773?autoplay=1&amp;app_id=122963\" width=\"400\" height=\"225\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen title=\"Light Table - The future is specific\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/vimeo.com\/42595773",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/vimeo.png",
                "id": 1,
                "original_url": "https:\/\/vimeo.com\/42595773"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WLf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In case the video embed doesn’t work, here’s the video: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/vimeo.com\/42595773"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U019CPED6T1",
        "type": "message",
        "ts": "1599594230.108500",
        "client_msg_id": "64ace320-73b9-422b-a4d8-9d7929421fcd",
        "text": "This feels like the same family as loglo which is a stack based spreadsheet programming env\n\n<https:\/\/loglo.app\/2020-06-16\/|https:\/\/loglo.app\/2020-06-16\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa03454e2d2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa03454e2d26593c48c2f67c9fc90534.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Andrew",
            "real_name": "Andrew Carr",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewcarr06",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eq3\/S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This feels like the same family as loglo which is a stack based spreadsheet programming env\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/loglo.app\/2020-06-16\/",
                                "text": "https:\/\/loglo.app\/2020-06-16\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1599594336.109100",
        "client_msg_id": "791AAC8E-6290-43CD-80EC-7C482964B610",
        "text": "talk starts at 1:20:00 if you want more context",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599590101.104700",
        "parent_user_id": "USH01JEDQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D9I3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "talk starts at 1:20:00 if you want more context"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1599594460.109800",
        "client_msg_id": "FACC51A0-DA0B-4100-885E-3DE8D0F13F08",
        "text": "definitely the same family with a wildly different interface",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qq5mn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "definitely the same family with a wildly different interface"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U019CPED6T1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599596122.110100",
        "client_msg_id": "47cd0c3a-b779-4d0c-b1ee-1500ebaf0805",
        "text": "This looks like any implementation of time-travel debugging?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EuF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This looks like any implementation of time-travel debugging?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1599597190.110700",
        "client_msg_id": "6E99E6A0-BAF1-4196-8C57-CD9535BA6567",
        "text": "it’s the coding interface, not the debugging interface",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8aCY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it’s the coding interface, not the debugging interface"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1599597246.112000",
        "client_msg_id": "7B09A828-BDB7-4C2F-BD08-85546FB32AF0",
        "text": "like. direct manipulation of source tokens, and definition of new functions is done by selecting the tokens that you’d like to be the definition and then giving a name",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jDO+8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "like. direct manipulation of source tokens, and definition of new functions is done by selecting the tokens that you’d like to be the definition and then giving a name"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1599597260.112500",
        "client_msg_id": "E78C90B2-AA0E-42C5-9851-F2CC6A46808F",
        "text": "there’s live feedback throughout ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jvLd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there’s live feedback throughout "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599600619.113300",
        "client_msg_id": "6f2f7765-1734-4eaa-840f-77b9296b1f65",
        "text": "Sorry, my question was just about the first of the two features that you pointed out.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JKzOb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry, my question was just about the first of the two features that you pointed out."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1599601611.115500",
        "client_msg_id": "1963D72C-6375-446C-8D76-450DAA7619D1",
        "text": "oh—i guess time-travel debuggers let you “step through” code and place your cursor at it, but i’d say that this is different because the emphasis is on like... editing that timestream directly ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xX4s6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh—i guess time-travel debuggers let you “step through” code and place your cursor at it, but i’d say that this is different because the emphasis is on like... editing that timestream directly "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1599632090.118000",
        "client_msg_id": "4de7ef77-85f5-45d3-88fe-fe4b35bef35d",
        "text": "Some very nice affordances for concatenative programming! Appears abandoned, which is a shame because this deserves further development...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GOYXx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some very nice affordances for concatenative programming! Appears abandoned, which is a shame because this deserves further development..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1599632574.118200",
        "client_msg_id": "b7c0be8e-3aad-4bce-8749-fda2aa865c56",
        "text": "The little exchange between <@UCUSW7WVD> and <@UHWC9PXBL> is telling: we have come to consider the distinction between writing and debugging code as something fundamental. Which I think is mainly the fault of compilers. There's a development style popular with some Smalltalkers, a variant of test-driven development, in which most code is written in the debugger as a \"fix\" to failing tests. There is also a lot of overlap with <@U6KQ2S410>’s work on subtext.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "25eNr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The little exchange between "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " is telling: we have come to consider the distinction between writing and debugging code as something fundamental. Which I think is mainly the fault of compilers. There's a development style popular with some Smalltalkers, a variant of test-driven development, in which most code is written in the debugger as a \"fix\" to failing tests. There is also a lot of overlap with "
                            },
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": "’s work on subtext."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "U013ZLJARC7",
                    "UJ6LDMMN0",
                    "UHWC9PXBL"
                ],
                "count": 4
            },
            {
                "name": "+1",
                "users": [
                    "U01A1C2K8MP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599632785.118500",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1599633073.000000"
        },
        "client_msg_id": "1ee2c2ce-fa92-4aa2-80de-59619a2bdda7",
        "text": "Funny thing was, as I was asking those questions the thing I was really thinking about was <@UBKNXPBAB>'s PANE. It seemed somehow undesirable that the UI here had lots of \"mutation\" going on in the same part of the screen, where \"the PANE way\" would be to show all the states of the stack at once, which feels nice and \"functional\/immutable\". But that property of PANE is also shared by logs if you set them up right. So I \"simplified down\" to time-travel debugging.\n\nBret Victor's \"Magic Ink\" paper makes the same point: just show all the data so it can be just read, rather than requiring operations to see different peepholes of it: <http:\/\/worrydream.com\/MagicInk\/#interactivity_considered_harmful>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S1RR9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Funny thing was, as I was asking those questions the thing I was really thinking about was "
                            },
                            {
                                "type": "user",
                                "user_id": "UBKNXPBAB"
                            },
                            {
                                "type": "text",
                                "text": "'s PANE. It seemed somehow undesirable that the UI here had lots of \"mutation\" going on in the same part of the screen, where \"the PANE way\" would be to show all the states of the stack at once, which feels nice and \"functional\/immutable\". But that property of PANE is also shared by logs if you set them up right. So I \"simplified down\" to time-travel debugging.\n\nBret Victor's \"Magic Ink\" paper makes the same point: just show all the data so it can be just read, rather than requiring operations to see different peepholes of it: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/worrydream.com\/MagicInk\/#interactivity_considered_harmful"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599634775.118800",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1599635113.000000"
        },
        "client_msg_id": "23a66529-5eaa-4d94-9396-44f6f00ac007",
        "text": "I finally got around to finishing the video. Extremely thought-provoking. It's kinda interesting to think of PANE and Brief as two poles with complementary strengths and weaknesses (with LoGlo in the uncanny valley in between)\n\n* PANE shows everything, but it's less dense. A single value is often printed in multiple places on screen. In Brief there's a designated place for showing runtime values, so less real estate is expended on them.\n* Brief shows a stack at the top level, but once definitions are created they get 'reified' into textual definitions. This is nice and dense, but solves just one level of the problem of not making me simulate in my head. I kept waiting for the author to show some way to \"drill down\" into a defined word to visualize how it constructs its intermediate results, but that still seems to be an open problem. It's also a little klunky that there are two ways visually to represent the same expression, one with boxes and the other in plain text.\n* LoGlo seems to have the drawbacks of both. It doesn't have any way to show intermediate stack states, and it also has no way to drill down into intermediate expressions the way PANE does.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9Ip",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I finally got around to finishing the video. Extremely thought-provoking. It's kinda interesting to think of PANE and Brief as two poles with complementary strengths and weaknesses (with LoGlo in the uncanny valley in between)\n\n* PANE shows everything, but it's less dense. A single value is often printed in multiple places on screen. In Brief there's a designated place for showing runtime values, so less real estate is expended on them.\n* Brief shows a stack at the top level, but once definitions are created they get 'reified' into textual definitions. This is nice and dense, but solves just one level of the problem of not making me simulate in my head. I kept waiting for the author to show some way to \"drill down\" into a defined word to visualize how it constructs its intermediate results, but that still seems to be an open problem. It's also a little klunky that there are two ways visually to represent the same expression, one with boxes and the other in plain text.\n* LoGlo seems to have the drawbacks of both. It doesn't have any way to show intermediate stack states, and it also has no way to drill down into intermediate expressions the way PANE does."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    }
]