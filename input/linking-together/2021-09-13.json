[
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1631519059.048800",
        "edited": {
            "user": "UDQBTJ211",
            "ts": "1631519255.000000"
        },
        "client_msg_id": "55f46af7-0b65-472e-af1f-51fe86eb379e",
        "text": "Incredible comment. \n\nI particularly like the point about IDEs not supporting debugging of this kind of programming.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631478171.047200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IZzI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Incredible comment. \n\nI particularly like the point about IDEs not supporting debugging of this kind of programming."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UML4ZEKDK",
                    "UJ6LDMMN0"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1631519213.049000",
        "edited": {
            "user": "UDQBTJ211",
            "ts": "1631519244.000000"
        },
        "client_msg_id": "f51b213f-24e5-4b95-ad5a-9dc2e089cd40",
        "text": "I got flashbacks thinking about the garbage MSVSC gives you because you got one character wrong in your template definition",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631478171.047200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZOV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I got flashbacks thinking about the garbage MSVSC gives you because you got one character wrong in your template definition"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1631519537.049500",
        "edited": {
            "user": "UN57U8V53",
            "ts": "1631519588.000000"
        },
        "client_msg_id": "dd631888-818d-4870-8931-bf9eb6182fe5",
        "text": "In Haskell world, typeclasses could be replaced with two pieces of functionality to avoid an explicit hierarchy and the “tweaking” problem:\n1. Programmers can add a named property (aka “law”) to a set of functions+data\n2. Programmers can make a property “smart” by adding a default implementation for any set of functions *if* it has some other propert(y\/ies)\nThis is easier for IDEs to support than type classes (but doesn’t help the mathiness power dynamics problem)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631478171.047200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ilb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In Haskell world, typeclasses could be replaced with two pieces of functionality to avoid an explicit hierarchy and the “tweaking” problem:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Programmers can add a named property (aka “law”) to a set of functions+data"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Programmers can make a property “smart” by adding a default implementation for any set of functions "
                                    },
                                    {
                                        "type": "text",
                                        "text": "if ",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "it has some other propert(y\/ies)"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis is easier for IDEs to support than type classes (but doesn’t help the mathiness power dynamics problem)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1631522282.049800",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1631522328.000000"
        },
        "client_msg_id": "7d686718-281d-4ab6-8e67-31eff97434c2",
        "text": "To be honest, you just need a good implementation of implicit parameters. That's exactly how type classes are implemented: they are a named collection of functions which are implicitly passed into any appropriately tagged function according to certain resolution rules. Making implicit parameters a language feature gets you 90% of the way there. And no inheritance hierarchies are necessary!\n\nBut this is a digression :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631478171.047200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0sU5f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To be honest, you just need a good implementation of implicit parameters. That's exactly how type classes are implemented: they are a named collection of functions which are implicitly passed into any appropriately tagged function according to certain resolution rules. Making implicit parameters a language feature gets you 90% of the way there. And no inheritance hierarchies are necessary!\n\nBut this is a digression "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4D523HB",
        "type": "message",
        "ts": "1631531239.052000",
        "client_msg_id": "174d19bf-d87d-4df9-a24f-d17cbb032167",
        "text": "Hi folks, I am new to this community but I wanted to share an interview that Ted Kaehler (who worked on both Smalltalk and HyperCard) was kind enough to do with me. I asked him about the two systems and how they relate to users being able to inspect and modify their own software.\n\nSome of his insights that interested me most were about the impact of the HyperCard Help Stack on HyperCard’s design itself, the places he says that Bill Atkinson was right in his different approach from Smalltalk, and how a user builds a drag and drop UI and then says “I’m almost done.”\n\n<https:\/\/codingitwrong.github.io\/empowering\/ted.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8a885add746",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8a885add7469048c3625039f7f9f6545.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "Josh",
            "real_name": "Josh Justice",
            "display_name": "Josh Justice",
            "team": "T5TCAFTA9",
            "name": "josh368",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631531239.052000",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1631545471.055100",
        "reply_users": [
            "UCUSW7WVD",
            "UC2A2ARPT"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1631538929.052700"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1631539615.053100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1631545471.055100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UqU5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi folks, I am new to this community but I wanted to share an interview that Ted Kaehler (who worked on both Smalltalk and HyperCard) was kind enough to do with me. I asked him about the two systems and how they relate to users being able to inspect and modify their own software.\n\nSome of his insights that interested me most were about the impact of the HyperCard Help Stack on HyperCard’s design itself, the places he says that Bill Atkinson was right in his different approach from Smalltalk, and how a user builds a drag and drop UI and then says “I’m almost done.”\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/codingitwrong.github.io\/empowering\/ted.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK",
                    "UCUSW7WVD",
                    "UC2A2ARPT",
                    "U02D8E0Q9GD",
                    "U019PRL1BNU",
                    "USH01JEDQ",
                    "U027P92A0N5",
                    "U01A0KANUUU",
                    "UML4ZEKDK",
                    "U013ZLJARC7",
                    "UJ6LDMMN0",
                    "U0112C10V4Y",
                    "UEQ7QL15F"
                ],
                "count": 13
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1631533044.052400",
        "client_msg_id": "55355f63-af57-45e2-9f51-f7823a0cf9d4",
        "text": "Hierarchies are OK with me - but only emerged or discovered hierarchies, not designed ones. Many successful hierarchies in computing are simply implementations of well-understood mathematical hierarchies, which themselves were discovered rather than designed.\n\nWhat really stood out for me in this comment is debuggability. That's increasingly becoming a main criterion for me in choosing (and, to the small degree I am involved with this, designing) software technology. I am no longer willing to put up with tools and languages that require me to mentally simulate their inner workings.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631478171.047200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0XA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hierarchies are OK with me - but only emerged or discovered hierarchies, not designed ones. Many successful hierarchies in computing are simply implementations of well-understood mathematical hierarchies, which themselves were discovered rather than designed.\n\nWhat really stood out for me in this comment is debuggability. That's increasingly becoming a main criterion for me in choosing (and, to the small degree I am involved with this, designing) software technology. I am no longer willing to put up with tools and languages that require me to mentally simulate their inner workings."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC",
                    "UML4ZEKDK",
                    "U013ZLJARC7"
                ],
                "count": 4
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1631538929.052700",
        "client_msg_id": "5dbee041-f727-458f-921d-b50171ef30cf",
        "text": "&gt; Alan Kay wanted to build a “personal computer for all ages.” Just as writing and music are each a kind of “literacy”, so the ability to build simulations and play with them would be a new literacy. Simulations help a student understand anything that changes over time. The spread of an epidemic or the growth of a forest fire are great examples. Every child should become empowered to do simulations.\n:heart: :heart: This helps with a long-standing question of mine: <https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1613351462087400>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631531239.052000",
        "parent_user_id": "U02E4D523HB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JNF",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Alan Kay wanted to build a “personal computer for all ages.” Just as writing and music are each a kind of “literacy”, so the ability to build simulations and play with them would be a new literacy. Simulations help a student understand anything that changes over time. The spread of an epidemic or the growth of a forest fire are great examples. Every child should become empowered to do simulations."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "emoji",
                                "name": "heart",
                                "unicode": "2764-fe0f"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "heart",
                                "unicode": "2764-fe0f"
                            },
                            {
                                "type": "text",
                                "text": " This helps with a long-standing question of mine: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1613351462087400"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1631539615.053100",
        "client_msg_id": "c9b37229-1a3a-4e34-9e51-766c28633787",
        "text": "&gt; Each version of Smalltalk was created as a simulation in an earlier version Smalltalk. It was particularly easy to make a new functioning class heirarchy along side the existing one. Smalltalk-76 was quite a bit different from ST-74, and it was vital to build one inside of ST-74. New data formats for objects were easy to simulate. Dan Ingalls got as far as running a simulated version of the compiler for ST-76 to verify that it would work once we “crossed the bridge” to the new system.\n:exploding_head:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631531239.052000",
        "parent_user_id": "U02E4D523HB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/c=",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Each version of Smalltalk was created as a simulation in an earlier version Smalltalk. It was particularly easy to make a new functioning class heirarchy along side the existing one. Smalltalk-76 was quite a bit different from ST-74, and it was vital to build one inside of ST-74. New data formats for objects were easy to simulate. Dan Ingalls got as far as running a simulated version of the compiler for ST-76 to verify that it would work once we “crossed the bridge” to the new system."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "emoji",
                                "name": "exploding_head",
                                "unicode": "1f92f"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "exploding_head",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1631540025.053300",
        "client_msg_id": "d5daf0fc-3493-488d-ac5b-7ed5136e4a61",
        "text": "I'm reminded of the Web 2.0 idea of folksonomies as opposed to taxonomies. Looks like this is the origin of the term: <https:\/\/vanderwal.net\/folksonomy.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631478171.047200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cAy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm reminded of the Web 2.0 idea of folksonomies as opposed to taxonomies. Looks like this is the origin of the term: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/vanderwal.net\/folksonomy.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1631543677.053600",
        "client_msg_id": "100f7ff3-e2cb-4ca2-ba4b-70b13c2354db",
        "text": "A Simulator of a Universal Turing Machine (2017) - <https:\/\/www.codeproject.com\/Articles\/1179819\/A-Simulator-of-a-Universal-Turing-Machine|https:\/\/www.codeproject.com\/Articles\/1179819\/A-Simulator-of-a-Universal-Turing-Machine>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631543677.053600",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1631593257.060500",
        "reply_users": [
            "UCUSW7WVD",
            "UPVBV34EL"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1631544633.053800"
            },
            {
                "user": "UPVBV34EL",
                "ts": "1631553768.059200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1631555192.059500"
            },
            {
                "user": "UPVBV34EL",
                "ts": "1631593257.060500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "CodeProject",
                "title": "A Simulator of a Universal Turing Machine",
                "title_link": "https:\/\/www.codeproject.com\/Articles\/1179819\/A-Simulator-of-a-Universal-Turing-Machine",
                "text": "This article describes the implementation and testing of a simulator of a universal Turing machine.",
                "fallback": "CodeProject: A Simulator of a Universal Turing Machine",
                "fields": [
                    {
                        "title": "Written by",
                        "value": "JorgeLuisOrejel",
                        "short": true
                    },
                    {
                        "title": "Reading time",
                        "value": "21 min read",
                        "short": true
                    }
                ],
                "ts": 1490992500,
                "from_url": "https:\/\/www.codeproject.com\/Articles\/1179819\/A-Simulator-of-a-Universal-Turing-Machine",
                "service_icon": "https:\/\/www.codeproject.com\/favicon\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/www.codeproject.com\/Articles\/1179819\/A-Simulator-of-a-Universal-Turing-Machine"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OhK\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A Simulator of a Universal Turing Machine (2017) - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.codeproject.com\/Articles\/1179819\/A-Simulator-of-a-Universal-Turing-Machine",
                                "text": "https:\/\/www.codeproject.com\/Articles\/1179819\/A-Simulator-of-a-Universal-Turing-Machine"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1631544633.053800",
        "client_msg_id": "9c0940f8-5e8d-4cda-a562-f9cb56ebf390",
        "text": "I'm curious to hear more about what aspects of this article you find most interesting. Is there some research agenda that led you to it?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631543677.053600",
        "parent_user_id": "UPVBV34EL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kKa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm curious to hear more about what aspects of this article you find most interesting. Is there some research agenda that led you to it?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1631545471.055100",
        "client_msg_id": "F2CB426F-E255-4FA8-BC7D-BE844FDC23B0",
        "text": "&gt; Macintosh User Groups and stack exchange groups played a huge role in popularizing HyperCard.\nIs that the origin of the name <http:\/\/stackexchange.com|stackexchange.com>?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631531239.052000",
        "parent_user_id": "U02E4D523HB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3aCb",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Macintosh User Groups and stack exchange groups played a huge role in popularizing HyperCard."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIs that the origin of the name "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/stackexchange.com",
                                "text": "stackexchange.com"
                            },
                            {
                                "type": "text",
                                "text": "?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U027P92A0N5",
        "type": "message",
        "ts": "1631553093.059100",
        "client_msg_id": "5ca75bc5-e6c1-45b8-92aa-5cdc0cf8f7a4",
        "text": "I don't know if everybody already knows this project but I've stumbled upon it just today.\n<https:\/\/sdg.csail.mit.edu\/projects\/espalier>\n\nNow we can say it's a low-code \"spreadsheets-on-steroids\" platform. I see many features similar to Coda and Notion (but areguably better), and they explicitly reference Airtable in their video which I found pretty impressive and illuminating. It's a shame the project have halted.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d6900487d910",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-07-07\/2254853369060_d6900487d9109f495c79_72.jpg",
            "first_name": "Alexander",
            "real_name": "Alexander Chichigin",
            "display_name": "Alex Chichigin",
            "team": "T5TCAFTA9",
            "name": "sad.ronin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lmJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't know if everybody already knows this project but I've stumbled upon it just today.\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/sdg.csail.mit.edu\/projects\/espalier"
                            },
                            {
                                "type": "text",
                                "text": "\n\nNow we can say it's a low-code \"spreadsheets-on-steroids\" platform. I see many features similar to Coda and Notion (but areguably better), and they explicitly reference Airtable in their video which I found pretty impressive and illuminating. It's a shame the project have halted."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK",
                    "UMVFWPZ36",
                    "UJ6LDMMN0"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1631553768.059200",
        "client_msg_id": "b46ff957-3bc0-43bb-bdac-a3768ab53e54",
        "text": "Well, the most interesting part is to match up the code with the theory in my head. But in general I found the article pretty well written.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631543677.053600",
        "parent_user_id": "UPVBV34EL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NGVj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, the most interesting part is to match up the code with the theory in my head. But in general I found the article pretty well written."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1631555192.059500",
        "client_msg_id": "3eb46893-da7e-4be8-9543-0e2e080acbd8",
        "text": "Looking at it some more, I enjoyed the description of the Minsky UTM (LCCP)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631543677.053600",
        "parent_user_id": "UPVBV34EL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k5b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looking at it some more, I enjoyed the description of the Minsky UTM (LCCP)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UPVBV34EL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01A0KANUUU",
        "type": "message",
        "ts": "1631562228.059700",
        "client_msg_id": "79e66a99-848e-45e7-80a4-25af36665b05",
        "text": "<@U027P92A0N5> Where did you dig up these papers?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gca7b3cd16bf",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ca7b3cd16bf67a61acaf224e2219929c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "Eric Gade",
            "display_name": "Eric Gade",
            "team": "T5TCAFTA9",
            "name": "eric.gade",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630921674.020500",
        "parent_user_id": "U027P92A0N5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wcp7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U027P92A0N5"
                            },
                            {
                                "type": "text",
                                "text": " Where did you dig up these papers?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1631578580.060000",
        "client_msg_id": "6b5da11f-289e-4fa2-8829-022b4dad4b0f",
        "text": "&gt; Many successful hierarchies in computing are simply implementations of well-understood mathematical hierarchies\n<@UJBAJNFLK> I'm curious: what would you say are the \"successful\" hierarchies in computing?\n\nN.B. I assume you mean \"*ergonomic\/usability* success story\", not \"successfully commercialized\/adopted\", since we frequently see some poorly-designed hierarchical concepts get adopted. See HTML\/XML, whose hierarchy is so obviously inappropriate for interactive or animated content that people have developed elaborate frameworks to circumvent it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631478171.047200",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sw7",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Many successful hierarchies in computing are simply implementations of well-understood mathematical hierarchies"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " I'm curious: what would you say are the \"successful\" hierarchies in computing?\n\nN.B. I assume you mean \""
                            },
                            {
                                "type": "text",
                                "text": "ergonomic\/usability",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " success story\", not \"successfully commercialized\/adopted\", since we frequently see some poorly-designed hierarchical concepts get adopted. See HTML\/XML, whose hierarchy is so obviously inappropriate for interactive or animated content that people have developed elaborate frameworks to circumvent it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1631593257.060500",
        "client_msg_id": "f9fa0d46-413b-4355-862a-738879bccdb5",
        "text": "I am thinking of writing a Python or Go version of it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1631543677.053600",
        "parent_user_id": "UPVBV34EL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "li=vY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am thinking of writing a Python or Go version of it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U027P92A0N5",
        "type": "message",
        "ts": "1631602475.060700",
        "client_msg_id": "73e9387a-fa08-42a8-89f2-9bc62eadb9c8",
        "text": "<@U01A0KANUUU> to be frank I just follow Alan Kay on Quora (which I highly recommend anyone to do! :smiley:) and these links were posted in a comment to one of his answers... :sweat_smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d6900487d910",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-07-07\/2254853369060_d6900487d9109f495c79_72.jpg",
            "first_name": "Alexander",
            "real_name": "Alexander Chichigin",
            "display_name": "Alex Chichigin",
            "team": "T5TCAFTA9",
            "name": "sad.ronin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630921674.020500",
        "parent_user_id": "U027P92A0N5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bCz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01A0KANUUU"
                            },
                            {
                                "type": "text",
                                "text": " to be frank I just follow Alan Kay on Quora (which I highly recommend anyone to do! "
                            },
                            {
                                "type": "emoji",
                                "name": "smiley",
                                "unicode": "1f603"
                            },
                            {
                                "type": "text",
                                "text": ") and these links were posted in a comment to one of his answers... "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up_2",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            }
        ]
    }
]