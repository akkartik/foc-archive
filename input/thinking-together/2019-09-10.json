[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1568118297.245500",
        "client_msg_id": "2e0cd40d-1d57-4f2b-8dd0-35b430822a56",
        "text": "Is sure to be janky, but can pretty useful.  <http:\/\/www.swig.org\/>  (Yes, SWIG only wraps C, but still.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568012264.208900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DC7Pe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is sure to be janky, but can pretty useful.  "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.swig.org\/"
                            },
                            {
                                "type": "text",
                                "text": "  (Yes, SWIG only wraps C, but still.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UM1HH60GN",
        "type": "message",
        "ts": "1568120526.245700",
        "client_msg_id": "2aba83be-4696-48fd-a207-2bb1076ca98f",
        "text": "that's ok :slightly_smiling_face: it looks pretty cool.  I wish I had a reason to use it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "50ee467d1311",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-08-07\/719033961125_50ee467d13114e4314c2_72.jpg",
            "first_name": "Gary",
            "real_name": "Gary Trakhman",
            "display_name": "Gary Trakhman",
            "team": "T5TCAFTA9",
            "name": "gary.trakhman",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568046843.233900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iHFe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that's ok "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " it looks pretty cool.  I wish I had a reason to use it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE3KC0VK6",
        "type": "message",
        "ts": "1568140667.249800",
        "edited": {
            "user": "UE3KC0VK6",
            "ts": "1568140710.000000"
        },
        "client_msg_id": "541AC43F-09E9-4627-B727-CA83EAEF625A",
        "text": "(short bc on mobile) My motivation for dalsegno was generalizing the reactivity achieved by live reloading environments with a setup and a draw function (there's some ClojureScript wrapper on processing I think that does this?) to other program structures.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2aabe3b15ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/42aabe3b15ad406ed4237abd473bd55f.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "",
            "real_name": "Thomas Ballinger",
            "display_name": "ballingt",
            "team": "T5TCAFTA9",
            "name": "me1542",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566074521.305000",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5D2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(short bc on mobile) My motivation for dalsegno was generalizing the reactivity achieved by live reloading environments with a setup and a draw function (there's some ClojureScript wrapper on processing I think that does this?) to other program structures."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE3KC0VK6",
        "type": "message",
        "ts": "1568140734.250700",
        "client_msg_id": "1B7FDB6C-F542-467C-8E9E-A7DCEECE4504",
        "text": "(thanks for the mentioned <@U5T9JLUAE>!)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2aabe3b15ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/42aabe3b15ad406ed4237abd473bd55f.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "",
            "real_name": "Thomas Ballinger",
            "display_name": "ballingt",
            "team": "T5TCAFTA9",
            "name": "me1542",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566074521.305000",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "amdR6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(thanks for the mentioned "
                            },
                            {
                                "type": "user",
                                "user_id": "U5T9JLUAE"
                            },
                            {
                                "type": "text",
                                "text": "!)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE3KC0VK6",
        "type": "message",
        "ts": "1568140848.253700",
        "client_msg_id": "07E65B90-6958-4D07-AC0D-6A38A1BE78D9",
        "text": "I found gameloop-style programming to be a mediocre for for this - this rewind system was better for synchronous functions than geloop style \"increment this agent\" programs",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2aabe3b15ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/42aabe3b15ad406ed4237abd473bd55f.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "",
            "real_name": "Thomas Ballinger",
            "display_name": "ballingt",
            "team": "T5TCAFTA9",
            "name": "me1542",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566074521.305000",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fX\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I found gameloop-style programming to be a mediocre for for this - this rewind system was better for synchronous functions than geloop style \"increment this agent\" programs"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE3KC0VK6",
        "type": "message",
        "ts": "1568140902.254700",
        "client_msg_id": "45035619-690F-4FC6-9481-A3749C4D8758",
        "text": "so next I tried many agents running programs like this concurrently: <http:\/\/missilecmd.ballingt.com\/?simulator>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2aabe3b15ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/42aabe3b15ad406ed4237abd473bd55f.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "",
            "real_name": "Thomas Ballinger",
            "display_name": "ballingt",
            "team": "T5TCAFTA9",
            "name": "me1542",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566074521.305000",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mBX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "so next I tried many agents running programs like this concurrently: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/missilecmd.ballingt.com\/?simulator"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE3KC0VK6",
        "type": "message",
        "ts": "1568140971.255700",
        "client_msg_id": "76E872E9-D64A-4386-829B-97779460B86C",
        "text": "I haven't written about this one yet, but I talk about it a bit in <https:\/\/www.youtube.com\/watch?v=Zcg1Ku4YB4g> and <http:\/\/ballingt.com\/interactive-interpreter-undo\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2aabe3b15ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/42aabe3b15ad406ed4237abd473bd55f.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "",
            "real_name": "Thomas Ballinger",
            "display_name": "ballingt",
            "team": "T5TCAFTA9",
            "name": "me1542",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566074521.305000",
        "parent_user_id": "UC2A2ARPT",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "!!Con 2018: Undo all the things! by Tom Ballinger",
                "title_link": "https:\/\/www.youtube.com\/watch?v=Zcg1Ku4YB4g",
                "author_name": "Confreaks",
                "author_link": "https:\/\/www.youtube.com\/user\/Confreaks",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/Zcg1Ku4YB4g\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: !!Con 2018: Undo all the things! by Tom Ballinger",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/Zcg1Ku4YB4g?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=Zcg1Ku4YB4g",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=Zcg1Ku4YB4g"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m=SP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven't written about this one yet, but I talk about it a bit in "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=Zcg1Ku4YB4g"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/ballingt.com\/interactive-interpreter-undo\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UN9R2KEUE"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1568148805.257200",
        "client_msg_id": "867d798b-5772-42ba-9d93-7861f142dc57",
        "text": "Just saw this in MIT News: \"Fiat Cryptography, developed by Adam Chlipala's Programming Languages and Verification group at CSAIL, automatically generates optimized cryptographic algorithms for all hardware platforms---and mathematically verifies them at the same time. Tests showed that its algorithms match the performance of the best handwritten code, but they're produced much faster. The automatically generated code has populated Google's BoringSSL, an open-source cryptographic library. Chrome and Android apps use the library to generate various keys needed to encrypt and decrypt data. Today about 90% of secure Chrome communications run Fiat Cryptography code.\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563279828.308800",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B7J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just saw this in MIT News: \"Fiat Cryptography, developed by Adam Chlipala's Programming Languages and Verification group at CSAIL, automatically generates optimized cryptographic algorithms for all hardware platforms---and mathematically verifies them at the same time. Tests showed that its algorithms match the performance of the best handwritten code, but they're produced much faster. The automatically generated code has populated Google's BoringSSL, an open-source cryptographic library. Chrome and Android apps use the library to generate various keys needed to encrypt and decrypt data. Today about 90% of secure Chrome communications run Fiat Cryptography code.\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1568150179.257800",
        "client_msg_id": "2cc88cd2-86aa-47fe-9398-cc1a2902c984",
        "text": "<@UE3KC0VK6> Thanks for that additional context and those links.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566074521.305000",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jESD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE3KC0VK6"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for that additional context and those links."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1568156672.259300",
        "client_msg_id": "6e0282be-b773-4152-9312-f9fcc5fb4374",
        "text": "Local State is Poison <https:\/\/awelonblue.wordpress.com\/2012\/10\/21\/local-state-is-poison\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568156672.259300",
        "reply_count": 16,
        "reply_users_count": 5,
        "latest_reply": "1568560612.128300",
        "reply_users": [
            "UEQ6M68H0",
            "UE6EFEPTQ",
            "UHDQ62M4P",
            "UJN1TAYEQ",
            "UKFNXF0F9"
        ],
        "replies": [
            {
                "user": "UEQ6M68H0",
                "ts": "1568175325.269900"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1568192128.271600"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1568194136.272000"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1568221639.282700"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1568221989.282900"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1568234847.286400"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1568275928.289600"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1568327750.293800"
            },
            {
                "user": "UKFNXF0F9",
                "ts": "1568421467.000200"
            },
            {
                "user": "UKFNXF0F9",
                "ts": "1568421749.000400"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1568533673.076000"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1568547753.126600"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1568547801.126800"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1568555015.127200"
            },
            {
                "user": "UKFNXF0F9",
                "ts": "1568560364.128100"
            },
            {
                "user": "UKFNXF0F9",
                "ts": "1568560612.128300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "Awelon Blue",
                "service_url": "http:\/\/awelonblue.wordpress.com",
                "title": "Local State is Poison",
                "title_link": "https:\/\/awelonblue.wordpress.com\/2012\/10\/21\/local-state-is-poison\/",
                "author_name": "dmbarbour",
                "author_link": "https:\/\/awelonblue.wordpress.com\/author\/dmbarbour\/",
                "text": "Up through early 2011, my visions of RDP still called for `new` (as in `new Object()` or `newIORef`). At that time, my vision of an RDP language was a two-layer model: the language would support a separate initialization step for toplevel and dynamic behaviors. But multiple layers was inconvenient, complex, and inelegant no matter how I spun them; I had difficulty reasoning about persistence, live programming, open extension, and metacircular staged programming. \nIn February 2011, I stopped work on RDP then sat down and tried to understand the problem more deeply. What is needed for persistence and upgrade? How do we ensure state is visible and extensible? What is necessary to avoid those extra layers of complexity and turn RDP into a complete paradigm? I don&rsquo;t clearly recall my thought process at the time. But, with some combination of stubborn effort and minor Eureka moments, I traced the problem to a concept that had been so culturally ingrained as &ldquo;good&rdquo; that I had never questioned it: local state.\nThe primary cause for problems achieving persistence, upgrade, visibility, extensibility, and live-programming is local state. And I don&rsquo;t just mean the explicit local state (mutable references and objects). Even implicit local state, represented in continuations, closures, callbacks, message queues, procedural stacks, dataflow loops, etc. will cause the same problems. The issues are inherent to the fundamental nature of local state: state cannot be cheaply recomputed or regenerated like other live values, and because the state is locally encapsulated it is semantically inaccessible to components that might provide persistence, extensions, or support transition of state during upgrade.  \nThe solution? \nPush state just beyond the edges of our program logic, into external databases or filesystems&hellip; or to type-rich language-local abstractions that happen to look a lot like filesystems and databases. Modularity, security and exclusivity concerns can be addressed by secure partitioning of a stateful resource space across different subprograms, e.g. similar to chroot jails. \nExternal state is a shared, global state. \nIn modern programming culture, we are taught that global state is bad, that shared state is bad, and that shared, global state is doubly bad. Belief in the evil of global shared state does seem well justified when presented in the context of imperative programming, multi-threaded concurrency, ambient authority. However, that is attribution error: the context is awful with or without global state. The belief is also just plain inconsistent with the use of databases (a pain felt by anyone who uses an ORM). With sane programming models for concurrency, consistency, and composable security, shared global state is great; only local state is problematic.\nIf we eliminate local state, both explicit and implicit, our programs become stateless logics manipulating a stateful substrate. Programs become simpler: no need for concepts of creation or destruction. Those concepts are replaced by discovery &ndash; potentially in an infinite graph of stateful resources &ndash; with default states, and subgraph resets. We compose and manipulate resources that already exist, that continue to persist beyond the lifetime of our program. Orthogonal persistence, resilience, open extension, visibility, runtime upgrade, and many other advantages come easily once we decide to abandon local state. \nOf course, it isn&rsquo;t easy to abandon local state. As I describe of event systems, many of our programming models today have a great deal of implicit local state. To be rid of this is challenging. Even purely functional models like FRP tend to hold onto local state (modeling local integrals and accumulators). To ease transition from local state to proper use of global state, new idioms are required. \nI spent most of 2011 March through October designing state models and idioms to support RDP. I didn&rsquo;t have much luck (beyond tuple spaces) until Reactive State Transition. Use of external state enables RDP to be a complete programming paradigm &ndash; in both senses of being Turing complete (via incremental manipulation of state) and sufficient for general purpose programming. Of course, it is still preferable to avoid state if it is not essential. \nSince I started blogging only in 2011 May, RDP has never been presented on this blog with the early visions for use of local state. A year after I wrote nothing `new` in RDP, I believe even more strongly that `new` is harmful, that local state is harmful, even if implicit. \nI write in my Sirea readme: \nA tree-shaped resource space, where each subtree is a recursive resource space, is nearly ideal:\npath names can be stabilized using meaningful domain values\ncan be securely partitioned; no path from child to parent\nsubtree-level operations feasible: reset, clone, splice\nparent can easily observe and influence child resources\nreadily supports orthogonal persistence and versioning\nYou&rsquo;re probably thinking, &ldquo;hey, that&rsquo;s basically a filesystem!&rdquo; And you&rsquo;re right. A filesystem metaphor to manage resources is superior in every way to use of new. The tree structure is discoverable, extensible, auditable, persistable, securable, composable, and suitable for declarative access. With a little discipline to ensure stability of schema and locators, the tree structure effectively supports live programming. The ability to audit and discover resources is useful for visual presentation, developer awareness, and debugging.\nI expect there are programming subcultures that already grok the problem, if not the cause &ndash; RESTful web architects, users of the Erlang\/OTP platform, users of publish\/subscribe systems. But I&rsquo;ve been there, and it still took me years to even recognize my &ldquo;local state is good, global shared state is bad&rdquo; prejudice. My mind had been poisoned, probably by Object Oriented Programming.\nIf you think global shared state is bad, you&rsquo;re doing it wrong. To achieve large scale, robust, resilient, maintainable, extensible, eternal systems, we must transition away from local state and shove essential state into global, shared spaces where it can be represented independently of program logic. \nWhen we need state, global state is great. Local state is the mind killer.\nClarifications: I&rsquo;ve had some arguments on the internet recently that boil down to a few misunderstandings. In one case, the other guy was reading &lsquo;local&rsquo; and thinking &lsquo;physical local (vs remote)&rsquo;, which is reasonable but isn&rsquo;t what I meant. In a distributed system, code and data can be modeled as having locations and partitions, and we can speak of migrating code or data based on access patterns. Distributed filesystems, NUMA, mmap, CPU cache. But the &lsquo;local&rsquo; I mean is about state embedded within a software component. Perhaps if I had used &lsquo;internal vs external&rsquo; state (internal state is poison!) this confusion would have been avoided. In another case, a different other guy was assuming non-local (external) state must be durable. But consider tmpfs as an obvious counter-example.",
                "fallback": "Awelon Blue Link: Local State is&nbsp;Poison",
                "from_url": "https:\/\/awelonblue.wordpress.com\/2012\/10\/21\/local-state-is-poison\/",
                "service_icon": "https:\/\/s2.wp.com\/i\/webclip.png",
                "id": 1,
                "original_url": "https:\/\/awelonblue.wordpress.com\/2012\/10\/21\/local-state-is-poison\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ufhw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Local State is Poison "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/awelonblue.wordpress.com\/2012\/10\/21\/local-state-is-poison\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "open_mouth",
                "users": [
                    "UL3CJ7YKC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJUQESQ1Z",
        "type": "message",
        "ts": "1568162357.263200",
        "client_msg_id": "1e716c94-df03-452f-8aad-fd44493451be",
        "text": "Can anyone think of any examples of data structure visualisers that allow you to change the presentation of the nodes of the data structure? Like ‘tree’, ‘table’, ‘xml’, ‘bytes’, ‘image’. I have some ideas for a binary data visualiser like this (driven by a data description language I’m making), I’m just curious about prior art on this kind of thing. Examples don’t have to be for binary data formats specifically though. It’s a UI I swear I’ve seen in the past…",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g52a48f76fc9",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e52a48f76fc911d40711f788d74773a0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Brendan Zabarauskas",
            "display_name": "Brendan Zabarauskas",
            "team": "T5TCAFTA9",
            "name": "bjzaba",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568162357.263200",
        "reply_count": 18,
        "reply_users_count": 6,
        "latest_reply": "1568297524.293500",
        "reply_users": [
            "UCUSW7WVD",
            "UJUQESQ1Z",
            "U8A5MS6R1",
            "UC2A2ARPT",
            "UMVFWPZ36",
            "U5STGTB3J"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1568166826.264500"
            },
            {
                "user": "UJUQESQ1Z",
                "ts": "1568169213.264700"
            },
            {
                "user": "UJUQESQ1Z",
                "ts": "1568169572.264900"
            },
            {
                "user": "UJUQESQ1Z",
                "ts": "1568169598.265200"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1568169672.265400"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1568169709.265600"
            },
            {
                "user": "UJUQESQ1Z",
                "ts": "1568170048.266200"
            },
            {
                "user": "UJUQESQ1Z",
                "ts": "1568170123.266400"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1568175192.269700"
            },
            {
                "user": "UJUQESQ1Z",
                "ts": "1568175361.270100"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1568225286.283400"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1568225287.283600"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1568225312.283800"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1568225340.284000"
            },
            {
                "user": "UJUQESQ1Z",
                "ts": "1568248826.288000"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1568278707.292200"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1568297355.293300"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1568297524.293500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gzC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can anyone think of any examples of data structure visualisers that allow you to change the presentation of the nodes of the data structure? Like ‘tree’, ‘table’, ‘xml’, ‘bytes’, ‘image’. I have some ideas for a binary data visualiser like this (driven by a data description language I’m making), I’m just curious about prior art on this kind of thing. Examples don’t have to be for binary data formats specifically though. It’s a UI I swear I’ve seen in the past…"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1568166826.264500",
        "client_msg_id": "c53dbb43-fdb0-4312-a10c-3a95f9c36d3a",
        "text": "Reminds me of <@UHDQ62M4P>'s TreeSheets.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568162357.263200",
        "parent_user_id": "UJUQESQ1Z",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aJH+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reminds me of "
                            },
                            {
                                "type": "user",
                                "user_id": "UHDQ62M4P"
                            },
                            {
                                "type": "text",
                                "text": "'s TreeSheets."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "grin",
                "users": [
                    "UHDQ62M4P"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJUQESQ1Z",
        "type": "message",
        "ts": "1568169213.264700",
        "client_msg_id": "e1e4e5b6-5a66-4c60-bcc0-84a59c1f5248",
        "text": "Oooh, this? <http:\/\/strlen.com\/treesheets\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g52a48f76fc9",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e52a48f76fc911d40711f788d74773a0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Brendan Zabarauskas",
            "display_name": "Brendan Zabarauskas",
            "team": "T5TCAFTA9",
            "name": "bjzaba",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568162357.263200",
        "parent_user_id": "UJUQESQ1Z",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "onOxI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oooh, this? "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/strlen.com\/treesheets\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJUQESQ1Z",
        "type": "message",
        "ts": "1568169572.264900",
        "client_msg_id": "3c56b49f-511c-4adc-9b35-a90351174ed9",
        "text": "<http:\/\/strlen.com\/treesheets\/docs\/images\/screenshots\/screenshot_todo_half.png>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g52a48f76fc9",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e52a48f76fc911d40711f788d74773a0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Brendan Zabarauskas",
            "display_name": "Brendan Zabarauskas",
            "team": "T5TCAFTA9",
            "name": "bjzaba",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568162357.263200",
        "parent_user_id": "UJUQESQ1Z",
        "attachments": [
            {
                "fallback": "607x498px image",
                "image_url": "http:\/\/strlen.com\/treesheets\/docs\/images\/screenshots\/screenshot_todo_half.png",
                "image_width": 607,
                "image_height": 498,
                "image_bytes": 194850,
                "from_url": "http:\/\/strlen.com\/treesheets\/docs\/images\/screenshots\/screenshot_todo_half.png",
                "id": 1,
                "original_url": "http:\/\/strlen.com\/treesheets\/docs\/images\/screenshots\/screenshot_todo_half.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VDxw\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/strlen.com\/treesheets\/docs\/images\/screenshots\/screenshot_todo_half.png"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275",
                    "UN7BQ1VQU"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJUQESQ1Z",
        "type": "message",
        "ts": "1568169598.265200",
        "client_msg_id": "8160dfc2-120e-4d0b-8cae-9f1499e846a3",
        "text": "Yeah, that seems quite similar to what I was thinking about",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g52a48f76fc9",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e52a48f76fc911d40711f788d74773a0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Brendan Zabarauskas",
            "display_name": "Brendan Zabarauskas",
            "team": "T5TCAFTA9",
            "name": "bjzaba",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568162357.263200",
        "parent_user_id": "UJUQESQ1Z",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BpZqT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, that seems quite similar to what I was thinking about"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1568169672.265400",
        "client_msg_id": "e1ea2ef2-6a45-4d69-85d0-fcbea6c6e0f2",
        "text": "Check out <http:\/\/gtoolkit.com|gtoolkit.com>. <@UE1JQM9HQ> had a recent talk about this stuff.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568162357.263200",
        "parent_user_id": "UJUQESQ1Z",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CVY0\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Check out "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/gtoolkit.com",
                                "text": "gtoolkit.com"
                            },
                            {
                                "type": "text",
                                "text": ". "
                            },
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            },
                            {
                                "type": "text",
                                "text": " had a recent talk about this stuff."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1568169709.265600",
        "client_msg_id": "48ce3195-377a-4e9b-a7b8-51deea57fe12",
        "text": "Yeah, exactly. If you download it there's an interactive tutorial that shows changing the visualization without modifying the underlying data.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568162357.263200",
        "parent_user_id": "UJUQESQ1Z",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o9K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, exactly. If you download it there's an interactive tutorial that shows changing the visualization without modifying the underlying data."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJUQESQ1Z",
        "type": "message",
        "ts": "1568170048.266200",
        "client_msg_id": "a2b12e0b-2360-4e4d-bfe5-f3f3f5e65c8b",
        "text": "Yeah, I’ve seen Glamorous Toolkit before :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g52a48f76fc9",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e52a48f76fc911d40711f788d74773a0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Brendan Zabarauskas",
            "display_name": "Brendan Zabarauskas",
            "team": "T5TCAFTA9",
            "name": "bjzaba",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568162357.263200",
        "parent_user_id": "UJUQESQ1Z",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6M1G0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I’ve seen Glamorous Toolkit before "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJUQESQ1Z",
        "type": "message",
        "ts": "1568170123.266400",
        "client_msg_id": "25d69e9a-8ed6-4244-940f-58144076f0ea",
        "text": "I swear I’ve seen some more too!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g52a48f76fc9",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e52a48f76fc911d40711f788d74773a0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Brendan Zabarauskas",
            "display_name": "Brendan Zabarauskas",
            "team": "T5TCAFTA9",
            "name": "bjzaba",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568162357.263200",
        "parent_user_id": "UJUQESQ1Z",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XXHpm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I swear I’ve seen some more too!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1568175192.269700",
        "client_msg_id": "439C6DEF-D1F8-4780-B679-42B8AFCECE0D",
        "text": "@denik on Twitter (creator of Vimsical) made something like this and demoed it to me privately. Send him a DM and he'd probably be happy to talk about it. It was a JS framework for rendering arbitrary tree structures with arbitrary presentations based on the nesting or data of each node. A bit like React but much looser \/ more open.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568162357.263200",
        "parent_user_id": "UJUQESQ1Z",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JCX8Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "@denik on Twitter (creator of Vimsical) made something like this and demoed it to me privately. Send him a DM and he'd probably be happy to talk about it. It was a JS framework for rendering arbitrary tree structures with arbitrary presentations based on the nesting or data of each node. A bit like React but much looser \/ more open."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1568175325.269900",
        "client_msg_id": "fb9fdf7f-c7f0-4876-bb67-43c518d55ab4",
        "text": "This is almost exactly how my Beads language is designed. It uses a tracked global state, with basically no local state, no NEW, no DISPOSE. Solves a ton of problems. Basically the opposite of OOP.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568156672.259300",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/es6s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is almost exactly how my Beads language is designed. It uses a tracked global state, with basically no local state, no NEW, no DISPOSE. Solves a ton of problems. Basically the opposite of OOP."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJUQESQ1Z",
        "type": "message",
        "ts": "1568175361.270100",
        "client_msg_id": "683ae402-9d9d-4875-a802-2e7f85a9f4e1",
        "text": "nice",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g52a48f76fc9",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e52a48f76fc911d40711f788d74773a0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Brendan Zabarauskas",
            "display_name": "Brendan Zabarauskas",
            "team": "T5TCAFTA9",
            "name": "bjzaba",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568162357.263200",
        "parent_user_id": "UJUQESQ1Z",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+fnXU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "nice"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]