[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1701677448.620989",
        "client_msg_id": "bbd3e923-4990-4f97-a411-85640f6cc14d",
        "text": "&gt; Ultimately I want to work with small enough subfile snippets of code that don’t need scroll.\nEasy: use Smalltalk ;-)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1701635281.825519",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RYRWW",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ultimately I want to work with small enough subfile snippets of code that don’t need scroll."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Easy: use Smalltalk ;-)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1701706663.861979",
        "client_msg_id": "a5ae65b2-d0bc-40ce-89a0-93d981f5ed8a",
        "text": "Interesting to consider such a UI for a Smalltalk project :thinking_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1701635281.825519",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BB7ag",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting to consider such a UI for a Smalltalk project "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1701707015.804709",
        "client_msg_id": "2bc790f0-da4a-4dba-953c-bd97afdd2470",
        "text": "Yeah, Smalltalk is definitely an influence here. But I don't want the walled garden.\n\nI will also say that one of my requirements is that nothing can lock the UI. When, for example, I'm using glamorous toolkit and I do a long operation, the whole application hangs. With my setup, you can make an extension that goes into an infinite loop and the UI is still completely responsive. All of that happens, even though I am currently still single threaded.\n\nI do think this project has given me an appreciation for why Smalltalk would have an object system like it had for the gui it had. I can definitely feel how OO might have co-evolved with that kind of setup.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1701635281.825519",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WgKTi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, Smalltalk is definitely an influence here. But I don't want the walled garden.\n\nI will also say that one of my requirements is that nothing can lock the UI. When, for example, I'm using glamorous toolkit and I do a long operation, the whole application hangs. With my setup, you can make an extension that goes into an infinite loop and the UI is still completely responsive. All of that happens, even though I am currently still single threaded.\n\nI do think this project has given me an appreciation for why Smalltalk would have an object system like it had for the gui it had. I can definitely feel how OO might have co-evolved with that kind of setup."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1701707566.507439",
        "client_msg_id": "4aef0b9c-2e35-4d27-b6ff-9d4fb1bdf8d0",
        "text": "How do you pull that off?! Preemption on a single thread?!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1701635281.825519",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SvB\/y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How do you pull that off?! Preemption on a single thread?!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1701708438.485879",
        "client_msg_id": "870159b0-53c2-489a-81ac-90b18fff9df0",
        "text": "This is one of the reasons I went with wasm (despite its downsides). Wasmtime has was of doing interruption. I happen to use epoch based interruption. So now that I give the details, I do happen to spin up another thread, but it literally just increments a number and sleeps. (I could have done the exact some though with the fuel based interruption and not used the extra thread). The great thing about this, is because this is all handled by compilation, my code knows nothing about it.\n\nI even take advantage of this separation for other interesting things. I can have code that blocks waiting for a value, but that blocking call in my extension is turned into async code for the editor. So I get an async\/await style setup with no-syntactic distinction.\n\nI consider this editor a 10 year project. So hopefully at some point, I'll replace the wasm with my own setup. But this interruption based setup has been super nice.\n\n <https:\/\/docs.wasmtime.dev\/api\/wasmtime\/struct.Config.html#method.epoch_interruption>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1701635281.825519",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gphzA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is one of the reasons I went with wasm (despite its downsides). Wasmtime has was of doing interruption. I happen to use epoch based interruption. So now that I give the details, I do happen to spin up another thread, but it literally just increments a number and sleeps. (I could have done the exact some though with the fuel based interruption and not used the extra thread). The great thing about this, is because this is all handled by compilation, my code knows nothing about it.\n\nI even take advantage of this separation for other interesting things. I can have code that blocks waiting for a value, but that blocking call in my extension is turned into async code for the editor. So I get an async\/await style setup with no-syntactic distinction.\n\nI consider this editor a 10 year project. So hopefully at some point, I'll replace the wasm with my own setup. But this interruption based setup has been super nice.\n\n "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.wasmtime.dev\/api\/wasmtime\/struct.Config.html#method.epoch_interruption"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1701708580.318139",
        "client_msg_id": "c0d3e972-aa75-47db-8020-ae737af66770",
        "text": "Ooh, nice feature for a VM to have.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1701635281.825519",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "10PpS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ooh, nice feature for a VM to have."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]