[
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1564567756.101400",
        "client_msg_id": "b72ebe4a-d6a6-4390-8a4f-cf9d19fb192c",
        "text": "<@UFEQUBNNT> that is interesting. Do you mean these were dynamic assertions evaluated runtime at the first place (some kind of integration tests), not static tests (like simple unit tests)? What language\/ tech stack did you use?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564527922.091900",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xWi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFEQUBNNT"
                            },
                            {
                                "type": "text",
                                "text": " that is interesting. Do you mean these were dynamic assertions evaluated runtime at the first place (some kind of integration tests), not static tests (like simple unit tests)? What language\/ tech stack did you use?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1564567818.101600",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1564567825.000000"
        },
        "client_msg_id": "7e6936ea-e6dd-40c5-b9a3-1aabb4d0c866",
        "text": "<@UAVCC2X70> exactly! I always wondering I’d need Prolog (or something similar) for that. As I’ve seen there is Prolog implementation running on js available, if I don’t find something already done I’ll use that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564527922.091900",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+fW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": " exactly! I always wondering I’d need Prolog (or something similar) for that. As I’ve seen there is Prolog implementation running on js available, if I don’t find something already done I’ll use that."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJG7QQQJW",
        "type": "message",
        "ts": "1564568611.101900",
        "client_msg_id": "bc7337a8-61a6-4faf-8a7f-adff17b6fa21",
        "text": "That’s something I’ve been thinking so many times. Audio editing and code editing are so similar in manys ways and apps like Logic Pro X are among the best apps ever built. We should start to take some inspiration from them for code editing!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6028a1c7a821",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-19\/639818983280_6028a1c7a82161b81120_72.jpg",
            "first_name": "Adrian",
            "real_name": "Adrian Sieber",
            "display_name": "Adrian Sieber",
            "team": "T5TCAFTA9",
            "name": "futureofcoding",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564519351.082300",
        "parent_user_id": "UJPHQ8Z3N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ATA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That’s something I’ve been thinking so many times. Audio editing and code editing are so similar in manys ways and apps like Logic Pro X are among the best apps ever built. We should start to take some inspiration from them for code editing!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1564569519.112000",
        "client_msg_id": "7148E355-FECE-4D9E-8472-EA5891F69FA3",
        "text": "Just came across this article, which is another very pragmatic example of functional concepts applied to (post-?)modern programming and making an interesting connection between imperative and reactive programming: <https:\/\/jasdev.me\/duals>\n\nIt also closes the loop to category theory and provides concrete examples (and intuitive understanding for those familiar with the platform) for topics we just discussed in <#CKC6FM9DF|category-theory>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564418480.037900",
        "parent_user_id": "UFB8STN7K",
        "attachments": [
            {
                "service_name": "Distillations",
                "title": "Deriving Reactive from Imperative: An Introduction to Duals",
                "title_link": "https:\/\/jasdev.me\/duals",
                "text": "While Apple’s Combine framework didn’t take center stage, its implications on our community certainly will for the next decade. We now have a first-party toolkit for functional reactive programming (often abbreviated “FRP”) that packs an intimidating namespace of operators, opaque abstractions, and features even Combine’s open-source counterparts omit like backpressure.",
                "fallback": "Distillations: Deriving Reactive from Imperative: An Introduction to Duals",
                "ts": 1564099200,
                "from_url": "https:\/\/jasdev.me\/duals",
                "id": 1,
                "original_url": "https:\/\/jasdev.me\/duals"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uKLM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just came across this article, which is another very pragmatic example of functional concepts applied to (post-?)modern programming and making an interesting connection between imperative and reactive programming: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/jasdev.me\/duals"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIt also closes the loop to category theory and provides concrete examples (and intuitive understanding for those familiar with the platform) for topics we just discussed in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CKC6FM9DF"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1564571488.112300",
        "client_msg_id": "7e373bdc-38cb-4988-99f5-818ea6a6256d",
        "text": "<@UAL7940NM> Ron Baeker did some research on typography for code.  I haven’t read this, but it turned up during searches: <https:\/\/books.google.ca\/books\/about\/Human_Factors_and_Typography_for_More_Re.html?id=QstWAAAAMAAJ&amp;redir_esc=y>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564484268.063900",
        "parent_user_id": "UAL7940NM",
        "attachments": [
            {
                "service_name": "Google Books",
                "title": "Human Factors and Typography for More Readable Programs",
                "title_link": "https:\/\/books.google.ca\/books\/about\/Human_Factors_and_Typography_for_More_Re.html?id=QstWAAAAMAAJ&redir_esc=y",
                "text": "An introduction to the issues, methods, and results of effective program presentation and an illustration of what such presentations might look like. Annotation copyright Book News, Inc. Portland, Or.",
                "fallback": "Google Books: Human Factors and Typography for More Readable Programs",
                "from_url": "https:\/\/books.google.ca\/books\/about\/Human_Factors_and_Typography_for_More_Re.html?id=QstWAAAAMAAJ&redir_esc=y",
                "thumb_url": "https:\/\/books.google.ca\/books\/content?id=QstWAAAAMAAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE70lTDXoQsU6NYDb-70Wa0vV4rntclv_JdjP39H97ygy3NtN0DeDYNzAgQsBQ0OmmgCcp0g5FstctdkpEsiYxO2PTWiiu2O6ZEsTk5YzS82jzt3IbRZPjNhAub5lqiXBzuLJKI6L",
                "thumb_width": 128,
                "thumb_height": 164,
                "service_icon": "https:\/\/books.google.ca\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/books.google.ca\/books\/about\/Human_Factors_and_Typography_for_More_Re.html?id=QstWAAAAMAAJ&amp;redir_esc=y"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mKaw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAL7940NM"
                            },
                            {
                                "type": "text",
                                "text": " Ron Baeker did some research on typography for code.  I haven’t read this, but it turned up during searches: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/books.google.ca\/books\/about\/Human_Factors_and_Typography_for_More_Re.html?id=QstWAAAAMAAJ&amp;redir_esc=y",
                                "text": "https:\/\/books.google.ca\/books\/about\/Human_Factors_and_Typography_for_More_Re.html?id=QstWAAAAMAAJ&redir_esc=y"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1564575500.112600",
        "client_msg_id": "e9d30d70-f954-4b30-9ae7-d5e9b1066359",
        "text": "<@UGWUJUZHT> I think I've read a part of this book a while ago. I'm not sure how relevant it is nowadays because display and font technology have advanced a lot in the last 30 years, but I'll take a look at it again. Thanks for reminding me :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564484268.063900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jPx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " I think I've read a part of this book a while ago. I'm not sure how relevant it is nowadays because display and font technology have advanced a lot in the last 30 years, but I'll take a look at it again. Thanks for reminding me "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1564586279.113200",
        "client_msg_id": "d1c495a8-48a8-47b0-b138-988da699a3e8",
        "text": "It was built on unit tests. One test might be like, \"the controller should render a button, in all contexts where logged-in is true and the fetch succeeds\" (leaving regular\/admin user unspecified). The test runner then goes through the truth table defined for that test file and runs that test everywhere its guarding expression is true.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564527922.091900",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lvbc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It was built on unit tests. One test might be like, \"the controller should render a button, in all contexts where logged-in is true and the fetch succeeds\" (leaving regular\/admin user unspecified). The test runner then goes through the truth table defined for that test file and runs that test everywhere its guarding expression is true."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1564590351.113400",
        "client_msg_id": "b845cf8a-c615-4b42-81f5-ddb36b192510",
        "text": "Here's my YouTube playlist on Architecture &amp; Design. Every video is somehow related to C.A.'s material, and can in some way be tied to software (try me):\n\n<https:\/\/www.youtube.com\/playlist?list=PLcxHi1cwstVD2d-qe0kn9XMjL7pdlzm1W>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1551553463.032700",
        "parent_user_id": "UAVCC2X70",
        "attachments": [
            {
                "service_name": "YouTube",
                "title": "Architecture &amp; Design - YouTube",
                "title_link": "https:\/\/www.youtube.com\/playlist?list=PLcxHi1cwstVD2d-qe0kn9XMjL7pdlzm1W",
                "text": "Putting meaning &amp; life back into design",
                "fallback": "YouTube: Architecture &amp; Design - YouTube",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/u5pjep4WHTk\/hqdefault.jpg?sqp=-oaymwEWCKgBEF5IWvKriqkDCQgBFQAAiEIYAQ==&rs=AOn4CLAq_paEWnAHz-yKFf3j-ScOAjGF1g",
                "from_url": "https:\/\/www.youtube.com\/playlist?list=PLcxHi1cwstVD2d-qe0kn9XMjL7pdlzm1W",
                "thumb_width": 168,
                "thumb_height": 94,
                "service_icon": "https:\/\/s.ytimg.com\/yts\/img\/favicon-vfl8qSV2F.ico",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/playlist?list=PLcxHi1cwstVD2d-qe0kn9XMjL7pdlzm1W"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xxz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's my YouTube playlist on Architecture & Design. Every video is somehow related to C.A.'s material, and can in some way be tied to software (try me):\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/playlist?list=PLcxHi1cwstVD2d-qe0kn9XMjL7pdlzm1W"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1564591010.114300",
        "client_msg_id": "788DFFB7-A329-4744-B329-E48064C9C28E",
        "text": "I see now, thanks!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564527922.091900",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1iMI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I see now, thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1564592283.114600",
        "client_msg_id": "6c04776c-a8fd-4002-9b5a-e7db4c343a1c",
        "text": "Great example of a declarative program in what's usually considered an imperative language. I also think many features of languages are declarative in nature, e.g. how we can specify base classes by just just listing them in the definition. I now don't see declarative as a very useful description. TBH, I think whether some expression is a 'what' or a 'how' is not an inherent property of the expression but depends on the context.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563788139.063200",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MPNp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great example of a declarative program in what's usually considered an imperative language. I also think many features of languages are declarative in nature, e.g. how we can specify base classes by just just listing them in the definition. I now don't see declarative as a very useful description. TBH, I think whether some expression is a 'what' or a 'how' is not an inherent property of the expression but depends on the context."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1564599969.115100",
        "client_msg_id": "1241406c-138b-4c3c-a7ed-8351cff305a3",
        "text": "FORTH programs win the smallest source file contest every time. LISP comes in second. The beauty of FORTH is that it used an implied push-down stack without needing parentheses. However, like postscript. prefix languages are a bitch to read, and require the reader to memorize the number of parameters used. Thus FORTH (and LISP also) programs become \"write-only\" documents, where even the original author shortly thereafter cannot remember how they work. It doesn't matter how productive a language is, if the work cannot be shared with a team member, the business community will discourage its use. I am looking forward to the clinical trials with my language where we measure mean time to repair for small bugs. That is the acid test...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564446042.052200",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wjL1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FORTH programs win the smallest source file contest every time. LISP comes in second. The beauty of FORTH is that it used an implied push-down stack without needing parentheses. However, like postscript. prefix languages are a bitch to read, and require the reader to memorize the number of parameters used. Thus FORTH (and LISP also) programs become \"write-only\" documents, where even the original author shortly thereafter cannot remember how they work. It doesn't matter how productive a language is, if the work cannot be shared with a team member, the business community will discourage its use. I am looking forward to the clinical trials with my language where we measure mean time to repair for small bugs. That is the acid test..."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1564619854.118500",
        "client_msg_id": "7562BFF1-2BA1-42B6-8478-22466303E3AA",
        "text": "does anyone know of any radical paradigms for navigating the web? eg: not treating web pages like documents, not treating history as mostly ephemeral, facilitating collection or breadth-first search, weird zooming user interfaces, etc?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564619854.118500",
        "reply_count": 18,
        "reply_users_count": 7,
        "latest_reply": "1564784308.188500",
        "reply_users": [
            "UFEQUBNNT",
            "UHWC9PXBL",
            "U7C7B75R6",
            "UJN1TAYEQ",
            "UE6EFEPTQ",
            "UJNJQD2AC",
            "U8A5MS6R1"
        ],
        "replies": [
            {
                "user": "UFEQUBNNT",
                "ts": "1564620403.131000"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1564620974.136700"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1564623237.137100"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1564625405.137300"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1564648835.137800"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1564650483.138100"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1564650572.138300"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1564663547.138500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1564670874.141400"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1564736307.162200"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1564736333.162400"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1564736529.162800"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1564775601.173900"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1564775610.174400"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1564775658.175500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1564775667.176100"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1564779142.181700"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1564784308.188500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sue",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "does anyone know of any radical paradigms for navigating the web? eg: not treating web pages like documents, not treating history as mostly ephemeral, facilitating collection or breadth-first search, weird zooming user interfaces, etc?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5TCAFTD3"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1564619984.119900",
        "client_msg_id": "766923AE-FA1B-4613-A0A5-27B536A824C6",
        "text": "That makes sense. Thanks!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564549784.099400",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DNjKj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That makes sense. Thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1564620313.129000",
        "client_msg_id": "58c31019-aad2-4eb7-b016-f9e7400e9703",
        "text": "The page-centric concept of the web (from a browser standpoint) is a bit strange to begin with, if you think about it. I think it would make sense if instead of \"loading a page\", you loaded a script, which then programmatically creates content. And then, why should loading something else have to make that go away? Perhaps loading the same thing twice would just give you two copies of it, just like if you run the same program twice or open the same file twice. That would also give \"history\" a different connotation",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564620313.129000",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1564726594.157100",
        "reply_users": [
            "UK0GCU598",
            "UAVCC2X70"
        ],
        "replies": [
            {
                "user": "UK0GCU598",
                "ts": "1564707353.152700"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1564726235.156900"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1564726594.157100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U3W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The page-centric concept of the web (from a browser standpoint) is a bit strange to begin with, if you think about it. I think it would make sense if instead of \"loading a page\", you loaded a script, which then programmatically creates content. And then, why should loading something else have to make that go away? Perhaps loading the same thing twice would just give you two copies of it, just like if you run the same program twice or open the same file twice. That would also give \"history\" a different connotation"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1564620403.131000",
        "client_msg_id": "092820FD-E384-470B-8431-EAB1D18D03CE",
        "text": "Can’t find it in my notes any more, but I feel like one of the first ZUIs was a browser? When you clicked a link, the new page opened to the right and bigger. Hopefully there’s a lot in this area, that’s just what came to mind first.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564619854.118500",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EbFi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can’t find it in my notes any more, but I feel like one of the first ZUIs was a browser? When you clicked a link, the new page opened to the right and bigger. Hopefully there’s a lot in this area, that’s just what came to mind first."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1564620517.133900",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1564620526.000000"
        },
        "client_msg_id": "351cf54a-f138-4524-b723-c674d1284ac2",
        "text": "Of course, it would be a mess if everything just populated into the same user-side space, so perhaps a script would get it's own bounded view and execution sandbox, and could be allowed to load other scripts into it. And then you could wipe out a whole context if you wanted ... Aaaand I think I just described actual webpages again :\/",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HN31",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Of course, it would be a mess if everything just populated into the same user-side space, so perhaps a script would get it's own bounded view and execution sandbox, and could be allowed to load other scripts into it. And then you could wipe out a whole context if you wanted ... Aaaand I think I just described actual webpages again :\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFEQUBNNT",
                    "UHWC9PXBL",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1564620580.135700",
        "client_msg_id": "da160f87-3676-41bc-89dc-5804781c8647",
        "text": "... except maybe with a \"persistent data structure\" model, where doing again just creates something new rather than changing what was there before",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J+iqo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "... except maybe with a \"persistent data structure\" model, where doing again just creates something new rather than changing what was there before"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            },
            {
                "name": "clap",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1564620974.136700",
        "client_msg_id": "44C4A497-E4ED-4647-BC06-9EF437396F8C",
        "text": "that rings a distant bell for me, although i’m not sure i could google it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564619854.118500",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aZOo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that rings a distant bell for me, although i’m not sure i could google it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U7C7B75R6",
        "type": "message",
        "ts": "1564623237.137100",
        "client_msg_id": "6053d485-61b3-4504-b90e-ff84929449a7",
        "text": "Some helpers:\n-Is HTML correct 'the one' which ties JS and CSS? What if the most first-class citizen would be pure data instead of ~GUI? (linked data stuff?)\n-How do you can use web hosted tools to work with content available from other sites (without manual integrations by either sites developer)? Example: why I cannot use CkEditor inline editor for arbitrary site like writing Slack comments?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564619854.118500",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MjF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some helpers:\n-Is HTML correct 'the one' which ties JS and CSS? What if the most first-class citizen would be pure data instead of ~GUI? (linked data stuff?)\n-How do you can use web hosted tools to work with content available from other sites (without manual integrations by either sites developer)? Example: why I cannot use CkEditor inline editor for arbitrary site like writing Slack comments?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1564625405.137300",
        "client_msg_id": "dfbff355-7f1d-4d37-b872-e8ca823f0677",
        "text": "You should look at Ted Nelson's book \"Dream Machines\" (1974). Nelson coined the word hypertext and invented the world wide web in the late 1960's\/early 1970's. The web browser paradigm we use today was first implemented by Nelson and others as \"The Hypertext Editing System\" at Brown University, in the late 1960's. Nelson considered it a failed prototype, and went on to design a much better system, called Xanadu, which is documented in that book.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564619854.118500",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eh=2f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You should look at Ted Nelson's book \"Dream Machines\" (1974). Nelson coined the word hypertext and invented the world wide web in the late 1960's\/early 1970's. The web browser paradigm we use today was first implemented by Nelson and others as \"The Hypertext Editing System\" at Brown University, in the late 1960's. Nelson considered it a failed prototype, and went on to design a much better system, called Xanadu, which is documented in that book."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]