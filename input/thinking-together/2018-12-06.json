[
    {
        "user": "UEBU4L0BD",
        "type": "message",
        "ts": "1544103761.120000",
        "client_msg_id": "AEC76FEF-9D75-404D-9FE3-52F65097105E",
        "text": "Coding by speaking would be great. ) ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "c222f08ae3ac",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-19\/507735697633_c222f08ae3ac4e54e907_72.png",
            "first_name": "Katerina",
            "real_name": "Katerina solstad",
            "display_name": "Katyaso",
            "team": "T5TCAFTA9",
            "name": "katyasorok",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544103761.120000",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1544118187.122000",
        "reply_users": [
            "U8A5MS6R1",
            "UEBG0NPDK"
        ],
        "replies": [
            {
                "user": "U8A5MS6R1",
                "ts": "1544115954.120900"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1544118167.121700"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1544118187.122000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Np8g\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Coding by speaking would be great. )"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEKEQGB9C",
        "type": "message",
        "ts": "1544113217.120600",
        "client_msg_id": "2626287c-868c-4fcc-92d7-7d90d2ee9641",
        "text": "Not really ... I type much faster and much less ambiguously than I speak",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48a3c4ba8f2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/248a3c4ba8f2972427222d46954f9c1c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Phil Jones",
            "display_name": "interstar",
            "team": "T5TCAFTA9",
            "name": "interstar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544113217.120600",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1544119803.122500",
        "reply_users": [
            "U8A5MS6R1",
            "UEBG0NPDK",
            "UEKEQGB9C",
            "U5Y7114NS"
        ],
        "replies": [
            {
                "user": "U8A5MS6R1",
                "ts": "1544116636.121100"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1544118039.121300"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1544118080.121500"
            },
            {
                "user": "UEKEQGB9C",
                "ts": "1544118912.122300"
            },
            {
                "user": "U5Y7114NS",
                "ts": "1544119803.122500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ms8B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not really ... I type much faster and much less ambiguously than I speak"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UDYGH7K8V",
                    "UCKRZS3DZ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1544115954.120900",
        "client_msg_id": "cc9ccfd6-e1dc-426c-9a30-8fa3ca5d61e9",
        "text": "Interesting idea. What would the language be like? ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544103761.120000",
        "parent_user_id": "UEBU4L0BD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jtw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting idea. What would the language be like?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1544116636.121100",
        "client_msg_id": "e9a8fc9f-20dd-4d01-a336-4460ddfc0510",
        "text": "Surely speaking is much faster than typing? I can never transcribe talks in real time and am always amazed by stenographers - I believe they even have to use special stenotype keyboards.\n\nThe ambiguity aspect is important. I think that depends more on the language design than on the input mechanism (speaking to program doesn't have to use plain English).\n\nI feel exploring this space opens up many other aspects not related to speaking as well. E.g. programming could be more conversational (back and forth) rather than write-everything-up-and-submit dissertation style. Perhaps expressing some ambiguity and then resolving it becomes important.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544113217.120600",
        "parent_user_id": "UEKEQGB9C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cJb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Surely speaking is much faster than typing? I can never transcribe talks in real time and am always amazed by stenographers - I believe they even have to use special stenotype keyboards.\n\nThe ambiguity aspect is important. I think that depends more on the language design than on the input mechanism (speaking to program doesn't have to use plain English).\n\nI feel exploring this space opens up many other aspects not related to speaking as well. E.g. programming could be more conversational (back and forth) rather than write-everything-up-and-submit dissertation style. Perhaps expressing some ambiguity and then resolving it becomes important."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1544118039.121300",
        "client_msg_id": "f5054c98-5b51-43a9-87b5-d0ebd965243f",
        "text": "speaking is faster, but that's because it's typically stream of consciousness instead of deliberate, clear thought. Given that coding currently requires the latter to be of much use, I suspect you'll find that speaking code would be very unnatural without a very different kind of programming system - one that we probably wouldn't even call programming.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544113217.120600",
        "parent_user_id": "UEKEQGB9C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "u3TA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "speaking is faster, but that's because it's typically stream of consciousness instead of deliberate, clear thought. Given that coding currently requires the latter to be of much use, I suspect you'll find that speaking code would be very unnatural without a very different kind of programming system - one that we probably wouldn't even call programming."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEKEQGB9C",
                    "UCUSW7WVD",
                    "UCKRZS3DZ"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1544118080.121500",
        "client_msg_id": "75c9193c-a5a0-4121-bcd6-1338f302d5f8",
        "text": "I explored a little of this at microsoft, but the tech and theory aren't really there for it yet",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544113217.120600",
        "parent_user_id": "UEKEQGB9C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zn6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I explored a little of this at microsoft, but the tech and theory aren't really there for it yet"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1544118167.121700",
        "client_msg_id": "213329e4-6078-4cd9-9f72-9051a9ad13de",
        "text": "For an example of this, see <https:\/\/www.infoq.com\/presentations\/Programming-Voice>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544103761.120000",
        "parent_user_id": "UEBU4L0BD",
        "attachments": [
            {
                "service_name": "InfoQ",
                "title": "Programming by Voice: Becoming a Computer Whisperer",
                "title_link": "https:\/\/www.infoq.com\/presentations\/Programming-Voice",
                "text": "Tavis Rudd demoes writing a small system using several languages and deploying it by issuing voice commands without touching the keyboard.",
                "fallback": "InfoQ: Programming by Voice: Becoming a Computer Whisperer",
                "thumb_url": "https:\/\/res.infoq.com\/presentations\/Programming-Voice\/en\/mediumimage\/Tavisbig.jpg",
                "from_url": "https:\/\/www.infoq.com\/presentations\/Programming-Voice",
                "thumb_width": 270,
                "thumb_height": 200,
                "service_icon": "https:\/\/cdn.infoq.com\/statics_s1_20181204-0305\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/www.infoq.com\/presentations\/Programming-Voice"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OuX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For an example of this, see "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.infoq.com\/presentations\/Programming-Voice"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT",
                    "UEBU4L0BD"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1544118187.122000",
        "client_msg_id": "fbb61de6-ef00-4132-be0e-4b3c30b3b40f",
        "text": "For accessibility reasons, a number of folks have found ways to program by voice",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544103761.120000",
        "parent_user_id": "UEBU4L0BD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sKrOT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For accessibility reasons, a number of folks have found ways to program by voice"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEKEQGB9C",
        "type": "message",
        "ts": "1544118912.122300",
        "client_msg_id": "6c7cad6c-7b48-4d5f-81d9-b5bc7b3e5a07",
        "text": "<@U8A5MS6R1> Agree on the last paragraph ... programming in dialogue with the system \/ in the order that's convenient for the programmer not the machine is one of the directions we should be exploring",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48a3c4ba8f2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/248a3c4ba8f2972427222d46954f9c1c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Phil Jones",
            "display_name": "interstar",
            "team": "T5TCAFTA9",
            "name": "interstar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544113217.120600",
        "parent_user_id": "UEKEQGB9C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mwLL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " Agree on the last paragraph ... programming in dialogue with the system \/ in the order that's convenient for the programmer not the machine is one of the directions we should be exploring"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5Y7114NS",
        "type": "message",
        "ts": "1544119803.122500",
        "client_msg_id": "b3a4798a-d02f-4a0f-b282-8895eacbc8b0",
        "text": "what about in dialogue with another human? there’s the necessary goal of making a program unambiguous to the computer which is executing it, but peer programming is useful in finding assumptions or idiosyncrasies in code that I would not have thought about without another person. I’m imagining some situation where source code is written as a dialectic text – starting from the abstract, then delving into the specifics and edge cases, asking “why” and “how” against the abstract – questions that I often ask to my computer screen when reading someone else’s code. (then I imagine you’d need to make that unambiguous to a computer. I don’t know what that looks like.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga59cfea06d0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa59cfea06d0aded19b6ddc382f8c78c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "David",
            "real_name": "David Lee",
            "display_name": "david",
            "team": "T5TCAFTA9",
            "name": "david",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544113217.120600",
        "parent_user_id": "UEKEQGB9C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cyme",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what about in dialogue with another human? there’s the necessary goal of making a program unambiguous to the computer which is executing it, but peer programming is useful in finding assumptions or idiosyncrasies in code that I would not have thought about without another person. I’m imagining some situation where source code is written as a dialectic text – starting from the abstract, then delving into the specifics and edge cases, asking “why” and “how” against the abstract – questions that I often ask to my computer screen when reading someone else’s code. (then I imagine you’d need to make that unambiguous to a computer. I don’t know what that looks like.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEKEQGB9C"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1544120251.122700",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1544120582.000000"
        },
        "client_msg_id": "04f13ce2-30cd-4497-9505-3b5e7476f8c8",
        "text": "Or you may end up creating functions with lots of optional args for hooks to influence their behavior.\n\nFunctions would end up being large and doing more to make hooks economic.\n\nSo that's two more 'rules of taste' being violated. I'm sure there'll be others.\n\nAll these violations seem like a red flag. Code should be malleable. Making code immutable feels like abuse, going against the grain of its fundamental nature.\n\nMaybe there's value is making certain timeless functions immutable and giving them hashes. Substring search? Blowfish? Especially if you're providing some hard-to-provide property like resistance to timing attacks. But _true_ timelessness is really hard. Even with substring search you end up caring about how strings are represented. Length-prefixed? Null-terminated? You also have the problem of picking the right platform to represent a timeless function in. None of our existing platforms seem good enough. Maybe we need a new VM that lots of new languages build on and share a vocabulary over. Maybe WebAssembly is that platform?\n\nIt may also make sense in a more restricted environment where users can't create first-class functions. Like say a library of stored procedures in your database. But at that point it seems more like an implementation detail of one particular system.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1543729043.042700",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P6c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Or you may end up creating functions with lots of optional args for hooks to influence their behavior.\n\nFunctions would end up being large and doing more to make hooks economic.\n\nSo that's two more 'rules of taste' being violated. I'm sure there'll be others.\n\nAll these violations seem like a red flag. Code should be malleable. Making code immutable feels like abuse, going against the grain of its fundamental nature.\n\nMaybe there's value is making certain timeless functions immutable and giving them hashes. Substring search? Blowfish? Especially if you're providing some hard-to-provide property like resistance to timing attacks. But "
                            },
                            {
                                "type": "text",
                                "text": "true",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " timelessness is really hard. Even with substring search you end up caring about how strings are represented. Length-prefixed? Null-terminated? You also have the problem of picking the right platform to represent a timeless function in. None of our existing platforms seem good enough. Maybe we need a new VM that lots of new languages build on and share a vocabulary over. Maybe WebAssembly is that platform?\n\nIt may also make sense in a more restricted environment where users can't create first-class functions. Like say a library of stored procedures in your database. But at that point it seems more like an implementation detail of one particular system."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDJ2TKB99",
        "type": "message",
        "ts": "1544121728.127000",
        "client_msg_id": "E3F9519A-2A98-4974-8226-0007D8BD580D",
        "text": "Interesting <@UCUSW7WVD>, though we may be thinking of different things. I’m conceiving of content-addressable functions as a means of versioning\/distribution—I believe Joe Armstrong has flirted with similar ideas in “Why do we need modules at all?” The goal of the OAP paper is I believe to make things more editable, not less",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7acd71947ea2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-04\/2564854327154_7acd71947ea203e9a69b_72.jpg",
            "first_name": "Joe",
            "real_name": "Joe Trellick",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1543729043.042700",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ROCQi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": ", though we may be thinking of different things. I’m conceiving of content-addressable functions as a means of versioning\/distribution—I believe Joe Armstrong has flirted with similar ideas in “Why do we need modules at all?” The goal of the OAP paper is I believe to make things more editable, not less"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1544124476.127200",
        "client_msg_id": "a75d2dac-aafd-46f4-886f-abc76b71ee3a",
        "text": "I don't see immutability as against malleability because all we are really saying is the specific version is immutable, but new versions are possible. E.g. a git repo uses immutable chunks but is still an evolving system. We really want something like git that tracks functions and types directly (instead of tracking files), if I understand <@UDJ2TKB99> correctly. The cross-function links would point to specific versions of functions (not just to a function by name), so if you commit a new version of a function F@2, nothing really changes, but you can then selectively\/automatically commit new versions of dependent functions to point to your new version F@2 instead of F@1. Separately you'd want this as single global auto-replicated repository that everyone can commit to because updates don't interfere with each other by default, people chose which updates affect their `main` functions.\n\nThe more interesting question is: do we want functions and types as the unit of update - or something finer\/coarser grained? The OAP uses the term 'expression' but doesn't say what exactly this is.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1543729043.042700",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lW7dY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't see immutability as against malleability because all we are really saying is the specific version is immutable, but new versions are possible. E.g. a git repo uses immutable chunks but is still an evolving system. We really want something like git that tracks functions and types directly (instead of tracking files), if I understand "
                            },
                            {
                                "type": "user",
                                "user_id": "UDJ2TKB99"
                            },
                            {
                                "type": "text",
                                "text": " correctly. The cross-function links would point to specific versions of functions (not just to a function by name), so if you commit a new version of a function F@2, nothing really changes, but you can then selectively\/automatically commit new versions of dependent functions to point to your new version F@2 instead of F@1. Separately you'd want this as single global auto-replicated repository that everyone can commit to because updates don't interfere with each other by default, people chose which updates affect their "
                            },
                            {
                                "type": "text",
                                "text": "main",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " functions.\n\nThe more interesting question is: do we want functions and types as the unit of update - or something finer\/coarser grained? The OAP uses the term 'expression' but doesn't say what exactly this is."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDJ2TKB99"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1544125805.127400",
        "client_msg_id": "a0d0cd76-2f8e-4b23-8e93-2c11363b66e3",
        "text": "Interesting. If everyone is adding versions willy nilly, what does having a single global monorepo for the world buy us? What problem is it solving? I guess I'm not seeing the connection to OAP. I should read the paper first..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1543729043.042700",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LlL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting. If everyone is adding versions willy nilly, what does having a single global monorepo for the world buy us? What problem is it solving? I guess I'm not seeing the connection to OAP. I should read the paper first.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1544131154.128200",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1544131166.000000"
        },
        "client_msg_id": "3f8a2a08-f23f-46cb-8199-bf63586bbb62",
        "text": "The connection is just that a system that tracks versioned entities and their inter-connections might be well suited to store the 'expressions' (as individual entities) of an OAP based system. The hard problem of OAP, as I see it, is figuring out what exactly these expressions are. I was thinking a spreadsheet follows the OAP to some degree - each cell is a named expression and can be overwritten by any other author. Perhaps notebooks (<http:\/\/observablehq.com|observablehq.com>) are also closer to the spirit of OAP than typical code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1543729043.042700",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m=L0U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The connection is just that a system that tracks versioned entities and their inter-connections might be well suited to store the 'expressions' (as individual entities) of an OAP based system. The hard problem of OAP, as I see it, is figuring out what exactly these expressions are. I was thinking a spreadsheet follows the OAP to some degree - each cell is a named expression and can be overwritten by any other author. Perhaps notebooks ("
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/observablehq.com",
                                "text": "observablehq.com"
                            },
                            {
                                "type": "text",
                                "text": ") are also closer to the spirit of OAP than typical code."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1544133430.133200",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1544133505.000000"
        },
        "client_msg_id": "06f5cbd5-4fd5-4b64-91d8-095e23255b8d",
        "text": "There could be a really strong _domain-specific_ angle to this. For instance, when working on Max patches, I already have a mic plugged in to the computer, so that I can feed it nonsense echolalia mouth noises as test data for the patch. Perhaps you could flip the mic input in and out of \"edit mode\" the same way you do for mouse\/keyboard input (just like Hypercard, for those who don't know Max). That'd be nice in the cases where my keyboard and mouse are all the way _over there_, on the far side of a pile of instruments, and I just want to make a quick tweak — set a midi foot pedal to toggle mic edit mode.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ss3bx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There could be a really strong "
                            },
                            {
                                "type": "text",
                                "text": "domain-specific",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " angle to this. For instance, when working on Max patches, I already have a mic plugged in to the computer, so that I can feed it nonsense echolalia mouth noises as test data for the patch. Perhaps you could flip the mic input in and out of \"edit mode\" the same way you do for mouse\/keyboard input (just like Hypercard, for those who don't know Max). That'd be nice in the cases where my keyboard and mouse are all the way "
                            },
                            {
                                "type": "text",
                                "text": "over there",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", on the far side of a pile of instruments, and I just want to make a quick tweak — set a midi foot pedal to toggle mic edit mode."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "sunglasses",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1544133684.135500",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1544134012.000000"
        },
        "client_msg_id": "96c44d1a-10c5-434b-aa29-289b40ee4c3f",
        "text": "Here's another domain — automation. \"Hey Siri — set my living room lights to 50% brightness, close the blinds, and play some white noise. Save this as a new scene called 'Headache'.\" If you're going to use voice to invoke _something_, and that _something_ can be customized, I'd like to see consideration for how you could customize it with your voice. Don't just think home automation, either. Think about building Automator actions, where there's only a small set of available commands and extremely simple composition. The risk of ambiguity is quite low.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lzlRp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's another domain — automation. \"Hey Siri — set my living room lights to 50% brightness, close the blinds, and play some white noise. Save this as a new scene called 'Headache'.\" If you're going to use voice to invoke "
                            },
                            {
                                "type": "text",
                                "text": "something",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and that "
                            },
                            {
                                "type": "text",
                                "text": "something",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " can be customized, I'd like to see consideration for how you could customize it with your voice. Don't just think home automation, either. Think about building Automator actions, where there's only a small set of available commands and extremely simple composition. The risk of ambiguity is quite low."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDPV407CZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1544134466.136800",
        "client_msg_id": "3d227261-c116-44ff-b3e0-b492b1c3f47f",
        "text": "Lastly, it might be nice to specify a DB query using voice input, especially in a sandbox environment that shows example results as you hone the query.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QnF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lastly, it might be nice to specify a DB query using voice input, especially in a sandbox environment that shows example results as you hone the query."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEKEQGB9C",
        "type": "message",
        "ts": "1544144807.138600",
        "client_msg_id": "121859b9-f7f1-42c8-a5db-3e2d4b868959",
        "text": "I think voice + drawing surface is a really interesting combination. I'd love to see a classic boxes and arrows type diagramming system where I could use a pen to put the boxes in and add connections between them, but use voice to say what the boxes are .... eg. make a box with the pen, hold pen over the box and say \"this is a class called Car\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48a3c4ba8f2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/248a3c4ba8f2972427222d46954f9c1c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Phil Jones",
            "display_name": "interstar",
            "team": "T5TCAFTA9",
            "name": "interstar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544144807.138600",
        "reply_count": 3,
        "reply_users_count": 1,
        "latest_reply": "1544155387.146300",
        "reply_users": [
            "UC2A2ARPT"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1544155063.145900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1544155187.146100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1544155387.146300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BRyq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think voice + drawing surface is a really interesting combination. I'd love to see a classic boxes and arrows type diagramming system where I could use a pen to put the boxes in and add connections between them, but use voice to say what the boxes are .... eg. make a box with the pen, hold pen over the box and say \"this is a class called Car\""
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "ok_hand",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1544146960.140900",
        "client_msg_id": "683d1906-a5e7-40fb-86f9-bb9abf54fa80",
        "text": "Having tried dictation more on my phone, editing mistranscribed messages could use some work.  Speech recognition has improved vastly, but I feel like still too much ceremony in it.  Invoking an agent is less like conversation and more like casting a spell.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9k3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Having tried dictation more on my phone, editing mistranscribed messages could use some work.  Speech recognition has improved vastly, but I feel like still too much ceremony in it.  Invoking an agent is less like conversation and more like casting a spell."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1544154907.145000",
        "client_msg_id": "0d0a63ea-df3d-4e2b-ae4c-d455eb36ca4b",
        "text": "Yeah, but at the risk of sounding like a nerd (_here!? no way!_) it has always felt _so dang cool_ to get a computer to do something because I told it to with my own human meatspace voice. It's frustrating when it doesn't work, sure, but in a \"56k modems were so slow!\" sort of way, not a \"why doesn't iOS have a system-wide convention for undo\/redo?\" way — in other words, we can start thinking about what neat things you could do with your voice now, with a fairly reasonable expectation that speech recognition will improve. It's not held back by (eg) bad design decisions; it's held back by the insufficiently-expanded boundary between advanced tech and magic.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ggLtX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, but at the risk of sounding like a nerd ("
                            },
                            {
                                "type": "text",
                                "text": "here!? no way!",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") it has always felt "
                            },
                            {
                                "type": "text",
                                "text": "so dang cool",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to get a computer to do something because I told it to with my own human meatspace voice. It's frustrating when it doesn't work, sure, but in a \"56k modems were so slow!\" sort of way, not a \"why doesn't iOS have a system-wide convention for undo\/redo?\" way — in other words, we can start thinking about what neat things you could do with your voice now, with a fairly reasonable expectation that speech recognition will improve. It's not held back by (eg) bad design decisions; it's held back by the insufficiently-expanded boundary between advanced tech and magic."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1544154960.145700",
        "client_msg_id": "4d08c480-3d1d-469d-8346-478495b53693",
        "text": "I believe, to my core, that programming should lean into doing things that feel _so dang cool_ as much as possible.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544154960.145700",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1544402187.207600",
        "reply_users": [
            "UA14TGLTC",
            "UEH6T3RJB",
            "UCGAK10LS"
        ],
        "replies": [
            {
                "user": "UA14TGLTC",
                "ts": "1544162400.146800"
            },
            {
                "user": "UEH6T3RJB",
                "ts": "1544268926.177300"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1544402065.207400"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1544402187.207600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "agOdw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I believe, to my core, that programming should lean into doing things that feel "
                            },
                            {
                                "type": "text",
                                "text": "so dang cool",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " as much as possible."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "UEKEQGB9C"
                ],
                "count": 1
            },
            {
                "name": "sunglasses",
                "users": [
                    "U8A5MS6R1",
                    "U5TCAFTD3"
                ],
                "count": 2
            },
            {
                "name": "-1",
                "users": [
                    "UEH6T3RJB",
                    "UCGAK10LS"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1544155063.145900",
        "client_msg_id": "9ca102a3-a0bb-4c89-8c2d-ef32639a2be3",
        "text": "I absolutely love this idea.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544144807.138600",
        "parent_user_id": "UEKEQGB9C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4dh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I absolutely love this idea."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1544155187.146100",
        "client_msg_id": "42323ece-29e1-46a4-bd22-4d05ab156fc6",
        "text": "This would play really nicely in Dynamicland — \"Room Computer, print me out another copy of GeoKit, on pink paper.\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544144807.138600",
        "parent_user_id": "UEKEQGB9C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DIQqh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This would play really nicely in Dynamicland — \"Room Computer, print me out another copy of GeoKit, on pink paper.\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1544155387.146300",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1544155428.000000"
        },
        "client_msg_id": "18b76ca5-140f-4f7f-9713-792f0e034d7f",
        "text": "Using a pen and a patcher-style visual language, you get a nice separation of \"what\" and \"how\" going the route you described. You do the orchestration with the pen, and the specification with the voice. That's almost the complete opposite of what I was thinking about when I wrote my Max example above (though I didn't bother explaining that, for the sake of brevity). Very fun to consider this space.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544144807.138600",
        "parent_user_id": "UEKEQGB9C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9m\/1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Using a pen and a patcher-style visual language, you get a nice separation of \"what\" and \"how\" going the route you described. You do the orchestration with the pen, and the specification with the voice. That's almost the complete opposite of what I was thinking about when I wrote my Max example above (though I didn't bother explaining that, for the sake of brevity). Very fun to consider this space."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1544157433.146600",
        "client_msg_id": "dc88f41a-6a43-4801-a454-650c1015c840",
        "text": "I just encountered <https:\/\/medium.com\/@kentbeck_7670\/limbo-scaling-software-collaboration-afd4f00db4b>, which seems relevant.\n\n&gt; Limbo is live, shared programming. It balances precariously between two principles:\n&gt;\n&gt; * Everyone is working on (and production is executing) the same program, represented by a single abstract syntax tree.\n&gt; * No one is allowed to cause others (including users) problems.\n&gt;\n&gt; The changes that propagate through Limbo are transformations of the abstract syntax tree [not raw text].",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1543729043.042700",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C+uiN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just encountered "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/medium.com\/@kentbeck_7670\/limbo-scaling-software-collaboration-afd4f00db4b"
                            },
                            {
                                "type": "text",
                                "text": ", which seems relevant.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Limbo is live, shared programming. It balances precariously between two principles:\n\n* Everyone is working on (and production is executing) the same program, represented by a single abstract syntax tree.\n* No one is allowed to cause others (including users) problems.\n\nThe changes that propagate through Limbo are transformations of the abstract syntax tree [not raw text]."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1544162400.146800",
        "client_msg_id": "b0cdf2cb-a71b-408a-9793-efa87cc6acf4",
        "text": "Huh, \"so dang cool\" as an appeal to aesthetics seems similar to an appeal to \"mathematical beauty\" — with the same promise and perils.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1544154960.145700",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+1yn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Huh, \"so dang cool\" as an appeal to aesthetics seems similar to an appeal to \"mathematical beauty\" — with the same promise and perils."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UC2A2ARPT"
                ],
                "count": 2
            }
        ]
    }
]