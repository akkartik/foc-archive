[
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1647859090.612199",
        "edited": {
            "user": "U02E4DAQGSZ",
            "ts": "1647859459.000000"
        },
        "client_msg_id": "618c9d70-9261-424a-9d18-7e7e664cb208",
        "text": "So the AI tarot reading app is done: <https:\/\/thetarot.online\/index.html>\nIt has been programmed entirely within Observable. Production traffic is routed through the developers notebook if you have it open, so you can observe the system live. I exploit observables dataflow so each step of the processing pipeline is cached, so you can see exactly where a problem occurred, and thanks to hot code reload, you can fix a bug and have the pipeline continue without rerunning prior steps allowing easy iterative programming workflows. Of course, because Observable notebooks are executing Javascript, you can attach a debugger too (even programmatically)\nOne click forkable, MIT licensed.\n\nThis is what I think the future of software development should look like. But I am struggling to communicate this well. The idea is to make cloud programming feel local, to exclusively test in prod, because when you are hitting third party APIs its a waste of effort mocking a staging environment, or a local environment. I want to remove the thick layers of indirection in the development process that no longer make sense. Forget git, forget toolchains, just straight to prod using modern Javascript, debugged with the authoritative debuggers built into browsers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647859090.612199",
        "reply_count": 15,
        "reply_users_count": 5,
        "latest_reply": "1650359245.507379",
        "reply_users": [
            "U01HKV85Y1J",
            "U02E4DAQGSZ",
            "UFPPABQ7P",
            "U01FAFPDFL4",
            "UCUSW7WVD"
        ],
        "replies": [
            {
                "user": "U01HKV85Y1J",
                "ts": "1647871366.750349"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1647879356.372639"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1647881232.049159"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1647893747.370529"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1647916342.174759"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1647922364.069599"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1647941729.403759"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1648360894.525169"
            },
            {
                "user": "U01FAFPDFL4",
                "ts": "1648364667.146339"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1648371685.506629"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1648875252.597709"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1648875394.776299"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1648914344.453699"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1648917094.583549"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1650359245.507379"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/thetarot.online\/index.html",
                "image_url": "https:\/\/storage.googleapis.com\/larkworthy-dfb11.appspot.com\/%40tomlarkworthy\/tarot-backend\/images\/-MyWC6L4ZE1HtVWM1SRc",
                "image_width": 492,
                "image_height": 250,
                "image_bytes": 283204,
                "id": 1,
                "original_url": "https:\/\/thetarot.online\/index.html",
                "fallback": "Tarot Reader",
                "text": "Ask a question for the cards",
                "title": "Tarot Reader",
                "title_link": "https:\/\/thetarot.online\/index.html",
                "service_name": "thetarot.online"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A99",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So the AI tarot reading app is done: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/thetarot.online\/index.html"
                            },
                            {
                                "type": "text",
                                "text": "\nIt has been programmed entirely within Observable. Production traffic is routed through the developers notebook if you have it open, so you can observe the system live. I exploit observables dataflow so each step of the processing pipeline is cached, so you can see exactly where a problem occurred, and thanks to hot code reload, you can fix a bug and have the pipeline continue without rerunning prior steps allowing easy iterative programming workflows. Of course, because Observable notebooks are executing Javascript, you can attach a debugger too (even programmatically)\nOne click forkable, MIT licensed.\n\nThis is what I think the future of software development should look like. But I am struggling to communicate this well. The idea is to make cloud programming feel local, to exclusively test in prod, because when you are hitting third party APIs its a waste of effort mocking a staging environment, or a local environment. I want to remove the thick layers of indirection in the development process that no longer make sense. Forget git, forget toolchains, just straight to prod using modern Javascript, debugged with the authoritative debuggers built into browsers."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01HKV85Y1J",
        "type": "message",
        "ts": "1647871366.750349",
        "client_msg_id": "9ddf1d51-63c5-441f-aee6-d466cac97b7a",
        "text": "Fascinating stuff, but how does one get rid of git? How would a large team work together without stepping on each other's toes? How would folks keep track of features, merge branches, research where exactly a bug got introduced, etc etc etc? Git is such a perfect tool for the job in so many of these cases, so I'm not sure how one would get rid of it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf67023e922f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f67023e922f1b8898e41ad2ff927b301.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "David Brooks",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "brodavi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647859090.612199",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TDh4d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Fascinating stuff, but how does one get rid of git? How would a large team work together without stepping on each other's toes? How would folks keep track of features, merge branches, research where exactly a bug got introduced, etc etc etc? Git is such a perfect tool for the job in so many of these cases, so I'm not sure how one would get rid of it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1647879356.372639",
        "edited": {
            "user": "U02E4DAQGSZ",
            "ts": "1647879889.000000"
        },
        "client_msg_id": "1b7a2613-eae1-4e34-bd39-bf3a074a50d5",
        "text": "I don't need git because Observable notebooks support forking and merging and have a linear history with rollbacks, which is enough for teams. Git is great, but its overkill (how many people stop working when Github is down, in practice, we don't use it like Linus needed it to be) and its kind of a workflow distraction (ok! now I need to think of a commit message).\n\nIf we cut (Github in particular) out we have eliminated a whole load of extraneous development complexity and distraction.\n\nNobody spontaneously follows a git workflow, you have to be trained, it's unnatural. We just need a get out of jail command for mistakes (rollbacks) and merging for working with others. Version control should work as background feature to a realtime process",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647859090.612199",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IG5B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't need git because Observable notebooks support forking and merging and have a linear history with rollbacks, which is enough for teams. Git is great, but its overkill (how many people stop working when Github is down, in practice, we don't use it like Linus needed it to be) and its kind of a workflow distraction (ok! now I need to think of a commit message).\n\nIf we cut (Github in particular) out we have eliminated a whole load of extraneous development complexity and distraction.\n\nNobody spontaneously follows a git workflow, you have to be trained, it's unnatural. We just need a get out of jail command for mistakes (rollbacks) and merging for working with others. Version control should work as background feature to a realtime process"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01HKV85Y1J",
        "type": "message",
        "ts": "1647881232.049159",
        "client_msg_id": "500e66b4-8b94-4053-a3d2-5eef0a8ed715",
        "text": "It sounds like this move might be right for you and your team, but this has been pretty much 180 degrees from my team's experience. In my team, devs from all over the world working in a variety of languages and platforms all know Git. It's something they share, a language we all speak. We occasionally use Github, but we are definitely not dependent on it. In our projects, we see a lot of benefit from leaving detailed and clear commit messages. It helps a lot when doing forensic analysis.\n\nIn any case, I love what you've done here re: Observable development; love the vision! :thumbsup_all:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf67023e922f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f67023e922f1b8898e41ad2ff927b301.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "David Brooks",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "brodavi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647859090.612199",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7yHp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It sounds like this move might be right for you and your team, but this has been pretty much 180 degrees from my team's experience. In my team, devs from all over the world working in a variety of languages and platforms all know Git. It's something they share, a language we all speak. We occasionally use Github, but we are definitely not dependent on it. In our projects, we see a lot of benefit from leaving detailed and clear commit messages. It helps a lot when doing forensic analysis.\n\nIn any case, I love what you've done here re: Observable development; love the vision! "
                            },
                            {
                                "type": "emoji",
                                "name": "thumbsup_all"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1647893747.370529",
        "client_msg_id": "322b4652-1c76-41e0-a2e6-6e85b620cb2c",
        "text": "yeah it doesn't suit everything, but not everything is worthy the formality of commit messages either. Maybe this is an interesting use case: end2end API testing. I have cronjobs that ping notebooks, that can login and test secure APIs against unit tests (<https:\/\/observablehq.com\/@tomlarkworthy\/testing>). By writing a test you pretty well specify everything a commit message would and the reactive nature of the notebooks are really good for iterating on like API authentication. WDYT?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647859090.612199",
        "parent_user_id": "U02E4DAQGSZ",
        "attachments": [
            {
                "from_url": "https:\/\/observablehq.com\/@tomlarkworthy\/testing",
                "image_url": "https:\/\/static.observableusercontent.com\/thumbnail\/30f21ae174a80bb829c64544cf5b5e218f1681a8534d7230d2a1d25a77c3c159.jpg",
                "image_width": 400,
                "image_height": 250,
                "image_bytes": 17375,
                "service_icon": "https:\/\/observablehq.com\/favicon-512.png",
                "id": 1,
                "original_url": "https:\/\/observablehq.com\/@tomlarkworthy\/testing",
                "fallback": "Reactive Unit Testing and Reporting Framework",
                "text": "A test suite that updates as you fix bugs in realtime. Combines with healthcheck to create a CI. Monitorable with healthcheck Followable stack track from failure to implementation filter tests by regex rerun tests by pressing enter. Familiar Jest expressions Only matched tests are run, allowing you to focus on executing individual tests precisely. Import the suite Create the UI Create named tests using jest expect. See the example here. Change log 2021-11-10 Remove TAP link, healthcheck is better. 2020-03-2",
                "title": "Reactive Unit Testing and Reporting Framework",
                "title_link": "https:\/\/observablehq.com\/@tomlarkworthy\/testing",
                "service_name": "observablehq.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G26",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah it doesn't suit everything, but not everything is worthy the formality of commit messages either. Maybe this is an interesting use case: end2end API testing. I have cronjobs that ping notebooks, that can login and test secure APIs against unit tests ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/observablehq.com\/@tomlarkworthy\/testing"
                            },
                            {
                                "type": "text",
                                "text": "). By writing a test you pretty well specify everything a commit message would and the reactive nature of the notebooks are really good for iterating on like API authentication. WDYT?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1647916342.174759",
        "client_msg_id": "9319ca9c-4b71-4cf0-94dd-f1b5e074d9cc",
        "text": "<@U02E4DAQGSZ>, really neat AI interpretation and card choosing mechanic. I'm tempted to try building something like this for myself, since I should be able to see how you did the AI since it's in ObservableHQ, right?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647859090.612199",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l0tq\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02E4DAQGSZ"
                            },
                            {
                                "type": "text",
                                "text": ", really neat AI interpretation and card choosing mechanic. I'm tempted to try building something like this for myself, since I should be able to see how you did the AI since it's in ObservableHQ, right?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01HKV85Y1J",
        "type": "message",
        "ts": "1647922364.069599",
        "client_msg_id": "b7160e84-197f-4e44-b1eb-dc31c73a700a",
        "text": "It's really neat!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf67023e922f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f67023e922f1b8898e41ad2ff927b301.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "David Brooks",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "brodavi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647859090.612199",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iJ93Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's really neat!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]