[
    {
        "user": "UEP7RL0HX",
        "type": "message",
        "ts": "1552289286.259300",
        "client_msg_id": "5c316014-f0ef-4750-91bf-68ae8c95cc56",
        "text": "I'm designing a structured editor for text-based coding, where tapping\/clicking any text element brings up a context-sensitive menu for editing the text element and\/or for spawning additional text elements. See <https:\/\/www.slideshare.net\/secret\/4AG6fsd0t3tCNi> if you're curious.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4c54a8f7c01",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c4c54a8f7c01b3e22a1e82ae29c85f70.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Dan Swirsky",
            "display_name": "Dan Swirsky",
            "team": "T5TCAFTA9",
            "name": "dswirsky",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552233851.253900",
        "parent_user_id": "UAL7940NM",
        "attachments": [
            {
                "title": "IDE Piano",
                "title_link": "https:\/\/www.slideshare.net\/secret\/4AG6fsd0t3tCNi",
                "text": "Welcome to Hilltop",
                "fallback": "IDE Piano",
                "thumb_url": "https:\/\/public.slidesharecdn.com\/images\/private_thumbnail.gif",
                "from_url": "https:\/\/www.slideshare.net\/secret\/4AG6fsd0t3tCNi",
                "thumb_width": 170,
                "thumb_height": 120,
                "service_icon": "https:\/\/public.slidesharecdn.com\/favicon.ico?d8e2a4ed15",
                "service_name": "slideshare.net",
                "id": 1,
                "original_url": "https:\/\/www.slideshare.net\/secret\/4AG6fsd0t3tCNi"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IsC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm designing a structured editor for text-based coding, where tapping\/clicking any text element brings up a context-sensitive menu for editing the text element and\/or for spawning additional text elements. See "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.slideshare.net\/secret\/4AG6fsd0t3tCNi"
                            },
                            {
                                "type": "text",
                                "text": " if you're curious."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1552289573.262300",
        "client_msg_id": "C9DCC9C5-0671-459F-82C0-74ADFF859363",
        "text": "<@UCGAK10LS> have you checked out Lamdu? Basically your very description of Hazel applies to Lamdu as well, except its current state is slightly less basic because we’ve been working on it hard for quite some time",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552233851.253900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VnG3V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " have you checked out Lamdu? Basically your very description of Hazel applies to Lamdu as well, except its current state is slightly less basic because we’ve been working on it hard for quite some time"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1552290306.262500",
        "client_msg_id": "691227fa-a096-451f-843f-89250f5c3193",
        "text": "<@U79HM6726> I have, and it's pretty cool :slightly_smiling_face:. I would still consider them distinct, and I'm sure they'll make different design decisions as they grow.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552233851.253900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xgj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U79HM6726"
                            },
                            {
                                "type": "text",
                                "text": " I have, and it's pretty cool "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": ". I would still consider them distinct, and I'm sure they'll make different design decisions as they grow."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ7QL15F",
        "type": "message",
        "ts": "1552296736.263000",
        "client_msg_id": "4b1d30ae-1fdd-49aa-a65c-bbff55378146",
        "text": "Perhaps not enough attention has been put into user testing and UX when creating structured editors?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g52d221ae708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a52d221ae708f36674644a348005633a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Janne",
            "real_name": "Janne Aukia",
            "display_name": "jaukia",
            "team": "T5TCAFTA9",
            "name": "janne.aukia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552233851.253900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0vob4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Perhaps not enough attention has been put into user testing and UX when creating structured editors?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1552298257.263200",
        "client_msg_id": "ca8b68d4-5598-4e5a-907c-0c0e5cdb1546",
        "text": "<@UEQ7QL15F> it takes a lot of work to make a structured editor with a good enough experience to “be worthy” of a good user\/UX testing.\n\nNote that MPS\/mbeddr have actually done several formal user studies - [example](<https:\/\/www.reddit.com\/r\/nosyntax\/comments\/93317x\/towards_userfriendly_projectional_editors\/>)\n\nFor Lamdu we’ve made some informal user testing and some extensive personal dog-fooding (writing apps with the system), and we got invaluable feedback which made us improve Lamdu a lot by going for WYTIWYS and working on good responsive layout (at first big programs required horizontal scroll which we found is horrible)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552233851.253900",
        "parent_user_id": "UAL7940NM",
        "attachments": [
            {
                "service_name": "reddit",
                "title": "r\/nosyntax - Towards User-Friendly Projectional Editors",
                "title_link": "https:\/\/www.reddit.com\/r\/nosyntax\/comments\/93317x\/towards_userfriendly_projectional_editors\/",
                "text": "4 votes and 1 comment so far on Reddit",
                "fallback": "reddit: r\/nosyntax - Towards User-Friendly Projectional Editors",
                "from_url": "https:\/\/www.reddit.com\/r\/nosyntax\/comments\/93317x\/towards_userfriendly_projectional_editors\/",
                "service_icon": "https:\/\/www.redditstatic.com\/desktop2x\/img\/favicon\/apple-icon-57x57.png",
                "id": 1,
                "original_url": "https:\/\/www.reddit.com\/r\/nosyntax\/comments\/93317x\/towards_userfriendly_projectional_editors\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V2DkD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ7QL15F"
                            },
                            {
                                "type": "text",
                                "text": " it takes a lot of work to make a structured editor with a good enough experience to “be worthy” of a good user\/UX testing.\n\nNote that MPS\/mbeddr have actually done several formal user studies - [example]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.reddit.com\/r\/nosyntax\/comments\/93317x\/towards_userfriendly_projectional_editors\/"
                            },
                            {
                                "type": "text",
                                "text": ")\n\nFor Lamdu we’ve made some informal user testing and some extensive personal dog-fooding (writing apps with the system), and we got invaluable feedback which made us improve Lamdu a lot by going for WYTIWYS and working on good responsive layout (at first big programs required horizontal scroll which we found is horrible)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1552299569.263600",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1552299649.000000"
        },
        "client_msg_id": "efb64ac0-762a-4279-97ed-ffc6b61dca4e",
        "text": "<@UD4Q9LT52> it seems to me that we do use plain text for the closest thing to programmer UIs: spreadsheets and instructions from humans to other humans (pictograms may be used for the latter, but only in certain cases, and I think the same applies to graphical programming - it's useful only sometimes.) And note that the non-text disk format of the spreadsheet thwarts diff tools.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552233851.253900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LSDdN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UD4Q9LT52"
                            },
                            {
                                "type": "text",
                                "text": " it seems to me that we do use plain text for the closest thing to programmer UIs: spreadsheets and instructions from humans to other humans (pictograms may be used for the latter, but only in certain cases, and I think the same applies to graphical programming - it's useful only sometimes.) And note that the non-text disk format of the spreadsheet thwarts diff tools."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1552300377.264000",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1552300391.000000"
        },
        "client_msg_id": "573d5dd0-34d0-453c-960b-ab3715696ba6",
        "text": "\"Governments across the world are funding universities to the highest level in history\" Well, \"The percent of U.S. GDP spent on federally funded research and development annually has been stagnant or dropping for 40 years\" - <http:\/\/theconversation.com\/with-federal-funding-for-science-on-the-decline-whats-the-role-of-a-profit-motive-in-research-93322> - so I wonder if you have adjusted for population growth.\n\nI do marvel at the enormous salary of my former supervisor at the university, who was basically an old mathematician masquerading as a computer scientist, a man whose papers are incomprehensible to those not well versed in category theory, and whose skill at communicating with non-mathematicians like me was almost nonexistent in both directions (listening and speaking). Due to a new transparency law I saw that they paid him $168,000 CAD ... why exactly?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552152219.231300",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NHFr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Governments across the world are funding universities to the highest level in history\" Well, \"The percent of U.S. GDP spent on federally funded research and development annually has been stagnant or dropping for 40 years\" - "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/theconversation.com\/with-federal-funding-for-science-on-the-decline-whats-the-role-of-a-profit-motive-in-research-93322"
                            },
                            {
                                "type": "text",
                                "text": " - so I wonder if you have adjusted for population growth.\n\nI do marvel at the enormous salary of my former supervisor at the university, who was basically an old mathematician masquerading as a computer scientist, a man whose papers are incomprehensible to those not well versed in category theory, and whose skill at communicating with non-mathematicians like me was almost nonexistent in both directions (listening and speaking). Due to a new transparency law I saw that they paid him $168,000 CAD ... why exactly?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFD2JRE58",
        "type": "message",
        "ts": "1552302137.264400",
        "client_msg_id": "941433af-5696-4367-b0c9-2c7e51c10684",
        "text": "Something I experience which is quite subtle... kind of related <@U79HM6726> and WYTIWYS:\n\nIt's mistrust. It's very psychological and hangs like a cloud of unease over all high-level editors including e.g. wyswyg word processors.\n\nHigher level editors are buggy and have invisible state that comes back to bite you in unpredictable and frustrating ways. This applies to basic things e.g. I still can't rely on bullet point lists or indentation in Google Docs.\n\nIn contrast, text feels like a raw material that can't lie to you. The ground under your feet is solid and there won't be any nasty surprises. Very few high level editors get to the point of feeling \"safe\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ca63ca2aa38f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-01-20\/529811744742_ca63ca2aa38fa658cc4f_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Woods",
            "display_name": "duncanawoods",
            "team": "T5TCAFTA9",
            "name": "duncan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552233851.253900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VkD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Something I experience which is quite subtle... kind of related "
                            },
                            {
                                "type": "user",
                                "user_id": "U79HM6726"
                            },
                            {
                                "type": "text",
                                "text": " and WYTIWYS:\n\nIt's mistrust. It's very psychological and hangs like a cloud of unease over all high-level editors including e.g. wyswyg word processors.\n\nHigher level editors are buggy and have invisible state that comes back to bite you in unpredictable and frustrating ways. This applies to basic things e.g. I still can't rely on bullet point lists or indentation in Google Docs.\n\nIn contrast, text feels like a raw material that can't lie to you. The ground under your feet is solid and there won't be any nasty surprises. Very few high level editors get to the point of feeling \"safe\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAL7940NM",
                    "UA14TGLTC",
                    "UD4Q9LT52",
                    "UEQ6M68H0",
                    "UD6EXQVM0"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UFD2JRE58",
        "type": "message",
        "ts": "1552302661.264600",
        "edited": {
            "user": "UFD2JRE58",
            "ts": "1552302779.000000"
        },
        "client_msg_id": "3caf567a-2bcd-4cf7-956f-397d443fb1a0",
        "text": "<@UD4Q9LT52>\n\n&gt; If text is really such a natural way of working why don't we use it more for non-programmer UIs?\n\nI've thought about this too.\n\nI think for a constrained task, a constrained high level UI is the best. A lot of end user UI is task specific so that is the better choice.\n\nFor creative tasks however, the use case is more like putting a lump of clay on a potter's wheel and then massaging it into your end result with the ability to explore lots of different paths. If a high level editor adds constraints and abstractions that means you can't do this, it becomes a bad editor.\n\nI am quite interested in the philosophy of craftsmanship which has a lot to do with interaction between a craftsman and material. I think a structured editor can achieve the same certainty as text if it's fundamental unit of material has the right properties.\n\nI'm not sure what these properties are but it's something like:\n- predicatable rules of combination\n- always possible to add or remove anything\n- no hidden state\n- can act on groups as you can on individuals\n\nSpreadsheets work quite well with cells as materials. It's not perfect but you know where they are and how to combine them so it feels solid. Spreadsheet formulas however, eh, not so much!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ca63ca2aa38f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-01-20\/529811744742_ca63ca2aa38fa658cc4f_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Woods",
            "display_name": "duncanawoods",
            "team": "T5TCAFTA9",
            "name": "duncan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552233851.253900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BT7g\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UD4Q9LT52"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If text is really such a natural way of working why don't we use it more for non-programmer UIs?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nI've thought about this too.\n\nI think for a constrained task, a constrained high level UI is the best. A lot of end user UI is task specific so that is the better choice.\n\nFor creative tasks however, the use case is more like putting a lump of clay on a potter's wheel and then massaging it into your end result with the ability to explore lots of different paths. If a high level editor adds constraints and abstractions that means you can't do this, it becomes a bad editor.\n\nI am quite interested in the philosophy of craftsmanship which has a lot to do with interaction between a craftsman and material. I think a structured editor can achieve the same certainty as text if it's fundamental unit of material has the right properties.\n\nI'm not sure what these properties are but it's something like:\n- predicatable rules of combination\n- always possible to add or remove anything\n- no hidden state\n- can act on groups as you can on individuals\n\nSpreadsheets work quite well with cells as materials. It's not perfect but you know where they are and how to combine them so it feels solid. Spreadsheet formulas however, eh, not so much!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UD4Q9LT52"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEH6T3RJB",
        "type": "message",
        "ts": "1552304313.265300",
        "client_msg_id": "08a7b6f6-9900-4894-8492-8054cc57c6c7",
        "text": "Given his current status, Negroponte could easily set up and fund a lab addressing the actually relevant fundamental research problems if he were so inclined. Nothing obliges Apple, under the current conventions of capitalism, to do anything other than maximise its shareholder value so there's absolutely nothing anomalous in its behaviour. As you say, we should be grateful that many private companies have accidentally ended up disseminating breakthroughs of benefit to society.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5184556fcf3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/75184556fcf3aa660f5e56b8e5bdd46d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0021-72.png",
            "first_name": "",
            "real_name": "Antranig Basman",
            "display_name": "Bosmon",
            "team": "T5TCAFTA9",
            "name": "amb26slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552152219.231300",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wV1AK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Given his current status, Negroponte could easily set up and fund a lab addressing the actually relevant fundamental research problems if he were so inclined. Nothing obliges Apple, under the current conventions of capitalism, to do anything other than maximise its shareholder value so there's absolutely nothing anomalous in its behaviour. As you say, we should be grateful that many private companies have accidentally ended up disseminating breakthroughs of benefit to society."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1552304645.265500",
        "client_msg_id": "71b3c3a3-b4df-46f9-832d-d912e6acd2f1",
        "text": "I don't think it's so easy, I've heard Alan Kay and Bret Victor say how hard it is to get funding for long term research",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552152219.231300",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+r6qZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't think it's so easy, I've heard Alan Kay and Bret Victor say how hard it is to get funding for long term research"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1552304672.265700",
        "client_msg_id": "78b3e0a3-3775-4460-86e8-11c9abd01ae7",
        "text": "and if they can't get funding I can't imagine how hard it is for lesser known people",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552152219.231300",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vAbv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and if they can't get funding I can't imagine how hard it is for lesser known people"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC21F8Q48",
        "type": "message",
        "ts": "1552313033.266100",
        "client_msg_id": "7957c5eb-53e1-45b1-a787-b1401d0b4384",
        "text": "Hypothesis: 80% of the benefit of structured editing is not the structure per-say, but in the shift in mindset such that you should provide tooling right next to and spatially integrated with the display of code—refactoring tools, debugging info, performance info, live feedback, related code search, etc. There’s no reason you can’t provide the same advanced tooling for text buffers—only that text buffers lock you (the IDE designer) into thinking about text manipulations and thinking that you are locked into a rigid display of the program. The value of the structured editor is that, because you are rethinking the code display, you are freed up to offer rich program insights and manipulations close to and interspersed with the code. It’s those tools, not the structural tree manipulations, where the real value is.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d79ba47b2952",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-03\/410049852848_d79ba47b2952e74a99d9_72.jpg",
            "first_name": "Brian",
            "real_name": "Brian Hempel",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "brianhempel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552233851.253900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7E=tg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hypothesis: 80% of the benefit of structured editing is not the structure per-say, but in the shift in mindset such that you should provide tooling right next to and spatially integrated with the display of code—refactoring tools, debugging info, performance info, live feedback, related code search, etc. There’s no reason you can’t provide the same advanced tooling for text buffers—only that text buffers lock you (the IDE designer) into thinking about text manipulations and thinking that you are locked into a rigid display of the program. The value of the structured editor is that, because you are rethinking the code display, you are freed up to offer rich program insights and manipulations close to and interspersed with the code. It’s those tools, not the structural tree manipulations, where the real value is."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1",
                    "UA14TGLTC"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "UD6EXQVM0",
                    "UDRF3ALP4"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1552314387.266300",
        "edited": {
            "user": "U79HM6726",
            "ts": "1552314438.000000"
        },
        "client_msg_id": "476c5e0c-d03a-40de-847f-d479a1b6ad20",
        "text": "<@UE6EFEPTQ>:\nThe reddit table has different details, and which details are the important one is of course subjective. And note that it’s several different tables (the first and big one is for structural editors but then you have blocks, visual, spreadsheet etc).\n\nI think that the important details are:\n\n• Form (visual\/blocks\/etc)\n• Target language (Java \/ Functional language \/ Dynamic types \/ etc)\n• Target audience (Programmers\/normal-people)\n• Implementation language\n• Organisation type (company\/open-source\/etc).\n\nIt covers all these details",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1551892253.215700",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SJB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": ":\nThe reddit table has different details, and which details are the important one is of course subjective. And note that it’s several different tables (the first and big one is for structural editors but then you have blocks, visual, spreadsheet etc).\n\nI think that the important details are:\n\n• Form (visual\/blocks\/etc)\n• Target language (Java \/ Functional language \/ Dynamic types \/ etc)\n• Target audience (Programmers\/normal-people)\n• Implementation language\n• Organisation type (company\/open-source\/etc).\n\nIt covers all these details"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1552321811.266600",
        "client_msg_id": "f7df968c-a2c3-41fd-b53b-b5ff8e6bd219",
        "text": "OK, then I'm very glad you've found the table that works for you! :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1551892253.215700",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rB+a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OK, then I'm very glad you've found the table that works for you! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1552321838.266800",
        "client_msg_id": "f3a42b5a-91fe-47f4-bef9-8a5ad2774385",
        "text": "And many others, I'm sure",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1551892253.215700",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U8dm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And many others, I'm sure"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1552323076.267000",
        "client_msg_id": "824ec1f6-70d7-427c-89d1-9cd04c83d5f4",
        "text": "<@UE6EFEPTQ> you are completely right that the focus of that table is different and more specific (projectional editors). But that indeed works for me because I strongly believe in it :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1551892253.215700",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/NYD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": " you are completely right that the focus of that table is different and more specific (projectional editors). But that indeed works for me because I strongly believe in it "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1552324272.267200",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1552324279.000000"
        },
        "client_msg_id": "8abb8e0e-95e6-4174-b7d8-93799dd82abd",
        "text": ":thumbsup::skin-tone-3:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1551892253.215700",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5nf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "thumbsup",
                                "unicode": "1f44d-1f3fc",
                                "skin_tone": 3
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD512T5AT",
        "type": "message",
        "ts": "1552327787.267600",
        "client_msg_id": "f0f199e7-d333-44c8-9b10-2a124a1f8a90",
        "text": "An issue with “classical” structure editors is the cursor UI, where the thing that is selected at any time is a subexpression (i.e., some subtree within your AST), and any edit you make targets that selected subexpression. This causes awkwardness in situations where we’d rather have text-like entry that relies on operator precedence to construct the tree appropriately. Say we want to type `2 * 3 + 4`. We get to `2 * [3]`, where `3` is selected because we just constructed it. Then we hit plus. A simple structure editor implementation would lead to `2 * (3 + [_])`, which is not what we want. In this implementation, we’d have to first navigate up to select the multiplication expression (`[2 * 3]`) and then hit plus. This kind of mode switching is annoying.  <http:\/\/www.cs.ox.ac.uk\/bernard.sufrin\/edit.pdf> gives a solution to this that leverages online precedence parsing on insertion commands. Hazel does a form of this, I believe Lamdu and mbeddr do as well. Independently of whether we’re switching modes, AST navigation via ‘parent node’ and ‘child node’ commands can also be at odds with an interface that presents things as a linear sequence of characters.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3f471057576c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-02\/652395123492_3f471057576c27bcd486_72.jpg",
            "first_name": "David",
            "real_name": "David Moon",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dmoon1221",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552233851.253900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i\/hF0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "An issue with “classical” structure editors is the cursor UI, where the thing that is selected at any time is a subexpression (i.e., some subtree within your AST), and any edit you make targets that selected subexpression. This causes awkwardness in situations where we’d rather have text-like entry that relies on operator precedence to construct the tree appropriately. Say we want to type "
                            },
                            {
                                "type": "text",
                                "text": "2 * 3 + 4",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". We get to "
                            },
                            {
                                "type": "text",
                                "text": "2 * [3]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", where "
                            },
                            {
                                "type": "text",
                                "text": "3",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is selected because we just constructed it. Then we hit plus. A simple structure editor implementation would lead to "
                            },
                            {
                                "type": "text",
                                "text": "2 * (3 + [_])",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which is not what we want. In this implementation, we’d have to first navigate up to select the multiplication expression ("
                            },
                            {
                                "type": "text",
                                "text": "[2 * 3]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") and then hit plus. This kind of mode switching is annoying.  "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.cs.ox.ac.uk\/bernard.sufrin\/edit.pdf"
                            },
                            {
                                "type": "text",
                                "text": " gives a solution to this that leverages online precedence parsing on insertion commands. Hazel does a form of this, I believe Lamdu and mbeddr do as well. Independently of whether we’re switching modes, AST navigation via ‘parent node’ and ‘child node’ commands can also be at odds with an interface that presents things as a linear sequence of characters."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726",
                    "UA14TGLTC",
                    "UC25EFSJC",
                    "U7C7B75R6",
                    "UBUFWBGNN"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UD512T5AT",
        "type": "message",
        "ts": "1552327876.267900",
        "edited": {
            "user": "UD512T5AT",
            "ts": "1552327910.000000"
        },
        "client_msg_id": "33a02ff8-fa2e-4e1c-9c68-3653125bd086",
        "text": "I think another fundamental issue with structure editors today is the implicit assumption that constructing an expression node needs to happen “all at once”. Suppose we have an AST structure that represents a parenthesized expression as a parentheses node with a single subexpression child node, and say we want to place `1 + 2 + 3` in parentheses. Because we’re creating a single node, it seems to make sense that this should be a single ‘parenthesize’ command. This requires the user first to select the entire expression `1 + 2 + 3`, then do ‘parenthesize’. So this requires the expression selection cursor UI, which has issues as described above. One thing that’s nice about a text interface is you can break up expression node construction into multiple insertions. Given `|1 + 2 + 3`, I can type `(`, then move over to the end of the desired subexpression, then type `)`. One approach I’m exploring and implementing in Hazel is having an expression construction mode, where you can similarly rely on multiple keystrokes to specify how to construct an expression node. Given `|1 + 2 + 3`, I type `(`. This gives me `(1[)] + 2 + 3` in expression construction mode, where the right parentheses is selected for moving to the appropriate spot. I hit right, that gives me `(1 + 2[)] + 3`. Hit right again, I get `(1 + 2 + 3[)]`. I then hit enter or `)` and that returns me to the regular edit mode. People like to hate on modes, but it’s not that different from selecting autocomplete suggestions, which people like. The important thing is for that mode to be made visually clear and to be automatically entered\/exited at expected times. This is what distinguishes this expression construction \/ autocomplete modality from the classical structure editing modality described above.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3f471057576c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-02\/652395123492_3f471057576c27bcd486_72.jpg",
            "first_name": "David",
            "real_name": "David Moon",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dmoon1221",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552233851.253900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lYl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think another fundamental issue with structure editors today is the implicit assumption that constructing an expression node needs to happen “all at once”. Suppose we have an AST structure that represents a parenthesized expression as a parentheses node with a single subexpression child node, and say we want to place "
                            },
                            {
                                "type": "text",
                                "text": "1 + 2 + 3",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in parentheses. Because we’re creating a single node, it seems to make sense that this should be a single ‘parenthesize’ command. This requires the user first to select the entire expression "
                            },
                            {
                                "type": "text",
                                "text": "1 + 2 + 3",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", then do ‘parenthesize’. So this requires the expression selection cursor UI, which has issues as described above. One thing that’s nice about a text interface is you can break up expression node construction into multiple insertions. Given "
                            },
                            {
                                "type": "text",
                                "text": "|1 + 2 + 3",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", I can type "
                            },
                            {
                                "type": "text",
                                "text": "(",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", then move over to the end of the desired subexpression, then type "
                            },
                            {
                                "type": "text",
                                "text": ")",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". One approach I’m exploring and implementing in Hazel is having an expression construction mode, where you can similarly rely on multiple keystrokes to specify how to construct an expression node. Given "
                            },
                            {
                                "type": "text",
                                "text": "|1 + 2 + 3",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", I type "
                            },
                            {
                                "type": "text",
                                "text": "(",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". This gives me "
                            },
                            {
                                "type": "text",
                                "text": "(1[)] + 2 + 3",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in expression construction mode, where the right parentheses is selected for moving to the appropriate spot. I hit right, that gives me "
                            },
                            {
                                "type": "text",
                                "text": "(1 + 2[)] + 3",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Hit right again, I get "
                            },
                            {
                                "type": "text",
                                "text": "(1 + 2 + 3[)]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". I then hit enter or "
                            },
                            {
                                "type": "text",
                                "text": ")",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and that returns me to the regular edit mode. People like to hate on modes, but it’s not that different from selecting autocomplete suggestions, which people like. The important thing is for that mode to be made visually clear and to be automatically entered\/exited at expected times. This is what distinguishes this expression construction \/ autocomplete modality from the classical structure editing modality described above."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726",
                    "UA14TGLTC",
                    "UC25EFSJC",
                    "U7C7B75R6",
                    "UBUFWBGNN"
                ],
                "count": 5
            },
            {
                "name": "tada",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1552336253.276400",
        "client_msg_id": "5b9e75ce-62e1-41cf-9145-17509a3f8b63",
        "text": "I discovered Michael L. Van De Vanter and his work today. He's been working on advanced code editors already when I was born and recognized several problems with structure editors a long time ago. I read the following papers [1, 2] and can only recommend them. Especially the idea of using only lexical information for structured editing [2] sounds very interesting. His website [3] lists more publications that might be interesting for this community as well.\n[1]: <http:\/\/vandevanter.net\/mlvdv\/publications\/the_documentary_structure_o.html>\n[2]: <http:\/\/vandevanter.net\/mlvdv\/publications\/displaying_and_editing_sour.html>\n[3]: <http:\/\/vandevanter.net\/mlvdv\/publications\/>\n\nPS: This demo video shows cool things like proportional fonts, managed whitespace and IDE features that still aren't widely used nowadays. And it's from 1994 :astonished:: <http:\/\/vandevanter.net\/mlvdv\/publications\/the-clarity-code-processor.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552336253.276400",
        "reply_count": 8,
        "reply_users_count": 4,
        "latest_reply": "1553210747.414100",
        "reply_users": [
            "UAL7940NM",
            "UD4Q9LT52",
            "UEQ6M68H0",
            "U8A5MS6R1"
        ],
        "replies": [
            {
                "user": "UAL7940NM",
                "ts": "1552337425.276700"
            },
            {
                "user": "UD4Q9LT52",
                "ts": "1552340432.277400"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1552377632.296700"
            },
            {
                "user": "UAL7940NM",
                "ts": "1552406933.298200"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1552459336.301800"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1552462605.302000"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1552510862.310000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1553210747.414100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9ix",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I discovered Michael L. Van De Vanter and his work today. He's been working on advanced code editors already when I was born and recognized several problems with structure editors a long time ago. I read the following papers [1, 2] and can only recommend them. Especially the idea of using only lexical information for structured editing [2] sounds very interesting. His website [3] lists more publications that might be interesting for this community as well.\n[1]: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/vandevanter.net\/mlvdv\/publications\/the_documentary_structure_o.html"
                            },
                            {
                                "type": "text",
                                "text": "\n[2]: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/vandevanter.net\/mlvdv\/publications\/displaying_and_editing_sour.html"
                            },
                            {
                                "type": "text",
                                "text": "\n[3]: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/vandevanter.net\/mlvdv\/publications\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nPS: This demo video shows cool things like proportional fonts, managed whitespace and IDE features that still aren't widely used nowadays. And it's from 1994 "
                            },
                            {
                                "type": "emoji",
                                "name": "astonished",
                                "unicode": "1f632"
                            },
                            {
                                "type": "text",
                                "text": ": "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/vandevanter.net\/mlvdv\/publications\/the-clarity-code-processor.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "hushed",
                "users": [
                    "U85HCL7JP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1552336403.276500",
        "client_msg_id": "fbf3888c-1fca-4ed1-a509-a0eb7442b631",
        "text": "Thanks for all of your input, I really appreciate it :+1:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552233851.253900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cwF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for all of your input, I really appreciate it "
                            },
                            {
                                "type": "emoji",
                                "name": "+1",
                                "unicode": "1f44d"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1552337425.276700",
        "client_msg_id": "fa99012a-8a6c-4417-b348-717756f900b5",
        "text": "It's really unfortunate that there aren't more details \/ demos \/ code available for the CodeProcessor described in [2]...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552336253.276400",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LB9j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's really unfortunate that there aren't more details \/ demos \/ code available for the CodeProcessor described in [2]..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC21F8Q48",
        "type": "message",
        "ts": "1552338298.277000",
        "client_msg_id": "3107390c-ed8b-427d-a740-91b62f93b98b",
        "text": "Curious hypothesis: “the objects that are most profound functionally are the ones which also promote the greatest feeling in us.” <http:\/\/www.patternlanguage.com\/archive\/ieee.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d79ba47b2952",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-03\/410049852848_d79ba47b2952e74a99d9_72.jpg",
            "first_name": "Brian",
            "real_name": "Brian Hempel",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "brianhempel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1551553463.032700",
        "parent_user_id": "UAVCC2X70",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VdMh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Curious hypothesis: “the objects that are most profound functionally are the ones which also promote the greatest feeling in us.” "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.patternlanguage.com\/archive\/ieee.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD4Q9LT52",
        "type": "message",
        "ts": "1552340432.277400",
        "client_msg_id": "decf68b9-4bb6-46ea-85c3-0dd88be5b668",
        "text": "Thanks for sharing",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7af440990a8e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-03\/565459439473_7af440990a8e3cbe92ff_72.jpg",
            "first_name": "Jake",
            "real_name": "Jake Brownson",
            "display_name": "Jake Brownson",
            "team": "T5TCAFTA9",
            "name": "jbrownson",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552336253.276400",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fMp1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for sharing"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1552342755.277600",
        "client_msg_id": "4de1ab2f-d763-46cb-b629-0ccbaaddd8ae",
        "text": "Thanks for that link. I hadn't gotten around to watching the video of the keynote (not my preferred medium) but I enjoyed Linda Rising's article mentioned above (<https:\/\/www.researchgate.net\/publication\/265427581_The_Road_Christopher_Alexander_and_Good_Software_Design>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1551553463.032700",
        "parent_user_id": "UAVCC2X70",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cY8xn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for that link. I hadn't gotten around to watching the video of the keynote (not my preferred medium) but I enjoyed Linda Rising's article mentioned above ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.researchgate.net\/publication\/265427581_The_Road_Christopher_Alexander_and_Good_Software_Design"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD3AK9JRF",
        "type": "message",
        "ts": "1552350909.279400",
        "client_msg_id": "F883C530-752B-469B-8FB2-84F14B8834AC",
        "text": "I hadn’t heard of it, and reading that post told me more about Geddes’ ego than RINA",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g35dfa49055c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/235dfa49055c0a25f2ccfc667a7a6b77.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Peter",
            "real_name": "Peter Abrahamsen",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "rainhead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552208227.244500",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KsIMg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I hadn’t heard of it, and reading that post told me more about Geddes’ ego than RINA"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD3AK9JRF",
        "type": "message",
        "ts": "1552351308.284900",
        "client_msg_id": "96BB1552-3CC9-43DD-9EFD-F1CA23B938EE",
        "text": "It sounds right that IPv6 is solving the wrong problems, though. Networking is another area where there’s so much complexity, so much history, so many deployed systems and so many actors, that we can only solve problems in ways that add inertia.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g35dfa49055c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/235dfa49055c0a25f2ccfc667a7a6b77.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Peter",
            "real_name": "Peter Abrahamsen",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "rainhead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552208227.244500",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WKPZ4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It sounds right that IPv6 is solving the wrong problems, though. Networking is another area where there’s so much complexity, so much history, so many deployed systems and so many actors, that we can only solve problems in ways that add inertia."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD3AK9JRF",
        "type": "message",
        "ts": "1552351443.287200",
        "client_msg_id": "BCF79DCD-734C-4DCF-AB83-76BFD888BB1D",
        "text": "I would fully expect a full reimagining of networking to be dramatically simpler than TCP\/IP, knowing nothing of the particular design. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g35dfa49055c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/235dfa49055c0a25f2ccfc667a7a6b77.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Peter",
            "real_name": "Peter Abrahamsen",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "rainhead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552208227.244500",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wiX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would fully expect a full reimagining of networking to be dramatically simpler than TCP\/IP, knowing nothing of the particular design."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD3AK9JRF",
        "type": "message",
        "ts": "1552351595.288000",
        "client_msg_id": "3CAEFDF8-C301-47D0-A757-4BA91152D7E2",
        "text": "The Wikipedia article also reads as a diatribe. Ugh. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g35dfa49055c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/235dfa49055c0a25f2ccfc667a7a6b77.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Peter",
            "real_name": "Peter Abrahamsen",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "rainhead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552208227.244500",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kru",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Wikipedia article also reads as a diatribe. Ugh."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD3AK9JRF",
        "type": "message",
        "ts": "1552352295.295800",
        "client_msg_id": "263E900F-0578-4D5A-A3E6-D949E84A32B9",
        "text": "It feels really important to figure out how to be better at building systems that can work at scale and still evolve. Despite good intentions,  there are always elements of a design, or of the real world system that develops around it, that eventually need to change, and can’t. Rallying against this kind of problem is maybe one of the core things unifying Future of Programming projects. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g35dfa49055c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/235dfa49055c0a25f2ccfc667a7a6b77.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Peter",
            "real_name": "Peter Abrahamsen",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "rainhead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552208227.244500",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z8j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It feels really important to figure out how to be better at building systems that can work at scale and still evolve. Despite good intentions,  there are always elements of a design, or of the real world system that develops around it, that eventually need to change, and can’t. Rallying against this kind of problem is maybe one of the core things unifying Future of Programming projects."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1552369220.296300",
        "client_msg_id": "e99d91fd-59a5-4d2d-9e9d-2aa7f7da93f3",
        "text": "<@U5TCAFTD3> Can we migrate to Zulip now so that threads like these aren't crammed into a tiny sidebar? :sweat_smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552233851.253900",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cfJn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": " Can we migrate to Zulip now so that threads like these aren't crammed into a tiny sidebar? "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFD2JRE58",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    }
]