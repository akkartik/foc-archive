[
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1751025396.555809",
        "edited": {
            "user": "U02E4DAQGSZ",
            "ts": "1751026182.000000"
        },
        "client_msg_id": "84041fdc-b9f0-4651-a7f8-5e424515026f",
        "text": "Thinking about <https:\/\/bsky.app\/profile\/interjectedfuture.com\/post\/3lsjxqmfoxa2l> implying node-and-wires are mutally exclusive with ASCII code and also thinking about <@UGWUJUZHT> dislike of functions. Also connecting it with my own ideas that a good notebook should offer \"multiple views of the same thing\".\n\nMade me think: why is everyone stuck on the idea that there is one one possible representation? And I think <@UGWUJUZHT> has a point, it may be the function calling paradigm. In my work, I don't have this problem because cells subscribe to other cells in dataflow, so multiple consumers of a computation is not a problem. cells _pull_ their dependancies. Whereas function calling is \"pushing\" values. The problem with pushing is you can only have one target. But with pulling you can have multiple consumers from one source. functions is building out of 1-to-1 links, but pulling is 1-to-many inherently.\n\nI don't think that argument is water tight coz, of course, its all Turing computable, but I do think there is something in there that function calling ends up naturally reducing computational reusability so that trying to do pub-sub communication patterns ends up way harder and buggier than it should so you shouldn't bother unless absolutely necessary. But if you build out of pub-sub exclusively then you don't see multiple views of the same thing as an unusual concept.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751025396.555809",
        "reply_count": 14,
        "reply_users_count": 7,
        "latest_reply": "1751221032.525779",
        "reply_users": [
            "UJBAJNFLK",
            "U07PYD02V2S",
            "U02E4DAQGSZ",
            "U013ZLJARC7",
            "UH85W1ML1",
            "UCUSW7WVD",
            "UGWUJUZHT"
        ],
        "replies": [
            {
                "user": "UJBAJNFLK",
                "ts": "1751027518.028149"
            },
            {
                "user": "U07PYD02V2S",
                "ts": "1751032680.407089"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1751032731.982049"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1751032834.687119"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1751038496.914659"
            },
            {
                "user": "UH85W1ML1",
                "ts": "1751048735.758959"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1751050303.351819"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1751050517.644389"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1751050718.714639"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1751051215.420049"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1751051797.588749"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1751052032.596949"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1751202569.480229"
            },
            {
                "user": "UH85W1ML1",
                "ts": "1751221032.525779"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/bsky.app\/profile\/interjectedfuture.com\/post\/3lsjxqmfoxa2l",
                "service_icon": "https:\/\/web-cdn.bsky.app\/static\/apple-touch-icon.png",
                "ts": 1750969803,
                "id": 1,
                "original_url": "https:\/\/bsky.app\/profile\/interjectedfuture.com\/post\/3lsjxqmfoxa2l",
                "fallback": "<https:\/\/bsky.app\/profile\/interjectedfuture.com|@interjectedfuture.com>: Nodes and wires are so attractive because it's legible in a certain context. The context is when you're a beginner and you want to see the in-between results.\n\nBreaks down when you know syntax, when you can imagine the intermediates in your head, and when the program gets large.",
                "text": "Nodes and wires are so attractive because it's legible in a certain context. The context is when you're a beginner and you want to see the in-between results.\n\nBreaks down when you know syntax, when you can imagine the intermediates in your head, and when the program gets large.",
                "author_name": "iamwil",
                "author_link": "https:\/\/bsky.app\/profile\/interjectedfuture.com",
                "author_icon": "https:\/\/cdn.bsky.app\/img\/avatar\/plain\/did:plc:4yf2dz4a5hvjmui5gbgxclzx\/bafkreib5gr3clyzaufwqeosk7s336y4vvzhe5ogkki5uo46rxlzesvaliq@jpeg",
                "author_subname": "@interjectedfuture.com",
                "service_name": "bluesky",
                "service_url": "https:\/\/bsky.app\/",
                "footer": "Bluesky"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BrCxM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thinking about "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bsky.app\/profile\/interjectedfuture.com\/post\/3lsjxqmfoxa2l"
                            },
                            {
                                "type": "text",
                                "text": " implying node-and-wires are mutally exclusive with ASCII code and also thinking about "
                            },
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " dislike of functions. Also connecting it with my own ideas that a good notebook should offer \"multiple views of the same thing\".\n\nMade me think: why is everyone stuck on the idea that there is one one possible representation? And I think "
                            },
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " has a point, it may be the function calling paradigm. In my work, I don't have this problem because cells subscribe to other cells in dataflow, so multiple consumers of a computation is not a problem. cells "
                            },
                            {
                                "type": "text",
                                "text": "pull",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " their dependancies. Whereas function calling is \"pushing\" values. The problem with pushing is you can only have one target. But with pulling you can have multiple consumers from one source. functions is building out of 1-to-1 links, but pulling is 1-to-many inherently.\n\nI don't think that argument is water tight coz, of course, its all Turing computable, but I do think there is something in there that function calling ends up naturally reducing computational reusability so that trying to do pub-sub communication patterns ends up way harder and buggier than it should so you shouldn't bother unless absolutely necessary. But if you build out of pub-sub exclusively then you don't see multiple views of the same thing as an unusual concept."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U07PYD02V2S"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1751027518.028149",
        "client_msg_id": "c443c66e-ddf9-4f09-a289-e747399489fe",
        "text": "Another difference is that your unit of code is the cell, whereas the unit of code in PLs is the function (plus a few others). Combinations of cells can be represented by nodes and wires. Combinations of functions are a lot more diverse, e.g. using higher-order functions.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751025396.555809",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2AyiB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another difference is that your unit of code is the cell, whereas the unit of code in PLs is the function (plus a few others). Combinations of cells can be represented by nodes and wires. Combinations of functions are a lot more diverse, e.g. using higher-order functions."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U07PYD02V2S"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U07PYD02V2S",
        "type": "message",
        "ts": "1751032680.407089",
        "client_msg_id": "9A8790F4-0C4A-47E9-B195-9AFF6589836A",
        "text": "Are there any examples of programming interfaces or apps that use a pub\/sub-first paradigm?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g16521cb6e5d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/16521cb6e5de2a3101b61d4d31ef3a8e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Matt",
            "real_name": "Matt Curtis",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "matt.curtis.biz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751025396.555809",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mUjhS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are there any examples of programming interfaces or apps that use a pub\/sub-first paradigm?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1751032731.982049",
        "client_msg_id": "ff870c16-0e07-49e3-8438-d33acd891ee8",
        "text": "spreadsheets, reactive programming.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751025396.555809",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QdU1c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "spreadsheets, reactive programming."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "fire",
                "users": [
                    "U07PYD02V2S"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1751032834.687119",
        "edited": {
            "user": "U02E4DAQGSZ",
            "ts": "1751032850.000000"
        },
        "client_msg_id": "a7be60b0-d2f5-44da-b73c-fb3506b8e72e",
        "text": "the event listener pattern is pub sub, its not like you can't do it in PL, but if  you chain a ton of event listeners together synchronously you get weird cyclical bugs so its kinda harder than it looks to be a good pub-sub system.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751025396.555809",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YxRvP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the event listener pattern is pub sub, its not like you can't do it in PL, but if  you chain a ton of event listeners together synchronously you get weird cyclical bugs so its kinda harder than it looks to be a good pub-sub system."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "U07PYD02V2S"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1751038496.914659",
        "client_msg_id": "0DE7C36D-A2E0-4E28-BDA6-62B6475B6B9C",
        "text": "Dataflow is definitely more natural for many situations :100:  ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751025396.555809",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d10Id",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Dataflow is definitely more natural for many situations "
                            },
                            {
                                "type": "emoji",
                                "name": "100",
                                "unicode": "1f4af"
                            },
                            {
                                "type": "text",
                                "text": "  "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U02E4DAQGSZ",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UH85W1ML1",
        "type": "message",
        "ts": "1751048735.758959",
        "client_msg_id": "59c9c1d1-2502-41de-bcac-36cd764da684",
        "text": "And dataflow was originally represented in text, not visually!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2c0e4a3979e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529852667013_2c0e4a3979e8e92c4924_72.jpg",
            "first_name": "",
            "real_name": "Vitorio Miliano",
            "display_name": "vitorio",
            "team": "T5TCAFTA9",
            "name": "vito_futureofcoding",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751025396.555809",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NVS\/Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And dataflow was originally represented in text, not visually!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "U02E4DAQGSZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1751050303.351819",
        "client_msg_id": "6d58d1c0-29c8-4fab-9f28-cdc2ba1b1158",
        "text": "One aspect of functions I haven't seen mentioned yet here is the lack of a locus. You can call a pure function from any number of places, and they'll never conflict. Each call occurs in a private universe thanks to stack frames. Whereas replacing them with nodes and wires gives them a place and so introduces the possibility of lots of new failure modes. Can multiple wires start from the same port, end in the same port? What happens if 2 inputs come in at the same time on this wire? Did input A mix with input B that had accidentally been sitting around for a long time?\n\nPersonally I consider pure functions to be dataflow constructs. I also think of them as pull constructs, though I understand how they're more push than FRP and so on.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751025396.555809",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bo51t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One aspect of functions I haven't seen mentioned yet here is the lack of a locus. You can call a pure function from any number of places, and they'll never conflict. Each call occurs in a private universe thanks to stack frames. Whereas replacing them with nodes and wires gives them a place and so introduces the possibility of lots of new failure modes. Can multiple wires start from the same port, end in the same port? What happens if 2 inputs come in at the same time on this wire? Did input A mix with input B that had accidentally been sitting around for a long time?\n\nPersonally I consider pure functions to be dataflow constructs. I also think of them as pull constructs, though I understand how they're more push than FRP and so on."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U07PYD02V2S",
                    "U02E4DAQGSZ",
                    "UJBAJNFLK"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1751050517.644389",
        "client_msg_id": "f4933e9b-10a2-4291-aa69-ab3b0fec5f3d",
        "text": "Does Excel seem like pull? It's often storing a function call in a cell. The data flow nature comes from binding the _output_ of a call to a cell\/place, and the function call doesn't itself inherently seem to interfere with doing so?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751025396.555809",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+0tUp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does Excel seem like pull? It's often storing a function call in a cell. The data flow nature comes from binding the "
                            },
                            {
                                "type": "text",
                                "text": "output",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of a call to a cell\/place, and the function call doesn't itself inherently seem to interfere with doing so?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1751050718.714639",
        "client_msg_id": "f34a4894-c16f-4e22-a581-0297b4e3a0cf",
        "text": "Yes excel is pull because once a cell has a value. Any other cell can depend on it. It's all in an easily accessible global scope.\nWhen a normal function returns, that result it private to the caller. You have to call that function again in many places and it's not the same calculation each time.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751025396.555809",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aJeZH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes excel is pull because once a cell has a value. Any other cell can depend on it. It's all in an easily accessible global scope.\nWhen a normal function returns, that result it private to the caller. You have to call that function again in many places and it's not the same calculation each time."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1751051215.420049",
        "client_msg_id": "add52e8e-e531-4f77-b4f4-468c53953a2d",
        "text": "In Excel too it's not the same calculation each time, depending on the args you hardcode into the call.\n\nExcel does provide a structured space for global variables, it's true :smile: In a conventional programming language you have to deliberately assign the result to a global.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751025396.555809",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F2acB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In Excel too it's not the same calculation each time, depending on the args you hardcode into the call.\n\nExcel does provide a structured space for global variables, it's true "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " In a conventional programming language you have to deliberately assign the result to a global."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1751051797.588749",
        "client_msg_id": "3b62078c-8b4a-4fbc-803e-4ea712ba937c",
        "text": "It's is, every value is essentially memoization in excel. The cells remember their result. If you are talking about a function call inside an excel formula, then yes, that's a traditional function call, I am not talking about that.\n\n Even variable assignment to a global scope in trad PL, you still need to decide when to pull for the latest state. It's not enough to make a variable global for a push system. To make PL push you have to register a callback.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751025396.555809",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Dse9+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's is, every value is essentially memoization in excel. The cells remember their result. If you are talking about a function call inside an excel formula, then yes, that's a traditional function call, I am not talking about that.\n\n Even variable assignment to a global scope in trad PL, you still need to decide when to pull for the latest state. It's not enough to make a variable global for a push system. To make PL push you have to register a callback."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1751052032.596949",
        "client_msg_id": "a3b69222-cca4-4514-8bee-82292ef207df",
        "text": "Yeah, I was talking about the function call inside a formula. So I think we understand each other.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1751025396.555809",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/pr40",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I was talking about the function call inside a formula. So I think we understand each other."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]