[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1611131721.027700",
        "client_msg_id": "57ff7a63-4603-4387-93c4-cab8879670d7",
        "text": "Thanks a lot <@UMVFWPZ36>, I am making progress. The spec also helps a lot, but it also raises more questions. The `TreeNode` interface is clear enough as a building block for trees, but what about grids? I think that's the problem I have since the beginning: is a grid just an interpretation of a particular tree structure, as in the frequent representation of a 2D arrays as rows of 1D arrays? Or is a grid a distinct data structure from a tree? Put differently, in terms of syntax: is grid notation just syntactic sugar for a frequently used kind of tree, or syntax for a different data type? Again put differently: can a grid have semantics different from any tree-based semantics?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DFVt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks a lot "
                            },
                            {
                                "type": "user",
                                "user_id": "UMVFWPZ36"
                            },
                            {
                                "type": "text",
                                "text": ", I am making progress. The spec also helps a lot, but it also raises more questions. The "
                            },
                            {
                                "type": "text",
                                "text": "TreeNode",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " interface is clear enough as a building block for trees, but what about grids? I think that's the problem I have since the beginning: is a grid just an interpretation of a particular tree structure, as in the frequent representation of a 2D arrays as rows of 1D arrays? Or is a grid a distinct data structure from a tree? Put differently, in terms of syntax: is grid notation just syntactic sugar for a frequently used kind of tree, or syntax for a different data type? Again put differently: can a grid have semantics different from any tree-based semantics?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "The remote framebuffer protocol (RFB) used by VNC is a quite small and malleable tool for constructing GUIs. It requires only a bi-directional communication channel, which lets it tunnel through just about anything, and makes it very easy to write agnostically in Go.\n\nAs a proof-of-concept, I wrote a little program that starts a VNC server for accessing its GUI. I didn’t need any third-party libraries because the protocol is so basic. I view it with macOS's built-in VNC client. And it nests! So parts of the UI are implemented by other processes that also communicate via VNC, which are spliced in.\n\nThe source is here: <https:\/\/github.com\/alltom\/dirgui> It’s based on <https:\/\/twitter.com\/rsnous\/status\/1348883726642544640|one of Omar’s ideas> for turning a directory of files into a form where programs are buttons and other files are editable text fields.\n\nI’m not done experimenting, but I thought this might be a useful epiphany for others!\n\nHere’s a video of the basic form functionality:",
        "files": [
            {
                "id": "F01KEM5N98U",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UFEQUBNNT",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ihlLv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The remote framebuffer protocol (RFB) used by VNC is a quite small and malleable tool for constructing GUIs. It requires only a bi-directional communication channel, which lets it tunnel through just about anything, and makes it very easy to write agnostically in Go.\n\nAs a proof-of-concept, I wrote a little program that starts a VNC server for accessing its GUI. I didn’t need any third-party libraries because the protocol is so basic. I view it with macOS's built-in VNC client. And it nests! So parts of the UI are implemented by other processes that also communicate via VNC, which are spliced in.\n\nThe source is here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/alltom\/dirgui"
                            },
                            {
                                "type": "text",
                                "text": " It’s based on "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/rsnous\/status\/1348883726642544640",
                                "text": "one of Omar’s ideas"
                            },
                            {
                                "type": "text",
                                "text": " for turning a directory of files into a form where programs are buttons and other files are editable text fields.\n\nI’m not done experimenting, but I thought this might be a useful epiphany for others!\n\nHere’s a video of the basic form functionality:"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1611133012.028600",
        "edited": {
            "user": "UFEQUBNNT",
            "ts": "1611133108.000000"
        },
        "thread_ts": "1611133012.028600",
        "reply_count": 7,
        "reply_users_count": 3,
        "latest_reply": "1611204348.001400",
        "reply_users": [
            "UFEQUBNNT",
            "UKDM3GLAJ",
            "UCUSW7WVD"
        ],
        "replies": [
            {
                "user": "UFEQUBNNT",
                "ts": "1611133037.028900"
            },
            {
                "user": "UKDM3GLAJ",
                "ts": "1611152899.030000"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1611163719.036700"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1611194391.000700"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1611196403.001000"
            },
            {
                "user": "UKDM3GLAJ",
                "ts": "1611200781.001200"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1611204348.001400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UBN9AFS0N",
                    "UDQBTJ211",
                    "UKDM3GLAJ",
                    "USH01JEDQ",
                    "UG0EL18H3",
                    "UCUSW7WVD",
                    "UHWC9PXBL",
                    "UML4ZEKDK"
                ],
                "count": 8
            },
            {
                "name": "+1",
                "users": [
                    "UD6EXQVM0",
                    "UA14TGLTC",
                    "U0112C10V4Y",
                    "UAVCC2X70"
                ],
                "count": 4
            },
            {
                "name": "exploding_head",
                "users": [
                    "U01BAS8GU86"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "And here it is launching a separate process to provide the “editor” for one of the files:",
        "files": [
            {
                "id": "F01KEM9J22G",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UFEQUBNNT",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L7o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And here it is launching a separate process to provide the “editor” for one of the files:"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1611133037.028900",
        "thread_ts": "1611133012.028600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1611148834.029700",
        "client_msg_id": "6001bba6-918e-4b90-a650-1ab9fa427056",
        "text": "Yes tree-hugger does not support .NET as of yet. However, a contribution is more than welcome :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601136299.009000",
        "parent_user_id": "UPVBV34EL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "go=mY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes tree-hugger does not support .NET as of yet. However, a contribution is more than welcome "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKDM3GLAJ",
        "type": "message",
        "ts": "1611152899.030000",
        "client_msg_id": "e7b7de88-903e-4644-9507-e68c30760b8b",
        "text": "This is awesome. How far can the composition go? Could you run an entire desktop this way?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "34e7a55348e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-01-04\/893378739792_34e7a55348e8c86c1901_72.jpg",
            "first_name": "",
            "real_name": "Jared Windover",
            "display_name": "Jared Windover",
            "team": "T5TCAFTA9",
            "name": "jaredwindover",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611133012.028600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6m\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is awesome. How far can the composition go? Could you run an entire desktop this way?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611154223.030300",
        "client_msg_id": "1fc87a39-d58a-4ddb-ad8f-6d18e7f2e7d2",
        "text": "Good questions! Really helpful to see where the gaps are.\nAt the high level I view the big idea as \"2-D Languages\". (Well, 3-D\nas well, but let's just limit ourselves to 2-D for the moment.)\nI think of things all around me in the world as 2-D languages.\nA Highway Sign for instance.\n\nOnce we get into the digital realm, with our current hardware\nstack we do have to collapse things into 1-D, and that's\nwhere \"Grid Notation\" and \"Tree Notation\" come in. Any document\ncould be parsed as either a Grid Structure or a Tree Structure. If\nthere are no nested nodes, then the structures would basically be the\nsame. If there are nested nodes, then in Tree Notation you would\nparse child trees, whereas in Grid Notation the empty edge nodes\nwould just be parsed as empty cells. I rarely use pure \"Grid Notation\", but\nI do sometimes use something in the middle, where sometimes I allow\nnested trees and sometimes I don't. But really it's probably\nbetter to just always use Tree Notation. Because even when I start a\nlang small and think \"I'm never going to need scopes with this\ndumb config language\", a few months later I'm always like \"damn, scopes\nwould have been better and I shoudl have just used tree notation\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qTMX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good questions! Really helpful to see where the gaps are.\nAt the high level I view the big idea as \"2-D Languages\". (Well, 3-D\nas well, but let's just limit ourselves to 2-D for the moment.)\nI think of things all around me in the world as 2-D languages.\nA Highway Sign for instance.\n\nOnce we get into the digital realm, with our current hardware\nstack we do have to collapse things into 1-D, and that's\nwhere \"Grid Notation\" and \"Tree Notation\" come in. Any document\ncould be parsed as either a Grid Structure or a Tree Structure. If\nthere are no nested nodes, then the structures would basically be the\nsame. If there are nested nodes, then in Tree Notation you would\nparse child trees, whereas in Grid Notation the empty edge nodes\nwould just be parsed as empty cells. I rarely use pure \"Grid Notation\", but\nI do sometimes use something in the middle, where sometimes I allow\nnested trees and sometimes I don't. But really it's probably\nbetter to just always use Tree Notation. Because even when I start a\nlang small and think \"I'm never going to need scopes with this\ndumb config language\", a few months later I'm always like \"damn, scopes\nwould have been better and I shoudl have just used tree notation\""
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611154385.030600",
        "client_msg_id": "1f629d70-73fe-499b-b3c5-f18a4aa28268",
        "text": "Honestly maybe it's confusing things more\nthan helping to talk about \"Grid Notation\" and \"Tree Notation\".\nI just thought there's a nice pattern at work here:\n\nAdd 1 special symbol and you get a 1-d \"List notation\" that supports lists of words.\nAdd 1 more special symbol and you get a 2-d \"grid notation\" that supports lists of lists of words.\nAdd 1 more special symbol and you get a 3-d \"tree notation\" that supports recursive lists of lists of lists of words.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x9p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Honestly maybe it's confusing things more\nthan helping to talk about \"Grid Notation\" and \"Tree Notation\".\nI just thought there's a nice pattern at work here:\n\nAdd 1 special symbol and you get a 1-d \"List notation\" that supports lists of words.\nAdd 1 more special symbol and you get a 2-d \"grid notation\" that supports lists of lists of words.\nAdd 1 more special symbol and you get a 3-d \"tree notation\" that supports recursive lists of lists of lists of words."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611159391.031100",
        "client_msg_id": "64d85b11-65e3-4fde-bf8f-dfb810774ed3",
        "text": "Gonna try and turn this into a real thing. If anyone is interested in\nmarkup languages and wants to help, check it out!\n\n<https:\/\/github.com\/treenotation\/dumbdown>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611159391.031100",
        "reply_count": 17,
        "reply_users_count": 5,
        "latest_reply": "1611244866.003900",
        "reply_users": [
            "UAL7940NM",
            "UMVFWPZ36",
            "UD6EXQVM0",
            "UCUSW7WVD",
            "UBN9AFS0N"
        ],
        "replies": [
            {
                "user": "UAL7940NM",
                "ts": "1611159995.031300"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1611172040.037100"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1611172055.037300"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1611172056.037500"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1611173856.037700"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1611173860.037900"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1611173963.038100"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1611193969.000100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1611194199.000500"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1611222751.001600"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1611222809.001800"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1611222855.002000"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1611222896.002300"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1611244772.003200"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1611244782.003500"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1611244826.003700"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1611244866.003900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "treenotation\/dumbdown",
                "title_link": "https:\/\/github.com\/treenotation\/dumbdown",
                "text": "The obvious alternative to markdown. The keyword for title is title - treenotation\/dumbdown",
                "fallback": "GitHub: treenotation\/dumbdown",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/51207659?s=400&v=4",
                "from_url": "https:\/\/github.com\/treenotation\/dumbdown",
                "thumb_width": 174,
                "thumb_height": 174,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/treenotation\/dumbdown"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qha",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Gonna try and turn this into a real thing. If anyone is interested in\nmarkup languages and wants to help, check it out!\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/treenotation\/dumbdown"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1611159995.031300",
        "client_msg_id": "8177609b-cf9e-40d6-9b71-fdec404d853d",
        "text": "I like the simplicity of it, but I wonder if it's limiting in some cases. How would inline links, bold or italic markup look like?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611159391.031100",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OxhCQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like the simplicity of it, but I wonder if it's limiting in some cases. How would inline links, bold or italic markup look like?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1611163719.036700",
        "client_msg_id": "4B5AB6A5-ADDA-463F-813F-BF30A86DF509",
        "text": "I don’t know. You’d have performance problems if you started with my code (in fact, before I disabled Issues on Github, the first issue was, “this uses 100% of my CPU!”), but one of the best things about the protocol is that it has a straightforward mechanism for negotiating additional features, which in the extreme could be things like, “just write your updates directly to the GPU, please.”",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611133012.028600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8cFX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don’t know. You’d have performance problems if you started with my code (in fact, before I disabled Issues on Github, the first issue was, “this uses 100% of my CPU!”), but one of the best things about the protocol is that it has a straightforward mechanism for negotiating additional features, which in the extreme could be things like, “just write your updates directly to the GPU, please.”"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UD6EXQVM0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611172040.037100",
        "client_msg_id": "c57df122-b498-4e71-bb46-0134ce936d2d",
        "text": "I'm not sure!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611159391.031100",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n6S3p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not sure!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611172055.037300",
        "client_msg_id": "1263de2f-515f-4ac2-baf7-3b69da7d28b9",
        "text": "Haven't thought too hard about those ones yet",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611159391.031100",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QLWvd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Haven't thought too hard about those ones yet"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611172056.037500",
        "client_msg_id": "499091ea-fe67-4797-b952-b0eca3ea6f78",
        "text": "Any ideas?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611159391.031100",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HHg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Any ideas?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611173856.037700",
        "client_msg_id": "1e94c0ae-62b4-4632-806f-f015f992063a",
        "text": "Ah sorry I forgot that's a solved problem",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611159391.031100",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l0v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah sorry I forgot that's a solved problem"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611173860.037900",
        "client_msg_id": "69ff7b4a-4812-49cf-b42d-0661e02c1194",
        "text": "markdown\n     Someone can define a markdown\n     node type and then you can just use markdown\n     like you normally would *embed* _markdown_.\n    emojiDown\n     And this whole sentence would be bold if you added\n     your own mini language, \"emojiDown\", which\n     defined your own node types:exclamation:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611159391.031100",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rzQu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "markdown\n     Someone can define a markdown\n     node type and then you can just use markdown\n     like you normally would *embed* _markdown_.\n    emojiDown\n     And this whole sentence would be bold if you added\n     your own mini language, \"emojiDown\", which\n     defined your own node types"
                            },
                            {
                                "type": "emoji",
                                "name": "exclamation",
                                "unicode": "2757"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1611173963.038100",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1611184296.000000"
        },
        "client_msg_id": "b3627ff4-6b1f-47f0-a4c5-6a014b91c5bb",
        "text": "Your Readme doesn't say how you support spans (bold, italic, and inline links) which are crucial parts of Markdown. Also,\n\n- I'd much rather start list items with a dash\n- I found it hard to remember at first whether it was [text](link) or (text)[link] or [text][link] in Markdown, but now I'm used to it and it's fine. If Markdown had universally used [text][link], it would have been easier to remember ([text][id] is allowed where [id] refers to a link provided later in the document, but Markdown could have dealt with this ambiguity by assuming anything that contains a slash is a link, or by assuming that if no link is provided later on, the id itself is a link.)\n- Similarly I would have preferred to use \/slash for italics\/ instead of *this*... But again, that ship has sailed.\n\nMaybe Markdown's biggest issue is ambiguity, like, If I write \"`apple and *banana` and* cherry\", did I just create a code block around \"apple and *banana\", or did I create a piece of boldface text around \"banana` and\"? But again this is a question of how spans are delimited, which your readme does not address.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611159391.031100",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bzu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Your Readme doesn't say how you support spans (bold, italic, and inline links) which are crucial parts of Markdown. Also,\n\n- I'd much rather start list items with a dash\n- I found it hard to remember at first whether it was [text](link) or (text)[link] or [text][link] in Markdown, but now I'm used to it and it's fine. If Markdown had universally used [text][link], it would have been easier to remember ([text][id] is allowed where [id] refers to a link provided later in the document, but Markdown could have dealt with this ambiguity by assuming anything that contains a slash is a link, or by assuming that if no link is provided later on, the id itself is a link.)\n- Similarly I would have preferred to use \/slash for italics\/ instead of *this*... But again, that ship has sailed.\n\nMaybe Markdown's biggest issue is ambiguity, like, If I write \"`apple and *banana` and* cherry\", did I just create a code block around \"apple and *banana\", or did I create a piece of boldface text around \"banana` and\"? But again this is a question of how spans are delimited, which your readme does not address."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1611175743.039200",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1611176677.000000"
        },
        "client_msg_id": "36c936da-dd6b-4b57-af14-28c47980d5cf",
        "text": "The COVID data explorer has been incredibly informative - I keep going back to it to look at new trends, to share views of the data with others and to smirk upon seeing that yes, Canada's COVID response remains so much better than the U.S.'s. I only wish it had more fine-grained information, e.g. breakdown by U.S. state - it's been in the news that Blue states had a larger economic downturn under COVID, but did they also do a better job controlling COVID? If OurWorldInData can't tell me, I don't know where else to turn!\n\nLast time I read about \"tree notation\", it wasn't very compelling because you didn't explain some key things:\n• If it's a \"tree notation\" then it should express trees, but instead it appears to be two dimensional, i.e. it expresses a grid, not a tree. If it's really a \"tree notation\" then how do you express a tree?\n• If the cells are space-delimited, how do you express a space character inside a cell?\n• How do you distinguish various data types from each other, e.g. how is the string 123 different from the number 123?\nEdit: apologies to the extent I repeated ground already covered above... by the way, I looked at the \"Sandbox\" but it doesn't help much to answer these questions because (1) it doesn't include samples (except one), (2) there seem to be substantially different interpretations of the same tree notation, hence three different JSON conversions, which isn't terribly enlightening, (3) there is no reverse conversion from JSON (or XML) to Tree Notation.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nbuv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The COVID data explorer has been incredibly informative - I keep going back to it to look at new trends, to share views of the data with others and to smirk upon seeing that yes, Canada's COVID response remains so much better than the U.S.'s. I only wish it had more fine-grained information, e.g. breakdown by U.S. state - it's been in the news that Blue states had a larger economic downturn under COVID, but did they also do a better job controlling COVID? If OurWorldInData can't tell me, I don't know where else to turn!\n\nLast time I read about \"tree notation\", it wasn't very compelling because you didn't explain some key things:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "If it's a \"tree notation\" then it should express trees, but instead it appears to be two dimensional, i.e. it expresses a grid, not a tree. If it's really a \"tree notation\" then how do you express a tree?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "If the cells are space-delimited, how do you express a space character inside a cell?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "How do you distinguish various data types from each other, e.g. how is the string 123 different from the number 123?"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nEdit: apologies to the extent I repeated ground already covered above... by the way, I looked at the \"Sandbox\" but it doesn't help much to answer these questions because (1) it doesn't include samples (except one), (2) there seem to be substantially different interpretations of the same tree notation, hence three different JSON conversions, which isn't terribly enlightening, (3) there is no reverse conversion from JSON (or XML) to Tree Notation."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Well, I'm afraid that despite devoting all my time to Loyc recently, I remain several years behind schedule. It is probable that I will write a Loyc tree library for Python before I get around to doing something involving tree-hugger + .NET.\n\nA couple of days ago I sketched out something called BLES, which is a syntax for Loyc trees designed as an extension of JSON (and subset of LES2). In these grammar diagrams, the things BLES has in common with JSON are shown in black, while changes are shown in blue. It looks about twice as complex as JSON, but probably about one-quarter as complex as C. So this is something I could port to other languages more quickly than other versions of LES. There's also a <https:\/\/github.com\/qwertie\/ecsharp\/issues\/104|JSON encoding of Loyc trees> but I'm not sure if that's useful to anyone.",
        "files": [
            {
                "id": "F01KBJKF0F4",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UD6EXQVM0",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mRbN7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, I'm afraid that despite devoting all my time to Loyc recently, I remain several years behind schedule. It is probable that I will write a Loyc tree library for Python before I get around to doing something involving tree-hugger + .NET.\n\nA couple of days ago I sketched out something called BLES, which is a syntax for Loyc trees designed as an extension of JSON (and subset of LES2). In these grammar diagrams, the things BLES has in common with JSON are shown in black, while changes are shown in blue. It looks about twice as complex as JSON, but probably about one-quarter as complex as C. So this is something I could port to other languages more quickly than other versions of LES. There's also a "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/qwertie\/ecsharp\/issues\/104",
                                "text": "JSON encoding of Loyc trees"
                            },
                            {
                                "type": "text",
                                "text": " but I'm not sure if that's useful to anyone."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1611177922.039600",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1611178065.000000"
        },
        "thread_ts": "1601136299.009000",
        "parent_user_id": "UPVBV34EL"
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611179796.040100",
        "client_msg_id": "4d94bc46-3635-49dc-8491-0298da62e1a7",
        "text": "Thanks <@UD6EXQVM0>!\n\nThe next branch of OWID has\na new data TS\/JS transformation\ntable lib under the hood so you can\ndo any kinds of data transformations\nyou want. We call it CoreTable\n(<https:\/\/github.com\/owid\/owid-grapher\/tree\/next\/coreTable>)\nAfter we started that, Jeff Heer's lab\nlaunched Arquero, which is an\nawesome similar lib as well (<https:\/\/observablehq.com\/collection\/@uwdata\/arquero>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "owid\/owid-grapher",
                "title_link": "https:\/\/github.com\/owid\/owid-grapher\/tree\/next\/coreTable",
                "text": "A platform for creating interactive data visualizations - owid\/owid-grapher",
                "fallback": "GitHub: owid\/owid-grapher",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/14187135?s=400&v=4",
                "from_url": "https:\/\/github.com\/owid\/owid-grapher\/tree\/next\/coreTable",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/owid\/owid-grapher\/tree\/next\/coreTable"
            },
            {
                "title": "Arquero",
                "title_link": "https:\/\/observablehq.com\/collection\/@uwdata\/arquero",
                "text": "Query processing and transformation of array-backed data tables. \/ An Observable collection by UW Interactive Data Lab",
                "fallback": "Arquero",
                "image_url": "https:\/\/static.observableusercontent.com\/thumbnail\/a321d743ac4d6f2ca1ea97961af135b50ec22bafb11269b1293dd4f6f5491d0e.jpg",
                "from_url": "https:\/\/observablehq.com\/collection\/@uwdata\/arquero",
                "image_width": 400,
                "image_height": 250,
                "image_bytes": 9675,
                "service_icon": "https:\/\/static.observablehq.com\/favicon-512.0667824687f99c942a02e06e2db1a060911da0bf3606671676a255b1cf97b4fe.png",
                "service_name": "observablehq.com",
                "id": 2,
                "original_url": "https:\/\/observablehq.com\/collection\/@uwdata\/arquero"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WUjoQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UD6EXQVM0"
                            },
                            {
                                "type": "text",
                                "text": "!\n\nThe next branch of OWID has\na new data TS\/JS transformation\ntable lib under the hood so you can\ndo any kinds of data transformations\nyou want. We call it CoreTable\n("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/owid\/owid-grapher\/tree\/next\/coreTable"
                            },
                            {
                                "type": "text",
                                "text": ")\nAfter we started that, Jeff Heer's lab\nlaunched Arquero, which is an\nawesome similar lib as well ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/observablehq.com\/collection\/@uwdata\/arquero"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611179833.040400",
        "client_msg_id": "be580a1e-7dce-462a-a35c-4fa612b64486",
        "text": "So once that goes live being able to\ndo any data transformation you want,\nlike state to state comparisons, or even\nstate to country compairions, or custom\non the fly groups, will bepossible",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fLYAU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So once that goes live being able to\ndo any data transformation you want,\nlike state to state comparisons, or even\nstate to country compairions, or custom\non the fly groups, will bepossible"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611179856.040600",
        "client_msg_id": "97e8ce84-f83d-4474-8e42-2d1d1da3486e",
        "text": "You'll also be able to do things\nlike group by policy response, etc",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8Sv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You'll also be able to do things\nlike group by policy response, etc"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611179893.040800",
        "client_msg_id": "23d6b8b2-bb2a-4c12-bfd9-fc105ae26dea",
        "text": "&gt;  If it's a \"tree notation\" then it should express trees, but instead it appears to be two dimensional, i.e. it expresses a grid, not a tree. If it's really a \"tree notation\" then how do you express a tree?\nA single indent (similar to Python), creates a new child node\nof the parent node",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nQq3U",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " If it's a \"tree notation\" then it should express trees, but instead it appears to be two dimensional, i.e. it expresses a grid, not a tree. If it's really a \"tree notation\" then how do you express a tree?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A single indent (similar to Python), creates a new child node\nof the parent node"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611179964.041000",
        "client_msg_id": "8b1de3f7-1519-46a6-9914-b80a9271cd11",
        "text": "&gt;  If the cells are space-delimited, how do you express a space character inside a cell?\nThere are 3 special symbols. Generally\nthe node break\/row break is always new line.\nIn the JTree lib the cell and edge symbols are a space.\nBut you can set those to whatever you want.\nIn OWID we use a tab instead, for better interop\nwith spreadsheet programs",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iKk",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " If the cells are space-delimited, how do you express a space character inside a cell?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are 3 special symbols. Generally\nthe node break\/row break is always new line.\nIn the JTree lib the cell and edge symbols are a space.\nBut you can set those to whatever you want.\nIn OWID we use a tab instead, for better interop\nwith spreadsheet programs"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611180016.041200",
        "client_msg_id": "e184072b-74da-4099-b388-850fdfb81ee9",
        "text": "There is no such thing as an \"escape character\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "htQc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is no such thing as an \"escape character\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611180051.041400",
        "client_msg_id": "205f5b78-a636-4e31-99d2-68b33c349076",
        "text": "We follow a different strategy. Basically you\nchoose your special symbols, and then you define\nyour higher level languages, so that you never\nrun into situations where you would have ambiguity",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QpEk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We follow a different strategy. Basically you\nchoose your special symbols, and then you define\nyour higher level languages, so that you never\nrun into situations where you would have ambiguity"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611180101.041600",
        "client_msg_id": "1c2019bd-381c-498b-8686-a49f79215592",
        "text": "That isn't an obvious thing, and it takes a lot\nof work to figure out all the edge cases, but it works.\nTrust me have been trying to disprove that for 10 years\nbut it holds true",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X2m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That isn't an obvious thing, and it takes a lot\nof work to figure out all the edge cases, but it works.\nTrust me have been trying to disprove that for 10 years\nbut it holds true"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611180136.041800",
        "client_msg_id": "a22ff2fb-bbd5-4413-8ebe-c8db9a72ea6e",
        "text": "&gt;  How do you distinguish various data types from each other, e.g. how is the string 123 different from the number 123?\nAt the tree notation level there is no concept\nof numbers. Those come at a higher \"Tree\nLanguage\" level",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cXz",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " How do you distinguish various data types from each other, e.g. how is the string 123 different from the number 123?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At the tree notation level there is no concept\nof numbers. Those come at a higher \"Tree\nLanguage\" level"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611180154.042000",
        "client_msg_id": "37045c78-a416-4411-9f27-d9b04044dcec",
        "text": "there will likely be standard higher level\nTree Languages that coalesce",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6vq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there will likely be standard higher level\nTree Languages that coalesce"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1611180196.042200",
        "client_msg_id": "e6c11a17-f91c-4260-8167-c330e7091cde",
        "text": "So, to be clear, it's impossible for a cell to hold \"a string\" (unrestricted character set), but you can have \"a tree language\" which would then define escape characters?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SNrm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So, to be clear, it's impossible for a cell to hold \"a string\" (unrestricted character set), but you can have \"a tree language\" which would then define escape characters?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1611182525.042400",
        "client_msg_id": "cf858b7d-9a4c-408b-a19d-eb47de1ff4da",
        "text": "5:14 I'm not sure what you mean by \"the probes of the platforms interfere with each other\", since the system apparently seems happy to allow two objects to occupy the same space at the same time.\n\nI would say that the video would be easier to understand if I knew more about the basic principles of the system, like which laws of physics (if any) it follows, and what each component is capable of doing. And yeah, Chris's feedback is good.\n\nIn any case it's very cool that you can implement a sorting algorithm in this manner.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1608237807.382400",
        "parent_user_id": "U01GPM3BY4R",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4gwud",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "5:14 I'm not sure what you mean by \"the probes of the platforms interfere with each other\", since the system apparently seems happy to allow two objects to occupy the same space at the same time.\n\nI would say that the video would be easier to understand if I knew more about the basic principles of the system, like which laws of physics (if any) it follows, and what each component is capable of doing. And yeah, Chris's feedback is good.\n\nIn any case it's very cool that you can implement a sorting algorithm in this manner."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1611183128.042800",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1611184068.000000"
        },
        "client_msg_id": "b487d6fa-976c-4187-aab8-a365b7c8922c",
        "text": "Regarding \"on fire\" and \"burning\" - synonym detection is useful not just here but in traditional IDEs as well, e.g. if I type \"Length\" I want it to find \"Size\" and \"Count\" underneath anything that is actually called \"Length\" (this is the most useful, of course, when nothing named Length is found).\n\nThis feature would be useful both at the language level - one should be able to define a function together with synonyms (old and deprecated names together with merely alternate names) that map to the canonical name - and also at the IDE level, where machine learning or a simple thesaurus could find related names. Oh, and the IDE could also refer to the documentation for search results, and use API popularity to help choose the order of results.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1608235145.380000",
        "parent_user_id": "UEBG0NPDK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V+s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regarding \"on fire\" and \"burning\" - synonym detection is useful not just here but in traditional IDEs as well, e.g. if I type \"Length\" I want it to find \"Size\" and \"Count\" underneath anything that is actually called \"Length\" (this is the most useful, of course, when nothing named Length is found).\n\nThis feature would be useful both at the language level - one should be able to define a function together with synonyms (old and deprecated names together with merely alternate names) that map to the canonical name - and also at the IDE level, where machine learning or a simple thesaurus could find related names. Oh, and the IDE could also refer to the documentation for search results, and use API popularity to help choose the order of results."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611190354.043200",
        "client_msg_id": "d52fd738-273c-461c-bbc9-435a577f5c24",
        "text": "Correct, a",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xpBd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Correct, a"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611190370.043400",
        "client_msg_id": "53253b12-5c4a-4434-822e-9fc85fb8d26a",
        "text": "\"cell\" could not hold any of the special characters",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qzs5x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"cell\" could not hold any of the special characters"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611190435.043600",
        "edited": {
            "user": "UMVFWPZ36",
            "ts": "1611190514.000000"
        },
        "client_msg_id": "5552c191-4001-4892-aa31-3a2d0cf702c3",
        "text": "In some web apps using tree notation,\nyou may see a pattern like this in the\nquery string: \"?cellSymbol=~&amp;doc=message~hello world\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7Zgd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In some web apps using tree notation,\nyou may see a pattern like this in the\nquery string: \"?cellSymbol=~&doc=message~hello world\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611190531.044100",
        "client_msg_id": "98e96d8c-0c6a-46c3-b38c-296a6f94825b",
        "text": "in that case, it's saying to use \"~\" as the cell break\nand then \" \" is a valid character in a cell",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z8Hz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "in that case, it's saying to use \"~\" as the cell break\nand then \" \" is a valid character in a cell"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611190543.044300",
        "client_msg_id": "7ce860d8-e16d-4852-a6b9-384c999593c2",
        "text": "But then there are many more strategies",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jaao3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But then there are many more strategies"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611190555.044500",
        "client_msg_id": "068abbf4-2312-4583-a713-86ad387d490f",
        "text": "The basic approach though is to never have\nthe notion of escape characters",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "20WE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The basic approach though is to never have\nthe notion of escape characters"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611190562.044700",
        "client_msg_id": "4b931433-8113-42b4-89f6-e378cab34e1d",
        "text": "At the Tree Notation level",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QN8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At the Tree Notation level"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1611193969.000100",
        "client_msg_id": "13cdb55a-3ed6-4e74-b5b9-88964669516c",
        "text": "Thanks for the feedback!\n\nQuestions regarding inline have\ncome up a lot. Just started an\nFAQ with a more in-depth answer to\nthe inline question:\n\n<https:\/\/github.com\/treenotation\/dumbdown\/blob\/master\/README.md#faq>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611159391.031100",
        "parent_user_id": "UMVFWPZ36",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "treenotation\/dumbdown",
                "title_link": "https:\/\/github.com\/treenotation\/dumbdown\/blob\/master\/README.md#faq",
                "text": "The dumb alternative to markdown. The keyword for title is title. - treenotation\/dumbdown",
                "fallback": "GitHub: treenotation\/dumbdown",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/51207659?s=400&v=4",
                "from_url": "https:\/\/github.com\/treenotation\/dumbdown\/blob\/master\/README.md#faq",
                "thumb_width": 174,
                "thumb_height": 174,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/treenotation\/dumbdown\/blob\/master\/README.md#faq"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NJIq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the feedback!\n\nQuestions regarding inline have\ncome up a lot. Just started an\nFAQ with a more in-depth answer to\nthe inline question:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/treenotation\/dumbdown\/blob\/master\/README.md#faq"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1611194199.000500",
        "client_msg_id": "db054f6f-bd6a-4919-91a4-55e467f26f11",
        "text": "I saw the HN thread for this, and the comparison to markdown confuses a lot of people. Perhaps a better pitch is as syntax sugar for html\/xml.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611159391.031100",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5OptV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I saw the HN thread for this, and the comparison to markdown confuses a lot of people. Perhaps a better pitch is as syntax sugar for html\/xml."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1611194391.000700",
        "client_msg_id": "4b54ffd7-6f1f-49ed-a911-9c999c037c7e",
        "text": "\"Unix pipes for graphics\" is something I've thought about a dozen times in my life. This may well be The Way!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611133012.028600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2icqC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Unix pipes for graphics\" is something I've thought about a dozen times in my life. This may well be The Way!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1611196403.001000",
        "client_msg_id": "d1c5ea57-6b9a-4252-a77c-b37bc30ecdbc",
        "text": "That's the idea I'm playing with most for now. But just playing… I haven't thought much about this, so I can't say I'm doing more than exploring the medium. If you or anyone has a principled approach in mind but haven't had the time to try it, now's the time to incept me. :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611133012.028600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DwEph",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's the idea I'm playing with most for now. But just playing… I haven't thought much about this, so I can't say I'm doing more than exploring the medium. If you or anyone has a principled approach in mind but haven't had the time to try it, now's the time to incept me. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKDM3GLAJ",
        "type": "message",
        "ts": "1611200781.001200",
        "client_msg_id": "1568e003-e138-4e30-aeaf-1c39bbd083ee",
        "text": "The thing I love about this is that you can build a (de)composable Gui out of heterogenous pieces. Like, there's no reason any of this has to be written in the same language, or use the same frameworks so long as it acts as a vnc server. It also seems like it would be feasible to wrap non-vnc applications (or maybe just windows) in a vnc compatibility layer to sort of transclude them in. Correct me please, if any of that is a misunderstanding.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "34e7a55348e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-01-04\/893378739792_34e7a55348e8c86c1901_72.jpg",
            "first_name": "",
            "real_name": "Jared Windover",
            "display_name": "Jared Windover",
            "team": "T5TCAFTA9",
            "name": "jaredwindover",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611133012.028600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OaHJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The thing I love about this is that you can build a (de)composable Gui out of heterogenous pieces. Like, there's no reason any of this has to be written in the same language, or use the same frameworks so long as it acts as a vnc server. It also seems like it would be feasible to wrap non-vnc applications (or maybe just windows) in a vnc compatibility layer to sort of transclude them in. Correct me please, if any of that is a misunderstanding."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1611204348.001400",
        "client_msg_id": "7a53657c-786e-406a-bf6d-296db637503c",
        "text": "Yeah!! <http:\/\/alltom.com\/pages\/futureofcoding\/#collaboration|I love protocol boundaries>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611133012.028600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r0G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah!! "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/alltom.com\/pages\/futureofcoding\/#collaboration",
                                "text": "I love protocol boundaries"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]