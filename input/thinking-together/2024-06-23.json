[
    {
        "user": "U067XHT91HV",
        "type": "message",
        "ts": "1719141717.658999",
        "client_msg_id": "bbe76a27-059f-48c4-8565-d7f7ad7cb213",
        "text": "Who made\/makes this list?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "488abf9ee399",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-02\/6284140728162_488abf9ee399f7e43d8b_72.png",
            "first_name": "Stephan",
            "real_name": "Stephan Kreutzer",
            "display_name": "skreutzer",
            "team": "T5TCAFTA9",
            "name": "stephankreutzer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1718002803.872719",
        "parent_user_id": "U02JQA5FY5C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DwtHC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Who made\/makes this list?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U067XHT91HV",
        "type": "message",
        "ts": "1719144415.044139",
        "client_msg_id": "b0ad93e0-5dd3-4df1-8ec3-6b15245f7efc",
        "text": "<@U5STGTB3J> Good points you bring up. There might also be the option of \"rough consensus and [hopefully increasingly] running code\", meaning, that we don't necessarily need to agree\/align on values, priorities, etc., as long as one agrees that at least one of the problems\/deficiencies listed would benefit from some improvement. OK, theoretical agreement is one thing, let's say it's of help if anyone makes some contribution to at least one of these items. Similarly, besides issues and problem solving, maybe the goal\/mandate\/focus could be to try to find ways to make these things easier, simpler, cheaper, to gain some overview, collect solutions and failures\/dead-ends. If someone works on their respective own thing, that's fine, we can then review it and look for ways how to introduce it easily\/cheaply elsewhere (not anyone's single future of coding, but for software in general). If that's difficult and too expensive, we may look into why that is, and what could be done about it.\n\nIn a similar fashion, there could be \"work groups\", maybe RFC process with comments, updates\/corrections, etc. No need to agree on a particular path, as is fine to do multiple contradicting explorations, prototyping, or other, and simply collect and consolidate\/organize the findings for next steps.\n\nOf an \"open\" (non-exclusive\/-excluding, while protecting against hijacking\/distraction) \"institutional\" type, long-termish (next 100 years of coding?), neutral in operation (avoiding conflict-of-interest, so favoring one hobby horse project\/approach should not prevent\/hinder other attempts), and so on.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "488abf9ee399",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-02\/6284140728162_488abf9ee399f7e43d8b_72.png",
            "first_name": "Stephan",
            "real_name": "Stephan Kreutzer",
            "display_name": "skreutzer",
            "team": "T5TCAFTA9",
            "name": "stephankreutzer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1718448593.662299",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eT8eD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " Good points you bring up. There might also be the option of \"rough consensus and [hopefully increasingly] running code\", meaning, that we don't necessarily need to agree\/align on values, priorities, etc., as long as one agrees that at least one of the problems\/deficiencies listed would benefit from some improvement. OK, theoretical agreement is one thing, let's say it's of help if anyone makes some contribution to at least one of these items. Similarly, besides issues and problem solving, maybe the goal\/mandate\/focus could be to try to find ways to make these things easier, simpler, cheaper, to gain some overview, collect solutions and failures\/dead-ends. If someone works on their respective own thing, that's fine, we can then review it and look for ways how to introduce it easily\/cheaply elsewhere (not anyone's single future of coding, but for software in general). If that's difficult and too expensive, we may look into why that is, and what could be done about it.\n\nIn a similar fashion, there could be \"work groups\", maybe RFC process with comments, updates\/corrections, etc. No need to agree on a particular path, as is fine to do multiple contradicting explorations, prototyping, or other, and simply collect and consolidate\/organize the findings for next steps.\n\nOf an \"open\" (non-exclusive\/-excluding, while protecting against hijacking\/distraction) \"institutional\" type, long-termish (next 100 years of coding?), neutral in operation (avoiding conflict-of-interest, so favoring one hobby horse project\/approach should not prevent\/hinder other attempts), and so on."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U067XHT91HV",
        "type": "message",
        "ts": "1719145880.177099",
        "client_msg_id": "82fb3ffb-6a74-49d6-b6e5-c7bc6c87014d",
        "text": "Also based on that some of us are doing some of this already anyway. On\nthe other hand, one possible and valid conclusion can be that there's\nnot enough people here who have the time\/capacity\/interest (for whatever\n reasons, but the ironic one is to be too busy with wheel-reinvention\nand duplication) - then it's cool to identify the issues, but\nsolutions\/improvements either remain isolated\/siloed or a better model\nmay come from elsewhere eventually (strategy of waiting it out).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "488abf9ee399",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-02\/6284140728162_488abf9ee399f7e43d8b_72.png",
            "first_name": "Stephan",
            "real_name": "Stephan Kreutzer",
            "display_name": "skreutzer",
            "team": "T5TCAFTA9",
            "name": "stephankreutzer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1718448593.662299",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dYCod",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also based on that some of us are doing some of this already anyway. On\nthe other hand, one possible and valid conclusion can be that there's\nnot enough people here who have the time\/capacity\/interest (for whatever\n reasons, but the ironic one is to be too busy with wheel-reinvention\nand duplication) - then it's cool to identify the issues, but\nsolutions\/improvements either remain isolated\/siloed or a better model\nmay come from elsewhere eventually (strategy of waiting it out)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1719148766.619549",
        "client_msg_id": "1cda9db5-c887-4480-9741-356aedd20fc6",
        "text": "Wherever you go, there you are. But the one thing you can do is build a map of the places you've been. That always helps.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1718448593.662299",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wO17p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wherever you go, there you are. But the one thing you can do is build a map of the places you've been. That always helps."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02JQA5FY5C",
        "type": "message",
        "ts": "1719152563.070999",
        "client_msg_id": "48ce2859-fa34-4ba7-b5df-cc0e4d87977e",
        "text": "*Builders manifesto* (aka* _Software builders manifesto_)\nBuild as much as you can, experiment as much as you can, build something you are passionate about.\n\n*- _I just created this manifesto, so it is a bit of overstretch on the “aka” part_ :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0294ce89c528",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-14\/7298850430720_0294ce89c5288635edbd_72.jpg",
            "first_name": "Oleksandr",
            "real_name": "Oleksandr Kryvonos",
            "display_name": "Oleksandr Kryvonos",
            "team": "T5TCAFTA9",
            "name": "geraclion",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719152563.070999",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1719177499.855669",
        "reply_users": [
            "U02JQA5FY5C",
            "U067XHT91HV"
        ],
        "replies": [
            {
                "user": "U02JQA5FY5C",
                "ts": "1719152871.937909"
            },
            {
                "user": "U067XHT91HV",
                "ts": "1719177499.855669"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cIJSb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Builders manifesto",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (aka* "
                            },
                            {
                                "type": "text",
                                "text": "Software builders manifesto",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ")\nBuild as much as you can, experiment as much as you can, build something you are passionate about.\n\n*- "
                            },
                            {
                                "type": "text",
                                "text": "I just created this manifesto, so it is a bit of overstretch on the “aka” part ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "U0123H7JRDM"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02JQA5FY5C",
        "type": "message",
        "ts": "1719152871.937909",
        "client_msg_id": "8dc8c936-12d6-48c3-9f78-59702ecc6f79",
        "text": "I was searching for this community for a while, some of the ideas planted by that Bret Viktor talk.\nI have been waiting for some of the big figures to implement finally the revolution in programming.\nBut you know what, everyone has potential for implementing something great, don’t wait for the future - build it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0294ce89c528",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-14\/7298850430720_0294ce89c5288635edbd_72.jpg",
            "first_name": "Oleksandr",
            "real_name": "Oleksandr Kryvonos",
            "display_name": "Oleksandr Kryvonos",
            "team": "T5TCAFTA9",
            "name": "geraclion",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719152563.070999",
        "parent_user_id": "U02JQA5FY5C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oi0h7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was searching for this community for a while, some of the ideas planted by that Bret Viktor talk.\nI have been waiting for some of the big figures to implement finally the revolution in programming.\nBut you know what, everyone has potential for implementing something great, don’t wait for the future - build it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U0123H7JRDM"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1719160801.828489",
        "client_msg_id": "6ceae7c0-6b75-4970-b8df-99cf2c6f9f14",
        "text": "Yeah, we don’t necessarily have to agree on anything and everybody is free to do and build what they want to. That’s great. And, yes, exactly, that's what we’re doing already. Freedom!\n\nThat’s all great and contributes important variety and diversity. But through an evolutionary lens — just applied as an analogy — it seems we have plenty of variation but not enough selection to make progress. There are no clear pressures to adapt towards something, to achieve better fitness.\nWe have more projects than we can weed through in a lifetime. It seems with very few exceptions people prefer the “throw something at the wall and see what sticks” open market approach to developing ideas. And what gets selected is mostly based on popularity, which has often little to do with how good the underlying idea is.\n\nI’m not saying we should stop doing that. It just appears to me that we have plenty of people trying that approach already and wouldn’t it be great to also try some other approaches as well?\n\nOne of them I tried to outline above. It’s not supposed to be “better” or “right” or anything like that, just different. Seems interesting to me to investigate what drives other people to believe what they believe is good and try to find patterns and see where people’s values overlap. Sure, we can try to figure that out from deciphering individual project READMEs on GitHub and that’s probably a more convenient process where nobody gets into an argument.\nBut ultimately coming together on certain issues is a kind of editing process where parts have to be cut to make something else stand out. We do this all the time when we design what we work on, but we mostly do so individually, hoping that other people will later find it so great that they join our cause and accept our values.\n\nI’m just wondering what becomes possible if we’d align our values and start from a shared cause.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1718448593.662299",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j6btN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, we don’t necessarily have to agree on anything and everybody is free to do and build what they want to. That’s great. And, yes, exactly, that's what we’re doing already. Freedom!\n\nThat’s all great and contributes important variety and diversity. But through an evolutionary lens — just applied as an analogy — it seems we have plenty of variation but not enough selection to make progress. There are no clear pressures to adapt towards something, to achieve better fitness.\nWe have more projects than we can weed through in a lifetime. It seems with very few exceptions people prefer the “throw something at the wall and see what sticks” open market approach to developing ideas. And what gets selected is mostly based on popularity, which has often little to do with how good the underlying idea is.\n\nI’m not saying we should stop doing that. It just appears to me that we have plenty of people trying that approach already and wouldn’t it be great to also try some other approaches as well?\n\nOne of them I tried to outline above. It’s not supposed to be “better” or “right” or anything like that, just different. Seems interesting to me to investigate what drives other people to believe what they believe is good and try to find patterns and see where people’s values overlap. Sure, we can try to figure that out from deciphering individual project READMEs on GitHub and that’s probably a more convenient process where nobody gets into an argument.\nBut ultimately coming together on certain issues is a kind of editing process where parts have to be cut to make something else stand out. We do this all the time when we design what we work on, but we mostly do so individually, hoping that other people will later find it so great that they join our cause and accept our values.\n\nI’m just wondering what becomes possible if we’d align our values and start from a shared cause."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02QC0PPER3",
        "type": "message",
        "ts": "1719160802.309139",
        "client_msg_id": "f9885481-42cb-41f0-a764-3ecfb0160541",
        "text": "Love the \"surface\/bulk\" distinction you are making.\nOne unfortunate aspect of _cognitive surface_ term: closest terms that come to mind are _API surface_, _attack surface_ where smaller=better,\nand my initial assumption seeing the title was \"how much you need to grok to use it\" (again less=better).\nWhereas you mean \"how much of it is easy to grok\" (more=better!).   But I don't have any better term.\n\nHmm direction of \"better\" is a false dichotomy, one can desire both meanings.  Ideal software has \"low floor high ceiling\", both functionally and cognitively.\nSounds like \"surface\/bulk\" is not enough to capture that, you'd need at least 3 terms?  Or more generally draw a learning curve?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "90c9108c61f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-12\/2854686602576_90c9108c61f5d809eb8a_72.jpg",
            "first_name": "Beni",
            "real_name": "Beni Cherniavsky-Paskin",
            "display_name": "Beni Cherniavsky-Paskin",
            "team": "T5TCAFTA9",
            "name": "beni.cherniavsky",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714490368.887299",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A7ttx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Love the \"surface\/bulk\" distinction you are making.\nOne unfortunate aspect of "
                            },
                            {
                                "type": "text",
                                "text": "cognitive surface",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " term: closest terms that come to mind are "
                            },
                            {
                                "type": "text",
                                "text": "API surface",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "attack surface",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " where smaller=better,\nand my initial assumption seeing the title was \"how much you need to grok to use it\" (again less=better).\nWhereas you mean \"how much of it is easy to grok\" (more=better!).   But I don't have any better term.\n\nHmm direction of \"better\" is a false dichotomy, one can desire both meanings.  Ideal software has \"low floor high ceiling\", both functionally and cognitively.\nSounds like \"surface\/bulk\" is not enough to capture that, you'd need at least 3 terms?  Or more generally draw a learning curve?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "The old joke about learning curves (many variations exist):",
        "files": [
            {
                "id": "F079CJ28UCS",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U02QC0PPER3",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3pM75",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The old joke about learning curves (many variations exist):"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1719161539.922809",
        "client_msg_id": "8502941f-d9ee-440a-a4b5-fc72e328ac9f",
        "thread_ts": "1714490368.887299",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "text": "More seriously, I tried to map these concepts to a curve, and it looks like \"low floor\" wants to be measured in learning effort, while \"high ceiling\" in reachable ability?\nAt least that fits how I usually understood that phrase...\n\nYour division of cognitive surface\/bulk then becomes a 2nd (possibly much further to the right) rise in ability unlocked with \"specialist knowledge, specialist tools, or with significant effort\".\n(framing I'm learning from reading Nardi: It's not that users _can't_ learn it, it's more than it deals with CS stuff unrelated to the problems they want to solve and is less attractive to invest time in.)",
        "files": [
            {
                "id": "F07A1CJ01RN",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U02QC0PPER3",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AIxWB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More seriously, I tried to map these concepts to a curve, and it looks like \"low floor\" wants to be measured in learning effort, while \"high ceiling\" in reachable ability?\nAt least that fits how I usually understood that phrase...\n\nYour division of cognitive surface\/bulk then becomes a 2nd (possibly much further to the right) rise in ability unlocked with \"specialist knowledge, specialist tools, or with significant effort\".\n(framing I'm learning from reading Nardi: It's not that users "
                            },
                            {
                                "type": "text",
                                "text": "can't",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " learn it, it's more than it deals with CS stuff unrelated to the problems they want to solve and is less attractive to invest time in.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1719161965.564239",
        "client_msg_id": "8fe4a990-ac4e-4a7a-9702-96c1e464b985",
        "thread_ts": "1714490368.887299",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "text": "Are there more things to measure on a typical curve?\n\nMust any software curve have these parts (in varying proportions)??\n• \"free software\" ideals strive to pave over that 2nd _plateau_, giving you non-negligible gains that justify gradually _growing_ into a developer.\n• \"end user programming\" ideals recognize users may not care for that; instead they create many smaller earlier plateaus to climb.  Instead of \"user\/developer\" there are more levels like \"user that knows VLOOKUP()\"; \"user that learn pivot tables\"; \"user that can record a macro\" etc...  [I drew this new curve here in the blank space above as if it's strict improvement on non-EUP software, but that's not necessarily true.]\n• To reuse the Emacs example, a central goal of <https:\/\/www.gnu.org\/software\/emacs\/emacs-paper.html#SEC14|embedding an interpreter> was so that almost no one needs to ever touch the compiled C parts.  If you'd count ELisp as \"surface\" and C as \"bulk\", then it pulled off being 90% surface!  Well obviously that's too crude a division; the ELisp one puts in .emacs (in mode M, bind key K &amp; configure var V) is nothing like say font-lock.el which while looking like well-commented ELisp is deeply optimized &amp; coupled to the C...  It also, explicitly, used the strategy of adding intermediate levels of proficiency like \"customize keys &amp; variables\".\n",
        "files": [
            {
                "id": "F079CKCS68J",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U02QC0PPER3",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9N5Z1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are there more things to measure on a typical curve?\n\nMust any software curve have these parts (in varying proportions)??\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "\"free software\" ideals strive to pave over that 2nd "
                                    },
                                    {
                                        "type": "text",
                                        "text": "plateau",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", giving you non-negligible gains that justify gradually "
                                    },
                                    {
                                        "type": "text",
                                        "text": "growing",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " into a developer."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "\"end user programming\" ideals recognize users may not care for that; instead they create many smaller earlier plateaus to climb.  Instead of \"user\/developer\" there are more levels like \"user that knows VLOOKUP()\"; \"user that learn pivot tables\"; \"user that can record a macro\" etc...  [I drew this new curve here in the blank space above as if it's strict improvement on non-EUP software, but that's not necessarily true.]"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "To reuse the Emacs example, a central goal of "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/www.gnu.org\/software\/emacs\/emacs-paper.html#SEC14",
                                        "text": "embedding an interpreter"
                                    },
                                    {
                                        "type": "text",
                                        "text": " was so that almost no one needs to ever touch the compiled C parts.  If you'd count ELisp as \"surface\" and C as \"bulk\", then it pulled off being 90% surface!  Well obviously that's too crude a division; the ELisp one puts in .emacs (in mode M, bind key K & configure var V) is nothing like say font-lock.el which while looking like well-commented ELisp is deeply optimized & coupled to the C...  It also, explicitly, used the strategy of adding intermediate levels of proficiency like \"customize keys & variables\"."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1719163823.645739",
        "client_msg_id": "d1323608-4245-4100-8aa2-bd07ac06bfac",
        "thread_ts": "1714490368.887299",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "user": "U02QC0PPER3",
        "type": "message",
        "ts": "1719164698.040959",
        "client_msg_id": "08b1f08f-eb71-4de2-99c6-4bf5bd7dc328",
        "text": "Obviously a curve can't fully capture \"What is and what isn't comprehensible depends on the person\".  It's a 1D reduction of multi-dimensional skills.\n(For developers too! Given 2 software of similar functionality, I might prefer the one written in python in more functional style, you might prefer the smalltalk one in more OOP style etc.)\nBut it's a useful simplification.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "90c9108c61f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-12\/2854686602576_90c9108c61f5d809eb8a_72.jpg",
            "first_name": "Beni",
            "real_name": "Beni Cherniavsky-Paskin",
            "display_name": "Beni Cherniavsky-Paskin",
            "team": "T5TCAFTA9",
            "name": "beni.cherniavsky",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714490368.887299",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ha4jb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Obviously a curve can't fully capture \"What is and what isn't comprehensible depends on the person\".  It's a 1D reduction of multi-dimensional skills.\n(For developers too! Given 2 software of similar functionality, I might prefer the one written in python in more functional style, you might prefer the smalltalk one in more OOP style etc.)\nBut it's a useful simplification."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1719171769.950219",
        "client_msg_id": "82fb7e74-5b23-4ec0-b45a-355f62cdc942",
        "text": "Well it's on my Google drive, but it's mostly compiled by the people running the projects. I'm relying on Security through Obscurity to prevent vandalism",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1718002803.872719",
        "parent_user_id": "U02JQA5FY5C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jI52t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well it's on my Google drive, but it's mostly compiled by the people running the projects. I'm relying on Security through Obscurity to prevent vandalism"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U067XHT91HV",
        "type": "message",
        "ts": "1719177499.855669",
        "edited": {
            "user": "U067XHT91HV",
            "ts": "1719178140.000000"
        },
        "client_msg_id": "11d353ee-d6dc-401d-b8c4-3f81aa3e1108",
        "text": "Sounds like the Kay \"best way to predict the future is to invent it\" quote. Waiting as a strategy may work out and if it does, saves a lot of time\/effort and avoids risk of failure. On the other hand, there's no guarantee and reduced chance that the desired results will arrive eventually, or may be under control of some other parties to pursue\/support *their* interests\/goals - with an active\/working\/practical involvement vs. mere passive consumption. \"Must create a system, or be enslaved by another man's\" (minus personal computing\/knowledge-management, because much of it would be too much work for a single person, also by duplicating\/reinventing everything from scratch, point being with ARC, PARC, etc. it's teams\/communities organizing and cultivating a larger effort).\n\nObviously, there's the big names and pioneers who are famous for their contributions. Some of them might be geniuses, naturally talented or got lucky (right time right place), but a number of them might just have been regular guys like me, you, everyone else. Including the armies of lesser or not known people doing an enormous amount of many little and huge tasks, to enable any such progress to be made in the first place. A lot of the work is optimization details, which just clutters and distracts from the main concepts, therefore by just extracting the concepts, details\/optimizations can be filled in later or differently. Today, computers are cheaply available and lots of people are on the network, these are additional advantages that can help. So OK, with Kay \"perspective is worth 80 IQ points\" (perspective including conceptualizations, architecture, etc., it's not a unique magic insight that is dropped from the heavens), one does not need to be that clever (given IQ not necessarily being any good in the first place, more at risk of producing and furthering the complication and complexity of the mess instead of reducing it?). Better perspective may come from looking at the history (which is largely forgotten, abandoned and lost, trapped\/tied to old\/lost machinery, trapped in restrictive copyright publications, out of print, not recorded, etc.), so the Bush\/Licklider\/Taylor <- Engelbart <- Kay <- Victor is to supply some of that perspective. Also, it's very, very unorganized: hard to find good materials, hard to (re-)discover their interrelations, hard to recognize and avoid known traps, hard to gain some overview (difficult and\/or expensive).\n\nWith, for example, Kay, looking at many things of his time, maybe this leads to doing all of the aspects eventually: hardware (input\/output devices, computers), programming methodologies, languages, and so on, as otherwise would remain limited to (re)invent a minor detail that's trapped\/limited by lots of other parts outside of one's control, versus innovation which is the combination of already existing parts, which just hadn't been combined as these previously were outside of the field\/domain.\n\nI'm not sure if small experiments and prototypes are a good approach to get into addressing the various aspects, to learn about the challenges and why these are difficult\/expensive, hopefully to learn navigating the problem space, avoiding traps, following up on potential solutions, making these easier and cheaper, going after these in a strategic manner. Because at the same time, I would also be worried about some kind of a mega-project, as these tend to conflate concerns and get trapped or fail that way (big bloated costly vertical monolith silo\/stack).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "488abf9ee399",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-02\/6284140728162_488abf9ee399f7e43d8b_72.png",
            "first_name": "Stephan",
            "real_name": "Stephan Kreutzer",
            "display_name": "skreutzer",
            "team": "T5TCAFTA9",
            "name": "stephankreutzer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719152563.070999",
        "parent_user_id": "U02JQA5FY5C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TPjxV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sounds like the Kay \"best way to predict the future is to invent it\" quote. Waiting as a strategy may work out and if it does, saves a lot of time\/effort and avoids risk of failure. On the other hand, there's no guarantee and reduced chance that the desired results will arrive eventually, or may be under control of some other parties to pursue\/support "
                            },
                            {
                                "type": "text",
                                "text": "their",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " interests\/goals - with an active\/working\/practical involvement vs. mere passive consumption. \"Must create a system, or be enslaved by another man's\" (minus personal computing\/knowledge-management, because much of it would be too much work for a single person, also by duplicating\/reinventing everything from scratch, point being with ARC, PARC, etc. it's teams\/communities organizing and cultivating a larger effort).\n\nObviously, there's the big names and pioneers who are famous for their contributions. Some of them might be geniuses, naturally talented or got lucky (right time right place), but a number of them might just have been regular guys like me, you, everyone else. Including the armies of lesser or not known people doing an enormous amount of many little and huge tasks, to enable any such progress to be made in the first place. A lot of the work is optimization details, which just clutters and distracts from the main concepts, therefore by just extracting the concepts, details\/optimizations can be filled in later or differently. Today, computers are cheaply available and lots of people are on the network, these are additional advantages that can help. So OK, with Kay \"perspective is worth 80 IQ points\" (perspective including conceptualizations, architecture, etc., it's not a unique magic insight that is dropped from the heavens), one does not need to be that clever (given IQ not necessarily being any good in the first place, more at risk of producing and furthering the complication and complexity of the mess instead of reducing it?). Better perspective may come from looking at the history (which is largely forgotten, abandoned and lost, trapped\/tied to old\/lost machinery, trapped in restrictive copyright publications, out of print, not recorded, etc.), so the Bush\/Licklider\/Taylor <- Engelbart <- Kay <- Victor is to supply some of that perspective. Also, it's very, very unorganized: hard to find good materials, hard to (re-)discover their interrelations, hard to recognize and avoid known traps, hard to gain some overview (difficult and\/or expensive).\n\nWith, for example, Kay, looking at many things of his time, maybe this leads to doing all of the aspects eventually: hardware (input\/output devices, computers), programming methodologies, languages, and so on, as otherwise would remain limited to (re)invent a minor detail that's trapped\/limited by lots of other parts outside of one's control, versus innovation which is the combination of already existing parts, which just hadn't been combined as these previously were outside of the field\/domain.\n\nI'm not sure if small experiments and prototypes are a good approach to get into addressing the various aspects, to learn about the challenges and why these are difficult\/expensive, hopefully to learn navigating the problem space, avoiding traps, following up on potential solutions, making these easier and cheaper, going after these in a strategic manner. Because at the same time, I would also be worried about some kind of a mega-project, as these tend to conflate concerns and get trapped or fail that way (big bloated costly vertical monolith silo\/stack)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U067XHT91HV",
        "type": "message",
        "ts": "1719184181.127639",
        "edited": {
            "user": "U067XHT91HV",
            "ts": "1719184348.000000"
        },
        "client_msg_id": "3572fea3-ce80-41c5-9306-f9187eb8df5c",
        "text": "I don't look at it that way, a dichotomy of \"freedom\"\/diversity\/variance vs. a homogeneous shared goal\/alignment. Instead, similar to the Agile manifesto or Christopher Alexander's test for more aliveness in a design (with likely some overlap between the two via Ward Cunningham), the selection can simply be made according to openness\/libre-free licensing over closed\/proprietary implementation, portable over a specific one-off implementation (idiosyncratic), generic over specific, simple over complicated (but no simpler), cheap over expensive, horizontal modules\/layering over vertical integration (= rigid), and so on.\n\nOn the basis that in\/with software (as the medium), this should be possible, and the costs and complications and incompatibilities are to some degree artificial and unnecessary (not technologically inherent\/mandatory). That way, two attempts can be compared and the better one identified. With ones that are bad overall but include a few good aspects, the good aspects can be extracted and added to better designs\/implementations. For overall desirable implementations that have a few undesirable aspects, why not make a variant which removes these? Also based on that these properties should introduce the flexibility for this to be a realistic\/practical occupation (to make such adaptions\/changes within acceptable time\/effort).\n\nTo clarify in regard to your framing: there's a freedom to try many things that may potentially produce the desired properties, and there does not need to be much interest nor is there likely much benefit from results that fail to be designed towards these characteristics. Does this make sense?\n\nOr do you have a master plan already with most of the questions answered\/solved?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "488abf9ee399",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-02\/6284140728162_488abf9ee399f7e43d8b_72.png",
            "first_name": "Stephan",
            "real_name": "Stephan Kreutzer",
            "display_name": "skreutzer",
            "team": "T5TCAFTA9",
            "name": "stephankreutzer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1718448593.662299",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9KGWv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't look at it that way, a dichotomy of \"freedom\"\/diversity\/variance vs. a homogeneous shared goal\/alignment. Instead, similar to the Agile manifesto or Christopher Alexander's test for more aliveness in a design (with likely some overlap between the two via Ward Cunningham), the selection can simply be made according to openness\/libre-free licensing over closed\/proprietary implementation, portable over a specific one-off implementation (idiosyncratic), generic over specific, simple over complicated (but no simpler), cheap over expensive, horizontal modules\/layering over vertical integration (= rigid), and so on.\n\nOn the basis that in\/with software (as the medium), this should be possible, and the costs and complications and incompatibilities are to some degree artificial and unnecessary (not technologically inherent\/mandatory). That way, two attempts can be compared and the better one identified. With ones that are bad overall but include a few good aspects, the good aspects can be extracted and added to better designs\/implementations. For overall desirable implementations that have a few undesirable aspects, why not make a variant which removes these? Also based on that these properties should introduce the flexibility for this to be a realistic\/practical occupation (to make such adaptions\/changes within acceptable time\/effort).\n\nTo clarify in regard to your framing: there's a freedom to try many things that may potentially produce the desired properties, and there does not need to be much interest nor is there likely much benefit from results that fail to be designed towards these characteristics. Does this make sense?\n\nOr do you have a master plan already with most of the questions answered\/solved?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1719189860.647069",
        "client_msg_id": "130E10D2-1E06-4777-8E1A-461F4E1881A3",
        "text": "I'm becoming interested in the idea of \"programming tools as art\", and as a consequence I'm interested in programming tools criticism.\n\nI'd like to read\/watch\/hear critical reviews of programming tools that approach them not as bundles of features and capabilities, but as authored works that reflect a creative intent and as cultural touchstones and as environments or artifacts within which one can have deeply personal experiences.\n\nA. Do you share my interest?\nB. Do you know any such critics?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719189860.647069",
        "reply_count": 21,
        "reply_users_count": 6,
        "latest_reply": "1720136057.687779",
        "reply_users": [
            "UC2A2ARPT",
            "U05SU27S1M2",
            "UK3LH8CF5",
            "U03CEGR3HSL",
            "U03R0B9U1GD",
            "U02QC0PPER3"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1719205815.590659"
            },
            {
                "user": "U05SU27S1M2",
                "ts": "1719240364.863159"
            },
            {
                "user": "U05SU27S1M2",
                "ts": "1719240522.556829"
            },
            {
                "user": "U05SU27S1M2",
                "ts": "1719240661.834709"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1719351266.904759"
            },
            {
                "user": "U05SU27S1M2",
                "ts": "1719411435.010999"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1719412034.975659"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1719412793.943959"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1719413085.102929"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1719413517.581279"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1719443852.821659"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1719443879.043799"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1719443933.231909"
            },
            {
                "user": "U05SU27S1M2",
                "ts": "1719475184.415839"
            },
            {
                "user": "U03CEGR3HSL",
                "ts": "1719557102.282869"
            },
            {
                "user": "U05SU27S1M2",
                "ts": "1719602183.124159"
            },
            {
                "user": "U03R0B9U1GD",
                "ts": "1719650380.702409"
            },
            {
                "user": "U02QC0PPER3",
                "ts": "1719859290.894349"
            },
            {
                "user": "U02QC0PPER3",
                "ts": "1719860478.187529"
            },
            {
                "user": "U02QC0PPER3",
                "ts": "1719860973.652529"
            },
            {
                "user": "U03R0B9U1GD",
                "ts": "1720136057.687779"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AJZCV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm becoming interested in the idea of \"programming tools as art\", and as a consequence I'm interested in programming tools criticism.\n\nI'd like to read\/watch\/hear critical reviews of programming tools that approach them not as bundles of features and capabilities, but as authored works that reflect a creative intent and as cultural touchstones and as environments or artifacts within which one can have deeply personal experiences.\n\nA. Do you share my interest?\nB. Do you know any such critics?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U04E5QAD6DD",
                    "U075U25QC00",
                    "U5STGTB3J",
                    "U0123H7JRDM",
                    "UJBAJNFLK",
                    "UCS1K3QTH",
                    "UML4ZEKDK",
                    "U06BUK2M2RH",
                    "U079M43CQ31",
                    "U0378MDUG1Y"
                ],
                "count": 11
            },
            {
                "name": "cake",
                "users": [
                    "U013ZLJARC7",
                    "U8A5MS6R1",
                    "UA14TGLTC"
                ],
                "count": 3
            },
            {
                "name": "frame_with_picture",
                "users": [
                    "U02QC0PPER3"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1719205815.590659",
        "client_msg_id": "49DBEAD3-5A30-4C8D-A289-19B4E9213B0C",
        "text": "I wonder what the Kotaku of programming tools would look like. Reviews of new releases. Feature articles with broad criticism of emerging movements. Hell, year end best-of lists.\n\nWhat's the <http:\/\/howlongtobeat.com|howlongtobeat.com> of programming? Is that an absurd question? Well, what sort of crowdsourced metrics would we find helpful when selecting a new language to enjoy. We could certainly do better than GitHub stars and download counts.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719189860.647069",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E3HBM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wonder what the Kotaku of programming tools would look like"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Reviews of new releases"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Feature articles with broad criticism of emerging movements"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Hell, year end best-of lists"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": "\n\nWhat's the "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/howlongtobeat.com",
                                "text": "howlongtobeat.com"
                            },
                            {
                                "type": "text",
                                "text": " of programming? Is that an absurd question? Well, what sort of crowdsourced metrics would we find helpful when selecting a new language to enjoy"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " We could certainly do better than GitHub stars and download counts"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1719211785.319359",
        "edited": {
            "user": "U5STGTB3J",
            "ts": "1719212239.000000"
        },
        "client_msg_id": "19AE30AE-A746-4F9D-A227-146514D91A16",
        "text": "<@U067XHT91HV> Who makes these decisions over the criteria you list? And how are these decisions made? In what context? Would you be able to state which of each criterium is universally better than the other? Is open, portable, generic, simple, cheap, horizontal always better than the respective alternatives?\n\nIn my view these are design decisions that individual developers make during a project and often they have a general preference for one, mostly based on their unique experience of which languages, frameworks, and patterns they have encountered and are familiar with. This has little to do with Alexander’s Mirror of the Self test and a lot with what he writes about in <http:\/\/nature-of-order.stefan-lesser.com\/liking-something-from-the-heart|Liking something from the heart>:\n\n> _It is a current dogma that you may like what you wish, and that it is an essential part of democratic freedom to like whatever you decide to like. This occurs at a time when the mass media have taken over our ideas of what is likable to an extent unknown in human history. Thus if one were pessimistic, one might even say that there is very little authentic liking in our time. What people like can often not be trusted, because it does not come from the heart._\nWhile it sure seems easy to decide if it’s just you making that decision for your own project that you have full control over (could this be why there are so many of these projects on GitHub?), it seems we can’t agree on any of those collectively, and certainly not based on a deeply felt agreement that does not come from some shallow ideology.\n\nWe don’t have a collective direction, a North Star to orient ourselves towards when making such design decisions. We just have several ideologies that prefer different aspects and have different priorities putting different weights on each of them (Declarative! Strong typing! DRY! Test first! This or that architecture! Etc.).\n\nDirection can’t come from a preference for certain design decisions directly. We tend to argue as if there was a universally best way or right approach and you should always do X. But somehow there is always somebody why doesn’t agree X is the right thing to do. \n\nDirection has to come from deeper values that allow us to make good decisions in particular contexts — sometimes making a design decision that is the exact opposite from the last project we did, just because the context was different. And while not at all easy, values may be the only things we might have a chance to agree on.\n\nWhen an Emacs and a vim person go at each other, it doesn’t really matter who is right (because neither is), it’s much more valuable to attempt to understand why they think they’re right and in what environmental conditions that may be true.\n\nThe alternative approach I suggested only looks like its goal is to define what is “universally right”, at least for the people participating. What it really is about is to look closer at the context to learn about why people prefer one over the other and in what situations that makes sense. To find out what they value and to see if we can find some alignment in that.\nAs Alexander puts it:\n\n> _The essential thing is that, when we really like something, we generally agree on it. This is so shockingly different from modern ideas that it needs to be discussed very carefully.\n> \n> The main breakthrough in understanding will come when we are able to distinguish the everyday kind of liking (where we obviously do not agree about what we like) from the deeper kind of liking where […] we do agree. Ultimately it will be this deeper kind of liking, where we agree, that forms the basis for good judgement in the realm of architecture.\n> \n> The crux of my argument will be to show that the deeper kind of liking not only exists but also corresponds exactly to the presence of living structure, and to objective and structural life._",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1718448593.662299",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6s4FC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U067XHT91HV"
                            },
                            {
                                "type": "text",
                                "text": " Who makes these decisions over the criteria you list? And how are these decisions made? In what context? Would you be able to state which of each criterium is universally better than the other? Is open, portable, generic, simple, cheap, horizontal always better than the respective alternatives?\n\nIn my view these are design decisions that individual developers make during a project and often they have a general preference for one, mostly based on their unique experience of which languages, frameworks, and patterns they have encountered and are familiar with. This has little to do with Alexander’s Mirror of the Self test and a lot with what he writes about in "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/nature-of-order.stefan-lesser.com\/liking-something-from-the-heart",
                                "text": "Liking something from the heart"
                            },
                            {
                                "type": "text",
                                "text": ":\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It is a current dogma that you may like what you wish, and that it is an essential part of democratic freedom to like whatever you decide to like. This occurs at a time when the mass media have taken over our ideas of what is likable to an extent unknown in human history. Thus if one were pessimistic, one might even say that there is very little authentic liking in our time. What people like can often not be trusted, because it does not come from the heart.",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nWhile it sure seems easy to decide if it’s just you making that decision for your own project that you have full control over (could this be why there are so many of these projects on GitHub?), it seems we can’t agree on any of those collectively, and certainly not based on a deeply felt agreement that does not come from some shallow ideology.\n\nWe don’t have a collective direction, a North Star to orient ourselves towards when making such design decisions. We just have several ideologies that prefer different aspects and have different priorities putting different weights on each of them (Declarative! Strong typing! DRY! Test first! This or that architecture! Etc.).\n\nDirection can’t come from a preference for certain design decisions directly. We tend to argue as if there was a universally best way or right approach and you should always do X. But somehow there is always somebody why doesn’t agree X is the right thing to do. \n\nDirection has to come from deeper values that allow us to make good decisions in particular contexts — sometimes making a design decision that is the exact opposite from the last project we did, just because the context was different. And while not at all easy, values may be the only things we might have a chance to agree on.\n\nWhen an Emacs and a vim person go at each other, it doesn’t really matter who is right (because neither is), it’s much more valuable to attempt to understand why they think they’re right and in what environmental conditions that may be true.\n\nThe alternative approach I suggested only looks like its goal is to define what is “universally right”, at least for the people participating. What it really is about is to look closer at the context to learn about why people prefer one over the other and in what situations that makes sense. To find out what they value and to see if we can find some alignment in that.\nAs Alexander puts it:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The essential thing is that, when we really like something, we generally agree on it. This is so shockingly different from modern ideas that it needs to be discussed very carefully.\n\nThe main breakthrough in understanding will come when we are able to distinguish the everyday kind of liking (where we obviously do not agree about what we like) from the deeper kind of liking where […] we do agree. Ultimately it will be this deeper kind of liking, where we agree, that forms the basis for good judgement in the realm of architecture.\n\nThe crux of my argument will be to show that the deeper kind of liking not only exists but also corresponds exactly to the presence of living structure, and to objective and structural life.",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U067XHT91HV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1719211857.277519",
        "client_msg_id": "c461cef1-f5c2-45d8-b400-29b8d82a724f",
        "text": "I wonder to what degree we are victims of the problem(s) we are trying to solve. I see many projects here that have a lot of overlap with what I am trying to achieve. But I cannot contribute to them, nor even examine them in depth, because of technological gaps. We all build stuff using the technology we know and love, but that's different technology for everyone. Plus we choose example application domains we know and love, and those are different as well for everyone.\nFor me this is fine. Exposure to interesting ideas is reason enough for me to be part of this community. Sure, we could all be more effective at reaching our goals.But I suspect that would also be less fun.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1718448593.662299",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UYwvp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wonder to what degree we are victims of the problem(s) we are trying to solve. I see many projects here that have a lot of overlap with what I am trying to achieve. But I cannot contribute to them, nor even examine them in depth, because of technological gaps. We all build stuff using the technology we know and love, but that's different technology for everyone. Plus we choose example application domains we know and love, and those are different as well for everyone.\nFor me this is fine. Exposure to interesting ideas is reason enough for me to be part of this community. Sure, we could all be more effective at reaching our goals.But I suspect that would also be less fun."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U067XHT91HV"
                ],
                "count": 1
            },
            {
                "name": "point_up::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "point_up",
                "users": [
                    "U03JUAWDVSR"
                ],
                "count": 1
            }
        ]
    }
]