[
    {
        "user": "U04BZ21V2NQ",
        "type": "message",
        "ts": "1711286386.072009",
        "client_msg_id": "90a12d7f-a301-47f4-b520-f1330d9f042a",
        "text": "I recently thought about combining natural language prompts in code notebooks interface because it seemed like a great use case to me. While working with data, a mixture of low-level capability of writing code and a high-level capability to write transformations or visualization instructions in natural language can be a great advantage. You can code when you want to, and completely skip and offload to an LLM by writing natural language instructions! The notebook executes code and prompts in a single context. Here's something you can try that implements this idea: <https:\/\/try-slate.com\/>\nAlso wrote some thoughts in a <https:\/\/mohitkarekar.com\/posts\/2024\/slate\/|post here> and a short <https:\/\/www.loom.com\/share\/bcde36f3fa424b2f80c860def0b3f164?sid=2bf8cdea-ef9e-4421-9388-570a097e02f9|video demo here>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "91a7218ff979",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-11-21\/4401664727893_91a7218ff9794118d6f1_72.jpg",
            "first_name": "Mohit",
            "real_name": "Mohit Karekar",
            "display_name": "Mohit Karekar",
            "team": "T5TCAFTA9",
            "name": "karekar.mohit",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711286386.072009",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1711296096.147239",
        "reply_users": [
            "US370TRJA",
            "U04BZ21V2NQ"
        ],
        "replies": [
            {
                "user": "US370TRJA",
                "ts": "1711295824.486609"
            },
            {
                "user": "U04BZ21V2NQ",
                "ts": "1711296096.147239"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "image_url": "https:\/\/try-slate.com\/og-image.jpg",
                "image_width": 1200,
                "image_height": 630,
                "image_bytes": 106394,
                "from_url": "https:\/\/try-slate.com\/",
                "service_icon": "https:\/\/try-slate.com\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/try-slate.com\/",
                "fallback": "Slate - A Playground for Ideas",
                "text": "Similar to traditional code notebooks like Jupyter Notebooks, but with a seamless integration with large-language models. Code when you want, skip when you don't. Export to code for portability.",
                "title": "Slate - A Playground for Ideas",
                "title_link": "https:\/\/try-slate.com\/",
                "service_name": "try-slate.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gQ7WU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I recently thought about combining natural language prompts in code notebooks interface because it seemed like a great use case to me. While working with data, a mixture of low-level capability of writing code and a high-level capability to write transformations or visualization instructions in natural language can be a great advantage. You can code when you want to, and completely skip and offload to an LLM by writing natural language instructions! The notebook executes code and prompts in a single context. Here's something you can try that implements this idea: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/try-slate.com\/"
                            },
                            {
                                "type": "text",
                                "text": "\nAlso wrote some thoughts in a "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/mohitkarekar.com\/posts\/2024\/slate\/",
                                "text": "post here"
                            },
                            {
                                "type": "text",
                                "text": " and a short "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.loom.com\/share\/bcde36f3fa424b2f80c860def0b3f164?sid=2bf8cdea-ef9e-4421-9388-570a097e02f9",
                                "text": "video demo here"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "star-struck",
                "users": [
                    "US370TRJA"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "US370TRJA",
        "type": "message",
        "ts": "1711295824.486609",
        "client_msg_id": "44DB9752-8021-4CCF-B367-CCF2721CA583",
        "text": "Nice demo and writeup! \n\n&gt;&gt; To save on prompt execution costs, Slate uses a meta-technique in case of array-like datasets to apply transformations\nCould you share more about what is happening here?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8449ebbf703",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8449ebbf703fcee4e1eadc3e78478f01.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "Cameron",
            "real_name": "Cameron Yick",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "cameron.yick",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711286386.072009",
        "parent_user_id": "U04BZ21V2NQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fBiSi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice demo and writeup! \n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To save on prompt execution costs, Slate uses a meta-technique in case of array-like datasets to apply transformations"
                            }
                        ],
                        "border": 1
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nCould you share more about what is happening here?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U04BZ21V2NQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U04BZ21V2NQ",
        "type": "message",
        "ts": "1711296096.147239",
        "client_msg_id": "B8F79B1F-BAF1-4963-87F5-A487EC85CF66",
        "text": "Yes, sure! Essentially instead of sending the entire dataset to OpenAI APIs and asking the model to apply the prompt transformation, I send the structure of single element in the data set (the type) and ask for a function to apply over the whole dataset to make the requested transformation. The function then is applied in the browser.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "91a7218ff979",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-11-21\/4401664727893_91a7218ff9794118d6f1_72.jpg",
            "first_name": "Mohit",
            "real_name": "Mohit Karekar",
            "display_name": "Mohit Karekar",
            "team": "T5TCAFTA9",
            "name": "karekar.mohit",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711286386.072009",
        "parent_user_id": "U04BZ21V2NQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "doEHS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, sure! Essentially instead of sending the entire dataset to OpenAI APIs and asking the model to apply the prompt transformation, I send the structure of single element in the data set (the type) and ask for a function to apply over the whole dataset to make the requested transformation. The function then is applied in the browser."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bow",
                "users": [
                    "US370TRJA"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1711309980.268419",
        "client_msg_id": "50fe8aa8-e96d-45c1-a238-ebb15f0806de",
        "text": "I'm late to this conversation, but just wanted to say I played with it a bit today and shared it with my friend.\n\nI love that the classic shader example lets me zoom out on it very easily.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710665671.072109",
        "parent_user_id": "U0123H7JRDM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Yw5Tt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm late to this conversation, but just wanted to say I played with it a bit today and shared it with my friend.\n\nI love that the classic shader example lets me zoom out on it very easily."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U0123H7JRDM"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1711310757.802219",
        "client_msg_id": "CD3518C5-00DF-444F-95D9-2D9D61A92FAB",
        "text": "Thanks! And no worries, I am just very happy that you played with it!! \nThe scene-position and scene-zoom nodes make it really easy to allow for zooming and positioning (although mobile touch screens need some work) :grinning:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710665671.072109",
        "parent_user_id": "U0123H7JRDM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w66n4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! And no worries, I am just very happy that you played with it!! \nThe scene-position and scene-zoom nodes make it really easy to allow for zooming and positioning (although mobile touch screens need some work) "
                            },
                            {
                                "type": "emoji",
                                "name": "grinning",
                                "unicode": "1f600"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]