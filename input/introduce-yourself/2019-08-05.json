[
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1565018991.070000",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1565019118.000000"
        },
        "client_msg_id": "d6027985-e6b5-4273-a6a5-3d75df6d8b5d",
        "text": "I'd like a tool that can detect relationships in a large, poorly-written code base, and thus opportunities to refactor, e.g.\n\n- In code bases with lots of long argument lists, detect when many different functions take the same set of three or more parameters, e.g. you might detect that three methods with long argument lists all take (Interface1 foo, Interface2 bar, int baz). This can be enhanced by including fieldsets (sets of fields in a class) in the same analysis if they are not already initialized by a constructor in the analysis.\n- Build a graph of relationships among classes to detect statically circular dependencies, and then treat those cycles as if they were one big class for the next step. The next step is to analyze the fields within the classes looking for fields that are somehow clustered, e.g. fields X Y Z are only used by methods F G H, while fields A B C are only used by methods P Q R S T. Enhancement: detect when an interface has only a single implementation and then treat the interface as the same thing as the class during the analysis.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562897399.207800",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WwOa+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd like a tool that can detect relationships in a large, poorly-written code base, and thus opportunities to refactor, e.g.\n\n- In code bases with lots of long argument lists, detect when many different functions take the same set of three or more parameters, e.g. you might detect that three methods with long argument lists all take (Interface1 foo, Interface2 bar, int baz). This can be enhanced by including fieldsets (sets of fields in a class) in the same analysis if they are not already initialized by a constructor in the analysis.\n- Build a graph of relationships among classes to detect statically circular dependencies, and then treat those cycles as if they were one big class for the next step. The next step is to analyze the fields within the classes looking for fields that are somehow clustered, e.g. fields X Y Z are only used by methods F G H, while fields A B C are only used by methods P Q R S T. Enhancement: detect when an interface has only a single implementation and then treat the interface as the same thing as the class during the analysis."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UH88R0560",
        "type": "message",
        "ts": "1565022499.070500",
        "client_msg_id": "aa373db8-61bb-4cff-b955-bf2d91ef1069",
        "text": "Hey, Steve.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gca0a3a519d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bca0a3a519d1abdcc254f23d043fbceb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Brian T. Rice",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "briantrice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564622078.058800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0Bq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey, Steve."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHLAV7BB5",
        "type": "message",
        "ts": "1565042687.070900",
        "client_msg_id": "3a991294-8e48-4a6d-bbd9-de579f83f368",
        "text": "<@ULZA8HA4F> I know I am late to answer, but I wanted to tell you that we thought of this too before implementing our runtime. We ended up choosing golang which allowed us to connect all elements via channels (<https:\/\/gobyexample.com\/channels>). This implementation scaled really well on a single node. Without doing any optimization we where able to match the speed of Apache Storm on the Yahoo Stream Benchmark",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gc357041ad05",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/4c357041ad053c323f203260530f1fdc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "",
            "real_name": "Kai Richard König",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "kai.richard.koenig",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564567151.055300",
        "parent_user_id": "ULZA8HA4F",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4NM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "ULZA8HA4F"
                            },
                            {
                                "type": "text",
                                "text": " I know I am late to answer, but I wanted to tell you that we thought of this too before implementing our runtime. We ended up choosing golang which allowed us to connect all elements via channels ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/gobyexample.com\/channels"
                            },
                            {
                                "type": "text",
                                "text": "). This implementation scaled really well on a single node. Without doing any optimization we where able to match the speed of Apache Storm on the Yahoo Stream Benchmark"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULZA8HA4F"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHLAV7BB5",
        "type": "message",
        "ts": "1565042699.071100",
        "client_msg_id": "1562b2ad-b11a-40e4-8c22-7cc0af37f7b9",
        "text": "You can read more on the results here - <https:\/\/bitspark.de\/blog\/benchmarking-slang>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gc357041ad05",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/4c357041ad053c323f203260530f1fdc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "",
            "real_name": "Kai Richard König",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "kai.richard.koenig",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564567151.055300",
        "parent_user_id": "ULZA8HA4F",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "objQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You can read more on the results here - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bitspark.de\/blog\/benchmarking-slang"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UM5B0U84E",
        "type": "message",
        "ts": "1565067825.071500",
        "text": "Hi everyone, I'm a final year CS student thats very interested in computers and how to make them better. It's tragically easy to imagine better technology and this community and podcast seems aligned with interests in that way (even though I haven't heard many podcast episodes). Looking forward to meeting everyone else and having discussions about computers :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "631ac17b4891",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-08-06\/705827686386_631ac17b4891ee9230eb_72.jpg",
            "first_name": "",
            "real_name": "anish",
            "display_name": "anish",
            "team": "T5TCAFTA9",
            "name": "anish_slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WnS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi everyone, I'm a final year CS student thats very interested in computers and how to make them better. It's tragically easy to imagine better technology and this community and podcast seems aligned with interests in that way (even though I haven't heard many podcast episodes). Looking forward to meeting everyone else and having discussions about computers :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "UC2A2ARPT",
                    "UJ6LDMMN0",
                    "UAVCC2X70",
                    "U8A5MS6R1",
                    "UC21F8Q48",
                    "UHWC9PXBL",
                    "U7C7B75R6",
                    "UA14TGLTC",
                    "UD6EXQVM0"
                ],
                "count": 9
            },
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "UF2GNRUTV"
                ],
                "count": 2
            }
        ]
    }
]