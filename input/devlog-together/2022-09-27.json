[
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1664306684.017099",
        "client_msg_id": "ae408212-6435-41e7-8e60-312ac8a070bf",
        "text": "Got another idea for a visual programming language. As is my style, this one has an extremely specific sense of the progression of execution over time. It's not node-wire strictly speaking. Code objects are arranged in space, and time progresses by scanning over the objects in a specific direction, like a scanline. You get data parallelism (looping _across_), and iteration (looping _down_). Data is reified (the scanline \"carries\" the data as it moves). I've got some sketches, which I might share in a day or two if they turn out nicely.\n\nMore than viewing this as a fruitful direction to explore unto itself, it makes me think that any given approach to visual programming comes with tradeoffs. So rather than picking one direction and trying to stretch it to encompass all use cases, you should probably just make an environment where each subsystem can use whichever approach suits it. You'd use node-wire where that works best. You'd use block-based where that works best. You'd use some sort of tree editor where that works best.\n\nMakes me want to do a \"visual programming jam\" where people have to come up with totally new ways to visualize the structure of code and data, complete with visualized execution semantics. \"We wanted to make a visual programming system that was especially good at visualizing data transformation, so you use these little.. <https:\/\/en.wikipedia.org\/wiki\/Remote_manipulator|waldo> worms to dig into a structure (like json, say) and pull out the appropriate data. Each worm wants to eat a certain kind of food, which is the access pattern... and you can... see, here, on the side, there's a little stripe where it shows what this worm's food is\"\n\nBut I digress.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1664306684.017099",
        "reply_count": 7,
        "reply_users_count": 4,
        "latest_reply": "1664815173.324709",
        "reply_users": [
            "U03R0B9U1GD",
            "UCUSW7WVD",
            "UC2A2ARPT",
            "U03B14DUZSA"
        ],
        "replies": [
            {
                "user": "U03R0B9U1GD",
                "ts": "1664310382.680829"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1664312152.037849"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1664321350.204199"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1664322326.025559"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1664334154.895959"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1664388368.411139"
            },
            {
                "user": "U03B14DUZSA",
                "ts": "1664815173.324709"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MvbR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Got another idea for a visual programming language. As is my style, this one has an extremely specific sense of the progression of execution over time. It's not node-wire strictly speaking. Code objects are arranged in space, and time progresses by scanning over the objects in a specific direction, like a scanline. You get data parallelism (looping "
                            },
                            {
                                "type": "text",
                                "text": "across",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "), and iteration (looping "
                            },
                            {
                                "type": "text",
                                "text": "down",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "). Data is reified (the scanline \"carries\" the data as it moves). I've got some sketches, which I might share in a day or two if they turn out nicely.\n\nMore than viewing this as a fruitful direction to explore unto itself, it makes me think that any given approach to visual programming comes with tradeoffs. So rather than picking one direction and trying to stretch it to encompass all use cases, you should probably just make an environment where each subsystem can use whichever approach suits it. You'd use node-wire where that works best. You'd use block-based where that works best. You'd use some sort of tree editor where that works best.\n\nMakes me want to do a \"visual programming jam\" where people have to come up with totally new ways to visualize the structure of code and data, complete with visualized execution semantics. \"We wanted to make a visual programming system that was especially good at visualizing data transformation, so you use these little.. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Remote_manipulator",
                                "text": "waldo"
                            },
                            {
                                "type": "text",
                                "text": " worms to dig into a structure (like json, say) and pull out the appropriate data. Each worm wants to eat a certain kind of food, which is the access pattern... and you can... see, here, on the side, there's a little stripe where it shows what this worm's food is\"\n\nBut I digress."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "exploding_head",
                "users": [
                    "U03R0B9U1GD",
                    "U023V63MF6V",
                    "UA14TGLTC"
                ],
                "count": 3
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U013ZLJARC7",
                    "UML4ZEKDK",
                    "UJ6LDMMN0"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U03R0B9U1GD",
        "type": "message",
        "ts": "1664310382.680829",
        "client_msg_id": "c6eb6f44-b02c-46c8-90a0-9306d63b1043",
        "text": "I like the idea of visually 'guiding' your program through different editing\/coding styles! \n\n(and also a visual programming jam!)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "78c476adad42",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-26\/3992499177765_78c476adad42ab6cfe32_72.png",
            "first_name": "Lu",
            "real_name": "Lu Wilson",
            "display_name": "TodePond",
            "team": "T5TCAFTA9",
            "name": "l2wilson94",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1664306684.017099",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Px\/t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like the idea of visually 'guiding' your program through different editing\/coding styles! \n\n(and also a visual programming jam!)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1664312152.037849",
        "client_msg_id": "73ab3eb2-a7f7-486f-80e8-25f6443793e3",
        "text": "Y'all know I've been trying to follow Glamorous Toolkit and create domain specific visualizations atop a \"text\" substrate. Ideally you rarely have to deal with the raw representation, but it still seems useful to provide access to the low level representation precisely as a way of creating new views\/styles.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1664306684.017099",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pcc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Y'all know I've been trying to follow Glamorous Toolkit and create domain specific visualizations atop a \"text\" substrate. Ideally you rarely have to deal with the raw representation, but it still seems useful to provide access to the low level representation precisely as a way of creating new views\/styles."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Pushed the first version of the last feature I want to add in 2022, relevance visualization in the fact editor. You fill in what you know. If you don't know, or there might be more values, you \"unlock\" that category or attribute. Run the test. It shows you the answers it finds, and any assumptions it used to find them. (e.g. bob won if jane threw scissors.) Any inputs relevant for finding new unconditional answers (e.g. what jane threw) are highlighted in green.",
        "files": [
            {
                "id": "F043R711AMD",
                "mode": "hidden_by_limit"
            },
            {
                "id": "F044JCN7EUR",
                "mode": "hidden_by_limit"
            },
            {
                "id": "F043R7180CX",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0b7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Pushed the first version of the last feature I want to add in 2022, relevance visualization in the fact editor. You fill in what you know. If you don't know, or there might be more values, you \"unlock\" that category or attribute. Run the test. It shows you the answers it finds, and any assumptions it used to find them. (e.g. bob won if jane threw scissors.) Any inputs relevant for finding new unconditional answers (e.g. what jane threw) are highlighted in green."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1664319532.723049",
        "client_msg_id": "79b512d2-fa00-4419-972b-eab7f071fc58",
        "thread_ts": "1664319532.723049",
        "reply_count": 5,
        "reply_users_count": 2,
        "latest_reply": "1664332469.672659",
        "reply_users": [
            "U02U0AS3J49",
            "UC2A2ARPT"
        ],
        "replies": [
            {
                "user": "U02U0AS3J49",
                "ts": "1664319870.198259"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1664321614.166489"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1664321761.413859"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1664332360.507699"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1664332469.672659"
            }
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1664319870.198259",
        "client_msg_id": "ca71bd97-4b12-4aac-81fa-37c864535d52",
        "text": "Still all ugly as sin, of course. :slightly_smiling_face: But I now have a usable platform for demonstrating explainable, declarative encodings of legislation, with hypothetical and reverse reasoning, etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1664319532.723049",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aEZ54",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Still all ugly as sin, of course. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " But I now have a usable platform for demonstrating explainable, declarative encodings of legislation, with hypothetical and reverse reasoning, etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1664321350.204199",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1664321478.000000"
        },
        "client_msg_id": "e4ef2272-4f38-484d-a8e7-b7ddc2d9053e",
        "text": "Hmm. The way I like to work is first imagining nothing but shapes and colors in motion, and then trying to figure out how those shapes and colors might be a programming. I worry that trying to build visual representations atop an existing programming (which I've considered many times with, say, Clojure) forces commitments or obligations that you'd otherwise be free from.\n\nEg: You'll think, _Clojure data structures are immutable, so the visuals ought to show functions that take and return immutable data_, rather than, _the data is a mountainous landscape, singular and rooted solidly in place, that the code ambiently traverses_. Sure, you can force a mapping, but it feels more generative to me if you start with the _programming_ part as blankly slated as possible.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1664306684.017099",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ibw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hmm. The way I like to work is first imagining nothing but shapes and colors in motion, and then trying to figure out how those shapes and colors might be a programming. I worry that trying to build visual representations atop an existing programming (which I've considered many times with, say, Clojure) forces commitments or obligations that you'd otherwise be free from.\n\nEg: You'll think, "
                            },
                            {
                                "type": "text",
                                "text": "Clojure data structures are immutable, so the visuals ought to show functions that take and return immutable data",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", rather than, "
                            },
                            {
                                "type": "text",
                                "text": "the data is a mountainous landscape, singular and rooted solidly in place, that the code ambiently traverses",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Sure, you can force a mapping, but it feels more generative to me if you start with the "
                            },
                            {
                                "type": "text",
                                "text": "programming",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " part as blankly slated as possible."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1664321614.166489",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1664321706.000000"
        },
        "client_msg_id": "f7b860f9-fea5-46a6-b821-149810cba3ca",
        "text": "Interesting!\n\nHow do you get \"jane threw scissors\" by abduction? How do we know jane didn't throw paper?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1664319532.723049",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FY5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting!\n\nHow do you get \"jane threw scissors\" by abduction? How do we know jane didn't throw paper?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1664321761.413859",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1664321782.000000"
        },
        "client_msg_id": "b67df834-11c7-4f03-b977-7b64c13db9aa",
        "text": "Ah — I see what I missed. Jane throws scissors _just in Answer #1_. Presumably, Answer #2 is jane throwing paper (jane wins), and Answer #3 is jane throwing rock (tie)?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1664319532.723049",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qv4M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah — I see what I missed. Jane throws scissors "
                            },
                            {
                                "type": "text",
                                "text": "just in Answer #1",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Presumably, Answer #2 is jane throwing paper (jane wins), and Answer #3 is jane throwing rock (tie)?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1664322326.025559",
        "client_msg_id": "486ce651-092b-4982-849c-c97d42dd77ab",
        "text": "Would you consider JSON fairly preconception-free?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1664306684.017099",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xnZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would you consider JSON fairly preconception-free?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1664332360.507699",
        "client_msg_id": "b68b4931-a5fb-46f2-8ae7-2f4b9695d29e",
        "text": "Close! :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1664319532.723049",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3He7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Close! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1664332469.672659",
        "client_msg_id": "c77139bc-b92d-42de-9e0b-a4810f73e644",
        "text": "Answer 1 is bob wins. Only one possibility, Jane threw scissors. Answer 2 is jane wins. Three possibilities, there: jane beats jane with each of the three signs. (The rule is poorly encoded, because it doesn't require a disunity between the players.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1664319532.723049",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lthr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Answer 1 is bob wins. Only one possibility, Jane threw scissors. Answer 2 is jane wins. Three possibilities, there: jane beats jane with each of the three signs. (The rule is poorly encoded, because it doesn't require a disunity between the players.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1664334154.895959",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1664334226.000000"
        },
        "client_msg_id": "1EA6F4E1-B4F2-4139-8EE2-92BCCC14D096",
        "text": "Good point! I would consider \"(like json, say)\" to skirt the line between painting a mental image in the mind of the reader and not committing oneself to a specific substrate  :) ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1664306684.017099",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DT7O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "G"
                            },
                            {
                                "type": "text",
                                "text": "ood point! I would consider \"(like json, say)\" to skirt the line between painting a mental image in the mind of the reader and not committing oneself to a specific substrate  :) "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]