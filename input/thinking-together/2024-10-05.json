[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1728132331.851319",
        "client_msg_id": "7ef566db-5249-4aa3-95a1-c3af8fcfab67",
        "text": "<@UGWUJUZHT> I guess we first have to agree on what we mean by \"program\", in particular if and how it is distinct from \"input data\". At the bit level, there is no such distinction. Both program and input data are bit patterns in memory that the computer acts on. But in what I see as the most common usage of the term, a \"program\" is something long-lived that reads \"input data\" for one of its many execution phases. With that distinction in place, it's the rewriting engine that is the program, and all the rules and terms\/graphs to be rewritten are input data. Just like Excel is the program and all of the spreadsheet, including the formulas, is input data. But if you look at it from the point of view of semantics, it's the rewrite rules that are the program. Which are changed all the time in a computational document. Describing the interaction between a human and a computer via a rewriting-based document is running generated code is not wrong, but it's not helpful either unless you are thinking about writing a rewrite rule compiler.\n\nAs for 2), that's a very nice example. But I haven't seen anything similar for rewriting. I tried building my own, but gave up because it turned out not to be that useful. I came up with different debugging tools, none of which traces the work done by the computer.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727827197.316359",
        "parent_user_id": "UDCLA1HU4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ona\/w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " I guess we first have to agree on what we mean by \"program\", in particular if and how it is distinct from \"input data\". At the bit level, there is no such distinction. Both program and input data are bit patterns in memory that the computer acts on. But in what I see as the most common usage of the term, a \"program\" is something long-lived that reads \"input data\" for one of its many execution phases. With that distinction in place, it's the rewriting engine that is the program, and all the rules and terms\/graphs to be rewritten are input data. Just like Excel is the program and all of the spreadsheet, including the formulas, is input data. But if you look at it from the point of view of semantics, it's the rewrite rules that are the program. Which are changed all the time in a computational document. Describing the interaction between a human and a computer via a rewriting-based document is running generated code is not wrong, but it's not helpful either unless you are thinking about writing a rewrite rule compiler.\n\nAs for 2), that's a very nice example. But I haven't seen anything similar for rewriting. I tried building my own, but gave up because it turned out not to be that useful. I came up with different debugging tools, none of which traces the work done by the computer."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1728176946.384549",
        "client_msg_id": "890d955b-be00-4c66-8be7-13aabe162598",
        "text": "<@UJBAJNFLK>, You touch upon a good point. My feeling about \"what is a program\" is somehow different and I'm struggling to put it into words.\n\nObservation \/ pondering: control flow is not data. Smalltalk's encapsulation of data is not sufficient to isolate control flow, like how Unix pipelines isolate control flow.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727827197.316359",
        "parent_user_id": "UDCLA1HU4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XCwhw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": ", You touch upon a good point. My feeling about \"what is a program\" is somehow different and I'm struggling to put it into words.\n\nObservation \/ pondering: control flow is not data. Smalltalk's encapsulation of data is not sufficient to isolate control flow, like how Unix pipelines isolate control flow."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]