[
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1635167757.012100",
        "client_msg_id": "5a5e2a47-4639-4bd6-96c1-c0a2c9d912d2",
        "text": "A lot of interesting videos on the User Interfaces Research Group at Aalto University page\n\n<https:\/\/userinterfaces.aalto.fi\/video-page\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A1oZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A lot of interesting videos on the User Interfaces Research Group at Aalto University page\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/userinterfaces.aalto.fi\/video-page\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UAJKEBGP8",
                    "U027P92A0N5",
                    "UEQ7QL15F"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1635174016.014300",
        "client_msg_id": "96694a78-5c46-4c15-ab72-8ddfe7ddd448",
        "text": "New (nicely illustrated) post from <@UKM22EFEG>: Some Thoughts on Interfaces\n\n&gt; The way we’ve interacted with computers has evolved considerably - from the early days of punch cards fed into a giant, room sized machine to the command line interface, to the Graphical User Interface developed at PARC (and subsequently popularized by Apple, and eventually Microsoft), to multitouch-based smartphones, to emerging computing paradigms like Augmented-Reality, Virtual-Reality, and ubiquitous computing.\nSeems like a good summary of the conceptual space of UI design, including stuff like latency.\n\n<https:\/\/nickarner.com\/notes\/some-thoughts-on-interfaces-october-24th-2021\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qxdQe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "New (nicely illustrated) post from "
                            },
                            {
                                "type": "user",
                                "user_id": "UKM22EFEG"
                            },
                            {
                                "type": "text",
                                "text": ": Some Thoughts on Interfaces\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The way we’ve interacted with computers has evolved considerably - from the early days of punch cards fed into a giant, room sized machine to the command line interface, to the Graphical User Interface developed at PARC (and subsequently popularized by Apple, and eventually Microsoft), to multitouch-based smartphones, to emerging computing paradigms like Augmented-Reality, Virtual-Reality, and ubiquitous computing."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nSeems like a good summary of the conceptual space of UI design, including stuff like latency.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/nickarner.com\/notes\/some-thoughts-on-interfaces-october-24th-2021\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UAJKEBGP8",
                    "UMV4B97GT",
                    "U027P92A0N5"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1635186596.014800",
        "client_msg_id": "45b9a184-e1dd-4780-99fb-d78adb6d9d0c",
        "text": "History of Lisp (1979) [pdf] - <http:\/\/jmc.stanford.edu\/articles\/lisp\/lisp.pdf|http:\/\/jmc.stanford.edu\/articles\/lisp\/lisp.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aIP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "History of Lisp (1979) [pdf] - "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/jmc.stanford.edu\/articles\/lisp\/lisp.pdf",
                                "text": "http:\/\/jmc.stanford.edu\/articles\/lisp\/lisp.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U027P92A0N5"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1635192201.015000",
        "edited": {
            "user": "UBSMEUXAA",
            "ts": "1635197214.000000"
        },
        "client_msg_id": "2162943c-33ac-4a9c-a715-d06e45341ffa",
        "text": "&gt; I am emphatically anti-external documentation. I think that is the single greatest way to make the documentation 1) not written 2) not read and 3) not helpful. External documentation means I have to know that I need to know something. When I’m reading code, why would I expect there to be something in a totally separate context telling me about this code?\nExternal documentation as done by most companies is often useless because it goes out of date even faster than comments.  Ultimately if you want to do this right you have to have a documentation team, make documentation review part of code review, etc.  Otherwise, in practice you're relying on arbitrary rules decided by coders in code review, or the converse, which is comment happy programmers that write too much.  This doesn't mean external documentation has no value in the same way that saying comments are often useless doesn't mean comments have no value.  This is somewhat equivalent to thinking automated testing will solve all quality issues and QA isn't necessary.  Not all teams\\companies can afford this of course, but it is the most reliable way to ensure quality if you need it.\n\nOne thing is that many IDEs that programmers use day to day are lacking in documentation capability, which requires \"cute\" solutions like ascii diagrams above.  Google docs is a significantly more powerful documentation editor than any IDE I know of out of the box.  Generating more readable\\searchable documentation from comment docstrings in code is pretty standard, so that approach arguably gives you the best of both worlds, but if you want to embed images\\video, do more complex formatting, etc. most code editors are lacking.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J8U",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am emphatically anti-external documentation. I think that is the single greatest way to make the documentation 1) not written 2) not read and 3) not helpful. External documentation means I have to know that I need to know something. When I’m reading code, why would I expect there to be something in a totally separate context telling me about this code?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "External documentation as done by most companies is often useless because it goes out of date even faster than comments.  Ultimately if you want to do this right you have to have a documentation team, make documentation review part of code review, etc.  Otherwise, in practice you're relying on arbitrary rules decided by coders in code review, or the converse, which is comment happy programmers that write too much.  This doesn't mean external documentation has no value in the same way that saying comments are often useless doesn't mean comments have no value.  This is somewhat equivalent to thinking automated testing will solve all quality issues and QA isn't necessary.  Not all teams\\companies can afford this of course, but it is the most reliable way to ensure quality if you need it.\n\nOne thing is that many IDEs that programmers use day to day are lacking in documentation capability, which requires \"cute\" solutions like ascii diagrams above.  Google docs is a significantly more powerful documentation editor than any IDE I know of out of the box.  Generating more readable\\searchable documentation from comment docstrings in code is pretty standard, so that approach arguably gives you the best of both worlds, but if you want to embed images\\video, do more complex formatting, etc. most code editors are lacking."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "<@UBSMEUXAA>: I think there's something here to be understood still with regard to the documentation experience. Having an integrated docs experience can be hugely powerful. For example, editors can be configured to look up documentation directly, as easily as your typical go-to-definition IDE experience (vim has this by default actually, and various language plugins provide the configuration to look up the docs in the appropriate location - the default is just opening up the `man` page for the token the cursor is currently on.)\n\nIt feels to me that it's going to be extremely difficult to provide enough context in comments for some things (a standard linux utility is a great example of this, where I may want to pull up the man page to review the various flags and their behavior, which is far too much for comment)",
        "username": "@reed:riot.firechicken.net",
        "type": "message",
        "ts": "1635196537.015200",
        "bot_id": "BEYLABLRH",
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "umKAz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBSMEUXAA"
                            },
                            {
                                "type": "text",
                                "text": ": I think there's something here to be understood still with regard to the documentation experience. Having an integrated docs experience can be hugely powerful. For example, editors can be configured to look up documentation directly, as easily as your typical go-to-definition IDE experience (vim has this by default actually, and various language plugins provide the configuration to look up the docs in the appropriate location - the default is just opening up the "
                            },
                            {
                                "type": "text",
                                "text": "man",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " page for the token the cursor is currently on.)\n\nIt feels to me that it's going to be extremely difficult to provide enough context in comments for some things (a standard linux utility is a great example of this, where I may want to pull up the man page to review the various flags and their behavior, which is far too much for comment)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UBSMEUXAA"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1635197348.015600",
        "client_msg_id": "bb32bb53-055a-4219-b934-47a614d5f30e",
        "text": "that comment above was a quote from <@UK3LH8CF5> that I just responded to btw, I accidently sent it without my response :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5uHSG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that comment above was a quote from "
                            },
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": " that I just responded to btw, I accidently sent it without my response "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEZQXJK9V"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1635197438.015800",
        "client_msg_id": "92d843bb-25cb-4fc8-9acb-d2851adeae38",
        "text": "I'm very pro-external docs, although I recognize the flaws (they're even harder to keep up to date than comments) I don't really want to read a man page equivalent in comments",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CTwW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm very pro-external docs, although I recognize the flaws (they're even harder to keep up to date than comments) I don't really want to read a man page equivalent in comments"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1635197799.016000",
        "edited": {
            "user": "UBSMEUXAA",
            "ts": "1635197825.000000"
        },
        "client_msg_id": "e6f74fb0-7cff-4def-b375-a24a20faed6f",
        "text": "<@UJBAJNFLK> had a good point that documentation might refer to many places in the code, and often doesn't make sense as inline comments. You can, of course drop a random doc in as a comment string in a central location, but that is not commented code, it is a document that happens to be inline with code.  At that point you might as well drop it in a md file (replace md with your favorite documentation format) so it's easier to read and navigate",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y5DkS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " had a good point that documentation might refer to many places in the code, and often doesn't make sense as inline comments. You can, of course drop a random doc in as a comment string in a central location, but that is not commented code, it is a document that happens to be inline with code.  At that point you might as well drop it in a md file (replace md with your favorite documentation format) so it's easier to read and navigate"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1635198297.016400",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1635198567.000000"
        },
        "client_msg_id": "f4648c31-5659-448f-995f-bb8bbc4dd242",
        "text": "I have come up with two solutions to the problem of where a comment should go:\n\n• The dramatic solution is to use my approach to Literate Programming: <http:\/\/akkartik.name\/post\/wart-layers>. It basically looks like a cleaned up git history. When you create a new feature, all the code and tests for it is in a single file, the uppermost \"layer\". CI guarantees that all combinations of layers work properly: layer 1, 1+2, 1+2+3, etc. And the top of this layer is an ideal Schelling Point (<https:\/\/en.wikipedia.org\/wiki\/Focal_point_(game_theory)>) for big-picture documentation about the feature as a whole.\n• The less dramatic solution: Ctags has a way to define cross-links based on regular expressions. If you have a comment that you want to have in two places, just drop it in one place and link to it from the other. Hacky but quite convenient.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J5h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have come up with two solutions to the problem of where a comment should go:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The dramatic solution is to use my approach to Literate Programming: "
                                    },
                                    {
                                        "type": "link",
                                        "url": "http:\/\/akkartik.name\/post\/wart-layers"
                                    },
                                    {
                                        "type": "text",
                                        "text": ". It basically looks like a cleaned up git history. When you create a new feature, all the code and tests for it is in a single file, the uppermost \"layer\". CI guarantees that all combinations of layers work properly: layer 1, 1+2, 1+2+3, etc. And the top of this layer is an ideal Schelling Point ("
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/en.wikipedia.org\/wiki\/Focal_point_(game_theory)"
                                    },
                                    {
                                        "type": "text",
                                        "text": ") for big-picture documentation about the feature as a whole."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The less dramatic solution: Ctags has a way to define cross-links based on regular expressions. If you have a comment that you want to have in two places, just drop it in one place and link to it from the other. Hacky but quite convenient."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    }
]