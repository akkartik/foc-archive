[
    {
        "user": "UNGNT3BKR",
        "type": "message",
        "ts": "1589014206.298400",
        "edited": {
            "user": "UNGNT3BKR",
            "ts": "1589014214.000000"
        },
        "text": "<@ULK0Z4MPV> go for it! This could be done with any arduino as well, talking over the USB connection. The ESP32 is special because it has WiFi and Bluetooth integrated. I'm using WiFi for connectivity here, but thats just because this grew out of a project to build a wireless light dimmer ;)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f5598145b9e3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-20\/844081492646_f5598145b9e31ad2c4bd_72.jpg",
            "first_name": "Sol",
            "real_name": "Sol Bekic",
            "display_name": "s-ol",
            "team": "T5TCAFTA9",
            "name": "machinemail_slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588780636.214000",
        "parent_user_id": "UNGNT3BKR",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UgK=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "ULK0Z4MPV"
                            },
                            {
                                "type": "text",
                                "text": " go for it! This could be done with any arduino as well, talking over the USB connection. The ESP32 is special because it has WiFi and Bluetooth integrated. I'm using WiFi for connectivity here, but thats just because this grew out of a project to build a wireless light dimmer ;)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "ULK0Z4MPV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1589039029.299000",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1589039125.000000"
        },
        "client_msg_id": "a0277d3e-6cce-4b9f-9121-07a9b28da4dd",
        "text": "It would interesting if a node could output the JSON for another graph of nodes (which would probably require a diffing algorithm to prevent having to recreate the whole thing each time, like a vdom)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588677924.203300",
        "parent_user_id": "U0123H7JRDM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f23",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It would interesting if a node could output the JSON for another graph of nodes (which would probably require a diffing algorithm to prevent having to recreate the whole thing each time, like a vdom)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1589047786.307000",
        "client_msg_id": "BFE5D404-F56B-46F4-BC7D-14996105BCA1",
        "text": "One of the items on my backlog is to load parts of the flow dynamically to be able to run flows at scale. My concerns is that this cannot grow indefinitely, parts of the flow also need to be removed from memory dynamically and loaded again when needed. Probably a flow needs to be really really big before this is a problem nowadays. Is this what you meant?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588677924.203300",
        "parent_user_id": "U0123H7JRDM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SzxN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One of the items on my backlog is to load parts of the flow dynamically to be able to run flows at scale. My concerns is that this cannot grow indefinitely, parts of the flow also need to be removed from memory dynamically and loaded again when needed. Probably a flow needs to be really really big before this is a problem nowadays. Is this what you meant?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1589079026.313600",
        "client_msg_id": "dbdef38a-3b35-46e7-a0fd-62cb6c5091b7",
        "text": "Sorry i posted only a partially uploaded file. This is a corrected version. Thanks to <@UA14TGLTC> for catching that.\nHere is a short video showing how to build a temperature control. You proceed directly from a sketch to a final shippable product using Beads, with no prototyping necessary. A lot of wasted work happens in our industry by using wireframing tools that can't be executed. You are better off with a crude-looking working product than a fake but pretty demo. It saves time, when the final shapes are all worked out from the running product, then you apply the final polish.\n Beads is rare among languages in that it carries at runtime physical units of measurement (by creating a new datatype which carries the unit exponent array and magnitude of the value), and has pre-programmed all the common conversions, such as degrees Kelvin to degrees Centigrade, etc. In this example i also show how you can have two interlinked controls on the screen, and whichever one changes the model the other control tracks its value, all without any additional code.  <https:\/\/youtu.be\/JmmwmisRd2g>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1589079026.313600",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1590081205.406900",
        "reply_users": [
            "UBN9AFS0N",
            "UEQ6M68H0",
            "UC2A2ARPT"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1589105357.314500"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1589131905.315600"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1590081101.406700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1590081205.406900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Beads language Ep 005, building a dual scale temperature control",
                "title_link": "https:\/\/youtu.be\/JmmwmisRd2g",
                "author_name": "Edward De Jong",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCiBO5hr2IVsYK8wiLznImTQ",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/JmmwmisRd2g\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Beads language Ep 005, building a dual scale temperature control",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/JmmwmisRd2g?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/JmmwmisRd2g",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/JmmwmisRd2g"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nhv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry i posted only a partially uploaded file. This is a corrected version. Thanks to "
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " for catching that.\nHere is a short video showing how to build a temperature control. You proceed directly from a sketch to a final shippable product using Beads, with no prototyping necessary. A lot of wasted work happens in our industry by using wireframing tools that can't be executed. You are better off with a crude-looking working product than a fake but pretty demo. It saves time, when the final shapes are all worked out from the running product, then you apply the final polish.\n Beads is rare among languages in that it carries at runtime physical units of measurement (by creating a new datatype which carries the unit exponent array and magnitude of the value), and has pre-programmed all the common conversions, such as degrees Kelvin to degrees Centigrade, etc. In this example i also show how you can have two interlinked controls on the screen, and whichever one changes the model the other control tracks its value, all without any additional code.  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/JmmwmisRd2g"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "U013BB9KZV1",
                    "UC2A2ARPT"
                ],
                "count": 3
            }
        ]
    }
]