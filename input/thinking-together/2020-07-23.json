[
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595489301.204200",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595492915.000000"
        },
        "client_msg_id": "143bfab4-8f18-42d2-bc46-abbde2493ece",
        "text": "Has anyone been searching for an \"ideal\" model for information? By this I mean an _abstract_ model (not a DRAM\/disk representation) with a vocabulary that allows a *human* to read, specify, and understand information with ease. We have existing models like RDF (\"Semantic web\") and property graphs (e.g. Neo4j), and in programming languages we have object graphs (OO languages), trees (functional languages), and tables (relational DBs). None of these models seem to have arisen as \"the one true answer\", partially because they are all difficult to reason about when operated on programmatically (or so I claim). I want a model for information that allows us to easily understand both *static* information structures (snapshots) and *programmatically-maintained* information structures (an evolving, stateful system).\n\nThe ideal model for information might define concepts like \"pointing\" (edges) or \"nesting\" (groups), and each concept will have a clear meaning. The ideal model will also have a semantics for *mutation*, e.g. you will know when you define a relationship like `A points to B` whether `B` can be deleted or modified in some way, and how this affects the `points to` connection. The model will also have a notion of *stewardship* of information, i.e. it should be easy to observe the *source* of a piece of information, and to know whether it is mutable or just a snapshot. (Yes, I believe the ideal model for information should have a vocabulary to describe distribution and trust).\n\nHas anyone here thought hard about this? I've been churning on it for a month or two recently, and for many months over the last few years; I can't proceed with my own PL project until I get fundamentals like this right, since the model that I develop will fundamentally determine what a \"program\" even is. I think a key reason why discovering \"the future of programming\" is so hard is that we think too much about code and not enough about information. *Code exists purely to transform information*, and if you don't make strides on models for information then I don't think you can make strides on programming languages.\n\nI have some ideas about a model, but I have no insights from others to validate it against. My conception is a very specific hybrid of mutable *graphs* and immutable ~trees~ *nested sets* that distinguishes between *descriptions* and *references*, and it seems very amenable to compact 2D representations, unlike most graphs. I won't describe it further just yet, since I don't want to skew anyone's responses.\n\nAnyway, I'd love to hear from other people who have been thinking about this kind of stuff.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "reply_count": 90,
        "reply_users_count": 13,
        "latest_reply": "1596261816.000300",
        "reply_users": [
            "UCGAK10LS",
            "UNBPP291C",
            "UT60XSVCN",
            "U013ZLJARC7",
            "UE6EFEPTQ",
            "UDQBTJ211",
            "UA14TGLTC",
            "U014WA16VNJ",
            "UEBG0NPDK",
            "U016VUZGUUQ",
            "U8A5MS6R1",
            "UL3CJ7YKC",
            "UHWC9PXBL"
        ],
        "replies": [
            {
                "user": "UCGAK10LS",
                "ts": "1595489342.204400"
            },
            {
                "user": "UNBPP291C",
                "ts": "1595491014.205200"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595492207.205600"
            },
            {
                "user": "UT60XSVCN",
                "ts": "1595496823.206900"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1595496893.207100"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595498962.207400"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595499136.207600"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595499223.207800"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595499346.208300"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595499417.208600"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1595499495.208900"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1595499638.209400"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595500028.209700"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595500993.212400"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595501060.212600"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1595502489.212900"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595502541.213100"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1595503300.214000"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595503559.214200"
            },
            {
                "user": "UNBPP291C",
                "ts": "1595503733.214400"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595504167.214700"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595504622.215300"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595504758.215500"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595504764.215700"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595504811.216000"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595504925.216300"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595504976.216500"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595505073.216700"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595505154.216900"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595505160.217100"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1595506697.217400"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595507675.217600"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595507779.217800"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595507941.218000"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595508200.218200"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595508319.218400"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595508369.218700"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1595509502.219300"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1595509697.219500"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1595509786.219700"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595509928.220000"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595510222.220300"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595510415.220600"
            },
            {
                "user": "U014WA16VNJ",
                "ts": "1595511569.228600"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595512211.229000"
            },
            {
                "user": "U014WA16VNJ",
                "ts": "1595513403.240000"
            },
            {
                "user": "U014WA16VNJ",
                "ts": "1595513674.245300"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595519560.246300"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1595521463.256700"
            },
            {
                "user": "U014WA16VNJ",
                "ts": "1595521567.258200"
            },
            {
                "user": "U014WA16VNJ",
                "ts": "1595521749.259800"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1595522737.260600"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1595522816.260900"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1595523083.261300"
            },
            {
                "user": "U014WA16VNJ",
                "ts": "1595523188.262600"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1595524234.262900"
            },
            {
                "user": "U014WA16VNJ",
                "ts": "1595529545.267500"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1595530330.268000"
            },
            {
                "user": "UNBPP291C",
                "ts": "1595532317.269000"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595532911.269200"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595532933.269400"
            },
            {
                "user": "U014WA16VNJ",
                "ts": "1595534162.273000"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1595534317.273500"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1595551088.278600"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1595552295.284400"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1595552328.285500"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1595554174.286700"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1595554975.287000"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595555333.287200"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1595555567.287500"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595555692.287800"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1595555816.288000"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595555851.288200"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1595555899.288400"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595556015.288600"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595556408.288900"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1595556418.289100"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1595556502.289300"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595558764.292500"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595589039.356900"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1595589386.357100"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1595591178.357700"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595592626.360200"
            },
            {
                "user": "U014WA16VNJ",
                "ts": "1595595114.380200"
            },
            {
                "user": "U014WA16VNJ",
                "ts": "1595595566.393500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1595603621.429000"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1595662219.011200"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1595723862.046800"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1596223835.495300"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1596261816.000300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "glFDu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Has anyone been searching for an \"ideal\" model for information? By this I mean an "
                            },
                            {
                                "type": "text",
                                "text": "abstract",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " model (not a DRAM\/disk representation) with a vocabulary that allows a "
                            },
                            {
                                "type": "text",
                                "text": "human",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to read, specify, and understand information with ease. We have existing models like RDF (\"Semantic web\") and property graphs (e.g. Neo4j), and in programming languages we have object graphs (OO languages), trees (functional languages), and tables (relational DBs). None of these models seem to have arisen as \"the one true answer\", partially because they are all difficult to reason about when operated on programmatically (or so I claim). I want a model for information that allows us to easily understand both "
                            },
                            {
                                "type": "text",
                                "text": "static",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " information structures (snapshots) and "
                            },
                            {
                                "type": "text",
                                "text": "programmatically-maintained",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " information structures (an evolving, stateful system).\n\nThe ideal model for information might define concepts like \"pointing\" (edges) or \"nesting\" (groups), and each concept will have a clear meaning. The ideal model will also have a semantics for "
                            },
                            {
                                "type": "text",
                                "text": "mutation",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", e.g. you will know when you define a relationship like "
                            },
                            {
                                "type": "text",
                                "text": "A points to B",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " whether "
                            },
                            {
                                "type": "text",
                                "text": "B",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " can be deleted or modified in some way, and how this affects the "
                            },
                            {
                                "type": "text",
                                "text": "points to",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " connection. The model will also have a notion of "
                            },
                            {
                                "type": "text",
                                "text": "stewardship",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of information, i.e. it should be easy to observe the "
                            },
                            {
                                "type": "text",
                                "text": "source",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of a piece of information, and to know whether it is mutable or just a snapshot. (Yes, I believe the ideal model for information should have a vocabulary to describe distribution and trust).\n\nHas anyone here thought hard about this? I've been churning on it for a month or two recently, and for many months over the last few years; I can't proceed with my own PL project until I get fundamentals like this right, since the model that I develop will fundamentally determine what a \"program\" even is. I think a key reason why discovering \"the future of programming\" is so hard is that we think too much about code and not enough about information. "
                            },
                            {
                                "type": "text",
                                "text": "Code exists purely to transform information",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and if you don't make strides on models for information then I don't think you can make strides on programming languages.\n\nI have some ideas about a model, but I have no insights from others to validate it against. My conception is a very specific hybrid of mutable "
                            },
                            {
                                "type": "text",
                                "text": "graphs",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and immutable "
                            },
                            {
                                "type": "text",
                                "text": "trees",
                                "style": {
                                    "strike": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "nested sets",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that distinguishes between "
                            },
                            {
                                "type": "text",
                                "text": "descriptions",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "references",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and it seems very amenable to compact 2D representations, unlike most graphs. I won't describe it further just yet, since I don't want to skew anyone's responses.\n\nAnyway, I'd love to hear from other people who have been thinking about this kind of stuff."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D",
                    "UA14TGLTC",
                    "U016LEA3J1H",
                    "U014WA16VNJ",
                    "U016VUZGUUQ",
                    "UJ6LDMMN0",
                    "UHWC9PXBL",
                    "ULK0Z4MPV",
                    "UGYGY18UX"
                ],
                "count": 9
            },
            {
                "name": "thinking_face",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595489342.204400",
        "client_msg_id": "5a7f5114-e561-4ffe-ac70-891f4a33e69d",
        "text": "<@U013ZLJARC7> From your recent posts, perhaps you have some insight? :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xNKrk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " From your recent posts, perhaps you have some insight? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNBPP291C",
        "type": "message",
        "ts": "1595491014.205200",
        "edited": {
            "user": "UNBPP291C",
            "ts": "1595491029.000000"
        },
        "client_msg_id": "09d77489-afd4-4ef2-aae0-a6070403cac9",
        "text": "The ideal model is a user defined n-ary tree… or well, a list :slightly_smiling_face:\n\nMy long-term project is a tree editor that does exactly that - purely transforms the data.\n\nYou have a tree T, you write a transform function f(t)-&gt;g, you got a projected tree of G now, but inside I keep them connected via references - the model isn’t “G”, the model is “f(t)-&gt;G”. This way, you grow your codebase from the model outwards, expanding it into each category you need (sql schema, model, viewmodel) via transformations, or by creating new trees that reference stuff from any of the existing trees. That way, you mutate your original model and all the references get the mutation transformed to their own projection.\nI keep it all inside a large model called Lattice, that is a basically a huge graph that connects over multiple dimensions (each transformation adds a new dimension to the graph)\n\nDidn’t yet come to edges as mutation permissions, since I feel that isn’t a part of the pure model, but of a “projection”.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcf29e340a09",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cf29e340a09ac08ae262632ef9101046.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Ian Rumac",
            "display_name": "Ian Rumac",
            "team": "T5TCAFTA9",
            "name": "ian.rumac",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PfQ\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The ideal model is a user defined n-ary tree… or well, a list "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMy long-term project is a tree editor that does exactly that - purely transforms the data.\n\nYou have a tree T, you write a transform function f(t)->g, you got a projected tree of G now, but inside I keep them connected via references - the model isn’t “G”, the model is “f(t)->G”. This way, you grow your codebase from the model outwards, expanding it into each category you need (sql schema, model, viewmodel) via transformations, or by creating new trees that reference stuff from any of the existing trees. That way, you mutate your original model and all the references get the mutation transformed to their own projection.\nI keep it all inside a large model called Lattice, that is a basically a huge graph that connects over multiple dimensions (each transformation adds a new dimension to the graph)\n\nDidn’t yet come to edges as mutation permissions, since I feel that isn’t a part of the pure model, but of a “projection”."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595492207.205600",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595492286.000000"
        },
        "client_msg_id": "3d02daed-0841-4622-8b6c-9735fcecf04d",
        "text": "Your \"transform function\" is the same as \"derived state\", a database \"view\", and a \"projection\", right? We have a lot of names for it. That's an example of a *programmatically-maintained* information structure as I called it earlier. What about *static* structures? How would you encode a text document, or a (static) spreadsheet, and how do you derive meaning from the encoding? Spreadsheets in particular do not have a clean representation as a list or a tree. You'd have to do some shoehorning.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O334E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Your \"transform function\" is the same as \"derived state\", a database \"view\", and a \"projection\", right? We have a lot of names for it. That's an example of a "
                            },
                            {
                                "type": "text",
                                "text": "programmatically-maintained",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " information structure as I called it earlier. What about "
                            },
                            {
                                "type": "text",
                                "text": "static",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " structures? How would you encode a text document, or a (static) spreadsheet, and how do you derive meaning from the encoding? Spreadsheets in particular do not have a clean representation as a list or a tree. You'd have to do some shoehorning."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1595494358.206200",
        "client_msg_id": "3c22b5c0-4b44-4946-94b0-7a966c3e8ba4",
        "text": "Somewhat off-topic reply to <@ULK0Z4MPV>: if you enjoy ClojureScript, the Geom library has a much nicer API than ThreeJS. Here's a small example I build some years ago:\n<http:\/\/proscenium.rusher.com\/geometer\/>\nSource code:\n<https:\/\/github.com\/jackrusher\/geometer>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "fallback": "jackrusher\/geometer",
                "text": "An interactive playground for experiments with th.ing's geom libraries.",
                "title": "jackrusher\/geometer",
                "footer": "<https:\/\/github.com\/jackrusher\/geometer|jackrusher\/geometer>",
                "id": 1,
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "ts": 1448216523,
                "color": "24292f",
                "fields": [
                    {
                        "title": "Stars",
                        "value": "62",
                        "short": true
                    },
                    {
                        "title": "Language",
                        "value": "Clojure",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text",
                    "fields"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https:\/\/github.com\/jackrusher\/geometer",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KEB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Somewhat off-topic reply to "
                            },
                            {
                                "type": "user",
                                "user_id": "ULK0Z4MPV"
                            },
                            {
                                "type": "text",
                                "text": ": if you enjoy ClojureScript, the Geom library has a much nicer API than ThreeJS. Here's a small example I build some years ago:\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/proscenium.rusher.com\/geometer\/"
                            },
                            {
                                "type": "text",
                                "text": "\nSource code:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/jackrusher\/geometer"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "ULK0Z4MPV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UT60XSVCN",
        "type": "message",
        "ts": "1595496823.206900",
        "client_msg_id": "c511ae97-f082-4d85-a9b0-dbf40447128d",
        "text": "What do you mean by \"information\"?\n\nIn the most general form, this is the core question of ontology, which philosophers have been wrestling with for millenia. Slightly more restricted, you can look at GOFAI approaches to this problem, like cyc, which have largely failed to bear the kind of revolutionary fruit promised.\n\nHow general are you trying to be? What are you trying to achieve?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbc3e6041047",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bc3e6041047849518d1b042f0a29d5af.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "S.M Mukarram Nainar",
            "display_name": "S.M Mukarram Nainar",
            "team": "T5TCAFTA9",
            "name": "nainars",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uEfTE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What do you mean by \"information\"?\n\nIn the most general form, this is the core question of ontology, which philosophers have been wrestling with for millenia. Slightly more restricted, you can look at GOFAI approaches to this problem, like cyc, which have largely failed to bear the kind of revolutionary fruit promised.\n\nHow general are you trying to be? What are you trying to achieve?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1595496893.207100",
        "client_msg_id": "62fbbb42-cbed-4d13-a6c1-f51f9b78c83d",
        "text": "This is a fairly deep topic for which a simple answer is impossible. A few fingers pointing toward the moon:\n\n• It would be best for such a system to store the data in a structure that \"changes\" through accretion rather than mutation (<http:\/\/citeseerx.ist.psu.edu\/viewdoc\/download?doi=10.1.1.102.8253&amp;rep=rep1&amp;type=pdf|practical example>, much emulated since). If every modification point is essentially a snapshot, you get time travel and other useful semantics for free (Datomic is a recent database that uses this approach).\n• Up-front schemas are brittle over time. The less you can get away with saying about structure, the better off you will be. (A special case of the more general advice to \"design for change\").\n• The approach whereby everything is a logical assertion (i.e. triples, sometimes called \"Subject\/Predicate\/Object\", sometimes \"Entity\/Attribute\/Value\", depending on the culture of the speaker) is the most flexible I've been able to come up with yet. This underlies RDF (and TripleStores generally), and is currently in vogue among those who have encountered datalog, mostly via Datomic.\n• It's very useful to be able to specify additional automatic behavior over triples via some kind of metadata, in the best case also specified in triples. (RDF via OWL, not Datamic.)\nI have many differences of taste with the place where RDF ultimately went, but there's loads of good stuff in there too. You can find out more about the history of the \"data as assertions\" approach by reading up on <https:\/\/en.wikipedia.org\/wiki\/Knowledge_representation_and_reasoning|Knowledge Representation> (as distinct from data representation), <https:\/\/en.wikipedia.org\/wiki\/Frame_(artificial_intelligence)#Frame_language|Frame-based Reasoning>, and so on. This stuff is one of the threads that leads to object orientation, though much less emphasized in a modern context than the strand motivated by simulation.\n\nThe \"immutable tree on disk\" stuff comes from generalizing database journals, which for me starts in the 80s with <https:\/\/en.wikipedia.org\/wiki\/Log-structured_file_system|Log Structured File Systems>. Today there's loads of work on immutable logs for all sorts of applications, especially with the recent popularity of cryptocurrencies.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jwM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a fairly deep topic for which a simple answer is impossible. A few fingers pointing toward the moon:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "It would be best for such a system to store the data in a structure that \"changes\" through accretion rather than mutation ("
                                    },
                                    {
                                        "type": "link",
                                        "url": "http:\/\/citeseerx.ist.psu.edu\/viewdoc\/download?doi=10.1.1.102.8253&rep=rep1&type=pdf",
                                        "text": "practical example"
                                    },
                                    {
                                        "type": "text",
                                        "text": ", much emulated since). If every modification point is essentially a snapshot, you get time travel and other useful semantics for free (Datomic is a recent database that uses this approach)."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Up-front schemas are brittle over time. The less you can get away with saying about structure, the better off you will be. (A special case of the more general advice to \"design for change\")."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The approach whereby everything is a logical assertion (i.e. triples, sometimes called \"Subject\/Predicate\/Object\", sometimes \"Entity\/Attribute\/Value\", depending on the culture of the speaker) is the most flexible I've been able to come up with yet. This underlies RDF (and TripleStores generally), and is currently in vogue among those who have encountered datalog, mostly via Datomic."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "It's very useful to be able to specify additional automatic behavior over triples via some kind of metadata, in the best case also specified in triples. (RDF via OWL, not Datamic.)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI have many differences of taste with the place where RDF ultimately went, but there's loads of good stuff in there too. You can find out more about the history of the \"data as assertions\" approach by reading up on "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Knowledge_representation_and_reasoning",
                                "text": "Knowledge Representation"
                            },
                            {
                                "type": "text",
                                "text": " (as distinct from data representation), "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Frame_(artificial_intelligence)#Frame_language",
                                "text": "Frame-based Reasoning"
                            },
                            {
                                "type": "text",
                                "text": ", and so on. This stuff is one of the threads that leads to object orientation, though much less emphasized in a modern context than the strand motivated by simulation.\n\nThe \"immutable tree on disk\" stuff comes from generalizing database journals, which for me starts in the 80s with "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Log-structured_file_system",
                                "text": "Log Structured File Systems"
                            },
                            {
                                "type": "text",
                                "text": ". Today there's loads of work on immutable logs for all sorts of applications, especially with the recent popularity of cryptocurrencies."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "U8A5MS6R1",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595498962.207400",
        "client_msg_id": "0a2ca44f-4bfe-4a96-ace9-e6df9e127417",
        "text": "Wow this thread has already brought out so many fellow travellers who I didn't know were exploring the same terrain as I am! The history of my own project over decades is intimately tied to my search for the \"perfect\" data and data transformation approach, in search of the \"purest\" model of programming - which is one that is most cognitively aligned. Aligned to the cognition of a .. ahem .. \"average human\", so probably less to that of the \"average programmer\"!\n\nSo for me it is important to step back and look at common patterns of cognition - how we organise our perception of reality. One approach is to read Roget's Thesaurus! All the important cognitive concepts are there, organised in a specific idiosyncratic way. There are many other \"meta-ontology\" approaches, as have already been listed here.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=Hw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wow this thread has already brought out so many fellow travellers who I didn't know were exploring the same terrain as I am! The history of my own project over decades is intimately tied to my search for the \"perfect\" data and data transformation approach, in search of the \"purest\" model of programming - which is one that is most cognitively aligned. Aligned to the cognition of a .. ahem .. \"average human\", so probably less to that of the \"average programmer\"!\n\nSo for me it is important to step back and look at common patterns of cognition - how we organise our perception of reality. One approach is to read Roget's Thesaurus! All the important cognitive concepts are there, organised in a specific idiosyncratic way. There are many other \"meta-ontology\" approaches, as have already been listed here."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595499136.207600",
        "client_msg_id": "eec43d67-ac77-4c1d-8907-b9f35560c9fa",
        "text": "I could start listing out what I believe are essential \"reality modelling primitives\" as you already have done yourself. For me, where I am right now in my journey, that is basically: identity of things, properties of things, relations between things.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=0F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I could start listing out what I believe are essential \"reality modelling primitives\" as you already have done yourself. For me, where I am right now in my journey, that is basically: identity of things, properties of things, relations between things."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U8A5MS6R1",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595499223.207800",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1595499234.000000"
        },
        "client_msg_id": "f6ffee2e-a8ca-479d-98b9-4a378b6e3c21",
        "text": "At a more abstract level, you have symbols of value, order of those symbols and their aggregations, bags\/sets of symbols. You have named properties that can have values.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wu7x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At a more abstract level, you have symbols of value, order of those symbols and their aggregations, bags\/sets of symbols. You have named properties that can have values."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1595499279.208100",
        "client_msg_id": "4268cbcd-58fc-4f02-b6f5-c219d3db8255",
        "text": "It's easier to show up at some corporate jam and meet new people than to organize one yourself. You don't have to find the space, get the food, clean the place after, etc etc etc. Plus you'll likely meet people you don't know.\n\nThat said I don't personally get the idea of jams\/hackathons that take place online. I can make something on my own at home. Saying \"this weekend is abc jam! just upload your submission online!\" doesn't motivate me all. All I want out of a jam is to spend time with actual people, make some new friends, see a new venue, that kind thing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595355834.085400",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cw7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's easier to show up at some corporate jam and meet new people than to organize one yourself. You don't have to find the space, get the food, clean the place after, etc etc etc. Plus you'll likely meet people you don't know.\n\nThat said I don't personally get the idea of jams\/hackathons that take place online. I can make something on my own at home. Saying \"this weekend is abc jam! just upload your submission online!\" doesn't motivate me all. All I want out of a jam is to spend time with actual people, make some new friends, see a new venue, that kind thing."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMWF81HTP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595499346.208300",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1595499568.000000"
        },
        "client_msg_id": "cf12eb27-04b4-4179-9c13-36eb0e7674a5",
        "text": "So, as you can probably deduce, I've settled on something that looks like objects that have unique identity, which are bags of properties in the form \"property name: property value\". Property values are just symbols (text really) or ordered lists of symbols but can also be links to other objects by identity - relations between objects.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YR7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So, as you can probably deduce, I've settled on something that looks like objects that have unique identity, which are bags of properties in the form \"property name: property value\". Property values are just symbols (text really) or ordered lists of symbols but can also be links to other objects by identity - relations between objects."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595499417.208600",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1595499490.000000"
        },
        "client_msg_id": "4d30d42f-40bc-4c51-b9d0-bc53a4d2f3ca",
        "text": "One issue that really bugs me is that I can't extract a single representation of order! There is order in my properties (I don't need that but I want it). There is order in my lists of property values, and there is order in the direction of the link pointers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KhBgi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One issue that really bugs me is that I can't extract a single representation of order! There is order in my properties (I don't need that but I want it). There is order in my lists of property values, and there is order in the direction of the link pointers."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UDQBTJ211"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1595499495.208900",
        "client_msg_id": "d69b1f16-565b-4c8a-be5d-dfd41a94ebb4",
        "text": "If you want to make it attractive to humans it needs to be built out of concepts that humans have \"hardware support\" for.\n\nSometimes there's a tendency to seek \"elegant\" solutions which use the minimum possible number of concepts, whereas I think it's often more natural to expand the number of concepts, even if introduces \"redundancy\".\n\nFor example, you can describe a bijection between XML and JSON, that would involve translating JSON lists into a something you can describe in XML such as [\"one\", \"two\", \"three\"] becomes &lt;list-item index=\"0\"&gt;one&lt;\/list-item&gt;&lt;list-item index=\"1\"&gt;two&lt;\/list-item&gt;... or something.\n\nYou could say that XML is a more elegant way to represent information, because it is based basically only on the concepts of Containment, Naming and Properties. But because I believe that humans have \"hardware support\" for many more concepts, such as Sequences, I think that JSON is actually easier and more natural (for humans).\n\nSo basically my only input would be to be sceptical of mathematical beauty if the format is intended to store information relating to the human world.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fQ=w1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you want to make it attractive to humans it needs to be built out of concepts that humans have \"hardware support\" for.\n\nSometimes there's a tendency to seek \"elegant\" solutions which use the minimum possible number of concepts, whereas I think it's often more natural to expand the number of concepts, even if introduces \"redundancy\".\n\nFor example, you can describe a bijection between XML and JSON, that would involve translating JSON lists into a something you can describe in XML such as [\"one\", \"two\", \"three\"] becomes <list-item index=\"0\">one<\/list-item><list-item index=\"1\">two<\/list-item>... or something.\n\nYou could say that XML is a more elegant way to represent information, because it is based basically only on the concepts of Containment, Naming and Properties. But because I believe that humans have \"hardware support\" for many more concepts, such as Sequences, I think that JSON is actually easier and more natural (for humans).\n\nSo basically my only input would be to be sceptical of mathematical beauty if the format is intended to store information relating to the human world."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_check_mark",
                "users": [
                    "UE6EFEPTQ"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1595499638.209400",
        "edited": {
            "user": "UDQBTJ211",
            "ts": "1595499700.000000"
        },
        "client_msg_id": "95ea8ca2-2f10-4353-b0f2-ee23d2722a26",
        "text": "There is a list of things that have been observed in *every* human culture (Donald Brown's Human Universals) and it is surprisingly long. Unfortunately it doesn't have much on the way of numbers (only the numbers 1 and 2) as some cultures are almost completely innumerate. It does have quite a few logical operations like Not, Or etc",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=xB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is a list of things that have been observed in "
                            },
                            {
                                "type": "text",
                                "text": "every",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " human culture (Donald Brown's Human Universals) and it is surprisingly long. Unfortunately it doesn't have much on the way of numbers (only the numbers 1 and 2) as some cultures are almost completely innumerate. It does have quite a few logical operations like Not, Or etc"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595500028.209700",
        "client_msg_id": "6b0232da-2803-4f28-ab05-c198f13ba12b",
        "text": "<@UT60XSVCN> By \"information\" I just mean data with associated meaning. I refrained from using the word \"data\" because it's a machine-oriented word and I don't want people to start talking about conventional data structures and pointers. I want to focus on the human interface, not the machine representation.\n\nI'm not too concerned with standardizing ontologies or AI right now. I'm more concerned with allowing humans to group a bunch of symbols together by hand or programmatically in a way that makes sense for their own understanding. I'm designing a programming language, but unlike almost everyone in the last few decades, I'm not taking \"arrays\" or \"objects\" or \"algebraic data types\" or \"databases\" or \"relations\" for granted: I'm trying to figure out, from complete scratch, what information structures are easiest for people to *think with* when they are integrated into a complex system (e.g. a distributed app). I'm trying to be as general as I can, but my domain is \"programming\", taken broadly.\n\nI want a model for information that allows users to encode information like \"Bob has a car with 4 wheels\" in the form that is most useful to their specific application. In a company database the car might be an immutable fact with an associated *date* and *source*. You might then tell me that the right model for encoding information about cars is *the relational model*. However, in a video game the car might be an entity with a *position* that changes over time, and so we need to be able to talk about the idea of *change* and the distinction between *descriptions* (where the description itself doesn't \"change\" as time passes) and *references* (where the entities referred to can change).\n\nThe question of \"how do I model information\" may seem trivial (or \"solved\") at first glance, but the moment I ask that you don't treat conventional data structures as *axioms* (\"we already figured it out, just mix these existing things together and follow best practices\"), it becomes incredibly deep.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qLb0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UT60XSVCN"
                            },
                            {
                                "type": "text",
                                "text": " By \"information\" I just mean data with associated meaning. I refrained from using the word \"data\" because it's a machine-oriented word and I don't want people to start talking about conventional data structures and pointers. I want to focus on the human interface, not the machine representation.\n\nI'm not too concerned with standardizing ontologies or AI right now. I'm more concerned with allowing humans to group a bunch of symbols together by hand or programmatically in a way that makes sense for their own understanding. I'm designing a programming language, but unlike almost everyone in the last few decades, I'm not taking \"arrays\" or \"objects\" or \"algebraic data types\" or \"databases\" or \"relations\" for granted: I'm trying to figure out, from complete scratch, what information structures are easiest for people to "
                            },
                            {
                                "type": "text",
                                "text": "think with ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "when they are integrated into a complex system (e.g. a distributed app). I'm trying to be as general as I can, but my domain is \"programming\", taken broadly.\n\nI want a model for information that allows users to encode information like \"Bob has a car with 4 wheels\" in the form that is most useful to their specific application. In a company database the car might be an immutable fact with an associated "
                            },
                            {
                                "type": "text",
                                "text": "date",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "source",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". You might then tell me that the right model for encoding information about cars is "
                            },
                            {
                                "type": "text",
                                "text": "the relational model",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". However, in a video game the car might be an entity with a "
                            },
                            {
                                "type": "text",
                                "text": "position ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "that changes over time, and so we need to be able to talk about the idea of "
                            },
                            {
                                "type": "text",
                                "text": "change",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and the distinction between"
                            },
                            {
                                "type": "text",
                                "text": " descriptions",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (where the description itself doesn't \"change\" as time passes) and "
                            },
                            {
                                "type": "text",
                                "text": "references",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (where the entities referred to can change).\n\nThe question of \"how do I model information\" may seem trivial (or \"solved\") at first glance, but the moment I ask that you don't treat conventional data structures as "
                            },
                            {
                                "type": "text",
                                "text": "axioms ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "(\"we already figured it out, just mix these existing things together and follow best practices\"), it becomes incredibly deep."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U8A5MS6R1",
                    "U9C92716C"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1595500457.212100",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1595500472.000000"
        },
        "client_msg_id": "DF43239F-CFCD-471D-8075-B272B2FB8D1E",
        "text": "When I was a teenager, these sorts of contest-jams were fun as I learned 3D modelling. A good way to get some audience (and thus feedback) that my work wasn't yet good enough to earn on its own.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595355834.085400",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rm+s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When I was a teenager, these sorts of contest-jams were fun as I learned 3D modelling. A good way to get some audience (and thus feedback) that my work wasn't yet good enough to earn on its own."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595500993.212400",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595501090.000000"
        },
        "client_msg_id": "87c4e4bd-1da4-403b-ab53-132d4aa0f28e",
        "text": "<@U013ZLJARC7> I've liked the idea of \"accretion, not mutation\" in the past. But I'm worried that making it a requirement in a programming system is going to lead to space consumption problems for certain use cases. How do you get around that, if you aren't restricting your application domain and user base?\n\nI agree that it's wise to limit unnecessary structure: scenarios where a relationship is specified with some kind of directionality\/asymmetry that isn't inherent. I've been calling this \"incidental order\", and it's one of my biggest concerns. I've been inspired by Datalog, though I've come to a conclusion that mere relations (including as triples) aren't expressive\/intuitive\/\"easy\" enough as the *sole* information structure for for general-purpose programming*. I think it's _part_ of the answer though. Do you believe otherwise?\n\n* I probably wasn't explicit that I want a model for information that can be used ubiquitously throughout a computation, not just as a \"final output\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iRa3G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " I've liked the idea of \"accretion, not mutation\" in the past. But I'm worried that making it a requirement in a programming system is going to lead to space consumption problems for certain use cases. How do you get around that, if you aren't restricting your application domain and user base?\n\nI agree that it's wise to limit unnecessary structure: scenarios where a relationship is specified with some kind of directionality\/asymmetry that isn't inherent. I've been calling this \"incidental order\", and it's one of my biggest concerns. I've been inspired by Datalog, though I've come to a conclusion that mere relations (including as triples) aren't expressive\/intuitive\/\"easy\" enough as the "
                            },
                            {
                                "type": "text",
                                "text": "sole",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " information structure for for general-purpose programming*. I think it's "
                            },
                            {
                                "type": "text",
                                "text": "part",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of the answer though. Do you believe otherwise?\n\n* I probably wasn't explicit that I want a model for information that can be used ubiquitously throughout a computation, not just as a \"final output\"."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595501060.212600",
        "client_msg_id": "9dc725cf-f124-47a2-9408-acd4682a95a5",
        "text": "And thank you for the links! I'm going to chase them up later.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RhtO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And thank you for the links! I'm going to chase them up later."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1595502489.212900",
        "client_msg_id": "57ddd140-2e4b-46e1-9e34-d4e7331f1890",
        "text": "<@UE6EFEPTQ> Careful! :slightly_smiling_face: The age old practice of modeling human mental processes with first order logics has not gone very well. Even something as seemingly straightforward as object identity is quite fraught in practice: <https:\/\/en.wikipedia.org\/wiki\/Ship_of_Theseus>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WhIR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": " Careful! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " The age old practice of modeling human mental processes with first order logics has not gone very well. Even something as seemingly straightforward as object identity is quite fraught in practice: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Ship_of_Theseus"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UE6EFEPTQ",
                    "ULM3U6275",
                    "U9C92716C"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595502541.213100",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595503089.000000"
        },
        "client_msg_id": "cbf4afd8-93bc-4d4f-8ac0-6a266c1effe6",
        "text": "<@UE6EFEPTQ>\n&gt; where I am right now in my journey, that is basically: identity of things, properties of things, relations between things.\nHow do you distinguish between properties and relations? Is the fact that I'm \"holding my tea cup\" a property of myself, or am I just in a relationship with my tea cup?\n\n&gt; At a more abstract level, you have symbols of value, order of those symbols and their aggregations, bags\/sets of symbols.\nWhat is a \"symbol of value\"? I don't quite understand that term. And you seem to recognise both *sets* and *bags*? I've always found those to be in contention with one another, and so I've (for the meantime) concluded that if a user is in a scenario where they want a bag (which should be rare), they can simulate it with a set quite easily. The converse is not possible, though.\n\n&gt; So, as you can probably deduce, I've settled on something that looks like objects that have unique identity, which are bags of properties\nI've currently settled on two notions that together can act like a conventional object. The first is something I'm tentatively calling a *picture*, which is a *set* with an exterior label (I call it the *topic*) that contains *symbols* and\/or further pictures (these are called *subtopics*). These can be used to form the \"descriptions\" I was hinting at earlier; they are immutable value types. If you want a picture to be mutable (and thus behave like an object), you can stick it in a *workspace*, which is the unit of mutability. Workspaces are identified (and thus referenced, and queried) by the aforementioned symbols. A workspace's state evolves by a *rulebook* (a set of *rules*), which updates a workspace's picture in response to *events*. I plan to base the semantics of rules on logic programming. The end result will be something like \"nested Datalog\", though there is no literature that matches the model I described above.\n\nPicture topics replace the need to have a special notion of a statically-specified \"attribute\", because the topic can itself be any value. This should hopefully make meta-programming possible, but at the very least, I hope it leads to a very minimalist (and intuitive) semantics.\n\nAll of the above is subject to change, of course! Given my current track record, I wouldn't be surprised if I find some major flaw in this kind of architecture.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VLPT0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "where I am right now in my journey, that is basically: identity of things, properties of things, relations between things."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How do you distinguish between properties and relations? Is the fact that I'm \"holding my tea cup\" a property of myself, or am I just in a relationship with my tea cup?\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At a more abstract level, you have symbols of value, order of those symbols and their aggregations, bags\/sets of symbols."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What is a \"symbol of value\"? I don't quite understand that term. And you seem to recognise both "
                            },
                            {
                                "type": "text",
                                "text": "sets",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "bags",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? I've always found those to be in contention with one another, and so I've (for the meantime) concluded that if a user is in a scenario where they want a bag (which should be rare), they can simulate it with a set quite easily. The converse is not possible, though.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So, as you can probably deduce, I've settled on something that looks like objects that have unique identity, which are bags of properties"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've currently settled on two notions that together can act like a conventional object. The first is something I'm tentatively calling a "
                            },
                            {
                                "type": "text",
                                "text": "picture",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which is a "
                            },
                            {
                                "type": "text",
                                "text": "set",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " with an exterior label (I call it the "
                            },
                            {
                                "type": "text",
                                "text": "topic",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") that contains "
                            },
                            {
                                "type": "text",
                                "text": "symbols",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and\/or further pictures (these are called "
                            },
                            {
                                "type": "text",
                                "text": "subtopics",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "). These can be used to form the \"descriptions\" I was hinting at earlier; they are immutable value types. If you want a picture to be mutable (and thus behave like an object), you can stick it in a "
                            },
                            {
                                "type": "text",
                                "text": "workspace",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which is the unit of mutability. Workspaces are identified (and thus referenced, and queried) by the aforementioned symbols. A workspace's state evolves by a "
                            },
                            {
                                "type": "text",
                                "text": "rulebook",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (a set of "
                            },
                            {
                                "type": "text",
                                "text": "rules",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "), which updates a workspace's picture in response to "
                            },
                            {
                                "type": "text",
                                "text": "events",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". I plan to base the semantics of rules on logic programming. The end result will be something like \"nested Datalog\", though there is no literature that matches the model I described above.\n\nPicture topics replace the need to have a special notion of a statically-specified \"attribute\", because the topic can itself be any value. This should hopefully make meta-programming possible, but at the very least, I hope it leads to a very minimalist (and intuitive) semantics.\n\nAll of the above is subject to change, of course! Given my current track record, I wouldn't be surprised if I find some major flaw in this kind of architecture."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1595503300.214000",
        "client_msg_id": "1a464d36-a4cf-4e3a-a67a-8f8c03e42135",
        "text": "<@UCGAK10LS> In terms of storage, the natural thing to do in a log-structured environment is to have a \"cleaner\" that purges no longer referenced old versions subject to some policy. In the paper I linked, we built the system to purge whatever was no longer linked. In another system one might have a policy of \"versions older than a year to which no one holds a dangling pointer\". In either case, I would strongly encourage you _not_ to consider practical matters of performance or storage efficiency at this stage. Go a bit mad, follow untrodden paths, find weird things!\n\nAs for expressivity\/ease of triples, one would expect a system that can construct other representations on top of triples for ease of use. What that looks like in your domain is a very open question. :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "llUZZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " In terms of storage, the natural thing to do in a log-structured environment is to have a \"cleaner\" that purges no longer referenced old versions subject to some policy. In the paper I linked, we built the system to purge whatever was no longer linked. In another system one might have a policy of \"versions older than a year to which no one holds a dangling pointer\". In either case, I would strongly encourage you "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to consider practical matters of performance or storage efficiency at this stage. Go a bit mad, follow untrodden paths, find weird things!\n\nAs for expressivity\/ease of triples, one would expect a system that can construct other representations on top of triples for ease of use. What that looks like in your domain is a very open question. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595503559.214200",
        "client_msg_id": "574dbe9b-85e5-4802-9878-55cc5f1ec466",
        "text": "<@U013ZLJARC7> I'm definitely good at going mad! It's my perpetual state of being :slightly_smiling_face:. Thank you. I'm going to keep pondering on all of this!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yo4kr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " I'm definitely good at going mad! It's my perpetual state of being "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": ". Thank you. I'm going to keep pondering on all of this!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "man_in_lotus_position",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UNBPP291C",
        "type": "message",
        "ts": "1595503733.214400",
        "edited": {
            "user": "UNBPP291C",
            "ts": "1595503738.000000"
        },
        "client_msg_id": "ee8fc6b0-d608-474f-a553-8ae7f4fe1c88",
        "text": "<@U013ZLJARC7> which paper are you talking about exactly? I was on the verge of implementing a cleaner, “Interdimensional black hole” so to say that would purge empty references in the background, but couldnt decide on when to run it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcf29e340a09",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cf29e340a09ac08ae262632ef9101046.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Ian Rumac",
            "display_name": "Ian Rumac",
            "team": "T5TCAFTA9",
            "name": "ian.rumac",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I6p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " which paper are you talking about exactly? I was on the verge of implementing a cleaner, “Interdimensional black hole” so to say that would purge empty references in the background, but couldnt decide on when to run it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595504167.214700",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595504458.000000"
        },
        "client_msg_id": "7d321006-7f62-4c7e-aab4-41a4b49e30bb",
        "text": "<@UE6EFEPTQ>\n&gt; One issue that really bugs me is that I can't extract a single representation of order!\nIf you make any breakthroughs on this, let me know. I'm still trying to figure out how to represent sequences (lists, priority queues) and trees (e.g. family trees, or any other *domain-relevant* tree structure) in a *non-hierarchical* manner, such that users can perform arbitrary traversals (in any direction) and queries. My big constraint here is that *I want to ensure traversals will always terminate*, so I need there to be some measure of progress associated with the traversal rules. Another challenge is *multi-dimensional ordered structures*, for example, a spreadsheet! How can one describe a traversal across a spreadsheet? Every cell in a spreadsheet is ordered in two dimensions! My current line of investigation is to determine whether all kinds of ordering can be exposed as numberings, and sequence manipulation is manipulation of those numberings, i.e. a list might look like `{(c,1), (a,2), (t,3)}` and a priority queue might look like `{(c, -12), (a, 7), (t, 34)}`. I'm thinking of going deep and figuring out if lists and trees can be treated as *spatial data sets* and manipulated geometrically.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nKnH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One issue that really bugs me is that I can't extract a single representation of order!"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you make any breakthroughs on this, let me know. I'm still trying to figure out how to represent sequences (lists, priority queues) and trees (e.g. family trees, or any other "
                            },
                            {
                                "type": "text",
                                "text": "domain-relevant",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " tree structure) in a "
                            },
                            {
                                "type": "text",
                                "text": "non-hierarchical ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "manner, such that users can perform arbitrary traversals (in any direction) and queries. My big constraint here is that "
                            },
                            {
                                "type": "text",
                                "text": "I want to ensure traversals will always terminate",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", so I need there to be some measure of progress associated with the traversal rules. Another challenge is "
                            },
                            {
                                "type": "text",
                                "text": "multi-dimensional ordered structures",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", for example, a spreadsheet! How can one describe a traversal across a spreadsheet? Every cell in a spreadsheet is ordered in two dimensions! My current line of investigation is to determine whether all kinds of ordering can be exposed as numberings, and sequence manipulation is manipulation of those numberings, i.e. a list might look like "
                            },
                            {
                                "type": "text",
                                "text": "{(c,1), (a,2), (t,3)}",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and a priority queue might look like "
                            },
                            {
                                "type": "text",
                                "text": "{(c, -12), (a, 7), (t, 34)}",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". I'm thinking of going deep and figuring out if lists and trees can be treated as "
                            },
                            {
                                "type": "text",
                                "text": "spatial data sets",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and manipulated geometrically."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595504622.215300",
        "client_msg_id": "092080b2-99d8-467d-87c8-45e54da50a0d",
        "text": "&gt;  How do you distinguish between properties and relations? Is the fact that I'm \"holding my tea cup\" a property of myself, or am I just in a relationship with my tea cup?\nit's a property of you, the link to the cup, and a property of the cup, back-linking to you, since both of you care about the holding! Other links may be one-way: the puddle has a link to the sun that's warming it and evaporating it, but the sun couldn't care less about the puddle",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZaFgI",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " How do you distinguish between properties and relations? Is the fact that I'm \"holding my tea cup\" a property of myself, or am I just in a relationship with my tea cup?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it's a property of you, the link to the cup, and a property of the cup, back-linking to you, since both of you care about the holding! Other links may be one-way: the puddle has a link to the sun that's warming it and evaporating it, but the sun couldn't care less about the puddle"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595504758.215500",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595504797.000000"
        },
        "client_msg_id": "8e486fa1-6833-45d6-8ff4-6b23e4546b9b",
        "text": "That seems like a bit of an arbitrary distinction though, right? How do you formalize who \"cares\" about a relationship? How does it affect how a user models their application?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=a3h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That seems like a bit of an arbitrary distinction though, right? How do you formalize who \"cares\" about a relationship? How does it affect how a user models their application?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595504764.215700",
        "client_msg_id": "e4076dc7-2296-42dd-b808-2ba302c64895",
        "text": "&gt;  What is a \"symbol of value\"? I don't quite understand that term. And you seem to recognise both *sets* and *bags*? I've always found those to be in contention with one another, and so I've (for the meantime) concluded that if a user is in a scenario where they want a bag (which should be rare), they can simulate it with a set quite easily. The converse is not possible, though.\n\"3.2\" \"up\" \"red\".\nset\/bag: just recognition that ordered lists sometimes don't need order, but have to be laid out somehow in space, which means the order is incidental. I don't think this is a problem though.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kZ=s",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " What is a \"symbol of value\"? I don't quite understand that term. And you seem to recognise both "
                            },
                            {
                                "type": "text",
                                "text": "sets",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "bags",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? I've always found those to be in contention with one another, and so I've (for the meantime) concluded that if a user is in a scenario where they want a bag (which should be rare), they can simulate it with a set quite easily. The converse is not possible, though."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"3.2\" \"up\" \"red\".\nset\/bag: just recognition that ordered lists sometimes don't need order, but have to be laid out somehow in space, which means the order is incidental. I don't think this is a problem though."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595504811.216000",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1595504818.000000"
        },
        "client_msg_id": "413fc53b-827a-4770-9db0-06e1e08f47fd",
        "text": "\"who cares\": it's up to you as the modeller",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gr9J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"who cares\": it's up to you as the modeller"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595504925.216300",
        "client_msg_id": "6b47ef8c-d416-4f2c-967b-8eecc726258e",
        "text": "This thread is piling up and I need lunch.. :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cQoQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This thread is piling up and I need lunch.. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595504976.216500",
        "client_msg_id": "f54cfbe2-4578-429a-a2f8-29eb3b6afd6d",
        "text": "What are your measures of success? To be programmable by techies or normals?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mkl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What are your measures of success? To be programmable by techies or normals?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595505073.216700",
        "client_msg_id": "f93a7bd1-792d-482c-9f63-9590b7e6ecd7",
        "text": "<@U013ZLJARC7> I take the approach of aggressively GCing old states\/versions: if you want to model history, you do that explicitly yourself",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/H5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " I take the approach of aggressively GCing old states\/versions: if you want to model history, you do that explicitly yourself"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595505154.216900",
        "client_msg_id": "6cefc899-41d0-4a3c-82d4-afcf03d42f89",
        "text": "On order (e.g. spreadsheets): that's a whole thread in itself",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nAM=a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On order (e.g. spreadsheets): that's a whole thread in itself"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595505160.217100",
        "client_msg_id": "dbd2765d-c466-4e46-b041-d4d9d77c828b",
        "text": "I'm getting overloaded. Time for lunch",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+EC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm getting overloaded. Time for lunch"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1595506697.217400",
        "client_msg_id": "0625f8b4-2500-4913-9838-7078774462ca",
        "text": "<@UNBPP291C> This <http:\/\/citeseerx.ist.psu.edu\/viewdoc\/download?doi=10.1.1.102.8253&amp;rep=rep1&amp;type=pdf|paper> describes one such implementation. We used multiple threads of execution. One of the benefits of the overall architecture is that multiple readers can continue running without any locking while writes are streaming in.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ljr5p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UNBPP291C"
                            },
                            {
                                "type": "text",
                                "text": " This "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/citeseerx.ist.psu.edu\/viewdoc\/download?doi=10.1.1.102.8253&rep=rep1&type=pdf",
                                "text": "paper"
                            },
                            {
                                "type": "text",
                                "text": " describes one such implementation. We used multiple threads of execution. One of the benefits of the overall architecture is that multiple readers can continue running without any locking while writes are streaming in."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595507675.217600",
        "client_msg_id": "9a7d5967-a45a-4760-90f9-90930379e9d2",
        "text": "So ... fuelled up now.. :smile:\nSpreadsheets: well, tables, well... again it depends on the semantics of the table: for example, a list of objects can form a table with the common property labels as either row or col headers, and all the property values in the grid. If you have a genuine case of 2D tabular data - e.g., an f(x,y), then the order you select (x then y or y then x) only matters for optimisation",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TyQaR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So ... fuelled up now.. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "\nSpreadsheets: well, tables, well... again it depends on the semantics of the table: for example, a list of objects can form a table with the common property labels as either row or col headers, and all the property values in the grid. If you have a genuine case of 2D tabular data - e.g., an f(x,y), then the order you select (x then y or y then x) only matters for optimisation"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595507779.217800",
        "client_msg_id": "f80aa74e-3a78-4930-995e-084b0193bf48",
        "text": "funny, can't think of an example of f(x,y) as a table, where col headers and row headers are either both symbolic or both ordinal .. can you?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XaUM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "funny, can't think of an example of f(x,y) as a table, where col headers and row headers are either both symbolic or both ordinal .. can you?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595507941.218000",
        "client_msg_id": "f97a8076-0644-4680-a445-769e68642ef2",
        "text": "(a 2D lookup table where row and col symbols are values not \"property names\")",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "usjzH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(a 2D lookup table where row and col symbols are values not \"property names\")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595508200.218200",
        "client_msg_id": "4fd692a5-09ef-460a-a095-efd4dbc0859c",
        "text": "&gt;  If you make any breakthroughs on this, let me know. I'm still trying to figure out how to represent sequences (lists, priority queues) and trees (e.g. family trees, or any other *domain-relevant* tree structure) in a *non-hierarchical* manner, such that users can perform arbitrary traversals (in any direction) and queries. My big constraint here is that *I want to ensure traversals will always terminate*, so I need there to be some measure of progress associated with the traversal rules.\nwhy non-hierarchical? how does that help with traversal termination?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bvijb",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " If you make any breakthroughs on this, let me know. I'm still trying to figure out how to represent sequences (lists, priority queues) and trees (e.g. family trees, or any other "
                            },
                            {
                                "type": "text",
                                "text": "domain-relevant",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " tree structure) in a "
                            },
                            {
                                "type": "text",
                                "text": "non-hierarchical ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "manner, such that users can perform arbitrary traversals (in any direction) and queries. My big constraint here is that "
                            },
                            {
                                "type": "text",
                                "text": "I want to ensure traversals will always terminate",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", so I need there to be some measure of progress associated with the traversal rules."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "why non-hierarchical? how does that help with traversal termination?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595508319.218400",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1595508330.000000"
        },
        "client_msg_id": "2b0a4413-76ab-4113-a121-459e528b047a",
        "text": "&gt; I've currently settled on two notions that together can act like a conventional object. The first is something I'm tentatively calling a *picture*, which is a *set* with an exterior label (I call it the *topic*) that contains *symbols* and\/or further pictures (these are called *subtopics*). These can be used to form the \"descriptions\" I was hinting at earlier; they are immutable value types. If you want a picture to be mutable (and thus behave like an object), you can stick it in a *workspace*, which is the unit of mutability. Workspaces are identified (and thus referenced, and queried) by the aforementioned symbols. A workspace's state evolves by a *rulebook* (a set of *rules*), which updates a workspace's picture in response to *events*. I plan to base the semantics of rules on logic programming. The end result will be something like \"nested Datalog\", though there is no literature that matches the model I described above.\n&gt; Picture topics replace the need to have a special notion of a statically-specified \"attribute\", because the topic can itself be any value. This should hopefully make meta-programming possible, but at the very least, I hope it leads to a very minimalist (and intuitive) semantics.\nThis is what prompted my question above: who are your target audience? Is this going to be intuitive to everyone, if it's non-techies you're after?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JIst",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've currently settled on two notions that together can act like a conventional object. The first is something I'm tentatively calling a "
                            },
                            {
                                "type": "text",
                                "text": "picture",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which is a "
                            },
                            {
                                "type": "text",
                                "text": "set",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " with an exterior label (I call it the "
                            },
                            {
                                "type": "text",
                                "text": "topic",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") that contains "
                            },
                            {
                                "type": "text",
                                "text": "symbols",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and\/or further pictures (these are called "
                            },
                            {
                                "type": "text",
                                "text": "subtopics",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "). These can be used to form the \"descriptions\" I was hinting at earlier; they are immutable value types. If you want a picture to be mutable (and thus behave like an object), you can stick it in a "
                            },
                            {
                                "type": "text",
                                "text": "workspace",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which is the unit of mutability. Workspaces are identified (and thus referenced, and queried) by the aforementioned symbols. A workspace's state evolves by a "
                            },
                            {
                                "type": "text",
                                "text": "rulebook",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (a set of "
                            },
                            {
                                "type": "text",
                                "text": "rules",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "), which updates a workspace's picture in response to "
                            },
                            {
                                "type": "text",
                                "text": "events",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". I plan to base the semantics of rules on logic programming. The end result will be something like \"nested Datalog\", though there is no literature that matches the model I described above.\nPicture topics replace the need to have a special notion of a statically-specified \"attribute\", because the topic can itself be any value. This should hopefully make meta-programming possible, but at the very least, I hope it leads to a very minimalist (and intuitive) semantics."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis is what prompted my question above: who are your target audience? Is this going to be intuitive to everyone, if it's non-techies you're after?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595508369.218700",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1595508383.000000"
        },
        "client_msg_id": "c25b8f7e-f666-4372-89ba-f85f0840b1f9",
        "text": "(iow maybe you could draw a diagram with examples! :smile: )",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6DiMz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(iow maybe you could draw a diagram with examples! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " )"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1595509502.219300",
        "client_msg_id": "bb11e0d4-4b09-4870-8e57-413115d5b404",
        "text": "<@UCGAK10LS> \"Has anyone...\" asked in the place where a good fraction of us have.  :wink:  After playing in this space for twenty years, I'm not a believer in an ideal model.  What is ideal will depend on the task at hand.  What is better is having systems that you can readily shift between.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sky=c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " \"Has anyone...\" asked in the place where a good fraction of us have.  "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            },
                            {
                                "type": "text",
                                "text": "  After playing in this space for twenty years, I'm not a believer in an ideal model.  What is ideal will depend on the task at hand.  What is better is having systems that you can readily shift between."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "laughing",
                "users": [
                    "UE6EFEPTQ"
                ],
                "count": 1
            },
            {
                "name": "amiga-tick",
                "users": [
                    "U014WA16VNJ",
                    "U9C92716C"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1595509697.219500",
        "client_msg_id": "77a03adc-62d1-4f4b-99e7-2f832cdedfd4",
        "text": "You know you're in bad programming place when a conceptually straightforward shift proves difficult.  On realizing that instead of having one of these things, you want to be able to shift between three different kinds. which will now require six months of developement work.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oa\/1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You know you're in bad programming place when a conceptually straightforward shift proves difficult.  On realizing that instead of having one of these things, you want to be able to shift between three different kinds. which will now require six months of developement work."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "U9C92716C"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1595509786.219700",
        "client_msg_id": "de806a1c-241c-417b-a366-36432e6142eb",
        "text": "Also today via Hacker News, I was pointed to Terry Tao talking about mathematical notation, which is of course a model for the underlying notions.  <https:\/\/mathoverflow.net\/questions\/366070\/what-are-the-benefits-of-writing-vector-inner-products-as-langle-u-v-rangle\/366118#366118>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "attachments": [
            {
                "service_name": "MathOverflow",
                "title": "What are the benefits of writing vector inner products as $\\langle u, v\\rangle$ as opposed to $u^T v$?",
                "title_link": "https:\/\/mathoverflow.net\/questions\/366070\/what-are-the-benefits-of-writing-vector-inner-products-as-langle-u-v-rangle\/366118#366118",
                "text": "In a lot of computational math, operations research, such as algorithm design for optimization problems and the like, authors like to use $$\\langle \\cdot, \\cdot \\rangle$$ as opposed to $$(\\cdot)^T ...",
                "fallback": "MathOverflow: What are the benefits of writing vector inner products as $\\langle u, v\\rangle$ as opposed to $u^T v$?",
                "thumb_url": "https:\/\/cdn.sstatic.net\/Sites\/mathoverflow\/Img\/apple-touch-icon@2.png?v=f1c9606b77ff",
                "from_url": "https:\/\/mathoverflow.net\/questions\/366070\/what-are-the-benefits-of-writing-vector-inner-products-as-langle-u-v-rangle\/366118#366118",
                "thumb_width": 316,
                "thumb_height": 316,
                "service_icon": "https:\/\/cdn.sstatic.net\/Sites\/mathoverflow\/Img\/apple-touch-icon.png?v=8c5ff8612fb4",
                "id": 1,
                "original_url": "https:\/\/mathoverflow.net\/questions\/366070\/what-are-the-benefits-of-writing-vector-inner-products-as-langle-u-v-rangle\/366118#366118"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Aei",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also today via Hacker News, I was pointed to Terry Tao talking about mathematical notation, which is of course a model for the underlying notions.  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/mathoverflow.net\/questions\/366070\/what-are-the-benefits-of-writing-vector-inner-products-as-langle-u-v-rangle\/366118#366118"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595509928.220000",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595509945.000000"
        },
        "client_msg_id": "dc35db2d-9aed-4dfa-8f81-2730314aea93",
        "text": "&gt; What are your measures of success? To be programmable by techies or normals?\nDefinitely \"normal people\". Unusual folks like us can focus on developing the infrastructure that implements humane programming systems. Of course there's still going to be concepts that need to be learned and practiced for a person to develop competence.\n&gt; Is this going to be intuitive to everyone, if it's non-techies you're after?\nOnce learned from effective teaching materials, and with the aid of effective visualisations, yes, I hope it will be intuitive. I actually think I can map it to everyday representations like nested dot points and tables. But first I have to figure out the semantics I want.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j8EkS",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What are your measures of success? To be programmable by techies or normals?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Definitely \"normal people\". Unusual folks like us can focus on developing the infrastructure that implements humane programming systems. Of course there's still going to be concepts that need to be learned and practiced for a person to develop competence.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is this going to be intuitive to everyone, if it's non-techies you're after?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Once learned from effective teaching materials, and with the aid of effective visualisations, yes, I hope it will be intuitive. I actually think I can map it to everyday representations like nested dot points and tables. But first I have to figure out the semantics I want."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595510222.220300",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595510256.000000"
        },
        "client_msg_id": "13d53eac-e989-4b04-b6f8-c081a8b3ffbe",
        "text": "<@UE6EFEPTQ>\n&gt; funny, can't think of an example of f(x,y) as a table\nThe data that people _store_ in a spreadsheet is usually tabular, but the spreadsheet _itself_, as a *graphical artifact*, is most certainly a function f(x,y) from row\/column number to datum. Navigating a spreadsheet using a keyboard requires locating successor\/predecessor cells within each axis. So a spreadsheet is perhaps better termed a *grid*, which one could argue is the generalization of a sequence to 2D.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/SFJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "funny, can't think of an example of f(x,y) as a table"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The data that people "
                            },
                            {
                                "type": "text",
                                "text": "store",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in a spreadsheet is usually tabular, but the spreadsheet "
                            },
                            {
                                "type": "text",
                                "text": "itself",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", as a "
                            },
                            {
                                "type": "text",
                                "text": "graphical artifact",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", is most certainly a function f(x,y) from row\/column number to datum. Navigating a spreadsheet using a keyboard requires locating successor\/predecessor cells within each axis. So a spreadsheet is perhaps better termed a "
                            },
                            {
                                "type": "text",
                                "text": "grid",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which one could argue is the generalization of a sequence to 2D."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595510415.220600",
        "client_msg_id": "67feb4fe-2cad-449e-adfb-cee500de4f4c",
        "text": "&gt; why non-hierarchical? how does that help with traversal termination?\nThose are orthogonal, but the reason for eschewing hierarchy is to avoid a situation where a user specifies a data structure, and later realises that they can't express the query they want because the data is \"ordered\" in the wrong way. Then they change the structure or add a new one. Hierarchical data structuring always leads to this pain.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gTG",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "why non-hierarchical? how does that help with traversal termination?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Those are orthogonal, but the reason for eschewing hierarchy is to avoid a situation where a user specifies a data structure, and later realises that they can't express the query they want because the data is \"ordered\" in the wrong way. Then they change the structure or add a new one. Hierarchical data structuring always leads to this pain."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1595511569.228600",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1595511605.000000"
        },
        "client_msg_id": "CE92C8D4-36E9-49DC-BE54-8A573B85B1A4",
        "text": "Been thinking about this problem for the last year or so, and I’ve ended up somewhere I didn’t intend so this may not be an answer you’ll like.\n\nI don’t think there is any single representation that has all the desirable properties you’re looking for, *but* not only do I think that’s okay, I think we can do even better by moving up a level and instead look for a representation that can itself represent the more desirable representations. If we take a hypergraph or metagraph, we can use it to represent sets, lists, trees and acyclic graphs, etc, etc. And thus can embed structures with desirable properties if we accept a base representation that has few if any of the properties we would like.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fzr4G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Been thinking about this problem for the last year or so, and I’ve ended up somewhere I didn’t intend so this may not be an answer you’ll like.\n\nI don’t think there is any single representation that has all the desirable properties you’re looking for, "
                            },
                            {
                                "type": "text",
                                "text": "but ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "not only do I think that’s okay, I think we can do even better by moving up a level and instead look for a representation that can itself represent the more desirable representations. If we take a hypergraph or metagraph, we can use it to represent sets, lists, trees and acyclic graphs, etc, etc. And thus can embed structures with desirable properties if we accept a base representation that has few if any of the properties we would like."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595512211.229000",
        "client_msg_id": "06bcb73a-3fdb-481d-b67b-45448e191872",
        "text": "We're gonna need some examples to chew on. :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hX270",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We're gonna need some examples to chew on. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1595513403.240000",
        "client_msg_id": "87843085-0609-4824-AFA3-58363A5C4080",
        "text": "I’ll pull out some references from my research library when I’m home, but in the meantime I’ll put a couple things forward. \n\nThere is a partial order to the generalisation of structures such that hypergraphs [1] are at the top, a subset of hypergraphs form a directed graph, a subset of directed graphs form an undirected graph, and this pattern follows down to trees, sets, lists, and so on.\n\nThere are many possible semantics for these structures and I’ve yet to see much work here as most of it is towards proving certain properties of these structures. Category theory provides useful properties but certainly doesn’t translate directly to nice semantics for an actual end-user system.\n\n\n1. This is not quite true, as metagraphs are more general though not yet well understood or defined. And also typed <https:\/\/rcor.me\/papers\/typed-graph-theory.pdf|graphs are more general than un-typed graphs>. (Sorry for all the Greek!)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dafx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ll pull out some references from my research library when I’m home, but in the meantime I’ll put a couple things forward. \n\nThere is a partial order to the generalisation of structures such that hypergraphs [1] are at the top, a subset of hypergraphs form a directed graph, a subset of directed graphs form an undirected graph, and this pattern follows down to trees, sets, lists, and so on.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "There are many possible semantics for these structures and I’ve yet to see much work here as most of it is towards proving certain properties of these structures. Category theory provides useful properties but certainly doesn’t translate directly to nice semantics for an actual end-user system.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n\n1. This is not quite true, as metagraphs are more general though not yet well understood or defined. And also typed "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/rcor.me\/papers\/typed-graph-theory.pdf",
                                "text": "graphs are more general than un-typed graphs"
                            },
                            {
                                "type": "text",
                                "text": ". (Sorry for all the Greek!)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1595513674.245300",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1595513710.000000"
        },
        "client_msg_id": "C550A1B0-1820-4C0A-B349-8ECB1A7CAE17",
        "text": "I’d add that I’m not proposing that this is the best way to interact with a system, and there are places where natural representations do not always fit in a machine-oriented way, such as functions, n-dimensional arrays, etc. But in these places there are natural representations that can be used in part to interact with them. I.e. representations of grammars for strings (not the data type, just ordered sets of symbols) along with logics, type systems, etc given an appropriate semantics and grammar.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "khQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’d add that I’m not proposing that this is the best way to interact with a system, and there are places where natural representations do not always fit in a machine-oriented way, such as functions, n-dimensional arrays, etc. But in these places there are natural representations that can be used in part to interact with them. I.e. representations of grammars for strings (not the data type, just ordered sets of symbols) along with logics, type systems, etc given an appropriate semantics and grammar."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595519560.246300",
        "client_msg_id": "2eab9bbd-b19f-41f3-b1ab-7613479453c5",
        "text": "<@U014WA16VNJ> Idk, I'm not really being sold on the hypergraph thing yet. I've never seen an information model based on manipulating graphs that feels \"good\" and \"intuitive\" for general-purpose applications, and if that's not your point, then I'm not sure what value you're proposing they have. Mathematical formalization takes a backseat to user experience in my world.\n\nAlso, I can actually model hypergraphs quite easily in the information model I briefly described above (labelled nested sets). I'm not sure why I'd want to, though.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7GHnz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " Idk, I'm not really being sold on the hypergraph thing yet. I've never seen an information model based on manipulating graphs that feels \"good\" and \"intuitive\" for general-purpose applications, and if that's not your point, then I'm not sure what value you're proposing they have. Mathematical formalization takes a backseat to user experience in my world.\n\nAlso, I can actually model hypergraphs quite easily in the information model I briefly described above (labelled nested sets). I'm not sure why I'd want to, though."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1595521463.256700",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1595521488.000000"
        },
        "client_msg_id": "5c023981-2de6-4243-ba3b-ed16f49c65ae",
        "text": "<@UCGAK10LS> he's saying that if you use hypergraphs as your canonical representation, all other structures are reduced to views and mutation rules over that hypergraph. This gets you the property that <@UA14TGLTC> was talking about that it is trivial to go from one representation to another. It also gives you the flexibility to create \"good\" and \"intuitive\" interfaces on top without changing the underlying model.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qSyc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " he's saying that if you use hypergraphs as your canonical representation, all other structures are reduced to views and mutation rules over that hypergraph. This gets you the property that "
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " was talking about that it is trivial to go from one representation to another. It also gives you the flexibility to create \"good\" and \"intuitive\" interfaces on top without changing the underlying model."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1595521567.258200",
        "client_msg_id": "64BD7DE1-CCC8-4304-885C-C296DFE6B418",
        "text": "<@UCGAK10LS> I agree, mathematical formalisations should take a backseat to user experience a lot of the time, and also agree manipulating graphs doesn’t feel good for general purpose applications, at least not yet. My point (which by all means you can ignore!) is that it may be useful to build the information model at a slightly higher level than your planned use-case, which may help de-emphasise finding a perfect representation which you may wish to tweak later.\n\nI think there’s lots of merit in sticking to your intuition and discovering the emergent properties of your system [1]\n\nI bring up these points mostly as exploratory, and to help support the idea of separating the model from the internal workings of computers or current computer systems.\n\n1. many great ideas happened this way, Unison for example discovered many great consequences only after deciding their basic principles of content-addressed immutable code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GRK2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " I agree, mathematical formalisations should take a backseat to user experience a lot of the time, and also agree manipulating graphs doesn’t feel good for general purpose applications, at least not yet. My point (which by all means you can ignore!) is that it may be useful to build the information model at a slightly higher level than your planned use-case, which may help de-emphasise finding a perfect representation which you may wish to tweak later.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "I think there’s lots of merit in sticking to your intuition and discovering the emergent properties of your system [1]\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "I bring up these points mostly as exploratory, and to help support the idea of separating the model from the internal workings of computers or current computer systems.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n1. many great ideas happened this way, Unison for example discovered many great consequences only after deciding their basic principles of content-addressed immutable code."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1595521749.259800",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1595521833.000000"
        },
        "client_msg_id": "7D508A70-8006-4C49-9786-BCD0905052C8",
        "text": "<@UEBG0NPDK> yes that’s exactly it, well put ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i2+sw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " yes that’s exactly it, well put "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1595522737.260600",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1595527173.000000"
        },
        "client_msg_id": "272e9306-0473-443c-830a-270e4762cb9c",
        "text": "if your goal is to go after end users and also be truly general purpose, I think you'll likely end up on a hypergraph. People do not naturally think in strict structures, they think in very loose, just in time structure. As several people have said in here, that means you need to flow seamlessly between representations and allow for partial\/incomplete ones to still be useful and to link to completely different views that color things in a bit more.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kMJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if your goal is to go after end users and also be truly general purpose, I think you'll likely end up on a hypergraph. People do not naturally think in strict structures, they think in very loose, just in time structure. As several people have said in here, that means you need to flow seamlessly between representations and allow for partial\/incomplete ones to still be useful and to link to completely different views that color things in a bit more."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1595522816.260900",
        "client_msg_id": "c2dc1386-f81b-4ad4-91d3-0a8c3af01ce9",
        "text": "This is what I've been thinking about for the last several years, and haven't gotten all that far. One of my goals is to provide an intermediate format for converting\/proxying between systems speaking different languages (immediately commercially useful and helps overcome network effects). I think my most interesting idea at the moment is that data is a program (under a suitably restricted interpreter), that outputs itself, or parts of itself identified by an argument (e.g. treating a hash map as a function from keys to values). This also helps with one of my long-standing goals to ease mixing of manually and procedurally generated data.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iS+O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is what I've been thinking about for the last several years, and haven't gotten all that far. One of my goals is to provide an intermediate format for converting\/proxying between systems speaking different languages (immediately commercially useful and helps overcome network effects). I think my most interesting idea at the moment is that data is a program (under a suitably restricted interpreter), that outputs itself, or parts of itself identified by an argument (e.g. treating a hash map as a function from keys to values). This also helps with one of my long-standing goals to ease mixing of manually and procedurally generated data."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "U9C92716C"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1595523083.261300",
        "client_msg_id": "6546d48b-6ffa-428a-a667-0edcd47ae24f",
        "text": "I thought about hypergraphs for a while, albeit when I was a lot younger and stupider, and my conclusion was that I'd rather go with a fundamental structure that makes it easy to implement hypergraphs. To me that looks more like a logic database or triple (tuple?) store.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MQfP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I thought about hypergraphs for a while, albeit when I was a lot younger and stupider, and my conclusion was that I'd rather go with a fundamental structure that makes it easy to implement hypergraphs. To me that looks more like a logic database or triple (tuple?) store."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1595523188.262600",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1595523437.000000"
        },
        "client_msg_id": "1FA77ECB-DAA5-4530-BE41-14E9F745B457",
        "text": "<@U016VUZGUUQ> that first goal of yours is one I’ve been pursuing for a while for the exact same reasons! Have you made progress you’d be willing to share?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P60My",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " that first goal of yours is one I’ve been pursuing for a while for the exact same reasons! Have you made progress you’d be willing to share?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1595524234.262900",
        "client_msg_id": "6a430586-0534-4a38-a072-877e1a2bb2b8",
        "text": "<@U014WA16VNJ> haha, not really. I've spent the last several years building up ideas and tearing them down when I realize they're not general enough. I am confident at this point that the data store needs to be an active participant to support things like API translation proxies, and that solving the problem of Naming Things is important (tracking identities referenced in different ways in different representations). Ask me again in a year. :D \n\nHave you already read the Functorial Data Migration peoole's work?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xjR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " haha, not really. I've spent the last several years building up ideas and tearing them down when I realize they're not general enough. I am confident at this point that the data store needs to be an active participant to support things like API translation proxies, and that solving the problem of Naming Things is important (tracking identities referenced in different ways in different representations). Ask me again in a year. :D \n\nHave you already read the Functorial Data Migration peoole's work?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL5AX4G2H",
        "type": "message",
        "ts": "1595528501.266600",
        "text": "This week on code faster, 2 good and one weird. Good #1 pullrequest, a company I occasionally review code for on a part time basis synidcated one of my posts! Good #2, Gradient Ventures (Google's VC arm) retweeted their syndication! Weird: I tried writing a more captivating title, \"jq features considered harmful\", but it didn't feel right after launch. I tried a few more and eventually felt happy with \"Avoid these 6 jq features\". Still looking for good resources on how to write a good title if anybody has suggestions",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b05739c44158",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-12-05\/1552783044467_b05739c44158d860f3bd_72.png",
            "first_name": "",
            "real_name": "Tyler Adams",
            "display_name": "Tyler Adams",
            "team": "T5TCAFTA9",
            "name": "coppero1237",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595528501.266600",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1595573579.300500",
        "reply_users": [
            "UC2A2ARPT",
            "U013KEPEJ2H",
            "UL5AX4G2H"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1595529702.267800"
            },
            {
                "user": "U013KEPEJ2H",
                "ts": "1595541751.276200"
            },
            {
                "user": "UL5AX4G2H",
                "ts": "1595573579.300500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DSlo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This week on code faster, 2 good and one weird. Good #1 pullrequest, a company I occasionally review code for on a part time basis synidcated one of my posts! Good #2, Gradient Ventures (Google's VC arm) retweeted their syndication! Weird: I tried writing a more captivating title, \"jq features considered harmful\", but it didn't feel right after launch. I tried a few more and eventually felt happy with \"Avoid these 6 jq features\". Still looking for good resources on how to write a good title if anybody has suggestions"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1595529545.267500",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1595529598.000000"
        },
        "client_msg_id": "FDE141D1-D348-4B47-82C4-52E33A51442C",
        "text": "<@U016VUZGUUQ> I hadn’t but will check it out, it looks compelling. I’m assuming <https:\/\/arxiv.org\/abs\/1009.1166|this> is the work you’re referring to?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "56E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " I hadn’t but will check it out, it looks compelling. I’m assuming "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/arxiv.org\/abs\/1009.1166",
                                "text": "this"
                            },
                            {
                                "type": "text",
                                "text": " is the work you’re referring to?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1595529702.267800",
        "client_msg_id": "1eeda2c3-d4c9-4e86-9821-63c1ad69249d",
        "text": "You should add a link to your post!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595528501.266600",
        "parent_user_id": "UL5AX4G2H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xq8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You should add a link to your post!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UP28ETUSE",
                    "U014WA16VNJ",
                    "UCUSW7WVD",
                    "UJ6LDMMN0",
                    "UHWC9PXBL"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1595530330.268000",
        "client_msg_id": "aa392b45-243f-45cc-a1ae-2b786d158229",
        "text": "<@U014WA16VNJ> yep. I think they've built a company on their ideas, too. IIRC they still had to do some weird hacks that made me think it needed more work to be nice to work with in the real world, but definitely interesting. I need to read them more closely at some point.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I4x0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " yep. I think they've built a company on their ideas, too. IIRC they still had to do some weird hacks that made me think it needed more work to be nice to work with in the real world, but definitely interesting. I need to read them more closely at some point."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1595531028.268400",
        "client_msg_id": "8568761a-ae44-40ee-a8be-ea8446239bb5",
        "text": "<@UC6997THT>\n&gt; I want to say all the parts are not there.\nRemember, this is \"Future of Code\", not \"Today of Code\".\n\nYou are giving more examples of finished products that are not all there.\nThese are good examples of what is not working right now, but none of these examples show any fundamental missing pieces for why a new flash like platform can't work.\n\nFrom a distribution perspective, I think all the technological pieces are there. Even before web assembly, I think the parts where there.\n\nThe death of flash is one of the big reasons web browsers started to grow the necessary features to replace flash(for better or worse). Web assembly might be the final piece, because it allows a single binary blob to be easily embedded and run. We just need to get better at compression (which is actively being worked on.)\n\n<@UC6997THT> My question for you is, if you think all the pieces are not there. What pieces do you think are missing? Not which product is missing, we wouldn't be having this discussion if a finished product already existed, but which technological or social pieces are missing?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gfZqy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I want to say all the parts are not there."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Remember, this is \"Future of Code\", not \"Today of Code\".\n\nYou are giving more examples of finished products that are not all there.\nThese are good examples of what is not working right now, but none of these examples show any fundamental missing pieces for why a new flash like platform can't work.\n\nFrom a distribution perspective, I think all the technological pieces are there. Even before web assembly, I think the parts where there.\n\nThe death of flash is one of the big reasons web browsers started to grow the necessary features to replace flash(for better or worse). Web assembly might be the final piece, because it allows a single binary blob to be easily embedded and run. We just need to get better at compression (which is actively being worked on.)\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": " My question for you is, if you think all the pieces are not there. What pieces do you think are missing? Not which product is missing, we wouldn't be having this discussion if a finished product already existed, but which technological or social pieces are missing?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1595531329.268700",
        "client_msg_id": "4c9c5c31-1bdf-4e39-9935-b08057e69729",
        "text": "I was thinking about this, and while it's very different in a lot of ways, I think the <https:\/\/www.lexaloffle.com\/pico-8.php|Pico-8> community has succeeded with a similar spirit to the old Flash games communities, even if it is a bit more niche and smaller scale.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "title": "PICO-8 Fantasy Console",
                "title_link": "https:\/\/www.lexaloffle.com\/pico-8.php",
                "text": "PICO-8 is a fantasy console for making, sharing and playing tiny games and other computer programs.",
                "fallback": "PICO-8 Fantasy Console",
                "image_url": "https:\/\/www.lexaloffle.com\/gfx\/p8tv_preview_orul.png",
                "from_url": "https:\/\/www.lexaloffle.com\/pico-8.php",
                "image_width": 579,
                "image_height": 250,
                "image_bytes": 337177,
                "service_icon": "https:\/\/www.lexaloffle.com\/favicon.ico",
                "service_name": "lexaloffle.com",
                "id": 1,
                "original_url": "https:\/\/www.lexaloffle.com\/pico-8.php"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5VQL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was thinking about this, and while it's very different in a lot of ways, I think the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.lexaloffle.com\/pico-8.php",
                                "text": "Pico-8"
                            },
                            {
                                "type": "text",
                                "text": " community has succeeded with a similar spirit to the old Flash games communities, even if it is a bit more niche and smaller scale."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UNBPP291C",
        "type": "message",
        "ts": "1595532317.269000",
        "client_msg_id": "d4d2e5d3-23c8-4114-9582-f8fc67d1c126",
        "text": "Oh, thanks to you guys I now know that what I was doing is a hypegraph :smile: IIRC my hypergraphy was basically a  store of mostly maps of &lt;ID, Value&gt; and &lt;Type\/Dimension\/GraphID, &lt;ID, NodeData&gt;&gt; . Guess I was calling it wrong the whole time :thinking_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcf29e340a09",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cf29e340a09ac08ae262632ef9101046.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Ian Rumac",
            "display_name": "Ian Rumac",
            "team": "T5TCAFTA9",
            "name": "ian.rumac",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hek4r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh, thanks to you guys I now know that what I was doing is a hypegraph "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " IIRC my hypergraphy was basically a  store of mostly maps of <ID, Value> and <Type\/Dimension\/GraphID, <ID, NodeData>> . Guess I was calling it wrong the whole time "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595532911.269200",
        "client_msg_id": "d4e0c32e-48e8-48ee-acc0-670eb4656635",
        "text": "I had to look up hypergraph, but I'm still confused about why it's not just the same modelling approach as .. JSON?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "teqAw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I had to look up hypergraph, but I'm still confused about why it's not just the same modelling approach as .. JSON?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595532933.269400",
        "client_msg_id": "c4fae4b9-6c7f-48a4-8cf5-b99046960a3d",
        "text": "Or really just relations.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lEQkA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Or really just relations."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1595534162.273000",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1595534650.000000"
        },
        "client_msg_id": "41E4710B-2A7F-4260-AB29-159B35BE3163",
        "text": "<@UE6EFEPTQ> Relational models impose some more strict structure over your data in the form of tables. In graphs and hypergraphs the vertices\/nodes and edges\/lines are first class citizens. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B+PUA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": " Relational models impose some more strict structure over your data in the form of tables. In graphs and hypergraphs the vertices\/nodes and edges\/lines are first class citizens. "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1595534317.273500",
        "client_msg_id": "0ab699db-e09a-4081-a096-22ba96f57e1c",
        "text": "relations in 6th normal form are a good practical representation for hypergraphs",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R4R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "relations in 6th normal form are a good practical representation for hypergraphs"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "amiga-tick",
                "users": [
                    "U014WA16VNJ",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UMWF81HTP",
        "type": "message",
        "ts": "1595535815.274100",
        "client_msg_id": "41893153-615a-4fbe-b5df-23a0032e9038",
        "text": "Yeah I mean, there is a value esp. in the physical events. And I don't want to discount the individual moral calculus people are making in their heads when they decide to participate, which I think is often quite sophisticated, and perhaps a lot of what I wrote is more of a reaction to my own past naivety toward these events(and I think, there is some unnecessary paternalism in my original post I should reflect on...).\n\nMy intuition is that the computing community in general would be healthier tho if there was a bigger focus on community-driven jams than corporate hackathons, but I need to do more research and thinking to substantiate this.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4022671f3400",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-03\/775814402657_4022671f340032b9eb75_72.jpg",
            "first_name": "yoshiki",
            "real_name": "yoshiki",
            "display_name": "yoshiki",
            "team": "T5TCAFTA9",
            "name": "yoshikischmitz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595355834.085400",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XseNs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah I mean, there is a value esp. in the physical events. And I don't want to discount the individual moral calculus people are making in their heads when they decide to participate, which I think is often quite sophisticated, and perhaps a lot of what I wrote is more of a reaction to my own past naivety toward these events(and I think, there is some unnecessary paternalism in my original post I should reflect on...).\n\nMy intuition is that the computing community in general would be healthier tho if there was a bigger focus on community-driven jams than corporate hackathons, but I need to do more research and thinking to substantiate this."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1595538403.275000",
        "client_msg_id": "cc61175f-00ca-495e-a298-02152c135a0b",
        "text": "So what about a Future of Coding jam driven by the community and sponsored by... Replit? :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595355834.085400",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CC6k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So what about a Future of Coding jam driven by the community and sponsored by... Replit? "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1595539274.275300",
        "client_msg_id": "626bcb65-886b-41a8-879c-72ee91103e45",
        "text": "More seriously, there is something interesting in the Replit announce:\n&gt; If languages are mediums of thought, and there are more and more people interested in expressing themselves digitally, shouldn't we expect to see many more types of languages?\nand later:\n&gt; Programming languages are undoubtedly hard to make. They require a combination of design skills and technical chops. But for some reason, language designers are typically solo hackers. But what if we made programming languages easier to make? If we showed that it is possible for anyone, even those with limited experience, perhaps especially beginners, can create and experiment with languages? Wouldn’t we get a lot more exciting and fresh ideas?\nIt is true that few people try to create language. And I guess it would be good it was different. As an example, I thought about trying to actually do it myself after years of programming. I guess I felt unlegitimate to do so before.\n\nBut, of course now I see it can be fun (and that you can even learn thing from it). In fact during workshops with kids sometime we start approaching programming by asking them to create programming languages: one kid plays the role of a robot that has to move on a landscape and an other kid writes down some \"formal instructions\" of her invention on a paper, and the robot-kid follows the instructions to reach a particular place of the landscape.\n\nSo I agree with Replit that it would be nice if creating languages was easier and more widespread.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595355834.085400",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YxP\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More seriously, there is something interesting in the Replit announce:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If languages are mediums of thought, and there are more and more people interested in expressing themselves digitally, shouldn't we expect to see many more types of languages?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and later:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Programming languages are undoubtedly hard to make. They require a combination of design skills and technical chops. But for some reason, language designers are typically solo hackers. But what if we made programming languages easier to make? If we showed that it is possible for anyone, even those with limited experience, perhaps especially beginners, can create and experiment with languages? Wouldn’t we get a lot more exciting and fresh ideas?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It is true that few people try to create language. And I guess it would be good it was different. As an example, I thought about trying to actually do it myself after years of programming. I guess I felt unlegitimate to do so before.\n\nBut, of course now I see it can be fun (and that you can even learn thing from it). In fact during workshops with kids sometime we start approaching programming by asking them to create programming languages: one kid plays the role of a robot that has to move on a landscape and an other kid writes down some \"formal instructions\" of her invention on a paper, and the robot-kid follows the instructions to reach a particular place of the landscape.\n\nSo I agree with Replit that it would be nice if creating languages was easier and more widespread."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013KEPEJ2H",
        "type": "message",
        "ts": "1595541751.276200",
        "client_msg_id": "6658ec08-b197-4d8e-be28-4d3799953be1",
        "text": "<@UL5AX4G2H> title 1 sounds like a title from pre 2018, and title 2 sounds like a title from post 2018 (for better or worse) :stuck_out_tongue: it's interesting that kind of phrasing totally developed out of clickbait marketing but seeing it in increasingly reputable news services now too...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g39a9a5b84f2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/39a9a5b84f2368eac912ccb4a657ee5a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "",
            "real_name": "tj",
            "display_name": "tj",
            "team": "T5TCAFTA9",
            "name": "t22james",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595528501.266600",
        "parent_user_id": "UL5AX4G2H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oM7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UL5AX4G2H"
                            },
                            {
                                "type": "text",
                                "text": " title 1 sounds like a title from pre 2018, and title 2 sounds like a title from post 2018 (for better or worse) "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": " it's interesting that kind of phrasing totally developed out of clickbait marketing but seeing it in increasingly reputable news services now too..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1595548803.276700",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1595548827.000000"
        },
        "client_msg_id": "e12f501b-acbe-4f6d-bd33-78e2ce727e80",
        "text": "People don’t get Rx \/ eventStreams :stuck_out_tongue_winking_eye: &amp; FRP",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rvE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "People don’t get Rx \/ eventStreams "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue_winking_eye",
                                "unicode": "1f61c"
                            },
                            {
                                "type": "text",
                                "text": " & FRP"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USH01JEDQ",
        "type": "message",
        "ts": "1595549112.277200",
        "client_msg_id": "b2f3650b-db8c-443e-bdc8-2a0f603ea319",
        "text": "that's so 2018, devs can only collectively swoon over one thing at a time, now it's CRDTs",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "854f96b690f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-17\/6370745671793_854f96b690f51d1266ee_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Galtenberg",
            "display_name": "Chris G",
            "team": "T5TCAFTA9",
            "name": "galtenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hm6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that's so 2018, devs can only collectively swoon over one thing at a time, now it's CRDTs"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "joy",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1595550284.277800",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1595550571.000000"
        },
        "client_msg_id": "d16026e2-72c5-4d15-a9be-6eaf56e2b230",
        "text": "<@UCUSW7WVD> Hah, you are reading my mind! These are my top priorities as well!\n\nI’d add that, which is remained unsolved to me in the past years, and maybe this is the main driver behind all of my research:\n*Be ready to change\/delete any part of the code any time!*\n\nMixing it with your 2nd (controlling evo) and 4th (controlling deps) point:\n\n*avoid broken abstractions*\n *- AKA -* \n*don’t write (or evolve to!) code which forces you to delete more (prod+test) code than neccesary (in case of new requirements)* \n*- AKA -* \n*eliminate God Objects (don’t even let them birth!)*\n*-AKA -* \n*Minimal surface: don’t make available any data in any given scope you don’t use =&gt; if you do, you are creating a God object and you have to REIMPLEMENT the stuff after deleting the nighmare and all of its connections.*\n\nSure it is an obvious idea to do that, but hard\/impossible(!!!) to do without the correct level of abstractions (I think anything “below eventStreams”).\n\nTo me it seems like we might need some level of redundancy to get there, but I’d pay that price if I can make sure the freaking God object and spaghetti bs goes away…\n\nThis is just a deep intuition at this time, but I’ll update on that later.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593722002.162200",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0Wtn4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Hah, you are reading my mind! These are my top priorities as well!\n\nI’d add that, which is remained unsolved to me in the past years, and maybe this is the main driver behind all of my research:\n"
                            },
                            {
                                "type": "text",
                                "text": "Be ready to change\/delete any part of the code any time!",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nMixing it with your 2nd (controlling evo) and 4th (controlling deps) point:\n\n"
                            },
                            {
                                "type": "text",
                                "text": "avoid broken abstractions",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": " - AKA - ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "don’t write (or evolve to!) code which forces you to delete more (prod+test) code than neccesary (in case of new requirements) ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "- AKA - ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "eliminate God Objects (don’t even let them birth!)",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "-AKA - ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Minimal surface: don’t make available any data in any given scope you don’t use => if you do, you are creating a God object and you have to REIMPLEMENT the stuff after deleting the nighmare and all of its connections.",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nSure it is an obvious idea to do that, but hard\/impossible(!!!) to do without the correct level of abstractions (I think anything “below eventStreams”).\n\nTo me it seems like we might need some level of redundancy to get there, but I’d pay that price if I can make sure the freaking God object and spaghetti bs goes away…\n\nThis is just a deep intuition at this time, but I’ll update on that later."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1595550375.278000",
        "client_msg_id": "fbf616f2-c155-4083-b7fc-379f2af4e3b1",
        "text": "It was CRDTs in 2010, too ;)\n\nOr maybe, like the hipster who burnt their mouth on the pizza, I was into CRDTs before they were cool.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IJO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It was CRDTs in 2010, too ;)\n\nOr maybe, like the hipster who burnt their mouth on the pizza, I was into CRDTs before they were cool."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UL3CJ7YKC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1595551088.278600",
        "client_msg_id": "e88c000f-00ea-4557-8920-f0d1f3d76cf6",
        "text": "Amazing thread. Been slow churning on this for years with nothing to show for it. Anyway, recently found this paper which may be of interest - tries to define a 'conceptual graph' that represents info of how the user sees it, without the storage representation details: <https:\/\/pdfs.semanticscholar.org\/2ae6\/ac8fc13710d9c086c0e5cb952eef52c9b3cd.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YYav",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Amazing thread. Been slow churning on this for years with nothing to show for it. Anyway, recently found this paper which may be of interest - tries to define a 'conceptual graph' that represents info of how the user sees it, without the storage representation details: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/pdfs.semanticscholar.org\/2ae6\/ac8fc13710d9c086c0e5cb952eef52c9b3cd.pdf"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USH01JEDQ",
        "type": "message",
        "ts": "1595551790.279000",
        "client_msg_id": "82873568-ac48-4d5c-a015-b9f030b12304",
        "text": "You probably were all about FRP in 2009 - so tell us about 2028 Ivan",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "854f96b690f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-17\/6370745671793_854f96b690f51d1266ee_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Galtenberg",
            "display_name": "Chris G",
            "team": "T5TCAFTA9",
            "name": "galtenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "01D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You probably were all about FRP in 2009 - so tell us about 2028 Ivan"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1595552295.284400",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1595552617.000000"
        },
        "client_msg_id": "095bb152-ee71-4aff-9547-c1e408be64fd",
        "text": "<@UCGAK10LS> I’ve been thinking about similar things for a while.\n\nWhat I see now is (obviously?) graphs are the only, truly extendable &amp; fractal like structures.\n\nFractal like: which also means the minimum we can do with the “Graph Information” on a the “simplest level” is also the maximum we can do with it on “higher levels”. With that in mind I feel like the direction to is to build “Views” on the top of the “Graph Information” - which Views themselves are going to be Graph based entities. Also, we can say these Views would act like filters to reduce the noise of “all information” and deliver the proper context.\n\nSo after that, my answer is: just simple, pure Graphs, but a new question arises: how to build Views on them - even on multiple levels…\n\nI just don’t see ANY other idea which can’t be translated to that approach. It seems to me it’s the alpha and omega.\n\nIt’s not accidental RDF node-edge-node triplets and stuff like that emerged and ontology is full of that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4qIyT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " I’ve been thinking about similar things for a while.\n\nWhat I see now is (obviously?) graphs are the only, truly extendable & fractal like structures.\n\nFractal like: which also means the minimum we can do with the “Graph Information” on a the “simplest level” is also the maximum we can do with it on “higher levels”. With that in mind I feel like the direction to is to build “Views” on the top of the “Graph Information” - which Views themselves are going to be Graph based entities. Also, we can say these Views would act like filters to reduce the noise of “all information” and deliver the proper context.\n\nSo after that, my answer is: just simple, pure Graphs, but a new question arises: how to build Views on them - even on multiple levels…\n\nI just don’t see ANY other idea which can’t be translated to that approach. It seems to me it’s the alpha and omega.\n\nIt’s not accidental RDF node-edge-node triplets and stuff like that emerged and ontology is full of that."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1595552328.285500",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1595564573.000000"
        },
        "client_msg_id": "A07402EC-9C92-43AC-B3F1-035B0ED76930",
        "text": "this thread is amazing. i’ve been working on this since i started hoarding popular science magazines in middle school and wanted a way to organize them lmao. lately i’ve become convinced that whatever structure you settle on is going to have to be expected to be in an “incomplete” state, and that there’s some kind of dual relationship between data and computation that needs to be leveraged (thinking about issues like caches and garbage collection as a UX feature rather than an infrastructure bug). i’m working on a really stupid version of this stuff in json and will be posting in <#CCL5VVBAN|share-your-work> and <#C0120A3L30R|two-minute-week>, and i would be delighted if any of the people in this thread ruthlessly criticize where i end up!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DVX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this thread is amazing. i’ve been working on this since i started hoarding popular science magazines in middle school and wanted a way to organize them lmao. lately i’ve become convinced that whatever structure you settle on is going to have to be expected to be in an “incomplete” state, and that there’s some kind of dual relationship between data and computation that needs to be leveraged (thinking about issues like caches and garbage collection as a UX feature rather than an infrastructure bug). i’m working on a really stupid version of this stuff in json and will be posting in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CCL5VVBAN"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C0120A3L30R"
                            },
                            {
                                "type": "text",
                                "text": ", and i would be delighted if any of the people in this thread ruthlessly criticize where i end up!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "sunglasses",
                "users": [
                    "UA14TGLTC",
                    "ULK0Z4MPV"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "U014WA16VNJ",
                    "U9C92716C"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1595553102.286100",
        "client_msg_id": "12f8fcc1-4211-4bf5-ac78-f67293854752",
        "text": "Still, I think this is a real issue preventing progress. Sorry. :&lt; :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mkh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Still, I think this is a real issue preventing progress. Sorry. :< "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1595554174.286700",
        "client_msg_id": "6b30e8fb-d9ca-4136-954d-b774304d0d2a",
        "text": "When <@UEBG0NPDK> says \"6th normal form,\" it more or less means \"all hash tables\" with array keys as needed and does a great job of capturing the dependencies of the form for every ___ and ___, you can have a ___.  Correct me if I'm way off base.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C\/0GH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When "
                            },
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " says \"6th normal form,\" it more or less means \"all hash tables\" with array keys as needed and does a great job of capturing the dependencies of the form for every ___ and ___, you can have a ___.  Correct me if I'm way off base."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1595554975.287000",
        "client_msg_id": "e2e6bd92-dbb3-498b-85e7-7682471763ae",
        "text": "Yep! You can also think of it as triples where the entity can be a composite key. This gets you to true atomic units of data, reducing any further would cause information to be lost. The important thing that this captures is properties on hyperedges - e.g. something like marriage where the key would be two people and maybe the value would be the date or number of people in attendance.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tPtd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yep! You can also think of it as triples where the entity can be a composite key. This gets you to true atomic units of data, reducing any further would cause information to be lost. The important thing that this captures is properties on hyperedges - e.g. something like marriage where the key would be two people and maybe the value would be the date or number of people in attendance."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595555333.287200",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595555453.000000"
        },
        "client_msg_id": "7b03f2db-fd18-4db3-a305-98e0541cfefe",
        "text": "I think my \"nested labelled sets\" conception is just a particular manifestation of a 6NF DB, with the only difference being it has a notion of *scope* and *modularity* that allows you to easily shuffle chunks of data around. <@UEBG0NPDK> this is like your scope-limiting ~bag~ \"database\" notion in Eve (I re-checked the name), except you can nest them inside each other.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o0awc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think my \"nested labelled sets\" conception is just a particular manifestation of a 6NF DB, with the only difference being it has a notion of "
                            },
                            {
                                "type": "text",
                                "text": "scope",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "modularity",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that allows you to easily shuffle chunks of data around. "
                            },
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " this is like your scope-limiting "
                            },
                            {
                                "type": "text",
                                "text": "bag",
                                "style": {
                                    "strike": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " \"database\" notion in Eve (I re-checked the name), except you can nest them inside each other."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1595555567.287500",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1595555618.000000"
        },
        "client_msg_id": "4ee52e60-0d0b-4344-b147-700e5c36a103",
        "text": "yeah, we ended up calling them databases. We regretted adding them and removed them right after 0.2. The problem was that it became very confusing to figure out where things were and should be. Namespaced tags\/attributes ended up working much better for us.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lxP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah, we ended up calling them databases. We regretted adding them and removed them right after 0.2. The problem was that it became very confusing to figure out where things were and should be. Namespaced tags\/attributes ended up working much better for us."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595555692.287800",
        "client_msg_id": "12ddd109-a0f0-495d-923a-804d244fc93e",
        "text": "You have to have a boundary at some point though right? If your PL supports distributed apps you don't want to accidentally query some fact from a server in some Japanese village somewhere. At what point do you hit a \"bucket\" of data?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gJmQI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You have to have a boundary at some point though right? If your PL supports distributed apps you don't want to accidentally query some fact from a server in some Japanese village somewhere. At what point do you hit a \"bucket\" of data?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1595555816.288000",
        "client_msg_id": "7d1a4be6-1d2d-4850-b812-dbab5eed3a9b",
        "text": "you would bring those in as namespaced tags, so #foo vs #japanese-village\/foo",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kvS2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you would bring those in as namespaced tags, so #foo vs #japanese-village\/foo"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595555851.288200",
        "client_msg_id": "635a5e85-7416-479e-9d6e-46c30acccd18",
        "text": "And every query must draw facts from a specific namespace?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "93pc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And every query must draw facts from a specific namespace?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1595555899.288400",
        "client_msg_id": "6a8346a8-2179-4b15-9987-09b81c631c13",
        "text": "you can arbitrarily union them together within a query, you can also bind them to some common tag and just query that tag",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3fuh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you can arbitrarily union them together within a query, you can also bind them to some common tag and just query that tag"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595556015.288600",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595556135.000000"
        },
        "client_msg_id": "470b0159-8d73-4d8c-9181-b3fc851caca2",
        "text": "Isn't that the same as an Eve 0.2 \"database\" if you add the ability to make the database a variable? That would emulate the latter capability you mentioned anyway.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PntY0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Isn't that the same as an Eve 0.2 \"database\" if you add the ability to make the database a variable? That would emulate the latter capability you mentioned anyway."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595556408.288900",
        "client_msg_id": "0c2e6904-cbf7-4df9-bed3-ac43f1e8f19b",
        "text": "I guess I'm trying to understand this problem you mentioned:\n&gt; it became very confusing to figure out where things were and should be\nI don't quite understand how this could be a serious problem. I'm no fan of hierarchical organisation in file systems, but a _little bit_ of hierarchy is good for modularity, which you really need in any distributed system.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p++",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess I'm trying to understand this problem you mentioned:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it became very confusing to figure out where things were and should be"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't quite understand how this could be a serious problem. I'm no fan of hierarchical organisation in file systems, but a "
                            },
                            {
                                "type": "text",
                                "text": "little bit",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of hierarchy is good for modularity, which you really need in any distributed system."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1595556418.289100",
        "client_msg_id": "d4a9ffd9-6220-4e5f-8da5-a0003473b167",
        "text": "We should probably split this off so as to not derail the conversation further. The difference is largely in how people approach the two mechanisms. One is just a more specific name, the other is an actual place. We, ourselves, pretty consistently made mistakes about which place to query and write into, but we didn't experience the same problems with more specific names. Part of the difference is also how you selected a database in Eve (declaring it at the search\/bind level) which made unions pretty awkward. That one's not at all fundamental and you could've chosen something else, but I suspect it would look a lot like namespaced tags if you did.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0kO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We should probably split this off so as to not derail the conversation further. The difference is largely in how people approach the two mechanisms. One is just a more specific name, the other is an actual place. We, ourselves, pretty consistently made mistakes about which place to query and write into, but we didn't experience the same problems with more specific names. Part of the difference is also how you selected a database in Eve (declaring it at the search\/bind level) which made unions pretty awkward. That one's not at all fundamental and you could've chosen something else, but I suspect it would look a lot like namespaced tags if you did."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1595556502.289300",
        "client_msg_id": "e16ea5bb-c3f7-4fda-b2f9-eab1e0b0cb95",
        "text": "It's easy to forget the database name, or forget to change it when you copy a block over, for example. And the bugs that result from that are pretty hard to understand without some nicer tooling.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EZsm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's easy to forget the database name, or forget to change it when you copy a block over, for example. And the bugs that result from that are pretty hard to understand without some nicer tooling."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595556744.290800",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595571086.000000"
        },
        "client_msg_id": "0f2bb814-5471-4226-87f7-e20c5ab22632",
        "text": "Question: Can *modularity* (drawing sensible \"boundaries\" between units of code and\/or data) be achieved without *hierarchy*? Discuss. :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "reply_count": 21,
        "reply_users_count": 7,
        "latest_reply": "1595641955.007500",
        "reply_users": [
            "UAVCC2X70",
            "UCGAK10LS",
            "UCUSW7WVD",
            "UDQBTJ211",
            "U5STGTB3J",
            "UHDQ62M4P",
            "UKP3B2J5D"
        ],
        "replies": [
            {
                "user": "UAVCC2X70",
                "ts": "1595558045.291600"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595558311.291800"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595558419.292000"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1595558598.292300"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1595559316.293000"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1595559858.293400"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1595560157.293700"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1595560359.294200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1595561281.294400"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595568823.295200"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595569295.295700"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595569610.296200"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595569632.296400"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1595576988.300900"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1595584897.320400"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1595615267.444100"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1595622443.447600"
            },
            {
                "user": "UKP3B2J5D",
                "ts": "1595626800.480700"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1595626941.480900"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1595639800.006100"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1595641955.007500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NWqi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Question: Can "
                            },
                            {
                                "type": "text",
                                "text": "modularity",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (drawing sensible \"boundaries\" between units of code and\/or data) be achieved without "
                            },
                            {
                                "type": "text",
                                "text": "hierarchy",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? Discuss. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1595558045.291600",
        "client_msg_id": "a23a22d9-052e-4032-b438-8942a858ff1c",
        "text": "Modularity (separating things into separate \"wholes\") is not necessarily related to there being any hierarchy. I think a lot of hierarchy comes into trying to shove like things into a \"common base\" and then subclass. But on that matter I'll just say: composition over inheritance, interfaces over subclasses, labels over a tree. \"A city is not a tree\". Some things fit multiple categories, or can play multiple roles, and that does not slice cleanly into exclusive buckets",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dTJd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Modularity (separating things into separate \"wholes\") is not necessarily related to there being any hierarchy. I think a lot of hierarchy comes into trying to shove like things into a \"common base\" and then subclass. But on that matter I'll just say: composition over inheritance, interfaces over subclasses, labels over a tree. \"A city is not a tree\". Some things fit multiple categories, or can play multiple roles, and that does not slice cleanly into exclusive buckets"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "UKP3B2J5D",
                    "U013ZLJARC7",
                    "U014WA16VNJ",
                    "UJ6LDMMN0"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595558311.291800",
        "client_msg_id": "f4009be2-7315-4f03-9a9e-8d08dfcde4b9",
        "text": "Traditional approaches to modularity certainly induce hierarchy. In a typical program you have \"modules\" containing \"functions\" containing nested functions, loops, or other kinds of scopes. And that has nothing to do with OOP!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nj5uN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Traditional approaches to modularity certainly induce hierarchy. In a typical program you have \"modules\" containing \"functions\" containing nested functions, loops, or other kinds of scopes. And that has nothing to do with OOP!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595558419.292000",
        "client_msg_id": "0f002f9c-644d-4089-bcd5-4fff3b794ff7",
        "text": "I'm discovering how complicated a question this is. I'm not even ready to provide a response myself yet! I'll respond a bit later :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K0j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm discovering how complicated a question this is. I'm not even ready to provide a response myself yet! I'll respond a bit later "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1595558598.292300",
        "client_msg_id": "98d1fc38-5976-4f57-838f-ad1939dfb19d",
        "text": "Anyway, breaking things into parts does NOT mean you have modularity -- less likely if there's a hierarchy involved.\n\nModularity is about how \"whole\" those pieces are: Do they make sense in isolation, or are they highly dependent \/ interconnected with each other?\n\nI'll add more in a bit, I have to step away",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "awjeY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyway, breaking things into parts does NOT mean you have modularity -- less likely if there's a hierarchy involved.\n\nModularity is about how \"whole\" those pieces are: Do they make sense in isolation, or are they highly dependent \/ interconnected with each other?\n\nI'll add more in a bit, I have to step away"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595558764.292500",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595579109.000000"
        },
        "client_msg_id": "50fce442-5edb-49db-bcd1-af4a3bccbde5",
        "text": "I think \"namespaced tags\" and buckets\/databases only diverge in meaning in the presence of mutation (changing values). I'll discuss that in this thread (once I think it over further): <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1595571049299600>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1595556744290800",
                "fallback": "[July 23rd, 2020 7:12 PM] nmsmith65: Question: Can *modularity* (separation of concerns) be achieved without *hierarchy*? Can *tags* serve the same role as data *buckets*? Discuss. :slightly_smiling_face:",
                "ts": "1595556744.290800",
                "author_id": "UCGAK10LS",
                "author_subname": "Nick Smith",
                "channel_id": "C5T9GPWFL",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "text": "Question: Can *modularity* (separation of concerns) be achieved without *hierarchy*? Can *tags* serve the same role as data *buckets*? Discuss. :slightly_smiling_face:",
                "author_name": "Nick Smith",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/UCGAK10LS",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2020-04-17\/1092364753072_770c193fd379ebbced3f_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1595556744290800",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XHAnQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think \"namespaced tags\" and buckets\/databases only diverge in meaning in the presence of mutation (changing values). I'll discuss that in this thread (once I think it over further): "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1595571049299600"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1595559316.293000",
        "client_msg_id": "21311744-8b2b-40ca-87e3-15c770a4d387",
        "text": "Each module should be it's own world -- not a fragment of a larger picture. However, it may be an inhabitant of a larger world, or may have inhabitants of its own. But it should have no knowledge of the outside world, or of the inside world of its inhabitants. It may know if the interface-boundary of its inhabitants, but without their knowledge.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Uap",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Each module should be it's own world -- not a fragment of a larger picture. However, it may be an inhabitant of a larger world, or may have inhabitants of its own. But it should have no knowledge of the outside world, or of the inside world of its inhabitants. It may know if the interface-boundary of its inhabitants, but without their knowledge."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1595559858.293400",
        "client_msg_id": "d48f66ce-7a9e-4614-9dcd-07a186e85904",
        "text": "So for example, a Car may have an engine and doors and wheels, and might have behaviors (methods) like drive forward, turn left, etc. But \"pick up the kids at noon\" is NOT part of a Car, but part of a bigger scenario that may *contain* a car. That scenario would know that the car can drive and turn, etc., but it's naive to how the car actually does it.\n\nSometimes there's the illusion of modularity in software, where a larger behavior is handed off from one thing to the next; but that's not modularity, because you pull one thing out of the pipeline, and you've broken that overall behavior. Generally speaking, you want \"vertical\" slicing, not horizontal. So instead of A hands off to B hands off to C (which slices what should be one while picture into fragments), you instead have the whole flow exist as one whole thing, and it may call down into A, B, and C. But for example, the code that updates your database should not \"know\" that it's supposed to do that after the user clicks a button.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fTAp=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So for example, a Car may have an engine and doors and wheels, and might have behaviors (methods) like drive forward, turn left, etc. But \"pick up the kids at noon\" is NOT part of a Car, but part of a bigger scenario that may "
                            },
                            {
                                "type": "text",
                                "text": "contain",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " a car. That scenario would know that the car can drive and turn, etc., but it's naive to how the car actually does it.\n\nSometimes there's the illusion of modularity in software, where a larger behavior is handed off from one thing to the next; but that's not modularity, because you pull one thing out of the pipeline, and you've broken that overall behavior. Generally speaking, you want \"vertical\" slicing, not horizontal. So instead of A hands off to B hands off to C (which slices what should be one while picture into fragments), you instead have the whole flow exist as one whole thing, and it may call down into A, B, and C. But for example, the code that updates your database should not \"know\" that it's supposed to do that after the user clicks a button."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1595560157.293700",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1595560301.000000"
        },
        "client_msg_id": "c0c66035-c100-4096-80b6-2d3573ae0005",
        "text": "One clear indicator of broken modularity is when something tries to \"happen at the right time\" (rather than just letting the outer environment call into it as needed). This can look like event listeners, AOP, pipelines, or components communicating indirectly with each other through some \"mediator\" or \"command\" pattern. Those things can have their place, but if it's to split apart a larger whole, rather than to incorporate multiple unrelated whole things that don't need to work together, than that's not modularity: you're going to have to reverse engineer everything and trace the cause and effect all over the place, to really understand what's happening in that code, and you're opening the door for race conditions and unexpected breakages when things change. The whole point of modularity is to make it easy to understand and change things.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U9G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One clear indicator of broken modularity is when something tries to \"happen at the right time\" (rather than just letting the outer environment call into it as needed). This can look like event listeners, AOP, pipelines, or components communicating indirectly with each other through some \"mediator\" or \"command\" pattern. Those things can have their place, but if it's to split apart a larger whole, rather than to incorporate multiple unrelated whole things that don't need to work together, than that's not modularity: you're going to have to reverse engineer everything and trace the cause and effect all over the place, to really understand what's happening in that code, and you're opening the door for race conditions and unexpected breakages when things change. The whole point of modularity is to make it easy to understand and change things."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "UKP3B2J5D",
                    "UJ6LDMMN0"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1595560359.294200",
        "client_msg_id": "98b59345-0410-47fd-b700-03cc248c9455",
        "text": "... I've thought a lot about this before :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qSoS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "... I've thought a lot about this before :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1595561281.294400",
        "client_msg_id": "8ce4a332-cd35-48db-b48b-3329f8440f25",
        "text": "You can see a program as a hierarchy of modules and scopes, or you can see it as a network of scopes calling other scopes. Which is more important? The hierarchy doesn't feel like the important piece here.\n\nOn a different note, there's a common idiom of decomposing programs into layers (MVC, app\/lib\/kernel, etc.) That's arguably a hierarchical organization even though there's no containment. The network is a DAG, and it has a definite 'grain' to it. This feels like an important lens. Arguably here we already have tags, in the form of providers and so on.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OnprR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You can see a program as a hierarchy of modules and scopes, or you can see it as a network of scopes calling other scopes. Which is more important? The hierarchy doesn't feel like the important piece here.\n\nOn a different note, there's a common idiom of decomposing programs into layers (MVC, app\/lib\/kernel, etc.) That's arguably a hierarchical organization even though there's no containment. The network is a DAG, and it has a definite 'grain' to it. This feels like an important lens. Arguably here we already have tags, in the form of providers and so on."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1595567306.294900",
        "client_msg_id": "5c689d42-6879-4cd1-af05-cfc2c797db84",
        "text": "I said above I think being able to distribute in one file *might* be a reason things haven't happened. So that feature is missing. WASM doesn't work with one file. In fact typically it's min 3 files not including assets. One HTML file, one script with all the JS&lt;-&gt;WASM glue. One wasm file.\n\nPico-8 has definitely has some of the vibe of flash games but it's a way higher barrier to entry than flash ever was. There's no doing anything in Pico-8 without code but there was plenty of flash with no or minimal code.\n\nSo I think 4 things are missing\n\n1. being able to distribute as a single file. not entirely sure this is important but feel it's possible it is important\n2. being able to stream the assets from that single file vs having to wait for the entire file to download. If 1 is important than so is this.\n3. working well on mobile in the browser (this is only semi-possible because Apple has so far refused to implement the needed APIs. In particular the fullscreen API so a webpage can go fullscreen (or close to it ) like a native app can and the orientation API so a webpage can force landscape view. Android Chrome\/Firefox has had both of these for 6+ years and it hasn't ruined the browsing experience there.\n4. A well designed non-programmer friendly app for making things\nI also feel it really is about the app. Unity and Unreal are not doing anything that game engines didn't do in 2003 but the fact that they package it all up so a non-programmer can build a Dear Esther type of game with no programming or even with a little programming is what made current explosion of games.\n\nThe same was true for flash IMO. It wasn't just that the tech existed. It's that there was an app that let people easily use tech to make stuff.\n\nIt could also be though the flash was just something that happened and it's time has passed. I found this site yesterday\n\n<http:\/\/poki.com\/>\n\nIt's got a ton of games that seem right out of the flash days except with higher-res art :stuck_out_tongue:\n\nalso <https:\/\/itch.io> is full indie games and many run in the browser, though likely desktop only unfortunately.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "title": "Online Games on Poki",
                "title_link": "http:\/\/poki.com\/",
                "text": "On Poki you can play free online games at school or at home. Poki has the best online game selection and offers the most fun experience to play alone or with friends. We support :iphone: and :desktop_computer: games.",
                "fallback": "Online Games on Poki",
                "from_url": "http:\/\/poki.com\/",
                "service_icon": "https:\/\/a.poki.com\/icons\/fav-512.png",
                "service_name": "poki.com",
                "id": 1,
                "original_url": "http:\/\/poki.com\/"
            },
            {
                "service_name": "itch.io",
                "title": "Download the latest indie games",
                "title_link": "https:\/\/itch.io\/",
                "text": "<http:\/\/itch.io|itch.io> is a simple way to find, download and distribute indie games online. Whether you're a developer looking to upload your game or just someone looking for something new to play <http:\/\/itch.io|itch.io> has you covered.",
                "fallback": "itch.io: Download the latest indie games",
                "image_url": "https:\/\/static.itch.io\/images\/promo\/homepage-screenshot-2018-thumb.png",
                "from_url": "https:\/\/itch.io\/",
                "image_width": 485,
                "image_height": 250,
                "image_bytes": 172157,
                "service_icon": "https:\/\/itch.io\/favicon.ico",
                "id": 2,
                "original_url": "https:\/\/itch.io"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iva",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I said above I think being able to distribute in one file "
                            },
                            {
                                "type": "text",
                                "text": "might",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " be a reason things haven't happened. So that feature is missing. WASM doesn't work with one file. In fact typically it's min 3 files not including assets. One HTML file, one script with all the JS<->WASM glue. One wasm file.\n\nPico-8 has definitely has some of the vibe of flash games but it's a way higher barrier to entry than flash ever was. There's no doing anything in Pico-8 without code but there was plenty of flash with no or minimal code.\n\nSo I think 4 things are missing\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "being able to distribute as a single file. not entirely sure this is important but feel it's possible it is important"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "being able to stream the assets from that single file vs having to wait for the entire file to download. If 1 is important than so is this."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "working well on mobile in the browser (this is only semi-possible because Apple has so far refused to implement the needed APIs. In particular the fullscreen API so a webpage can go fullscreen (or close to it ) like a native app can and the orientation API so a webpage can force landscape view. Android Chrome\/Firefox has had both of these for 6+ years and it hasn't ruined the browsing experience there."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "A well designed non-programmer friendly app for making things"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI also feel it really is about the app. Unity and Unreal are not doing anything that game engines didn't do in 2003 but the fact that they package it all up so a non-programmer can build a Dear Esther type of game with no programming or even with a little programming is what made current explosion of games.\n\nThe same was true for flash IMO. It wasn't just that the tech existed. It's that there was an app that let people easily use tech to make stuff.\n\nIt could also be though the flash was just something that happened and it's time has passed. I found this site yesterday\n\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/poki.com\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIt's got a ton of games that seem right out of the flash days except with higher-res art "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": "\n\nalso "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/itch.io"
                            },
                            {
                                "type": "text",
                                "text": " is full indie games and many run in the browser, though likely desktop only unfortunately."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595568823.295200",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595570468.000000"
        },
        "client_msg_id": "4e0d17ff-69da-43a7-9541-e13e8c38402f",
        "text": "&gt; Some things fit multiple categories, or can play multiple roles, and that does not slice cleanly into exclusive buckets\n<@UAVCC2X70> Yes, I agree. There's a need to be able to categorise something without allocating it to an exclusive location (a bucket).\n&gt; Each module [...] may be an inhabitant of a larger world, or may have inhabitants of its own. But it should have no knowledge of the outside world, or of the inside world of its inhabitants.\nHow do you identity whether a module has inappropriate \"knowledge\" of something external? You must be talking about *Objects* specifically, right? Classic information hiding concerns etc. Your answers all seem to be in the context of OOP and method calls.\n\n&gt; Generally speaking, you want \"vertical\" slicing, not horizontal\nI'm not really clear what distinction you're trying to make there. Are you arguing for call stacks (RPC) over message-passing and\/or events? Call stacks are definitely banned from my own design. They're irredeemable in a distributed system.\n\n&gt; you're going to have to reverse engineer everything and trace the cause and effect all over the place, to really understand what's happening in that code, and you're opening the door for race conditions and unexpected breakages when things change\nThese are problems induced by poor language and tool designs; they're not really an immediate consequence of having an event system. I agree that if you have some kind of event system, then it has to be designed to play a carefully thought-out role in a larger architecture and in a way that can't be abused or \"used wrong\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bmUDw",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some things fit multiple categories, or can play multiple roles, and that does not slice cleanly into exclusive buckets"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": " Yes, I agree. There's a need to be able to categorise something without allocating it to an exclusive location (a bucket).\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Each module [...] may be an inhabitant of a larger world, or may have inhabitants of its own. But it should have no knowledge of the outside world, or of the inside world of its inhabitants."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How do you identity whether a module has inappropriate \"knowledge\" of something external? You must be talking about "
                            },
                            {
                                "type": "text",
                                "text": "Objects",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " specifically, right? Classic information hiding concerns etc. Your answers all seem to be in the context of OOP and method calls.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Generally speaking, you want \"vertical\" slicing, not horizontal"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not really clear what distinction you're trying to make there. Are you arguing for call stacks (RPC) over message-passing and\/or events? Call stacks are definitely banned from my own design. They're irredeemable in a distributed system.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you're going to have to reverse engineer everything and trace the cause and effect all over the place, to really understand what's happening in that code, and you're opening the door for race conditions and unexpected breakages when things change"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "These are problems induced by poor language and tool designs; they're not really an immediate consequence of having an event system. I agree that if you have some kind of event system, then it has to be designed to play a carefully thought-out role in a larger architecture and in a way that can't be abused or \"used wrong\"."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595569295.295700",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595569375.000000"
        },
        "client_msg_id": "1222d2b4-b30e-4a46-b89a-495e48943449",
        "text": "I feel like your overall point is a condemnation of existing software architectures and design patterns, rather than a denouncement (or advocation) of any particular abstract programming primitives. I don't know what else to say to that. I'm certainly not about to defend the status quo of software engineering!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mj+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel like your overall point is a condemnation of existing software architectures and design patterns, rather than a denouncement (or advocation) of any particular abstract programming primitives. I don't know what else to say to that. I'm certainly not about to defend the status quo of software engineering!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595569610.296200",
        "client_msg_id": "3b243e11-a000-460b-add9-cdb64d7acbdf",
        "text": "<@UCUSW7WVD> You're talking about code, but what about information? Are you saying that a piece of information (e.g. an employee record, or the state of a video game) should be represented as a network of scopes? How do I address that as a self-contained unit?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s4iC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " You're talking about code, but what about information? Are you saying that a piece of information (e.g. an employee record, or the state of a video game) should be represented as a network of scopes? How do I address that as a self-contained unit?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595569632.296400",
        "client_msg_id": "e620933f-1e5c-4e4c-94ef-2a63b20e91d5",
        "text": "Data needs to be modularised too. Not just code!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n18IY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Data needs to be modularised too. Not just code!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595571049.299600",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595593452.000000"
        },
        "client_msg_id": "61065dd5-4d8a-494a-a1ad-f62b726ddb7e",
        "text": "I think the above question is better split into two, so here's a separate prompt:\n\nWhat is the difference between an exclusive data *bucket* and a *tag*? Is one inferior to the other? How do you tell them apart, behaviourally?\n(My definition of \"bucket\" here means simply an exclusive location that a datum is considered to \"live\" within, whereas a \"tag\" is not a residence. Example of buckets: the \"folders\" of a hierarchical file system. Example of tags: the labels placed upon Github issues or the #hashtags of social media posts.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "reply_count": 17,
        "reply_users_count": 6,
        "latest_reply": "1595601044.426700",
        "reply_users": [
            "UDQBTJ211",
            "U013ZLJARC7",
            "UCGAK10LS",
            "U5STGTB3J",
            "UL3CJ7YKC",
            "UHWC9PXBL"
        ],
        "replies": [
            {
                "user": "UDQBTJ211",
                "ts": "1595580201.303800"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1595580726.304100"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1595581000.304300"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1595581085.304500"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595581668.305100"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595581928.305300"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1595588743.356700"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595591963.358400"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1595592623.360000"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595592891.361000"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1595592961.361400"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1595593088.361700"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1595596457.403200"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1595597489.416200"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1595599048.416500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1595600820.423200"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1595601044.426700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FVBM8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think the above question is better split into two, so here's a separate prompt:\n\nWhat is the difference between an exclusive data "
                            },
                            {
                                "type": "text",
                                "text": "bucket",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and a "
                            },
                            {
                                "type": "text",
                                "text": "tag",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? Is one inferior to the other? How do you tell them apart, behaviourally?\n(My definition of \"bucket\" here means simply an exclusive location that a datum is considered to \"live\" within, whereas a \"tag\" is not a residence. Example of buckets: the \"folders\" of a hierarchical file system. Example of tags: the labels placed upon Github issues or the #hashtags of social media posts.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UDQBTJ211"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UL5AX4G2H",
        "type": "message",
        "ts": "1595573579.300500",
        "text": "Of course, <https:\/\/codefaster.substack.com\/p\/jq-features-considered-harmful> . Yeah, a good title seems to matter almost more than a good article these days...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b05739c44158",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-12-05\/1552783044467_b05739c44158d860f3bd_72.png",
            "first_name": "",
            "real_name": "Tyler Adams",
            "display_name": "Tyler Adams",
            "team": "T5TCAFTA9",
            "name": "coppero1237",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595528501.266600",
        "parent_user_id": "UL5AX4G2H",
        "attachments": [
            {
                "title": "Avoid these 6 jq features",
                "title_link": "https:\/\/codefaster.substack.com\/p\/jq-features-considered-harmful",
                "text": "In this tutorial, we’ll discuss features of jq that will slow you down and what to use instead. jq has 3 fabulously dangerous methods...",
                "fallback": "Avoid these 6 jq features",
                "image_url": "https:\/\/bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com\/public\/images\/c21d3e2d-bc9d-401f-bbe8-225d0d0643d9_256x256.png",
                "from_url": "https:\/\/codefaster.substack.com\/p\/jq-features-considered-harmful",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 3306,
                "service_icon": "https:\/\/bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com\/public\/images\/d8afe861-b0e8-49ce-b80e-2d642b648703\/apple-touch-icon-57x57.png",
                "service_name": "codefaster.substack.com",
                "id": 1,
                "original_url": "https:\/\/codefaster.substack.com\/p\/jq-features-considered-harmful"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sLf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Of course, "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/codefaster.substack.com\/p\/jq-features-considered-harmful"
                            },
                            {
                                "type": "text",
                                "text": " . Yeah, a good title seems to matter almost more than a good article these days..."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]