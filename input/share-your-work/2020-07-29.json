[
    {
        "user": "UEP7RL0HX",
        "type": "message",
        "ts": "1596006228.430200",
        "client_msg_id": "febb63e3-f0f5-4a8e-9236-726e914de571",
        "text": "In this arrangement\n```outlined \"red\"\n  (superimposedStencils\n    [ circle 20\n    , rectangle 100 100\n    ]\n  )```\nWhat determines which object is on top of the other? If it's the order in which circle and rectangle appear from top to bottom, then it's mostly declarative but a bit imperative, too?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4c54a8f7c01",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c4c54a8f7c01b3e22a1e82ae29c85f70.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Dan Swirsky",
            "display_name": "Dan Swirsky",
            "team": "T5TCAFTA9",
            "name": "dswirsky",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595969930.426800",
        "parent_user_id": "UFZFETUH1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "puxb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In this arrangement\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "outlined \"red\"\n  (superimposedStencils\n    [ circle 20\n    , rectangle 100 100\n    ]\n  )"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What determines which object is on top of the other? If it's the order in which circle and rectangle appear from top to bottom, then it's mostly declarative but a bit imperative, too?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFZFETUH1",
        "type": "message",
        "ts": "1596006610.430400",
        "client_msg_id": "c6a3aaf6-22e2-4bbf-9560-2a1db959df99",
        "text": "<@UEP7RL0HX> It's the order of elements in the list argument of `superimposedStencils` .\n\nThat's still declarative, I'd say, but we're getting into weird-terminology-park here. I'd rather think about _what benefit does this API have over another_? I know I resort to using 'imperative' and 'declarative' sometimes, but in this case these APIs look and behave the same.\n\nSo, going a little bit on a stretch: Declarative and imperative aren't opposites. Declarative APIs can be implemented with declarative code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga72dfb84ee3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8a72dfb84ee31009c2810f7f590d4ff8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Philipp Kr√ºger",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "philipp.krueger1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595969930.426800",
        "parent_user_id": "UFZFETUH1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D+J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEP7RL0HX"
                            },
                            {
                                "type": "text",
                                "text": " It's the order of elements in the list argument of "
                            },
                            {
                                "type": "text",
                                "text": "superimposedStencils",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " .\n\nThat's still declarative, I'd say, but we're getting into weird-terminology-park here. I'd rather think about "
                            },
                            {
                                "type": "text",
                                "text": "what benefit does this API have over another",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? I know I resort to using 'imperative' and 'declarative' sometimes, but in this case these APIs look and behave the same.\n\nSo, going a little bit on a stretch: Declarative and imperative aren't opposites. Declarative APIs can be implemented with declarative code."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEP7RL0HX",
        "type": "message",
        "ts": "1596007062.430600",
        "client_msg_id": "820bf11e-896f-4414-a092-2b55b3b604a8",
        "text": "You mean implemented with imperative code?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4c54a8f7c01",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c4c54a8f7c01b3e22a1e82ae29c85f70.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Dan Swirsky",
            "display_name": "Dan Swirsky",
            "team": "T5TCAFTA9",
            "name": "dswirsky",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595969930.426800",
        "parent_user_id": "UFZFETUH1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FEkE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You mean implemented with imperative code?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEP7RL0HX",
        "type": "message",
        "ts": "1596007170.430800",
        "client_msg_id": "ddcfe9e5-83a2-48d0-8f66-b89f96fdfe5c",
        "text": "The PL I'm designing mixes both as well, but I use a 'layer' property to control object overlap",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4c54a8f7c01",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c4c54a8f7c01b3e22a1e82ae29c85f70.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Dan Swirsky",
            "display_name": "Dan Swirsky",
            "team": "T5TCAFTA9",
            "name": "dswirsky",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595969930.426800",
        "parent_user_id": "UFZFETUH1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XJHhn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The PL I'm designing mixes both as well, but I use a 'layer' property to control object overlap"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UFZFETUH1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1596010454.431900",
        "client_msg_id": "294e4586-fe29-4d1e-9011-6e31cff43691",
        "text": "People ask about the difference between Glamorous Toolkit and Pharo. This post addresses that difference: <https:\/\/blog.feenk.com\/glamorous-toolkit-and-pharo-5aufgcequ38az2s0dj0t1nu0f\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596010454.431900",
        "reply_count": 7,
        "reply_users_count": 4,
        "latest_reply": "1596545732.448900",
        "reply_users": [
            "UCUSW7WVD",
            "UHWC9PXBL",
            "UE1JQM9HQ",
            "UDQBTJ211"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1596042393.434600"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1596072827.443000"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1596088558.443500"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1596088673.443700"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1596104834.444100"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1596119607.445500"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1596545732.448900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "feenk Blog",
                "title": "Glamorous Toolkit and Pharo",
                "title_link": "https:\/\/blog.feenk.com\/glamorous-toolkit-and-pharo-5aufgcequ38az2s0dj0t1nu0f\/",
                "text": "Glamorous Toolkit is built in Pharo, and it enables people to work with Pharo systems. Nevertheless, its goal is distinct from that of Pharo and so is its realization.",
                "fallback": "feenk Blog: Glamorous Toolkit and Pharo",
                "image_url": "https:\/\/blog.feenk.com\/5aufgcequ38az2s0dj0t1nu0f\/preview\/pictures\/gtr-jenkins.png",
                "from_url": "https:\/\/blog.feenk.com\/glamorous-toolkit-and-pharo-5aufgcequ38az2s0dj0t1nu0f\/",
                "image_width": 351,
                "image_height": 250,
                "image_bytes": 927276,
                "id": 1,
                "original_url": "https:\/\/blog.feenk.com\/glamorous-toolkit-and-pharo-5aufgcequ38az2s0dj0t1nu0f\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S8ZRY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "People ask about the difference between Glamorous Toolkit and Pharo. This post addresses that difference: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/blog.feenk.com\/glamorous-toolkit-and-pharo-5aufgcequ38az2s0dj0t1nu0f\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "UDKTZSD6H",
                    "UJ6LDMMN0",
                    "UAHHWT22U",
                    "UFPPABQ7P"
                ],
                "count": 5
            },
            {
                "name": "exploding_head",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFZFETUH1",
        "type": "message",
        "ts": "1596011371.432100",
        "client_msg_id": "8c34cd9b-5c3d-49a5-954c-a6b246c3dc41",
        "text": "<@U010328JA1E> Oh, I've seen that one, but just noticed it was written by <@U5TCAFTD3>! Yeah, that article has lots of overlap :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga72dfb84ee3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8a72dfb84ee31009c2810f7f590d4ff8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Philipp Kr√ºger",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "philipp.krueger1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595969930.426800",
        "parent_user_id": "UFZFETUH1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4hEDM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U010328JA1E"
                            },
                            {
                                "type": "text",
                                "text": " Oh, I've seen that one, but just noticed it was written by "
                            },
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": "! Yeah, that article has lots of overlap "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "U5TCAFTD3"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U010SQSJGLS",
        "type": "message",
        "ts": "1596021726.432500",
        "client_msg_id": "069ef4d9-5626-405c-8d29-4d2dc6675adc",
        "text": "The paper was an interesting read, thanks! I particularly appreciated the examples showing how users of Rust have to understand the internals of the borrow checker.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge900b2beeb5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e900b2beeb5a6877d191b8d15623671b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Michael Coblenz",
            "display_name": "Michael Coblenz",
            "team": "T5TCAFTA9",
            "name": "mcoblenz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595636687.411800",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dD9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The paper was an interesting read, thanks! I particularly appreciated the examples showing how users of Rust have to understand the internals of the borrow checker."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U010SQSJGLS",
        "type": "message",
        "ts": "1596021813.432700",
        "client_msg_id": "d7da081a-2900-4337-aece-2c1351dcabf8",
        "text": "I did some user studies of a language I designed that uses ownership, and I managed to get most participants to work successfully with ownership. However, the ownership system was substantially simpler than Rust‚Äôs.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge900b2beeb5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e900b2beeb5a6877d191b8d15623671b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Michael Coblenz",
            "display_name": "Michael Coblenz",
            "team": "T5TCAFTA9",
            "name": "mcoblenz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595636687.411800",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lopF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I did some user studies of a language I designed that uses ownership, and I managed to get most participants to work successfully with ownership. However, the ownership system was substantially simpler than Rust‚Äôs."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1596024225.433000",
        "client_msg_id": "208f0151-2aed-49f5-b004-4a5b68a74f2f",
        "text": "Interesting article, <@UFZFETUH1>! :slightly_smiling_face:\n\nI like your declarative language for vector graphics, and the way it seems to be good at composition: you can combine stencils in more complex stencils, and only after that applying some style to it. I like that you explicitly focus on \"shape\" first (your \"stencil\", nice name) a concept that come before how it is rendered. First time I see it. I guess there are some other languages for graphics that use the same kind of model.\n\nI also like the way you illustrate the type checking with Scratch like blocks. And even if you write in the article that it is just for illustration, I find this is a good example of that sometime visual languages can be more expressive than text. In that case it is visually obvious that you are not allowed to put a \"rectangle\" block in a \"moved\" one, with text programming you have to figure it yourself, or the editor linter or compiler can tell you are doing something wrong, but only after doing it, in the visual I don't even try to do it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595969930.426800",
        "parent_user_id": "UFZFETUH1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GX3mw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting article, "
                            },
                            {
                                "type": "user",
                                "user_id": "UFZFETUH1"
                            },
                            {
                                "type": "text",
                                "text": "! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI like your declarative language for vector graphics, and the way it seems to be good at composition: you can combine stencils in more complex stencils, and only after that applying some style to it. I like that you explicitly focus on \"shape\" first (your \"stencil\", nice name) a concept that come before how it is rendered. First time I see it. I guess there are some other languages for graphics that use the same kind of model.\n\nI also like the way you illustrate the type checking with Scratch like blocks. And even if you write in the article that it is just for illustration, I find this is a good example of that sometime visual languages can be more expressive than text. In that case it is visually obvious that you are not allowed to put a \"rectangle\" block in a \"moved\" one, with text programming you have to figure it yourself, or the editor linter or compiler can tell you are doing something wrong, but only after doing it, in the visual I don't even try to do it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1596032300.433400",
        "client_msg_id": "7600a4a1-508a-48f3-9008-b69d50dcaa69",
        "text": "Nice! I'm particularly fond of declarative + functional for this sort of thing, for example check out the (mostly student authored) gallery for the online teaching tool we built to support <https:\/\/clojurebridge.org|ClojureBridge> a couple years ago: <https:\/\/www.maria.cloud\/gallery?eval=true>\n(One can modify and re-evaluate any code cell by typing Command-Enter -- Control-Enter on Windows\/Linux -- with the keyboard focus in that cell.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595969930.426800",
        "parent_user_id": "UFZFETUH1",
        "attachments": [
            {
                "title": "ClojureBridge",
                "title_link": "https:\/\/clojurebridge.org\/",
                "text": "ClojureBridge aims to increase diversity within the Clojure community by offering free, beginner-friendly Clojure programming workshops for women.",
                "fallback": "ClojureBridge",
                "from_url": "https:\/\/clojurebridge.org\/",
                "service_name": "clojurebridge.org",
                "id": 1,
                "original_url": "https:\/\/clojurebridge.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JqmjY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice! I'm particularly fond of declarative + functional for this sort of thing, for example check out the (mostly student authored) gallery for the online teaching tool we built to support "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/clojurebridge.org",
                                "text": "ClojureBridge"
                            },
                            {
                                "type": "text",
                                "text": " a couple years ago: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.maria.cloud\/gallery?eval=true"
                            },
                            {
                                "type": "text",
                                "text": "\n(One can modify and re-evaluate any code cell by typing Command-Enter -- Control-Enter on Windows\/Linux -- with the keyboard focus in that cell.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UFZFETUH1",
        "type": "message",
        "ts": "1596035106.434000",
        "client_msg_id": "476bc20c-e95a-4238-86b2-c8977b042aea",
        "text": "<@U013ZLJARC7> I love myself some declarative graphics APIs :slightly_smiling_face: This one reminds me of racket's picts (they've been an inspiration to me since forever), but you've gone amazingly far with that one, amazing. I've never seen maria cloud, too. Also, nice fernsehturm :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga72dfb84ee3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8a72dfb84ee31009c2810f7f590d4ff8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Philipp Kr√ºger",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "philipp.krueger1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595969930.426800",
        "parent_user_id": "UFZFETUH1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SAqH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " I love myself some declarative graphics APIs "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " This one reminds me of racket's picts (they've been an inspiration to me since forever), but you've gone amazingly far with that one, amazing. I've never seen maria cloud, too. Also, nice fernsehturm "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1596041038.434200",
        "client_msg_id": "92d700e3-21c6-41e1-a4d8-fd3a77d890bb",
        "text": "Thanks, <@UFZFETUH1>. Racket's quick introduction using the picture language, along with the chapter of SICP that uses the same language, was a big influence on our intro curriculum (\"Learn Clojure with Shapes\"): <https:\/\/www.maria.cloud\/intro>\n\nBTW, for those interested in CS history in general and representation in particular: the heritage of applying functional programming to geometry starts with Peter Henderson's _<https:\/\/eprints.soton.ac.uk\/257577\/1\/funcgeo2.pdf|Functional geometry>_, the implementation for which was written by his grad student <http:\/\/www.cse.chalmers.se\/~ms\/|Mary Sheeran> who went on to be a fine researcher in functional programming, especially using functional languages to design hardware. It was ported to scheme for the class that became SICP by <https:\/\/www.mona.uwi.edu\/compsci\/prof-daniel-n-coore|Daniel Coore> who had been one of the top academic performers of his generation in Jamaica before attending MIT. Mike Sperber ported it to PLT scheme, from whence the Racket version.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595969930.426800",
        "parent_user_id": "UFZFETUH1",
        "attachments": [
            {
                "title": "Prof. Daniel N. Coore | The Department of Computing",
                "title_link": "https:\/\/www.mona.uwi.edu\/compsci\/prof-daniel-n-coore",
                "text": "Prof. Daniel Coore is Professor of Computer Science in the Department of Computing at the UWI, Mona. His primary research interests are in amorphous computing, robotics and automation, and computer science education. He teaches courses at both the undergraduate and graduate levels, spanning a broad range of areas including algorithms, theory of computation, computer architecture and cryptography.",
                "fallback": "Prof. Daniel N. Coore | The Department of Computing",
                "from_url": "https:\/\/www.mona.uwi.edu\/compsci\/prof-daniel-n-coore",
                "service_icon": "https:\/\/www.mona.uwi.edu\/favicon.ico",
                "service_name": "mona.uwi.edu",
                "id": 1,
                "original_url": "https:\/\/www.mona.uwi.edu\/compsci\/prof-daniel-n-coore"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zazX3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks, "
                            },
                            {
                                "type": "user",
                                "user_id": "UFZFETUH1"
                            },
                            {
                                "type": "text",
                                "text": ". Racket's quick introduction using the picture language, along with the chapter of SICP that uses the same language, was a big influence on our intro curriculum (\"Learn Clojure with Shapes\"): "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.maria.cloud\/intro"
                            },
                            {
                                "type": "text",
                                "text": "\n\nBTW, for those interested in CS history in general and representation in particular: the heritage of applying functional programming to geometry starts with Peter Henderson's "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/eprints.soton.ac.uk\/257577\/1\/funcgeo2.pdf",
                                "text": "Functional geometry",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", the implementation for which was written by his grad student "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.cse.chalmers.se\/~ms\/",
                                "text": "Mary Sheeran"
                            },
                            {
                                "type": "text",
                                "text": " who went on to be a fine researcher in functional programming, especially using functional languages to design hardware. It was ported to scheme for the class that became SICP by "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.mona.uwi.edu\/compsci\/prof-daniel-n-coore",
                                "text": "Daniel Coore"
                            },
                            {
                                "type": "text",
                                "text": " who had been one of the top academic performers of his generation in Jamaica before attending MIT. Mike Sperber ported it to PLT scheme, from whence the Racket version."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "exploding_head",
                "users": [
                    "UFZFETUH1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1596042393.434600",
        "client_msg_id": "1c322fe1-5463-43c9-821f-cf7f3f6bf146",
        "text": "Every time I read about GT I come away determined to look more deeply into it, but so far I'm stymied each time. Just thinking aloud on some ways you may be able to help me help myself..\n\n1. Do you happen to have any blog posts or screencasts about using GT to work with a non-smalltalk codebase? You pointed me at the Java capabilities over a year ago, but sadly it hasn't \"stuck\".\n\n2. As someone who isn't embedded in the Smalltalk world, many of the nouns in GT blog posts are not clear to me. For example, this quote seems really profound:\n\n&gt; Smalltalk is famous for the ability to program in the Debugger, in the presence of live objects. With GT, we are perfecting programming in the Inspector.\nHowever, I don't have a good grasp of the distinction between the Smalltalk Debugger and Inspector, so I fear I'm not fully grokking the idea yet.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596010454.431900",
        "parent_user_id": "UE1JQM9HQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nxnx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Every time I read about GT I come away determined to look more deeply into it, but so far I'm stymied each time. Just thinking aloud on some ways you may be able to help me help myself..\n\n1. Do you happen to have any blog posts or screencasts about using GT to work with a non-smalltalk codebase? You pointed me at the Java capabilities over a year ago, but sadly it hasn't \"stuck\".\n\n2. As someone who isn't embedded in the Smalltalk world, many of the nouns in GT blog posts are not clear to me. For example, this quote seems really profound:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Smalltalk is famous for the ability to program in the Debugger, in the presence of live objects. With GT, we are perfecting programming in the Inspector."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nHowever, I don't have a good grasp of the distinction between the Smalltalk Debugger and Inspector, so I fear I'm not fully grokking the idea yet."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up::skin-tone-3",
                "users": [
                    "U85HCL7JP",
                    "UFV8P4472"
                ],
                "count": 2
            },
            {
                "name": "point_up",
                "users": [
                    "UHWC9PXBL",
                    "UAHHWT22U"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1596043519.434800",
        "client_msg_id": "642f390f-edd6-4f61-ae15-041b1829c9b8",
        "text": "<@U010SQSJGLS> ah that‚Äôs right, I will need to revisit the Obsidian studies!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595636687.411800",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pmu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U010SQSJGLS"
                            },
                            {
                                "type": "text",
                                "text": " ah that‚Äôs right, I will need to revisit the Obsidian studies!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U010SQSJGLS",
        "type": "message",
        "ts": "1596049514.435200",
        "client_msg_id": "6e6475f1-9750-4bf7-aac5-dbc7f779c9d6",
        "text": "I‚Äôll email you a more up-to-date draft.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge900b2beeb5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e900b2beeb5a6877d191b8d15623671b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Michael Coblenz",
            "display_name": "Michael Coblenz",
            "team": "T5TCAFTA9",
            "name": "mcoblenz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595636687.411800",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KGYY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I‚Äôll email you a more up-to-date draft."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "UFB8STN7K"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1596059642.435900",
        "client_msg_id": "d1a959b5-77ef-40fc-8721-21bcb4096f93",
        "text": "<@U013ZLJARC7> maria.cloud is a really nice learning environment, I was impressed when I first saw it, cool to see that you were involved",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595969930.426800",
        "parent_user_id": "UFZFETUH1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6wm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " maria.cloud is a really nice learning environment, I was impressed when I first saw it, cool to see that you were involved"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1596072827.443000",
        "client_msg_id": "4C0128A3-C1D1-4D0E-88FF-385CDCBBB6FB",
        "text": "i would kill to see a video walkthrough of using GT for one task from start to finish with an explain-like-i‚Äôm-five level of detail about what‚Äôs going on. i support the mission and the vision and the interface 1000% but very badly need a getting started guide that introduces basic concepts, especially for people who aren‚Äôt used to working in even the live environments like the one that vanilla pharo provides. i really think gtoolkit could be the killer app for smalltalk in the same way that rails was the killer app for ruby‚Äîbut that requires an introduction for non-smalltalkers, just like rails required guides directed at people who didn‚Äôt originally use ruby (only more so, because the leap in expressiveness is much larger)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596010454.431900",
        "parent_user_id": "UE1JQM9HQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "686km",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i would kill to see a video walkthrough of using GT for one task from start to finish with an explain-like-i‚Äôm-five level of detail about what‚Äôs going on. i support the mission and the vision and the interface 1000% but very badly need a getting started guide that introduces basic concepts, especially for people who aren‚Äôt used to working in even the live environments like the one that vanilla pharo provides. i really think gtoolkit could be the killer app for smalltalk in the same way that rails was the killer app for ruby‚Äîbut that requires an introduction for non-smalltalkers, just like rails required guides directed at people who didn‚Äôt originally use ruby (only more so, because the leap in expressiveness is much larger)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC",
                    "UAHHWT22U"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1596088558.443500",
        "client_msg_id": "c2f72cc9-c6e9-4382-93d9-a952ebecdc6f",
        "text": "Thanks both for these kind words. How about we organize a public 2h session in which I demo and you can ask questions?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596010454.431900",
        "parent_user_id": "UE1JQM9HQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8nqx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks both for these kind words. How about we organize a public 2h session in which I demo and you can ask questions?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1596088673.443700",
        "client_msg_id": "29427a33-f20d-49dd-8561-ab8a781f4c4f",
        "text": "In the meantime, <@UCUSW7WVD> one of the important application areas of GT is software assessment. You can find a set of links to two longer tutorial-like blog posts here: <https:\/\/gtoolkit.com\/usecases\/software-assessment\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596010454.431900",
        "parent_user_id": "UE1JQM9HQ",
        "attachments": [
            {
                "title": "Glamorous Toolkit",
                "title_link": "https:\/\/gtoolkit.com\/usecases\/software-assessment\/",
                "text": "Glamorous Toolkit is the moldable development environment",
                "fallback": "Glamorous Toolkit",
                "from_url": "https:\/\/gtoolkit.com\/usecases\/software-assessment\/",
                "service_icon": "https:\/\/gtoolkit.com\/favicon.ico",
                "service_name": "gtoolkit.com",
                "id": 1,
                "original_url": "https:\/\/gtoolkit.com\/usecases\/software-assessment\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BLN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the meantime, "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " one of the important application areas of GT is software assessment. You can find a set of links to two longer tutorial-like blog posts here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/gtoolkit.com\/usecases\/software-assessment\/"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]