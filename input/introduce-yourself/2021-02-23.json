[
    {
        "user": "U01NM2BTDL7",
        "type": "message",
        "ts": "1614093544.009500",
        "client_msg_id": "D53A98CF-AF41-404C-AF5A-6E90072A152F",
        "text": "Hi everyone. I’m Francois. Here’s what I’m working towards. It is called Gooey. I'm going to blather a bit here, to see if any of my background is interesting for context.\n\nMy background is in making design\/dev tools, platforms, and of course just making experiences. I was a game developer for the first 10 years of my career and then went on a decade run of doing startups.  I work at Bose having done Applied Research in the XR\/tools space for the last 3 years and now am being promoted into running all Software Incubation within our investment arm. Lately I've been more seriously experimenting and discussing getting funding to start a company around this space. \n\nI can't share too much just yet, until I either get a legal waver from Bose Legal, and finish some discussions on potentially spinning out from Bose. I want to work on this no strings attached though.\n\nGooey's rough description and direction is: using game engine\/editor technology but applied to refining and communication concepts to others. I'm a fan of a tool that is browser first and am pursuing that approach. I think highly baked in social features is extremely important. Figuring out how to make securely re-mixable components that will have access to often personal or professional data is top of mind. Other things I'm interested in:\nHow do you make interactive design code\/assets that will still be runnable\/loadable\/useful in a decade (not be dependent on likely to go away environments like APIs)\nFiguring out which is more optimal: being the whole runtime\/IDE stack, being a more clean embedded runtime, or being more of a file-format\/protocol.\nIs there a conflict between learnable and powerful? \nCreators can easily make an ecosystem of hard to understand building blocks and processes, is there something that can be done to help grow a culture of caring about crafting good remixable components such as static analysis or badges\/scores marked by each component? \nShould I make a new programming language or try to tame existing languages with some editor enforced invariant enforcement? \nEnsuring components are say functionally pure, or a DAG, and\/or deterministic for instance can lead to some serious optimizations, cleaner implementation, and I think learnability.\nI'm a fan of for instance what Observable is doing where you can write Javascript with a minor language change or two, but it's difficult to not make your code reactive by default.\nI'll stop there, I've thought about this for almost 15 years, so I could talk forever.\n\nI'd like to build a sustainable\/high-profitable company so I can have a healthy amount of funding to pursue necessary research with smart collaborators. I'm struggling with how to balance wanting to make something open source. I'd say I really like Figma's approach of just making something awesome people want to pay for, being a relatively open company sharing their design thinking, and of course I think the CTO making cool shit for the community (such as in esbuild). This makes me feel like Figma gives back to the community. Of course there is plenty of space for a magnitude more of giving back and being transparent, which is where I'd hope to fall. It's all easier said than done to make sure you aren't a starving idealist\/artist.\n\nMy favorite company overall though (and I find this funny, after all of the hate I had when they were trying to kill the browser) is Microsoft in terms of vision for enabling developers both profitably and in giving back a lot with awesome open source projects. Github is in my opinion, the most well designed product ever.\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g41340a7f393",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/41340a7f3930b7d87be5949c4e538410.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Francois Laberge",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "francoislaberge",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614093544.009500",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1622603316.023400",
        "reply_users": [
            "U01GV0YCYAG"
        ],
        "replies": [
            {
                "user": "U01GV0YCYAG",
                "ts": "1622603316.023400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Scw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi everyone. I’m Francois. Here’s what I’m working towards. It is called Gooey. I'm going to blather a bit here, to see if any of my background is interesting for context.\n"
                            },
                            {
                                "type": "text",
                                "text": "\nMy background is in making design\/dev tools, platforms, and of course just making experiences. I was a game developer for the first 10 years of my career and then went on a decade run of doing startups.  I work at Bose having done Applied Research in the XR\/tools space for the last 3 years and now am being promoted into running all Software Incubation within our investment arm. Lately I've been more seriously experimenting and discussing getting funding to start a company around this space. \n\nI can't share too much just yet, until I either get a legal waver from Bose Legal, and finish some discussions on potentially spinning out from Bose. I want to work on this no strings attached though.\n\nGooey's rough description and direction is: using game engine\/editor technology but applied to refining and communication concepts to others. I'm a fan of a tool that is browser first and am pursuing that approach. I think highly baked in social features is extremely important. Figuring out how to make securely re-mixable components that will have access to often personal or professional data is top of mind. Other things I'm interested in:\nHow do you make interactive design code\/assets that will still be runnable\/loadable\/useful in a decade (not be dependent on likely to go away environments like APIs)\nFiguring out which is more optimal: being the whole runtime\/IDE stack, being a more clean embedded runtime, or being more of a file-format\/protocol.\nIs there a conflict between learnable and powerful? \nCreators can easily make an ecosystem of hard to understand building blocks and processes, is there something that can be done to help grow a culture of caring about crafting good remixable components such as static analysis or badges\/scores marked by each component? \nShould I make a new programming language or try to tame existing languages with some editor enforced invariant enforcement? \nEnsuring components are say functionally pure, or a DAG, and\/or deterministic for instance can lead to some serious optimizations, cleaner implementation, and I think learnability.\nI'm a fan of for instance what Observable is doing where you can write Javascript with a minor language change or two, but it's difficult to not make your code reactive by default.\nI'll stop there, I've thought about this for almost 15 years, so I could talk forever.\n\nI'd like to build a sustainable\/high-profitable company so I can have a healthy amount of funding to pursue necessary research with smart collaborators. I'm struggling with how to balance wanting to make something open source. I'd say I really like Figma's approach of just making something awesome people want to pay for, being a relatively open company sharing their design thinking, and of course I think the CTO making cool shit for the community (such as in esbuild). This makes me feel like Figma gives back to the community. Of course there is plenty of space for a magnitude more of giving back and being transparent, which is where I'd hope to fall. It's all easier said than done to make sure you aren't a starving idealist\/artist.\n\nMy favorite company overall though (and I find this funny, after all of the hate I had when they were trying to kill the browser) is Microsoft in terms of vision for enabling developers both profitably and in giving back a lot with awesome open source projects. Github is in my opinion, the most well designed product ever.\n"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "UC2A2ARPT",
                    "U01MNBRK2N5",
                    "UDQBTJ211",
                    "U013ZLJARC7",
                    "U01NQ4945N1",
                    "U0123H7JRDM",
                    "UJ6LDMMN0",
                    "U013HU44GLS",
                    "UJBAJNFLK",
                    "UA14TGLTC",
                    "UN9SCH5RD",
                    "U01PA5PCJQJ",
                    "UHWC9PXBL",
                    "U01SKLL0H38"
                ],
                "count": 14
            }
        ]
    }
]