[
    {
        "user": "U06DZDM8C93",
        "type": "message",
        "ts": "1732522615.872449",
        "client_msg_id": "6ffb6aab-7e58-43e0-905e-4402bf67c7ab",
        "text": "&gt; Including its risks, of course:\nAbsolutely, I've intentionally left considerations on untrusted source out of the scope of this project. Both because it's an exploratory project, and because worse-is-better.\n\nIf project does go on to be useful, i'll consider some very-light isolation in form of docker\/podman. That's not a real solution for running untrusted code though, since escaping is trivial. I have some previous background in more heavy-duty isolation by using in firecracker VM:s, but that's definitely both inconvenient and outside the scope of this project.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "251479b6efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-01-16\/6476846237061_251479b6efa899c8f296_72.png",
            "first_name": "Pietu",
            "real_name": "Pietu",
            "display_name": "Pietu",
            "team": "T5TCAFTA9",
            "name": "pietu.roisko",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1731679753.126049",
        "parent_user_id": "U06DZDM8C93",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xgwSS",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Including its risks, of course:"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nAbsolutely, I've intentionally left considerations on untrusted source out of the scope of this project. Both because it's an exploratory project, and because worse-is-better.\n\nIf project does go on to be useful, i'll consider some very-light isolation in form of docker\/podman. That's not a real solution for running untrusted code though, since escaping is trivial. I have some previous background in more heavy-duty isolation by using in firecracker VM:s, but that's definitely both inconvenient and outside the scope of this project."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U05SU27S1M2",
        "type": "message",
        "ts": "1732533040.403989",
        "client_msg_id": "df6126d0-ba27-487b-a3e0-e3b2cf335855",
        "text": "howabout making proximal nodes connect automatically, where legal?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "60e6ebbc4a9a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-18\/5922641047217_60e6ebbc4a9a68a57656_72.png",
            "first_name": "Alex",
            "real_name": "Alex McLean",
            "display_name": "Alex McLean",
            "team": "T5TCAFTA9",
            "name": "alex952",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732498096.375469",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3YjEj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "howabout making proximal nodes connect automatically, where legal?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U08294YLWJH",
        "type": "message",
        "ts": "1732543398.418729",
        "edited": {
            "user": "U08294YLWJH",
            "ts": "1732577238.000000"
        },
        "client_msg_id": "6ef6e947-28fb-4c7c-86bf-67d68ffc9ec7",
        "text": "I am back with small project (~work in progress~  already finalized),\nHave you ever thought that git diff does not really show the history of changes you made and just shows the final state,\nthis can be solved with more granual commits,\nso my project - <https:\/\/github.com\/uprun\/git-auto-commit> - creates commits when file changes,\nin such way ~changes will be sent real-time and~ the transformation history is saved as well.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "54bdcc3cea79",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-25\/8077168843205_54bdcc3cea79c3cee9ab_72.jpg",
            "first_name": "Oleksandr",
            "real_name": "Oleksandr Kryvonos",
            "display_name": "Oleksandr Kryvonos",
            "team": "T5TCAFTA9",
            "name": "oleksandr.kryvonos.od",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732543398.418729",
        "reply_count": 6,
        "reply_users_count": 3,
        "latest_reply": "1732577146.292839",
        "reply_users": [
            "UCUSW7WVD",
            "UC2A2ARPT",
            "U08294YLWJH"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1732551657.275689"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1732553063.212859"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1732555970.597269"
            },
            {
                "user": "U08294YLWJH",
                "ts": "1732570772.383239"
            },
            {
                "user": "U08294YLWJH",
                "ts": "1732571429.216359"
            },
            {
                "user": "U08294YLWJH",
                "ts": "1732577146.292839"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "09Yrm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am back with small project ("
                            },
                            {
                                "type": "text",
                                "text": "work in progress ",
                                "style": {
                                    "strike": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " already finalized),\nHave you ever thought that git diff does not really show the history of changes you made and just shows the final state,\nthis can be solved with more granual commits,\nso my project - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/uprun\/git-auto-commit"
                            },
                            {
                                "type": "text",
                                "text": " - creates commits when file changes,\nin such way "
                            },
                            {
                                "type": "text",
                                "text": "changes will be sent real-time and",
                                "style": {
                                    "strike": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the transformation history is saved as well."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U06DZDM8C93"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1732551657.275689",
        "client_msg_id": "1e689214-27ca-4ad6-9117-4c130914f7dd",
        "text": "I did <https:\/\/akkartik.name\/codelog.html|this> many years ago.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732543398.418729",
        "parent_user_id": "U08294YLWJH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8WQlA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I did "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/akkartik.name\/codelog.html",
                                "text": "this"
                            },
                            {
                                "type": "text",
                                "text": " many years ago."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1732553063.212859",
        "client_msg_id": "7fd80741-196e-497c-a148-1a4971f34a88",
        "text": "These are interesting projects! Having more history to explore (eg: commit on save, or even commit on keystroke) feels likely to offer a bunch of benefits… if we can crack the UI challenges it brings.\n\nI like how you handle this, Kartik, by focusing on the \"when I have something to say\" communication part of creating a commit. Like, with git, I usually think of the snapshot of the codebase as the thing I'm capturing, and the commit message is just a summary of what's changed since the last snapshot. But by making it log-first, it's the train of thought that's being captured, and the snapshot of the code is just the context needed for each thought. I love this inversion.\n\nOleksandr — how do commit messages work in your project? Any thoughts on what you might do there?\n\nFor <https:\/\/www.inkandswitch.com\/patchwork\/notebook\/|Patchwork>, <@UCDBW1H26> and <@UAZT04VT4> did some interesting things that are relevant here. For one, they did a commit-per-keystroke, but then used some smart heuristics to <https:\/\/www.inkandswitch.com\/patchwork\/notebook\/03\/|batch together> these changes into meaningful units of work. Another great thing they found is that using <https:\/\/www.inkandswitch.com\/patchwork\/notebook\/09\/|AI generated commit messages> is pretty good, actually. Though I think I like Kartik's approach even more.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732543398.418729",
        "parent_user_id": "U08294YLWJH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jeQWW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "These are interesting projects! Having more history to explore (eg: commit on save, or even commit on keystroke) feels likely to offer a bunch of benefits… if we can crack the UI challenges it brings.\n\nI like how you handle this, Kartik, by focusing on the \"when I have something to say\" communication part of creating a commit. Like, with git, I usually think of the snapshot of the codebase as the thing I'm capturing, and the commit message is just a summary of what's changed since the last snapshot. But by making it log-first, it's the train of thought that's being captured, and the snapshot of the code is just the context needed for each thought. I love this inversion.\n\nOleksandr — how do commit messages work in your project? Any thoughts on what you might do there?\n\nFor "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.inkandswitch.com\/patchwork\/notebook\/",
                                "text": "Patchwork"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "user",
                                "user_id": "UCDBW1H26"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "user",
                                "user_id": "UAZT04VT4"
                            },
                            {
                                "type": "text",
                                "text": " did some interesting things that are relevant here. For one, they did a commit-per-keystroke, but then used some smart heuristics to "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.inkandswitch.com\/patchwork\/notebook\/03\/",
                                "text": "batch together"
                            },
                            {
                                "type": "text",
                                "text": " these changes into meaningful units of work. Another great thing they found is that using "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.inkandswitch.com\/patchwork\/notebook\/09\/",
                                "text": "AI generated commit messages"
                            },
                            {
                                "type": "text",
                                "text": " is pretty good, actually. Though I think I like Kartik's approach even more."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1732555970.597269",
        "client_msg_id": "165a3606-4fc2-4868-825d-46cdf79b0c00",
        "text": "I don't quite follow \"transformation history,\" <@U08294YLWJH>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732543398.418729",
        "parent_user_id": "U08294YLWJH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VsMVy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't quite follow \"transformation history,\" "
                            },
                            {
                                "type": "user",
                                "user_id": "U08294YLWJH"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1732563189.644469",
        "client_msg_id": "D1812FA7-9966-4C01-98F7-7DC98B0C1D07",
        "text": "I like that idea! Sort of like this?\n\n<https:\/\/x.com\/KennedyRichard\/status\/1824197928040173783|https:\/\/x.com\/KennedyRichard\/status\/1824197928040173783>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1092a4f97098",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-23\/3286745266387_1092a4f970985ebc8d2b_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Shank",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chris.shank.23",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732498096.375469",
        "parent_user_id": "U0378MDUG1Y",
        "attachments": [
            {
                "image_url": "https:\/\/pbs.twimg.com\/tweet_video_thumb\/GVDZXUXX0AAM-F7.jpg:large",
                "image_width": 668,
                "image_height": 386,
                "image_bytes": 29804,
                "from_url": "https:\/\/x.com\/KennedyRichard\/status\/1824197928040173783",
                "service_icon": "http:\/\/abs.twimg.com\/favicons\/twitter.3.ico",
                "id": 1,
                "original_url": "https:\/\/x.com\/KennedyRichard\/status\/1824197928040173783",
                "fallback": "X (formerly Twitter): :mammoth: @KennedyRichard@fosstodon.org (@KennedyRichard) on X",
                "text": "@KenneyNL No guys, hear me out, we might be onto something here! What about tracking eyes that become happy when the connection is reached out? (also in Nodezator's dev branch)\n\n#Python #nodeeditor",
                "title": ":mammoth: @KennedyRichard@fosstodon.org (@KennedyRichard) on X",
                "title_link": "https:\/\/x.com\/KennedyRichard\/status\/1824197928040173783",
                "service_name": "X (formerly Twitter)"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f2+mn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like that idea! Sort of like this?\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/x.com\/KennedyRichard\/status\/1824197928040173783",
                                "text": "https:\/\/x.com\/KennedyRichard\/status\/1824197928040173783"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1732563260.562909",
        "client_msg_id": "4B77371C-BE14-4C23-A1EE-1B38723F97C8",
        "text": "Im still fleshing out some proximity-based primitives, so that might be possible to explore soon!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1092a4f97098",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-23\/3286745266387_1092a4f970985ebc8d2b_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Shank",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chris.shank.23",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732498096.375469",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E509t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Im still fleshing out some proximity-based primitives"
                            },
                            {
                                "type": "text",
                                "text": ", so that might be possible to explore soon!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U08294YLWJH",
        "type": "message",
        "ts": "1732570772.383239",
        "edited": {
            "user": "U08294YLWJH",
            "ts": "1732571528.000000"
        },
        "client_msg_id": "ff96694f-f384-4385-a27f-3076d29cb1cf",
        "text": "> Oleksandr — how do commit messages work in your project? Any thoughts on what you might do there?\n<@UC2A2ARPT> I put just time-stamp there, but I have another approach:\n1. I always start develpment from \"main\" branch into a feature branch\n2. inside feature branch commits do not have any meaningful text except for the time of change;\n3. when I merge back the feature branch I summarize what changes I made",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "54bdcc3cea79",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-25\/8077168843205_54bdcc3cea79c3cee9ab_72.jpg",
            "first_name": "Oleksandr",
            "real_name": "Oleksandr Kryvonos",
            "display_name": "Oleksandr Kryvonos",
            "team": "T5TCAFTA9",
            "name": "oleksandr.kryvonos.od",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732543398.418729",
        "parent_user_id": "U08294YLWJH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KV0OC",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oleksandr — how do commit messages work in your project? Any thoughts on what you might do there?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I put just time-stamp there, but I have another approach:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I always start develpment from \"main\" branch into a feature branch"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "inside feature branch commits do not have any meaningful text except for the time of change;"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "when I merge back the feature branch I summarize what changes I made"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U08294YLWJH",
        "type": "message",
        "ts": "1732571429.216359",
        "client_msg_id": "8e36648e-fc60-4ef8-b0a8-eb49c93c69f7",
        "text": "&gt; I don't quite follow \"transformation history,\" <@U08294YLWJH>\n<@UCUSW7WVD> I will explain - in my workflow what I do with code usuallly is:\n1. I extract block of code into a function\n2. I replace piece of expression with a meaningful variable name (similar to step 1)\n3. I add  condition around block of code\n4. I write a function from scratch\n5. I copy and paste existing function and modify it for the new case.\nAfter each of these steps I often save the file to check whether it still works. This is what I call transormation history.\nList of actions above is not finalized of course.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "54bdcc3cea79",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-25\/8077168843205_54bdcc3cea79c3cee9ab_72.jpg",
            "first_name": "Oleksandr",
            "real_name": "Oleksandr Kryvonos",
            "display_name": "Oleksandr Kryvonos",
            "team": "T5TCAFTA9",
            "name": "oleksandr.kryvonos.od",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732543398.418729",
        "parent_user_id": "U08294YLWJH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Is9UI",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't quite follow \"transformation history,\" "
                            },
                            {
                                "type": "user",
                                "user_id": "U08294YLWJH"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " I will explain - in my workflow what I do with code usuallly is:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I extract block of code into a function"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I replace piece of expression with a meaningful variable name (similar to step 1)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I add  condition around block of code"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I write a function from scratch"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I copy and paste existing function and modify it for the new case."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "After each of these steps I often save the file to check whether it still works. This is what I call transormation history.\nList of actions above is not finalized of course."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U08294YLWJH",
        "type": "message",
        "ts": "1732577146.292839",
        "client_msg_id": "178066c2-5e50-4978-8b2e-2ae645a43955",
        "text": "and now I finalized the project, seems like it already covers all the cases I wanted and I only spent 3 days on it. I will use it now in all of my personal projects. I shall see what is missing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "54bdcc3cea79",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-25\/8077168843205_54bdcc3cea79c3cee9ab_72.jpg",
            "first_name": "Oleksandr",
            "real_name": "Oleksandr Kryvonos",
            "display_name": "Oleksandr Kryvonos",
            "team": "T5TCAFTA9",
            "name": "oleksandr.kryvonos.od",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732543398.418729",
        "parent_user_id": "U08294YLWJH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I0rhZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and now I finalized the project, seems like it already covers all the cases I wanted and I only spent 3 days on it. I will use it now in all of my personal projects. I shall see what is missing."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "saxophone",
                "users": [
                    "UC2A2ARPT",
                    "UCUSW7WVD"
                ],
                "count": 2
            }
        ]
    }
]