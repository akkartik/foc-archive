[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1599464051.075800",
        "client_msg_id": "b84eb6c5-3183-45fb-82a5-41cb415acb2c",
        "text": "It probably means that you don't like constraints. The question was *how* you eat corn cobs, not if you'd rather eat something else! But it seems you are free to invent yet another strategy to deal with cobs.\n\nFor me, it's spirals. Not sure I accept all the apparent consequence though ;-)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599461182.075000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SrRW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It probably means that you don't like constraints. The question was "
                            },
                            {
                                "type": "text",
                                "text": "how",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " you eat corn cobs, not if you'd rather eat something else! But it seems you are free to invent yet another strategy to deal with cobs.\n\nFor me, it's spirals. Not sure I accept all the apparent consequence though ;-)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wink",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1599481344.078100",
        "client_msg_id": "199208A4-277C-4EB1-82F9-D5C820E8F4F1",
        "text": "Yes that would be interesting jack!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598973182.044600",
        "parent_user_id": "U013ZLJARC7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S4j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes that would be interesting jack!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1599496562.080600",
        "client_msg_id": "49427B8A-B192-4AE0-B1B8-D274A42DDCA6",
        "text": "<https:\/\/news.ycombinator.com\/item?id=23811382|https:\/\/news.ycombinator.com\/item?id=23811382> great post on the lisp REPL’s difference from other REPLs. sidenote: can someone explain to me how lisp programmers go from talking to the REPL to updating the code in their source files? in talks and stuff it always seems to be with copy and paste. is that accurate?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "reply_count": 25,
        "reply_users_count": 8,
        "latest_reply": "1599582417.100000",
        "reply_users": [
            "UCUSW7WVD",
            "UK3LH8CF5",
            "UUQ2EQW21",
            "U013ZLJARC7",
            "UHWC9PXBL",
            "U5STGTB3J",
            "UJBAJNFLK",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1599497759.080700"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1599499085.080900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1599499737.081100"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1599500700.081300"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1599500759.081800"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1599500871.082000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1599501013.082300"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1599501213.082500"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1599501647.083100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1599502611.086300"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1599505278.086800"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1599508722.087300"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1599511403.089500"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1599511647.090800"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1599512329.091000"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1599512360.091200"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1599513565.092600"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1599516996.093300"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1599550576.093700"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1599551607.094000"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1599551711.094200"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1599555082.094800"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1599572976.099300"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1599580256.099800"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1599582417.100000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rOL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=23811382",
                                "text": "https:\/\/news.ycombinator.com\/item?id=23811382"
                            },
                            {
                                "type": "text",
                                "text": " great post on the lisp REPL’s difference from other REPLs. sidenote: can someone explain to me how lisp programmers go from talking to the REPL to updating the code in their source files? in talks and stuff it always seems to be with copy and paste. is that accurate?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599497759.080700",
        "client_msg_id": "35a6c52a-54b1-41f9-bf13-a2c91d9b792a",
        "text": "Your question has been a long-standing frustration for me with all REPLs. The dominant way I've seen people deal with it is by not typing directly into the REPL, but keeping their queries in a text editor and then sending them to the REPL with a keystroke. Which feels quite barbaric. I'd rather Alt-Tab and run a command on a shell at that point. But I seem to be in the minority there.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UK55",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Your question has been a long-standing frustration for me with all REPLs. The dominant way I've seen people deal with it is by not typing directly into the REPL, but keeping their queries in a text editor and then sending them to the REPL with a keystroke. Which feels quite barbaric. I'd rather Alt-Tab and run a command on a shell at that point. But I seem to be in the minority there."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1599499085.080900",
        "client_msg_id": "901bc7e7-4043-4e3c-a8ef-5674a3f582f8",
        "text": "For me (and many clojure programmers I know). There is no distinction between working at the repl and editing the source code. I build the program in the file and have an active running repl connected to that file\/project. In fact, I can even load up multiple projects in one repl and work on changes across them. So if I have some library I depend on I can load up it's code, edit it, evaluate it, and have those changes reflected live in my program. \n\nI never do any copy and paste. I am working with a live running program and I can do all sorts of things with that. One example is testing out failure modes and simulating in real time systems going down and coming back up, watching how the system handles it. \n\nAnother is what I've called interactive integration tests. I have some namespace of code that is meant to be run at the repl. It imports parts of my apps and lets me combine them in various ways to test the live working system, but fully parameterizable. \n\nThis flow is the main reason I enjoy programming in clojure so much. I get immediate feedback and a much closer connection to my program.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iNm8V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For me (and many clojure programmers I know). There is no distinction between working at the repl and editing the source code. I build the program in the file and have an active running repl connected to that file\/project. In fact, I can even load up multiple projects in one repl and work on changes across them. So if I have some library I depend on I can load up it's code, edit it, evaluate it, and have those changes reflected live in my program. \n\nI never do any copy and paste. I am working with a live running program and I can do all sorts of things with that. One example is testing out failure modes and simulating in real time systems going down and coming back up, watching how the system handles it. \n\nAnother is what I've called interactive integration tests. I have some namespace of code that is meant to be run at the repl. It imports parts of my apps and lets me combine them in various ways to test the live working system, but fully parameterizable. \n\nThis flow is the main reason I enjoy programming in clojure so much. I get immediate feedback and a much closer connection to my program."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D",
                    "UA14TGLTC"
                ],
                "count": 2
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599499737.081100",
        "client_msg_id": "915ce1b0-1d56-4d63-bea5-bfb10a482e1e",
        "text": "I'd love to hear more.\n\n&gt; There is no distinction between working at the repl and editing the source code.\nDoes typing something at the repl add it to the file open in the editor?\n\n&gt; testing out failure modes and simulating in real time systems going down and coming back up, watching how the system handles it. \nHow do you turn the manual test into a reproducible automated one?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q5Gm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd love to hear more.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is no distinction between working at the repl and editing the source code."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nDoes typing something at the repl add it to the file open in the editor?\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "testing out failure modes and simulating in real time systems going down and coming back up, watching how the system handles it. "
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nHow do you turn the manual test into a reproducible automated one?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "> Does typing something at the repl add it to the file open in the editor?\nThe opposite I am just typing in the file. I know you mentioned sending them to the repl, that is kind of sort of what is happening. But there isn’t some separate repl window I am sending text to. I am just typing and evaluating code. The repl is a background process. I can pull it up and type in it directly, or see print statements there. But generally, I just see the results of my evaluation in line, or in a bigger pretty print buffer. Here is little gif of that (with lots of typos)",
        "files": [
            {
                "id": "F01A84F2K51",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UK3LH8CF5",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hef",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does typing something at the repl add it to the file open in the editor?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThe opposite I am just typing in the file. I know you mentioned sending them to the repl, that is kind of sort of what is happening. But there isn’t some separate repl window I am sending text to. I am just typing and evaluating code. The repl is a background process. I can pull it up and type in it directly, or see print statements there. But generally, I just see the results of my evaluation in line, or in a bigger pretty print buffer. Here is little gif of that (with lots of typos)"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1599500700.081300",
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1599500759.081800",
        "client_msg_id": "961f5e27-c82a-4bcc-9703-b7dc18522be5",
        "text": "&gt; How do you turn the manual test into a reproducible automated one?\nOnce it is in the shape I want, wrap on assert around it and make sure it is where my test runner picks it up. But many times that isn’t the point of the code. It is for a continually evolving system and I am just trying to understand it more, test the bounds, explore data, etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b=Qir",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How do you turn the manual test into a reproducible automated one?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nOnce it is in the shape I want, wrap on assert around it and make sure it is where my test runner picks it up. But many times that isn’t the point of the code. It is for a continually evolving system and I am just trying to understand it more, test the bounds, explore data, etc."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1599500871.082000",
        "edited": {
            "user": "UUQ2EQW21",
            "ts": "1599500897.000000"
        },
        "client_msg_id": "faf03adb-fe45-43b3-9c15-fd5fdcaaad86",
        "text": "Interesting.  I would say you aren't really using a repl here, you are evaluating 'in line' (even if what is happening under the covers is that the text is being sent and received via a repl).  Perhaps that's the standard way of working, but like <@UCUSW7WVD>, I think I expected you to hop into another repl buffer.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0qY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting.  I would say you aren't really using a repl here, you are evaluating 'in line' (even if what is happening under the covers is that the text is being sent and received via a repl).  Perhaps that's the standard way of working, but like "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": ", I think I expected you to hop into another repl buffer."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599501013.082300",
        "client_msg_id": "0634333c-ca40-4e44-bf18-8f7c08fbf305",
        "text": "&gt; But there isn’t some separate repl window I am sending text to. I am just typing and evaluating code. The repl is a background process.\nAh, I see. That is cool. I wouldn't call this a REPL, the REPL is just an implementation detail at this point. But it feels perfectly self-contained and internally consistent without needing a REPL. :thumbsup: :thumbsup:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IVwVq",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But there isn’t some separate repl window I am sending text to. I am just typing and evaluating code. The repl is a background process."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nAh, I see. That is cool. I wouldn't call this a REPL, the REPL is just an implementation detail at this point. But it feels perfectly self-contained and internally consistent without needing a REPL. "
                            },
                            {
                                "type": "emoji",
                                "name": "thumbsup",
                                "unicode": "1f44d"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "thumbsup",
                                "unicode": "1f44d"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "I am using a repl. But a repl in the lisp sense isn’t a user interface. It is a process. There is read-eval-print-loop. I am doing that just sending the print back to my editor. It also exposes an interface which is what people think of as a repl. But the two are connected you can just go back and forth. (at the end I pretty print, small value here so no real difference, just showing it can do that too)",
        "files": [
            {
                "id": "F019T64UUR5",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UK3LH8CF5",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jWDk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am using a repl. But a repl in the lisp sense isn’t a user interface. It is a process. There is read-eval-print-loop. I am doing that just sending the print back to my editor. It also exposes an interface which is what people think of as a repl. But the two are connected you can just go back and forth. (at the end I pretty print, small value here so no real difference, just showing it can do that too)"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1599501213.082500",
        "edited": {
            "user": "UK3LH8CF5",
            "ts": "1599501250.000000"
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1599501647.083100",
        "client_msg_id": "c2b19be4-75b2-47ed-a2ae-87ccd1b13d51",
        "text": "Just to add a bit more flavor to all of this. My repls are usually left open for as long as my computer is running. At work, I usually have 6-10 repls running in the background of various projects. I will have a repl open for weeks or months at a time. I can often go from scratch to full working project and never kill my repl, just continuing to refine my program.\n\nWhen I was learning some neural network stuff, I had an aws machine with a beefy gpu. I had a remote repl on the machine, would run my training overnight, reconnect to the running repl and see the results in some var.\n\nI truly can’t imagine being as productive without this sort of setup. It changes not only how you code, but what you code. I can immediately tell Clojurians who don’t use a decent repl setup from how they structure their code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B0L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just to add a bit more flavor to all of this. My repls are usually left open for as long as my computer is running. At work, I usually have 6-10 repls running in the background of various projects. I will have a repl open for weeks or months at a time. I can often go from scratch to full working project and never kill my repl, just continuing to refine my program.\n\nWhen I was learning some neural network stuff, I had an aws machine with a beefy gpu. I had a remote repl on the machine, would run my training overnight, reconnect to the running repl and see the results in some var.\n\nI truly can’t imagine being as productive without this sort of setup. It changes not only how you code, but what you code. I can immediately tell Clojurians who don’t use a decent repl setup from how they structure their code."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFPRPSA4S",
        "type": "message",
        "ts": "1599502182.086100",
        "client_msg_id": "526FAAC1-7686-4B9D-BB6D-F552C87CE605",
        "text": "I’m a row person and definitely algebra oriented. I haven’t programmed that much so it’ll be interesting to see where I’m drawn to in programming in the future. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5f4ac5375e5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f5f4ac5375e539e50ceedb08f65e9dd3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Robin Allison",
            "display_name": "Robin",
            "team": "T5TCAFTA9",
            "name": "robinps2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599461182.075000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z=g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m a row person and definitely algebra oriented. I haven’t programmed that much so it’ll be interesting to see where I’m drawn to in programming in the future. "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599502611.086300",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1599506226.000000"
        },
        "client_msg_id": "3180bf89-8921-4359-912d-44613fcf6958",
        "text": "I see what you mean. It sounds really cool, a state I've read about but never experienced, where the program is effectively immortal: <http:\/\/steve-yegge.blogspot.com\/2007\/01\/pinocchio-problem.html|http:\/\/steve-yegge.blogspot.com\/2007\/01\/pinocchio-problem.html>\n\n&gt; I can immediately tell Clojurians who don't use a decent repl setup from how they structure their code.\n&gt; \nI've encountered something similar from the opposite direction. I always found all the architecture astronomy Java programmers got into to be extremely frustrating -- until I started using an IDE and realized that they were using operations that their tooling made much easier than it was for me in Vim.\n\nThis is why C++ programmers write longer functions than Java programmers: the C++ grammar is context-sensitive and harder to build an IDE for. Which connects up neatly with another thread this morning, with <@U01286RNB70>: <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1599495354127000?thread_ts=1599070210.092100&amp;cid=C5T9GPWFL|https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1599495354127000?thread_ts=1599070210.092100&amp;cid=C5T9GPWFL>\n\n&gt; There is read-eval-print-loop. I am doing that just sending the print back to my editor. It also exposes an interface which is what people think of as a repl.\n&gt; \nThis should seem like pedantic philosophical hairsplitting, but I'm finding it interesting for some reason. The way I see it:\n\n* Your environment allows showing values of variables anywhere.\n* For historical reasons, it does this by using a REPL behind the scenes.\n* Since there's a REPL, it exposes it to you that you _could_ use.\n\nBut as you said, you don't normally use the REPL. That says to me you have something _better_. There's a spatial component here that sounds awesome. While it's technically correct to call it a read-eval-print-loop, I think that understates the value.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1599495354127000?thread_ts=1599070210.092100&amp;cid=C5T9GPWFL",
                "fallback": "[September 7th, 2020 9:15 AM] ak: <@U01286RNB70> the original thread seems to be about designing languages. I interpret that as about designing textual programming languages. Does prototyping those still have a limitation with text files? (Earlier phases certainly benefit from the ability to draw lines and boxes and so on.)\n\nIn general I'm a bit bemused by this thread. As a programmer it all feels quite waterfall-y. If you try to \"mock up\" a language before giving it a grammar you're quite likely to end up introducing ambiguities that need modifying the language to resolve. Similarly with many other aspects of the activity. If an activity eventually needs to be mapped on non-linear primitives (as computer programs do), it seems to me that it benefits from lots of feedback loops.\n\nFunny story: the original waterfall diagram [1] had feedback loops between phases, so even waterfall _practiced right_ can be quite effective. Of course, that's not what anybody means by the term anymore..\n\n[1] <http:\/\/www-scf.usc.edu\/~csci201\/lectures\/Lecture11\/royce1970.pdf>, figure 3",
                "ts": "1599495354.127000",
                "author_id": "UCUSW7WVD",
                "author_subname": "Kartik Agaram",
                "channel_id": "C5T9GPWFL",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "<@U01286RNB70> the original thread seems to be about designing languages. I interpret that as about designing textual programming languages. Does prototyping those still have a limitation with text files? (Earlier phases certainly benefit from the ability to draw lines and boxes and so on.)\n\nIn general I'm a bit bemused by this thread. As a programmer it all feels quite waterfall-y. If you try to \"mock up\" a language before giving it a grammar you're quite likely to end up introducing ambiguities that need modifying the language to resolve. Similarly with many other aspects of the activity. If an activity eventually needs to be mapped on non-linear primitives (as computer programs do), it seems to me that it benefits from lots of feedback loops.\n\nFunny story: the original waterfall diagram [1] had feedback loops between phases, so even waterfall _practiced right_ can be quite effective. Of course, that's not what anybody means by the term anymore..\n\n[1] <http:\/\/www-scf.usc.edu\/~csci201\/lectures\/Lecture11\/royce1970.pdf>, figure 3",
                "author_name": "Kartik Agaram",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/UCUSW7WVD",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1599495354127000?thread_ts=1599070210.092100&amp;cid=C5T9GPWFL",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ti79b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I see what you mean. It sounds really cool, a state I've read about but never experienced, where the program is effectively immortal: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/steve-yegge.blogspot.com\/2007\/01\/pinocchio-problem.html",
                                "text": "http:\/\/steve-yegge.blogspot.com\/2007\/01\/pinocchio-problem.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I can immediately tell Clojurians who don't use a decent repl setup from how they structure their code.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI've encountered something similar from the opposite direction. I always found all the architecture astronomy Java programmers got into to be extremely frustrating -- until I started using an IDE and realized that they were using operations that their tooling made much easier than it was for me in Vim.\n\nThis is why C++ programmers write longer functions than Java programmers: the C++ grammar is context-sensitive and harder to build an IDE for. Which connects up neatly with another thread this morning, with "
                            },
                            {
                                "type": "user",
                                "user_id": "U01286RNB70"
                            },
                            {
                                "type": "text",
                                "text": ": "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1599495354127000?thread_ts=1599070210.092100&cid=C5T9GPWFL",
                                "text": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1599495354127000?thread_ts=1599070210.092100&cid=C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is read-eval-print-loop. I am doing that just sending the print back to my editor. It also exposes an interface which is what people think of as a repl.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis should seem like pedantic philosophical hairsplitting, but I'm finding it interesting for some reason. The way I see it:\n\n* Your environment allows showing values of variables anywhere.\n* For historical reasons, it does this by using a REPL behind the scenes.\n* Since there's a REPL, it exposes it to you that you "
                            },
                            {
                                "type": "text",
                                "text": "could",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " use.\n\nBut as you said, you don't normally use the REPL. That says to me you have something "
                            },
                            {
                                "type": "text",
                                "text": "better",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". There's a spatial component here that sounds awesome. While it's technically correct to call it a read-eval-print-loop, I think that understates the value."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1599505278.086800",
        "client_msg_id": "05c2f615-18b0-453e-9e8e-7095cc632fe0",
        "text": "There are people in the clojure community that take that point to the pedantic level and would say that technically I don't have a repl at all because I am not using the built-in one. I ignore that discussion. \n\nWhat I actually find more interesting is the fact that actually the editor interface and the repl interface are both just interfaces over the process. What is really happening behind the scenes is some separate server process that is running my code and accepting socket connections and sending output to various places. That behind the scenes process is the real repl going on and everything else is just a view on top of it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7rx7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are people in the clojure community that take that point to the pedantic level and would say that technically I don't have a repl at all because I am not using the built-in one. I ignore that discussion. \n\nWhat I actually find more interesting is the fact that actually the editor interface and the repl interface are both just interfaces over the process. What is really happening behind the scenes is some separate server process that is running my code and accepting socket connections and sending output to various places. That behind the scenes process is the real repl going on and everything else is just a view on top of it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1599508722.087300",
        "client_msg_id": "2bb7b6c0-2193-43a9-bd63-803cf1d8e5f4",
        "text": "Quite similar to <@UK3LH8CF5>. If you're interested in further elaboration, I wrote something about my own practices <https:\/\/clojureverse.org\/t\/share-the-nitty-gritty-details-of-your-clojure-workflow\/1208\/8?u=jackrusher|here>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "attachments": [
            {
                "service_name": "ClojureVerse",
                "title": "Share the nitty-gritty details of your Clojure workflow!",
                "title_link": "https:\/\/clojureverse.org\/t\/share-the-nitty-gritty-details-of-your-clojure-workflow\/1208\/8?u=jackrusher",
                "text": "(I can’t really separate my workflow from my preferred style of program construction, so this answer contains some of each.) Exploratory The beginning of most new projects for me is trying to establish an understanding of the problem domain. So, for example, I might fetch something from a remote JSON endpoint using clj-http and have a look at what it returns. The process for this would be to type the fetching code (which converts the result into Clojure data structures, include keyword-iz...",
                "fallback": "ClojureVerse: Share the nitty-gritty details of your Clojure workflow!",
                "thumb_url": "https:\/\/clojureverse.org\/uploads\/default\/original\/2X\/0\/05328734cba366c9983ba813acf85033eac594b8.png",
                "ts": 1513625027,
                "from_url": "https:\/\/clojureverse.org\/t\/share-the-nitty-gritty-details-of-your-clojure-workflow\/1208\/8?u=jackrusher",
                "thumb_width": 512,
                "thumb_height": 512,
                "service_icon": "https:\/\/clojureverse.org\/uploads\/default\/optimized\/2X\/0\/05328734cba366c9983ba813acf85033eac594b8_2_180x180.png",
                "id": 1,
                "original_url": "https:\/\/clojureverse.org\/t\/share-the-nitty-gritty-details-of-your-clojure-workflow\/1208\/8?u=jackrusher"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ek9P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Quite similar to "
                            },
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": ". If you're interested in further elaboration, I wrote something about my own practices "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/clojureverse.org\/t\/share-the-nitty-gritty-details-of-your-clojure-workflow\/1208\/8?u=jackrusher",
                                "text": "here"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1599511403.089500",
        "client_msg_id": "9FFAF615-8F01-4AE2-A491-23F907936993",
        "text": "wow, this conversation has cleared up a whole lot of long-standing questions i didn’t even realize had been nagging me! is there a beginner, out-of-the-box setup for getting a clojure repl working like that?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WsfUz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "wow, this conversation has cleared up a whole lot of long-standing questions i didn’t even realize had been nagging me! is there a beginner, out-of-the-box setup for getting a clojure repl working like that?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1599511647.090800",
        "client_msg_id": "B4DC4837-3786-468A-92CD-41B42F17106C",
        "text": ":point_up: Yes, I’d like to learn about that too. \nAnd does it have to be a Clojure REPL or can it be any REPL?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5x3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "point_up",
                                "unicode": "261d-fe0f"
                            },
                            {
                                "type": "text",
                                "text": " Yes, I’d like to learn about that too. \nAnd does it have to be a Clojure REPL or can it be any REPL?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1599512329.091000",
        "edited": {
            "user": "UK3LH8CF5",
            "ts": "1599516696.000000"
        },
        "client_msg_id": "7d4ca502-d307-4f15-be4c-757bbcfe709a",
        "text": "This is what I followed back in the day. Probably a more up to date one exists somewhere. This is clojure specific. Languages really have to be built\nwith this workflow in mind to work well with it. I've seen someone do it well with Ruby, but I have had many failed attempts at making a js repl have the properties I want. \n\n<https:\/\/www.braveclojure.com\/basic-emacs\/|https:\/\/www.braveclojure.com\/basic-emacs\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "quO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is what I followed back in the day. Probably a more up to date one exists somewhere. This is clojure specific. Languages really have to be built\nwith this workflow in mind to work well with it. I've seen someone do it well with Ruby, but I have had many failed attempts at making a js repl have the properties I want. \n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.braveclojure.com\/basic-emacs\/",
                                "text": "https:\/\/www.braveclojure.com\/basic-emacs\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD",
                    "UHWC9PXBL",
                    "U015V233CFL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1599512360.091200",
        "client_msg_id": "03026878-ae29-4235-8519-20a31cfe9f73",
        "text": "If you use a different editor let me know what it is and I can see if there is a decent setup for that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1yqvC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you use a different editor let me know what it is and I can see if there is a decent setup for that."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1599513565.092600",
        "client_msg_id": "470A63ED-6268-4515-9004-00587927CE1B",
        "text": "i use vim but i’d be interested in any vscode setup (or if someone’s written a blogpost for doing lisp repls with evil mode)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IHi4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i use vim but i’d be interested in any vscode setup (or if someone’s written a blogpost for doing lisp repls with evil mode)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1599516996.093300",
        "client_msg_id": "5e20402b-8bc7-4326-8c4b-865fc40b555d",
        "text": "Lots of people I know use evil mode. Usually they use it with  <https:\/\/www.spacemacs.org\/|https:\/\/www.spacemacs.org\/> Shouldn't be hard to adapt the tutorial I linked but start with spacemacs. \n\n\nI don't know anyone with a decent vim setup. People do it, but they never have the workflow I show above. (And are typically very proud of that fact). \n\nFor vs code I've heard good things about <https:\/\/calva.io\/|https:\/\/calva.io\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599496562.080600",
        "parent_user_id": "UHWC9PXBL",
        "attachments": [
            {
                "title": "Spacemacs: Emacs advanced Kit focused on Evil",
                "title_link": "https:\/\/www.spacemacs.org\/",
                "text": "Emacs advanced Kit focused on Evil",
                "fallback": "Spacemacs: Emacs advanced Kit focused on Evil",
                "from_url": "https:\/\/www.spacemacs.org\/",
                "service_icon": "https:\/\/www.spacemacs.org\/favicons\/apple-touch-icon-57x57.png",
                "service_name": "spacemacs.org",
                "id": 1,
                "original_url": "https:\/\/www.spacemacs.org\/"
            },
            {
                "title": "Calva User Guide",
                "title_link": "https:\/\/calva.io\/",
                "text": "Learn how to use Calva to boost your Clojure and ClojureScript coding in VS Code.",
                "fallback": "Calva User Guide",
                "from_url": "https:\/\/calva.io\/",
                "service_icon": "https:\/\/calva.io\/img\/favicon.ico",
                "service_name": "calva.io",
                "id": 2,
                "original_url": "https:\/\/calva.io\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pv+sV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lots of people I know use evil mode. Usually they use it with  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.spacemacs.org\/",
                                "text": "https:\/\/www.spacemacs.org\/"
                            },
                            {
                                "type": "text",
                                "text": " Shouldn't be hard to adapt the tutorial I linked but start with spacemacs. \n\n\nI don't know anyone with a decent vim setup. People do it, but they never have the workflow I show above. (And are typically very proud of that fact). \n\nFor vs code I've heard good things about "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/calva.io\/",
                                "text": "https:\/\/calva.io\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    }
]