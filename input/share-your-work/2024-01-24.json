[
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1706087429.841149",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1706087465.000000"
        },
        "client_msg_id": "02eecdb0-ad35-4793-b622-c743c34782ae",
        "text": "Calling out to <@UJBAJNFLK> <@U5T9JLUAE> <@U0112C10V4Y> <@UCUSW7WVD> for some of your usual tough challenges! :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1706028327.071989",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zf1xL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Calling out to "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U5T9JLUAE"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U0112C10V4Y"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " for some of your usual tough challenges! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1706100536.038049",
        "client_msg_id": "b3d74305-835e-4136-928a-9d188a56b2ec",
        "text": "What I see as the main challenge in your vision is dealing with lots of links. In a heavily linked universe, you only want to see a subset in any given situation. For example, when I look at an event in my agenda, I may want to see all e-mails that mention that date (they could be about other events with time conflicts) but not all e-mails sent on that date. In a different context, the latter may be exactly what I want to see. A dominantly spatial organization of data would not support such distinctions.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1706028327.071989",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XIh8S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What I see as the main challenge in your vision is dealing with lots of links. In a heavily linked universe, you only want to see a subset in any given situation. For example, when I look at an event in my agenda, I may want to see all e-mails that mention that date (they could be about other events with time conflicts) but not all e-mails sent on that date. In a different context, the latter may be exactly what I want to see. A dominantly spatial organization of data would not support such distinctions."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1706111697.710979",
        "client_msg_id": "a30acb8b-98fd-48a6-8006-4dd03a0b104c",
        "text": "Does this mean that the free torsor on two elements A and B is given by the following procedure?\n1. Construct the free monoid on two elements A and B (aside: this is easy in programming, this is just strings of As and Bs)\n2. Construct the free group on two elements A and B by adding A^{-1} and B^{-1} to the monoid from last step and modifying concatenation (written as juxtaposition) so that the inverses actually satisfy AA^{-1}=id.\n3. Construct the free torsor on two elements A and B by taking all elements X of the free group (from last step) of the form X=YZ^{-1}W and keeping concatenation the same (modified to be a group operation in the last step).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704349378.649339",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "u8Z09",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does this mean that the free torsor on two elements A and B is given by the following procedure?\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Construct the free monoid on two elements A and B (aside: this is easy in programming, this is just strings of As and Bs)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Construct the free group on two elements A and B by adding A^{-1} and B^{-1} to the monoid from last step and modifying concatenation (written as juxtaposition) so that the inverses actually satisfy AA^{-1}=id."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Construct the free torsor on two elements A and B by taking all elements X of the free group (from last step) of the form X=YZ^{-1}W and keeping concatenation the same (modified to be a group operation in the last step)."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1706111763.765109",
        "client_msg_id": "cf6d4d74-18f1-4251-9efd-7a495a6ca09a",
        "text": "If so, then the free torsor has the same elements as the free group, and the same operation, but I suppose it has more automorphisms?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704349378.649339",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sGMxt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If so, then the free torsor has the same elements as the free group, and the same operation, but I suppose it has more automorphisms?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1706111833.536169",
        "client_msg_id": "36c8364c-62e7-4dfa-a876-8495dc15f94d",
        "text": "Which makes sense to me because an affine space has the same elements as a vector space but with more automorphisms",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704349378.649339",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y0xWO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Which makes sense to me because an affine space has the same elements as a vector space but with more automorphisms"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1706111998.053609",
        "client_msg_id": "c2d62a3b-7b2c-407f-a582-16702eaf047d",
        "text": "Going back, I realize I've pretty much just re-stated what you said",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704349378.649339",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ImjVB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Going back, I realize I've pretty much just re-stated what you said"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1706112207.813649",
        "edited": {
            "user": "U05M5A8E0NT",
            "ts": "1706112283.000000"
        },
        "client_msg_id": "2e1de5d8-e56f-4610-9f86-8c0e0386f8cf",
        "text": "But I guess I feel now that a torsor is about taking a perspective on a group that gives you more transformations (automorphisms) to work with.\n\nI want to understand more about the automorphisms now. It feels like the automorphisms of a torsor might consist of something like \"differences of group automorphisms\"? I'm really not sure though.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704349378.649339",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eF8uf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But I guess I feel now that a torsor is about taking a perspective on a group that gives you more transformations (automorphisms) to work with.\n\nI want to understand more about the automorphisms now. It feels like the automorphisms of a torsor might consist of something like \"differences of group automorphisms\"? I'm really not sure though."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05M5A8E0NT",
        "type": "message",
        "ts": "1706112324.696059",
        "client_msg_id": "d24d3c34-93aa-47d1-b9b8-ad04baeff1b5",
        "text": "Thank you again btw <@UFPRPSA4S>, I am really appreciating this discussion",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3b2f7aa271ab",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-15\/5729371230167_3b2f7aa271abae44baef_72.jpg",
            "first_name": "Elliot",
            "real_name": "Elliot",
            "display_name": "Elliot",
            "team": "T5TCAFTA9",
            "name": "vez",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704349378.649339",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EIB6Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you again btw "
                            },
                            {
                                "type": "user",
                                "user_id": "UFPRPSA4S"
                            },
                            {
                                "type": "text",
                                "text": ", I am really appreciating this discussion"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03R0B9U1GD",
        "type": "message",
        "ts": "1706112415.585399",
        "client_msg_id": "82a357d8-1bcc-4a7e-9098-b6dbe2135b82",
        "text": "Note to self: I need to catch up with this thread!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "78c476adad42",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-26\/3992499177765_78c476adad42ab6cfe32_72.png",
            "first_name": "Lu",
            "real_name": "Lu Wilson",
            "display_name": "TodePond",
            "team": "T5TCAFTA9",
            "name": "l2wilson94",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704349378.649339",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aMSKn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Note to self: I need to catch up with this thread!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UFPRPSA4S"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0112C10V4Y",
        "type": "message",
        "ts": "1706119934.657729",
        "client_msg_id": "c124af71-0f76-4686-879a-1225aedbaa26",
        "text": "Your object network is similar to Alexander Obenauer's work on OLLOS - <https:\/\/alexanderobenauer.com\/ollos\/|https:\/\/alexanderobenauer.com\/ollos\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf521cc065bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f521cc065bb724c90c57c263ec7ee857.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Naveen Michaud-Agrawal",
            "display_name": "Naveen Michaud-Agrawal",
            "team": "T5TCAFTA9",
            "name": "naveen.michaudagrawal",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1706028327.071989",
        "parent_user_id": "UE6EFEPTQ",
        "attachments": [
            {
                "image_url": "https:\/\/alexanderobenauer.com\/assets\/imgs\/social\/exp002.png",
                "image_width": 1800,
                "image_height": 900,
                "image_bytes": 69692,
                "from_url": "https:\/\/alexanderobenauer.com\/ollos\/",
                "service_icon": "https:\/\/alexanderobenauer.com\/assets\/icons\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/alexanderobenauer.com\/ollos\/",
                "fallback": "OLLOS",
                "text": "OLLOS is an experiment that organizes everything in my personal computing environment on one unified timeline.",
                "title": "OLLOS",
                "title_link": "https:\/\/alexanderobenauer.com\/ollos\/",
                "service_name": "alexanderobenauer.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OvtIn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Your object network is similar to Alexander Obenauer's work on OLLOS - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/alexanderobenauer.com\/ollos\/",
                                "text": "https:\/\/alexanderobenauer.com\/ollos\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0112C10V4Y",
        "type": "message",
        "ts": "1706119968.215489",
        "client_msg_id": "a459ef99-c010-4b33-8dae-8d87d8e5a153",
        "text": "Would be interesting to think about how a timeline based frame of reference would work in VR",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf521cc065bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f521cc065bb724c90c57c263ec7ee857.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Naveen Michaud-Agrawal",
            "display_name": "Naveen Michaud-Agrawal",
            "team": "T5TCAFTA9",
            "name": "naveen.michaudagrawal",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1706028327.071989",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I5hxw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would be interesting to think about how a timeline based frame of reference would work in VR"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPRPSA4S",
        "type": "message",
        "ts": "1706161567.376059",
        "client_msg_id": "0e9fe92c-de95-458e-a6fd-eb366d80c211",
        "text": "<@U05M5A8E0NT> I almost entirely agree with your description of the free torsor, but I would make one small change to step 3. You write \"Construct the free torsor on two elements A and B by taking all elements X of the free group of the form X=YZ^{-1}W\" but I don't think Y,Z, and W can be arbitrary elements of the free group. I think they have to be only those elements you get by starting with A and B and applying that operation repeatedly to get larger and larger subsets of the free group.\n\nExplicitly, let S be a subgroup of the free group on {A,B} and let H(S)={YZ^{-1}W | Y,Z,W \\in S}. I'm thinking \"H\" for \"Heap operation\". Let T_0={A,B} and define T_n inductively by T_n = T_{n-1} U H(T_{n-1}). Then the free torsor on {A,B} is the union of all the T_n for n=0,1,2, etc. (I think this accurately describes the idea from the last paragraph, but the idea is the more important thing at any rate.)\n\nSo for example, T_0 = {A,B} so these are both elements of the free torsor. Then we find T_1 = {A,B} U { YZ^{-1}W | Y,Z,W are in {A,B} }. The second set in this union equals {A,B, AB^{-1}A, BA^{-1}B}. Thus T_1={A,B,AB^{-1}A, BA^{-1}B} so each of these are elements of the free torsor.\n\nYou can keep on doing this but I don't think you are ever able to construct A^{-1} from this procedure. Consequently the free torsor is a strict subset of the free group. What does it look like then? I'll quote from a previous post\n\nIn general, for the free torsor on X \"I expect both the structure group and the torsor itself embed in the free group on X, with the structure group being the subgroup of the free group generated by all elements xy^{-1} with x and y in X, and the torsor itself consisting of all products tx with t in the structure group and x in X. And (A-&gt;B)C is represented as AB^{-1}C.\"\n\nThus a typical element of the free torsor looks like (ab^{-1})(cd^{-1})...(xy^{-1})z with each of the elements a...z belonging to X.\n\nIn terms of how this is justified the very rough idea is that you can quantify how many heap operations it takes to produce a particular element starting with (the set the torsor is free on, namely) X. Then you can do induction on how many heap operations it takes to form each element in a particular expression.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5f4ac5375e5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f5f4ac5375e539e50ceedb08f65e9dd3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Robin Allison",
            "display_name": "Robin",
            "team": "T5TCAFTA9",
            "name": "robinps2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704349378.649339",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "15yxn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U05M5A8E0NT"
                            },
                            {
                                "type": "text",
                                "text": " I almost entirely agree with your description of the free torsor, but I would make one small change to step 3. You write \"Construct the free torsor on two elements A and B by taking all elements X of the free group of the form X=YZ^{-1}W\" but I don't think Y,Z, and W can be arbitrary elements of the free group. I think they have to be only those elements you get by starting with A and B and applying that operation repeatedly to get larger and larger subsets of the free group.\n\nExplicitly, let S be a subgroup of the free group on {A,B} and let H(S)={YZ^{-1}W | Y,Z,W \\in S}. I'm thinking \"H\" for \"Heap operation\". Let T_0={A,B} and define T_n inductively by T_n = T_{n-1} U H(T_{n-1}). Then the free torsor on {A,B} is the union of all the T_n for n=0,1,2, etc. (I think this accurately describes the idea from the last paragraph, but the idea is the more important thing at any rate.)\n\nSo for example, T_0 = {A,B} so these are both elements of the free torsor. Then we find T_1 = {A,B} U { YZ^{-1}W | Y,Z,W are in {A,B} }. The second set in this union equals {A,B, AB^{-1}A, BA^{-1}B}. Thus T_1={A,B,AB^{-1}A, BA^{-1}B} so each of these are elements of the free torsor.\n\nYou can keep on doing this but I don't think you are ever able to construct A^{-1} from this procedure. Consequently the free torsor is a strict subset of the free group. What does it look like then? I'll quote from a previous post\n\nIn general, for the free torsor on X \"I expect both the structure group and the torsor itself embed in the free group on X, with the structure group being the subgroup of the free group generated by all elements xy^{-1} with x and y in X, and the torsor itself consisting of all products tx with t in the structure group and x in X. And (A->B)C is represented as AB^{-1}C.\"\n\nThus a typical element of the free torsor looks like (ab^{-1})(cd^{-1})...(xy^{-1})z with each of the elements a...z belonging to X.\n\nIn terms of how this is justified the very rough idea is that you can quantify how many heap operations it takes to produce a particular element starting with (the set the torsor is free on, namely) X. Then you can do induction on how many heap operations it takes to form each element in a particular expression."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U05M5A8E0NT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFPRPSA4S",
        "type": "message",
        "ts": "1706161732.565809",
        "client_msg_id": "041e07b4-4098-42eb-9b86-58a6f0a38e0b",
        "text": "\"But I guess I feel now that a torsor is about taking a perspective on a group that gives you more transformations (automorphisms) to work with.I want to understand more about the automorphisms now. It feels like the automorphisms of a torsor might consist of something like \"differences of group automorphisms\"? I'm really not sure though.\"\n\nEven if the free torsors are a strict subset of the free group, this is a really interesting perspective! I've never thought of the relation between groups and torsors in terms of their automorphisms before but its an intriguing thought. One example I'm eager to explore it with: The dihedral group for the square, D8. This is super cool, so thanks! It also puts context to some general math I slogged through on the automorphisms of torsors. More to say, but that's all I have for tonight.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5f4ac5375e5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f5f4ac5375e539e50ceedb08f65e9dd3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Robin Allison",
            "display_name": "Robin",
            "team": "T5TCAFTA9",
            "name": "robinps2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704349378.649339",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pH55I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"But I guess I feel now that a torsor is about taking a perspective on a group that gives you more transformations (automorphisms) to work with.I want to understand more about the automorphisms now. It feels like the automorphisms of a torsor might consist of something like \"differences of group automorphisms\"? I'm really not sure though.\"\n\nEven if the free torsors are a strict subset of the free group, this is a really interesting perspective! I've never thought of the relation between groups and torsors in terms of their automorphisms before but its an intriguing thought. One example I'm eager to explore it with: The dihedral group for the square, D8. This is super cool, so thanks! It also puts context to some general math I slogged through on the automorphisms of torsors. More to say, but that's all I have for tonight."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U05M5A8E0NT"
                ],
                "count": 1
            }
        ]
    }
]