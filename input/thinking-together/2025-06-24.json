[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1750758492.106669",
        "client_msg_id": "960765AD-7487-4842-AA80-FE851CD63281",
        "text": "In JS, `eval()` takes a string, so if you want to create and evaluate an expression at run time you must build a string representation. In any Lisp, it takes the AST to evaluate. The printer should be able to print everything the reader can read, and evaluation should be done on the result of read (which can also be built up with code without any string manipulation).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1749390179.045749",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vyQWh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In JS, "
                            },
                            {
                                "type": "text",
                                "text": "eval()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " takes a string, so if you want to create and evaluate an expression at run time you must build a string representation"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " In any Lisp, it takes the AST to evaluate. The printer should be able to print everything the reader can read, and evaluation should be done on the result of read (which can also be built up with code without any string manipulation"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1750758929.585769",
        "client_msg_id": "4BC61447-1A2B-44F5-9CA7-ED8CE2B29742",
        "text": "For those of us who have used lisps, the fact that the Python and JS interpreters contain fast, well-tested parsers for their syntaxes that we cannot use from within the language is a source of angry disappointment. Why should I need to write a JS parser in JS? They have a good one written in C++ already!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1749390179.045749",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rpvs5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For those of us who have used lisps, the fact that the Python and JS interpreters contain fast, well-tested parsers for their syntaxes that we cannot use from within the language is a source of angry disappointment"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Why should I need to write a JS parser in JS? They have a good one written in C++ already!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06SS0DHZD1",
        "type": "message",
        "ts": "1750761576.662609",
        "client_msg_id": "f66061cb-0fc2-4285-ad7e-ea7d5cbb19b6",
        "text": "Python has at least <https:\/\/docs.python.org\/3\/library\/language.html>. But it's true for JavaScript. There is no excuse.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "287ba5559ee1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-04-04\/6922823105585_287ba5559ee1cedd6b98_72.png",
            "first_name": "Marek",
            "real_name": "Marek Rogalski",
            "display_name": "maf",
            "team": "T5TCAFTA9",
            "name": "mafikpl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1749390179.045749",
        "parent_user_id": "UGWUJUZHT",
        "attachments": [
            {
                "image_url": "https:\/\/docs.python.org\/3.13\/_images\/social_previews\/summary_library_language_b0c6e977.png",
                "image_width": 1146,
                "image_height": 600,
                "image_bytes": 88740,
                "from_url": "https:\/\/docs.python.org\/3\/library\/language.html",
                "service_icon": "https:\/\/docs.python.org\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/docs.python.org\/3\/library\/language.html",
                "fallback": "Python documentation: Python Language Services",
                "text": "Python provides a number of modules to assist in working with the Python language. These modules support tokenizing, parsing, syntax analysis, bytecode disassembly, and various other facilities. Th...",
                "title": "Python Language Services",
                "title_link": "https:\/\/docs.python.org\/3\/library\/language.html",
                "service_name": "Python documentation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YCR6Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Python has at least "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.python.org\/3\/library\/language.html"
                            },
                            {
                                "type": "text",
                                "text": ". But it's true for JavaScript. There is no excuse."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1750805027.378679",
        "client_msg_id": "D48CCDDD-DFF5-4CD5-BD9D-CEF946753E0A",
        "text": "I find this discussion to be quite stimulating.\n\nI summarize this discussion with a play-by-play:\n\nThe graybeards say that programming could be more productive.\n\nThe youngbloods are saying “but, we’ve identified and duplicated every piece of technology that you say leads to more productivity. Why is this not enough? What’s the missing piece(s)?. Maybe you’re simply tilting at windmills, maybe current programming is at least as productive as you think that old-fashioned programming is\/was?”\n\nJack Rusher’s video evidence shows that he could knock off some programming task using Clojure+emacs with the implication that this same kind of one-off productivity is not possible using other combinations of current PLs and IDEs, etc. The response is: there’s nothing here that hasn’t already been duplicated using current technology.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1749390179.045749",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nmwAZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I find this discussion to be quite stimulating.\n\nI summarize this discussion with a play-by-play:\n\nThe graybeards say that programming could be more productive.\n\nThe youngbloods are saying “but, we’ve identified and duplicated every piece of technology that you say leads to more productivity. Why is this not enough? What’s the missing piece(s)?. Maybe you’re simply tilting at windmills, maybe current programming is at least as productive as you think that old-fashioned programming is\/was?”\n\nJack Rusher’s video evidence shows that he could knock off some programming task using Clojure+emacs with the implication that this same kind of one-off productivity is not possible using other combinations of current PLs and IDEs, etc. The response is: there’s nothing here that hasn’t already been duplicated using current technology."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]