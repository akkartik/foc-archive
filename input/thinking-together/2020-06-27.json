[
    {
        "user": "UK500AGQ4",
        "type": "message",
        "ts": "1593261738.000800",
        "client_msg_id": "78302d52-7cee-4064-8e3a-950966dd5146",
        "text": "well, my implementation is in Python right now, but really I'm just looking for a good implementation technology for such a UI - nothing about being polyglot",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g87b7201c4f7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/687b7201c4f7653ccc0ec77826fc51d7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Spencer Baugh",
            "display_name": "Spencer Baugh",
            "team": "T5TCAFTA9",
            "name": "spencerbaugh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593225852.497700",
        "parent_user_id": "UK500AGQ4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Wlr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "well, my implementation is in Python right now, but really I'm just looking for a good implementation technology for such a UI - nothing about being polyglot"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK500AGQ4",
        "type": "message",
        "ts": "1593270370.001000",
        "client_msg_id": "a219ae15-32cd-4f6a-bfb7-21b34953fe1c",
        "text": "like, I can define some serializable protocol for discovering methods and objects and introspecting to find out the possible arguments, and implement that on my implementation side - but I don't know what would be a good way to implement the front-end of that",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g87b7201c4f7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/687b7201c4f7653ccc0ec77826fc51d7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Spencer Baugh",
            "display_name": "Spencer Baugh",
            "team": "T5TCAFTA9",
            "name": "spencerbaugh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593225852.497700",
        "parent_user_id": "UK500AGQ4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lwc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "like, I can define some serializable protocol for discovering methods and objects and introspecting to find out the possible arguments, and implement that on my implementation side - but I don't know what would be a good way to implement the front-end of that"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK500AGQ4",
        "type": "message",
        "ts": "1593270461.001200",
        "client_msg_id": "74dabb58-8b54-4f99-8110-867742144018",
        "text": "(And of course it would probably be nicer if I didn't have to send that data through a serializable protocol at all, but instead the front-end just got it as structured data through function calls, but that seems unlikely, so I can just bite that bullet)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g87b7201c4f7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/687b7201c4f7653ccc0ec77826fc51d7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Spencer Baugh",
            "display_name": "Spencer Baugh",
            "team": "T5TCAFTA9",
            "name": "spencerbaugh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593225852.497700",
        "parent_user_id": "UK500AGQ4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D+bGL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(And of course it would probably be nicer if I didn't have to send that data through a serializable protocol at all, but instead the front-end just got it as structured data through function calls, but that seems unlikely, so I can just bite that bullet)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1593274446.009800",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1593287002.000000"
        },
        "client_msg_id": "253952DF-0D5F-4A35-AD12-F6F4FA4E0592",
        "text": "<@UK500AGQ4> whenever you’re talking about User interface libraries, Inevitably you will ask for a text entry field. The text entry field is the most complicated part of every operating system. To render text in a box and handle text entry, that is over 1 million lines of code more than your typical project. There are not even 100 people alive in the world who know the truetype language that underlies text rendering. The text editing library code is therefore deeply tied to either the operating system vendor or one of the few companies that has spent millions of dollars to understand it. So Google, Adobe, Apple, Microsoft, and a few Japanese companies and Samsung, Are among the few places where this technology has been mastered. Text entry is incredibly complicated when you get to Asian languages or right to left languages like Hebrew and Arabic. Haven’t you ever wondered why the PDF file format took over as the World standard for documents? It’s because it was the only file format that allowed font embedding, and had missing font fail over technology. Nowadays with soft keyboards on mobile devices the world has gotten very concentrated into just two operating systems. iOS and android, and the market is split between those two about 80\/20 Although the economic value of the Apple platform is about 50% due to their more well heeled customer base.\n\na Console based Product in python can be very platform independent, but the minute you ask for Graphics and the black box of a text entry field you are now tied to an operating system or a platform technology like Adobe Air which offers platform independent text entry fields and font rendering. I am pretty sure that Unity has a cross platform input field technology as well, but I have not used it. The Google Flutter library is an attempt to make a cross platform technology which is powerful, and there is also QT which has been around long enough to cover all sorts of stuff. There are very few Python libraries which delve into font rendering and text entry fields in their full glory. In Photoshop, when you are putting in text, you have the ability to select 5 different rendering styles (\"soft\", \"hard\", \"sharp\", etc.), and you can massage the font rendering process very finely. MS went though a big effort to render fonts on LCD screens more beautifully by doing sub-pixel rendering, i think they called it \"Clear Type\". This is a very deep area and affects output quality very noticeably. Apple has always had terrific rendering, why artists overwhelmingly prefer OSX over Windows. Human languages are really complicated and supporting them is a huge task. English with its lack of accented letters and very simple structure is pretty much the easiest language on earth. Japanese is actually the most difficult language on earth to handle properly. So the benchmark for most technologies, is how well does it handle Japanese? Korean and Chinese are tough but more uniform than Japanese. calligraphic Arabic is basically impossible. But all the right to left languages present very tricky rendering problems because people intermix left to right and right to left sections in the same sentence.\n\nIf you can avoid having a text entry field Like most game machines have a grade of alphabetic characters you type with, then it becomes a great deal easier and now you’re back to simple polygons and bezier splines and there are dozens of libraries that do those.  Python  has a huge library set.\n\nSo the decision point in your library selection process will revolve around, are you going to be doing text entry? And will you have user added fonts in your universe? A lot of GPU graphics libraries start to fizzle out when you get into text entry and fonts. Many a game has been built using bitmaps  of letters, Arranged in spritesheets  so that the GPU you can draw text quickly. The game machine companies spend big money in their OS to handle the intricacies of text so the game programmers don't duplicate a lot of effort.\n\nanyway you have touched on a deep subject that does not permit a simple answer. I spent much of my career making Japanese software and so this area was of great interest to me",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593225852.497700",
        "parent_user_id": "UK500AGQ4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t9lHl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UK500AGQ4"
                            },
                            {
                                "type": "text",
                                "text": " whenever you’re talking about User interface libraries, Inevitably you will ask for a text entry field. The text entry field is the most complicated part of every operating system. To render text in a box and handle text entry, that is over 1 million lines of code more than your typical project. There are not even 100 people alive in the world who know the truetype language that underlies text rendering. The text editing library code is therefore deeply tied to either the operating system vendor or one of the few companies that has spent millions of dollars to understand it. So Google, Adobe, Apple, Microsoft, and a few Japanese companies and Samsung, Are among the few places where this technology has been mastered. Text entry is incredibly complicated when you get to Asian languages or right to left languages like Hebrew and Arabic. Haven’t you ever wondered why the PDF file format took over as the World standard for documents? It’s because it was the only file format that allowed font embedding, and had missing font fail over technology. Nowadays with soft keyboards on mobile devices the world has gotten very concentrated into just two operating systems. iOS and android, and the market is split between those two about 80\/20 Although the economic value of the Apple platform is about 50% due to their more well heeled customer base.\n\na Console based Product in python can be very platform independent, but the minute you ask for Graphics and the black box of a text entry field you are now tied to an operating system or a platform technology like Adobe Air which offers platform independent text entry fields and font rendering. I am pretty sure that Unity has a cross platform input field technology as well, but I have not used it. The Google Flutter library is an attempt to make a cross platform technology which is powerful, and there is also QT which has been around long enough to cover all sorts of stuff. There are very few Python libraries which delve into font rendering and text entry fields in their full glory. In Photoshop, when you are putting in text, you have the ability to select 5 different rendering styles (\"soft\", \"hard\", \"sharp\", etc.), and you can massage the font rendering process very finely. MS went though a big effort to render fonts on LCD screens more beautifully by doing sub-pixel rendering, i think they called it \"Clear Type\". This is a very deep area and affects output quality very noticeably. Apple has always had terrific rendering, why artists overwhelmingly prefer OSX over Windows. Human languages are really complicated and supporting them is a huge task. English with its lack of accented letters and very simple structure is pretty much the easiest language on earth. Japanese is actually the most difficult language on earth to handle properly. So the benchmark for most technologies, is how well does it handle Japanese? Korean and Chinese are tough but more uniform than Japanese. calligraphic Arabic is basically impossible. But all the right to left languages present very tricky rendering problems because people intermix left to right and right to left sections in the same sentence.\n\nIf you can avoid having a text entry field Like most game machines have a grade of alphabetic characters you type with, then it becomes a great deal easier and now you’re back to simple polygons and bezier splines and there are dozens of libraries that do those.  Python  has a huge library set.\n\nSo the decision point in your library selection process will revolve around, are you going to be doing text entry? And will you have user added fonts in your universe? A lot of GPU graphics libraries start to fizzle out when you get into text entry and fonts. Many a game has been built using bitmaps  of letters, Arranged in spritesheets  so that the GPU you can draw text quickly. The game machine companies spend big money in their OS to handle the intricacies of text so the game programmers don't duplicate a lot of effort.\n\nanyway you have touched on a deep subject that does not permit a simple answer. I spent much of my career making Japanese software and so this area was of great interest to me"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1593277064.010900",
        "client_msg_id": "B28AD8FE-615B-430B-9184-334E1D0D8FA2",
        "text": "Ok so it is python. Does this mean python on the server and HTML \/JavaScript on the client ?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593225852.497700",
        "parent_user_id": "UK500AGQ4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eSfQ3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ok so it is python. Does this mean python on the server and HTML \/JavaScript on the client ?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1593277722.011100",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1593281074.000000"
        },
        "client_msg_id": "bdf7185b-dc85-4141-80c8-fc832865dc90",
        "text": "<https:\/\/wiki.python.org\/moin\/GuiProgramming> might be a starting point.\n\nvia google: 'cross-platform python gui'",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593225852.497700",
        "parent_user_id": "UK500AGQ4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H7xM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/wiki.python.org\/moin\/GuiProgramming"
                            },
                            {
                                "type": "text",
                                "text": " might be a starting point.\n\nvia google: 'cross-platform python gui'"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1593281212.011400",
        "client_msg_id": "1dc7ffd2-0616-421e-917e-26c08619b67b",
        "text": "<https:\/\/python-gtk-3-tutorial.readthedocs.io\/en\/latest\/drag_and_drop.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593225852.497700",
        "parent_user_id": "UK500AGQ4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6RC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/python-gtk-3-tutorial.readthedocs.io\/en\/latest\/drag_and_drop.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UES04SML7",
        "type": "message",
        "ts": "1593282993.011600",
        "client_msg_id": "7753805e-fa24-4825-8577-a48abff1e88a",
        "text": "enlightening thread",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7d109cd4360",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/97d109cd43603e00a23a4c90d9da4c65.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "korede",
            "real_name": "korede",
            "display_name": "korede",
            "team": "T5TCAFTA9",
            "name": "kaderele",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593119706.472200",
        "parent_user_id": "UES04SML7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J0V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "enlightening thread"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK500AGQ4",
        "type": "message",
        "ts": "1593283091.011800",
        "edited": {
            "user": "UK500AGQ4",
            "ts": "1593283101.000000"
        },
        "client_msg_id": "f0edd004-723e-43e0-bb65-083c5af5877c",
        "text": "Sorry I think I was misleading in my question - I'm talking about good libraries that one could use to make a visual\/interactive programming environments. The \"OOP\" in my question was about the user experience, not about the implementation. I'm indifferent to implementation language, like I said.\n\nOf course any UI toolkit or library is capable of doing that (such as GTK), I'm just wondering if anyone has thoughts on ones which are particularly good at it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g87b7201c4f7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/687b7201c4f7653ccc0ec77826fc51d7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Spencer Baugh",
            "display_name": "Spencer Baugh",
            "team": "T5TCAFTA9",
            "name": "spencerbaugh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593225852.497700",
        "parent_user_id": "UK500AGQ4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tBX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry I think I was misleading in my question - I'm talking about good libraries that one could use to make a visual\/interactive programming environments. The \"OOP\" in my question was about the user experience, not about the implementation. I'm indifferent to implementation language, like I said.\n\nOf course any UI toolkit or library is capable of doing that (such as GTK), I'm just wondering if anyone has thoughts on ones which are particularly good at it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1593286245.012200",
        "client_msg_id": "97ed58d9-cb71-4f70-948d-62933db81977",
        "text": "Not to my knowledge. Just the low-level GUI has a lot of trade-offs (some discussed above), and language developers unfortunately don't seem to be a large enough market for a yacc-style GUI tool.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593225852.497700",
        "parent_user_id": "UK500AGQ4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "If9X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not to my knowledge. Just the low-level GUI has a lot of trade-offs (some discussed above), and language developers unfortunately don't seem to be a large enough market for a yacc-style GUI tool."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1593287298.012500",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1593287619.000000"
        },
        "client_msg_id": "8d752896-d41a-4b88-8cdb-409e54ec05cd",
        "text": "I suggest you look into <https:\/\/www.qt.io\/qt-for-python>, at least they support Python. Unity favors C++ or JS. Adobe AIR requires Haxe or AS3, OSX requires Swift or ObjectiveC and Android is primarily programmed in Java. Python being interpreted is not typically used to build graphical interactive software. Python has weak module support, so not well suited for large projects. If the reason you like Python is because you prefer indentation significant languages, you can always try my Beads language which is very similar to Python.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593225852.497700",
        "parent_user_id": "UK500AGQ4",
        "attachments": [
            {
                "title": "Qt for Python | The official Python bindings for Qt",
                "title_link": "https:\/\/www.qt.io\/qt-for-python",
                "text": "Qt for Python is the official set of Python bindings for Qt that enable the use of Qt APIs in Python applications. It lets Python developers utilize the full potential of Qt, with the support of The Qt Company.",
                "fallback": "Qt for Python | The official Python bindings for Qt",
                "thumb_url": "https:\/\/www.qt.io\/hubfs\/Q4P.png#keepProtocol",
                "from_url": "https:\/\/www.qt.io\/qt-for-python",
                "thumb_width": 360,
                "thumb_height": 94,
                "service_icon": "https:\/\/www.qt.io\/hubfs\/2016_Qt_Logo\/qt_logo_green_rgb_16x16.png",
                "service_name": "qt.io",
                "id": 1,
                "original_url": "https:\/\/www.qt.io\/qt-for-python"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZbLyh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suggest you look into "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.qt.io\/qt-for-python"
                            },
                            {
                                "type": "text",
                                "text": ", at least they support Python. Unity favors C++ or JS. Adobe AIR requires Haxe or AS3, OSX requires Swift or ObjectiveC and Android is primarily programmed in Java. Python being interpreted is not typically used to build graphical interactive software. Python has weak module support, so not well suited for large projects. If the reason you like Python is because you prefer indentation significant languages, you can always try my Beads language which is very similar to Python."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFLN9JFRT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1593292147.012900",
        "client_msg_id": "1a3d9907-7186-4fa7-bcde-65df6bff5279",
        "text": "you might want to look at game engines—a lot of UI libraries for HTML\/etc are directed at basically form input—if you want to do something more adventurous game engines are usually more amenable without a lot of custom work",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593225852.497700",
        "parent_user_id": "UK500AGQ4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M0OO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you might want to look at game engines—a lot of UI libraries for HTML\/etc are directed at basically form input—if you want to do something more adventurous game engines are usually more amenable without a lot of custom work"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1593313408.014900",
        "client_msg_id": "FDD17921-8719-463F-8F1F-1A691C8EC4CD",
        "text": "Yeah, if you want graphical interactivity then game engines give you a ton of leverage at a very low learning cost.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593225852.497700",
        "parent_user_id": "UK500AGQ4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mll",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, if you want graphical interactivity then game engines give you a ton of leverage at a very low learning cost."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1593318249.015400",
        "client_msg_id": "116dcc53-a717-49a0-a197-5d51e799a199",
        "text": "You mean like <https:\/\/stackoverflow.com\/questions\/41332861\/click-and-drag-a-rectangle-with-pygame|https:\/\/stackoverflow.com\/questions\/41332861\/click-and-drag-a-rectangle-with-pygame>?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593225852.497700",
        "parent_user_id": "UK500AGQ4",
        "attachments": [
            {
                "service_name": "Stack Overflow",
                "title": "Click and drag a rectangle with pygame",
                "title_link": "https:\/\/stackoverflow.com\/questions\/41332861\/click-and-drag-a-rectangle-with-pygame",
                "text": "I'm new to pygame and I'm writing a program that allows the user to click and drag a rectangle around the pygame window, then sends it's coordinates through a socket. I can move the rectangle on mo...",
                "fallback": "Stack Overflow: Click and drag a rectangle with pygame",
                "thumb_url": "https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon@2.png?v=73d79a89bded",
                "from_url": "https:\/\/stackoverflow.com\/questions\/41332861\/click-and-drag-a-rectangle-with-pygame",
                "thumb_width": 316,
                "thumb_height": 316,
                "service_icon": "https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon.png?v=c78bd457575a",
                "id": 1,
                "original_url": "https:\/\/stackoverflow.com\/questions\/41332861\/click-and-drag-a-rectangle-with-pygame"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fay",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You mean like "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/stackoverflow.com\/questions\/41332861\/click-and-drag-a-rectangle-with-pygame",
                                "text": "https:\/\/stackoverflow.com\/questions\/41332861\/click-and-drag-a-rectangle-with-pygame"
                            },
                            {
                                "type": "text",
                                "text": "?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1593323351.017900",
        "client_msg_id": "542ED6C2-B530-4029-A2A4-DB3687F264FA",
        "text": "If you want to use a html\/javascript library, then you can take a look at konva <https:\/\/konvajs.org\/|https:\/\/konvajs.org\/> .. it has drag and drop support for shapes. I use it myself actually, together with react",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593225852.497700",
        "parent_user_id": "UK500AGQ4",
        "attachments": [
            {
                "title": "Konva.js - JavaScript 2d canvas library",
                "title_link": "https:\/\/konvajs.org\/",
                "text": "Konva is 2d Canvas JavaScript framework for drawings shapes, animations, node nesting, layering, filtering, event handling, drag and drop and much more.",
                "fallback": "Konva.js - JavaScript 2d canvas library",
                "ts": 1591734042,
                "from_url": "https:\/\/konvajs.org\/",
                "service_icon": "https:\/\/konvajs.org\/apple-touch-icon-57x57.png",
                "service_name": "konvajs.org",
                "id": 1,
                "original_url": "https:\/\/konvajs.org\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=W2\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you want to use a html\/javascript library, then you can take a look at konva "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/konvajs.org\/",
                                "text": "https:\/\/konvajs.org\/"
                            },
                            {
                                "type": "text",
                                "text": " .. it has drag and drop support for shapes. I use it myself actually, together with react"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    }
]