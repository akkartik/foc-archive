[
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1686931012.099459",
        "client_msg_id": "c38cb7fa-3010-4b4d-a4cd-47f80aaec5c5",
        "text": "I still Want To Believe™ in something like OODBs but I don’t think anyone’s figured out how to scale them",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ioQu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I still Want To Believe™ in something like OODBs but I don’t think anyone’s figured out how to scale them"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01U19ECZTJ",
        "type": "message",
        "ts": "1686934783.370039",
        "client_msg_id": "fcc9e27f-36be-42b9-9ac5-f314a70d286f",
        "text": "What's your definition of an OODB? An object-graph, or something like an Object-Relationshional database where the individual tables contain objects instead of tuples and the relationships between tables are themselves represented in the objects rather than externally through implicit SQL joins? Or something else? And at what scale are you consider? I worked on this project <https:\/\/www.pipelinepub.com\/competitive-communications-market\/breaking-benchmarks-with-microsoft-and-redknee.html\/4> which scaled well using the Object-Relational model over-top of other data-stores. The Microsoft SQL Server part of that story is a bit fraudulent since the performance critical components weren't stored there, just historic records.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d80d37c53cd4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-04-05\/1929520000754_d80d37c53cd4ee3c8f5f_72.png",
            "first_name": "",
            "real_name": "Kevin Greer",
            "display_name": "Kevin Greer",
            "team": "T5TCAFTA9",
            "name": "kgrgreer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "attachments": [
            {
                "from_url": "https:\/\/www.pipelinepub.com\/competitive-communications-market\/breaking-benchmarks-with-microsoft-and-redknee.html\/4",
                "id": 1,
                "original_url": "https:\/\/www.pipelinepub.com\/competitive-communications-market\/breaking-benchmarks-with-microsoft-and-redknee.html\/4",
                "fallback": "Pipeline Magazine | OSS and BSS News and Info | Microsoft and Redknee Break Benchmark",
                "text": "Pipeline is the worldâ",
                "title": "Pipeline Magazine | OSS and BSS News and Info | Microsoft and Redknee Break Benchmark",
                "title_link": "https:\/\/www.pipelinepub.com\/competitive-communications-market\/breaking-benchmarks-with-microsoft-and-redknee.html\/4",
                "service_name": "pipelinepub.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qZ+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What's your definition of an OODB? An object-graph, or something like an Object-Relationshional database where the individual tables contain objects instead of tuples and the relationships between tables are themselves represented in the objects rather than externally through implicit SQL joins? Or something else? And at what scale are you consider? I worked on this project "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.pipelinepub.com\/competitive-communications-market\/breaking-benchmarks-with-microsoft-and-redknee.html\/4"
                            },
                            {
                                "type": "text",
                                "text": " which scaled well using the Object-Relational model over-top of other data-stores. The Microsoft SQL Server part of that story is a bit fraudulent since the performance critical components weren't stored there, just historic records."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1686941676.568179",
        "client_msg_id": "53dbd8b0-5ad7-4746-9e85-af1ae44ffc98",
        "text": "hmm.. I care most about having the domain model represented well, being able to use both uni- and bi-directional relationships as pointers, not having to worry about FKs… I was going to say I don’t really care about inheritance, but it always comes up when I’m struggling with ORM too.\n\nOne reason I’m not particularly sanguine about OODBs so far is I find I always need to be persnickety about the representation on the RDBMS side",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9eE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "hmm.. I care most about having the domain model represented well, being able to use both uni- and bi-directional relationships as pointers, not having to worry about FKs… I was going to say I don’t really care about inheritance, but it always comes up when I’m struggling with ORM too.\n\nOne reason I’m not particularly sanguine about OODBs so far is I find I always need to be persnickety about the representation on the RDBMS side"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1686941719.320249",
        "client_msg_id": "e8d30377-2cfe-45a0-b415-523435276f88",
        "text": "It’d be nice to have an ORM that was more like a constraint solver I guess, where I could describe properties of both the OO and RDBMS sides, and have it find a match",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5nI0Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’d be nice to have an ORM that was more like a constraint solver I guess, where I could describe properties of both the OO and RDBMS sides, and have it find a match"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1686944618.939459",
        "client_msg_id": "674f167c-fb6f-4d8b-891f-ae9d1c042763",
        "text": "To be honest, \"familiar UI\" isn't inside my set of constraints. My target audience is never going to install VSCode.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686205425.866679",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "syF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To be honest, \"familiar UI\" isn't inside my set of constraints. My target audience is never going to install VSCode."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1686944922.867019",
        "client_msg_id": "84a26b71-e921-40aa-a5a9-6e1871248409",
        "text": "In my exploration of the available WYSIWYG XML editors, there are almost none that run off of a schema, and there are actually none for which the schema is dynamic. When you load the editor, it knows what schema it is using, and that schema can't change while it is running. Which means there is no way to let the user define a function, or a predicate, and let them use it on the next line without restarting the editor over and over, which seems like a total non-starter. So that's one reason it won't work, I guess. :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686205425.866679",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MeA2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my exploration of the available WYSIWYG XML editors, there are almost none that run off of a schema, and there are actually none for which the schema is dynamic. When you load the editor, it knows what schema it is using, and that schema can't change while it is running. Which means there is no way to let the user define a function, or a predicate, and let them use it on the next line without restarting the editor over and over, which seems like a total non-starter. So that's one reason it won't work, I guess. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1686944962.108669",
        "edited": {
            "user": "U02U0AS3J49",
            "ts": "1686945331.000000"
        },
        "client_msg_id": "52f7f19d-12c4-48d4-a4e3-0f52010075d9",
        "text": "For my use case, the actual language is very prolog like, and I'm not looking for a lot of context-aware features like noticing undefined predicates, etc., because undefined predicates would be literally impossible. So it seems feasible, but there are no tools (in the WYSIWYG XML space) to support it, yet.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686205425.866679",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jn3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For my use case, the actual language is very prolog like, and I'm not looking for a lot of context-aware features like noticing undefined predicates, etc., because undefined predicates would be literally impossible. So it seems feasible, but there are no tools (in the WYSIWYG XML space) to support it, yet."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1686945707.327299",
        "client_msg_id": "45347bb0-73a7-48e8-82c5-f00b724971a2",
        "text": "Thanks, both. Here's my initial Q. It feels to me like this involves setting out data governance policies that say things akin to \"don't give access to personally identifying information unless the user has admin privileges\", and then what happens is that the people running the software need to configure their tools to comply with that rule. That feels like it would a) make it more complicated to add new tools, driving organizations to centralize, and b) be difficult for the people writing the policy, who presumably don't know the software tools, to confirm has been implemented correctly. I'm presuming that they do some form of user testing to see if they can find violations, but they don't validate the configurations directly, and there is nothing in the way of real-time or near-real-time auditing. Is that more or less how it goes? Or is the tooling more sophisticated than that?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686717430.269109",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lpQki",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks, both. Here's my initial Q. It feels to me like this involves setting out data governance policies that say things akin to \"don't give access to personally identifying information unless the user has admin privileges\", and then what happens is that the people running the software need to configure their tools to comply with that rule. That feels like it would a) make it more complicated to add new tools, driving organizations to centralize, and b) be difficult for the people writing the policy, who presumably don't know the software tools, to confirm has been implemented correctly. I'm presuming that they do some form of user testing to see if they can find violations, but they don't validate the configurations directly, and there is nothing in the way of real-time or near-real-time auditing. Is that more or less how it goes? Or is the tooling more sophisticated than that?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]