[
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1542733913.239600",
        "client_msg_id": "d692b0dd-bfe1-4215-88eb-cc7cc5801129",
        "text": "I've been research Smalltalk recently and I've been struck by is how similar the Smalltalk IDE is to Emacs. In particular they are both programming environments that can be modified live while they're running, with some similar bells and whistles such as easily viewing and modifying function definitions, and debugger integration. Given all these commonalities I'm surprised Emacs doesn't come up more often when discussing the Smalltalk. I'd love to hear any opinions on Smalltalk vs. Emacs, and in particular where Emacs falls short in fulfilling the promise os Smalltalk?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542733913.239600",
        "reply_count": 9,
        "reply_users_count": 3,
        "latest_reply": "1542760026.260000",
        "reply_users": [
            "UE1JQM9HQ",
            "UE0ETTCG7",
            "U8A5MS6R1"
        ],
        "replies": [
            {
                "user": "UE1JQM9HQ",
                "ts": "1542739609.244200"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1542743146.244500"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542743394.244700"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542743432.244900"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1542743821.245100"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1542743913.245300"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542745623.245500"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1542749310.245800"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1542760026.260000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eHdRb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been research Smalltalk recently and I've been struck by is how similar the Smalltalk IDE is to Emacs. In particular they are both programming environments that can be modified live while they're running, with some similar bells and whistles such as easily viewing and modifying function definitions, and debugger integration. Given all these commonalities I'm surprised Emacs doesn't come up more often when discussing the Smalltalk. I'd love to hear any opinions on Smalltalk vs. Emacs, and in particular where Emacs falls short in fulfilling the promise os Smalltalk?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1542737518.241600",
        "client_msg_id": "a0116581-bea5-47a6-9885-360a2f1b9d3e",
        "text": "Emacs is a programmable environment. However, the level of what can be expressed is limited by the text-terminal assumption. By now, we should outgrow that assumption.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yPIA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Emacs is a programmable environment. However, the level of what can be expressed is limited by the text-terminal assumption. By now, we should outgrow that assumption."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1542737620.242600",
        "client_msg_id": "e83e5b72-85e8-4678-b804-78711f4b88a6",
        "text": "The other difference comes from the fact that the Smalltalk IDE lives in the same VM as the application, while Emacs runs in a different runtime",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "27R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The other difference comes from the fact that the Smalltalk IDE lives in the same VM as the application, while Emacs runs in a different runtime"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1542739573.244100",
        "client_msg_id": "507d5abc-d707-47b1-a80f-dff4f9515817",
        "text": "<@UE1JQM9HQ> Great points! It's a good idea to move your reply to to a thread if you can to keep the discussion organized. (When you hover my message that's the \"Start Thread\" chat bubble)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lKz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            },
                            {
                                "type": "text",
                                "text": " Great points! It's a good idea to move your reply to to a thread if you can to keep the discussion organized. (When you hover my message that's the \"Start Thread\" chat bubble)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE1JQM9HQ",
                    "UAL7940NM",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1542739609.244200",
        "client_msg_id": "9137f530-600c-4a45-a21a-b84d80c63234",
        "text": "Emacs is a programmable environment. However, the level of what can be expressed is limited by the text-terminal assumption. By now, we should outgrow that assumption.\nThe other difference comes from the fact that the Smalltalk IDE lives in the same VM as the application, while Emacs runs in a different runtime",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542733913.239600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JMz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Emacs is a programmable environment. However, the level of what can be expressed is limited by the text-terminal assumption. By now, we should outgrow that assumption.\nThe other difference comes from the fact that the Smalltalk IDE lives in the same VM as the application, while Emacs runs in a different runtime"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1542743146.244500",
        "client_msg_id": "de84992a-5540-4da3-93e7-56818c950ece",
        "text": "I agree with both points, a couple of follow-up questions: For #1 re the text-terminal assumption, what do you think are the most compelling use-cases where this is a limitation? For #2 this actually seems sort of like a point in Emacs favor, in the Emacs case, you can A) modify the Emacs environment itself, or B) edit an application in Emacs, that itself is entirely external to Emacs. I think that you're saying Smalltalk doesn't have a way to do B because it's focus is on doing A (correct me if I'm wrong)? That actually seems more like a limitation of Smalltalk than an issue with Emacs?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542733913.239600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QIjF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree with both points, a couple of follow-up questions: For #1 re the text-terminal assumption, what do you think are the most compelling use-cases where this is a limitation? For #2 this actually seems sort of like a point in Emacs favor, in the Emacs case, you can A) modify the Emacs environment itself, or B) edit an application in Emacs, that itself is entirely external to Emacs. I think that you're saying Smalltalk doesn't have a way to do B because it's focus is on doing A (correct me if I'm wrong)? That actually seems more like a limitation of Smalltalk than an issue with Emacs?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1542743394.244700",
        "client_msg_id": "05815065-76dc-47fb-a42d-176f6ff9599d",
        "text": "In Pharo, we can both work locally or remotely. So, we can choose between A) and B), we are not forced to use B).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542733913.239600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h856",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In Pharo, we can both work locally or remotely. So, we can choose between A) and B), we are not forced to use B)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1542743432.244900",
        "client_msg_id": "a588c8a6-b3b9-451d-abc3-9baca6e9a084",
        "text": "About the limitation: For example, we cannot do visualizations in a text-based interface.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542733913.239600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n2vc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "About the limitation: For example, we cannot do visualizations in a text-based interface."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1542743821.245100",
        "client_msg_id": "31dce46f-aead-4ce2-983b-9fbf6233f8a6",
        "text": "For working locally and remotely, that sounds the same as Emacs then. I think I might have misunderstood this part then \"Smalltalk IDE lives in the same VM as the application, while Emacs runs in a different runtime\"?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542733913.239600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bG9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For working locally and remotely, that sounds the same as Emacs then. I think I might have misunderstood this part then \"Smalltalk IDE lives in the same VM as the application, while Emacs runs in a different runtime\"?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1542743913.245300",
        "client_msg_id": "3b64bddf-2280-45ce-bcc0-04b4947d9c68",
        "text": "Re visualizations, I'd love to hear any examples that are especially interest\/helpful\/innovative\/etc...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542733913.239600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WENA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Re visualizations, I'd love to hear any examples that are especially interest\/helpful\/innovative\/etc..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1542745623.245500",
        "client_msg_id": "d9389a4e-9779-48c5-bd21-75e51ac982d1",
        "text": "&gt;Smalltalk IDE lives in the same VM as the application, while Emacs runs in a different runtime\nLet's say you have a system that includes `persons`. In Smalltalk, the class `Person` and the class `Browser` live in the same image and their instances live in the same image as well that is run with the same virtual machine. The system can be built from within, not from outside.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542733913.239600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZyH",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Smalltalk IDE lives in the same VM as the application, while Emacs runs in a different runtime"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Let's say you have a system that includes "
                            },
                            {
                                "type": "text",
                                "text": "persons",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". In Smalltalk, the class "
                            },
                            {
                                "type": "text",
                                "text": "Person",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and the class "
                            },
                            {
                                "type": "text",
                                "text": "Browser",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " live in the same image and their instances live in the same image as well that is run with the same virtual machine. The system can be built from within, not from outside."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1542749310.245800",
        "client_msg_id": "0faa97ad-f9fd-4372-b556-976db587b4ea",
        "text": "I used Emacs for many years and liked it. It is primarily a Unix application, while ST is primarily a separate system. Yes, there is a similarity in that you can modify and inspect things live. It's still apples to oranges because ST is a whole system while Emacs is not. So Emacs still deals with files and such things  which are outside itself - in the Unix system. The in-memory world of functions and lists is not the same as the outside world of files and processes. Consider when you modify some function in-memory, it will vanish the next time restart Emacs. You'll have to separately install the function in some .el file somewhere. ST deals only with objects and these are all inside the ST world. It has an automatic persistent image. When you create new classes and objects they are always there.\n\nI assume many JS editors are also editable live (VSCode?) because you have access to the VM and the objects it runs?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542733913.239600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ShM3z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I used Emacs for many years and liked it. It is primarily a Unix application, while ST is primarily a separate system. Yes, there is a similarity in that you can modify and inspect things live. It's still apples to oranges because ST is a whole system while Emacs is not. So Emacs still deals with files and such things  which are outside itself - in the Unix system. The in-memory world of functions and lists is not the same as the outside world of files and processes. Consider when you modify some function in-memory, it will vanish the next time restart Emacs. You'll have to separately install the function in some .el file somewhere. ST deals only with objects and these are all inside the ST world. It has an automatic persistent image. When you create new classes and objects they are always there.\n\nI assume many JS editors are also editable live (VSCode?) because you have access to the VM and the objects it runs?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1542752544.254200",
        "client_msg_id": "0587cfd2-f8b6-469b-91d9-00aa3a4f5d3c",
        "text": "I wonder if there's a general (mathematical?) theory on data \/ structures. The background of my question is that a lot of programming languages introduce very similar concepts for primitive data types and \"containers\". Off the top of my head: numbers, strings, lists\/arrays, sets, mappings\/dicts\/hashtables, references\/pointers, etc.. I'd be happy to hear your thoughts on this.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542752544.254200",
        "reply_count": 9,
        "reply_users_count": 5,
        "latest_reply": "1544497412.232200",
        "reply_users": [
            "U8A5MS6R1",
            "UA14TGLTC",
            "UCUSW7WVD",
            "UAL7940NM",
            "UEQ6M68H0"
        ],
        "replies": [
            {
                "user": "U8A5MS6R1",
                "ts": "1542755076.259700"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1542762703.260500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1542763947.261000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1542765178.261200"
            },
            {
                "user": "UAL7940NM",
                "ts": "1542781272.261700"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1542783164.262100"
            },
            {
                "user": "UAL7940NM",
                "ts": "1542785721.262400"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1544497393.232000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1544497412.232200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ko3Cc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wonder if there's a general (mathematical?) theory on data \/ structures. The background of my question is that a lot of programming languages introduce very similar concepts for primitive data types and \"containers\". Off the top of my head: numbers, strings, lists\/arrays, sets, mappings\/dicts\/hashtables, references\/pointers, etc.. I'd be happy to hear your thoughts on this."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1542754480.256200",
        "client_msg_id": "08980001-85aa-4161-943d-3cfad47a9a05",
        "text": "or simplify that down to strings (type by syntax\/regexp), objects (map\/dict\/hash), lists of these three types?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pJh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "or simplify that down to strings (type by syntax\/regexp), objects (map\/dict\/hash), lists of these three types?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1542754526.256800",
        "client_msg_id": "668aedcf-16e6-41c9-a14d-b6a4bbcfb81e",
        "text": "numbers, booleans, references are strings; sets are objects",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542754526.256800",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1542791385.263000",
        "reply_users": [
            "UAL7940NM",
            "UE6EFEPTQ"
        ],
        "replies": [
            {
                "user": "UAL7940NM",
                "ts": "1542788627.262600"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1542791327.262800"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1542791385.263000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QxNtO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "numbers, booleans, references are strings; sets are objects"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1542754615.257600",
        "client_msg_id": "f9613b01-64a0-4bc8-b3fc-60a3e71ec8db",
        "text": "which amounts to JSON with only strings for values",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tSp+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "which amounts to JSON with only strings for values"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1542754674.258300",
        "client_msg_id": "4dbad033-b0e2-4c80-9dd7-175d0f368d44",
        "text": "(disclaimer: that's what I'm doing in Onex\/The Object Network..)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/ho",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(disclaimer: that's what I'm doing in Onex\/The Object Network..)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1542754752.259200",
        "client_msg_id": "9a7b9b33-bde6-4a62-865b-c5211581c4eb",
        "text": "such distillation\/simplification would make a general\/logical\/mathematical theory easier, I'd suggest",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4TK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "such distillation\/simplification would make a general\/logical\/mathematical theory easier, I'd suggest"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1542754764.259600",
        "client_msg_id": "95e9fa9f-57b3-4fc4-a1d3-2b67eaee8a51",
        "text": "types are just patterns: either regexps or patterns matching structures",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q7Ce",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "types are just patterns: either regexps or patterns matching structures"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1542755076.259700",
        "client_msg_id": "931412d2-9dfa-4966-a009-5dfba3ce7fa2",
        "text": "I'm looking for something like this too. But I find the plethora of primitive types to be non mathematical. Maybe we want some kind of symbols\/sets based treatment. I found the Alloy specification model pretty interesting, though I only looked superficially and can't find the docs I read at that time. There's this: <http:\/\/homepage.divms.uiowa.edu\/~tinelli\/classes\/181\/Spring03\/Readings\/Jack02b.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542752544.254200",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KNi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm looking for something like this too. But I find the plethora of primitive types to be non mathematical. Maybe we want some kind of symbols\/sets based treatment. I found the Alloy specification model pretty interesting, though I only looked superficially and can't find the docs I read at that time. There's this: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/homepage.divms.uiowa.edu\/~tinelli\/classes\/181\/Spring03\/Readings\/Jack02b.pdf"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1542760026.260000",
        "edited": {
            "user": "UE0ETTCG7",
            "ts": "1542760170.000000"
        },
        "client_msg_id": "8198C39D-FE0D-4388-8046-35752595BF1B",
        "text": "Great point about the difference the automatic persistent image makes about in-memory changes not persisting in Emacs. That's definitely true and it's pretty difficult problem to work around in Emacs.\n\nThat's also absolutely true that the Electron\/JavaScript editors are also editable live. At least I'm crystal clear on this in the case of Atom, I actually wrote an Atom plugin for modifying the system live <https:\/\/atom.io\/packages\/run-in-atom>\n\nI will say it's still quite different from Emacs though, the Emacs ecosystem is designed around facilitating live modification in way that the JavaScript editors definitely aren't.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542733913.239600",
        "parent_user_id": "UE0ETTCG7",
        "attachments": [
            {
                "service_name": "Atom",
                "title": "run-in-atom",
                "title_link": "https:\/\/atom.io\/packages\/run-in-atom",
                "text": "Runs CoffeeScript or JavaScript in Atom",
                "fallback": "Atom: run-in-atom",
                "from_url": "https:\/\/atom.io\/packages\/run-in-atom",
                "service_icon": "https:\/\/atom.io\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/atom.io\/packages\/run-in-atom"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NaScn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great point about the difference the automatic persistent image makes about in-memory changes not persisting in Emacs. That's definitely true and it's pretty difficult problem to work around in Emacs.\n\nThat's also absolutely true that the Electron\/JavaScript editors are also editable live. At least I'm crystal clear on this in the case of Atom, I actually wrote an Atom plugin for modifying the system live "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/atom.io\/packages\/run-in-atom"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI will say it's still quite different from Emacs though, the Emacs ecosystem is designed around facilitating live modification in way that the JavaScript editors definitely aren't."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1542762703.260500",
        "edited": {
            "user": "UA14TGLTC",
            "ts": "1542762718.000000"
        },
        "client_msg_id": "a176b32f-054d-4371-876f-232358a02669",
        "text": "Where to begin... I don't have a concise answer having come at things the long way around.  I suppose the Curry-Howard correspondence is one place to start <https:\/\/en.wikipedia.org\/wiki\/Curry%E2%80%93Howard_correspondence>, just learning that to some degree programming language constructs correspond to logical ones, that there's something fundamental at work rather than just a bunch of arbitrary choices.  Take that thought train to the end of a line and you may end up at Algebraic Databases <https:\/\/arxiv.org\/abs\/1602.03501>.  Spivak has a fun survey text too <https:\/\/arxiv.org\/abs\/1803.05316>.  Can give you a feel for the approach without assuming so much.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542752544.254200",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x+5qA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Where to begin... I don't have a concise answer having come at things the long way around.  I suppose the Curry-Howard correspondence is one place to start "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Curry%E2%80%93Howard_correspondence"
                            },
                            {
                                "type": "text",
                                "text": ", just learning that to some degree programming language constructs correspond to logical ones, that there's something fundamental at work rather than just a bunch of arbitrary choices.  Take that thought train to the end of a line and you may end up at Algebraic Databases "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/arxiv.org\/abs\/1602.03501"
                            },
                            {
                                "type": "text",
                                "text": ".  Spivak has a fun survey text too "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/arxiv.org\/abs\/1803.05316"
                            },
                            {
                                "type": "text",
                                "text": ".  Can give you a feel for the approach without assuming so much."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1542763947.261000",
        "client_msg_id": "79b043b2-eac9-4a69-8de0-62a39d5791cd",
        "text": "This paper seems relevant: <https:\/\/stratos.seas.harvard.edu\/files\/stratos\/files\/periodictabledatastructures.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542752544.254200",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zmks",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This paper seems relevant: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/stratos.seas.harvard.edu\/files\/stratos\/files\/periodictabledatastructures.pdf"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1542765178.261200",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1542765281.000000"
        },
        "client_msg_id": "e90f4885-a9af-431b-afd1-525fcdf272e7",
        "text": "Eric Hehner's _\"A Practical Theory of Programming\"_ hits my radar every once in a while. I've read the first third or so and it's pretty good. Has a fairly extensive theory of data structures (unlike my bible, Dijkstra's _\"A Discipline of Programming\"_). There's a free pdf at <http:\/\/www.cs.toronto.edu\/~hehner\/aPToP>. One warning, however: he's not concerned with issues of efficiency.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542752544.254200",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ws=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Eric Hehner's "
                            },
                            {
                                "type": "text",
                                "text": "\"A Practical Theory of Programming\"",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " hits my radar every once in a while. I've read the first third or so and it's pretty good. Has a fairly extensive theory of data structures (unlike my bible, Dijkstra's "
                            },
                            {
                                "type": "text",
                                "text": "\"A Discipline of Programming\"",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "). There's a free pdf at "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.cs.toronto.edu\/~hehner\/aPToP"
                            },
                            {
                                "type": "text",
                                "text": ". One warning, however: he's not concerned with issues of efficiency."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1542778312.261500",
        "client_msg_id": "db6ec646-7b2b-439b-bbd8-4eff0dbd553b",
        "text": "I’m working on getting a recording online. Should be up in a day or two, linked to from <http:\/\/joshuahhh.com\/>. Thanks for asking!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541590974.079600",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W3wI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m working on getting a recording online. Should be up in a day or two, linked to from "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/joshuahhh.com\/"
                            },
                            {
                                "type": "text",
                                "text": ". Thanks for asking!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-4",
                "users": [
                    "UBN9AFS0N"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1542781272.261700",
        "client_msg_id": "26a4dc8f-2c9b-4e29-b80e-204905998de0",
        "text": "Thanks for all your suggestions, I'll look into them. <@UCUSW7WVD> I'm not concerned with efficiency either at this point ;-)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542752544.254200",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZNI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for all your suggestions, I'll look into them. "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " I'm not concerned with efficiency either at this point ;-)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1542783164.262100",
        "client_msg_id": "56d4d36e-b29c-4000-996c-9a89ffe14b19",
        "text": "\"Make it run, make it right, make it fast.\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542752544.254200",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x1G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Make it run, make it right, make it fast.\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1542785721.262400",
        "client_msg_id": "bc8792b1-a23b-4773-bca7-b991afbc87f7",
        "text": "I'll be counting on a sufficiently smart compiler: <https:\/\/prog21.dadgum.com\/40.html> :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542752544.254200",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XqU6Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'll be counting on a sufficiently smart compiler: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/prog21.dadgum.com\/40.html"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]