[
    {
        "user": "UJG7QQQJW",
        "type": "message",
        "ts": "1561532467.116100",
        "client_msg_id": "a187bcd0-be43-4614-8b17-98d09c31abf9",
        "text": "For easier access I deployed it on a server: <http:\/\/132.145.28.164:8080\/>\nWhich features should I implement next?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6028a1c7a821",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-19\/639818983280_6028a1c7a82161b81120_72.jpg",
            "first_name": "Adrian",
            "real_name": "Adrian Sieber",
            "display_name": "Adrian Sieber",
            "team": "T5TCAFTA9",
            "name": "futureofcoding",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561532467.116100",
        "reply_count": 8,
        "reply_users_count": 5,
        "latest_reply": "1561704276.126100",
        "reply_users": [
            "UBKNXPBAB",
            "UJG7QQQJW",
            "U5TCAFTD3",
            "UFV8P4472",
            "UJUGB1XGD"
        ],
        "replies": [
            {
                "user": "UBKNXPBAB",
                "ts": "1561538511.116900"
            },
            {
                "user": "UJG7QQQJW",
                "ts": "1561539105.117100"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1561557342.117600"
            },
            {
                "user": "UJG7QQQJW",
                "ts": "1561646362.124900"
            },
            {
                "user": "UFV8P4472",
                "ts": "1561656798.125400"
            },
            {
                "user": "UFV8P4472",
                "ts": "1561657109.125700"
            },
            {
                "user": "UFV8P4472",
                "ts": "1561657262.125900"
            },
            {
                "user": "UJUGB1XGD",
                "ts": "1561704276.126100"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1562067609.022100",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nrskw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For easier access I deployed it on a server: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/132.145.28.164:8080\/"
                            },
                            {
                                "type": "text",
                                "text": "\nWhich features should I implement next?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJG7QQQJW",
        "type": "message",
        "ts": "1561532487.116200",
        "client_msg_id": "507404f1-5bbb-4958-8f9a-ba44c26417d8",
        "text": "I deployed it on a server =&gt; <http:\/\/132.145.28.164:8080\/> :grin:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6028a1c7a821",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-19\/639818983280_6028a1c7a82161b81120_72.jpg",
            "first_name": "Adrian",
            "real_name": "Adrian Sieber",
            "display_name": "Adrian Sieber",
            "team": "T5TCAFTA9",
            "name": "futureofcoding",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561452149.110400",
        "parent_user_id": "UJG7QQQJW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1G8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I deployed it on a server => "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/132.145.28.164:8080\/"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "grin",
                                "unicode": "1f601"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJG7QQQJW",
        "type": "message",
        "ts": "1561532982.116400",
        "client_msg_id": "9b21d4c5-bab4-4de9-84d5-53a15b5e5acb",
        "text": "<@UHWC9PXBL> You should embark the hype train. It's really worth it … I pretty much do everything with docker nowadays. My endgoal is to be as cool as Jessie Frazelle =&gt; <https:\/\/blog.jessfraz.com\/post\/docker-containers-on-the-desktop\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6028a1c7a821",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-19\/639818983280_6028a1c7a82161b81120_72.jpg",
            "first_name": "Adrian",
            "real_name": "Adrian Sieber",
            "display_name": "Adrian Sieber",
            "team": "T5TCAFTA9",
            "name": "futureofcoding",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561452149.110400",
        "parent_user_id": "UJG7QQQJW",
        "attachments": [
            {
                "service_name": "Ramblings from Jessie",
                "title": "Ramblings from Jessie: Docker Containers on the Desktop",
                "title_link": "https:\/\/blog.jessfraz.com\/post\/docker-containers-on-the-desktop\/",
                "text": "How to run docker containers on your desktop.",
                "fallback": "Ramblings from Jessie: Ramblings from Jessie: Docker Containers on the Desktop",
                "thumb_url": "https:\/\/blog.jessfraz.com\/img\/share.png",
                "from_url": "https:\/\/blog.jessfraz.com\/post\/docker-containers-on-the-desktop\/",
                "thumb_width": 500,
                "thumb_height": 500,
                "service_icon": "https:\/\/blog.jessfraz.com\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/blog.jessfraz.com\/post\/docker-containers-on-the-desktop\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oVhtN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " You should embark the hype train. It's really worth it … I pretty much do everything with docker nowadays. My endgoal is to be as cool as Jessie Frazelle => "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/blog.jessfraz.com\/post\/docker-containers-on-the-desktop\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJG7QQQJW",
        "type": "message",
        "ts": "1561533047.116700",
        "client_msg_id": "e261dae3-8610-474f-97bb-b50dcf5d2e50",
        "text": "Weird that `brew install docker` doesn't work. Don't think you need an account. Maybe you should file an issue.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6028a1c7a821",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-19\/639818983280_6028a1c7a82161b81120_72.jpg",
            "first_name": "Adrian",
            "real_name": "Adrian Sieber",
            "display_name": "Adrian Sieber",
            "team": "T5TCAFTA9",
            "name": "futureofcoding",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561452149.110400",
        "parent_user_id": "UJG7QQQJW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zb3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Weird that "
                            },
                            {
                                "type": "text",
                                "text": "brew install docker",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " doesn't work. Don't think you need an account. Maybe you should file an issue."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1561538511.116900",
        "client_msg_id": "e5aaf584-656d-4476-be32-5f7988674ad9",
        "text": "That depends – what are you trying to make?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561532467.116100",
        "parent_user_id": "UJG7QQQJW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lyx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That depends – what are you trying to make?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJG7QQQJW",
        "type": "message",
        "ts": "1561539105.117100",
        "client_msg_id": "91f54c8c-ac8b-48a1-ae42-4765baae7683",
        "text": "How about: \"An online IDE to create production ready polyglot code.\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6028a1c7a821",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-19\/639818983280_6028a1c7a82161b81120_72.jpg",
            "first_name": "Adrian",
            "real_name": "Adrian Sieber",
            "display_name": "Adrian Sieber",
            "team": "T5TCAFTA9",
            "name": "futureofcoding",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561532467.116100",
        "parent_user_id": "UJG7QQQJW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DQVs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How about: \"An online IDE to create production ready polyglot code.\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1561556906.117400",
        "client_msg_id": "8981bb8a-0ace-4fa2-837b-f2b8823deec3",
        "text": "Thanks!!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561452149.110400",
        "parent_user_id": "UJG7QQQJW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SGhhD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks!!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1561557342.117600",
        "client_msg_id": "23b444f3-dcf7-4512-a015-ae19442212e4",
        "text": "It was confusing to me that changing the language for a function broke that function. I expected it to either magically work in a new language or to save the code for each language separately. I guess I'm missing what this interface would be used for. Maybe you could explain one potential usecase in text or do a quick video (Loom chrome extension is great for that) to demonstrate?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561532467.116100",
        "parent_user_id": "UJG7QQQJW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z89",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It was confusing to me that changing the language for a function broke that function. I expected it to either magically work in a new language or to save the code for each language separately. I guess I'm missing what this interface would be used for. Maybe you could explain one potential usecase in text or do a quick video (Loom chrome extension is great for that) to demonstrate?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UHWC9PXBL",
                    "UKQT95T1V"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U6BRN7A0Y",
        "type": "message",
        "ts": "1561573844.118300",
        "client_msg_id": "5610f603-bd98-4d4d-8440-5415dc2d2475",
        "text": "Hey folks, I wrote another post about Dark, would love to hear people’s thoughts! <https:\/\/medium.com\/darklang\/real-problems-with-functional-languages-efe668c5264a>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gee6ec3be3e3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eee6ec3be3e3176ff1e1119301630812.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Paul",
            "real_name": "Paul Biggar",
            "display_name": "pbiggar",
            "team": "T5TCAFTA9",
            "name": "pbiggar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "reply_count": 26,
        "reply_users_count": 7,
        "latest_reply": "1562852475.143000",
        "reply_users": [
            "UHWC9PXBL",
            "U6BRN7A0Y",
            "UKQT95T1V",
            "UJNJQD2AC",
            "UCUSW7WVD",
            "UJUGB1XGD",
            "UC6997THT"
        ],
        "replies": [
            {
                "user": "UHWC9PXBL",
                "ts": "1561576023.118800"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1561576151.119000"
            },
            {
                "user": "U6BRN7A0Y",
                "ts": "1561577302.119400"
            },
            {
                "user": "U6BRN7A0Y",
                "ts": "1561577447.119600"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1561583773.120000"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1561583891.120200"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1561584597.120400"
            },
            {
                "user": "U6BRN7A0Y",
                "ts": "1561587545.121000"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1561590232.121900"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1561590822.122100"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1561590885.122300"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1561590903.122500"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1561591910.122900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1561616917.124100"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1561639899.124400"
            },
            {
                "user": "UJUGB1XGD",
                "ts": "1561751388.126300"
            },
            {
                "user": "UC6997THT",
                "ts": "1561971159.126900"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1562007487.127300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1562007704.127500"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1562008383.127700"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1562008406.128000"
            },
            {
                "user": "U6BRN7A0Y",
                "ts": "1562648008.135500"
            },
            {
                "user": "U6BRN7A0Y",
                "ts": "1562648068.135700"
            },
            {
                "user": "UC6997THT",
                "ts": "1562652562.136000"
            },
            {
                "user": "U6BRN7A0Y",
                "ts": "1562688900.136500"
            },
            {
                "user": "UC6997THT",
                "ts": "1562852475.143000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h0r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey folks, I wrote another post about Dark, would love to hear people’s thoughts! "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/medium.com\/darklang\/real-problems-with-functional-languages-efe668c5264a"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U85MWBKEY",
                    "UJ6LDMMN0",
                    "UK22Z72L8"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U6KQ2S410",
        "type": "message",
        "ts": "1561574142.118600",
        "client_msg_id": "84d50ca2-d38d-481a-a185-8020ad179d1e",
        "text": "<@UJDQKSSJ0> if numbers are just strings, their sort order is wrong. For example [1: 1, 2:2,… 10:10] would put 10 before 2.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e8f4c2151d2b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-09\/225308926294_e8f4c2151d2b70ebfae3_72.jpg",
            "first_name": "Jonathan",
            "real_name": "Jonathan Edwards",
            "display_name": "jonathoda",
            "team": "T5TCAFTA9",
            "name": "jonathoda",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bjywK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJDQKSSJ0"
                            },
                            {
                                "type": "text",
                                "text": " if numbers are just strings, their sort order is wrong. For example [1: 1, 2:2,… 10:10] would put 10 before 2."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1561576023.118800",
        "client_msg_id": "dfbc61af-87b6-4bfd-a430-0c6fd3e14a55",
        "text": "I like the philosophy (especially ROP)—any thoughts about using a true union type instead of maybe\/option — e.g.: <http:\/\/dotty.epfl.ch\/docs\/reference\/new-types\/union-types.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9tQ2O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like the philosophy (especially ROP)—any thoughts about using a true union type instead of maybe\/option — e.g.: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/dotty.epfl.ch\/docs\/reference\/new-types\/union-types.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1561576151.119000",
        "client_msg_id": "09b0c093-b81b-416c-8e80-6dc6e649df24",
        "text": "rich hickey’s take: <https:\/\/youtu.be\/YR5WdGrpoug?t=418>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Maybe Not - Rich Hickey",
                "title_link": "https:\/\/youtu.be\/YR5WdGrpoug?t=418",
                "author_name": "ClojureTV",
                "author_link": "https:\/\/www.youtube.com\/user\/ClojureTV",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/YR5WdGrpoug\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Maybe Not - Rich Hickey",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/YR5WdGrpoug?start=418&feature=oembed&start=418&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/YR5WdGrpoug?t=418",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/YR5WdGrpoug?t=418"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dGhCC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "rich hickey’s take: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/YR5WdGrpoug?t=418"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6BRN7A0Y",
        "type": "message",
        "ts": "1561577302.119400",
        "client_msg_id": "887b7047-2510-4204-b74e-938926619003",
        "text": "I don’t really understand what union types bring to the table. I’ve rarely found types to be equivalent",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gee6ec3be3e3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eee6ec3be3e3176ff1e1119301630812.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Paul",
            "real_name": "Paul Biggar",
            "display_name": "pbiggar",
            "team": "T5TCAFTA9",
            "name": "pbiggar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K5u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don’t really understand what union types bring to the table. I’ve rarely found types to be equivalent"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6BRN7A0Y",
        "type": "message",
        "ts": "1561577447.119600",
        "client_msg_id": "52cbba4e-f22d-4df6-83af-b73b5ff0b4a9",
        "text": "In my experience, when you have a sum type you typically aren’t wrapping plain types but rather pairs or tuples or disparate types",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gee6ec3be3e3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eee6ec3be3e3176ff1e1119301630812.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Paul",
            "real_name": "Paul Biggar",
            "display_name": "pbiggar",
            "team": "T5TCAFTA9",
            "name": "pbiggar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O=yZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my experience, when you have a sum type you typically aren’t wrapping plain types but rather pairs or tuples or disparate types"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKQT95T1V",
        "type": "message",
        "ts": "1561583773.120000",
        "client_msg_id": "b21a2d5b-c299-486c-8506-a4ceace0af5c",
        "text": "i personally find union types to be a more direct way of expressing myself, because of lack of lifting and unboxing. tagged union types are more appropriate when you want composability, as in library or generic code",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5602bab02fb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c5602bab02fb00f0c9a052ee6c220513.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Alan Johnson",
            "display_name": "Alan Johnson",
            "team": "T5TCAFTA9",
            "name": "alan135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tPPH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i personally find union types to be a more direct way of expressing myself, because of lack of lifting and unboxing. tagged union types are more appropriate when you want composability, as in library or generic code"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UKQT95T1V",
        "type": "message",
        "ts": "1561583891.120200",
        "client_msg_id": "0d5e258a-fe4b-4952-81cf-364174630a8b",
        "text": "the ergonomics of optional vs nullable is a good example of what union types are good for. also, for what you might call ad hoc unions of error types, which are really irritating to model in tagged unions, due to lack of commutativity",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5602bab02fb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c5602bab02fb00f0c9a052ee6c220513.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Alan Johnson",
            "display_name": "Alan Johnson",
            "team": "T5TCAFTA9",
            "name": "alan135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pr6Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the ergonomics of optional vs nullable is a good example of what union types are good for. also, for what you might call ad hoc unions of error types, which are really irritating to model in tagged unions, due to lack of commutativity"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKQT95T1V",
        "type": "message",
        "ts": "1561584597.120400",
        "client_msg_id": "d88cf7b9-ac8e-4bea-a046-a37998663df6",
        "text": "regarding the post, looks like a lot of interesting ideas!\n- one question i've got is whether versioned types have automatic mapping from one to the other for integration between old and new code?\n- without monads or similar, what is the approach to effects? i def dont think monads are the end-all of effect systems, but i do think effect systems more generally have a big role to play in making programs composable without letting interactions get invisibly out of control\n- as a Scala head, i certainly think it belongs in the hybrid camp. most Scala devs dont use it like Haskell, despite what conference programs might lead one to believe :smile:\n- one key feature of dynamic languages is that they often have idioms that are really difficult to model with types, and many people find these idioms convenient (e.g. piecewise assembly of an object; records capable of modeling SQL queries)\n- the one piece of critical feedback is that i think real code &amp; screenshots would be a lot more compelling, even if they aren't finalized",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5602bab02fb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c5602bab02fb00f0c9a052ee6c220513.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Alan Johnson",
            "display_name": "Alan Johnson",
            "team": "T5TCAFTA9",
            "name": "alan135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i+z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "regarding the post, looks like a lot of interesting ideas!\n- one question i've got is whether versioned types have automatic mapping from one to the other for integration between old and new code?\n- without monads or similar, what is the approach to effects? i def dont think monads are the end-all of effect systems, but i do think effect systems more generally have a big role to play in making programs composable without letting interactions get invisibly out of control\n- as a Scala head, i certainly think it belongs in the hybrid camp. most Scala devs dont use it like Haskell, despite what conference programs might lead one to believe "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "\n- one key feature of dynamic languages is that they often have idioms that are really difficult to model with types, and many people find these idioms convenient (e.g. piecewise assembly of an object; records capable of modeling SQL queries)\n- the one piece of critical feedback is that i think real code & screenshots would be a lot more compelling, even if they aren't finalized"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJDQKSSJ0",
        "type": "message",
        "ts": "1561586510.120600",
        "client_msg_id": "4a6ce39f-8127-4617-96f5-b1ca51ae6da4",
        "text": "<@UJUGB1XGD> Thanks, I can see some similarities for sure, although I couldn’t follow the guide\/pdf linked there super easily - do say if there’s any part in particular you recommend I dig into.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g17c6442fbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/317c6442fbb28b6db872e7c4116d622c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Jon",
            "real_name": "Jon Whitehead",
            "display_name": "jon",
            "team": "T5TCAFTA9",
            "name": "jsiwhitehead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D++p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJUGB1XGD"
                            },
                            {
                                "type": "text",
                                "text": " Thanks, I can see some similarities for sure, although I couldn’t follow the guide\/pdf linked there super easily - do say if there’s any part in particular you recommend I dig into."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJDQKSSJ0",
        "type": "message",
        "ts": "1561587198.120800",
        "client_msg_id": "2d351d6d-5780-411c-9781-d01461cf0c29",
        "text": "<@U6KQ2S410> Ah yes, good spot - that is deliberate, but I forgot to include in the documentation! It felt important to keep ‘indexed’ values (values on positive integer keys) in the expected order, i.e. for `[1, 2, 3, … , 10]` to output as expected, so the positive integers are taken out of the main dictionary sort order and sorted before everything else. There are a few other places indexed values are treated differently, for example with ‘unpacking’, where they are shifted to ensure `[a, b, ::[c, d]]` outputs `[a, b, c, d]`, rather than just the 1 and 2 keys overwriting and giving `[c, d]`.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g17c6442fbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/317c6442fbb28b6db872e7c4116d622c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Jon",
            "real_name": "Jon Whitehead",
            "display_name": "jon",
            "team": "T5TCAFTA9",
            "name": "jsiwhitehead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5P4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": " Ah yes, good spot - that is deliberate, but I forgot to include in the documentation! It felt important to keep ‘indexed’ values (values on positive integer keys) in the expected order, i.e. for "
                            },
                            {
                                "type": "text",
                                "text": "[1, 2, 3, … , 10]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to output as expected, so the positive integers are taken out of the main dictionary sort order and sorted before everything else. There are a few other places indexed values are treated differently, for example with ‘unpacking’, where they are shifted to ensure "
                            },
                            {
                                "type": "text",
                                "text": "[a, b, ::[c, d]]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " outputs "
                            },
                            {
                                "type": "text",
                                "text": "[a, b, c, d]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", rather than just the 1 and 2 keys overwriting and giving "
                            },
                            {
                                "type": "text",
                                "text": "[c, d]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6BRN7A0Y",
        "type": "message",
        "ts": "1561587545.121000",
        "edited": {
            "user": "U6BRN7A0Y",
            "ts": "1561587663.000000"
        },
        "client_msg_id": "38f8dedb-eb39-483a-be33-aa1040dcb278",
        "text": "&gt; - one question i’ve got is whether versioned types have automatic mapping from one to the other for integration between old and new code?\nopen question. We’ll see when we’re actually using it broadly, but my expectation is that we’ll need to automatically create\/insert mapping functions\n&gt; - the one piece of critical feedback is that i think real code &amp; screenshots would be a lot more compelling, even if they aren’t finalized\nYeah, we’d like to. Unfortunately, our experience is that that drags the conversation off into minutia. When we launch we’ll have screenshots, right now we’re trying to discuss our high level thinking about things",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gee6ec3be3e3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eee6ec3be3e3176ff1e1119301630812.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Paul",
            "real_name": "Paul Biggar",
            "display_name": "pbiggar",
            "team": "T5TCAFTA9",
            "name": "pbiggar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Dh1W",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "- one question i’ve got is whether versioned types have automatic mapping from one to the other for integration between old and new code?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "open question. We’ll see when we’re actually using it broadly, but my expectation is that we’ll need to automatically create\/insert mapping functions"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "- the one piece of critical feedback is that i think real code & screenshots would be a lot more compelling, even if they aren’t finalized"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, we’d like to. Unfortunately, our experience is that that drags the conversation off into minutia. When we launch we’ll have screenshots, right now we’re trying to discuss our high level thinking about things"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6KQ2S410",
        "type": "message",
        "ts": "1561588562.121300",
        "client_msg_id": "3940d050-193c-4223-90ee-7db86c27ea81",
        "text": "OK so is \"a10\" &gt; \"a2\"?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e8f4c2151d2b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-09\/225308926294_e8f4c2151d2b70ebfae3_72.jpg",
            "first_name": "Jonathan",
            "real_name": "Jonathan Edwards",
            "display_name": "jonathoda",
            "team": "T5TCAFTA9",
            "name": "jonathoda",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l7ju",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OK so is \"a10\" > \"a2\"?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJDQKSSJ0",
        "type": "message",
        "ts": "1561588938.121500",
        "edited": {
            "user": "UJDQKSSJ0",
            "ts": "1561588965.000000"
        },
        "client_msg_id": "f8ce9bf1-3d21-424f-aa6f-061c885fe4e8",
        "text": "Not at the moment no. I played with that for a while, but the overall logic seemed to lead to indices being a somewhat separate category to all other keys, so it made sense to just treat only them differently. I.e. it’s more general than sort order, and based on the fact that `[a, b, c]` fills up the integer keys. So from that perspective “a10” and “a2\" are just normal strings and hence sort in dictionary order like everything else (apart from indices). Does that make sense \/ seem coherent?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g17c6442fbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/317c6442fbb28b6db872e7c4116d622c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Jon",
            "real_name": "Jon Whitehead",
            "display_name": "jon",
            "team": "T5TCAFTA9",
            "name": "jsiwhitehead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s+H5U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not at the moment no. I played with that for a while, but the overall logic seemed to lead to indices being a somewhat separate category to all other keys, so it made sense to just treat only them differently. I.e. it’s more general than sort order, and based on the fact that "
                            },
                            {
                                "type": "text",
                                "text": "[a, b, c]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " fills up the integer keys. So from that perspective “a10” and “a2\" are just normal strings and hence sort in dictionary order like everything else (apart from indices). Does that make sense \/ seem coherent?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJUGB1XGD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1561590232.121900",
        "client_msg_id": "f9cdeae2-6a2f-4f96-91dd-b1bc84977fff",
        "text": "&gt; if your program compiles, it works\n\nDo we mean, it compiles? Because \"working\" tends to mean it's providing business value. A thing I'm not sure types can assure.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0jG1",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if your program compiles, it works"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nDo we mean, it compiles? Because \"working\" tends to mean it's providing business value. A thing I'm not sure types can assure."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1561590822.122100",
        "client_msg_id": "a1c2cd18-d2b9-47f0-8f40-445d8bc7d644",
        "text": "&gt;the compiler requires you to handle both potential cases\n\nA lot of null data comes from external sources right? In which case you have to know to write optional. Again, I don't see how we  get this for free from the compiler.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OZ4N",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the compiler requires you to handle both potential cases"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nA lot of null data comes from external sources right? In which case you have to know to write optional. Again, I don't see how we  get this for free from the compiler."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1561590885.122300",
        "edited": {
            "user": "UJNJQD2AC",
            "ts": "1561590941.000000"
        },
        "client_msg_id": "822f1642-9f01-4e4e-bb84-787d3c893210",
        "text": "That's why queries seem so powerful to me, you get what you asked for.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hqa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's why queries seem so powerful to me, you get what you asked for."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1561590903.122500",
        "client_msg_id": "366755c3-d827-4fe5-a4a3-3fa40ded21bf",
        "text": "Why protect against what you can eliminate",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D7k\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why protect against what you can eliminate"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1561591910.122900",
        "client_msg_id": "3c011a14-64f9-40c8-9db9-571773c4113b",
        "text": "The python code and the elm code aren't equivalent Right? We have a predicate\/type in one but not the other.  \n\nI'm honestly struggling with comparisons like this. I'm I missing something. It feels like a lot of arguments of this nature are retro active, if I had this type, then this error wouldn't have happened. But that's not helpful, the question to solve is why the mistake happened in the first place. In the elm code your handling it, in the other your not. This feels like a before and after shot. We could add predicate to the python code to achieve the same effect.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MsdKR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The python code and the elm code aren't equivalent Right? We have a predicate\/type in one but not the other.  \n\nI'm honestly struggling with comparisons like this. I'm I missing something. It feels like a lot of arguments of this nature are retro active, if I had this type, then this error wouldn't have happened. But that's not helpful, the question to solve is why the mistake happened in the first place. In the elm code your handling it, in the other your not. This feels like a before and after shot. We could add predicate to the python code to achieve the same effect."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6KQ2S410",
        "type": "message",
        "ts": "1561592220.123200",
        "client_msg_id": "b9db3c77-4142-4e91-ace8-2674f9ed570c",
        "text": "Sure that’s reasonable. But it got me thinking that maybe it would actually be more natural to violate the standard dictionary ordering and force numeric sub-strings to be numerically sorted. I might do that. I like that Maraca has some fresh takes",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e8f4c2151d2b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-09\/225308926294_e8f4c2151d2b70ebfae3_72.jpg",
            "first_name": "Jonathan",
            "real_name": "Jonathan Edwards",
            "display_name": "jonathoda",
            "team": "T5TCAFTA9",
            "name": "jonathoda",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fii",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sure that’s reasonable. But it got me thinking that maybe it would actually be more natural to violate the standard dictionary ordering and force numeric sub-strings to be numerically sorted. I might do that. I like that Maraca has some fresh takes"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1561595230.123400",
        "client_msg_id": "5d824cc6-1d93-489d-8ca8-c052354b6f36",
        "text": "Makes me think that it's kind of funny that Ruby doesn't numerically sort numeric sub-strings since it's the sort of intuitive yet tricky thing at which Ruby excels.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SEf\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Makes me think that it's kind of funny that Ruby doesn't numerically sort numeric sub-strings since it's the sort of intuitive yet tricky thing at which Ruby excels."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1561616917.124100",
        "client_msg_id": "f8420b81-0174-47b4-8a11-cceb85e2d169",
        "text": "I went digging for more about ROP, and this slide deck was useful: <https:\/\/fsharpforfunandprofit.com\/rop>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "attachments": [
            {
                "title": "Railway Oriented Programming",
                "title_link": "https:\/\/fsharpforfunandprofit.com\/rop",
                "text": "Slides and videos explaining a functional approach to error handling",
                "fallback": "Railway Oriented Programming",
                "image_url": "http:\/\/fsharpforfunandprofit.com\/rop\/rop427.jpg",
                "from_url": "https:\/\/fsharpforfunandprofit.com\/rop",
                "image_width": 334,
                "image_height": 250,
                "image_bytes": 55070,
                "service_name": "fsharpforfunandprofit.com",
                "id": 1,
                "original_url": "https:\/\/fsharpforfunandprofit.com\/rop"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HZ1vm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I went digging for more about ROP, and this slide deck was useful: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/fsharpforfunandprofit.com\/rop"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]