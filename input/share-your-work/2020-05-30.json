[
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1590822732.232500",
        "client_msg_id": "8C4E2E63-C4C9-4694-8CBE-0A2A5F402348",
        "text": "Very interesting and thanks for sharing! Are your findings based on (existing) research? I am building a visual programming environment myself and try to map it less directly on textual program language commands although some nodes in the flow perform very simple taks like checking a condition or performing an assignment. I want to abstract away certain bigger tasks inside the nodes themselves (which can be extended by plugins)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590817630.225600",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3yIaT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very interesting and thanks for sharing! Are your findings based on (existing) research? I am building a visual programming environment myself and try to map it less directly on textual program language commands although some nodes in the flow perform very simple taks like checking a condition or performing an assignment. I want to abstract away certain bigger tasks inside the nodes themselves (which can be extended by plugins)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP3FH4CLU",
        "type": "message",
        "ts": "1590825751.232700",
        "client_msg_id": "10376fcb-4401-4883-ad2e-f78355dd4a31",
        "text": "&gt; Are your findings based on (existing) research?\nNot really. My supposition that\n&gt; *The visual programming complexity ceiling exists because* visual syntax becomes large and cluttered when representing large programs \n&gt; and the semantics of the visual language do not support sufficient abstractions.\nis a bit of a simplification, and there are other problems with visual programming that aren't mentioned. Also, there are some visual languages that are general purpose (\"support sufficient abstractions\"), but it's uncommon.\n\nThe proposed solutions are not directly based on research.\n\nThere has been some research comparing the understandability of visual representations vs. textual representations. The paper \"<https:\/\/www.cl.cam.ac.uk\/~afb21\/publications\/aire.pdf|Cognitive Factors in Programming with Diagrams\"> has an overview of some of the older research.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "40f3551ff561",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-19\/1372124144885_40f3551ff56134e83fb6_72.png",
            "first_name": "",
            "real_name": "Robbie Gleichman",
            "display_name": "Robbie Gleichman",
            "team": "T5TCAFTA9",
            "name": "rgleichman",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590817630.225600",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Aw1",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are your findings based on (existing) research?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not really. My supposition that\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The visual programming complexity ceiling exists because ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "visual syntax becomes large and cluttered when representing large programs \nand the semantics of the visual language do not support sufficient abstractions."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "is a bit of a simplification, and there are other problems with visual programming that aren't mentioned. Also, there are some visual languages that are general purpose (\"support sufficient abstractions\"), but it's uncommon.\n\nThe proposed solutions are not directly based on research.\n\nThere has been some research comparing the understandability of visual representations vs. textual representations. The paper "
                            },
                            {
                                "type": "text",
                                "text": "\"",
                                "style": {
                                    "unlink": true
                                }
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.cl.cam.ac.uk\/~afb21\/publications\/aire.pdf",
                                "text": "Cognitive Factors in Programming with Diagrams\""
                            },
                            {
                                "type": "text",
                                "text": " has an overview of some of the older research.",
                                "style": {
                                    "unlink": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UML4ZEKDK",
        "type": "message",
        "ts": "1590846649.233000",
        "client_msg_id": "c21bd1e8-535d-4c4a-927b-995519f00750",
        "text": "<@UHWC9PXBL> Ah cool, thanks for sharing this! :smile: I'm also interested in such techniques as well: further into the future, I can imagine going beyond just extracting frames from apps towards wanting to manipulate and modify them, which becomes much easier when you can detect the structure of the data on the page. I'll reply on Twitter with a bit more.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "edc1c9acb12d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-22\/5286358617767_edc1c9acb12dfa7d1a20_72.jpg",
            "first_name": "J.",
            "real_name": "J. Ryan Stinnett",
            "display_name": "J. Ryan Stinnett",
            "team": "T5TCAFTA9",
            "name": "jryans",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590790470.218300",
        "parent_user_id": "UML4ZEKDK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A3D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " Ah cool, thanks for sharing this! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " I'm also interested in such techniques as well: further into the future, I can imagine going beyond just extracting frames from apps towards wanting to manipulate and modify them, which becomes much easier when you can detect the structure of the data on the page. I'll reply on Twitter with a bit more."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1590851167.238400",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1590904233.000000"
        },
        "client_msg_id": "C5396EA8-62FE-4ED1-91B6-B1EAA6654ED1",
        "text": "I read your slideshow with great interest. One thing I would like to caution you about is that the example you chose the fizz buzz program is far too small a task. If you measure length of programs by counting the words, in the textual version a task like fizzbuzz is so near zero words that it doesn’t provide any information about whether or not the graphic of notation is helpful at mitigating complexity. In my Beads project samples I show a ramp of difficulty starting with a clock and going to TicTacToe, minesweeper, to chess, and then to the start of an IDE. Chess is over 1000 words, and is an excellent small test, as it combines both graphics and somewhat complex rules. I suggest you pick a task to program that has enough complexity that it cannot be represented on one screen and directly confront the central problem we are trying to solve. Which is how to make something more understandable then textual format does. If you limit yourself to trivial examples you will generate a false positive on the value Of your graphical representation. Even TicTacToe is hard enough that your diagrams would get A little messy. So I think you should Avoid basing your examples on a task too simple.  Another example that’s too simple is the to do list, which is often presented to show how simple a new language would be, Any example based on data entry Fields is inevitably going to hide the million lines of code that goes into properly handling a multi lingual text entry box. operating systems exist just to handle the text entry box, Because the intrinsic complexity of rendering Truetype fonts and input method editors for Asian languages, and you are talking thousands of man-months, all concealed in the underlying layers.\n\nYou can pick a graphical task or a business task or a Database kind of task, but whatever task area you do select for your example, please be sure it has enough intrinsic complexity to go beyond what can be shown with a dozen nodes.\n\nI would also caution you that a goal of delivering \"an easy to read visual representation of Haskell\" is probably an oxymoron, because there is nothing that easy about reading Haskell. Some of Haskell's fancy features like currying are of negligible practical value, and make it very hard to read, because now you have to know at all times how many arguments a function expects, so you can tell the difference between passing a function pointer with a missing arg, or calling a function. Nothing easy to read about that feature; it is pure poison to a reader and for that reason i rejected it instantly as a feature in Beads.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590817630.225600",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SIR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I read your slideshow with great interest. One thing I would like to caution you about is that the example you chose the fizz buzz program is far too small a task. If you measure length of programs by counting the words, in the textual version a task like fizzbuzz is so near zero words that it doesn’t provide any information about whether or not the graphic of notation is helpful at mitigating complexity. In my Beads project samples I show a ramp of difficulty starting with a clock and going to TicTacToe, minesweeper, to chess, and then to the start of an IDE. Chess is over 1000 words, and is an excellent small test, as it combines both graphics and somewhat complex rules. I suggest you pick a task to program that has enough complexity that it cannot be represented on one screen and directly confront the central problem we are trying to solve. Which is how to make something more understandable then textual format does. If you limit yourself to trivial examples you will generate a false positive on the value Of your graphical representation. Even TicTacToe is hard enough that your diagrams would get A little messy. So I think you should Avoid basing your examples on a task too simple.  Another example that’s too simple is the to do list, which is often presented to show how simple a new language would be, Any example based on data entry Fields is inevitably going to hide the million lines of code that goes into properly handling a multi lingual text entry box. operating systems exist just to handle the text entry box, Because the intrinsic complexity of rendering Truetype fonts and input method editors for Asian languages, and you are talking thousands of man-months, all concealed in the underlying layers.\n\nYou can pick a graphical task or a business task or a Database kind of task, but whatever task area you do select for your example, please be sure it has enough intrinsic complexity to go beyond what can be shown with a dozen nodes.\n\nI would also caution you that a goal of delivering \"an easy to read visual representation of Haskell\" is probably an oxymoron, because there is nothing that easy about reading Haskell. Some of Haskell's fancy features like currying are of negligible practical value, and make it very hard to read, because now you have to know at all times how many arguments a function expects, so you can tell the difference between passing a function pointer with a missing arg, or calling a function. Nothing easy to read about that feature; it is pure poison to a reader and for that reason i rejected it instantly as a feature in Beads."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1590851554.239900",
        "client_msg_id": "3AB8B3AF-BFAD-4025-A78D-BE8A23281028",
        "text": "Are you guys are talking about extracting and scraping data from websites which is a very common task nowadays, Because companies don’t want to give access to their underlying data bases but The correct probing of their website you can get them to spill a lot of their data. and then you can reconstruct the data structures that generated the website. I will caution you that some of the big boys in the business such as Facebook spend a great deal of their time obfuscating the graphics and texts that are on their webpages so as to make it as difficult as possible to scrape. Facebook goes to perverse levels of obfuscation and concealment to the point where they even hide their crappy Little user interface icons, and they’re not even drawing them as JPEG’s or PNG’s from a link location. When you have engineering devoted to blocking people using the information programmatically So as to induce people to enter contractual relations to obtain the data directly such as Facebook does, you are techniques will hit  these kinds of barriers. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590790470.218300",
        "parent_user_id": "UML4ZEKDK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YJWJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you guys are talking about extracting and scraping data from websites which is a very common task nowadays, Because companies don’t want to give access to their underlying data bases but The correct probing of their website you can get them to spill a lot of their data. and then you can "
                            },
                            {
                                "type": "text",
                                "text": "reconstruct"
                            },
                            {
                                "type": "text",
                                "text": " the data structures that generated the website. I will caution you that some of the big boys in the business such as Facebook "
                            },
                            {
                                "type": "text",
                                "text": "spend"
                            },
                            {
                                "type": "text",
                                "text": " a great deal of their time obfuscating the graphics and texts that are on their "
                            },
                            {
                                "type": "text",
                                "text": "webpages"
                            },
                            {
                                "type": "text",
                                "text": " so as to make it as difficult as possible to scrape. Facebook goes to perverse levels of obfuscation and concealment to the point where they even hide their "
                            },
                            {
                                "type": "text",
                                "text": "crappy Little user interface icons, and they’re not even drawing them as JPEG’s or PNG’s from a link location. When you have engineering devoted to blocking people using the information programmatically So as to induce people to enter contractual relations to obtain the data directly such as Facebook does, you are techniques will hit  these kinds of barriers. "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1590852417.247000",
        "client_msg_id": "D42945B3-A038-4A38-ADE0-CE2D691AD8D6",
        "text": "<@UML4ZEKDK> yep—that was exactly my comment on twitter about <@UCDBW1H26>’s wildcard: <https:\/\/www.geoffreylitt.com\/wildcard\/|https:\/\/www.geoffreylitt.com\/wildcard\/>, which lets you make exactly those modifications. this is just a simple way to make data adapters for it using the mouse instead of code\n\n<@UEQ6M68H0> for the record, that’s exactly what i’m talking about! so far the code also works on facebook (don’t have time to redact all the personal data, so no video) and almost works on twitter (at least for text content extraction). one upside is that the technique works as long as they maintain a tree structure in the dom that mirrors their presentation objects. it doesn’t really care about class names or the data types of things. just makes it easy to identify normalized relationships—give me every element that’s at the same position with respect to its local tree, if that makes sense.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590790470.218300",
        "parent_user_id": "UML4ZEKDK",
        "attachments": [
            {
                "title": "Geoffrey Litt",
                "title_link": "https:\/\/www.geoffreylitt.com\/wildcard\/",
                "text": "Geoffrey Litt is a programmer and designer.",
                "fallback": "Geoffrey Litt",
                "thumb_url": "https:\/\/geoffreylitt.com\/images\/headshot.jpg",
                "from_url": "https:\/\/www.geoffreylitt.com\/wildcard\/",
                "thumb_width": 800,
                "thumb_height": 800,
                "service_name": "geoffreylitt.com",
                "id": 1,
                "original_url": "https:\/\/www.geoffreylitt.com\/wildcard\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=1qg6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UML4ZEKDK"
                            },
                            {
                                "type": "text",
                                "text": " yep—that was exactly my comment on twitter about "
                            },
                            {
                                "type": "user",
                                "user_id": "UCDBW1H26"
                            },
                            {
                                "type": "text",
                                "text": "’s wildcard: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.geoffreylitt.com\/wildcard\/",
                                "text": "https:\/\/www.geoffreylitt.com\/wildcard\/"
                            },
                            {
                                "type": "text",
                                "text": ", which lets you make exactly those modifications. this is just a simple way to make data adapters for it using the mouse instead of code\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " for the record, that’s exactly what i’m talking about! so far the code also works on facebook (don’t have time to redact all the personal data, so no video) and almost works on twitter (at least for text content extraction). one upside is that the technique works as long as they maintain a tree structure in the dom that mirrors their presentation objects. it doesn’t really care about class names or the data types of things. just makes it easy to identify normalized relationships—give me every element that’s at the same position with respect to its local tree, if that makes sense."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UML4ZEKDK",
        "type": "message",
        "ts": "1590860344.250800",
        "client_msg_id": "4A21A01C-8544-4107-A45C-0960342618B0",
        "text": "<@UHWC9PXBL> Right, that’s the sort of thing I was hoping to see in future work at the end of my Wildcard review: <https:\/\/malleable.systems\/blog\/2020\/02\/29\/wildcard-review\/|https:\/\/malleable.systems\/blog\/2020\/02\/29\/wildcard-review\/> I think it could be useful for any systems that want to act on page structure while avoiding the need for lots of site-specific code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "edc1c9acb12d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-22\/5286358617767_edc1c9acb12dfa7d1a20_72.jpg",
            "first_name": "J.",
            "real_name": "J. Ryan Stinnett",
            "display_name": "J. Ryan Stinnett",
            "team": "T5TCAFTA9",
            "name": "jryans",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590790470.218300",
        "parent_user_id": "UML4ZEKDK",
        "attachments": [
            {
                "title": "Wildcard review",
                "title_link": "https:\/\/malleable.systems\/blog\/2020\/02\/29\/wildcard-review\/",
                "text": "Geoffrey Litt and Daniel Jackson have been working on Wildcard, which enables customising websites via one of the most popular programming models in existence today: the spreadsheet. Wildcard’s sheet is bidirectionally linked to the site content, so that changes and also user additions to the sheet are reflected back in the site’s UI. Similarly, if the site content changes, the sheet is updated as well.",
                "fallback": "Wildcard review",
                "thumb_url": "https:\/\/malleable.systems\/meta\/android-chrome-512x512.png",
                "ts": 1583001872,
                "from_url": "https:\/\/malleable.systems\/blog\/2020\/02\/29\/wildcard-review\/",
                "thumb_width": 512,
                "thumb_height": 512,
                "service_icon": "https:\/\/malleable.systems\/meta\/apple-touch-icon.png",
                "service_name": "malleable.systems",
                "id": 1,
                "original_url": "https:\/\/malleable.systems\/blog\/2020\/02\/29\/wildcard-review\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T62d4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " Right, that’s the sort of thing I was hoping to see in future work at the end of my Wildcard review: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/malleable.systems\/blog\/2020\/02\/29\/wildcard-review\/",
                                "text": "https:\/\/malleable.systems\/blog\/2020\/02\/29\/wildcard-review\/"
                            },
                            {
                                "type": "text",
                                "text": " I think it could be useful for any systems that want to act on page structure while avoiding the need for lots of site-specific code."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1590862388.251500",
        "client_msg_id": "98171273-12AF-49A0-997C-CDB960CF4877",
        "text": "wow i can’t believe i missed that article! we’re on exactly the same page lmao",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590790470.218300",
        "parent_user_id": "UML4ZEKDK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g\/G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "wow i can’t believe i missed that article! we’re on exactly the same page lmao"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1590879190.252000",
        "client_msg_id": "a999f990-c18f-4dd0-a320-51790df50643",
        "text": "I’m interested in pair programming <@UP3FH4CLU>! How are you thinking about managing the pair programming sessions?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590817630.225600",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pra",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m interested in pair programming "
                            },
                            {
                                "type": "user",
                                "user_id": "UP3FH4CLU"
                            },
                            {
                                "type": "text",
                                "text": "! How are you thinking about managing the pair programming sessions?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP3FH4CLU",
        "type": "message",
        "ts": "1590898482.252500",
        "client_msg_id": "c7ed55c6-a7f2-47a6-a33c-4cc830f8abea",
        "text": "<@U85HCL7JP> Awesome! I'm open to suggestions. I'll send you a direct message to set something up.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "40f3551ff561",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-19\/1372124144885_40f3551ff56134e83fb6_72.png",
            "first_name": "",
            "real_name": "Robbie Gleichman",
            "display_name": "Robbie Gleichman",
            "team": "T5TCAFTA9",
            "name": "rgleichman",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590817630.225600",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oYaG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U85HCL7JP"
                            },
                            {
                                "type": "text",
                                "text": " Awesome! I'm open to suggestions. I'll send you a direct message to set something up."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1590905897.259900",
        "client_msg_id": "3F26D552-B2B9-4F9D-8334-24ECB552F137",
        "text": "<@UEQ6M68H0> I think you raise some good points also valid for a lot other projects (including mine). But I think it's also important to look at the domain your targeting and look at complex examples within that domain. <@UP3FH4CLU> are you also planning to go commercial with your project or are you developing this from a research perspective? Which domain are you targeting?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590817630.225600",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bzZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " I think you raise some good points also valid for a lot other projects (including mine). But I think it's also important to look at the domain your targeting and look at complex examples within that domain. "
                            },
                            {
                                "type": "user",
                                "user_id": "UP3FH4CLU"
                            },
                            {
                                "type": "text",
                                "text": " are you also planning to go commercial with your project or are you developing this from a research perspective? Which domain are you targeting?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]