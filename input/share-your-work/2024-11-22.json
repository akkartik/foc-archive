[
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1732280668.183009",
        "client_msg_id": "85538ea2-9595-4d1b-9d1f-7aced8edb569",
        "text": "I've made a new small <https:\/\/youtu.be\/sU5s_iVjL70|video> where I've implemented a chat assistant using the OpenAI Chat Completion API in Code flow canvas (this is the visual programming system that I am building in my spare time). Goals for building this visual flow are to learn more about the OpenAI API's and LLM's in general, but also to see if something like this could be build without building in special knowledge about OpenAI in code flow canvas itself. I had to extend code flow canvas off course, but only with generic node-types which could be used in this flow. You can try it our yourself on <http:\/\/demo.codeflowcanvas.io|demo.codeflowcanvas.io>, but only if you have an OpenAI API key with some credits",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "from_url": "https:\/\/youtu.be\/sU5s_iVjL70",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/sU5s_iVjL70\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/sU5s_iVjL70?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen title=\"LLM chat assistant in code flow canvas\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https:\/\/youtu.be\/sU5s_iVjL70",
                "fallback": "YouTube Video: LLM chat assistant in code flow canvas",
                "title": "LLM chat assistant in code flow canvas",
                "title_link": "https:\/\/youtu.be\/sU5s_iVjL70",
                "author_name": "Code flow canvas",
                "author_link": "https:\/\/www.youtube.com\/@codeflowcanvas",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "khcmQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've made a new small "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/sU5s_iVjL70",
                                "text": "video"
                            },
                            {
                                "type": "text",
                                "text": " where I've implemented a chat assistant using the OpenAI Chat Completion API in Code flow canvas (this is the visual programming system that I am building in my spare time). Goals for building this visual flow are to learn more about the OpenAI API's and LLM's in general, but also to see if something like this could be build without building in special knowledge about OpenAI in code flow canvas itself. I had to extend code flow canvas off course, but only with generic node-types which could be used in this flow. You can try it our yourself on "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/demo.codeflowcanvas.io",
                                "text": "demo.codeflowcanvas.io"
                            },
                            {
                                "type": "text",
                                "text": ", but only if you have an OpenAI API key with some credits"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1732302286.812059",
        "client_msg_id": "90b8df0f-a951-43fe-9ddf-63690f86f2f4",
        "text": "<https:\/\/www.youtube.com\/watch?v=HAe6TvbwXJw|Reverse Engineering a 218-Byte Wasm Compiler in JavaScript>\n\nStarting with a 218-byte one-liner that implements a Reverse Polish Notation arithmetic compiler, we'll work backward to transform it into readable JS by removing one code golf trick at a time",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732302286.812059",
        "reply_count": 8,
        "reply_users_count": 3,
        "latest_reply": "1732377845.192499",
        "reply_users": [
            "U0123H7JRDM",
            "UBN9AFS0N",
            "UGWUJUZHT"
        ],
        "replies": [
            {
                "user": "U0123H7JRDM",
                "ts": "1732347823.550729"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1732360905.448489"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1732363027.171569"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1732363457.084209"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1732364989.751279"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1732368380.862689"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1732371775.587609"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1732377845.192499"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/www.youtube.com\/watch?v=HAe6TvbwXJw",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/HAe6TvbwXJw\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/HAe6TvbwXJw?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen title=\"Reverse Engineering a 218-Byte Wasm Compiler in JavaScript\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=HAe6TvbwXJw",
                "fallback": "YouTube Video: Reverse Engineering a 218-Byte Wasm Compiler in JavaScript",
                "title": "Reverse Engineering a 218-Byte Wasm Compiler in JavaScript",
                "title_link": "https:\/\/www.youtube.com\/watch?v=HAe6TvbwXJw",
                "author_name": "Mariano Guerra",
                "author_link": "https:\/\/www.youtube.com\/@marianoguerra7015",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4urBa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=HAe6TvbwXJw",
                                "text": "Reverse Engineering a 218-Byte Wasm Compiler in JavaScript"
                            },
                            {
                                "type": "text",
                                "text": "\n\nStarting with a 218-byte one-liner that implements a Reverse Polish Notation arithmetic compiler, we'll work backward to transform it into readable JS by removing one code golf trick at a time"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U0123H7JRDM",
                    "UGWUJUZHT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U07N6GF822X",
        "type": "message",
        "ts": "1732319577.309459",
        "client_msg_id": "69562e82-56ec-4e6f-802f-bc505bd852f0",
        "text": "i love this so much. i need it!!!!!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6aa99c5ad895",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-09-19\/7740108837399_6aa99c5ad89535892270_72.jpg",
            "first_name": "Nicole",
            "real_name": "Nicole Ripka",
            "display_name": "Nicole Ripka",
            "team": "T5TCAFTA9",
            "name": "ripka",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732031818.972809",
        "parent_user_id": "U05MR3XBWUS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5hkqB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i love this so much. i need it!!!!!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U05MR3XBWUS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1732347823.550729",
        "client_msg_id": "B4459584-6CF9-4BA1-B230-EE44BBCF60B6",
        "text": "Very interesting indeed! Did you also write this up in a blog post somewhere? Or is it only available in your webassembly book? (I am going to buy it :grinning:)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732302286.812059",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FCVrL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very interesting indeed! Did you also write this up in a blog post somewhere? Or is it only available in your webassembly book? "
                            },
                            {
                                "type": "text",
                                "text": "(I am going to buy it "
                            },
                            {
                                "type": "emoji",
                                "name": "grinning",
                                "unicode": "1f600"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]