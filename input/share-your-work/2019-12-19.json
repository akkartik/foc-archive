[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1576748841.004700",
        "client_msg_id": "87ead555-0b3b-473a-8606-a3ead69e92a6",
        "text": "<@UD3AK9JRF> <@UCGAK10LS> good luck!  I hope to see more Eveish work.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LEAU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UD3AK9JRF"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " good luck!  I hope to see more Eveish work."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "man_dancing",
                "users": [
                    "UD3AK9JRF",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1576749095.004900",
        "client_msg_id": "5284b9ad-1c09-403e-bb07-8257ac125b9b",
        "text": "<@UJN1TAYEQ> beautiful is in the eye especially when its only surface deep.  My eye?  Let's call Haskell beautiful in a way that OCaml definitely is not.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JPuJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " beautiful is in the eye especially when its only surface deep.  My eye?  Let's call Haskell beautiful in a way that OCaml definitely is not."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "hear_no_evil",
                "users": [
                    "UC2A2ARPT",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1576749358.005100",
        "client_msg_id": "cfe1acd3-f71b-47d9-bb7a-4e5e619f4c2e",
        "text": "<@UJN1TAYEQ> your other question about particularly noteworthy VPLs.  For me, Scratch and Max Cycling stand out.  Scratch surprised me by how approachable blocks for structured programming can be and by the richness of its concurrency constructs.  Max I like because it's weird.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vMI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " your other question about particularly noteworthy VPLs.  For me, Scratch and Max Cycling stand out.  Scratch surprised me by how approachable blocks for structured programming can be and by the richness of its concurrency constructs.  Max I like because it's weird."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1576749391.005300",
        "client_msg_id": "634a60d0-71cd-45fc-9a28-36d0f7a8c83e",
        "text": "<@UJN1TAYEQ> I bet <@UC2A2ARPT> could say interesting things about Max.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1nOw1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " I bet "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " could say interesting things about Max."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1576749517.005500",
        "client_msg_id": "2ea5805d-5faf-4c20-92b4-05bd26fac453",
        "text": "<@UC2A2ARPT> I like your work on, let's call them, transparent wires: where you can see data flowing through them.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8QmoF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I like your work on, let's call them, transparent wires: where you can see data flowing through them."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1576749783.005700",
        "client_msg_id": "a3c540ad-0eec-4cb2-a1d9-cb5bd8631365",
        "text": "<@UCGAK10LS> what do static types mean in a live system?  I think that gets to the root of your conversation with <@UEBG0NPDK>.  I guess it comes down to asking what could possibly happen over some domain of data rather than just checking what actually happen for the data you have at hand.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "42F9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " what do static types mean in a live system?  I think that gets to the root of your conversation with "
                            },
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": ".  I guess it comes down to asking what could possibly happen over some domain of data rather than just checking what actually happen for the data you have at hand."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1576751743.005900",
        "client_msg_id": "fe7d90ea-4c2e-4df7-b8ee-b2ecea05733b",
        "text": "<@UA14TGLTC> Yes, I'd say that's exactly it! Equivalently, its about verifying whether computations that haven't run yet will have specific behaviours (e.g. produce one output for each input).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Mw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " Yes, I'd say that's exactly it! Equivalently, its about verifying whether computations that haven't run yet will have specific behaviours (e.g. produce one output for each input)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1576758166.006100",
        "client_msg_id": "d3f21773-8a5f-48ac-ae7e-0fef6801783e",
        "text": "<@UEBG0NPDK> Yes, I did discover Eve's keying vertical bar eventually.  It came later in my exploration.  Was resentful.\n\nThough Eve's bind\/commit distinction didn't quite work, it remains provocative, suggested some nice compositional properties: the order in which commit rules applied didn't make a difference.  (I tried implementing this for my team's database, and given their imperative bias, it was a complete failure.)  And the hard part with Eve was getting a sequence of several things to happen especially when the last step was to clean up stuff from earlier steps.\n\nIt's one of those two dimensional problems: all the rules that apply at once in one dimension vs what happens step by step.  Eve (or a state machine actually) focuses on the first.  Imperative programming focuses on the second with the disadvantage being lots of accidental sequencing.  (Insert digression about branch prediction.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wqv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " Yes, I did discover Eve's keying vertical bar eventually.  It came later in my exploration.  Was resentful.\n\nThough Eve's bind\/commit distinction didn't quite work, it remains provocative, suggested some nice compositional properties: the order in which commit rules applied didn't make a difference.  (I tried implementing this for my team's database, and given their imperative bias, it was a complete failure.)  And the hard part with Eve was getting a sequence of several things to happen especially when the last step was to clean up stuff from earlier steps.\n\nIt's one of those two dimensional problems: all the rules that apply at once in one dimension vs what happens step by step.  Eve (or a state machine actually) focuses on the first.  Imperative programming focuses on the second with the disadvantage being lots of accidental sequencing.  (Insert digression about branch prediction.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1576758224.006300",
        "client_msg_id": "91518f4b-fb0b-402c-aa12-aa3813f4620e",
        "text": "By the way, the expression problem (adding operations vs adding datatypes) is another good multidimensional problem.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Scf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "By the way, the expression problem (adding operations vs adding datatypes) is another good multidimensional problem."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1576758436.006500",
        "client_msg_id": "138d253b-bba7-4728-b145-2ad2e8142e51",
        "text": "<@U6KQ2S410> conditional logic with interacting conditions is another good example.  The possibility space is the product of a bunch of different features, and you want to cover all the cases without getting bogged down by their multiplicity.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "53Mzd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": " conditional logic with interacting conditions is another good example.  The possibility space is the product of a bunch of different features, and you want to cover all the cases without getting bogged down by their multiplicity."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1576765947.006700",
        "client_msg_id": "6befb204-ca35-462a-964b-6cd5e844caa2",
        "text": "<@UA14TGLTC> \"beautiful is in the eye especially when its only surface deep\"\nWell, I wish there was an engineering discipline for designing programming language syntax.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b\/\/Oc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " \"beautiful is in the eye especially when its only surface deep\"\nWell, I wish there was an engineering discipline for designing programming language syntax."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "laughing",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC",
                    "UFLN9JFRT"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UD3AK9JRF",
        "type": "message",
        "ts": "1576780636.007500",
        "client_msg_id": "7d40c07e-7728-461e-aed5-50147669c283",
        "text": "The ability to define types gradually with all the flexibility of logic programming is very appealing to me, and something I’m hoping to explore. At the same time I have reservations. Formal type systems teach me how to program. They establish and enforce expectations for how any piece of code will work; what is and isn’t possible. They form vocabularies around which people communicate, write documentation, and coordinate their efforts. They ask me to think clearly about what I’m trying to accomplish, because sometimes I have enough information to figure it out, I’m just being lazy.\nIf the best you have are patterns, you’ll need at least a very strong, didactic standard library that you’ve put a lot of real-world experience and careful consideration into.\nHow much any of this matters depends on what kind of things people will be building with it; their scope, longevity, sociality. We’re starting with a single, narrowly scoped application we have full control over, evolving Datalog from a database to a programming layer as needs and the resources to meet them arise. I do hope to expose that layer to users gradually, probably by reifying very specific patterns (e.g. how to build a state machine in Datalog) in the programming environment.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g35dfa49055c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/235dfa49055c0a25f2ccfc667a7a6b77.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Peter",
            "real_name": "Peter Abrahamsen",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "rainhead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cny",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The ability to define types gradually with all the flexibility of logic programming is very appealing to me, and something I’m hoping to explore. At the same time I have reservations. Formal type systems teach me how to program. They establish and enforce expectations for how any piece of code will work; what is and isn’t possible. They form vocabularies around which people communicate, write documentation, and coordinate their efforts. They ask me to think clearly about what I’m trying to accomplish, because sometimes I have enough information to figure it out, I’m just being lazy.\nIf the best you have are patterns, you’ll need at least a very strong, didactic standard library that you’ve put a lot of real-world experience and careful consideration into.\nHow much any of this matters depends on what kind of things people will be building with it; their scope, longevity, sociality. We’re starting with a single, narrowly scoped application we have full control over, evolving Datalog from a database to a programming layer as needs and the resources to meet them arise. I do hope to expose that layer to users gradually, probably by reifying very specific patterns (e.g. how to build a state machine in Datalog) in the programming environment."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1576782918.008100",
        "client_msg_id": "b2eaabc1-f8a4-436c-9695-bedc65086fe0",
        "text": "How can I tell which branch of the conditional will be evaluated first? In the video you indicate that it'll be the `&lt; 7` branch — how is that decided, and what's the visual cue to communicate that to the programmer?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576657342.007300",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e46d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How can I tell which branch of the conditional will be evaluated first? In the video you indicate that it'll be the "
                            },
                            {
                                "type": "text",
                                "text": "< 7",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " branch — how is that decided, and what's the visual cue to communicate that to the programmer?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1576783165.008400",
        "client_msg_id": "8ab55b32-814c-4bf4-be03-cda49533fc9a",
        "text": "<@UBKNXPBAB> It might be a bit out of date, but Robbie does have this list of advantages of the Glance visual syntax circa 2017: <https:\/\/github.com\/rgleichman\/glance\/wiki\/Advantages-of-Glance>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576657342.007300",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xXvk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBKNXPBAB"
                            },
                            {
                                "type": "text",
                                "text": " It might be a bit out of date, but Robbie does have this list of advantages of the Glance visual syntax circa 2017: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/rgleichman\/glance\/wiki\/Advantages-of-Glance"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1576783339.008600",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1576783368.000000"
        },
        "client_msg_id": "eb3f4110-d6c8-4187-9dac-d1a916daafca",
        "text": "(I'm actually quite fond of the _topsy turvy \/ zero-G_ -esq visual syntax of that era. It feels like it'd play very nicely with physics, 3d, VR, etc)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576657342.007300",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fXP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(I'm actually quite fond of the "
                            },
                            {
                                "type": "text",
                                "text": "topsy turvy \/ zero-G",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " -esq visual syntax of that era. It feels like it'd play very nicely with physics, 3d, VR, etc)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1576797860.009600",
        "client_msg_id": "87b5d05d-19d1-446e-a4cf-8bc9cc1ac81c",
        "text": "I’ve been working on a tool to inline Python APIs. I tweeted a short demo of it working: <https:\/\/twitter.com\/wcrichton\/status\/1207166522545721344>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576797860.009600",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1577134417.058100",
        "reply_users": [
            "UPVBV34EL",
            "UBKNXPBAB",
            "UFB8STN7K"
        ],
        "replies": [
            {
                "user": "UPVBV34EL",
                "ts": "1576834162.016100"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1577080565.053800"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1577080660.054000"
            },
            {
                "user": "UFB8STN7K",
                "ts": "1577125740.057600"
            },
            {
                "user": "UFB8STN7K",
                "ts": "1577134417.058100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/wcrichton|@wcrichton>: pesky abstractions <https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1207166261177700352\/pu\/img\/aui_s2uFPRVG3Wyf.jpg>",
                "ts": 1576645901,
                "author_name": "Will Crichton",
                "author_link": "https:\/\/twitter.com\/wcrichton\/status\/1207166522545721344",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1127803031708246016\/gUAyYE2i_normal.png",
                "author_subname": "@wcrichton",
                "text": "pesky abstractions",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/wcrichton\/status\/1207166522545721344",
                "thumb_url": "https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1207166261177700352\/pu\/img\/aui_s2uFPRVG3Wyf.jpg",
                "thumb_width": 1152,
                "thumb_height": 720,
                "video_html_width": 1152,
                "video_html_height": 720,
                "video_html": "<video controls poster=\"https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1207166261177700352\/pu\/img\/aui_s2uFPRVG3Wyf.jpg\" width=\"1152\" height=\"720\"><source type=\"video\/mp4\" src=\"https:\/\/video.twimg.com\/ext_tw_video\/1207166261177700352\/pu\/vid\/1152x720\/xzwXjS2KClvb5hnd.mp4?tag=10\"><\/video>",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/wcrichton\/status\/1207166522545721344",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fuz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve been working on a tool to inline Python APIs. I tweeted a short demo of it working: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/wcrichton\/status\/1207166522545721344"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "star-struck",
                "users": [
                    "UPU0YJ1CM",
                    "UFQQ3P867",
                    "UP7SQ8KT3"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "UD31LGQKB",
                    "UJ6LDMMN0"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1576797890.010300",
        "client_msg_id": "f07eb12a-a5d7-4462-b48f-86d9a73e7344",
        "text": "Curious if anyone has seen a tool like this? Or if anyone has wanted such a tool for a problem you’ve had before.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576797890.010300",
        "reply_count": 10,
        "reply_users_count": 3,
        "latest_reply": "1576940539.044800",
        "reply_users": [
            "UCUSW7WVD",
            "UPU0YJ1CM",
            "UFB8STN7K"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1576826615.015200"
            },
            {
                "user": "UPU0YJ1CM",
                "ts": "1576835194.016400"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1576857565.017400"
            },
            {
                "user": "UFB8STN7K",
                "ts": "1576869264.017600"
            },
            {
                "user": "UFB8STN7K",
                "ts": "1576869301.017800"
            },
            {
                "user": "UFB8STN7K",
                "ts": "1576869325.018000"
            },
            {
                "user": "UFB8STN7K",
                "ts": "1576890018.018400"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1576895639.019100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1576895754.019300"
            },
            {
                "user": "UPU0YJ1CM",
                "ts": "1576940539.044800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/g6R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Curious if anyone has seen a tool like this? Or if anyone has wanted such a tool for a problem you’ve had before."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1576798166.010400",
        "client_msg_id": "e0cf2c9c-9505-43dc-b2de-3edf0bb0beff",
        "text": "just finished watching it, I was thinking about two experiments you can run to get feedback from your syntax: 1) ask non programmers to interpret out loud the meaning of a small snippet of code using your visual representation and following their sight with the mouse, so you can follow where they are looking at. See if they get the right sequence (if they follow the steps in the actual order), if they jump a lot around, if they guess what the code does.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576657342.007300",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wco",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "just finished watching it, I was thinking about two experiments you can run to get feedback from your syntax: 1) ask non programmers to interpret out loud the meaning of a small snippet of code using your visual representation and following their sight with the mouse, so you can follow where they are looking at. See if they get the right sequence (if they follow the steps in the actual order), if they jump a lot around, if they guess what the code does."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1576798189.010600",
        "client_msg_id": "a619f088-45b6-4295-a256-66f0bdf7524b",
        "text": "2) do the same with programmers, see if they get the program right, the evaluation order, what's inside of what, the flow etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576657342.007300",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6le",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "2) do the same with programmers, see if they get the program right, the evaluation order, what's inside of what, the flow etc."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1576798452.010800",
        "client_msg_id": "d2763db7-b409-4e5e-9735-64cf27a0b885",
        "text": "<@UBN9AFS0N> — How much instruction should people have before being asked to do that? Because it feels like a bit of an unfair thing to do with someone who has been given no information about what to make of the syntax... but those sorts of questions feel like they'd be answered by the most basic of introduction.\n\nIn other words, I'm not sure \"guessability\" is a valuable quality for what will ultimately be a frontend to _Haskell!_",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576657342.007300",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+kv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " — How much instruction should people have before being asked to do that? Because it feels like a bit of an unfair thing to do with someone who has been given no information about what to make of the syntax... but those sorts of questions feel like they'd be answered by the most basic of introduction.\n\nIn other words, I'm not sure \"guessability\" is a valuable quality for what will ultimately be a frontend to"
                            },
                            {
                                "type": "text",
                                "text": " Haskell!",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1576798597.011100",
        "client_msg_id": "0dafdac3-85b5-428a-930e-08f3d3246d0c",
        "text": "Though if someone has been taught the (eg) sequence rules, and they still struggle, that's probably valuable feedback. Hmm.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576657342.007300",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ilfS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Though if someone has been taught the (eg) sequence rules, and they still struggle, that's probably valuable feedback. Hmm."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1576799029.011300",
        "client_msg_id": "2e3a6ac3-9054-4fae-b32d-e9e4af05acb4",
        "text": "The initial stated goal is \"Computing for everyone\", and it may not be everyone, but a large group won't follow instructions or documentations for more than 5 minutes (I can tell stories of that :smile:). I saw a contradiction between the stated goal and the syntax being for haskell, but it's a nice experiment to know if a change can make it more approachable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576657342.007300",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZCk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The initial stated goal is \"Computing for everyone\", and it may not be everyone, but a large group won't follow instructions or documentations for more than 5 minutes (I can tell stories of that "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "). I saw a contradiction between the stated goal and the syntax being for haskell, but it's a nice experiment to know if a change can make it more approachable."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1576799093.011500",
        "client_msg_id": "d5bbf928-09f8-4460-a2f8-58da45b5cbec",
        "text": "regarding instructions.. maybe the instructor can do the activity a couple of times first with the user following it and then asked to try it themselves with a different problem (and maybe later with the problems the instructor explained earlier)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576657342.007300",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C\/+Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "regarding instructions.. maybe the instructor can do the activity a couple of times first with the user following it and then asked to try it themselves with a different problem (and maybe later with the problems the instructor explained earlier)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1576799166.011700",
        "client_msg_id": "f36d5d85-8c6f-4021-ac0d-12c9ce329569",
        "text": "I don't think a written guide would be followed or assimilated in a short amount of time that nice helpful people are willing to give for this sort of experiments :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576657342.007300",
        "parent_user_id": "UP3FH4CLU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2T3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't think a written guide would be followed or assimilated in a short amount of time that nice helpful people are willing to give for this sort of experiments "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1576806861.014000",
        "client_msg_id": "f8727e93-8ae8-4f9d-a4c4-5340fa833659",
        "text": "<@UD3AK9JRF> I like when the type system provides a consistent sense of abstraction, lets you uniformly ignore some detail.  For instance, with a Hindley-Milner type system, you can talk about *the principal* type of an expression whereas with dependent types, an expression's type will model more or less detail depending on what you want to know.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yc0s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UD3AK9JRF"
                            },
                            {
                                "type": "text",
                                "text": " I like when the type system provides a consistent sense of abstraction, lets you uniformly ignore some detail.  For instance, with a Hindley-Milner type system, you can talk about "
                            },
                            {
                                "type": "text",
                                "text": "the principal ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "type of an expression whereas with dependent types, an expression's type will model more or less detail depending on what you want to know."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1576808603.014200",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1576854693.000000"
        },
        "client_msg_id": "cb36294c-bbda-4a1c-a08a-bbf2ceb07f78",
        "text": "Static type systems are a tar pit. If the type system is simple, tractable and easy to understand (eg, if it is simple enough to support the principal type property), then it isn't powerful enough. You can't abstract over an arbitrary expression, pull out variables and make them into function parameters. If you try to make the type system powerful enough, then you get something like Haskell, where 99% of the complexity of the language is in understanding the type system (including the vast array of GHC type system extensions that are required by various libraries). Your type system evolves to have \"shadow domains\" (<http:\/\/gbracha.blogspot.com\/2014\/09\/a-domain-of-shadows.html|gbracha.blogspot.com\/2014\/09\/a-domain-of-shadows.html>) where all of the features of the regular language are duplicated in the type system. For example, you have regular integers, and then you have type-level integers, where arithmetic operations are performed by the type system.\n\nI know that some people want all that complexity, because the end goal is dependent types and program verification. For the end user programming that interests me, strong typing is a disease that leads to runaway language complexity. Dynamic typing is the cure.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "attachments": [
            {
                "title": "A DOMain of Shadows",
                "title_link": "https:\/\/gbracha.blogspot.com\/2014\/09\/a-domain-of-shadows.html",
                "text": "One of the advantages of an internal DSL  over an external one is that you can leverage the full power of a general purpose programming lan...",
                "fallback": "A DOMain of Shadows",
                "from_url": "https:\/\/gbracha.blogspot.com\/2014\/09\/a-domain-of-shadows.html",
                "service_icon": "https:\/\/gbracha.blogspot.com\/favicon.ico",
                "service_name": "gbracha.blogspot.com",
                "id": 1,
                "original_url": "https:\/\/gbracha.blogspot.com\/2014\/09\/a-domain-of-shadows.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LIf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Static type systems are a tar pit. If the type system is simple, tractable and easy to understand (eg, if it is simple enough to support the principal type property), then it isn't powerful enough. You can't abstract over an arbitrary expression, pull out variables and make them into function parameters. If you try to make the type system powerful enough, then you get something like Haskell, where 99% of the complexity of the language is in understanding the type system (including the vast array of GHC type system extensions that are required by various libraries). Your type system evolves to have \"shadow domains\" ("
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/gbracha.blogspot.com\/2014\/09\/a-domain-of-shadows.html",
                                "text": "gbracha.blogspot.com\/2014\/09\/a-domain-of-shadows.html"
                            },
                            {
                                "type": "text",
                                "text": ") where all of the features of the regular language are duplicated in the type system. For example, you have regular integers, and then you have type-level integers, where arithmetic operations are performed by the type system.\n\nI know that some people want all that complexity, because the end goal is dependent types and program verification. For the end user programming that interests me, strong typing is a disease that leads to runaway language complexity. Dynamic typing is the cure."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD3AK9JRF",
        "type": "message",
        "ts": "1576815324.014600",
        "edited": {
            "user": "UD3AK9JRF",
            "ts": "1576815690.000000"
        },
        "client_msg_id": "0140cdc2-b8b0-47db-86cc-8a50c1d2835d",
        "text": "I want to imagine what takes the place of types in a logic programming world: how they’re developed, how they coordinate work among programmers, and so forth—assuming they’re even formalized. My sense is that there haven’t been enough real world programs of sufficient scope for best practices to develop. Maybe I’m wrong. There might be some intuitions in the likes of clojure.spec.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g35dfa49055c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/235dfa49055c0a25f2ccfc667a7a6b77.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Peter",
            "real_name": "Peter Abrahamsen",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "rainhead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b35J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I want to imagine what takes the place of types in a logic programming world: how they’re developed, how they coordinate work among programmers, and so forth—assuming they’re even formalized. My sense is that there haven’t been enough real world programs of sufficient scope for best practices to develop. Maybe I’m wrong. There might be some intuitions in the likes of clojure.spec."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1576826615.015200",
        "client_msg_id": "a571bd3f-fa32-4b03-be89-f1f7a9d2302b",
        "text": "OMG this is amazing :heart: :heart:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576797890.010300",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WIuk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OMG this is amazing "
                            },
                            {
                                "type": "emoji",
                                "name": "heart",
                                "unicode": "2764-fe0f"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "heart",
                                "unicode": "2764-fe0f"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFB8STN7K"
                ],
                "count": 1
            }
        ]
    }
]