[
    {
        "user": "U04DZ850WRW",
        "type": "message",
        "ts": "1755673681.834649",
        "client_msg_id": "9965ba5e-f1ff-40f7-8c9b-0feac1e5be03",
        "text": "I think what you describe above comes close to the <https:\/\/lurk.org\/|LURK> people?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga02c280f586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a02c280f586228f9531d32cf32df63aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Maximilian",
            "real_name": "Maximilian Ernestus",
            "display_name": "Maximilian Ernestus",
            "team": "T5TCAFTA9",
            "name": "maximilian",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755020916.568179",
        "parent_user_id": "U089J8FNGB1",
        "attachments": [
            {
                "from_url": "https:\/\/lurk.org\/",
                "id": 1,
                "original_url": "https:\/\/lurk.org\/",
                "fallback": "LURK",
                "text": "Welcome to LURK, we host, facilitate and archive discussions around net- and computational culture and politics, proto- and post-free culture practices, (experimental) (sound) (new media) (software) art, and things like that…",
                "title": "LURK",
                "title_link": "https:\/\/lurk.org\/",
                "service_name": "lurk.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b9x+T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think what you describe above comes close to the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/lurk.org\/",
                                "text": "LURK"
                            },
                            {
                                "type": "text",
                                "text": " people?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "cool",
                "users": [
                    "U089J8FNGB1",
                    "UJBAJNFLK",
                    "U05UK5T7LPP"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1755690734.548889",
        "client_msg_id": "adce5003-8f4b-480c-9b09-a77e32f6c3c1",
        "text": "<https:\/\/blog.fogus.me\/langdev\/long-season.html|Ends in what is likely a fun question for these parts:>\n\n&gt; In the 1970s, you could launch a new language with a paper and a maybe a compiler and\/or interpreter. In 2025, you need an integrated product, a narrative, and enough momentum to bootstrap an ecosystem and on top of that a huge corpus of code that can only be created through sustained use. Modern langdev is daunting to say the least.\n&gt; \n&gt; Where do languages go from here?\n&gt; • Languages could be shaped by physical and purpose-specific constraints once again. Tomorrow’s interesting languages may target IoT, SBCs, edge devices, Blockchain, GPUs, and let’s not forget that the world still runs on microcontrollers.\n&gt; • Python is the lingua franca of AI, which means it’s the lingua franca of LLM-generated code. Eventually Python will force LLMs to eat their own tail, but more immediate an over-reliance on AI-generated code will expose inherent weaknesses in the technology. We’re seeing real problems with an increased lack of rigor and there are novel problems that LLMs simply cannot solve. These short-comings are opportunities.\n&gt; • Future innovations may look more like a new operating environment with integrated semantics across distributed systems, or programmable infrastructure that blurs the line between language and runtime.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755690734.548889",
        "reply_count": 19,
        "reply_users_count": 9,
        "latest_reply": "1755974287.356829",
        "reply_users": [
            "UMQ6LR9NZ",
            "UGWUJUZHT",
            "U08QBNUQ3GF",
            "UCUSW7WVD",
            "U08DYF4SEAE",
            "UJBAJNFLK",
            "U05PY5AQCA2",
            "U066TQFTXFT",
            "U5STGTB3J"
        ],
        "replies": [
            {
                "user": "UMQ6LR9NZ",
                "ts": "1755690805.420919"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1755694407.648169"
            },
            {
                "user": "U08QBNUQ3GF",
                "ts": "1755698689.191119"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1755703218.652739"
            },
            {
                "user": "U08DYF4SEAE",
                "ts": "1755717671.099619"
            },
            {
                "user": "U08DYF4SEAE",
                "ts": "1755717713.443979"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1755765513.120669"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1755810721.415889"
            },
            {
                "user": "U066TQFTXFT",
                "ts": "1755826022.024579"
            },
            {
                "user": "U066TQFTXFT",
                "ts": "1755826027.724379"
            },
            {
                "user": "U066TQFTXFT",
                "ts": "1755826089.899329"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1755826163.522039"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1755849026.546429"
            },
            {
                "user": "U066TQFTXFT",
                "ts": "1755915377.829669"
            },
            {
                "user": "U066TQFTXFT",
                "ts": "1755915618.284979"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1755916382.738309"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1755935739.755789"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1755967109.853759"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1755974287.356829"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dT6O8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/blog.fogus.me\/langdev\/long-season.html",
                                "text": "Ends in what is likely a fun question for these parts:"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the 1970s, you could launch a new language with a paper and a maybe a compiler and\/or interpreter. In 2025, you need an integrated product, a narrative, and enough momentum to bootstrap an ecosystem and on top of that a huge corpus of code that can only be created through sustained use. Modern langdev is daunting to say the least.\n\nWhere do languages go from here?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Languages could be shaped by physical and purpose-specific constraints once again. Tomorrow’s interesting languages may target IoT, SBCs, edge devices, Blockchain, GPUs, and let’s not forget that the world still runs on microcontrollers."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Python is the lingua franca of AI, which means it’s the lingua franca of LLM-generated code. Eventually Python will force LLMs to eat their own tail, but more immediate an over-reliance on AI-generated code will expose inherent weaknesses in the technology. We’re seeing real problems with an increased lack of rigor and there are novel problems that LLMs simply cannot solve. These short-comings are opportunities."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Future innovations may look more like a new operating environment with integrated semantics across distributed systems, or programmable infrastructure that blurs the line between language and runtime."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 1
                    }
                ]
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1755690805.420919",
        "client_msg_id": "6feebc9a-3841-4ff9-9e07-bca72c80a39e",
        "text": "to kick off, I’d point out that this kinda assumes you want wide adoption, but then I think about places that I know of that spin up targeted DSLs that do just one kinda thing for one kinda reason",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755690734.548889",
        "parent_user_id": "UMQ6LR9NZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ejZ4m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "to kick off, I’d point out that this kinda assumes you want wide adoption, but then I think about places that I know of that spin up targeted DSLs that do just one kinda thing for one kinda reason"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1755694407.648169",
        "client_msg_id": "7efd4a2a-629b-4bff-b90a-0e5f04e9bca3",
        "text": "\"Programming languages\" and \"operating systems\" are old-fashioned ideas invented for 1960s hardware limitations. In 2025, we want LEGO® blocks of software written in a multitude of languages. BTW \"functions\" aren't LEGO® blocks because of their inherent \"blocking\" (ad hoc control flow &lt;==&gt; caller must suspend and wait for callee). UNIX pipelines gave us a taste of a better way to snap software units together but the `*sh`  syntax was restricted by the inside-the-box-mentality use of text and the one-input-one-output mentality. Today, we can do a lot better, e.g. no inherent blocking, and, fanning out of data to multiple, parallel receivers, etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755690734.548889",
        "parent_user_id": "UMQ6LR9NZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8homp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Programming languages\" and \"operating systems\" are old-fashioned ideas invented for 1960s hardware limitations. In 2025, we want LEGO® blocks of software written in a multitude of languages. BTW \"functions\" aren't LEGO® blocks because of their inherent \"blocking\" (ad hoc control flow <==> caller must suspend and wait for callee). UNIX pipelines gave us a taste of a better way to snap software units together but the "
                            },
                            {
                                "type": "text",
                                "text": "*sh",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  syntax was restricted by the inside-the-box-mentality use of text and the one-input-one-output mentality. Today, we can do a lot better, e.g. no inherent blocking, and, fanning out of data to multiple, parallel receivers, etc."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U08QBNUQ3GF",
        "type": "message",
        "ts": "1755698689.191119",
        "client_msg_id": "577e05cc-9757-4cbe-999b-a46bffcbe043",
        "text": "In some ways, things are a lot more flexible, because there are high-performance VMs that you can target (JVM for statically-typed OO languages), BEAM for CSP languages (doing dataflow targeting BEAM would be interesting <@UGWUJUZHT>), and I’m working on a high-performance dynamic-typed language RTS. So you can create a language (DSP, scripting, or otherwise) and target an appropriate VM.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gb194afd8e87",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b194afd8e8777547fff445a99c918296.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Dave",
            "real_name": "Dave Mason",
            "display_name": "Dave Mason",
            "team": "T5TCAFTA9",
            "name": "dmason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755690734.548889",
        "parent_user_id": "UMQ6LR9NZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KVyLP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In some ways, things are a lot more flexible, because there are high-performance VMs that you can target (JVM for statically-typed OO languages), BEAM for CSP languages (doing dataflow targeting BEAM would be interesting "
                            },
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": "), and I’m working on a high-performance dynamic-typed language RTS. So you can create a language (DSP, scripting, or otherwise) and target an appropriate VM."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1755703218.652739",
        "client_msg_id": "0a1d13bb-0f74-4069-b97d-fc49142e7503",
        "text": "I don't know man, the future is coding is not about programming languages. Languages aren't in my top 10 things we would need to improve. They take up too much space in everybody's heads.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755690734.548889",
        "parent_user_id": "UMQ6LR9NZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DoTfl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't know man, the future is coding is not about programming languages. Languages aren't in my top 10 things we would need to improve. They take up too much space in everybody's heads."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart_eyes",
                "users": [
                    "UMQ6LR9NZ"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "U06T8NUJQB0",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U08DYF4SEAE",
        "type": "message",
        "ts": "1755717671.099619",
        "client_msg_id": "4659763e-17c2-4fc9-a4ee-29ed88327944",
        "text": "I actually think we're going to have to revisit modeling and model-checking for verified systems. Its the only way to make LLMs practically useful without constant oversight. Will there even be a textual language for such a system? Will it be more like a projectional tool vs source of truth?\n\nI think the optimizations for training data like going for python\/javascript\/typescript\/react is a very short-sighted and short term one.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "af3f4f3c0604",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-18\/8487018839873_af3f4f3c0604a679e817_72.jpg",
            "first_name": "When",
            "real_name": "When Leggett",
            "display_name": "When Leggett",
            "team": "T5TCAFTA9",
            "name": "russ",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755690734.548889",
        "parent_user_id": "UMQ6LR9NZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UxK1L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I actually think we're going to have to revisit modeling and model-checking for verified systems. Its the only way to make LLMs practically useful without constant oversight. Will there even be a textual language for such a system? Will it be more like a projectional tool vs source of truth?\n\nI think the optimizations for training data like going for python\/javascript\/typescript\/react is a very short-sighted and short term one."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U08DYF4SEAE",
        "type": "message",
        "ts": "1755717713.443979",
        "client_msg_id": "fd127704-ed00-4732-9260-a543f26049c8",
        "text": "(although certainly a pragmatic choice right now if you have to)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "af3f4f3c0604",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-18\/8487018839873_af3f4f3c0604a679e817_72.jpg",
            "first_name": "When",
            "real_name": "When Leggett",
            "display_name": "When Leggett",
            "team": "T5TCAFTA9",
            "name": "russ",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755690734.548889",
        "parent_user_id": "UMQ6LR9NZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hm2v7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(although certainly a pragmatic choice right now if you have to)"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]