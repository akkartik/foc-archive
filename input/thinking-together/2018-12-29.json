[
    {
        "user": "U85MWBKEY",
        "type": "message",
        "ts": "1546090604.123600",
        "client_msg_id": "B031F595-885E-4318-B2A3-0523518031BF",
        "text": "We explored building diff tools for graphs. Flat text files separated into lines has been the data storage mechanism for code for decades. Visual programming languages are much more complicated and are full of domain specific abstractions. It’s not hard to build a diff and merge tool once, but every small change you make to your VPL now needs to be understood by your SCM tools so it knows how to treat representations from different versions of your tool differently. Then the SCM tools starts to look a whole lot more like a database migration suit than an SCM management tool. \n\nThen there’s error management. In text you just thrown conflicts inline and let users fix them — with VPLs if you don’t add a nice errors pane to your app there’s no resolution path. \n\nThe one good decision we made is using event sourcing as our persistence mechanism. Each meaningful change was represented by an event and the graph was built up from that. Event sourcing gives you collaboration for free google drive style and it probably makes some of these issues easier to deal with if you try to diff and merge those vs the resulting graphs. We didn’t dig here long enough to know for sure. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "88eacb7e65ed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-08\/681438296241_88eacb7e65edebc579ab_72.jpg",
            "first_name": "Aidan",
            "real_name": "Aidan Cunniffe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "acunniffe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1545983608.108800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YZBf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We explored building diff tools for graphs. Flat text files separated into lines has been the data storage mechanism for code for decades. Visual programming languages are much more complicated and are full of domain specific abstractions. It’s not hard to build a diff and merge tool once, but every small change you make to your VPL now needs to be understood by your SCM tools so it knows how to treat representations from different versions of your tool differently. Then the SCM tools starts to look a whole lot more like a database migration suit than an SCM management tool. \n\nThen there’s error management. In text you just thrown conflicts inline and let users fix them — with VPLs if you don’t add a nice errors pane to your app there’s no resolution path. \n\nThe one good decision we made is using event sourcing as our persistence mechanism. Each meaningful change was represented by an event and the graph was built up from that. Event sourcing gives you collaboration for free google drive style and it probably makes some of these issues easier to deal with if you try to diff and merge those vs the resulting graphs. We didn’t dig here long enough to know for sure."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDJ2TKB99",
                    "UEGFXUK3M",
                    "UBSMEUXAA"
                ],
                "count": 3
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1546109595.149000",
        "client_msg_id": "0098CA44-EC7C-46EC-95D7-AF1A1A092B25",
        "text": "It’s funny how text formats enjoy such a special treatment, just because we’ve been using them for ages and all the tools are in place. Isn’t text just a soup of bytes that adhere to either ASCII or UTF-8 — both quite complex formats (if you count the international extensions for 8-bit ASCII)? And editors and diffs just work so well because we all agreed that a specific sequence of bits in these formats means line feed and\/or\/with carriage return (even that convention is quite messy if you consider the details, and let’s not get into other white space…), so we humans can better read it. If aliens (or humans in 1k years) ever discover data stored that way, it’ll be worth not much without a decoding table explaining these formats. Some simple proprietary binary formats might be even simpler to reverse engineer, if you don’t know which bit sequence translates to which symbol. Decipher this, future :alien: or :robot_face:, :hankey::smiling_imp:!\n\nAlso, why should we limit ourselves to a solution space that requires a symbolic \/ textual representation that we then try to find a visual and\/or interactive representation for, instead of looking for visual and interactive representations directly (or first, and then try to find a symbolic one later)?\n\nI firmly believe that focusing on a symbolic — and specifically textual — representation first is part of the reason why we haven’t had a breakthrough success in visual languages in the last half-century. It’s the “emulating old media in new media because we don’t know better” story all over again. At least everybody is fine now that we have moved on from printing our text symbols on paper to electronic displays, even though most editors have been designed for that printing environment and there are religious believers out there that you’re supposed to only use those text editors built for that ancient world. \n\nBtw, there’s nothing wrong with using them. If you love them, keep using them! That technology brought us here, so kudos to everyone who contributed on getting us here. There are lots of great, well-designed, and extremely robust tools out there that have proven their worth and stood the test of time. Just don’t keep telling me the future will be more of the same.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1545983608.108800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kwsd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s funny how text formats enjoy such a special treatment, just because we’ve been using them for ages and all the tools are in place. Isn’t text just a soup of bytes that adhere to either ASCII or UTF-8 — both quite complex formats (if you count the international extensions for 8-bit ASCII)? And editors and diffs just work so well because we all agreed that a specific sequence of bits in these formats means line feed and\/or\/with carriage return (even that convention is quite messy if you consider the details, and let’s not get into other white space…), so we humans can better read it. If aliens (or humans in 1k years) ever discover data stored that way, it’ll be worth not much without a decoding table explaining these formats. Some simple proprietary binary formats might be even simpler to reverse engineer, if you don’t know which bit sequence translates to which symbol. Decipher this, future "
                            },
                            {
                                "type": "emoji",
                                "name": "alien",
                                "unicode": "1f47d"
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "emoji",
                                "name": "robot_face",
                                "unicode": "1f916"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "emoji",
                                "name": "hankey",
                                "unicode": "1f4a9"
                            },
                            {
                                "type": "emoji",
                                "name": "smiling_imp",
                                "unicode": "1f608"
                            },
                            {
                                "type": "text",
                                "text": "!\n\nAlso, why should we limit ourselves to a solution space that requires a symbolic \/ textual representation that we then try to find a visual and\/or interactive representation for, instead of looking for visual and interactive representations directly (or first, and then try to find a symbolic one later)?\n\nI firmly believe that focusing on a symbolic — and specifically textual — representation first is part of the reason why we haven’t had a breakthrough success in visual languages in the last half-century. It’s the “emulating old media in new media because we don’t know better” story all over again. At least everybody is fine now that we have moved on from printing our text symbols on paper to electronic displays, even though most editors have been designed for that printing environment and there are religious believers out there that you’re supposed to only use those text editors built for that ancient world. \n\nBtw, there’s nothing wrong with using them. If you love them, keep using them! That technology brought us here, so kudos to everyone who contributed on getting us here. There are lots of great, well-designed, and extremely robust tools out there that have proven their worth and stood the test of time. Just don’t keep telling me the future will be more of the same."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UBSMEUXAA",
                    "UCQ4BBFQ9",
                    "UD43R8ZFV"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1546110125.153500",
        "client_msg_id": "79FDDBD0-01B0-4920-9C20-E17702CA303F",
        "text": "Huh, worked myself up into quite a rant there. Sorry… no offense. It’s a great discussion to look into what we have built on in the past to find out what we should build on in the future. \nIt’s hard to see the mountains far away in the fog from that comfortable little hill over here that we’ve built our houses on and call our home.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1545983608.108800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nfd5r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Huh, worked myself up into quite a rant there. Sorry… no offense. It’s a great discussion to look into what we have built on in the past to find out what we should build on in the future. \nIt’s hard to see the mountains far away in the fog from that comfortable little hill over here that we’ve built our houses on and call our home."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UBSMEUXAA"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U85MWBKEY",
        "type": "message",
        "ts": "1546124786.159900",
        "client_msg_id": "226FAD33-1BF5-42B7-B43F-3DEB94D6FC99",
        "text": "I wish visual tools had a better track record. I would love to see us move away from text too but it’s so hard to get anywhere close to the functional expectations of developers you need to start a groundswell. \n\nThese tools all have a certain runway and if they can’t move fast enough to take off they die. You need SCM, testability, and other basic -day-1 expectations to be met in order to take off. \n\nI’m glad this has come up here because I do think some kind of universal toolkit for VPLs should exist. General purpose probably shouldn’t be the goal — it should be more analogous to LLVM than Swift, but that could be a cool project for this group. \n\nIf you could spin up hundreds of domain specific VPLs that’d give a few of them a good chance of taking off in their domains. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "88eacb7e65ed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-08\/681438296241_88eacb7e65edebc579ab_72.jpg",
            "first_name": "Aidan",
            "real_name": "Aidan Cunniffe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "acunniffe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1545983608.108800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/\/WMZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wish visual tools had a better track record. I would love to see us move away from text too but it’s so hard to get anywhere close to the functional expectations of developers you need to start a groundswell. \n\nThese tools all have a certain runway and if they can’t move fast enough to take off they die. You need SCM, testability, and other basic -day-1 expectations to be met in order to take off. \n\nI’m glad this has come up here because I do think some kind of universal toolkit for VPLs should exist. General purpose probably shouldn’t be the goal — it should be more analogous to LLVM than Swift, but that could be a cool project for this group. \n\nIf you could spin up hundreds of domain specific VPLs that’d give a few of them a good chance of taking off in their domains."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UD43R8ZFV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UF3V37GCE",
        "type": "message",
        "ts": "1546130568.160100",
        "client_msg_id": "f42bccaf-f869-4218-a9fb-c41360503a4a",
        "text": "Our eyes have most bandwidth so it is natural that visuals tools will become more popular. I still think text will be important because text is basically speech on paper and we speak a lot every day and the mouth and ears  are good communicators but ears and mouth do not analyze as well as eyes. Our biggest problem are that the code today is not  humanlike. So everyone has to learn a new language in order to speak with the computer. I think we should use more grammar of more humanlike languages to create new programming languages. Programming is difficult  through text, but so is Chinese for a English speaking person...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5bbfc4ea1fc2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-04\/541600835460_5bbfc4ea1fc2b0646f9a_72.jpg",
            "first_name": "",
            "real_name": "staffan Gabrielsson Berglof",
            "display_name": "Staffan",
            "team": "T5TCAFTA9",
            "name": "gabrielssons",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1545983608.108800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cw8o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Our eyes have most bandwidth so it is natural that visuals tools will become more popular. I still think text will be important because text is basically speech on paper and we speak a lot every day and the mouth and ears  are good communicators but ears and mouth do not analyze as well as eyes. Our biggest problem are that the code today is not  humanlike. So everyone has to learn a new language in order to speak with the computer. I think we should use more grammar of more humanlike languages to create new programming languages. Programming is difficult  through text, but so is Chinese for a English speaking person..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1546133828.160300",
        "client_msg_id": "5b4710a4-9efb-41a0-bcb4-a581ad381a14",
        "text": "In the early 1600's Descartes invented Analytic Geometry, which converted geometrical problems into algebra. One can argue when you review the history of mathematics that this has been the trend. It is more intuitive to work in a geometrical space, so there is strong interest in the graphical assistants, but clearly at the end of the day one is building statements in a language. Clicking on a point in a grid is selecting something in the XY plane, and 2 numbers denote that, so there is a perfect 1:1 mapping between the operations one does with a mouse or hand gesture.  programming will not have breakthroughs in reliability or interchangeable parts merely by adding nice graphical inputs\/manipulations.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1545983608.108800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k5M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the early 1600's Descartes invented Analytic Geometry, which converted geometrical problems into algebra. One can argue when you review the history of mathematics that this has been the trend. It is more intuitive to work in a geometrical space, so there is strong interest in the graphical assistants, but clearly at the end of the day one is building statements in a language. Clicking on a point in a grid is selecting something in the XY plane, and 2 numbers denote that, so there is a perfect 1:1 mapping between the operations one does with a mouse or hand gesture.  programming will not have breakthroughs in reliability or interchangeable parts merely by adding nice graphical inputs\/manipulations."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1546142699.167700",
        "client_msg_id": "BD55BDE9-D402-4184-9152-B6A4605794F5",
        "text": "What if the future of programming is already here, and we just don’t see it as such?\n<https:\/\/www.cnbc.com\/amp\/2018\/12\/14\/the-reason-epic-landed-a-15-billion-valuation-is-not-fortnite-success.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1546142699.167700",
        "reply_count": 15,
        "reply_users_count": 6,
        "latest_reply": "1546328769.226200",
        "reply_users": [
            "UA14TGLTC",
            "UC2A2ARPT",
            "UE1JQM9HQ",
            "UBSMEUXAA",
            "U5STGTB3J",
            "UEQ6M68H0"
        ],
        "replies": [
            {
                "user": "UA14TGLTC",
                "ts": "1546150642.172900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1546151189.180200"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1546151409.183800"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1546151727.189800"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1546167729.190400"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1546192687.191300"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1546192902.191500"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1546213974.196500"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1546214695.205900"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1546293637.221000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1546327869.221700"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1546327980.221900"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1546328138.222100"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1546328226.222300"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1546328769.226200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "CNBC",
                "title": "The real reason Epic landed a $15 billion valuation is not Fortnite's video game success",
                "title_link": "https:\/\/www.cnbc.com\/amp\/2018\/12\/14\/the-reason-epic-landed-a-15-billion-valuation-is-not-fortnite-success.html",
                "text": "Fortnite maker Epic Games has been valued at $15 billion, and that has attracted skepticism. But Fortnite's 200 million users and over $1 billion in revenue, while cash cows today, are not the long-term key to success.",
                "fallback": "CNBC: The real reason Epic landed a $15 billion valuation is not Fortnite's video game success",
                "image_url": "https:\/\/fm.cnbc.com\/applications\/cnbc.com\/resources\/img\/editorial\/2018\/12\/14\/105628703-1544820062112gettyimages-1014110210.1910x1000.jpeg",
                "ts": 1545405785,
                "from_url": "https:\/\/www.cnbc.com\/amp\/2018\/12\/14\/the-reason-epic-landed-a-15-billion-valuation-is-not-fortnite-success.html",
                "image_width": 478,
                "image_height": 250,
                "image_bytes": 222925,
                "service_icon": "https:\/\/www.cnbc.com\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/www.cnbc.com\/amp\/2018\/12\/14\/the-reason-epic-landed-a-15-billion-valuation-is-not-fortnite-success.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D4W8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What if the future of programming is already here, and we just don’t see it as such?\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.cnbc.com\/amp\/2018\/12\/14\/the-reason-epic-landed-a-15-billion-valuation-is-not-fortnite-success.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1546146783.168300",
        "client_msg_id": "ec290d2f-1a22-44a2-83b4-8ce0f94ead19",
        "text": "<@U8A5MS6R1> said\n&gt; In the canvas\/painting 'medium', the feedback is that you immediately see visible paint on the canvas the moment you touch it with the brush.\n\nThe kind of immediate feedback you get from wet paint hitting the canvas is the same kind of feedback you get from your finger hitting a key causing a glyph to show up on the screen. It's very different from the sort of \"holistic vision\" feedback we're _craving_, which is why I'm interested in the idea that we should choose what sorts of that feedback we really want, and perhaps be cautious about craving _all kinds_ of it.\n\n• _Immediacy_ — The color and texture of paint on the palette as you mix it, the feel of the brush picking up that paint, the feel of the brush on the canvas, the color of the paint as it comes off the brush, the color and sheen of the paint sitting wet in place, the color as it dries\n• _Visibility_ — How the overall composition of the painting differs from what you had planned, how the composition looks from different angles, how it looks in the mirror, the tint of your studio lights, what you remember of it when you aren't looking at it\n• _Collaborative Editing_ — Bringing a family member down to your basement studio to look at the painting in progress, sharing a picture of the WIP online, talking about issues with your painter friends\n• _Review_ — Hanging the finished painting in a gallery, drinking wine and talking about it at the opening, overhearing gossip about it when you later visit the gallery, reading a writeup in the local arts paper, the inevitable disappointment when the painting doesn't sell\n• _Version Control_ — Deciding to change your style to better appease the kind of audience that comes to the gallery, burning the painting in a parking garage while drinking beer with those painter friends\n\nEvery single one of those examples of feedback would be affected if you switched from oil to watercolor — and switching from one programming tool to another affects as many kinds of feedback too. The notion of \"feedback\" covers every surface of a tool, including your mental model of it, the social dynamics, the learning process — and changing the way in which a tool gives feedback touches all these surfaces.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1545891251.087800",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z8Cw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " said"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the canvas\/painting 'medium', the feedback is that you immediately see visible paint on the canvas the moment you touch it with the brush."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nThe kind of immediate feedback you get from wet paint hitting the canvas is the same kind of feedback you get from your finger hitting a key causing a glyph to show up on the screen. It's very different from the sort of \"holistic vision\" feedback we're "
                            },
                            {
                                "type": "text",
                                "text": "craving",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which is why I'm interested in the idea that we should choose what sorts of that feedback we really want, and perhaps be cautious about craving "
                            },
                            {
                                "type": "text",
                                "text": "all kinds",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of it.\n\n• "
                            },
                            {
                                "type": "text",
                                "text": "Immediacy",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " — The color and texture of paint on the palette as you mix it, the feel of the brush picking up that paint, the feel of the brush on the canvas, the color of the paint as it comes off the brush, the color and sheen of the paint sitting wet in place, the color as it dries\n• "
                            },
                            {
                                "type": "text",
                                "text": "Visibility",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " — How the overall composition of the painting differs from what you had planned, how the composition looks from different angles, how it looks in the mirror, the tint of your studio lights, what you remember of it when you aren't looking at it\n• "
                            },
                            {
                                "type": "text",
                                "text": "Collaborative Editing",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " — Bringing a family member down to your basement studio to look at the painting in progress, sharing a picture of the WIP online, talking about issues with your painter friends\n• "
                            },
                            {
                                "type": "text",
                                "text": "Review",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " — Hanging the finished painting in a gallery, drinking wine and talking about it at the opening, overhearing gossip about it when you later visit the gallery, reading a writeup in the local arts paper, the inevitable disappointment when the painting doesn't sell\n• "
                            },
                            {
                                "type": "text",
                                "text": "Version Control",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " — Deciding to change your style to better appease the kind of audience that comes to the gallery, burning the painting in a parking garage while drinking beer with those painter friends\n\nEvery single one of those examples of feedback would be affected if you switched from oil to watercolor — and switching from one programming tool to another affects as many kinds of feedback too. The notion of \"feedback\" covers every surface of a tool, including your mental model of it, the social dynamics, the learning process — and changing the way in which a tool gives feedback touches all these surfaces."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1546150642.172900",
        "client_msg_id": "8E46B7EA-25BD-40F7-BF30-53DB312B388E",
        "text": "\"The Unreal Engine is to Epic Games what AWS is to Amazon.\" The quote I was looking for. Given how long the Unreal Engine has been around (1998), I'm ever so slightly surprised we haven't seen a Metaverse grow out of it, or anywhere else for that matter.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1546142699.167700",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eaXYw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"The Unreal Engine is to Epic Games what AWS is to Amazon.\" The quote I was looking for. Given how long the Unreal Engine has been around (1998), I'm ever so slightly surprised we haven't seen a Metaverse grow out of it, or anywhere else for that matter."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1546151189.180200",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1546151205.000000"
        },
        "client_msg_id": "9F2B1DFF-C89C-4F70-B47A-DC97ED6C56CA",
        "text": "Unreal Engine feels like a successor to Flash, which seems like _A Good Thing_ to me. The business model is different, better suited to the way these sorts of media creation tools tend to be used (lots of hobbyists and students who can’t afford to spend money and would pirate it if it was for sale, a handful of huge companies using it to power major properties who are willing and able to pay). But the premise of the tool — an integrated art and programming environment focused on interactivity and multimedia with easy cross platform distribution — fills an essential role that’s been a void for the past 8 years.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1546142699.167700",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mnpgj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Unreal Engine feels like a successor to Flash, which seems like "
                            },
                            {
                                "type": "text",
                                "text": "A Good Thing",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to me. The business model is different, better suited to the way these sorts of media creation tools tend to be used (lots of hobbyists and students who can’t afford to spend money and would pirate it if it was for sale, a handful of huge companies using it to power major properties who are willing and able to pay). But the premise of the tool — an integrated art and programming environment focused on interactivity and multimedia with easy cross platform distribution — fills an essential role that’s been a void for the past 8 years."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1546151409.183800",
        "client_msg_id": "21B7FCDB-3041-4ACF-9EB7-076FB04219FD",
        "text": "It’s _a part of_ the future of programming, sure, in the same way Flash carried a bit of the demoscene torch for a while and got a bunch of kids started making interesting websites and games and interactive zines. (I was one of those kids)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1546142699.167700",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wBJwX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s "
                            },
                            {
                                "type": "text",
                                "text": "a part of",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the future of programming, sure, in the same way Flash carried a bit of the demoscene torch for a while and got a bunch of kids started making interesting websites and games and interactive zines. (I was one of those kids)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1546151727.189800",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1546151769.000000"
        },
        "client_msg_id": "796280EB-6DED-4D92-9BBF-AA260B64FFB7",
        "text": "I think it’s striking to see the areas where UE succeeds that the web fails, and vice versa. For instance, I’d argue it’s easier to do cross platform using UE than it is to do cross browser. It’s probably easier to make experimental music using UE than using the Web Audio API. It’s easier to get smooth 60fps 3d graphics in UE, and it’s not even possible to go above 60fps in the browser. But it’s arguably a lot harder to do a small, good game in UE than it is to make a small good website — different demands of the respective mediums. This should be kept in mind when thinking about which platform should eat which other platforms’ lunches.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1546142699.167700",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L4+Q9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it’s striking to see the areas where UE succeeds that the web fails, and vice versa. For instance, I’d argue it’s easier to do cross platform using UE than it is to do cross browser. It’s probably easier to make experimental music using UE than using the Web Audio API. It’s easier to get smooth 60fps 3d graphics in UE, and it’s not even possible to go above 60fps in the browser. But it’s arguably a lot harder to do a small, good game in UE than it is to make a small good website — different demands of the respective mediums. This should be kept in mind when thinking about which platform should eat which other platforms’ lunches."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]