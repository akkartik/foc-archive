[
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1570782803.023000",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1570782822.000000"
        },
        "client_msg_id": "7256d6a4-0d78-4785-8d38-0a0482c6229f",
        "text": "<@UCUSW7WVD> most of our reality is actually \"virtual\", your walls, the houses, roads, etc, even the farmlands. Only forest is truly original reality.\nBut \"modelling\"\/creating these new realities took a lot more effort than in Minecraft!\nComputers\/programming potentially allow us to turn thought into manifestation much more easily.\nBut the \"us\" is currently just people like us here, not the general human population that could and should benefit from this magical power.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570723053.012600",
        "parent_user_id": "UN89MTTML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uLKYw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " most of our reality is actually \"virtual\", your walls, the houses, roads, etc, even the farmlands. Only forest is truly original reality.\nBut \"modelling\"\/creating these new realities took a lot more effort than in Minecraft!\nComputers\/programming potentially allow us to turn thought into manifestation much more easily.\nBut the \"us\" is currently just people like us here, not the general human population that could and should benefit from this magical power."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1570782950.023300",
        "client_msg_id": "6736c6a4-bc75-4aa3-b8ee-a8ce9db124a3",
        "text": "Computers don't care if you're creating an artwork, automating a business process or building virtual reality.\nSo the programming language, etc, shouldn't care either.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570723053.012600",
        "parent_user_id": "UN89MTTML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QA2in",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Computers don't care if you're creating an artwork, automating a business process or building virtual reality.\nSo the programming language, etc, shouldn't care either."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1570783176.023500",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1570784289.000000"
        },
        "client_msg_id": "af832f5b-0aae-4b92-a562-12628cf152b1",
        "text": "I do believe that this can only be done in the Hermeneutic tradition - I think distributed multi-user (multi-normal-people) systems can't be formalised and work lock-step. Eventual consistency and a loss of central and absolute programmer control is the only approach that can scale. Thus declarative not imperative, distributed not centralised, emergent behaviour not scripted.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570723053.012600",
        "parent_user_id": "UN89MTTML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ahz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I do believe that this can only be done in the Hermeneutic tradition - I think distributed multi-user (multi-normal-people) systems can't be formalised and work lock-step. Eventual consistency and a loss of central and absolute programmer control is the only approach that can scale. Thus declarative not imperative, distributed not centralised, emergent behaviour not scripted."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN89MTTML",
        "type": "message",
        "ts": "1570805506.024000",
        "client_msg_id": "24af4e76-e3af-4fc1-a9da-ad8bffa4e8f4",
        "text": "Hm, so I don’t know if I’m that extreme :slightly_smiling_face:\n\nI feel like either way can work perfectly fine. I know _I_ can’t work in a formalist way, but have worked with people who approach programming problems that way and seen them be successful. Where it becomes hairy is when there are a mix of people on a team that need to work on the same code, and one side is seen as too rigid and the other as too sloppy.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g91ae73eb7a3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/91ae73eb7a309b760a0030e0f85ccbfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Scott Werner",
            "display_name": "Scott Werner",
            "team": "T5TCAFTA9",
            "name": "stwerner",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570723053.012600",
        "parent_user_id": "UN89MTTML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UL\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hm, so I don’t know if I’m that extreme "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI feel like either way can work perfectly fine. I know "
                            },
                            {
                                "type": "text",
                                "text": "I",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " can’t work in a formalist way, but have worked with people who approach programming problems that way and seen them be successful. Where it becomes hairy is when there are a mix of people on a team that need to work on the same code, and one side is seen as too rigid and the other as too sloppy."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1570812105.024300",
        "client_msg_id": "ae150990-e69e-4d86-9220-5c8b8b5c7c96",
        "text": "I'm probably biased but the Hermeneutic tradition seems broader. It can encompass the whole system, the formal and fuzzy bits. When I say 'system' I mean not just the computer but the computer\/human\/physical interplay. We have agency and build stuff with tools, materials and complex machines called computers for goals that exist outside the machines. So the stuff we build doesn't have to be correct with respect to itself (~math proof) but really useful to *us*. If the 'types' correspond perfectly the reality being simulated, sure, the type checker gives us useful feedback. More often there is no perfect correspondence and problem is that the formalism cannot be tweaked to represent what we really need and cannot be selectively overridden. In extreme cases the formalism becomes the lens we look through to view reality - we have now lost our ability to even find the gaps between the formalisms and reality.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570723053.012600",
        "parent_user_id": "UN89MTTML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pKA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm probably biased but the Hermeneutic tradition seems broader. It can encompass the whole system, the formal and fuzzy bits. When I say 'system' I mean not just the computer but the computer\/human\/physical interplay. We have agency and build stuff with tools, materials and complex machines called computers for goals that exist outside the machines. So the stuff we build doesn't have to be correct with respect to itself (~math proof) but really useful to "
                            },
                            {
                                "type": "text",
                                "text": "us",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". If the 'types' correspond perfectly the reality being simulated, sure, the type checker gives us useful feedback. More often there is no perfect correspondence and problem is that the formalism cannot be tweaked to represent what we really need and cannot be selectively overridden. In extreme cases the formalism becomes the lens we look through to view reality - we have now lost our ability to even find the gaps between the formalisms and reality."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1570831100.024500",
        "client_msg_id": "ed9bbc51-ec4f-4fef-bea9-f1ab1f527ed7",
        "text": "When working on Curv, I alternate between periods of language and API design, and periods of using the language to make art. My approach to language\/API design is formalistic, even using abstract algebra and category theory to justify design decisions. The order and symmetry is needed to keep the complexity of learning and using the language in check. The raw material used as input to that formalistic process sometimes comes from Hermeneutics. For example, \"Solve et Coagula\" (a motto from Alchemy) is a design principle. Then when I use Curv to create art, I'm writing code with some artistic intent and looking for the emergent behaviour, so that's hermeneutic as well. As a user, I insist on dynamic typing, not static typing -- formalist me doesn't have a say in this. I can't be the only person who is in both camps.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570723053.012600",
        "parent_user_id": "UN89MTTML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QBuLH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When working on Curv, I alternate between periods of language and API design, and periods of using the language to make art. My approach to language\/API design is formalistic, even using abstract algebra and category theory to justify design decisions. The order and symmetry is needed to keep the complexity of learning and using the language in check. The raw material used as input to that formalistic process sometimes comes from Hermeneutics. For example, \"Solve et Coagula\" (a motto from Alchemy) is a design principle. Then when I use Curv to create art, I'm writing code with some artistic intent and looking for the emergent behaviour, so that's hermeneutic as well. As a user, I insist on dynamic typing, not static typing -- formalist me doesn't have a say in this. I can't be the only person who is in both camps."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UJN1TAYEQ",
                    "U8A5MS6R1"
                ],
                "count": 3
            }
        ]
    }
]