[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1644568486.224929",
        "client_msg_id": "6a7c8575-d319-466b-8b0b-10f7b1d42c59",
        "text": "In the 80s it was Douglas Hofstadter, particularly _<https:\/\/en.wikipedia.org\/wiki\/G%C3%B6del,_Escher,_Bach|Gödel, Escher, Bach: an Eternal Golden Braid>._",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644530975.853739",
        "parent_user_id": "U01AD80KMLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9=G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the 80s it was Douglas Hofstadter, particularly "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/G%C3%B6del,_Escher,_Bach",
                                "text": "Gödel, Escher, Bach: an Eternal Golden Braid",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01AD80KMLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1644568490.619279",
        "client_msg_id": "b23f1b43-080d-4d10-9536-e842133df4d8",
        "text": "I am somewhere between Steve Jobs and Donald Knuth",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644530975.853739",
        "parent_user_id": "U01AD80KMLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=Zf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am somewhere between Steve Jobs and Donald Knuth"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ7QL15F",
        "type": "message",
        "ts": "1644580203.691829",
        "client_msg_id": "76241c68-d344-44d7-9ea7-125c9eb9d658",
        "text": "I’m designing an UI for adding blocks in visual programming (similar to Scratch) without having to drag-and-drop, and wondering if there are any good ideas in other tools. Any block or outline UI:s for visual programming that handle keyboard navigation and\/or focus caret (edit point) well?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g52d221ae708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a52d221ae708f36674644a348005633a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Janne",
            "real_name": "Janne Aukia",
            "display_name": "jaukia",
            "team": "T5TCAFTA9",
            "name": "janne.aukia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644580203.691829",
        "reply_count": 15,
        "reply_users_count": 7,
        "latest_reply": "1645122128.406059",
        "reply_users": [
            "UEQ7QL15F",
            "U013ZLJARC7",
            "UGWUJUZHT",
            "U02U0AS3J49",
            "UBKNXPBAB",
            "UA14TGLTC",
            "U0112C10V4Y"
        ],
        "replies": [
            {
                "user": "UEQ7QL15F",
                "ts": "1644581185.850349"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1644583204.071439"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1644586036.872259"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1644594332.838619"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1644594992.325799"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1644608611.318509"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1644616512.067049"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1644616594.640989"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1644645875.231979"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1644772354.577709"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1644772436.959599"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1644772514.577159"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1644812442.914029"
            },
            {
                "user": "UEQ7QL15F",
                "ts": "1644916738.627749"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1645122128.406059"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mxup",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m designing an UI for adding blocks in visual programming (similar to Scratch) without having to drag-and-drop, and wondering if there are any good ideas in other tools. Any block or outline UI:s for visual programming that handle keyboard navigation and\/or focus caret (edit point) well?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U02028JHX37"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEQ7QL15F",
        "type": "message",
        "ts": "1644581185.850349",
        "edited": {
            "user": "UEQ7QL15F",
            "ts": "1644581213.000000"
        },
        "client_msg_id": "a4493699-1d0c-49ee-8474-d6c300ee15cb",
        "text": "“Semantic Editors” here are maybe somewhat related (Hazel, Syntactor, Fructure), even though they are not based on blocks.\n<https:\/\/github.com\/pel-daniel\/mind-bicycles>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g52d221ae708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a52d221ae708f36674644a348005633a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Janne",
            "real_name": "Janne Aukia",
            "display_name": "jaukia",
            "team": "T5TCAFTA9",
            "name": "janne.aukia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644580203.691829",
        "parent_user_id": "UEQ7QL15F",
        "attachments": [
            {
                "from_url": "https:\/\/github.com\/pel-daniel\/mind-bicycles",
                "image_url": "https:\/\/opengraph.githubassets.com\/ac84fb0e524d1f6de81f1f644e5ed74041a34e9af08087226f66d40612abeb4f\/pel-daniel\/mind-bicycles",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 104417,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/pel-daniel\/mind-bicycles",
                "fallback": "GitHub: GitHub - pel-daniel\/mind-bicycles: List of future of programming projects",
                "text": "List of future of programming projects. Contribute to pel-daniel\/mind-bicycles development by creating an account on GitHub.",
                "title": "GitHub - pel-daniel\/mind-bicycles: List of future of programming projects",
                "title_link": "https:\/\/github.com\/pel-daniel\/mind-bicycles",
                "service_name": "GitHub"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rbYW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "“Semantic Editors” here are maybe somewhat related (Hazel, Syntactor, Fructure), even though they are not based on blocks.\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/pel-daniel\/mind-bicycles"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1644583204.071439",
        "client_msg_id": "9b6667bd-3a1c-4b50-bf22-ebe6e4d5930d",
        "text": "The Fructure approach would be very interesting for a block editor. :+1::skin-tone-2:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644580203.691829",
        "parent_user_id": "UEQ7QL15F",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nxnJ5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Fructure approach would be very interesting for a block editor. "
                            },
                            {
                                "type": "emoji",
                                "name": "+1",
                                "unicode": "1f44d-1f3fb",
                                "skin_tone": 2
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1644586036.872259",
        "client_msg_id": "4166ef0b-6636-41cb-99ac-42d404b10a51",
        "text": "IMO: Emacs’ mark and point\n1. set cursor, click key, graphical object appears at cursor\n2. set mark, set cursor, click key, graphical object appears between mark and point\n(I like to think that every operation must be bound to a keystroke.  A mouse requires a whole hand, a keyboard allows the use of 10 fingers.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644580203.691829",
        "parent_user_id": "UEQ7QL15F",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aR4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "IMO: Emacs’ mark and point\n1. set cursor, click key, graphical object appears at cursor\n2. set mark, set cursor, click key, graphical object appears between mark and point\n(I like to think that every operation must be bound to a keystroke.  A mouse requires a whole hand, a keyboard allows the use of 10 fingers.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F"
                ],
                "count": 1
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1644594332.838619",
        "client_msg_id": "125b8c76-035e-4d9b-a94d-0b162c5c19ce",
        "text": "Blockly Developer Tools is an eat-your-own-dogfood method of generating block definitions using a block interface, and Blockly supports a rudimentary keyboard navigation.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644580203.691829",
        "parent_user_id": "UEQ7QL15F",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bW3d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Blockly Developer Tools is an eat-your-own-dogfood method of generating block definitions using a block interface, and Blockly supports a rudimentary keyboard navigation."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1644594992.325799",
        "client_msg_id": "05a26475-86d1-4ac3-85d4-271bcec67dfa",
        "text": "Blockly generally has an approach to variables and functions where you declare them, and then they become new blocks in the interface. I'm using a similar approach in Blawx for categories, objects, and attributes.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644580203.691829",
        "parent_user_id": "UEQ7QL15F",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PUI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Blockly generally has an approach to variables and functions where you declare them, and then they become new blocks in the interface. I'm using a similar approach in Blawx for categories, objects, and attributes."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02JDAYKW7J",
        "type": "message",
        "ts": "1644600935.612889",
        "edited": {
            "user": "U02JDAYKW7J",
            "ts": "1644601179.000000"
        },
        "client_msg_id": "86c461a5-60a1-42e1-aae1-9b6b7ced7b03",
        "text": "Lick had the cold war and ARPA. The computing related finding was peanuts compared to was being spent on other military\/space efforts. But those peanuts wete more than enough to create one of  the best research communities in history, giving us pretty much everything we know about computing today.\n\nStarting with the Mansfield amendments in ’72, then the neo-libertarian market dynamics of ’80s, winding down of the cold war etc the idea of investing in research was supplanted in investing in projects (which is what the US gov’t, including the NSF now does). Someone like Lick coming along and carving out a space to invest in strong people and ideas, ideas independent of market or military needs, seems hard to imagine today.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1ab8763ceb21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-14\/2826386958343_1ab8763ceb219317febf_72.jpg",
            "first_name": "Daniel",
            "real_name": "Daniel Krasner",
            "display_name": "Daniel Krasner",
            "team": "T5TCAFTA9",
            "name": "krasnerdaniel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1642444979.050300",
        "parent_user_id": "U9C92716C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yYq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lick had the cold war and ARPA. The computing related finding was peanuts compared to was being spent on other military\/space efforts. But those peanuts wete more than enough to create one of  the best research communities in history, giving us pretty much everything we know about computing today.\n\nStarting with the Mansfield amendments in ’72, then the neo-libertarian market dynamics of ’80s, winding down of the cold war etc the idea of investing in research was supplanted in investing in projects (which is what the US gov’t, including the NSF now does). Someone like Lick coming along and carving out a space to invest in strong people and ideas, ideas independent of market or military needs, seems hard to imagine today."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1644608611.318509",
        "client_msg_id": "e37a52ce-7a18-4ad3-bc12-a23593fc15d4",
        "text": "Keyboard control of block-based programming is a really interesting direction. I haven't seen it done before. With structure editors modeled after textual code (Hazel \/ Fructure \/ Lamdu), there's a clear target of \"make keyboard interaction emulate keyboard interaction with text\". Your situation feels more open-ended.\n\nYou might want to look into how spreadsheets handle keyboard navigation. Or what <@UBJGA440K>'s done with his latest Flowsheets demo, linked to from <https:\/\/twitter.com\/Glench\/status\/1488185413516857347>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644580203.691829",
        "parent_user_id": "UEQ7QL15F",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q7REV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Keyboard control of block-based programming is a really interesting direction. I haven't seen it done before. With structure editors modeled after textual code (Hazel \/ Fructure \/ Lamdu), there's a clear target of \"make keyboard interaction emulate keyboard interaction with text\". Your situation feels more open-ended.\n\nYou might want to look into how spreadsheets handle keyboard navigation. Or what "
                            },
                            {
                                "type": "user",
                                "user_id": "UBJGA440K"
                            },
                            {
                                "type": "text",
                                "text": "'s done with his latest Flowsheets demo, linked to from "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/Glench\/status\/1488185413516857347"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1644616512.067049",
        "client_msg_id": "ef9dcf56-6633-4f41-856d-7cf268591735",
        "text": "<@UEQ7QL15F>, I've been thinking about this problem a little, today, and I have an idea. The blocks in Blockly all have a default textual representation. You could build a blockly plugin that allows the user to type, but everything is auto-completed to the text representation of the blocks that are currently available, so you can't type anything that doesn't generate blocks. new line creates a new block in the current stack, increasing and decreasing the indent moves the cursor in and out of stacks and fields. You could also allow the blocks to define their own alternative name for use in the auto-complete field, so you could type \"rule\", and you would auto-complete to \"when we know ___ we also know ___\". Whatever you have currently entered shows up on a scratch-pad. Hit enter twice in a row, and whatever you currently have (including spaces you haven't filled in the text version) gets dropped onto the workspace for you. Targetting is hard, so to start I would say put the first one in the middle of the workspace, and if the user continues to type without scrolling, put subsequent entries below that one. I think that could work, and I think it could be written in such a way that it would work for anyone using Blockly, not just for a particular block set, as long as the blocks all have text on them. But it might be a good idea to add details to the block definitions for how the text version should read, since internal inputs and fields can be named pretty arcanely. I think it would be a really smart way to combat the \"visual programming is not for experts\" nonsense.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644580203.691829",
        "parent_user_id": "UEQ7QL15F",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FB0P8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ7QL15F"
                            },
                            {
                                "type": "text",
                                "text": ", I've been thinking about this problem a little, today, and I have an idea. The blocks in Blockly all have a default textual representation. You could build a blockly plugin that allows the user to type, but everything is auto-completed to the text representation of the blocks that are currently available, so you can't type anything that doesn't generate blocks. new line creates a new block in the current stack, increasing and decreasing the indent moves the cursor in and out of stacks and fields. You could also allow the blocks to define their own alternative name for use in the auto-complete field, so you could type \"rule\", and you would auto-complete to \"when we know ___ we also know ___\". Whatever you have currently entered shows up on a scratch-pad. Hit enter twice in a row, and whatever you currently have (including spaces you haven't filled in the text version) gets dropped onto the workspace for you. Targetting is hard, so to start I would say put the first one in the middle of the workspace, and if the user continues to type without scrolling, put subsequent entries below that one. I think that could work, and I think it could be written in such a way that it would work for anyone using Blockly, not just for a particular block set, as long as the blocks all have text on them. But it might be a good idea to add details to the block definitions for how the text version should read, since internal inputs and fields can be named pretty arcanely. I think it would be a really smart way to combat the \"visual programming is not for experts\" nonsense."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1644616594.640989",
        "client_msg_id": "85c6a5de-d77b-4aeb-b158-ad2fda3c9457",
        "text": "Actually, that's such a cool feature idea, I'm adding it to my backlog.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644580203.691829",
        "parent_user_id": "UEQ7QL15F",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AJX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Actually, that's such a cool feature idea, I'm adding it to my backlog."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1644645875.231979",
        "client_msg_id": "b90cf1b5-7cd1-4394-82cc-beb275317f71",
        "text": "With Scratch, I thought at first that dragging blocks would be tedious in a way that it mostly isn't.  Fairly standard code completion techniques may play well with a block language: just show me what blocks would likely fit here.  Two other surprisingly nice Scratch things: (1) you can change the selector popups for blocks in your well, giving them more of a tool\/template feel, (2) double clicking on lone groups of blocks in the middle of your workspace executes them.  Now I'm reminded of Acme's middle click to execute code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644580203.691829",
        "parent_user_id": "UEQ7QL15F",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jbz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "With Scratch, I thought at first that dragging blocks would be tedious in a way that it mostly isn't.  Fairly standard code completion techniques may play well with a block language: just show me what blocks would likely fit here.  Two other surprisingly nice Scratch things: (1) you can change the selector popups for blocks in your well, giving them more of a tool\/template feel, (2) double clicking on lone groups of blocks in the middle of your workspace executes them.  Now I'm reminded of Acme's middle click to execute code."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1644646282.661889",
        "client_msg_id": "fc05bfd4-23d4-432b-b80f-1ef3af9b5509",
        "text": "Coming back to GEB in recently, it reads a lot like a blog to me now.  :open_mouth:  Also I use this <https:\/\/steamuserimages-a.akamaihd.net\/ugc\/438362340894581027\/DFD65476747C2F86CE04304BDDB67ADE7985292B\/> reference to GEB as the lock screen image for my iPad.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644530975.853739",
        "parent_user_id": "U01AD80KMLK",
        "attachments": [
            {
                "from_url": "https:\/\/steamuserimages-a.akamaihd.net\/ugc\/438362340894581027\/DFD65476747C2F86CE04304BDDB67ADE7985292B\/",
                "image_url": "https:\/\/steamuserimages-a.akamaihd.net\/ugc\/438362340894581027\/DFD65476747C2F86CE04304BDDB67ADE7985292B\/",
                "image_width": 1920,
                "image_height": 1080,
                "image_bytes": 396287,
                "id": 1,
                "original_url": "https:\/\/steamuserimages-a.akamaihd.net\/ugc\/438362340894581027\/DFD65476747C2F86CE04304BDDB67ADE7985292B\/",
                "fallback": "1920x1080px image"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g\/sUn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Coming back to GEB in recently, it reads a lot like a blog to me now.  "
                            },
                            {
                                "type": "emoji",
                                "name": "open_mouth",
                                "unicode": "1f62e"
                            },
                            {
                                "type": "text",
                                "text": "  Also I use this "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/steamuserimages-a.akamaihd.net\/ugc\/438362340894581027\/DFD65476747C2F86CE04304BDDB67ADE7985292B\/"
                            },
                            {
                                "type": "text",
                                "text": " reference to GEB as the lock screen image for my iPad."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "laughing",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    }
]