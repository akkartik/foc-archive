[
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1551436381.003600",
        "client_msg_id": "450bcecd-f205-4a04-bd08-606d02b09947",
        "text": "many of those projects are inert. Some are still active like Lesma.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1551381863.002200",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uOjq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "many of those projects are inert. Some are still active like Lesma."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1551441005.006300",
        "client_msg_id": "d82b2d4c-d443-4885-8937-556e316523e2",
        "text": "<!channel> I just created a <#CGMJ7323Z|announcements> channel. I'm happy to leave it relatively casual to start. Feel free to post if you are looking for work or looking to hire people. Of course, work related to these topics is preferred, but any paid work is acceptable. The only guideline is that you should probably only post about yourself or your company once every couple of months",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "quG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "broadcast",
                                "range": "channel"
                            },
                            {
                                "type": "text",
                                "text": " I just created a "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CGMJ7323Z"
                            },
                            {
                                "type": "text",
                                "text": " channel. I'm happy to leave it relatively casual to start. Feel free to post if you are looking for work or looking to hire people. Of course, work related to these topics is preferred, but any paid work is acceptable. The only guideline is that you should probably only post about yourself or your company once every couple of months"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBRS4E6B1",
        "type": "message",
        "ts": "1551441037.006700",
        "client_msg_id": "0563eb82-9865-4130-a8ce-c29ad57903fc",
        "text": "good idea <@U5TCAFTD3> and good timing for me…",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g724bfb1976e",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7cc34633e95781200e230fd061fa65b6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Arthur Carabott",
            "display_name": "Arthur",
            "team": "T5TCAFTA9",
            "name": "arthur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KoQK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "good idea "
                            },
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": " and good timing for me…"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UEGFXUK3M"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEGFXUK3M",
        "type": "message",
        "ts": "1551444432.008900",
        "client_msg_id": "09182693-d554-4da0-abcc-923f780afd99",
        "text": "Highly recommend folks to check out Hydra by Olivia Jack, a beautiful tool that turns shaders into an analogue video synthesizer (hit shuffle icon to change the pattern): <https:\/\/hydra-editor.glitch.me\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bbd74d10a2d2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1108683470016_bbd74d10a2d2a0dbb156_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack",
            "display_name": "jarm",
            "team": "T5TCAFTA9",
            "name": "jack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "HYDRA",
                "title_link": "https:\/\/hydra-editor.glitch.me\/",
                "text": "live coding networked visuals in the browser",
                "fallback": "HYDRA",
                "image_url": "https:\/\/cdn.glitch.com\/9c3a06ab-0731-42ca-a1a3-3a249825d08f%2FScreen%20Shot%202018-06-24%20at%204.47.49%20PM.png?1531889983803",
                "from_url": "https:\/\/hydra-editor.glitch.me\/",
                "image_width": 377,
                "image_height": 250,
                "image_bytes": 1377790,
                "service_icon": "https:\/\/cdn.glitch.com\/597fe374-3d18-46a5-b99c-ceff1f8ffd79%2Ffavicon.png?1530891352785",
                "service_name": "hydra-editor.glitch.me",
                "id": 1,
                "original_url": "https:\/\/hydra-editor.glitch.me\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KZJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Highly recommend folks to check out Hydra by Olivia Jack, a beautiful tool that turns shaders into an analogue video synthesizer (hit shuffle icon to change the pattern): "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/hydra-editor.glitch.me\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEGFXUK3M",
        "type": "message",
        "ts": "1551444450.009400",
        "client_msg_id": "9f856672-9777-4918-9164-3d28dae4546c",
        "text": "More examples: <http:\/\/twitter.com\/hydra_patterns|twitter.com\/hydra_patterns>\nThe code interface is wonderfully concise, inspired by <@UF89Z7SRF>’s tidalcycles and functional programming in general: <http:\/\/github.com\/ojack\/hydra|github.com\/ojack\/hydra>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bbd74d10a2d2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1108683470016_bbd74d10a2d2a0dbb156_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack",
            "display_name": "jarm",
            "team": "T5TCAFTA9",
            "name": "jack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s1P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More examples: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/twitter.com\/hydra_patterns",
                                "text": "twitter.com\/hydra_patterns"
                            },
                            {
                                "type": "text",
                                "text": "\nThe code interface is wonderfully concise, inspired by "
                            },
                            {
                                "type": "user",
                                "user_id": "UF89Z7SRF"
                            },
                            {
                                "type": "text",
                                "text": "’s tidalcycles and functional programming in general: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/github.com\/ojack\/hydra",
                                "text": "github.com\/ojack\/hydra"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEGFXUK3M",
        "type": "message",
        "ts": "1551444493.009600",
        "client_msg_id": "d6e7694d-20e1-40fd-bb14-768e33d5501c",
        "text": "Interview with the creator: <http:\/\/cdm.link\/2019\/02\/hydra-olivia-jack>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bbd74d10a2d2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1108683470016_bbd74d10a2d2a0dbb156_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack",
            "display_name": "jarm",
            "team": "T5TCAFTA9",
            "name": "jack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1551444493.009600",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1551444516.009800",
        "reply_users": [
            "UEGFXUK3M"
        ],
        "replies": [
            {
                "user": "UEGFXUK3M",
                "ts": "1551444516.009800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "CDM Create Digital Music",
                "title": "A free, shared visual playground in the browser: Olivia Jack talks Hydra - CDM Create Digital Music",
                "title_link": "http:\/\/cdm.link\/2019\/02\/hydra-olivia-jack",
                "text": "Reimagine pixels and color, melt your screen live into glitches and textures, and do it all for free on the Web - as you play with others. We talk to Olivia Jack about her invention, live coding visual environment Hydra.",
                "fallback": "CDM Create Digital Music: A free, shared visual playground in the browser: Olivia Jack talks Hydra - CDM Create Digital Music",
                "thumb_url": "http:\/\/cdm.link\/app\/uploads\/2019\/02\/46879049772_aa710e46bc_k-1024x683.jpg",
                "ts": 1550861459,
                "from_url": "http:\/\/cdm.link\/2019\/02\/hydra-olivia-jack",
                "thumb_width": 1024,
                "thumb_height": 682,
                "service_icon": "http:\/\/cdm.link\/app\/uploads\/2015\/12\/cdmlogo-200x200.png",
                "id": 1,
                "original_url": "http:\/\/cdm.link\/2019\/02\/hydra-olivia-jack"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vaujF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interview with the creator: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/cdm.link\/2019\/02\/hydra-olivia-jack"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEGFXUK3M",
        "type": "message",
        "ts": "1551444516.009800",
        "edited": {
            "user": "UEGFXUK3M",
            "ts": "1551444528.000000"
        },
        "client_msg_id": "5f7bc32e-0b8f-430a-8e7c-c42bdcfcbeaf",
        "text": "&gt; *Livecoding is of course what a lot of people focus on in your work. But what’s the significance of code as the interface here? How important is it that it’s functional coding?*\n&gt; It’s inspired by [Alex McLean’s sound\/music pattern environment] TidalCycles — the idea of taking a simple concept and working from there. In Tidal, the base element is a pattern in time, and everything is a transformation of that pattern. In Hydra, the base element is a transformation from coordinates to color. All of the other functions either transform coordinates or transform colors. This directly corresponds to how fragment shaders and low-level graphics programming work — the GPU runs a program simultaneously on each pixel, and that receives the coordinates of that pixel and outputs a single color.\n&gt; I think immutability in functional (and declarative) coding paradigms is helpful in live coding; you don’t have to worry about mentally keeping track of a variable and what its value is or the ways you’ve changed it leading up to this moment. Functional paradigms are really helpful in describing analog synthesis – each module is a function that always does the same thing when it receives the same input. (Parameters are like knobs.) I’m very inspired by the modular idea of defining the pieces to maximize the amount that they can be rearranged with each other. The code describes the composition of those functions with each other. The main logic is functional, but things like setting up external sources from a webcam or live stream are not at all; JavaScript allows mixing these things as needed. I’m not super opinionated about it, just interested in the ways that the code is legible and makes it easy to describe what is happening.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bbd74d10a2d2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1108683470016_bbd74d10a2d2a0dbb156_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack",
            "display_name": "jarm",
            "team": "T5TCAFTA9",
            "name": "jack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1551444493.009600",
        "parent_user_id": "UEGFXUK3M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kKKHQ",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Livecoding is of course what a lot of people focus on in your work. But what’s the significance of code as the interface here? How important is it that it’s functional coding?",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nIt’s inspired by [Alex McLean’s sound\/music pattern environment] TidalCycles — the idea of taking a simple concept and working from there. In Tidal, the base element is a pattern in time, and everything is a transformation of that pattern. In Hydra, the base element is a transformation from coordinates to color. All of the other functions either transform coordinates or transform colors. This directly corresponds to how fragment shaders and low-level graphics programming work — the GPU runs a program simultaneously on each pixel, and that receives the coordinates of that pixel and outputs a single color.\nI think immutability in functional (and declarative) coding paradigms is helpful in live coding; you don’t have to worry about mentally keeping track of a variable and what its value is or the ways you’ve changed it leading up to this moment. Functional paradigms are really helpful in describing analog synthesis – each module is a function that always does the same thing when it receives the same input. (Parameters are like knobs.) I’m very inspired by the modular idea of defining the pieces to maximize the amount that they can be rearranged with each other. The code describes the composition of those functions with each other. The main logic is functional, but things like setting up external sources from a webcam or live stream are not at all; JavaScript allows mixing these things as needed. I’m not super opinionated about it, just interested in the ways that the code is legible and makes it easy to describe what is happening."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC25EFSJC",
        "type": "message",
        "ts": "1551479794.010500",
        "client_msg_id": "d94e40ef-86f2-4d35-a10a-bc80ec5324f1",
        "text": "text-like structure editor with visual representations of expressions of those types for which a visual representation makes sense!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3d532659753",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a3d5326597534f22b23c8da60e0509a0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "",
            "real_name": "Cyrus Omar",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "cyrus.omar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1551184255.134000",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iGiN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "text-like structure editor with visual representations of expressions of those types for which a visual representation makes sense!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UD43R8ZFV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1551492026.010800",
        "client_msg_id": "9446e74d-95f2-4751-ab27-a5db20c03d41",
        "text": "TIL that OCaml is one of the only languages with a time travel debugger. This is a very important and wonderful feature that is nearly impossible to achieve in languages like Java and Python. I often hear of OCaml in academic contexts, as i believe it has a strong user base in Cambridge. Been around for a while.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1551230983.147500",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5tp7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "TIL that OCaml is one of the only languages with a time travel debugger. This is a very important and wonderful feature that is nearly impossible to achieve in languages like Java and Python. I often hear of OCaml in academic contexts, as i believe it has a strong user base in Cambridge. Been around for a while."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1551508329.022600",
        "client_msg_id": "8b031857-f358-4cc8-9db0-5966e6dd9e95",
        "text": "Was thinking about <@U8A5MS6R1>'s idea about abstracting away from DB\n\nWe work with SQL table pretty much same way we would work with lists or sets locally. Find, select, filter, sort, insert.\nWhat if we split application in two distinct parts:\n1) where we work with data, do business logic. We globally specify data structures we want to use (set, queue, stack, dict) and number of template requests that work with them. Then we just implement our business logic using these data structures.\n2) where we configure storage for data structures defined in first part. This code takes info about used data structures and requests, statistics of use. It selects appropriate database engine (or may be several for different data structures) and generates schema that fits description given in 1). It should also be possible to manually specify desired database engine. The choice of database engines for different data structures is limited by how they are used.\n\nWhen description of used data structures is changed, then it may require migration in 2)\n\nThis will greatly simplify programming. It reminds ORM, but taken on whole different level.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1551508329.022600",
        "reply_count": 11,
        "reply_users_count": 5,
        "latest_reply": "1551780710.169200",
        "reply_users": [
            "U5TCAFTD3",
            "UAL7940NM",
            "UCKRZS3DZ",
            "U8A5MS6R1",
            "UEQ6M68H0"
        ],
        "replies": [
            {
                "user": "U5TCAFTD3",
                "ts": "1551526031.023200"
            },
            {
                "user": "UAL7940NM",
                "ts": "1551526452.023400"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1551527622.023700"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1551561954.091000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1551604881.101800"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1551606043.107700"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1551606220.108100"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1551641894.120500"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1551646353.120700"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1551746577.167400"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1551780710.169200"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1551780710.169200",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3OTC1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Was thinking about "
                            },
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": "'s idea about abstracting away from DB\n\nWe work with SQL table pretty much same way we would work with lists or sets locally. Find, select, filter, sort, insert.\nWhat if we split application in two distinct parts:\n1) where we work with data, do business logic. We globally specify data structures we want to use (set, queue, stack, dict) and number of template requests that work with them. Then we just implement our business logic using these data structures.\n2) where we configure storage for data structures defined in first part. This code takes info about used data structures and requests, statistics of use. It selects appropriate database engine (or may be several for different data structures) and generates schema that fits description given in 1). It should also be possible to manually specify desired database engine. The choice of database engines for different data structures is limited by how they are used.\n\nWhen description of used data structures is changed, then it may require migration in 2)\n\nThis will greatly simplify programming. It reminds ORM, but taken on whole different level."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]