[
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1588923198.247800",
        "client_msg_id": "a781c431-0b2a-40e8-8dd0-d6155d63e045",
        "text": "Machine learning soothsaying  MLS, or Artificial Soothsaying, or Augmented Prediction",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1xI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Machine learning soothsaying  MLS, or Artificial Soothsaying, or Augmented Prediction"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1588944262.250200",
        "client_msg_id": "27b99d62-85e4-40bf-9499-20621341195a",
        "text": "The one conclusion I draw from this event that a crisis is not a good time for a serene discussions of how to do science, or how to make science-based policy decisions.\n\nThere is an ongoing discussion in many scientific disciplines about how to do better computational science. Software engineering is one aspect in this discussion, but only one among many. So far, different disciplines adopt different priorities, for good reasons. I don't expect the debate to be settled any time soon, and I don't expect mobbing to be helpful in any way.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B79vS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The one conclusion I draw from this event that a crisis is not a good time for a serene discussions of how to do science, or how to make science-based policy decisions.\n\nThere is an ongoing discussion in many scientific disciplines about how to do better computational science. Software engineering is one aspect in this discussion, but only one among many. So far, different disciplines adopt different priorities, for good reasons. I don't expect the debate to be settled any time soon, and I don't expect mobbing to be helpful in any way."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UNS7QDKFV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1588945880.250500",
        "client_msg_id": "946f5709-32cc-48d0-888b-90661b3c5cf8",
        "text": "I'm trying to take my rigid project management system and make it something much more malleable, so the last point hits home with me. My biggest fear is I'm dumping too much work on the user and designing these systems is not their area of expertise. I'm hoping that that I can provide enough structure to guide the user but also keep the system flexible enough for them to fullfil their needs.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588876723.219100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tGx0t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm trying to take my rigid project management system and make it something much more malleable, so the last point hits home with me. My biggest fear is I'm dumping too much work on the user and designing these systems is not their area of expertise. I'm hoping that that I can provide enough structure to guide the user but also keep the system flexible enough for them to fullfil their needs."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1588951016.250700",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1588951364.000000"
        },
        "client_msg_id": "b2f0d1cc-70ec-472a-b813-0b94a7462401",
        "text": "<@UAVCC2X70> Well, Parallel LINQ (parallel map \/ reduce \/ filter \/ join \/ etc for C#) has been available for many years, but I don't generally feel like just using it all the time instead of standard serial LINQ. The problem is that often we're operating on a small collection, and the overhead of coordinating the behavior of even two threads is not worthwhile if the collection is smaller than, I don't know, 100 elements or something. Throughout my career I've spent most of my time dealing with many _small_ collections with less than 5 or 50 elements each, and when I'm dealing with medium-size collections of 100-1000 elements, it's often a hashtable, sorted list or array that I'm using as a lookup table in a bigger calculation, rather than something I'm directly using with map\/filter\/reduce. (I do _also_ process larger lists, it's just that the fraction of code doing highly parallelizable work is small.)\n\nSometimes one can rearrange lots of small collections into big arrays to allow more parallelism, but sometimes I can't think of a way to parallelize a lot of this work, e.g. algorithms on tree structures like Loyc trees (code) don't seem parallelizable, generally, although I did design my LES language intentionally to have a \"context-insensitive\" syntax, so at least you can parse all your files in parallel. For these kinds of workloads I really want hardware like I described, which can parallelize short loops efficiently.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9K87B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": " Well, Parallel LINQ (parallel map \/ reduce \/ filter \/ join \/ etc for C#) has been available for many years, but I don't generally feel like just using it all the time instead of standard serial LINQ. The problem is that often we're operating on a small collection, and the overhead of coordinating the behavior of even two threads is not worthwhile if the collection is smaller than, I don't know, 100 elements or something. Throughout my career I've spent most of my time dealing with many "
                            },
                            {
                                "type": "text",
                                "text": "small",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " collections with less than 5 or 50 elements each, and when I'm dealing with medium-size collections of 100-1000 elements, it's often a hashtable, sorted list or array that I'm using as a lookup table in a bigger calculation, rather than something I'm directly using with map\/filter\/reduce. (I do "
                            },
                            {
                                "type": "text",
                                "text": "also",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " process larger lists, it's just that the fraction of code doing highly parallelizable work is small.)\n\nSometimes one can rearrange lots of small collections into big arrays to allow more parallelism, but sometimes I can't think of a way to parallelize a lot of this work, e.g. algorithms on tree structures like Loyc trees (code) don't seem parallelizable, generally, although I did design my LES language intentionally to have a \"context-insensitive\" syntax, so at least you can parse all your files in parallel. For these kinds of workloads I really want hardware like I described, which can parallelize short loops efficiently."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1588951928.251100",
        "client_msg_id": "cffb65b7-5dc3-4147-bebe-6ad23f4d8a90",
        "text": "No, I'm so bummed I missed it and that the recording's not up yet.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4Rv2=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No, I'm so bummed I missed it and that the recording's not up yet."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1588973540.254700",
        "client_msg_id": "6668C6FB-5560-4656-A315-A86EACEAD64D",
        "text": "Anyone here work at Cycling74, or work on Pure Data?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588973540.254700",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1588973682.254800",
        "reply_users": [
            "US370TRJA"
        ],
        "replies": [
            {
                "user": "US370TRJA",
                "ts": "1588973682.254800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j9E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyone here work at Cycling74, or work on Pure Data?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart_eyes",
                "users": [
                    "UT9TWSZB5",
                    "UFQQ3P867"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "US370TRJA",
        "type": "message",
        "ts": "1588973682.254800",
        "edited": {
            "user": "US370TRJA",
            "ts": "1588988927.000000"
        },
        "client_msg_id": "a5652e99-8c28-42ca-9b0a-aa0d85b34e42",
        "text": "I don't, but Cassie (maintains the p5 web editor) does: <https:\/\/github.com\/catarak>\n\n<https:\/\/cassietarakajian.com\/current-projects>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8449ebbf703",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8449ebbf703fcee4e1eadc3e78478f01.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "Cameron",
            "real_name": "Cameron Yick",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "cameron.yick",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588973540.254700",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yBTT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't, but Cassie (maintains the p5 web editor) does: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/catarak"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/cassietarakajian.com\/current-projects"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1588974883.255200",
        "client_msg_id": "08e8916b-fe49-4ece-bee3-a001603bff6d",
        "text": "<https:\/\/twitter.com\/duncancragg\/status\/1258876608758403072>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/duncancragg|@duncancragg>: A little bit of the Covid sim code that amused me..\n\nTo be fair on Ferguson, et al., I've experienced this kind of code quite often in both academia and the City.\n\nNot excusing it, just saying the problem is wider than one famous philanderer.\n\n<https:\/\/github.com\/mrc-ide\/covid-sim\/blob\/master\/src\/Sweep.cpp> <https:\/\/pbs.twimg.com\/media\/EXhsXiJWoAALIm1.png>",
                "ts": 1588974546,
                "author_name": "Duncan Cragg",
                "author_link": "https:\/\/twitter.com\/duncancragg\/status\/1258876608758403072",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/613355356622876672\/0vhPNFgp_normal.jpg",
                "author_subname": "@duncancragg",
                "text": "A little bit of the Covid sim code that amused me..\n\nTo be fair on Ferguson, et al., I've experienced this kind of code quite often in both academia and the City.\n\nNot excusing it, just saying the problem is wider than one famous philanderer.\n\n<https:\/\/github.com\/mrc-ide\/covid-sim\/blob\/master\/src\/Sweep.cpp> <https:\/\/pbs.twimg.com\/media\/EXhsXiJWoAALIm1.png>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/duncancragg\/status\/1258876608758403072",
                "image_url": "https:\/\/pbs.twimg.com\/media\/EXhsXiJWoAALIm1.png",
                "image_width": 684,
                "image_height": 261,
                "image_bytes": 5319,
                "id": 1,
                "original_url": "https:\/\/twitter.com\/duncancragg\/status\/1258876608758403072",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lne",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/duncancragg\/status\/1258876608758403072"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1588991352.256000",
        "client_msg_id": "e8bcd43c-adca-470f-937a-d7d394d04fc8",
        "text": "I use github, but I am wary of being tightly coupled to it. My project doesn't have a wiki, it has a 'docs' directory. It also has an 'issues' directory, although casual users are free to create github issues. For many years, I have done 'development from anywhere' by either bringing along a laptop with a dev environment, or by ssh-ing into my main dev machine from anywhere. If github were to instantly vanish with no warning, I would be fine, and that's due to the distributed nature of git, and the fact that my dev environment contains a local copy of all my code. Github would surely benefit by turning into a walled garden with so much crucial functionality that only exists in their servers, not on your local machine, that you are locked in and cannot escape. The more it looks like Github is heading in this direction, the more that some people in the dev community will resist, create alternatives, and migrate elsewhere. My personal future of coding is decentralized. Git is an amazing decentralized tool, but more can be done.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588787721.156700",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q65f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I use github, but I am wary of being tightly coupled to it. My project doesn't have a wiki, it has a 'docs' directory. It also has an 'issues' directory, although casual users are free to create github issues. For many years, I have done 'development from anywhere' by either bringing along a laptop with a dev environment, or by ssh-ing into my main dev machine from anywhere. If github were to instantly vanish with no warning, I would be fine, and that's due to the distributed nature of git, and the fact that my dev environment contains a local copy of all my code. Github would surely benefit by turning into a walled garden with so much crucial functionality that only exists in their servers, not on your local machine, that you are locked in and cannot escape. The more it looks like Github is heading in this direction, the more that some people in the dev community will resist, create alternatives, and migrate elsewhere. My personal future of coding is decentralized. Git is an amazing decentralized tool, but more can be done."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UJBAJNFLK",
                    "UE0ETTCG7"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1588994003.263900",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1588994210.000000"
        },
        "client_msg_id": "9e21e6bd-6578-475d-b827-fc603b886ef3",
        "text": "Is anyone aware of a programming language or library that efficiently solves the problem of incremental reactive recalculations involving collections? I'm a fan of libraries that support reactive updates, such as Assisticant, KnockoutJS, MobX, Vue.js and SwiftUI, but I don't know of one that contains the algorithm I want. I'll explain the problem by example. Suppose you have:\n\n1. an \"observable\" list of a million items, and you insert or remove an item somewhere in the list\n2. a filtered list based on the million items showing perhaps a thousand of the items\n3. a projection of the filtered list (map\/select)\nSo, when you insert or remove the item, the library should efficiently (and automatically!) propagate the change through the filtered list to the projected list. If the new or removed item is filtered out anyway, propagation should stop so the projected list is not notified of a change. Ideally, change notifications should be deferred in some way so that if several changes are made to the same list item in rapid succession, the derived items (2 and 3) would only be notified once.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588994003.263900",
        "reply_count": 22,
        "reply_users_count": 10,
        "latest_reply": "1589463703.383700",
        "reply_users": [
            "ULK0Z4MPV",
            "UT9TWSZB5",
            "UEQ6M68H0",
            "UJN1TAYEQ",
            "UC2A2ARPT",
            "UAVCC2X70",
            "UD6EXQVM0",
            "U71PMQ1V0",
            "UA14TGLTC",
            "UNBPP291C"
        ],
        "replies": [
            {
                "user": "ULK0Z4MPV",
                "ts": "1588994861.271000"
            },
            {
                "user": "UT9TWSZB5",
                "ts": "1588997342.273200"
            },
            {
                "user": "ULK0Z4MPV",
                "ts": "1588998972.274000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1589006569.274200"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1589024801.278100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1589036571.279900"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1589037901.280400"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1589041273.280700"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1589044812.280900"
            },
            {
                "user": "UT9TWSZB5",
                "ts": "1589049514.281600"
            },
            {
                "user": "UT9TWSZB5",
                "ts": "1589049571.281800"
            },
            {
                "user": "UT9TWSZB5",
                "ts": "1589049574.282000"
            },
            {
                "user": "UT9TWSZB5",
                "ts": "1589072688.290300"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1589079232.292300"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1589082857.292500"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1589082986.292900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1589084581.293100"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1589112214.295900"
            },
            {
                "user": "UNBPP291C",
                "ts": "1589379810.377000"
            },
            {
                "user": "UNBPP291C",
                "ts": "1589379851.377400"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1589384095.377900"
            },
            {
                "user": "UNBPP291C",
                "ts": "1589463703.383700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+TeR\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is anyone aware of a programming language or library that efficiently solves the problem of incremental reactive recalculations involving collections? I'm a fan of libraries that support reactive updates, such as Assisticant, KnockoutJS, MobX, Vue.js and SwiftUI, but I don't know of one that contains the algorithm I want. I'll explain the problem by example. Suppose you have:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "an \"observable\" list of a million items, and you insert or remove an item somewhere in the list"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "a filtered list based on the million items showing perhaps a thousand of the items"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "a projection of the filtered list (map\/select)"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nSo, when you insert or remove the item, the library should efficiently (and automatically!) propagate the change through the filtered list to the projected list. If the new or removed item is filtered out anyway, propagation should stop so the projected list is not notified of a change. Ideally, change notifications should be deferred in some way so that if several changes are made to the same list item in rapid succession, the derived items (2 and 3) would only be notified once."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "ULK0Z4MPV"
                ],
                "count": 1
            },
            {
                "name": "thinking_face",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1588994861.271000",
        "client_msg_id": "BA2C1479-61CA-491D-A8CA-2436D143C6FB",
        "text": "I’m trying to solve this exact problem right now! I’m very close to trying to roll my own solution. I’m thinking of shifting from observables to a more decoupled event system. I find they are creating unintended side effects and are difficult to debug (and I need events for undo functionality). Anyway, let me know if you find a solution - or would like to help build one!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588994003.263900",
        "parent_user_id": "UD6EXQVM0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ICC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m trying to solve this exact problem right now! I’m very close to trying to roll my own solution. I’m thinking of shifting from observables to a more decoupled event system. I find they are creating unintended side effects and are difficult to debug (and I need events for undo functionality). Anyway, let me know if you find a solution - or would like to help build one!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UD6EXQVM0",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UT9TWSZB5",
        "type": "message",
        "ts": "1588997342.273200",
        "client_msg_id": "64FD361D-769F-4CCA-AFA9-866908149E9B",
        "text": "Are you looking for something in-memory or a database?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9cb6f99c1d46",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-05\/941640103046_9cb6f99c1d4661569649_72.jpg",
            "first_name": "",
            "real_name": "Chet Corcos",
            "display_name": "Chet Corcos",
            "team": "T5TCAFTA9",
            "name": "ccorcos",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588994003.263900",
        "parent_user_id": "UD6EXQVM0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BlUV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you looking for something in-memory or a database?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1588997445.273400",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1588997451.000000"
        },
        "client_msg_id": "4aff010a-175f-40e7-96fd-81a32b4ca24e",
        "text": "Recording's up now. The question starts here: <https:\/\/youtu.be\/1ql__-f4rB4?t=2235>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T+8O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Recording's up now. The question starts here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/1ql__-f4rB4?t=2235"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "ok_hand",
                "users": [
                    "UU45NNMHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1588998972.274000",
        "client_msg_id": "719AFAB7-1D31-4F8C-8ADD-C5EAD18EA183",
        "text": "In memory ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588994003.263900",
        "parent_user_id": "UD6EXQVM0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mVQG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In memory "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1589006569.274200",
        "client_msg_id": "6e1ea29c-3a87-40da-a65c-98032b40b658",
        "text": "I am sure that in Excel which can handle about a million rows before it tops out, that they are using some paginated system, whereby if something changes in a chunk the whole chunk is rebuilt but otherwise intermediate chunks with their subtotals is maintained. A lot of the code in Excel is about handling the scale of the databases that people are throwing at Excel. The lower scale functionality is pretty easy, having written a spreadsheet before. Very important to cluster the data otherwise your CPU will almost come to a halt. This is a very tricky area that takes lots of testing to verify that your algorithm interacts well with the CPU. Since you have a very specific set of requirements you will need to roll your own; the conventional systems are not built for this kind of load.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588994003.263900",
        "parent_user_id": "UD6EXQVM0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uug5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am sure that in Excel which can handle about a million rows before it tops out, that they are using some paginated system, whereby if something changes in a chunk the whole chunk is rebuilt but otherwise intermediate chunks with their subtotals is maintained. A lot of the code in Excel is about handling the scale of the databases that people are throwing at Excel. The lower scale functionality is pretty easy, having written a spreadsheet before. Very important to cluster the data otherwise your CPU will almost come to a halt. This is a very tricky area that takes lots of testing to verify that your algorithm interacts well with the CPU. Since you have a very specific set of requirements you will need to roll your own; the conventional systems are not built for this kind of load."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1589006803.277300",
        "client_msg_id": "A75A2767-FD34-4291-89A0-2C30E310977F",
        "text": "The best tool for a local-first approach is probably Fossil, which keeps issues in the repository itself, and therefore in every local copy. But being non-git, it will probably remain a niche tool.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1588787721.156700",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3j7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The best tool for a local-first approach is probably Fossil, which keeps issues in the repository itself, and therefore in every local copy. But being non-git, it will probably remain a niche tool."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]