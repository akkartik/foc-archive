[
    {
        "user": "U6FBH9H26",
        "type": "message",
        "ts": "1632491259.157500",
        "client_msg_id": "71ed4289-d59e-4f82-9e18-ccaca45318c9",
        "text": "some asked about my thoughts on the ethics of full time employment in my intro thread (<https:\/\/futureofcoding.slack.com\/archives\/CC2JRGVLK\/p1632414970023600>), since there were other topics in the thread as well i'm splitting them both out to threads here. this one will be just for the ethics of full time employment in tech. rant follows.\n\nit comes down to the power to say no meaningfully. full time employment ties your wellbeing to that of your employer. employers are fundamentally pro profit, or at least pro continuation of the organization generally (nonprofits don't tend to stop existing, partly because they hardly reach fundamental solutions, which... well, it's never incentivized)\n\ncode has immense power to structure the very fabric of our world. i got into caring so much about this because of overdraft charges in the US, which i thought, there just has to be a better way this could work. why can't this shit be more instantaneous and easier to reason about. turns out that was partly just a money making scheme by the banks, but also? the US financial infrastructure is absolutely awful. and websites were always full of awful crap that made my life unmanageable as an invisibly disabled person (autistic, ocd, cptsd).\n\nevery organization i've been part of in my decade of paid tech, no matter how nominally benevolent, has casually made decisions that harm others without consulting them. every single one. and i've worked at places that just like, taught literal arithmetic to elementary students. you'd think that could be harm free!!\n\nin my time as an SRE at google, I realized just how fundamental conflict and disagreement is to software. i was repeatedly incentivized to harm my end users and spin it as doing a good job. i saw the tendency of infrastructure teams to say no reflexively, even when there was clear benefit to users, and people actively depending on and asking for the features. at the same time, higher ups were saying satisfying the end user is in fact the most important thing. that we should be talking to them, doing surveys, etc. when i went to implement this, it was used against me in perf as being on task. same for when i tried to defend our data integrity SLO against a migration that would fundamentally break it, right after we'd just adopted it.\n\ni could've done better by those users if i'd actually been empowered to serve their needs. i could've done better by everyone impacted by my work across my whole time in industry, honestly.\n\nbut i would've had to be able to actually listen to and trust users and other stakeholders. i couldn't do that and advance professionally. i couldn't for a decade, and i tried so hard. but serving users better and aligning interests with them has never been in the interests of my employers, and fundamentally can't be in the interest of any for profit organization as we structure them today.\n\ni think to do better we _need_ platform coops where all stakeholders have governance power of some sort. literally all. i don't think we can ever make tech more usable or ethical without it.\n\nthe reason is that tech is a wicked problem (wiki it) space, full of essentially contested concepts (wiki it) (this is _not_ the venue for deliberation over these questions, but) two examples everyone will be aware of in some way:\n\n• what is a name\n• what is a gender\nreally illustrate the point here. there is fundamental disagreement on these. with disagreements about such fundamental compound datatypes, the very idea of software correctness looks questionable at its philosophical foundations. correct for who? for what purpose? by what values? we can't even do the weak notion of software correctness we talk about these days, much less reliability or usability, and we're never going to get anywhere by ignoring the fundamentally socially complex nature of our work.\n\ncorporations aren't suited to address those kinds of questions. they can't be.\n\nwe've reached the point where tech is too personal, and as the personal is always political, corporations must try to grapple with political and social questions while being composed of individuals who are profoundly incentivized to never discuss such things bcz professionalism and for-profits-should-be-neutral-or-only-good-for-branding-reasons.\n\nthat's some thoughts.\n\n(<@UJBAJNFLK> <@U01A0KANUUU> since you both asked about it over in the original thread.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge0096ad9f37",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/9e0096ad9f376eb9f609372bc87542e4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Sophie",
            "real_name": "Sophie Smithburg",
            "display_name": "heartpunk",
            "team": "T5TCAFTA9",
            "name": "tehgeekmeister",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491259.157500",
        "reply_count": 64,
        "reply_users_count": 10,
        "latest_reply": "1634569676.401200",
        "reply_users": [
            "UJBAJNFLK",
            "U6FBH9H26",
            "UC2A2ARPT",
            "UCUSW7WVD",
            "UDLGND5GA",
            "UT60XSVCN",
            "UA14TGLTC",
            "U01HKV85Y1J",
            "U01A0KANUUU",
            "UJFN50C00"
        ],
        "replies": [
            {
                "user": "UJBAJNFLK",
                "ts": "1632491945.158600"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632492223.159200"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632492333.159400"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1632500747.159700"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632512170.180100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1632512953.180300"
            },
            {
                "user": "UDLGND5GA",
                "ts": "1632513000.180500"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632514677.182700"
            },
            {
                "user": "UT60XSVCN",
                "ts": "1632515822.184700"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1632525091.192100"
            },
            {
                "user": "UDLGND5GA",
                "ts": "1632529924.193100"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1632557779.193800"
            },
            {
                "user": "UT60XSVCN",
                "ts": "1632705200.195100"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1632717635.195500"
            },
            {
                "user": "UT60XSVCN",
                "ts": "1632747032.196200"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1632866997.202900"
            },
            {
                "user": "UT60XSVCN",
                "ts": "1632879002.213700"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1632880960.227200"
            },
            {
                "user": "UDLGND5GA",
                "ts": "1632896539.228800"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1632897786.229500"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632914027.230000"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632914225.230200"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632914432.230500"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632914481.230700"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632914517.230900"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632915320.231100"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632915365.231300"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632915669.231500"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1632919159.232100"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632920802.233400"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632920859.233600"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632920873.233800"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632920915.234000"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1632929714.234800"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1632983430.236100"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1633014955.236700"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1633016667.237100"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1633016984.237300"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1633018085.237500"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1633018142.238000"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1633020955.238500"
            },
            {
                "user": "U01A0KANUUU",
                "ts": "1633021766.238700"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1633064064.242800"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1633098918.248200"
            },
            {
                "user": "UJFN50C00",
                "ts": "1633337178.259500"
            },
            {
                "user": "UJFN50C00",
                "ts": "1633338358.262300"
            },
            {
                "user": "UJFN50C00",
                "ts": "1633338465.263000"
            },
            {
                "user": "UJFN50C00",
                "ts": "1633338992.265900"
            },
            {
                "user": "UJFN50C00",
                "ts": "1633339624.270100"
            },
            {
                "user": "UJFN50C00",
                "ts": "1633339753.272200"
            },
            {
                "user": "UJFN50C00",
                "ts": "1633339806.273800"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1633349578.274300"
            },
            {
                "user": "UJFN50C00",
                "ts": "1633593685.283700"
            },
            {
                "user": "UJFN50C00",
                "ts": "1633593797.284000"
            },
            {
                "user": "UJFN50C00",
                "ts": "1633593876.284200"
            },
            {
                "user": "UJFN50C00",
                "ts": "1633593923.284400"
            },
            {
                "user": "UJFN50C00",
                "ts": "1633593943.284600"
            },
            {
                "user": "U01HKV85Y1J",
                "ts": "1633618152.284800"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1633618911.285100"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1633693796.288000"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1634323197.366700"
            },
            {
                "user": "UJFN50C00",
                "ts": "1634552255.395800"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1634568840.400700"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1634569676.401200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jrk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "some asked about my thoughts on the ethics of full time employment in my intro thread ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/CC2JRGVLK\/p1632414970023600"
                            },
                            {
                                "type": "text",
                                "text": "), since there were other topics in the thread as well i'm splitting them both out to threads here. this one will be just for the ethics of full time employment in tech. rant follows.\n\nit comes down to the power to say no meaningfully. full time employment ties your wellbeing to that of your employer. employers are fundamentally pro profit, or at least pro continuation of the organization generally (nonprofits don't tend to stop existing, partly because they hardly reach fundamental solutions, which... well, it's never incentivized)\n\ncode has immense power to structure the very fabric of our world. i got into caring so much about this because of overdraft charges in the US, which i thought, there just has to be a better way this could work. why can't this shit be more instantaneous and easier to reason about. turns out that was partly just a money making scheme by the banks, but also? the US financial infrastructure is absolutely awful. and websites were always full of awful crap that made my life unmanageable as an invisibly disabled person (autistic, ocd, cptsd).\n\nevery organization i've been part of in my decade of paid tech, no matter how nominally benevolent, has casually made decisions that harm others without consulting them. every single one. and i've worked at places that just like, taught literal arithmetic to elementary students. you'd think that could be harm free!!\n\nin my time as an SRE at google, I realized just how fundamental conflict and disagreement is to software. i was repeatedly incentivized to harm my end users and spin it as doing a good job. i saw the tendency of infrastructure teams to say no reflexively, even when there was clear benefit to users, and people actively depending on and asking for the features. at the same time, higher ups were saying satisfying the end user is in fact the most important thing. that we should be talking to them, doing surveys, etc. when i went to implement this, it was used against me in perf as being on task. same for when i tried to defend our data integrity SLO against a migration that would fundamentally break it, right after we'd just adopted it.\n\ni could've done better by those users if i'd actually been empowered to serve their needs. i could've done better by everyone impacted by my work across my whole time in industry, honestly.\n\nbut i would've had to be able to actually listen to and trust users and other stakeholders. i couldn't do that and advance professionally. i couldn't for a decade, and i tried so hard. but serving users better and aligning interests with them has never been in the interests of my employers, and fundamentally can't be in the interest of any for profit organization as we structure them today.\n\ni think to do better we "
                            },
                            {
                                "type": "text",
                                "text": "need",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " platform coops where all stakeholders have governance power of some sort. literally all. i don't think we can ever make tech more usable or ethical without it.\n\nthe reason is that tech is a wicked problem (wiki it) space, full of essentially contested concepts (wiki it) (this is "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the venue for deliberation over these questions, but) two examples everyone will be aware of in some way:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "what is a name"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "what is a gender"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nreally illustrate the point here. there is fundamental disagreement on these. with disagreements about such fundamental compound datatypes, the very idea of software correctness looks questionable at its philosophical foundations. correct for who? for what purpose? by what values? we can't even do the weak notion of software correctness we talk about these days, much less reliability or usability, and we're never going to get anywhere by ignoring the fundamentally socially complex nature of our work.\n\ncorporations aren't suited to address those kinds of questions. they can't be.\n\nwe've reached the point where tech is too personal, and as the personal is always political, corporations must try to grapple with political and social questions while being composed of individuals who are profoundly incentivized to never discuss such things bcz professionalism and for-profits-should-be-neutral-or-only-good-for-branding-reasons.\n\nthat's some thoughts.\n\n("
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U01A0KANUUU"
                            },
                            {
                                "type": "text",
                                "text": " since you both asked about it over in the original thread.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT",
                    "UJ6LDMMN0",
                    "UCUSW7WVD",
                    "U8A5MS6R1",
                    "UDLGND5GA",
                    "U029GEPS8Q3",
                    "UA14TGLTC",
                    "UJBAJNFLK",
                    "UBSMEUXAA",
                    "U02ADH37E02",
                    "U027P92A0N5",
                    "UV1CVSXGC",
                    "U023V63MF6V",
                    "USL4R0T61"
                ],
                "count": 14
            },
            {
                "name": "point_up_2",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            },
            {
                "name": "thinking_face",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            },
            {
                "name": "bulb",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            },
            {
                "name": "dart",
                "users": [
                    "U9C92716C"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6FBH9H26",
        "type": "message",
        "ts": "1632491406.158500",
        "client_msg_id": "a740d4db-f3f4-487e-857b-7fa546c3f86f",
        "text": "re symbolic execution in ruby, i'll put that in a thread because i did NOT realize how much of a wall of text i was putting up just now (oooooops)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge0096ad9f37",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/9e0096ad9f376eb9f609372bc87542e4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Sophie",
            "real_name": "Sophie Smithburg",
            "display_name": "heartpunk",
            "team": "T5TCAFTA9",
            "name": "tehgeekmeister",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491406.158500",
        "reply_count": 14,
        "reply_users_count": 5,
        "latest_reply": "1633703148.288600",
        "reply_users": [
            "U6FBH9H26",
            "UCUSW7WVD",
            "USH01JEDQ",
            "U8A5MS6R1",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "U6FBH9H26",
                "ts": "1632492161.158800"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632492190.159000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1632503989.160300"
            },
            {
                "user": "USH01JEDQ",
                "ts": "1632504018.160500"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1632507111.160700"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632511615.167400"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632511700.169700"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632511722.170300"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632511789.172100"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1632512059.178200"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1632526690.192900"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1633703130.288200"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1633703137.288400"
            },
            {
                "user": "U6FBH9H26",
                "ts": "1633703148.288600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tMWWW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "re symbolic execution in ruby, i'll put that in a thread because i did NOT realize how much of a wall of text i was putting up just now (oooooops)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1632491945.158600",
        "client_msg_id": "34f6e570-eeb5-48ae-9165-8641f32d2a9b",
        "text": "Thanks a lot <@U6FBH9H26> for this detailed explanation. No surprise so far - I think I have been led astray by focusing on \"full-time\", as opposed to for example \"half-time\". But that isn't the issue, it's really employment.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491259.157500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/vn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks a lot "
                            },
                            {
                                "type": "user",
                                "user_id": "U6FBH9H26"
                            },
                            {
                                "type": "text",
                                "text": " for this detailed explanation. No surprise so far - I think I have been led astray by focusing on \"full-time\", as opposed to for example \"half-time\". But that isn't the issue, it's really employment."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6FBH9H26",
        "type": "message",
        "ts": "1632492161.158800",
        "client_msg_id": "ea57102b-ce5f-4262-9020-2a13583579fc",
        "text": "so, my technique is roughly this:\n\n• use the AST as a guide for what to model. i'm using whitequark's parser gem for now because it's more at the level of abstraction users care about than the RubyVM::AST module, and i'm aiming for usability over exhaustiveness rn\n• assume primitive datatypes exist and focus on modeling their semantics first, so, dual prioritization. AST nodes so we can tie things back to source locations trivially, and primitive datatypes because in dynamically typed languages with a propensity for duck typing, exhaustive exploration of the semantics of an AST node is intractable\n• pick out examples from rubyspec for that AST node that imply some semantics\n• either manually or by way of retooling the runner (more ideal) to do so automatically; symbolize the critical inputs\n• take inputs and outputs over to z3 and find the implied minimal semantics (this part isn't in ruby rn bcz the best z3 gem is broken)\n• manually, or with some tooling (obvs ideal) refine the implied minimal semantics. an example is that z3 couldn't infer boolean or semantics in a compact form at first, because it couldn't do some basic boolean rewrites that i expect something like coq etc would've been able to do. or at least, it can't do it as best i can tell yet.\n• test the semantics against symbolic execution of MRI\/etc using symbolic execution engines targeted at lower level semantics. probably going to use triton for this? maybe klee. depends. triton would be more portable to other implementations. s2e is an option too, but triton really feels easiest atm.\n• then run the semantics against rubyspec to do a final test.\nthe end goal is to be able to infer semantics for all dynamic languages somewhat efficiently.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge0096ad9f37",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/9e0096ad9f376eb9f609372bc87542e4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Sophie",
            "real_name": "Sophie Smithburg",
            "display_name": "heartpunk",
            "team": "T5TCAFTA9",
            "name": "tehgeekmeister",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491406.158500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LvHz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "so, my technique is roughly this:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "use the AST as a guide for what to model. i'm using whitequark's parser gem for now because it's more at the level of abstraction users care about than the RubyVM::AST module, and i'm aiming for usability over exhaustiveness rn"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "assume primitive datatypes exist and focus on modeling their semantics first, so, dual prioritization. AST nodes so we can tie things back to source locations trivially, and primitive datatypes because in dynamically typed languages with a propensity for duck typing, exhaustive exploration of the semantics of an AST node is intractable"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "pick out examples from rubyspec for that AST node that imply some semantics"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "either manually or by way of retooling the runner (more ideal) to do so automatically; symbolize the critical inputs"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "take inputs and outputs over to z3 and find the implied minimal semantics (this part isn't in ruby rn bcz the best z3 gem is broken)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "manually, or with some tooling (obvs ideal) refine the implied minimal semantics. an example is that z3 couldn't infer boolean or semantics in a compact form at first, because it couldn't do some basic boolean rewrites that i expect something like coq etc would've been able to do. or at least, it can't do it as best i can tell yet."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "test the semantics against symbolic execution of MRI\/etc using symbolic execution engines targeted at lower level semantics. probably going to use triton for this? maybe klee. depends. triton would be more portable to other implementations. s2e is an option too, but triton really feels easiest atm."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "then run the semantics against rubyspec to do a final test."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nthe end goal is to be able to infer semantics for all dynamic languages somewhat efficiently."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6FBH9H26",
        "type": "message",
        "ts": "1632492190.159000",
        "client_msg_id": "b61770f7-c083-46c8-ba86-dde6b1cda45e",
        "text": "<@UA14TGLTC> since you asked about this",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge0096ad9f37",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/9e0096ad9f376eb9f609372bc87542e4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Sophie",
            "real_name": "Sophie Smithburg",
            "display_name": "heartpunk",
            "team": "T5TCAFTA9",
            "name": "tehgeekmeister",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491406.158500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eyNp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " since you asked about this"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6FBH9H26",
        "type": "message",
        "ts": "1632492223.159200",
        "client_msg_id": "5d9074eb-8ed7-41af-a36f-b8be5cab384b",
        "text": "yea, i was using it as a shorthand for a specific employment arrangement",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge0096ad9f37",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/9e0096ad9f376eb9f609372bc87542e4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Sophie",
            "real_name": "Sophie Smithburg",
            "display_name": "heartpunk",
            "team": "T5TCAFTA9",
            "name": "tehgeekmeister",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491259.157500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/eRBX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yea, i was using it as a shorthand for a specific employment arrangement"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6FBH9H26",
        "type": "message",
        "ts": "1632492333.159400",
        "client_msg_id": "37456951-8f8a-4a9d-9636-67caa788153a",
        "text": "FTE is the shorthand for \"employee\" in the googleverse, and i still am stuck with a lot of that lingo even after some months away",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge0096ad9f37",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/9e0096ad9f376eb9f609372bc87542e4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Sophie",
            "real_name": "Sophie Smithburg",
            "display_name": "heartpunk",
            "team": "T5TCAFTA9",
            "name": "tehgeekmeister",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491259.157500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U82dp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FTE is the shorthand for \"employee\" in the googleverse, and i still am stuck with a lot of that lingo even after some months away"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "scream",
                "users": [
                    "UA14TGLTC",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1632500747.159700",
        "client_msg_id": "bb00cfb2-5689-49d8-b376-63c5d6abe35c",
        "text": "This was a very thoughtful rant, Sophie. I was cheering along with:\n\n&gt; with disagreements about such fundamental compound datatypes, the very idea of software correctness looks questionable at its philosophical foundations. correct for who? for what purpose? by what values?\nI just finished an interview with <@UBSMEUXAA> for the podcast, and one of the things we talked about (spoilers, haha) was the ethical \/ social \/ power dynamics in the emerging VR platforms.\n\nThis whole area weighs heavily on my mind. I really appreciate you bringing this up here — and I wish I had more to contribute, other than to say \"this is important\", but.. I'm really not sure what to do next.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491259.157500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "je6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This was a very thoughtful rant, Sophie. I was cheering along with:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "with disagreements about such fundamental compound datatypes, the very idea of software correctness looks questionable at its philosophical foundations. correct for who? for what purpose? by what values?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI just finished an interview with "
                            },
                            {
                                "type": "user",
                                "user_id": "UBSMEUXAA"
                            },
                            {
                                "type": "text",
                                "text": " for the podcast, and one of the things we talked about (spoilers, haha) was the ethical \/ social \/ power dynamics in the emerging VR platforms.\n\nThis whole area weighs heavily on my mind. I really appreciate you bringing this up here — and I wish I had more to contribute, other than to say \"this is important\", but.. I'm really not sure what to do next."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1632503989.160300",
        "client_msg_id": "ddda367a-1724-455c-889b-821fa83c44ca",
        "text": "(wall of text is A-ok)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491406.158500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "asO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(wall of text is A-ok)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "USH01JEDQ",
        "type": "message",
        "ts": "1632504018.160500",
        "client_msg_id": "5ac5f15a-48e1-40d3-96a9-8475db0cdc9d",
        "text": "In <#C5T9GPWFL|thinking-together> we're here for WoT :clap:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "854f96b690f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-17\/6370745671793_854f96b690f51d1266ee_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Galtenberg",
            "display_name": "Chris G",
            "team": "T5TCAFTA9",
            "name": "galtenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491406.158500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pv6xe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": " we're here for WoT "
                            },
                            {
                                "type": "emoji",
                                "name": "clap",
                                "unicode": "1f44f"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1632507111.160700",
        "client_msg_id": "4e3518e8-e48d-4adb-a314-827f8a230a8a",
        "text": "Interesting stuff! I've been interested in using abstract interpretation for improving the programming experience (offload mental simulation, etc.). This seems to overlap, though I'm not sure I quite understand the difference between symbolic execution and abstract interpretation.\n&gt;  the end goal is to be able to infer semantics for all dynamic languages somewhat efficiently.\nIs there a larger goal in mind here once you can infer these semantics?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491406.158500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9owR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting stuff! I've been interested in using abstract interpretation for improving the programming experience (offload mental simulation, etc.). This seems to overlap, though I'm not sure I quite understand the difference between symbolic execution and abstract interpretation.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " the end goal is to be able to infer semantics for all dynamic languages somewhat efficiently."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there a larger goal in mind here once you can infer these semantics?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6FBH9H26",
        "type": "message",
        "ts": "1632511615.167400",
        "client_msg_id": "FF62F070-DD11-41B6-804A-28E5F29D354E",
        "text": "yes, with said semantics in a separation logic friendly form, we can bring provable systems methods into the realm of dynamic languages with high confidence, i hope. also things like extracting TLA+ specs from implementations by way of rewriting\/interactively abstracting with automated assistance away aspects of the separation logic spec of your program",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge0096ad9f37",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/9e0096ad9f376eb9f609372bc87542e4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Sophie",
            "real_name": "Sophie Smithburg",
            "display_name": "heartpunk",
            "team": "T5TCAFTA9",
            "name": "tehgeekmeister",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491406.158500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jqk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yes, with said semantics in a separation logic friendly form, we can bring provable systems methods into the realm of dynamic languages with high confidence, i hope. also things like extracting TLA+ specs from implementations by way of rewriting\/interactively abstracting with automated assistance away aspects of the separation logic spec of your program"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "muscle",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6FBH9H26",
        "type": "message",
        "ts": "1632511700.169700",
        "client_msg_id": "4BCEF99E-B771-43DC-9BA9-22A8DBAEF1AE",
        "text": "abstract interpretation and symbolic execution aren't really fundamentally distinct, but i found one approach much easier to self teach, and also it's just easier to apply symbolic execution directly when there's no language spec, at least if you want to machine verify your spec.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge0096ad9f37",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/9e0096ad9f376eb9f609372bc87542e4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Sophie",
            "real_name": "Sophie Smithburg",
            "display_name": "heartpunk",
            "team": "T5TCAFTA9",
            "name": "tehgeekmeister",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491406.158500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IPY4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "abstract interpretation and symbolic execution aren't really fundamentally distinct, but i found one approach much easier to self teach, and also it's just easier to apply symbolic execution directly when there's no language spec, at least if you want to machine verify your spec."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6FBH9H26",
        "type": "message",
        "ts": "1632511722.170300",
        "client_msg_id": "1DC690A5-2256-49A2-90A7-D232C3001541",
        "text": "at least as far as i could learn so far, that is",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge0096ad9f37",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/9e0096ad9f376eb9f609372bc87542e4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Sophie",
            "real_name": "Sophie Smithburg",
            "display_name": "heartpunk",
            "team": "T5TCAFTA9",
            "name": "tehgeekmeister",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491406.158500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KaU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "at least as far as i could learn so far, that is"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6FBH9H26",
        "type": "message",
        "ts": "1632511789.172100",
        "client_msg_id": "412923DE-F68E-4B69-8D68-F0D89B4C34BC",
        "text": "there are ways to exchange information between the abstract interpretation and symbolic execution, at least theoretically, but i don't know the details at all, and i'm not aware of any research exploring that in particular.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge0096ad9f37",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/9e0096ad9f376eb9f609372bc87542e4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Sophie",
            "real_name": "Sophie Smithburg",
            "display_name": "heartpunk",
            "team": "T5TCAFTA9",
            "name": "tehgeekmeister",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491406.158500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0GZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there are ways to exchange information between the abstract interpretation and symbolic execution, at least theoretically, but i don't know the details at all, and i'm not aware of any research exploring that in particular."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6FBH9H26",
        "type": "message",
        "ts": "1632512059.178200",
        "client_msg_id": "F7B2DEA6-4319-4620-BF11-02F90B27FA25",
        "text": "AI emphasizes AST and lattices under the hood more whereas SE emphasis bytecode or instruction level semantics a bit more, while representing things in a first order logic generally. \n\n(technically i'm also drawing on counter example guided abstraction and there are other niches\/terms some may not consider strictly SE that i'm including in it, such as dynamic symbolic execution, concolic testing, dynamic binary analysis. just in case anyone wants to follow up on any of this.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge0096ad9f37",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/9e0096ad9f376eb9f609372bc87542e4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Sophie",
            "real_name": "Sophie Smithburg",
            "display_name": "heartpunk",
            "team": "T5TCAFTA9",
            "name": "tehgeekmeister",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491406.158500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rYwF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "AI emphasizes AST and lattices under the hood more whereas SE emphasis bytecode or instruction level semantics a bit more, while representing things in a first order logic generally. \n"
                            },
                            {
                                "type": "text",
                                "text": "\n(technically i'm also drawing on counter example guided abstraction and there are other niches\/terms some may not consider strictly SE that i'm including in it, such as dynamic symbolic execution, concolic testing, dynamic binary analysis. just in case anyone wants to follow up on any of this.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U6FBH9H26",
        "type": "message",
        "ts": "1632512170.180100",
        "client_msg_id": "3F963CFA-D867-405A-9747-C90BA0A7B946",
        "text": "I think by aligning distributed governance with distributed ontology development we can perhaps make substantial progress on solving wicked problems and making steady progress around essentially contested concepts.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge0096ad9f37",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/9e0096ad9f376eb9f609372bc87542e4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Sophie",
            "real_name": "Sophie Smithburg",
            "display_name": "heartpunk",
            "team": "T5TCAFTA9",
            "name": "tehgeekmeister",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491259.157500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "REOd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think by aligning distributed governance with distributed ontology development we can perhaps make substantial progress on solving wicked problems and making steady progress around essentially contested concepts."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1632512953.180300",
        "client_msg_id": "4cce7f44-e123-4e51-80e2-03609ee89d63",
        "text": "Can you elaborate on \"distributed ontology development\"?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491259.157500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "puoDt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can you elaborate on \"distributed ontology development\"?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDLGND5GA",
        "type": "message",
        "ts": "1632513000.180500",
        "client_msg_id": "6481e8c7-f242-435c-83fd-32797b21120c",
        "text": "Thanks for the term “wicked problem,” that was new to me",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g55e6ae108ed",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/455e6ae108edbb0568eb036d8cab103d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Nick Fox-Gieg",
            "display_name": "n1ckfg",
            "team": "T5TCAFTA9",
            "name": "nick908",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491259.157500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZW\/W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the term “wicked problem,” that was new to me"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U6FBH9H26",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U6FBH9H26",
        "type": "message",
        "ts": "1632514677.182700",
        "client_msg_id": "690D7772-2EB1-4138-8662-AFE463B15734",
        "text": "just that ontologies are good for standardizing machine readable versions of social concepts, which all essentially contested ones will always be. by distributed development i just mean your standard open source collaboration.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge0096ad9f37",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/9e0096ad9f376eb9f609372bc87542e4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Sophie",
            "real_name": "Sophie Smithburg",
            "display_name": "heartpunk",
            "team": "T5TCAFTA9",
            "name": "tehgeekmeister",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491259.157500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a379k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "just that ontologies are good for standardizing machine readable versions of social concepts, which all essentially contested ones will always be. by distributed development i just mean your standard open source collaboration."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UT60XSVCN",
        "type": "message",
        "ts": "1632515822.184700",
        "client_msg_id": "3b6dba6e-f289-420d-9a84-5afa6c5ff22f",
        "text": "I think this problem is much more endemic than just in tech. The infrastructure for cooperatively disagreeing at the societal level just does not exist. Bret Victor talks about model-driven discussion quite a bit (an example: <http:\/\/worrydream.com\/#!\/ClimateChange|http:\/\/worrydream.com\/#!\/ClimateChange> ) which would be a significant step up in how we do things.\n\nI agree about ontologies being useful, rather than the oft repeated maxim that systems should be value-neutral, I think they should be value-flexible. And more importantly, that flexibility should be usable at a local level, at the level of individual users and groups.\n\nWe are dealing with large problems of scale in society now, the size of society is larger than the buffers of the environment it operates in, and it is vital that we find more efficient, and humane ways to communicate and coordinate, because the fallback is always a boot to the head (sorry, couldn't resist), since the most efficient form of communication is no communication, and the most efficient form of coordination is top-down command. But of course neither is at all humane. So, we are under a timer to solve these issues.\n\nI look forward to a future where I can talk to someone, have a debate based on actual data, with all the provenance information available, without having to think about all the technology that ties it all together. But this is a political problem as well, of course, even more than it is a technological one.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbc3e6041047",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bc3e6041047849518d1b042f0a29d5af.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "S.M Mukarram Nainar",
            "display_name": "S.M Mukarram Nainar",
            "team": "T5TCAFTA9",
            "name": "nainars",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491259.157500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KoG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think this problem is much more endemic than just in tech. The infrastructure for cooperatively disagreeing at the societal level just does not exist. Bret Victor talks about model-driven discussion quite a bit (an example: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/worrydream.com\/#!\/ClimateChange",
                                "text": "http:\/\/worrydream.com\/#!\/ClimateChange"
                            },
                            {
                                "type": "text",
                                "text": " ) which would be a significant step up in how we do things.\n\nI agree about ontologies being useful, rather than the oft repeated maxim that systems should be value-neutral, I think they should be value-flexible. And more importantly, that flexibility should be usable at a local level, at the level of individual users and groups.\n\nWe are dealing with large problems of scale in society now, the size of society is larger than the buffers of the environment it operates in, and it is vital that we find more efficient, and humane ways to communicate and coordinate, because the fallback is always a boot to the head (sorry, couldn't resist), since the most efficient form of communication is no communication, and the most efficient form of coordination is top-down command. But of course neither is at all humane. So, we are under a timer to solve these issues.\n\nI look forward to a future where I can talk to someone, have a debate based on actual data, with all the provenance information available, without having to think about all the technology that ties it all together. But this is a political problem as well, of course, even more than it is a technological one."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1632525091.192100",
        "client_msg_id": "d8e2e8f4-79c8-41d5-b245-ffee58744f6e",
        "text": "Just want to say that this conversation gets to the heart of so many things, important, persistent problems.  I like <@UT60XSVCN>’s comment about \"value-flexible.\"  There isn't going to be one source of truth.  So let's accept that.  And how much truth do we need?  For the task at hand, is name relevant?  Make it more operational, \"name on birth certificate\" or \"name as printed on passport.\"  (I feel this being in the process of immigrating.  Oh man, I have a son who may have three last names depending, and my wife who has at least four first names depending.  And, come to think of it, I have two entirely different full names.)\n\nOntologies, there's a word don't hear much.  (I was adjacent to OWL back in the day.)  These days though, I'm pleased when I see people using RSS rather than whatever siloed \"top-down\" app-driven garden walling fiefdom building technique is dreamed up.\n\nLastly, it's interesting to scale down from the disfunction of organizations to the disfunction of individuals: even when we're well rested, actively trying to communicate (rather than self-deceive), and have aligned goals — it can be tricky to get a handful, two, even one person pointing in a useful direction.  (Think of a change to some coding convention, say the lifecycle of model objects in your software.)  So I guess as a prerequisite, a position of patience without complacency is where I have to start when surveying coordination problems.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491259.157500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WzZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just want to say that this conversation gets to the heart of so many things, important, persistent problems.  I like "
                            },
                            {
                                "type": "user",
                                "user_id": "UT60XSVCN"
                            },
                            {
                                "type": "text",
                                "text": "’s comment about \"value-flexible.\"  There isn't going to be one source of truth.  So let's accept that.  And how much truth do we need?  For the task at hand, is name relevant?  Make it more operational, \"name on birth certificate\" or \"name as printed on passport.\"  (I feel this being in the process of immigrating.  Oh man, I have a son who may have three last names depending, and my wife who has at least four first names depending.  And, come to think of it, I have two entirely different full names.)\n\nOntologies, there's a word don't hear much.  (I was adjacent to OWL back in the day.)  These days though, I'm pleased when I see people using RSS rather than whatever siloed \"top-down\" app-driven garden walling fiefdom building technique is dreamed up.\n\nLastly, it's interesting to scale down from the disfunction of organizations to the disfunction of individuals: even when we're well rested, actively trying to communicate (rather than self-deceive), and have aligned goals — it can be tricky to get a handful, two, even one person pointing in a useful direction.  (Think of a change to some coding convention, say the lifecycle of model objects in your software.)  So I guess as a prerequisite, a position of patience without complacency is where I have to start when surveying coordination problems."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1632526690.192900",
        "client_msg_id": "07a606d6-9c42-4dd4-a00c-528286441d81",
        "text": "This is way, way cool.  And for \"the end goal is to be able to infer semantics for all dynamic languages,\" Ruby is a great place to start since its semantics are nuts.  (I say this as a proud Rubyist since the turn of the millennium.)  Ruby is going to keep you honest.  I mean the very fact that people are productive in Ruby shows that one can model its semantics \"isomorphic up to shenanigans,\" but my, my what shenanigans are available!\n\nLet me share a little bit about my interests adjacent to this: (1) treating execution traces as first-class objects for debugging, (2) refactoring.\n\n(1) When dealing with a relatively big framework ( let's call it Rails), its nice being able to see how all the bits are dynamically connected.  And one step removed form the execution itself, it's useful to ask the what-if at specific branches.  This leads to...\n\n(2) The most common useful refactor I see in practice is the business logic tangle of conditionals where a complicated joint space (let's say six booleans and four variables depending on them, so 256 cases to consider) can probably be factored in a reasonable way, but I'd really love tool support for navigating that space, making sure all the cases are accounted for.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491406.158500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/vM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is way, way cool.  And for \"the end goal is to be able to infer semantics for all dynamic languages,\" Ruby is a great place to start since its semantics are nuts.  (I say this as a proud Rubyist since the turn of the millennium.)  Ruby is going to keep you honest.  I mean the very fact that people are productive in Ruby shows that one can model its semantics \"isomorphic up to shenanigans,\" but my, my what shenanigans are available!\n\nLet me share a little bit about my interests adjacent to this: (1) treating execution traces as first-class objects for debugging, (2) refactoring.\n\n(1) When dealing with a relatively big framework ( let's call it Rails), its nice being able to see how all the bits are dynamically connected.  And one step removed form the execution itself, it's useful to ask the what-if at specific branches.  This leads to...\n\n(2) The most common useful refactor I see in practice is the business logic tangle of conditionals where a complicated joint space (let's say six booleans and four variables depending on them, so 256 cases to consider) can probably be factored in a reasonable way, but I'd really love tool support for navigating that space, making sure all the cases are accounted for."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UDLGND5GA",
        "type": "message",
        "ts": "1632529924.193100",
        "client_msg_id": "114f4d49-695b-4f0e-afb2-ecbddfea3c58",
        "text": "I really liked following the wiki trail that started with wicked problems, then led to contested concepts, and then to contestable concepts in a shared ethical framework. Basically, if I understand correctly, if we can find common goals, we can stop the attempt to resolve a disagreement with logic, and consider tactics",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g55e6ae108ed",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/455e6ae108edbb0568eb036d8cab103d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Nick Fox-Gieg",
            "display_name": "n1ckfg",
            "team": "T5TCAFTA9",
            "name": "nick908",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632491259.157500",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JXN8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really liked following the wiki trail that started with wicked problems, then led to contested concepts, and then to contestable concepts in a shared ethical framework. Basically, if I understand correctly, if we can find common goals, we can stop the attempt to resolve a disagreement with logic, and consider tactics"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]