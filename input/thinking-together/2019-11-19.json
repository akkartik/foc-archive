[
    {
        "user": "UNBPP291C",
        "type": "message",
        "ts": "1574155613.022700",
        "client_msg_id": "04a02314-de46-4720-b46c-311bb7fd8417",
        "text": "Exactly - We added a ton of complexity and legacy through time, which wasn’t always written by great developers and was often times written to be as generic as possible and it’s all below the surface of your application.\n\nFor example, look at Android - so much code that was written long time ago and focused at the time of it’s development (32mb RAM smartphones, while they have 8GB now), but it’s still alive and the team is just deciding to rewrite the whole UI layer because the early decisions screwed it up so hard that they’ve been trying to fix those mistakes by throwing more libraries on it and just adding more and more complexity.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcf29e340a09",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cf29e340a09ac08ae262632ef9101046.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Ian Rumac",
            "display_name": "Ian Rumac",
            "team": "T5TCAFTA9",
            "name": "ian.rumac",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0HipG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Exactly - We added a ton of complexity and legacy through time, which wasn’t always written by great developers and was often times written to be as generic as possible and it’s all below the surface of your application.\n\nFor example, look at Android - so much code that was written long time ago and focused at the time of it’s development (32mb RAM smartphones, while they have 8GB now), but it’s still alive and the team is just deciding to rewrite the whole UI layer because the early decisions screwed it up so hard that they’ve been trying to fix those mistakes by throwing more libraries on it and just adding more and more complexity."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D",
                    "U8A5MS6R1",
                    "UHWC9PXBL",
                    "UA14TGLTC"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UNBPP291C",
        "type": "message",
        "ts": "1574156062.022900",
        "client_msg_id": "e1db84db-862a-42b4-b400-90ddc9f12b3c",
        "text": "Unison seems quite interesting - but the huge advantage I see dark has is a custom editor which at some points has great UX. Unison seems like it will get stuck in the ‘hobby language’ category unless a first class editor is made for it.\n\nThe language itself has some pretty cool ideas, love the abilities.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcf29e340a09",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cf29e340a09ac08ae262632ef9101046.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Ian Rumac",
            "display_name": "Ian Rumac",
            "team": "T5TCAFTA9",
            "name": "ian.rumac",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574140155.008400",
        "parent_user_id": "UKQT95T1V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zPd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Unison seems quite interesting - but the huge advantage I see dark has is a custom editor which at some points has great UX. Unison seems like it will get stuck in the ‘hobby language’ category unless a first class editor is made for it.\n\nThe language itself has some pretty cool ideas, love the abilities."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "U79HM6726",
        "thread_ts": "1574140155.008400",
        "root": {
            "user": "UKQT95T1V",
            "type": "message",
            "ts": "1574140155.008400",
            "client_msg_id": "b548c83e-4e79-44b0-a121-8f3276f507e7",
            "text": "do folks have a feel for how Unison and Darklang contrast with one another? both seem to have broadly similar goals",
            "team": "T5TCAFTA9",
            "thread_ts": "1574140155.008400",
            "reply_count": 8,
            "reply_users_count": 7,
            "latest_reply": "1576731989.000600",
            "reply_users": [
                "UNBPP291C",
                "U79HM6726",
                "UHWC9PXBL",
                "U6BRN7A0Y",
                "UD31LGQKB",
                "U8A5MS6R1",
                "UKQT95T1V"
            ],
            "replies": [
                {
                    "user": "UNBPP291C",
                    "ts": "1574156062.022900"
                },
                {
                    "user": "U79HM6726",
                    "ts": "1574165658.025500"
                },
                {
                    "user": "UHWC9PXBL",
                    "ts": "1574204315.082500"
                },
                {
                    "user": "U6BRN7A0Y",
                    "ts": "1574204652.082700"
                },
                {
                    "user": "U6BRN7A0Y",
                    "ts": "1574204684.082900"
                },
                {
                    "user": "UD31LGQKB",
                    "ts": "1574219271.084200"
                },
                {
                    "user": "U8A5MS6R1",
                    "ts": "1574270201.085400"
                },
                {
                    "user": "UKQT95T1V",
                    "ts": "1576731989.000600"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "umSJ",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "do folks have a feel for how Unison and Darklang contrast with one another? both seem to have broadly similar goals"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1574165658.025500",
        "client_msg_id": "7d6398f7-63d3-44d5-85e4-a4e7fcdb5137",
        "text": "<@UNBPP291C> Unison started more editor-oriented and shifted to “make the language first” but if you’ll see Paul’s earlier posts the editor is a big part of his grand vision.\n\nAlso mentioning Lamdu which has similar goals but our focus is “first the editor and we’ll finish the language later”.",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fYp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UNBPP291C"
                            },
                            {
                                "type": "text",
                                "text": " Unison started more editor-oriented and shifted to “make the language first” but if you’ll see Paul’s earlier posts the editor is a big part of his grand vision.\n\nAlso mentioning Lamdu which has similar goals but our focus is “first the editor and we’ll finish the language later”."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1574165939.029800",
        "client_msg_id": "DDDE7430-0625-4231-A7F3-2C653F6F9216",
        "text": "I don’t disagree with all that has been said, but I’d like to point out the complexity of the real world vs. a demo as another aspect. An address book good enough for all of planet Earth is probably as complex as à windowing system, because of the complexity of street addresses. Dates are another can of worms. Add domain-specific complexities that few people are even aware of.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kkuef",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don’t disagree with all that has been said, but I’d like to point out the complexity of the real world vs. a demo as another aspect. An address book good enough for all of planet Earth is probably as complex as à windowing system, because of the complexity of street addresses. Dates are another can of worms. Add domain-specific complexities that few people are even aware of."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1574179437.030000",
        "client_msg_id": "2e16eda2-ffed-4b5e-b7ee-33603657c88e",
        "text": "Some things missing from Smalltalk '78: Unicode support (character set, fonts, text rendering). Hi res 24bit RGB display, compositing window manager, ability to display and edit photos, play videos. 3D graphics. Internet (TCP\/IP, HTTP, etc). A web browser (HTML, JS, CSS). This is maybe 10M loc today? libFFMPEG alone is 1.4M loc just dealing with all the video formats.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4BdA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some things missing from Smalltalk '78: Unicode support (character set, fonts, text rendering). Hi res 24bit RGB display, compositing window manager, ability to display and edit photos, play videos. 3D graphics. Internet (TCP\/IP, HTTP, etc). A web browser (HTML, JS, CSS). This is maybe 10M loc today? libFFMPEG alone is 1.4M loc just dealing with all the video formats."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1574183702.036700",
        "client_msg_id": "90D1C220-9A56-4AD6-B550-60DA3585CAC8",
        "text": "STEPS (<http:\/\/www.vpri.org\/pdf\/tr2012001_steps.pdf>) would be a better benchmark than Smalltalk-78, as that research was designed with the goal of how much of a “multimedia system” could you design in 20k LOCs and it included a 2D compositing engine, networking, web browser and sort of like an office suite (although it still lacked many other things).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7Tz9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "STEPS ("
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.vpri.org\/pdf\/tr2012001_steps.pdf"
                            },
                            {
                                "type": "text",
                                "text": ") would be a better benchmark than Smalltalk-78, as that research was designed with the goal of how much of a “multimedia system” could you design in 20k LOCs and it included a 2D compositing engine, networking, web browser and sort of like an office suite (although it still lacked many other things)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1",
                    "UA14TGLTC",
                    "UAVCC2X70"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1574186175.037300",
        "client_msg_id": "5f7c5720-1e8f-4266-a1ab-6722be6c0908",
        "text": "Great responses. Some themes I see are:\n\nVertical integration:\n\n&gt;  When you build all the systems across all levels of the stack you can ensure each of them do their jobs well and there are no inefficiencies.\n\n\n&gt;  a ton of complexity and legacy... it’s all below the surface of your application\n\nMore essential complexity\n\n&gt;  the complexity of the real world vs. a demo\n\n\n&gt;  Unicode support (character set, fonts, text rendering). Hi res 24bit RGB display, compositing window manager, ability to display and edit photos, play videos\n\n'inertia'\n\n&gt; bad at cleaning up and getting rid of things. And so we keep old stuff around forever, because, hey, it still works and software is difficult to get right so let’s better not touch it and build new stuff on top of it instead.\n\n\n&gt; they’ve been trying to fix those mistakes by throwing more libraries on it and just adding more and more complexity.\n\n'compatibility'\n\n&gt;  ...HTTP, etc). A web browser (HTML, JS, CSS).\n\nPerhaps it's also the interaction between all of these dimensions that produces a combinatorial explosion in complexity and 'software material' all around. Specifically wrt 'compatibility', I think we want to look at the end goals rather than the specific implementations. E.g. what services does the web browser\/HTTP system provide? Some kind of a UI kit for distributed information\/computation systems. Is a browser an efficient model for this goal? What other system could provide the same service?\n\nThe 'vertical integration' aspect is particularly appealing to me.  It seems so much effort is spent just building bridges between layers that have different models.\n\nThere definitely is much more essential complexity than exists in the ST system. I believe STEPS implemented the compositing engine, basic TCP\/IP networking and font rendering. TCP\/IP specifically was ~200 LOC (<http:\/\/www.moserware.com\/2008\/04\/towards-moores-law-software-part-3-of-3.html>).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "attachments": [
            {
                "title": "Towards Moore's Law Software: Part 3 of 3",
                "title_link": "http:\/\/www.moserware.com\/2008\/04\/towards-moores-law-software-part-3-of-3.html",
                "text": "(Note: This is the third and final part of a series. Part one appeared Monday and part two appeared yesterday.)",
                "fallback": "Towards Moore's Law Software: Part 3 of 3",
                "from_url": "http:\/\/www.moserware.com\/2008\/04\/towards-moores-law-software-part-3-of-3.html",
                "service_icon": "http:\/\/www.moserware.com\/favicon.ico",
                "service_name": "moserware.com",
                "id": 1,
                "original_url": "http:\/\/www.moserware.com\/2008\/04\/towards-moores-law-software-part-3-of-3.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N=8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great responses. Some themes I see are:\n\nVertical integration:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " When you build all the systems across all levels of the stack you can ensure each of them do their jobs well and there are no inefficiencies."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " a ton of complexity and legacy... it’s all below the surface of your application"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nMore essential complexity\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " the complexity of the real world vs. a demo"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " Unicode support (character set, fonts, text rendering). Hi res 24bit RGB display, compositing window manager, ability to display and edit photos, play videos"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n'inertia'\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "bad at cleaning up and getting rid of things. And so we keep old stuff around forever, because, hey, it still works and software is difficult to get right so let’s better not touch it and build new stuff on top of it instead."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "they’ve been trying to fix those mistakes by throwing more libraries on it and just adding more and more complexity."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n'compatibility'\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " ...HTTP, etc). A web browser (HTML, JS, CSS)."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nPerhaps it's also the interaction between all of these dimensions that produces a combinatorial explosion in complexity and 'software material' all around. Specifically wrt 'compatibility', I think we want to look at the end goals rather than the specific implementations. E.g. what services does the web browser\/HTTP system provide? Some kind of a UI kit for distributed information\/computation systems. Is a browser an efficient model for this goal? What other system could provide the same service?\n\nThe 'vertical integration' aspect is particularly appealing to me.  It seems so much effort is spent just building bridges between layers that have different models.\n\nThere definitely is much more essential complexity than exists in the ST system. I believe STEPS implemented the compositing engine, basic TCP\/IP networking and font rendering. TCP\/IP specifically was ~200 LOC ("
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.moserware.com\/2008\/04\/towards-moores-law-software-part-3-of-3.html"
                            },
                            {
                                "type": "text",
                                "text": ")."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1574192789.074400",
        "edited": {
            "user": "U5STGTB3J",
            "ts": "1574192893.000000"
        },
        "client_msg_id": "697F4A19-4F36-40D5-8C04-E68AC8B43677",
        "text": "Just reading through all three parts of the article you just linked. This is a great quote from number 2 of 3 <http:\/\/www.moserware.com\/2008\/04\/towards-moores-law-software-part-2-of-3.html>:\n&gt;modern software is typically designed by accretion, much like a pyramid. That is, we design by adding around the edges rather than being willing to do a radical top to bottom design like the Empire State Building which was built in about a year with great engineering precision. We keep adding to systems rather than look back at their core assumptions to see if they’re still meeting our needs.\n\nI don’t think the “dimensions” you extracted are creating “a combinatorial explosion of complexity”, and rather see them as an incentive structure pushing us to “add around the edges” instead of redesign radically:\n\n1. Most projects or organizations are not vertically integrated and don’t control the whole stack, and if you’re dependent on things you don’t control you can’t touch them.\n2. The world hasn’t changed much, but we decided we want to model it more closely and with higher fidelity. That’s a design decision (and a good one) that certainly causes more complexity, but not all of that complexity is essential and choosing to leave existing solutions behind also works higher up the ladder of abstraction — do we really need all those different image compression algorithms or should we just keep one of them? Which leads nicely into…\n3. Compatibility — of course we want to still access all the JPEGs and GIFs scattered all over the web, even though we have so much better compression algorithms now. Huge incentive towards keeping the old stuff around. We could attempt to convert everything but that’s obviously more difficult than to just keep a few extra LOCs around to still be able to read JPEGs.\n\nAll that provides pretty strong incentives to not break what already works, avoid the heat of people complaining that legacy will be removed, and so we just keep adding. It's the totally reasonable thing to do. And it’s a viscious cycle as we keep adding more and more things people and other things start to rely on and don’t want to go away.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "attachments": [
            {
                "title": "Towards Moore's Law Software: Part 2 of 3",
                "title_link": "http:\/\/www.moserware.com\/2008\/04\/towards-moores-law-software-part-2-of-3.html",
                "text": "(Note: This is part two in a three part series. Part one appeared yesterday.)",
                "fallback": "Towards Moore's Law Software: Part 2 of 3",
                "from_url": "http:\/\/www.moserware.com\/2008\/04\/towards-moores-law-software-part-2-of-3.html",
                "service_icon": "http:\/\/www.moserware.com\/favicon.ico",
                "service_name": "moserware.com",
                "id": 1,
                "original_url": "http:\/\/www.moserware.com\/2008\/04\/towards-moores-law-software-part-2-of-3.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "COl4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just reading through all three parts of the article you just linked. This is a great quote from number 2 of 3 "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.moserware.com\/2008\/04\/towards-moores-law-software-part-2-of-3.html"
                            },
                            {
                                "type": "text",
                                "text": ":"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "modern software is typically designed by accretion, much like a pyramid. That is, we design by adding around the edges rather than being willing to do a radical top to bottom design like the Empire State Building which was built in about a year with great engineering precision. We keep adding to systems rather than look back at their core assumptions to see if they’re still meeting our needs."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nI don’t think the “dimensions” you extracted are creating “a combinatorial explosion of complexity”, and rather see them as an incentive structure pushing us to “add around the edges” instead of redesign radically:\n\n1. Most projects or organizations are not vertically integrated and don’t control the whole stack, and if you’re dependent on things you don’t control you can’t touch them.\n2. The world hasn’t changed much, but we decided we want to model it more closely and with higher fidelity. That’s a design decision (and a good one) that certainly causes more complexity, but not all of that complexity is essential and choosing to leave existing solutions behind also works higher up the ladder of abstraction — do we really need all those different image compression algorithms or should we just keep one of them? Which leads nicely into…\n3. Compatibility — of course we want to still access all the JPEGs and GIFs scattered all over the web, even though we have so much better compression algorithms now. Huge incentive towards keeping the old stuff around. We could attempt to convert everything but that’s obviously more difficult than to just keep a few extra LOCs around to still be able to read JPEGs.\n\nAll that provides pretty strong incentives to not break what already works, avoid the heat of people complaining that legacy will be removed, and so we just keep adding. It's the totally reasonable thing to do. And it’s a viscious cycle as we keep adding more and more things people and other things start to rely on and don’t want to go away."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1574194333.074800",
        "client_msg_id": "15918361-1607-4b53-925e-dd23ad2cbfa0",
        "text": "Choice of programming language is also a consideration. Co-dfns is a 20 pass optimizing APL compiler in 750 lines of code. <https:\/\/github.com\/Co-dfns\/Co-dfns> The Steps project included Gezira, 2D vector graphics in &lt;400loc, written in Nile, equivalent to 10,000 loc in C (Cairo), even though the Nile code is far less compact than the APL\/Co-dfns code. <https:\/\/raw.githubusercontent.com\/wiki\/damelang\/nile\/socal.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d5\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Choice of programming language is also a consideration. Co-dfns is a 20 pass optimizing APL compiler in 750 lines of code. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/Co-dfns\/Co-dfns"
                            },
                            {
                                "type": "text",
                                "text": " The Steps project included Gezira, 2D vector graphics in <400loc, written in Nile, equivalent to 10,000 loc in C (Cairo), even though the Nile code is far less compact than the APL\/Co-dfns code. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/raw.githubusercontent.com\/wiki\/damelang\/nile\/socal.pdf"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1574195177.075000",
        "client_msg_id": "1f895a36-b617-480d-87f6-4fc9b49ae432",
        "text": "Gezira would probably be &lt;40 loc in terse-style APL. And harder to read. APLers justify the terse coding style as making large, complex programs easier to understand and maintain if you can see all the code on the screen at once, without scrolling. Could a sophisticated IDE make this kind of code easier to understand?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GXt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Gezira would probably be <40 loc in terse-style APL. And harder to read. APLers justify the terse coding style as making large, complex programs easier to understand and maintain if you can see all the code on the screen at once, without scrolling. Could a sophisticated IDE make this kind of code easier to understand?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1574203610.075900",
        "client_msg_id": "DFEC3772-E31E-46EC-8824-3D8B6D9C9C18",
        "text": "good to hear that the documentation isn’t just an issue with my brain",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1573949858.477900",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k\/JZP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "good to hear that the documentation isn’t just an issue with my brain"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1574203626.076600",
        "client_msg_id": "186E7BBE-7796-4A58-9C5C-D763AD7EFC66",
        "text": "extremely excited to check out anydsl—thank you!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1573949858.477900",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ias",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "extremely excited to check out anydsl—thank you!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1574204193.080000",
        "client_msg_id": "AF91E44C-370A-499E-87D3-E207AEA8A38D",
        "text": "i really think that apl could benefit from a game-style visualization: when it was invented this kind of thing was a pipe dream—but the functions and operators were designed to be super evocative (“suggestive”) among other things and expose a lot at the heart of math that lead to an actual textbook for math being developed that used the same notation",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mVsf7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i really think that apl could benefit from a game-style visualization: when it was invented this kind of thing was a pipe dream—but the functions and operators were designed to be super evocative (“suggestive”) among other things and expose a lot at the heart of math that lead to an actual textbook for math being developed that used the same notation"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1574204315.082500",
        "client_msg_id": "4F82E5E1-FD73-41E8-BA50-6D4C20A73404",
        "text": "unison seems more concentrated on distributed computing from first principles whereas dark is more concerned with burning down the enormous mess that is devops. <@U6BRN7A0Y> \/ <@U6LBL2CJ1> should be able to weigh in here (is the unison team in slack?)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574140155.008400",
        "parent_user_id": "UKQT95T1V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5=o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "unison seems more concentrated on distributed computing from first principles whereas dark is more concerned with burning down the enormous mess that is devops. "
                            },
                            {
                                "type": "user",
                                "user_id": "U6BRN7A0Y"
                            },
                            {
                                "type": "text",
                                "text": " \/ "
                            },
                            {
                                "type": "user",
                                "user_id": "U6LBL2CJ1"
                            },
                            {
                                "type": "text",
                                "text": " should be able to weigh in here (is the unison team in slack?)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6BRN7A0Y",
        "type": "message",
        "ts": "1574204652.082700",
        "client_msg_id": "7c66eb20-1d31-42ff-a433-0a724b32af47",
        "text": "Yeah, the way to unison team put it to me is that unison would be something you’d build dark in",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gee6ec3be3e3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eee6ec3be3e3176ff1e1119301630812.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Paul",
            "real_name": "Paul Biggar",
            "display_name": "pbiggar",
            "team": "T5TCAFTA9",
            "name": "pbiggar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574140155.008400",
        "parent_user_id": "UKQT95T1V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wh047",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, the way to unison team put it to me is that unison would be something you’d build dark in"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6BRN7A0Y",
        "type": "message",
        "ts": "1574204684.082900",
        "client_msg_id": "7d789afb-ac48-489a-8878-09c4fae25f3a",
        "text": "though i think they’ve shifted their goals since they said that; i know they started with an editor but have now moved away from it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gee6ec3be3e3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eee6ec3be3e3176ff1e1119301630812.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Paul",
            "real_name": "Paul Biggar",
            "display_name": "pbiggar",
            "team": "T5TCAFTA9",
            "name": "pbiggar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574140155.008400",
        "parent_user_id": "UKQT95T1V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qJ5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "though i think they’ve shifted their goals since they said that; i know they started with an editor but have now moved away from it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1574214563.084000",
        "client_msg_id": "241eca9f-26f7-4f14-a42a-5bbc66985f92",
        "text": "You get a lot done by avoiding fiddly bits.  If a subsystem isn't carrying its weight, throw it out and everything it does.  An example.  Back long while now, we had some specific XML we needed to parse in an environment with no proper XML parser.  So we wrote a parser for the 5% of XML that we did need.  It wan't especially domain specific: it amounted to 95% of the XML that people generally use.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UsU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You get a lot done by avoiding fiddly bits.  If a subsystem isn't carrying its weight, throw it out and everything it does.  An example.  Back long while now, we had some specific XML we needed to parse in an environment with no proper XML parser.  So we wrote a parser for the 5% of XML that we did need.  It wan't especially domain specific: it amounted to 95% of the XML that people generally use."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD31LGQKB",
        "type": "message",
        "ts": "1574219271.084200",
        "client_msg_id": "a568cfaa-ca55-4dd6-b06c-2c6250928227",
        "text": "I'm glad the unison editor stuff is at least preserved on the blog; some useful tidbits there.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7e6e0f8e031",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-19\/699535022069_b7e6e0f8e031cdcf896f_72.jpg",
            "first_name": "",
            "real_name": "andrew blinn",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "me1856",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574140155.008400",
        "parent_user_id": "UKQT95T1V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1J0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm glad the unison editor stuff is at least preserved on the blog; some useful tidbits there."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]