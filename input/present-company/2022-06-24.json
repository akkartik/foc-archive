[
    {
        "user": "U022YTVTSR5",
        "type": "message",
        "ts": "1656125937.434999",
        "client_msg_id": "4d9e5c66-6abe-4465-8029-30ee04ae3ce9",
        "text": "*Accountability Group for Dev Tools Startup Founders*\n\nHello everyone! \n\nY Combinator is starting a <https:\/\/www.ycombinator.com\/blog\/announcing-startup-school-2022|Startup School cohort> on Monday, June 27th, and it would be amazing to have a Startup Accountability Group focused on Dev Tools.\n\nIf you're also an early founder looking for your first users, raising money or planning to launch your MVP, we'll be meeting weekly to keep each other accountable and share feedback on our progress. We'd love for you to join even if you're not participating in the classes!\n\nJoin us by sending me a message or filling this form: <https:\/\/forms.gle\/TjfKaGs9BYoDTEGx5|https:\/\/forms.gle\/TjfKaGs9BYoDTEGx5>\n\nAnd don't forget to register for Startup School!\n\nAnd if you want to help organize the group, or you're past the “early founder” phase and want to provide mentorship, please reach out to me!\n\nThank you!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "041596703e80",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-07-03\/3753313840386_041596703e80497cd799_72.png",
            "first_name": "André",
            "real_name": "André Terron",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andre.v.terron",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hv\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Accountability Group for Dev Tools Startup Founders",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nHello everyone! \n\nY Combinator is starting a "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.ycombinator.com\/blog\/announcing-startup-school-2022",
                                "text": "Startup School cohort"
                            },
                            {
                                "type": "text",
                                "text": " on Monday, June 27th, and it would be amazing to have a Startup Accountability Group focused on Dev Tools.\n\nIf you're also an early founder looking for your first users, raising money or planning to launch your MVP, we'll be meeting weekly to keep each other accountable and share feedback on our progress. We'd love for you to join even if you're not participating in the classes!\n\nJoin us by sending me a message or filling this form: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/forms.gle\/TjfKaGs9BYoDTEGx5",
                                "text": "https:\/\/forms.gle\/TjfKaGs9BYoDTEGx5"
                            },
                            {
                                "type": "text",
                                "text": "\n\nAnd don't forget to register for Startup School!\n\nAnd if you want to help organize the group, or you're past the “early founder” phase and want to provide mentorship, please reach out to me!\n\nThank you!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "U02E4DAQGSZ",
                    "U03M1ETGCTW",
                    "U01A1C2K8MP",
                    "U03JUAWDVSR",
                    "U02NU8FTL5N"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1656133555.890619",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1656133593.000000"
        },
        "client_msg_id": "dccc7b84-5032-4f85-acc1-c70780f280b9",
        "text": "What are people using to develop web-based node-and-wire programming interfaces? I need to implement a robust, high-performance, graph based programming interface at work for a DSL and am looking for things that will help. Any pointers to JS tools for graph interfaces, vertex layout, edge routing, etc would be welcome!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656133555.890619",
        "reply_count": 10,
        "reply_users_count": 5,
        "latest_reply": "1660260933.627229",
        "reply_users": [
            "U0123H7JRDM",
            "UBN9AFS0N",
            "U02E4DAQGSZ",
            "U018S42NMMM",
            "U02U0AS3J49"
        ],
        "replies": [
            {
                "user": "U0123H7JRDM",
                "ts": "1656135063.133549"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1656145801.045999"
            },
            {
                "user": "U0123H7JRDM",
                "ts": "1656150372.729119"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1656152139.621949"
            },
            {
                "user": "U0123H7JRDM",
                "ts": "1656239929.160509"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1656240110.146009"
            },
            {
                "user": "U018S42NMMM",
                "ts": "1656415962.818839"
            },
            {
                "user": "U0123H7JRDM",
                "ts": "1656424242.406549"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1660230381.346649"
            },
            {
                "user": "U018S42NMMM",
                "ts": "1660260933.627229"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+rW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What are people using to develop web-based node-and-wire programming interfaces? I need to implement a robust, high-performance, graph based programming interface at work for a DSL and am looking for things that will help. Any pointers to JS tools for graph interfaces, vertex layout, edge routing, etc would be welcome!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1656135063.133549",
        "client_msg_id": "64AFF2A7-A153-40F0-A227-C4BD14D45243",
        "text": "I am curious to this as well what other use.. I myself currently use a hybrid-canvas based approach where the wires are drawn using the konva library (canvas wrapper) and I calculate the controlpoints for the curves in custom code. For the nodes themselves I use react. To get higher performance I do direct manipulation of elements using references to elements (a lot of useRef usage in react). ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656133555.890619",
        "parent_user_id": "U014WA16VNJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vKDNL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am curious to this as well what other use.. I myself currently use a hybrid-canvas based approach where the wires are drawn using the konva library (canvas wrapper) and I calculate the controlpoints for the curves in custom code. For the nodes themselves I use react. To get higher performance I do direct manipulation of elements using references to elements (a lot of useRef usage in react). "
                            }
                        ]
                    }
                ]
            }
        ]
    }
]