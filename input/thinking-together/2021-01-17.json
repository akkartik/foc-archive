[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1610874234.027400",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1610874381.000000"
        },
        "client_msg_id": "6b4858d4-21d4-4afe-b16d-6804fa6e5c70",
        "text": "The single-process serial computation (aka \"Turing machine\") is a useful abstraction. It corresponds nicely to how people perform symbolic manipulations by hand. It's also much easier to reason about than distributed computing models.\n\nGiven that the Turing Machine abstraction won't (and shouldn't) go away, let me rephrase the topic of this thread: should it be the dominant abstraction for developing software system? Certainly not. Perhaps the mistake is to consider it a more fundamental abstraction than distributed models, and try to implement the latter in terms of the former. Perhaps it should be the other way round: implement the Turing Machine as a high-level abstraction on top of a more powerful one, as a useful simplification to use when appropriate.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610778816.014400",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kn7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The single-process serial computation (aka \"Turing machine\") is a useful abstraction. It corresponds nicely to how people perform symbolic manipulations by hand. It's also much easier to reason about than distributed computing models.\n\nGiven that the Turing Machine abstraction won't (and shouldn't) go away, let me rephrase the topic of this thread: should it be the dominant abstraction for developing software system? Certainly not. Perhaps the mistake is to consider it a more fundamental abstraction than distributed models, and try to implement the latter in terms of the former. Perhaps it should be the other way round: implement the Turing Machine as a high-level abstraction on top of a more powerful one, as a useful simplification to use when appropriate."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1610910164.027700",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1610910312.000000"
        },
        "client_msg_id": "343aa539-7414-4e6f-ba11-c9c9ac9f6436",
        "text": "<@UJBAJNFLK> Does Erlang (aka Actor Model) feel like a more powerful model?\n\nThere's also the Smalltalk model of an internet of computers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610778816.014400",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yiSk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " Does Erlang (aka Actor Model) feel like a more powerful model?\n\nThere's also the Smalltalk model of an internet of computers."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]