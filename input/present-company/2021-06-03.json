[
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1622716227.032900",
        "client_msg_id": "e4005d6f-c003-4879-9074-0f81944ce007",
        "text": "short version:\n\nNotation vs. DSL is (1) mindset and (2) technology.\n\n(1) Mindset:\n\nAllow for change.\n\nWrite code that writes code.\n\nSyntax is cheap.\n\n(2) Technology - compiler voodoo vs. cheap-to-use tool.  REGEX used to be compiler voodoo, now it’s easy.  PEG is still saddled with compiler-ish baggage.  Ohm-Editor crystallizes just how cheap syntax is.\n\n(1): Treat existing languages as “assembler”. Python, JS, WASM, Lisp, etc. are but “assembly language” for new-breed Notations.\n\nfurther reading:\n\nWhat If Making a Compiler Was Easy? <https:\/\/guitarvydas.github.io\/2021\/04\/26\/What-If-Making-A-Compiler-Was-Easy.html>\n\none example: Glue <https:\/\/guitarvydas.github.io\/2021\/04\/11\/Glue-Tool.html>\n\nlong version:\n\nI would be quite happy to discuss this further and to post links to my thoughts about: SCNs, PEG, Ohm-JS, Toolbox Languages, FDD (Failure-Driven Development), DaS (Diagrams as Syntax), and so on.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622451101.030100",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "service_name": "Computing Simplicity",
                "title": "Glue Tool",
                "title_link": "https:\/\/guitarvydas.github.io\/2021\/04\/11\/Glue-Tool.html",
                "text": "Glue Tool",
                "fallback": "Computing Simplicity: Glue Tool",
                "ts": 1618099200,
                "from_url": "https:\/\/guitarvydas.github.io\/2021\/04\/11\/Glue-Tool.html",
                "id": 1,
                "original_url": "https:\/\/guitarvydas.github.io\/2021\/04\/11\/Glue-Tool.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cAf8m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "short version:\n\nNotation vs. DSL is (1) mindset and (2) technology.\n\n(1) Mindset:\n\nAllow for change.\n\nWrite code that writes code.\n\nSyntax is cheap.\n\n(2) Technology - compiler voodoo vs. cheap-to-use tool.  REGEX used to be compiler voodoo, now it’s easy.  PEG is still saddled with compiler-ish baggage.  Ohm-Editor crystallizes just how cheap syntax is.\n\n(1): Treat existing languages as “assembler”. Python, JS, WASM, Lisp, etc. are but “assembly language” for new-breed Notations.\n\nfurther reading:\n\nWhat If Making a Compiler Was Easy? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/guitarvydas.github.io\/2021\/04\/26\/What-If-Making-A-Compiler-Was-Easy.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\none example: Glue "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/guitarvydas.github.io\/2021\/04\/11\/Glue-Tool.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nlong version:\n\nI would be quite happy to discuss this further and to post links to my thoughts about: SCNs, PEG, Ohm-JS, Toolbox Languages, FDD (Failure-Driven Development), DaS (Diagrams as Syntax), and so on."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]