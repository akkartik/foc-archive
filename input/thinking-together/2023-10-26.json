[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1698303868.151789",
        "edited": {
            "user": "U013ZLJARC7",
            "ts": "1698324185.000000"
        },
        "client_msg_id": "da8ef185-4401-4249-9382-d7a80fbb37b8",
        "text": "There are many kinds of OO, but the kind one mostly encounters is quite bad. Those who have programmed using Java\/C++-style OO, or in languages that should be able to do better but are culturally poisoned by Java\/C++ culture (Ruby, for example), often develop antipathy to the whole idea.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698246162.762769",
        "parent_user_id": "U03LJBR6THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "poTNX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are many kinds of OO, but the kind one mostly encounters is quite bad. Those who have programmed using Java\/C++-style OO, or in languages that should be able to do better but are culturally poisoned by Java\/C++ culture (Ruby, for example), often develop antipathy to the whole idea."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03LJBR6THT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1698309874.292439",
        "client_msg_id": "392c50ad-6aa2-463a-89b0-8dc3cf6f5747",
        "text": "IncPy is Python 2 only, so it's safe to declare it dead. Similar ideas have been proposed, and sometimes implemented, but I have to see anything for a mutable-data language like Python that's actually safe and efficient to use.\nThe problem with Jupyter very fundamental: the data model of the notebook. It combines (1) code and documentation with (2) a partial trace of excecution and results. It would have been just as straightforward, and a lot more useful, to keep (1) and a full trace of execution, as separate data structures. It's (1) you want to keep under version control, and (2) that you want to make computationally reproducible. But now it's too late for such changes (see <https:\/\/github.com\/jupyter\/enhancement-proposals\/pull\/4|here> for technical details).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1697961538.486189",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/jayL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "IncPy is Python 2 only, so it's safe to declare it dead. Similar ideas have been proposed, and sometimes implemented, but I have to see anything for a mutable-data language like Python that's actually safe and efficient to use.\nThe problem with Jupyter very fundamental: the data model of the notebook. It combines (1) code and documentation with (2) a partial trace of excecution and results. It would have been just as straightforward, and a lot more useful, to keep (1) and a full trace of execution, as separate data structures. It's (1) you want to keep under version control, and (2) that you want to make computationally reproducible. But now it's too late for such changes (see "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/jupyter\/enhancement-proposals\/pull\/4",
                                "text": "here"
                            },
                            {
                                "type": "text",
                                "text": " for technical details)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03LJBR6THT",
        "type": "message",
        "ts": "1698323961.517289",
        "client_msg_id": "8165BF83-8142-4DD6-B329-400E8F687AC7",
        "text": "I was being too abstract, and unfortunately this topic sparks too much controversy to be useful but still thought I’d try.\n\nYes I’m talking about ruby, &amp; JavaScript, <@U013ZLJARC7> that makes sense.\n\nWhat’s really bothering me here is a bigger question:\n\nIf people are so resistant to change &amp; you propose a non-trivial idea which might actually get adoption how do you get people to not just use it like their previous thing. \n\nLike to me the java\/c++ thing is they are structured (c\/basic\/etc) programmers who do things with in objects now, in that case setting up &amp; programming an interface is such an immense pain few people do it enough to get the epiphany.\n\nWhat does it say about us that even an idea which had so much going for it, almost completely missed in practice? Was smalltalk in particular marketed poorly to make it more approachable than it was? Was it purely the confusion with Simula which shared the term “OO” &amp; bjarne quotes as primary influence of c++v ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0afa5db0b2d5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-07-06\/5524013698279_0afa5db0b2d593650747_72.jpg",
            "first_name": "Marcelle",
            "real_name": "Marcelle Rusu",
            "display_name": "Marcelle Rusu",
            "team": "T5TCAFTA9",
            "name": "marcelrusu0",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698246162.762769",
        "parent_user_id": "U03LJBR6THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ryHKq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was being too abstract, and unfortunately this topic sparks too much controversy to be useful but still thought I’d try.\n\nYes I’m talking about ruby, & JavaScript, "
                            },
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " that makes sense.\n\nWhat’s really bothering me here is a bigger question:\n\nIf people are so resistant to change & you propose a non-trivial idea which might actually get adoption how do you get people to not just use it like their previous thing. \n\nLike to me the java\/c++ thing is they are structured (c\/basic\/etc) programmers who do things with in objects now, in that case setting up & programming an interface is such an immense pain few people do it enough to get the epiphany.\n\nWhat does it say about us that even an idea which had so much going for it, almost completely missed in practice? Was smalltalk in particular marketed poorly to make it more approachable than it was? Was it purely the confusion with Simula which shared the term “OO” & bjarne quotes as primary influence of c++v "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1698324152.496529",
        "client_msg_id": "fd54289b-82ba-4422-b0c4-021013b518a4",
        "text": "I see loads of objects in Ruby and JS, just mostly for the worse. Can you give an example of this kinds of things you’re proposing that aren’t being taken up?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698246162.762769",
        "parent_user_id": "U03LJBR6THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "88zhd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I see loads of objects in Ruby and JS, just mostly for the worse. Can you give an example of this kinds of things you’re proposing that aren’t being taken up?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03LJBR6THT",
        "type": "message",
        "ts": "1698324438.077779",
        "edited": {
            "user": "U03LJBR6THT",
            "ts": "1698324979.000000"
        },
        "client_msg_id": "012D44F1-B986-48FE-BF3C-0F8835F8B2E7",
        "text": "Not just objects, but actually doing work to define good interfaces. I’ve yet to see it in either.\n\nThe closest actually good example in rails is people creating custom form objects to do forms which don’t work exactly like the built in form objects - don’t map exactly to 1 model. This is just looking at existing interface & putting something in, and in practice its quite good. \n\nI’m not just talking about using classes or objects, but actually spending the time to think about & design interfaces to make good generic code. \n\nI fear I’m having trouble making my point, there is too much nuance in this topic for me to speak clearly about it. It goes beyond OO, but I think that’s lost, I apologize. Having a tough week, I need some time to think about how to phrase my thoughts on this. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0afa5db0b2d5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-07-06\/5524013698279_0afa5db0b2d593650747_72.jpg",
            "first_name": "Marcelle",
            "real_name": "Marcelle Rusu",
            "display_name": "Marcelle Rusu",
            "team": "T5TCAFTA9",
            "name": "marcelrusu0",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698246162.762769",
        "parent_user_id": "U03LJBR6THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KWjW8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not just objects, but actually doing work to define good interfaces. I’ve yet to see it in either.\n\nThe closest actually good example in rails is people creating custom form objects to do forms which don’t work exactly like the built in form objects - don’t map exactly to 1 model. This is just looking at existing interface & putting something in, and in practice its quite good. \n\nI’m not just talking about using classes or objects, but actually spending the time to think about & design interfaces to make good generic code. \n\nI fear "
                            },
                            {
                                "type": "text",
                                "text": "I’m"
                            },
                            {
                                "type": "text",
                                "text": " having trouble making my point, there is too much nuance in this topic for me to speak clearly about it. It goes beyond OO, but I think "
                            },
                            {
                                "type": "text",
                                "text": "that’s"
                            },
                            {
                                "type": "text",
                                "text": " lost, I apologize"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Having a tough week, I need some time to think about how to phrase my thoughts on this. "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1698325945.640639",
        "client_msg_id": "4335141e-b375-431e-8fc6-b87fffac63b3",
        "text": "API design is hard is every language\/paradigm, yeah!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698246162.762769",
        "parent_user_id": "U03LJBR6THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EAVBF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "API design is hard is every language\/paradigm, yeah!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up_2",
                "users": [
                    "UL2SJ88Q3"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U05UBCXHWM6",
        "type": "message",
        "ts": "1698329861.583519",
        "client_msg_id": "ec1b15d3-bfeb-4801-a38e-dd204a61d3fc",
        "text": "I must admit that I'm very wary of \"anonymous by default\" systems, given the horrible cess-pool that is chan boards.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1beaa0968ce5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-23\/5937523466869_1beaa0968ce502c4375e_72.jpg",
            "first_name": "Arcade",
            "real_name": "Arcade Wise",
            "display_name": "Arcade Wise",
            "team": "T5TCAFTA9",
            "name": "arcade.b.wise",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698121773.522159",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Oro5b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I must admit that I'm very wary of \"anonymous by default\" systems, given the horrible cess-pool that is chan boards."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05UBCXHWM6",
        "type": "message",
        "ts": "1698329880.391229",
        "client_msg_id": "aaabae6f-c6d8-48a7-9244-af7350c73706",
        "text": "Have you considered a petname system for user ids? It could be really interesting to see in practive",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1beaa0968ce5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-23\/5937523466869_1beaa0968ce502c4375e_72.jpg",
            "first_name": "Arcade",
            "real_name": "Arcade Wise",
            "display_name": "Arcade Wise",
            "team": "T5TCAFTA9",
            "name": "arcade.b.wise",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698121773.522159",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JEsUn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you considered a petname system for user ids? It could be really interesting to see in practive"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1698333094.358109",
        "client_msg_id": "d6f2f958-06e3-42c2-9d59-a021a3760e99",
        "text": "Thanks for reminding me to reread <http:\/\/www.skyhunter.com\/marcs\/petnames\/IntroPetNames.html|http:\/\/www.skyhunter.com\/marcs\/petnames\/IntroPetNames.html>! I got a lot more out of it this time.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698121773.522159",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Utctm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for reminding me to reread "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.skyhunter.com\/marcs\/petnames\/IntroPetNames.html",
                                "text": "http:\/\/www.skyhunter.com\/marcs\/petnames\/IntroPetNames.html"
                            },
                            {
                                "type": "text",
                                "text": "! I got a lot more out of it this time."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1698333743.867269",
        "client_msg_id": "315edfba-8c84-4856-af51-9efb7a8a5a83",
        "text": "with the caveat that I’ve worked in very few code bases that are really “all in” on OO, the ones that I’ve seen come the closest to making it a good thing (good read here as “helpful”) are the teams that did the work ahead of time to model their domain, to define what an “object” was, and not sort of back into modeling objects just based off of some real world things like a lot of books suggests. Doing that, I’ve found, can dig ya into a wicked deep whole.\n\nI think, OO, like a lot of design philosophies, can be a powerful tool, but can’t be applied without doing the design work, too, and not all devs are cozy or know how to do that level of design.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698246162.762769",
        "parent_user_id": "U03LJBR6THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zryvk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "with the caveat that I’ve worked in very few code bases that are really “all in” on OO, the ones that I’ve seen come the closest to making it a good thing (good read here as “helpful”) are the teams that did the work ahead of time to model their domain, to define what an “object” was, and not sort of back into modeling objects just based off of some real world things like a lot of books suggests. Doing that, I’ve found, can dig ya into a wicked deep whole.\n\nI think, OO, like a lot of design philosophies, can be a powerful tool, but can’t be applied without doing the design work, too, and not all devs are cozy or know how to do that level of design."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03LJBR6THT"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "U03LJBR6THT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1698336371.924249",
        "client_msg_id": "519a5de4-839f-47c2-bf71-fdfb0a82427d",
        "text": "I think OO is pretty good as long as you layer on a couple of additional dogmas:\n• Keep data and behaviour separate\n• Everything is either abstract (designed for extensibility) or final (doesn't allow extensibility)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698246162.762769",
        "parent_user_id": "U03LJBR6THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r4S6B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think OO is pretty good as long as you layer on a couple of additional dogmas:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Keep data and behaviour separate"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Everything is either abstract (designed for extensibility) or final (doesn't allow extensibility)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U05GSC0B4A0",
        "type": "message",
        "ts": "1698336413.295449",
        "client_msg_id": "efe13120-5af0-41e8-af0a-7429aae18343",
        "text": "it's interesting that you bring up polymorphism...I've kind of been on this kick for a while too :slightly_smiling_face:\n\nThere's this talk from a while back that I really like <https:\/\/www.youtube.com\/watch?v=zs0E4E83_X8|The Soul of Software> where Avdi Grimm mentions this breakdown from <http:\/\/davewest.us\/product\/object-thinking\/|Object Thinking> of programming having two schools of thought: Formalists and the Informalists (Hermeneuticists)...and Avdi makes a comment that if you were taught inheritance before polymorphism, you were taught by a formalist, but if you were taught polymorphism before inheritance you were taught by an informalist...\n\nUltimately what I've found and that they mention in the book - programming\/engineering is heavily dominated by the formalist world...so it can be hard if you find yourself as the only person in the team with the opposite view of programming\n\nthe way I see the answer to your original question though is that the pendulum kind of swings back and forth over time with one side being frustrated while the other is in their element and highly productive",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g6366d8630c4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6366d8630c4e2394142efb0a9358fcc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "Scott",
            "real_name": "Scott",
            "display_name": "Scott",
            "team": "T5TCAFTA9",
            "name": "scott099",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698246162.762769",
        "parent_user_id": "U03LJBR6THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JyJDo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it's interesting that you bring up polymorphism...I've kind of been on this kick for a while too "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThere's this talk from a while back that I really like "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=zs0E4E83_X8",
                                "text": "The Soul of Software"
                            },
                            {
                                "type": "text",
                                "text": " where Avdi Grimm mentions this breakdown from "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/davewest.us\/product\/object-thinking\/",
                                "text": "Object Thinking"
                            },
                            {
                                "type": "text",
                                "text": " of programming having two schools of thought: Formalists and the Informalists (Hermeneuticists)...and Avdi makes a comment that if you were taught inheritance before polymorphism, you were taught by a formalist, but if you were taught polymorphism before inheritance you were taught by an informalist...\n\nUltimately what I've found and that they mention in the book - programming\/engineering is heavily dominated by the formalist world...so it can be hard if you find yourself as the only person in the team with the opposite view of programming\n\nthe way I see the answer to your original question though is that the pendulum kind of swings back and forth over time with one side being frustrated while the other is in their element and highly productive"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03LJBR6THT",
                    "U03B14DUZSA"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U05GSC0B4A0",
        "type": "message",
        "ts": "1698336628.099259",
        "edited": {
            "user": "U05GSC0B4A0",
            "ts": "1698336678.000000"
        },
        "client_msg_id": "6f82d8ca-5a61-475f-8c33-6dbbd2a71d71",
        "text": "like...Ruby in the late 00's\/early 2010s was dominated by this culture of throwing off the constraints of java and having complete freedom...which led to a huge explosion of new concepts and tools and ideas hitting the mainstream...(at the same time making it possible to make horrible abominations - I was at Groupon in 2013)\n\nand now you see those concepts and tools shifting more into the formal realm where variation and stability and correctness has become more important, because the patterns that work for the types of apps people are building have been found",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g6366d8630c4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6366d8630c4e2394142efb0a9358fcc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "Scott",
            "real_name": "Scott",
            "display_name": "Scott",
            "team": "T5TCAFTA9",
            "name": "scott099",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698246162.762769",
        "parent_user_id": "U03LJBR6THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VPHKG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "like...Ruby in the late 00's\/early 2010s was dominated by this culture of throwing off the constraints of java and having complete freedom...which led to a huge explosion of new concepts and tools and ideas hitting the mainstream...(at the same time making it possible to make horrible abominations - I was at Groupon in 2013)\n\nand now you see those concepts and tools shifting more into the formal realm where variation and stability and correctness has become more important, because the patterns that work for the types of apps people are building have been found"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03LJBR6THT"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1698346711.057869",
        "client_msg_id": "57e43cb4-8957-4bb7-a9b6-f29408acaccf",
        "text": "4chan is indeed a concern. I don't quite (yet) buy fully into the worldview of \"attacked from within\". This is all an experiment I want to be very careful about scaling up.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698121773.522159",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XQDsn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "4chan is indeed a concern. I don't quite (yet) buy fully into the worldview of \"attacked from within\". This is all an experiment I want to be very careful about scaling up."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U05UBCXHWM6"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1698349635.445229",
        "client_msg_id": "8dcfc8fc-1250-4acb-839e-8c273f3c1751",
        "text": "Forking <@U03LJBR6THT>’s thread onto this bit\n&gt; If so, how does \"future of coding\" even matter if any form of real adoption feels impossible.\n(Making a new thread about this because the other one has become about OO instead of this bit)\n\nI feel this deeply. It can often feel as if things don't get adopted. That programming doesn't change for the better. I have so many thoughts on this, it is hard to summarize.\n\nFirst, I do think we can get others to adopt the things we value. It is almost never an education issue, imo and instead a value question. (I am intentionally leaving aside the OO frame here). Think about the impact that Rich Hickey has had on how many people code, not just clojure people, but in the industry broadly. How did he do it? Through Simple Made Easy, a talk largely about values, not techniques. The same is true of Bret Victor's influence on the future of coding community. He communicated values that others adopted.\n\nI've found this to be true in practice as well. Trying to convince people to change their coding style requires diligence, communicating values, and showing how code improves because of these values. Conflict often happens when people implicitly hold very different values. I'm going to bet that is the case in the original example given.\n\nBut I also want to step back and ask, what kind of adoption, by who, by how many people? I'm willing to bet a lot of people in this slack listen to some genre of music that isn't completely mainstream. Have those genres failed because of the lack of becoming mainstream? Would they be better if they became mainstream?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698349635.445229",
        "reply_count": 11,
        "reply_users_count": 6,
        "latest_reply": "1700164944.802599",
        "reply_users": [
            "U03LJBR6THT",
            "U0625T25APL",
            "U013ZLJARC7",
            "UGWUJUZHT",
            "UJBAJNFLK",
            "BEYLABLRH"
        ],
        "replies": [
            {
                "user": "U03LJBR6THT",
                "ts": "1698349880.243369"
            },
            {
                "user": "U0625T25APL",
                "ts": "1698359657.979529"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1698390397.539329"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1698399094.232689"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1698403010.794709"
            },
            {
                "user": "BEYLABLRH",
                "ts": "1698476522.878299"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1698548841.604009"
            },
            {
                "user": "U0625T25APL",
                "ts": "1698602456.599659"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1698604534.977929"
            },
            {
                "user": "U0625T25APL",
                "ts": "1698604735.057879"
            },
            {
                "user": "U0625T25APL",
                "ts": "1700164944.802599"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GV8xL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Forking "
                            },
                            {
                                "type": "user",
                                "user_id": "U03LJBR6THT"
                            },
                            {
                                "type": "text",
                                "text": "’s thread onto this bit\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If so, how does \"future of coding\" even matter if any form of real adoption feels impossible."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n(Making a new thread about this because the other one has become about OO instead of this bit)\n\nI feel this deeply. It can often feel as if things don't get adopted. That programming doesn't change for the better. I have so many thoughts on this, it is hard to summarize.\n\nFirst, I do think we can get others to adopt the things we value. It is almost never an education issue, imo and instead a value question. (I am intentionally leaving aside the OO frame here). Think about the impact that Rich Hickey has had on how many people code, not just clojure people, but in the industry broadly. How did he do it? Through Simple Made Easy, a talk largely about values, not techniques. The same is true of Bret Victor's influence on the future of coding community. He communicated values that others adopted.\n\nI've found this to be true in practice as well. Trying to convince people to change their coding style requires diligence, communicating values, and showing how code improves because of these values. Conflict often happens when people implicitly hold very different values. I'm going to bet that is the case in the original example given.\n\nBut I also want to step back and ask, what kind of adoption, by who, by how many people? I'm willing to bet a lot of people in this slack listen to some genre of music that isn't completely mainstream. Have those genres failed because of the lack of becoming mainstream? Would they be better if they became mainstream?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "U03LJBR6THT",
                    "U04E5QAD6DD",
                    "UMQ6LR9NZ",
                    "U05T675LXTM"
                ],
                "count": 4
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UJBAJNFLK",
                    "U05T675LXTM",
                    "U0620366WQL",
                    "UML4ZEKDK",
                    "U02QC0PPER3"
                ],
                "count": 6
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03LJBR6THT",
        "type": "message",
        "ts": "1698349880.243369",
        "client_msg_id": "6c36088f-2147-4ebd-abc9-93979d337a6d",
        "text": "Really appreciate this framing, totally agree &amp; feeling less dread :heart:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0afa5db0b2d5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-07-06\/5524013698279_0afa5db0b2d593650747_72.jpg",
            "first_name": "Marcelle",
            "real_name": "Marcelle Rusu",
            "display_name": "Marcelle Rusu",
            "team": "T5TCAFTA9",
            "name": "marcelrusu0",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698349635.445229",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HQW\/o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Really appreciate this framing, totally agree & feeling less dread "
                            },
                            {
                                "type": "emoji",
                                "name": "heart",
                                "unicode": "2764-fe0f"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UK3LH8CF5",
                    "U04E5QAD6DD",
                    "UCUSW7WVD",
                    "U85HCL7JP",
                    "U05T675LXTM",
                    "U05M5A8E0NT"
                ],
                "count": 6
            }
        ]
    },
    {
        "user": "U05UBCXHWM6",
        "type": "message",
        "ts": "1698353538.869689",
        "client_msg_id": "9965CDBA-29E3-44F5-9EC8-B2DA6CC504DC",
        "text": "Have y’all heard about the PLATO computer system? ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1beaa0968ce5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-23\/5937523466869_1beaa0968ce502c4375e_72.jpg",
            "first_name": "Arcade",
            "real_name": "Arcade Wise",
            "display_name": "Arcade Wise",
            "team": "T5TCAFTA9",
            "name": "arcade.b.wise",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698353538.869689",
        "reply_count": 5,
        "reply_users_count": 2,
        "latest_reply": "1698381153.533939",
        "reply_users": [
            "U03CEGR3HSL",
            "U05UBCXHWM6"
        ],
        "replies": [
            {
                "user": "U03CEGR3HSL",
                "ts": "1698354313.543229"
            },
            {
                "user": "U05UBCXHWM6",
                "ts": "1698363580.822719"
            },
            {
                "user": "U05UBCXHWM6",
                "ts": "1698363652.638419"
            },
            {
                "user": "U03CEGR3HSL",
                "ts": "1698363720.559689"
            },
            {
                "user": "U05UBCXHWM6",
                "ts": "1698381153.533939"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CK1pD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have y’all heard about the PLATO computer system? "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1698354313.543229",
        "client_msg_id": "827a4898-3dcc-4c03-9679-5083f026c56e",
        "text": "The podcast Advent of Computing had a couple good episodes about it.\n<https:\/\/adventofcomputing.libsyn.com\/episode-19-plato-part-1-a-revolution-in-teaching|https:\/\/adventofcomputing.libsyn.com\/episode-19-plato-part-1-a-revolution-in-teaching>\n\n<https:\/\/adventofcomputing.libsyn.com\/episode-20-plato-part-2-an-online-revolution|https:\/\/adventofcomputing.libsyn.com\/episode-20-plato-part-2-an-online-revolution>\n\nIt is discussed by Ted Nelson in Computer Lib\/Dream Machines.\n\nThere's some information at <http:\/\/platohistory.org\/|http:\/\/platohistory.org\/>\n\nThere's an emulated system you can connect to at <https:\/\/www.cyber1.org\/|https:\/\/www.cyber1.org\/>\n\nThe book The Friendly Orange Glow is the most complete history of PLATO that I know of, but I did not enjoy reading it. It was very confusing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7fd1bd5c536",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7fd1bd5c53681452a80086a54ebb2ad1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Personal",
            "real_name": "Personal Dynamic Media",
            "display_name": "Personal Dynamic Media",
            "team": "T5TCAFTA9",
            "name": "personaldynamicmedia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698353538.869689",
        "parent_user_id": "U05UBCXHWM6",
        "attachments": [
            {
                "from_url": "https:\/\/adventofcomputing.libsyn.com\/episode-19-plato-part-1-a-revolution-in-teaching",
                "service_icon": "https:\/\/assets.libsyn.com\/secure\/content\/39423464?height=57&amp;width=57",
                "thumb_url": "http:\/\/assets.libsyn.com\/show\/177941?height=250&width=250&overlay=true",
                "thumb_width": 250,
                "thumb_height": 250,
                "id": 1,
                "original_url": "https:\/\/adventofcomputing.libsyn.com\/episode-19-plato-part-1-a-revolution-in-teaching",
                "fallback": "Advent of Computing: Episode 19 - PLATO Part 1: A Revolution in Teaching",
                "text": "In&amp;nbsp; the 1960s a small project started at the University of Illinois. This project, called PLATO, would go on to pioneer a truly impressive amount of new technology, including the first plasma screen, MMO video games, and time-sharing. However, PLATO remains relatively unknown today. Like the show? Then why not head over and support me on Patreon. Perks include early access to future episodes, and stickers:&amp;nbsp; Important dates in this episode: 1952: ILLIAC Becomes Operational 1960: PLATO I Developed 1961: PLATO II Developed 1969: PLATO III Developed",
                "title": "Advent of Computing: Episode 19 - PLATO Part 1: A Revolution in Teaching",
                "title_link": "https:\/\/adventofcomputing.libsyn.com\/episode-19-plato-part-1-a-revolution-in-teaching",
                "service_name": "adventofcomputing.libsyn.com"
            },
            {
                "from_url": "https:\/\/adventofcomputing.libsyn.com\/episode-20-plato-part-2-an-online-revolution",
                "service_icon": "https:\/\/assets.libsyn.com\/secure\/content\/39423464?height=57&amp;width=57",
                "thumb_url": "http:\/\/assets.libsyn.com\/show\/177941?height=250&width=250&overlay=true",
                "thumb_width": 250,
                "thumb_height": 250,
                "id": 2,
                "original_url": "https:\/\/adventofcomputing.libsyn.com\/episode-20-plato-part-2-an-online-revolution",
                "fallback": "Advent of Computing: Episode 20 - PLATO Part 2: An Online Revolution",
                "text": "In the conclusion to our discussion of PLATO we look at the final incarnation of the system: PLATO IV. How did an educational machine turn into one of the earliest online communities? What was it like to use PLATO at it's height? Along the way we will look at the software, hardware, and video games that made PLATO so special. Like the show? Then why not head over and support me on Patreon. Perks include early access to future episodes, and stickers:&amp;nbsp; Important dates in this episode: 1964: Plasma Display Patented 1972: PLATO IV Launches at University of Illinois 1973: Empire, First MMO, Developed for PLATO IV",
                "title": "Advent of Computing: Episode 20 - PLATO Part 2: An Online Revolution",
                "title_link": "https:\/\/adventofcomputing.libsyn.com\/episode-20-plato-part-2-an-online-revolution",
                "service_name": "adventofcomputing.libsyn.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kZRqS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The podcast Advent of Computing had a couple good episodes about it.\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/adventofcomputing.libsyn.com\/episode-19-plato-part-1-a-revolution-in-teaching",
                                "text": "https:\/\/adventofcomputing.libsyn.com\/episode-19-plato-part-1-a-revolution-in-teaching"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/adventofcomputing.libsyn.com\/episode-20-plato-part-2-an-online-revolution",
                                "text": "https:\/\/adventofcomputing.libsyn.com\/episode-20-plato-part-2-an-online-revolution"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIt is discussed by Ted Nelson in Computer Lib\/Dream Machines.\n\nThere's some information at "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/platohistory.org\/",
                                "text": "http:\/\/platohistory.org\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThere's an emulated system you can connect to at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.cyber1.org\/",
                                "text": "https:\/\/www.cyber1.org\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe book The Friendly Orange Glow is the most complete history of PLATO that I know of, but I did not enjoy reading it. It was very confusing."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT",
                    "U02QC0PPER3"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U0625T25APL",
        "type": "message",
        "ts": "1698359657.979529",
        "edited": {
            "user": "U0625T25APL",
            "ts": "1698359678.000000"
        },
        "client_msg_id": "e7f17fc1-608f-4341-b666-9b6ac060ecd6",
        "text": "This I think is a very common issue, how do we measure success of anything? If a sports team doesn't win the championship is that season a failure? If someone only stays at a workplace for 12 months, is that a failure? If a project only has 1 or 2 adopters was is a failure?\n\nAs someone who builds ambitiously in my free time, I can honestly say that adoption is not a great metric for success in software. I've spend 6 years working on a single open source suite and so far I know that there is 1 actual user. I learned _sooo_ much along the way though and I choose that as the metric for success here because if I used adoption it would be an unequivocal failure.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9a48a6d67597",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-24\/6092703920932_9a48a6d675974f77b1bf_72.png",
            "first_name": "FreeMasen",
            "real_name": "FreeMasen",
            "display_name": "FreeMasen",
            "team": "T5TCAFTA9",
            "name": "r.f.masen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698349635.445229",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TWdHi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This I think is a very common issue, how do we measure success of anything? If a sports team doesn't win the championship is that season a failure? If someone only stays at a workplace for 12 months, is that a failure? If a project only has 1 or 2 adopters was is a failure?\n\nAs someone who builds ambitiously in my free time, I can honestly say that adoption is not a great metric for success in software. I've spend 6 years working on a single open source suite and so far I know that there is 1 actual user. I learned "
                            },
                            {
                                "type": "text",
                                "text": "sooo",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " much along the way though and I choose that as the metric for success here because if I used adoption it would be an unequivocal failure."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7",
                    "U05T675LXTM",
                    "UML4ZEKDK"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U05UBCXHWM6",
        "type": "message",
        "ts": "1698363580.822719",
        "client_msg_id": "370f27ea-3fbf-4c06-a741-7a25efbc7e42",
        "text": "Oh awesome! I've been playing around with <http:\/\/irata.online|irata.online>, which is a plato system you can use today!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1beaa0968ce5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-23\/5937523466869_1beaa0968ce502c4375e_72.jpg",
            "first_name": "Arcade",
            "real_name": "Arcade Wise",
            "display_name": "Arcade Wise",
            "team": "T5TCAFTA9",
            "name": "arcade.b.wise",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698353538.869689",
        "parent_user_id": "U05UBCXHWM6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AQIoW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh awesome! I've been playing around with irata.online, which is a plato system you can use today!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05UBCXHWM6",
        "type": "message",
        "ts": "1698363652.638419",
        "client_msg_id": "4a3fd0bb-7982-404e-a11b-97e81d8bc33f",
        "text": "I really loved A Friendly Orange Glow! What made it confusing for you",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1beaa0968ce5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-23\/5937523466869_1beaa0968ce502c4375e_72.jpg",
            "first_name": "Arcade",
            "real_name": "Arcade Wise",
            "display_name": "Arcade Wise",
            "team": "T5TCAFTA9",
            "name": "arcade.b.wise",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698353538.869689",
        "parent_user_id": "U05UBCXHWM6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zT0jq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really loved A Friendly Orange Glow! What made it confusing for you"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1698363720.559689",
        "client_msg_id": "b970a491-663d-4e94-aade-7b7dd6525000",
        "text": "I could never keep track of who was doing what in the stories he was telling.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7fd1bd5c536",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7fd1bd5c53681452a80086a54ebb2ad1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Personal",
            "real_name": "Personal Dynamic Media",
            "display_name": "Personal Dynamic Media",
            "team": "T5TCAFTA9",
            "name": "personaldynamicmedia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698353538.869689",
        "parent_user_id": "U05UBCXHWM6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2HGnC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I could never keep track of who was doing what in the stories he was telling."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PESXCC2E",
        "type": "message",
        "ts": "1698375032.336289",
        "client_msg_id": "f5fc2c41-de95-4e3c-9c59-b8c3804d2fdc",
        "text": "Yes, inheritance will paint you into a corner, but you don't need to use inheritance all the time. Delegation, interfaces, etc. Rust traits, Go delegation, Haskell typeclasses. Polymorphism without the inheritance. Also related, of course, is the expression problem when talking about OO vs non-OO. <https:\/\/www.giacomodebidda.com\/posts\/3-ways-to-solve-the-expression-problem>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0d9c7dcaa476",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-17\/6066889038289_0d9c7dcaa476f559eb42_72.jpg",
            "first_name": "Mike",
            "real_name": "Mike Austin",
            "display_name": "Mike Austin",
            "team": "T5TCAFTA9",
            "name": "mike.austin.1024",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698246162.762769",
        "parent_user_id": "U03LJBR6THT",
        "attachments": [
            {
                "from_url": "https:\/\/www.giacomodebidda.com\/posts\/3-ways-to-solve-the-expression-problem",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/lC39ifspIf4\/mqdefault.jpg",
                "thumb_width": 320,
                "thumb_height": 180,
                "service_icon": "https:\/\/www.giacomodebidda.com\/assets\/img\/favicon\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/www.giacomodebidda.com\/posts\/3-ways-to-solve-the-expression-problem",
                "fallback": "3 ways to solve the expression problem",
                "text": "The expression problem is about adding new capabilities to existing code without modifying it. In this article we discuss a few approaches to solve the expression problem.",
                "title": "3 ways to solve the expression problem",
                "title_link": "https:\/\/www.giacomodebidda.com\/posts\/3-ways-to-solve-the-expression-problem",
                "service_name": "giacomodebidda.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hZafC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, inheritance will paint you into a corner, but you don't need to use inheritance all the time. Delegation, interfaces, etc. Rust traits, Go delegation, Haskell typeclasses. Polymorphism without the inheritance. Also related, of course, is the expression problem when talking about OO vs non-OO. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.giacomodebidda.com\/posts\/3-ways-to-solve-the-expression-problem"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U05UBCXHWM6",
        "type": "message",
        "ts": "1698381153.533939",
        "client_msg_id": "AA9C0748-0B85-4E22-8339-2E10F1889ED0",
        "text": "Ah yeah, that’s always hard ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1beaa0968ce5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-23\/5937523466869_1beaa0968ce502c4375e_72.jpg",
            "first_name": "Arcade",
            "real_name": "Arcade Wise",
            "display_name": "Arcade Wise",
            "team": "T5TCAFTA9",
            "name": "arcade.b.wise",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698353538.869689",
        "parent_user_id": "U05UBCXHWM6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Sd6g7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah yeah, "
                            },
                            {
                                "type": "text",
                                "text": "that’s"
                            },
                            {
                                "type": "text",
                                "text": " always hard "
                            }
                        ]
                    }
                ]
            }
        ]
    }
]