[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1599726375.217000",
        "client_msg_id": "41871d15-a740-480a-bf9e-c0e7a9e4f7e1",
        "text": "As someone who comes from the antediluvian era when personal computers were _personal_, that was one of the most depressing threads I've read since joining this community. :disappointed_relieved:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FC3P\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As someone who comes from the antediluvian era when personal computers were "
                            },
                            {
                                "type": "text",
                                "text": "personal",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", that was one of the most depressing threads I've read since joining this community. "
                            },
                            {
                                "type": "emoji",
                                "name": "disappointed_relieved",
                                "unicode": "1f625"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U5STGTB3J",
                    "UA14TGLTC",
                    "UJBAJNFLK",
                    "U71PMQ1V0"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1599735053.217600",
        "client_msg_id": "0d188d36-6a61-4fcc-a16d-fb9ccbcea6c2",
        "text": "Yes! Sadly.\n\nThe more I learn about that \"antediluvian era\" the more I think we have this whole thing backwards. Back then, people like Alan Kay were trying to figure out how to make computers work for everybody. \"Programmer\" was just a synonym for \"computer user\".\n\nBut then we somehow accepted the idea that it's better to distinguish between so-called \"experts\" that can create all the software for \"not experts\" to use, even though these \"experts\" knew nothing of what the \"not experts\" really wanted to achieve. Primarily it seems, so we can sell a sh*tload of products and turn a planetary-scale nuclear attack-proof knowledge-sharing computer network into a shopping mall.\n\nThe result is that now everything is so complicated that not even the \"experts\" find it feasible to do most things with a computer themselves, and the \"not experts\" are now convinced that they can't possibly learn how to do anything useful with computers unless somebody else creates it for them.\n\nWe should've never stopped trying to make computers work for everyone.\nAnd we should've kept talking about the \"medium\" aspect of computing more.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VpLAR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes! Sadly.\n\nThe more I learn about that \"antediluvian era\" the more I think we have this whole thing backwards. Back then, people like Alan Kay were trying to figure out how to make computers work for everybody. \"Programmer\" was just a synonym for \"computer user\".\n\nBut then we somehow accepted the idea that it's better to distinguish between so-called \"experts\" that can create all the software for \"not experts\" to use, even though these \"experts\" knew nothing of what the \"not experts\" really wanted to achieve. Primarily it seems, so we can sell a sh*tload of products and turn a planetary-scale nuclear attack-proof knowledge-sharing computer network into a shopping mall.\n\nThe result is that now everything is so complicated that not even the \"experts\" find it feasible to do most things with a computer themselves, and the \"not experts\" are now convinced that they can't possibly learn how to do anything useful with computers unless somebody else creates it for them.\n\nWe should've never stopped trying to make computers work for everyone.\nAnd we should've kept talking about the \"medium\" aspect of computing more."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7",
                    "UA14TGLTC",
                    "UJBAJNFLK",
                    "UHWC9PXBL",
                    "U01661S9F34"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1599735459.217800",
        "client_msg_id": "98db7cb4-636c-4c1d-8230-fab9ba267c74",
        "text": "Ah, sorry, that turned into a not very constructive rant… I do appreciate that there are still a few people trying to make computers work for everyone, and in this community in particular.\n\nThis whole \"end-user programming\" thing (even though I've adapted to use the term because otherwise it just makes communication more complicated than it already is) just feels totally backwards to me — starting from a programmer mindset and trying to invent an easier way for non-programmers to do programmer things just seems wrong, wrong, wrong to me.\n\nWe need better options for non-programmers to teach us how to use computers in ways that are more useful and more relevant.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ons",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, sorry, that turned into a not very constructive rant… I do appreciate that there are still a few people trying to make computers work for everyone, and in this community in particular.\n\nThis whole \"end-user programming\" thing (even though I've adapted to use the term because otherwise it just makes communication more complicated than it already is) just feels totally backwards to me — starting from a programmer mindset and trying to invent an easier way for non-programmers to do programmer things just seems wrong, wrong, wrong to me.\n\nWe need better options for non-programmers to teach us how to use computers in ways that are more useful and more relevant."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U010328JA1E",
        "type": "message",
        "ts": "1599738222.218000",
        "client_msg_id": "4acc3eee-f496-4856-908f-bebc810211b6",
        "text": "<@U5STGTB3J> (last paragraph) have you expanded on it elsewhere?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga47904aa9b4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a47904aa9b4359ffea837d58cd82cfb0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Ricardo",
            "real_name": "Ricardo Medina",
            "display_name": "Ricardo Medina",
            "team": "T5TCAFTA9",
            "name": "rickmedina205",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D1B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " (last paragraph) have you expanded on it elsewhere?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1599743355.221900",
        "client_msg_id": "720065BC-0596-4150-94CF-87785BC61346",
        "text": "<@U010328JA1E> I have a lot more thoughts about it than I have written down anywhere (yet?). Every once in a while I keep rambling about it here. What I did write down elsewhere is this: <https:\/\/stefan-lesser.com\/2019\/12\/13\/democratize-programming\/|https:\/\/stefan-lesser.com\/2019\/12\/13\/democratize-programming\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HBkjO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U010328JA1E"
                            },
                            {
                                "type": "text",
                                "text": " I have a lot more thoughts about it than I have written down anywhere (yet?). Every once in a while I keep rambling about it here. What I did write down elsewhere is this: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/stefan-lesser.com\/2019\/12\/13\/democratize-programming\/",
                                "text": "https:\/\/stefan-lesser.com\/2019\/12\/13\/democratize-programming\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U010328JA1E"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1599748283.222600",
        "client_msg_id": "7c494a33-181b-4412-bfc7-8835fc72541c",
        "text": "<@U013ZLJARC7> Regarding the thread being depressing, I personally am more hopeful after the realization I made here <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1599666723187800?thread_ts=1599588394.135900&amp;cid=C5T9GPWFL> That I think a better place to look at how programmers use programming for themselves is to create things to share with others. E.g., it seems to me that things are like personal sites and side projects (sharing) are much more common than using programming to improve personal productivity. Correspondingly, it seems to me that the most fruitful area in end-user programming would likely be in making it as easy as possible for non-programmers to share their creations with others. I think the history of the web also reflects this, with the move towards services that remove the technical hurdles to sharing (e.g., Twitter\/Medium, for better or worse) and the current no-code movement.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1599666723187800?thread_ts=1599588394.135900&amp;cid=C5T9GPWFL",
                "fallback": "[September 9th, 2020 8:52 AM] services: The theme of the responses here seems to be: Only a small percentage of people are interested in using programming to improve their own workflow, *but much more people are interested in using programming to build things to share*. Which I think resolves my initial conundrum about programmers not using programming to solve their own problems: I was looking at scripting and customization, but what I probably should have been looking at is things like side projects and personal sites. Which to me seem much more popular than scripting\/customization?\n\nThere might be a lesson for end-using programming here too: It's probably better to focus on tools that let people create things for other people than it is to focus on anything that you'd call \"automation\".  For whatever reason most people aren't interested in automation (maybe just because it's not worth the time, e.g., the relevant xkcds)? But they are interested in building things to share, e.g., see the Hollow Knight example above. This seems consistent with the no code movement going on as well.",
                "ts": "1599666723.187800",
                "author_id": "UE0ETTCG7",
                "author_subname": "Roben Kleene",
                "channel_id": "C5T9GPWFL",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "The theme of the responses here seems to be: Only a small percentage of people are interested in using programming to improve their own workflow, *but much more people are interested in using programming to build things to share*. Which I think resolves my initial conundrum about programmers not using programming to solve their own problems: I was looking at scripting and customization, but what I probably should have been looking at is things like side projects and personal sites. Which to me seem much more popular than scripting\/customization?\n\nThere might be a lesson for end-using programming here too: It's probably better to focus on tools that let people create things for other people than it is to focus on anything that you'd call \"automation\".  For whatever reason most people aren't interested in automation (maybe just because it's not worth the time, e.g., the relevant xkcds)? But they are interested in building things to share, e.g., see the Hollow Knight example above. This seems consistent with the no code movement going on as well.",
                "author_name": "Roben Kleene",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/UE0ETTCG7",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2018-11-08\/475666469605_2d5718395ee31c13bb5d_48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1599666723187800?thread_ts=1599588394.135900&amp;cid=C5T9GPWFL",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9v2a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " Regarding the thread being depressing, I personally am more hopeful after the realization I made here "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1599666723187800?thread_ts=1599588394.135900&cid=C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": " That I think a better place to look at how programmers use programming for themselves is to create things to share with others. E.g., it seems to me that things are like personal sites and side projects (sharing) are much more common than using programming to improve personal productivity. Correspondingly, it seems to me that the most fruitful area in end-user programming would likely be in making it as easy as possible for non-programmers to share their creations with others. I think the history of the web also reflects this, with the move towards services that remove the technical hurdles to sharing (e.g., Twitter\/Medium, for better or worse) and the current no-code movement."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "tada",
                "users": [
                    "UA14TGLTC",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1599752170.223400",
        "client_msg_id": "5c072962-7625-445a-adec-82abbd5ef96c",
        "text": "I am from that antediluvian era as well, my first computer (<https:\/\/en.wikipedia.org\/wiki\/Colour_Genie>) was so personal that it didn't even have any connection to the outside world other than via physical artefacts (cassette tapes). But I never left the universe of end-user programming. All the software I write is for my own use. Often published for sharing with others, but never written exclusively for that purpose. From this perspective, the evolution of the last 30 years looks like computers becoming ever more powerful and at the same time ever more difficult to use. I spend more time today on administrative overhead (software updates, ...) than I did 30 years ago.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TUV\/n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am from that antediluvian era as well, my first computer ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Colour_Genie"
                            },
                            {
                                "type": "text",
                                "text": ") was so personal that it didn't even have any connection to the outside world other than via physical artefacts (cassette tapes). But I never left the universe of end-user programming. All the software I write is for my own use. Often published for sharing with others, but never written exclusively for that purpose. From this perspective, the evolution of the last 30 years looks like computers becoming ever more powerful and at the same time ever more difficult to use. I spend more time today on administrative overhead (software updates, ...) than I did 30 years ago."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7",
                    "UA14TGLTC",
                    "U8A5MS6R1"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1599758691.223800",
        "client_msg_id": "9ae52631-d641-456f-b748-6b655677a1de",
        "text": "Related to Roben's point, I've always thought it should be easy to share workspace customizations and the like as well as code. Config packages should be easy to create, install, and uninstall.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cp0wv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Related to Roben's point, I've always thought it should be easy to share workspace customizations and the like as well as code. Config packages should be easy to create, install, and uninstall."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599759722.224400",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1599759914.000000"
        },
        "client_msg_id": "ce86c7fd-9a16-46bd-9c9c-4e38dc652a36",
        "text": "<@U016VUZGUUQ> I think the right way to share workspace customization is as \"naked code\". Copy-pasting fragments. One link from my OP above is relevant: <https:\/\/mastodon.social\/@akkartik\/103994830568601931>. My argument goes like this:\n\n* Settings often grow in an unruly fashion compared to codebases. We're more careful about organizing modules in a repo than we are in adding knobs to a config file. Even though the modules are internal details and the config file is externally visible.\n* Settings in config files often depend on each other in subtle, hard-to-debug ways.\n* Creating packages to manage customizations requires dealing with these dependencies. That creates a lot of bloat to sense lots of different combinations of settings and behave appropriately.\n* The bloat hinders further customization. People start to rely more on packages created by others, and the muscle of doing your own customization atrophies.\n\nBottomline: If you make something look polished, people will assume someone else should make it. If you make it look half-assed, it will encourage, even _beg for_, helping oneself. This is a case where worse is actually better, not just pragmatically but really.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "service_name": "Mastodon",
                "title": "Kartik Agaram (@akkartik@mastodon.social)",
                "title_link": "https:\/\/mastodon.social\/@akkartik\/103994830568601931",
                "text": "*Yak shave of the day* My editor shows signs on the margins to indicate changes since last commit. I wanted it to show diffs from an arbitrary commit. This feature request had been understandably refused a year ago: <https:\/\/github.com\/mhinz\/vim-signify\/issues\/232> So I fixed it for myself, in 3 easy steps: 1. Find a simpler version: 1650 =&gt; 900 lines. 2. Delete even more code: -600 lines. 3. Add the feature: +2 lines. The final result only works for me. I believe we should share raw VimScript, not packages.",
                "fallback": "Mastodon: Kartik Agaram (@akkartik@mastodon.social)",
                "thumb_url": "https:\/\/files.mastodon.social\/accounts\/avatars\/000\/255\/426\/original\/92e4e4f2f51a1701.png",
                "from_url": "https:\/\/mastodon.social\/@akkartik\/103994830568601931",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/mastodon.social\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/mastodon.social\/@akkartik\/103994830568601931"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6LHI3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " I think the right way to share workspace customization is as \"naked code\". Copy-pasting fragments. One link from my OP above is relevant: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/mastodon.social\/@akkartik\/103994830568601931"
                            },
                            {
                                "type": "text",
                                "text": ". My argument goes like this:\n\n* Settings often grow in an unruly fashion compared to codebases. We're more careful about organizing modules in a repo than we are in adding knobs to a config file. Even though the modules are internal details and the config file is externally visible.\n* Settings in config files often depend on each other in subtle, hard-to-debug ways.\n* Creating packages to manage customizations requires dealing with these dependencies. That creates a lot of bloat to sense lots of different combinations of settings and behave appropriately.\n* The bloat hinders further customization. People start to rely more on packages created by others, and the muscle of doing your own customization atrophies.\n\nBottomline: If you make something look polished, people will assume someone else should make it. If you make it look half-assed, it will encourage, even "
                            },
                            {
                                "type": "text",
                                "text": "beg for",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", helping oneself. This is a case where worse is actually better, not just pragmatically but really."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1599759839.224700",
        "client_msg_id": "60fc1841-9bbb-45c3-919f-c4787a20c846",
        "text": "<@UJBAJNFLK> I, too, still write tools for myself constantly, including little 10-15 minute programs meant to be thrown away. All I could think looking at that thread is that if one's normal toolchain makes producing nonce personal code that difficult, something has gone terribly wrong.\n\n<@UE0ETTCG7> The first time we used Maria.cloud to teach a class of novices we added a feature where any \"cell\" in a notebook could be shared as a an \"app\" -- a view onto the whole notebook via an interactive graphical cell -- with a single mouse click. At the end of the first day everyone had made a game or some art, and they loved sending around their creations. It was great. So, yes, this is definitely something \"non-programmers\" (rather, not yet programmers!) respond to quite readily.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qvB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " I, too, still write tools for myself constantly, including little 10-15 minute programs meant to be thrown away. All I could think looking at that thread is that if one's normal toolchain makes producing nonce personal code that difficult, something has gone terribly wrong.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UE0ETTCG7"
                            },
                            {
                                "type": "text",
                                "text": " The first time we used Maria.cloud to teach a class of novices we added a feature where any \"cell\" in a notebook could be shared as a an \"app\" -- a view onto the whole notebook via an interactive graphical cell -- with a single mouse click. At the end of the first day everyone had made a game or some art, and they loved sending around their creations. It was great. So, yes, this is definitely something \"non-programmers\" (rather, not yet programmers!) respond to quite readily."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1599760219.225200",
        "client_msg_id": "0a201753-9c34-4345-bc38-81b6a927ce5a",
        "text": "Aye aye aye, what a cool idea, a social networking platform based around sharing little interactive bits of code. Twitter x CodePen",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9ZhZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Aye aye aye, what a cool idea, a social networking platform based around sharing little interactive bits of code. Twitter x CodePen"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1599761138.225400",
        "client_msg_id": "c0a3ad68-bf8a-4482-9533-55c893d86886",
        "text": "<@UCUSW7WVD> you argument is compelling for text config files as they are today. However, looking to the future, blobs of text config can't be the only way people make customizations. The whole hidden dependency thing especially needs to die (that alone would take you a long way). Basically what I mean by \"it should be easy\" is that the obstacles in your post should be defeated. :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M=TE6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " you argument is compelling for text config files as they are today. However, looking to the future, blobs of text config can't be the only way people make customizations. The whole hidden dependency thing especially needs to die (that alone would take you a long way). Basically what I mean by \"it should be easy\" is that the obstacles in your post should be defeated. :)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599762670.225800",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1599762767.000000"
        },
        "client_msg_id": "b38fc80b-571c-4334-94ad-12b8dcad552f",
        "text": "Totally agreed. But it's not really about text. In fact, text helps here because it's still easier in 2020 to throw text into a random text box than it is to attach files to it.\n\nThe real problem is the indisciplined dependencies, and it's a devilishly subtle problem. For the obstacles to be defeated we need somehow for everybody to do \"the right thing\" -- even after we figure out the rules of engagement. I don't know how to even start attacking that social-organization problem.\n\nIn the meantime, it seems to me the best way to share customization is to encourage sharing what works for you, with the expectation that others will need to tweak it to get it working for themselves. It's fiddly and annoying, but still on balance better than the current world of pervasive learned helplessness.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6xIJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Totally agreed. But it's not really about text. In fact, text helps here because it's still easier in 2020 to throw text into a random text box than it is to attach files to it.\n\nThe real problem is the indisciplined dependencies, and it's a devilishly subtle problem. For the obstacles to be defeated we need somehow for everybody to do \"the right thing\" -- even after we figure out the rules of engagement. I don't know how to even start attacking that social-organization problem.\n\nIn the meantime, it seems to me the best way to share customization is to encourage sharing what works for you, with the expectation that others will need to tweak it to get it working for themselves. It's fiddly and annoying, but still on balance better than the current world of pervasive learned helplessness."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U016VUZGUUQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1599777821.227000",
        "edited": {
            "user": "U71PMQ1V0",
            "ts": "1599777838.000000"
        },
        "client_msg_id": "072e0fff-31d5-4975-8e01-a4d9772e62f3",
        "text": "I don't think the explanation even needs to be specific to programming. There has been a long-term trend towards people doing less and less for themselves, and instead satisfying more and more of their desires through market interactions. Cooking, cleaning, basic repairs, altering clothing, music, story-telling etc are all often outsourced now. End-user programming is swimming against that tide.\n\nMaybe there is inspiration to be found by looking at surviving knots of diy culture, where people are still interested in learning new skills. Eg my old housemate used to hang out at a community carpentry workshop.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iPc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't think the explanation even needs to be specific to programming. There has been a long-term trend towards people doing less and less for themselves, and instead satisfying more and more of their desires through market interactions. Cooking, cleaning, basic repairs, altering clothing, music, story-telling etc are all often outsourced now. End-user programming is swimming against that tide.\n\nMaybe there is inspiration to be found by looking at surviving knots of diy culture, where people are still interested in learning new skills. Eg my old housemate used to hang out at a community carpentry workshop."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UMWF81HTP",
                    "UJBAJNFLK",
                    "UJ6LDMMN0",
                    "UA14TGLTC"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UMWF81HTP",
        "type": "message",
        "ts": "1599782167.228000",
        "client_msg_id": "76b1f1c0-2d08-4b41-8171-1aa7e9f808a9",
        "text": "My perspective: I did more \"end-user programming\" before I was a programmer, but knew enough programming to be useful. This was at an office job, where everything ran on Excel. I was doing lots of web scraping, data processing, making small tools for tedious tasks, etc.\n\nThen I got a job doing programming, and didn't have any material problems to solve with programming any more!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4022671f3400",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-03\/775814402657_4022671f340032b9eb75_72.jpg",
            "first_name": "yoshiki",
            "real_name": "yoshiki",
            "display_name": "yoshiki",
            "team": "T5TCAFTA9",
            "name": "yoshikischmitz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599588394.135900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ryoE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My perspective: I did more \"end-user programming\" before I was a programmer, but knew enough programming to be useful. This was at an office job, where everything ran on Excel. I was doing lots of web scraping, data processing, making small tools for tedious tasks, etc.\n\nThen I got a job doing programming, and didn't have any material problems to solve with programming any more!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up_2",
                "users": [
                    "U01A0KANUUU",
                    "UFPPABQ7P"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UMWF81HTP",
        "type": "message",
        "ts": "1599782421.228200",
        "client_msg_id": "5a827eee-992a-42b8-9f58-6a769a915a14",
        "text": "So, to the question:\n_\"Does end-user programming ever have a chance of succeeding for non-programmers to solve their problems if programmers themselves aren't using programming to solve their problems?\"_\n\nmy answer is:\n_\"yes! Non-programmers have way more problems solvable with programming than programmers do\"_",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4022671f3400",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-03\/775814402657_4022671f340032b9eb75_72.jpg",
            "first_name": "yoshiki",
            "real_name": "yoshiki",
            "display_name": "yoshiki",
            "team": "T5TCAFTA9",
            "name": "yoshikischmitz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599588394.135900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b3CD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So, to the question:\n"
                            },
                            {
                                "type": "text",
                                "text": "\"Does end-user programming ever have a chance of succeeding for non-programmers to solve their problems if programmers themselves aren't using programming to solve their problems?\"",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nmy answer is:\n"
                            },
                            {
                                "type": "text",
                                "text": "\"yes! Non-programmers have way more problems solvable with programming than programmers do\"",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UJBAJNFLK",
                    "UJ6LDMMN0",
                    "U5STGTB3J",
                    "UML4ZEKDK",
                    "UHWC9PXBL",
                    "UFPPABQ7P"
                ],
                "count": 7
            }
        ]
    },
    {
        "user": "UMWF81HTP",
        "type": "message",
        "ts": "1599783090.232700",
        "edited": {
            "user": "UMWF81HTP",
            "ts": "1599783122.000000"
        },
        "client_msg_id": "C103F8B9-B536-4E8B-A5EC-8976D436B7AF",
        "text": "To the specific point in the original post about some programmers not customizing their programming tools:\n\none hypothesis is that programming tooling is already pretty well optimized for the output that the industry wants from programmers. Programmers are customers too: It only takes a small amount of dedicated people making tooling like IDEs, text editors, plugins etc for the majority to benefit from the care and thought put into these tools. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4022671f3400",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-03\/775814402657_4022671f340032b9eb75_72.jpg",
            "first_name": "yoshiki",
            "real_name": "yoshiki",
            "display_name": "yoshiki",
            "team": "T5TCAFTA9",
            "name": "yoshikischmitz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599588394.135900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yjV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To the specific point in the original post about some programmers not customizing their programming tools:\n\none hypothesis is that programming tooling is already pretty well optimized for the output that the industry wants from programmers. Programmers are customers too: It only takes a small amount of dedicated people making tooling like IDEs, text editors, plugins etc for the majority to benefit from the care and thought put into these tools. "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UP00ZLX6G",
                    "UML4ZEKDK",
                    "U01A0KANUUU"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UFPRPSA4S",
        "type": "message",
        "ts": "1599805535.266400",
        "edited": {
            "user": "UFPRPSA4S",
            "ts": "1599805615.000000"
        },
        "client_msg_id": "4a3b3d08-2bd6-4715-9930-92b30fd1f02c",
        "text": "Broad question here.\nDo people here know of any tools that separates the complexity component of a program from the underlying behavior it would eventually produce, and then let you manipulate code so the behavior is fixed? By behavior I mean something like the user-facing behavior of a program, or its effect on some data. Its a flexible concept in my mind. A large portion of programming seems to be rewriting code so it maintains the same behavior, but is then also extensible in some way. Factoring code is an example of this activity, but you could also rewrite code to produce the same behavior which is not a factorization of the original code. To be concrete, you could factor in two different ways, so each factorization would produce the same behavior but neither is a factorization of one another. Moving back to the unfactored code and factoring in the other way is then a means of transforming the code to produce the same behavior that isn't mere factoring.\n(picture: code&lt;--factoring&lt;--code--&gt;factoring--&gt;code)\n(this is very reminiscent of factoring in abstract algebra and you could imagine an algebra about manipulating the code in this way, and going down this road you can ask whether two programs will produce the same behavior implies there is a common factorization but this might be another conversation).\n\nI'm curious about this question mostly as a proxy for a related question in math: How can you transform one proof into an equivalent proof? This is a slippery concept because nobody knows how to make precise the idea of \"equivalence of proofs\". If you know about Hilbert and his 23 problems you might find it interesting that he originally had a 24th problem on the equivalence of proofs! Even though the idea is notoriously difficult to pin down, I think it is intuitive enough to take a pragmatic stance and ask how you could go about implementing technology to carry out these transformations. This is important to me because in math we \"factor\" proofs all the time and often compare proofs to determine the essential and incidental aspects of each. So what I'm really looking for is any techniques or perspectives in the domain of programming that could be taken back into mathematics. I've seen some approaches down at the level of the lambda calculus but I haven't found them useful. I think a pragmatic\/experimental approach is better than a theoretical approach at this point.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5f4ac5375e5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f5f4ac5375e539e50ceedb08f65e9dd3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Robin Allison",
            "display_name": "Robin",
            "team": "T5TCAFTA9",
            "name": "robinps2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599805535.266400",
        "reply_count": 9,
        "reply_users_count": 7,
        "latest_reply": "1600241417.465000",
        "reply_users": [
            "U013ZLJARC7",
            "UUB7RA7PF",
            "U01AN8DFFBN",
            "UA14TGLTC",
            "UFPRPSA4S",
            "U01661S9F34",
            "UD6EXQVM0"
        ],
        "replies": [
            {
                "user": "U013ZLJARC7",
                "ts": "1599808252.266700"
            },
            {
                "user": "UUB7RA7PF",
                "ts": "1599808898.267200"
            },
            {
                "user": "U01AN8DFFBN",
                "ts": "1599813645.268000"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1599816204.268200"
            },
            {
                "user": "UFPRPSA4S",
                "ts": "1599844798.273600"
            },
            {
                "user": "UFPRPSA4S",
                "ts": "1599846324.273800"
            },
            {
                "user": "U01661S9F34",
                "ts": "1599850934.278400"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1599895801.289600"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1600241417.465000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bc3O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Broad question here.\nDo people here know of any tools that separates the complexity component of a program from the underlying behavior it would eventually produce, and then let you manipulate code so the behavior is fixed? By behavior I mean something like the user-facing behavior of a program, or its effect on some data. Its a flexible concept in my mind. A large portion of programming seems to be rewriting code so it maintains the same behavior, but is then also extensible in some way. Factoring code is an example of this activity, but you could also rewrite code to produce the same behavior which is not a factorization of the original code. To be concrete, you could factor in two different ways, so each factorization would produce the same behavior but neither is a factorization of one another. Moving back to the unfactored code and factoring in the other way is then a means of transforming the code to produce the same behavior that isn't mere factoring.\n(picture: code<--factoring<--code-->factoring-->code)\n(this is very reminiscent of factoring in abstract algebra and you could imagine an algebra about manipulating the code in this way, and going down this road you can ask whether two programs will produce the same behavior implies there is a common factorization but this might be another conversation).\n\nI'm curious about this question mostly as a proxy for a related question in math: How can you transform one proof into an equivalent proof? This is a slippery concept because nobody knows how to make precise the idea of \"equivalence of proofs\". If you know about Hilbert and his 23 problems you might find it interesting that he originally had a 24th problem on the equivalence of proofs! Even though the idea is notoriously difficult to pin down, I think it is intuitive enough to take a pragmatic stance and ask how you could go about implementing technology to carry out these transformations. This is important to me because in math we \"factor\" proofs all the time and often compare proofs to determine the essential and incidental aspects of each. So what I'm really looking for is any techniques or perspectives in the domain of programming that could be taken back into mathematics. I've seen some approaches down at the level of the lambda calculus but I haven't found them useful. I think a pragmatic\/experimental approach is better than a theoretical approach at this point."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]