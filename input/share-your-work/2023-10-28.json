[
    {
        "text": "I’ve been working on a tool to get a high level view of an entire typescript codebase to help me understand\/navigate it.\nIt shows all the functions and interfaces. Every `interface` is represented by a color, and the signature of a function is shown with these colors.\n\nI need some help with a better algorithm to transform the name of the `type` into to a color. e.g. the type `string` -&gt; blue, `int` -&gt; green, etc.\nThe problem is that I’m not sure what I want the output to be, how should the color space be distributed? how should colors be clustered?\n\nI think I can copy what code editors use for `semantic highlighting`, but I haven’t been able to find an implementation of it.\nDoes anyone have ideas on what I should search for?\nHappy to explain more, if it’s not clear.\n\nPS. Here is how a codebase currently looks. White rectangles are files, interfaces are shown on the top, and functions on the bottom",
        "files": [
            {
                "id": "F063BQWJFDJ",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U85HCL7JP",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8vzq6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve been working on a tool to get a high level view of an entire typescript codebase to help me understand\/navigate it.\nIt shows all the functions and interfaces. Every "
                            },
                            {
                                "type": "text",
                                "text": "interface",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is represented by a color, and the signature of a function is shown with these colors.\n\nI need some help with a better algorithm to transform the name of the "
                            },
                            {
                                "type": "text",
                                "text": "type",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " into to a color. e.g. the type "
                            },
                            {
                                "type": "text",
                                "text": "string",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " -> blue, "
                            },
                            {
                                "type": "text",
                                "text": "int",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " -> green, etc.\nThe problem is that I’m not sure what I want the output to be, how should the color space be distributed? how should colors be clustered?\n\nI think I can copy what code editors use for "
                            },
                            {
                                "type": "text",
                                "text": "semantic highlighting",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but I haven’t been able to find an implementation of it.\nDoes anyone have ideas on what I should search for?\nHappy to explain more, if it’s not clear.\n\nPS. Here is how a codebase currently looks. White rectangles are files, interfaces are shown on the top, and functions on the bottom"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1698559423.331329",
        "client_msg_id": "028fd6b7-a551-4d7c-9518-ea6c8050a755",
        "thread_ts": "1698559423.331329",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1699725534.629889",
        "reply_users": [
            "U0625T25APL",
            "U02QC0PPER3",
            "U85HCL7JP"
        ],
        "replies": [
            {
                "user": "U0625T25APL",
                "ts": "1698602304.861429"
            },
            {
                "user": "U02QC0PPER3",
                "ts": "1699173982.456919"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1699725534.629889"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U05PESXCC2E",
                    "UMV4B97GT"
                ],
                "count": 2
            },
            {
                "name": "sunglasses",
                "users": [
                    "U0123H7JRDM"
                ],
                "count": 1
            },
            {
                "name": "exploding_head",
                "users": [
                    "U03R0B9U1GD"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U02B6FQKZK8"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UFEQUBNNT",
                    "UMV4B97GT",
                    "UCUSW7WVD",
                    "U04QB9V2RNG"
                ],
                "count": 4
            }
        ]
    }
]