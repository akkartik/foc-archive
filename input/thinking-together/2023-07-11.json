[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1689059299.834069",
        "client_msg_id": "3ad9a799-3974-4fc1-91bf-b06d8fd20100",
        "text": ":100: Mentorship\/apprenticeship is very powerful and under-utilized in tech culture.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689017004.403839",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bolAb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "100",
                                "unicode": "1f4af"
                            },
                            {
                                "type": "text",
                                "text": " Mentorship\/apprenticeship is very powerful and under-utilized in tech culture."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U05BRNRAC4V",
                    "U03LJBR6THT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U5T9JLUAE",
        "type": "message",
        "ts": "1689078517.033499",
        "edited": {
            "user": "U5T9JLUAE",
            "ts": "1689078767.000000"
        },
        "client_msg_id": "a72bd6b5-a785-4874-9e83-0b1f09dcb41b",
        "text": "I think it's an inertia thing where it's easier to do things the way most people have been doing things. For a new company that is probably focused on just surviving, trying a \"new\" model of training like apprenticeships might seem unnecessarily risky. For a mature company the existing way of doing things could be too ingrained and the incentives for any individual to change things might not be there. Also in tech there's a perception (and  reality?) people change jobs more frequently so putting a lot of investment into an individual's initial education would probably not be worth it unless that person had to stay at the company for a certain period of time.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cf8e20929548",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-07-03\/5521238650675_cf8e20929548a602055a_72.jpg",
            "first_name": "Irvin",
            "real_name": "Irvin Hwang",
            "display_name": "irvin",
            "team": "T5TCAFTA9",
            "name": "irvin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689017004.403839",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "v3j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it's an inertia thing where it's easier to do things the way most people have been doing things. For a new company that is probably focused on just surviving, trying a \"new\" model of training like apprenticeships might seem unnecessarily risky. For a mature company the existing way of doing things could be too ingrained and the incentives for any individual to change things might not be there. Also in tech there's a perception (and  reality?) people change jobs more frequently so putting a lot of investment into an individual's initial education would probably not be worth it unless that person had to stay at the company for a certain period of time."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03LJBR6THT",
        "type": "message",
        "ts": "1689087507.222709",
        "edited": {
            "user": "U03LJBR6THT",
            "ts": "1689087582.000000"
        },
        "client_msg_id": "c26c818a-b875-4fb8-ad25-fa8ba92f9f3d",
        "text": "It's not exactly what you're talking about, but html might actually work for aspects of this. <https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1689083336878249>\n\nThere's a part I didn't fully describe which is a system to swap out nodes with alternate representations which know how to turn themselves back into ast nodes. For example, replace all function calls to `my_color_picker` with `&lt;input type=color&gt;`  &lt;- can think of these almost as \"visual\/dynamic macros\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0afa5db0b2d5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-07-06\/5524013698279_0afa5db0b2d593650747_72.jpg",
            "first_name": "Marcelle",
            "real_name": "Marcelle Rusu",
            "display_name": "Marcelle Rusu",
            "team": "T5TCAFTA9",
            "name": "marcelrusu0",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688176784.223859",
        "parent_user_id": "U8A5MS6R1",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1689083336878249",
                "ts": "1689083336.878249",
                "author_id": "U03LJBR6THT",
                "channel_id": "CCL5VVBAN",
                "channel_team": "T5TCAFTA9",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T5TCAFTA9",
                        "channel": "CCL5VVBAN",
                        "ts": "1689083336.878249",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "H862r",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "I've started to work on a structural editor for my language coil "
                                                },
                                                {
                                                    "type": "link",
                                                    "url": "https:\/\/coil-editor.netlify.app\/"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "\n\nIt's still early & buggy, but the idea is to directly turn the AST into html with contenteditable for leaf attribute nodes.\n\nSo an expression like:\n"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "document.body",
                                                    "style": {
                                                        "code": true
                                                    }
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "\nwhich is the coil AST:\n"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "rich_text_preformatted",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "{type: :property_lookup, lhs: {type: :id_lookup, name: \"document\"}, property: \"body\"}"
                                                }
                                            ],
                                            "border": 0
                                        },
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "Turns into:\n"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "rich_text_preformatted",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "<div data-kind=\"property_lookup\">\n  <div data-attr=\"lhs\">\n    <div data-kind=\"id_lookup\">\n      <div data-attr=\"name\" contenteditable>document<\/div>\n    <\/div>\n  <\/div>\n  <div data-attr=\"property\" contenteditable>body<\/div>\n<\/div>"
                                                }
                                            ],
                                            "border": 0
                                        },
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "\nAnd now we can easily query this expression with css selectors. So all the syntax highlighting AND formatting is done in css. It also means that static analysis can be done using querySelector."
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1689083336878249",
                "fallback": "[July 11th, 2023 6:48 AM] marcelrusu0: I've started to work on a structural editor for my language coil <https:\/\/coil-editor.netlify.app\/>\n\nIt's still early &amp; buggy, but the idea is to directly turn the AST into html with contenteditable for leaf attribute nodes.\n\nSo an expression like:\n`document.body`\nwhich is the coil AST:\n```{type: :property_lookup, lhs: {type: :id_lookup, name: \"document\"}, property: \"body\"}```\nTurns into:\n```&lt;div data-kind=\"property_lookup\"&gt;\n  &lt;div data-attr=\"lhs\"&gt;\n    &lt;div data-kind=\"id_lookup\"&gt;\n      &lt;div data-attr=\"name\" contenteditable&gt;document&lt;\/div&gt;\n    &lt;\/div&gt;\n  &lt;\/div&gt;\n  &lt;div data-attr=\"property\" contenteditable&gt;body&lt;\/div&gt;\n&lt;\/div&gt;```\nAnd now we can easily query this expression with css selectors. So all the syntax highlighting AND formatting is done in css. It also means that static analysis can be done using querySelector.",
                "text": "I've started to work on a structural editor for my language coil <https:\/\/coil-editor.netlify.app\/>\n\nIt's still early &amp; buggy, but the idea is to directly turn the AST into html with contenteditable for leaf attribute nodes.\n\nSo an expression like:\n`document.body`\nwhich is the coil AST:\n```{type: :property_lookup, lhs: {type: :id_lookup, name: \"document\"}, property: \"body\"}```\nTurns into:\n```&lt;div data-kind=\"property_lookup\"&gt;\n  &lt;div data-attr=\"lhs\"&gt;\n    &lt;div data-kind=\"id_lookup\"&gt;\n      &lt;div data-attr=\"name\" contenteditable&gt;document&lt;\/div&gt;\n    &lt;\/div&gt;\n  &lt;\/div&gt;\n  &lt;div data-attr=\"property\" contenteditable&gt;body&lt;\/div&gt;\n&lt;\/div&gt;```\nAnd now we can easily query this expression with css selectors. So all the syntax highlighting AND formatting is done in css. It also means that static analysis can be done using querySelector.",
                "author_name": "Marcelle Rusu (they\/them)",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/U03LJBR6THT",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2023-07-06\/5524013698279_0afa5db0b2d593650747_48.jpg",
                "author_subname": "Marcelle Rusu (they\/them)",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gjqek",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's not exactly what you're talking about, but html might actually work for aspects of this. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1689083336878249"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThere's a part I didn't fully describe which is a system to swap out nodes with alternate representations which know how to turn themselves back into ast nodes. For example, replace all function calls to "
                            },
                            {
                                "type": "text",
                                "text": "my_color_picker",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " with "
                            },
                            {
                                "type": "text",
                                "text": "<input type=color>",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  <- can think of these almost as \"visual\/dynamic macros\""
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U02QC0PPER3",
                    "U8A5MS6R1"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U03LJBR6THT",
        "type": "message",
        "ts": "1689090398.860159",
        "edited": {
            "user": "U03LJBR6THT",
            "ts": "1689090418.000000"
        },
        "client_msg_id": "5537e739-ca31-45f8-965b-71b2236fe258",
        "text": "I really do think so, especially with people starting their first programming job remotely its tough.\n\nThere's another aspect I encountered is I don't know how to mentor people properly &amp; I realized I don't think many people do. There's no gold standard I can point to &amp; say, we should do it this way.\n\nMore so, when I've gone and done this myself, I essentially got told to stop from my managers, but never got provided tools\/ideas to do it better.\n\nEspecially important for those in under represented groups (even more with low confidence). My biggest concern is capable people getting completely turned off tech due to cultural problems. I've experienced it, and I know many who have.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0afa5db0b2d5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-07-06\/5524013698279_0afa5db0b2d593650747_72.jpg",
            "first_name": "Marcelle",
            "real_name": "Marcelle Rusu",
            "display_name": "Marcelle Rusu",
            "team": "T5TCAFTA9",
            "name": "marcelrusu0",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689017004.403839",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X=8\/v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really do think so, especially with people starting their first programming job remotely its tough.\n\nThere's another aspect I encountered is I don't know how to mentor people properly & I realized I don't think many people do. There's no gold standard I can point to & say, we should do it this way.\n\nMore so, when I've gone and done this myself, I essentially got told to stop from my managers, but never got provided tools\/ideas to do it better.\n\nEspecially important for those in under represented groups (even more with low confidence). My biggest concern is capable people getting completely turned off tech due to cultural problems. I've experienced it, and I know many who have."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U055V4HCHU7",
        "type": "message",
        "ts": "1689093774.275849",
        "client_msg_id": "022dd7d8-21ae-4d34-a0d7-25f292dd1cb1",
        "text": "Lots to respond to\n\n&gt; there are also historical examples of one phasing into the other\n<@UMQ6LR9NZ> I'd love more context here if you have some.\n\n&gt; We have a person starting an apprenticeship with us soon!\n<@U03R0B9U1GD> in your opinion, where's the line between internship and apprenticeship? I ask only because you used the first person plural here, so I'd imagine your apprentice will learn from a few folks and receive instruction from a team.\n\n&gt; devs don't want to be mentored. Some young people, fresh to learning the craft are open to it, but not all. And while skepticism is important, ego is the main barrier.\nThis is an interesting callout <@U013WBS1B1C>. I hadn't considered the ego part. I try to keep a beginners mindset at all times but probably fail at it more often than not. I'll have to think more on this -- I think you're digging at a cultural issue that I've noticed but never formally identified\n\n&gt; Dave Hoover and Corey Haines have a lot to say on this subject.... Happy to put you in touch if interested\nI haven't read this but certainly will put it on the reading list. Might even reach out for that conversation if I have follow-ups -- thanks!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "141ca9fd8fff",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-04\/5210750326597_141ca9fd8fff00418f9b_72.jpg",
            "first_name": "Walker",
            "real_name": "Walker Griggs",
            "display_name": "Walker Griggs",
            "team": "T5TCAFTA9",
            "name": "walker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689017004.403839",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UrWpe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lots to respond to\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there are also historical examples of one phasing into the other"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UMQ6LR9NZ"
                            },
                            {
                                "type": "text",
                                "text": " I'd love more context here if you have some.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We have a person starting an apprenticeship with us soon!"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U03R0B9U1GD"
                            },
                            {
                                "type": "text",
                                "text": " in your opinion, where's the line between internship and apprenticeship? I ask only because you used the first person plural here, so I'd imagine your apprentice will learn from a few folks and receive instruction from a team.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "devs don't want to be mentored. Some young people, fresh to learning the craft are open to it, but not all. And while skepticism is important, ego is the main barrier."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is an interesting callout "
                            },
                            {
                                "type": "user",
                                "user_id": "U013WBS1B1C"
                            },
                            {
                                "type": "text",
                                "text": ". I hadn't considered the ego part. I try to keep a beginners mindset at all times but probably fail at it more often than not. I'll have to think more on this -- I think you're digging at a cultural issue that I've noticed but never formally identified\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Dave Hoover and Corey Haines have a lot to say on this subject.... Happy to put you in touch if interested"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven't read this but certainly will put it on the reading list. Might even reach out for that conversation if I have follow-ups -- thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U055V4HCHU7",
        "type": "message",
        "ts": "1689094044.869959",
        "client_msg_id": "fc35054f-8e84-4b9e-91e9-f30114415af5",
        "text": "&gt; Also in tech there's a perception (and reality?) people change jobs more frequently so putting a lot of investment into an individual's initial education\nI recently moved into a fairly specialized space (video encoders and infra) and found that more folks have either worked with each other in past or at least know about each others work.\n\nFrom the few folks I've talked to about knowledge transfer, there seems to be a pretty real fear that 'young people' aren't investing the time necessary to learn the industry.\n\nIn that sense, people are willing to teach you (even if you do leave) because it benefits the industry as whole -- plus you might boomarang back at some point.\n\nIn a way I feel this connects to the earlier point about ego. The \"I don't need to be an apprentice when I can bounce between companies every 2.5 and maximize profit\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "141ca9fd8fff",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-04\/5210750326597_141ca9fd8fff00418f9b_72.jpg",
            "first_name": "Walker",
            "real_name": "Walker Griggs",
            "display_name": "Walker Griggs",
            "team": "T5TCAFTA9",
            "name": "walker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689017004.403839",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9=gq",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also in tech there's a perception (and reality?) people change jobs more frequently so putting a lot of investment into an individual's initial education"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I recently moved into a fairly specialized space (video encoders and infra) and found that more folks have either worked with each other in past or at least know about each others work.\n\nFrom the few folks I've talked to about knowledge transfer, there seems to be a pretty real fear that 'young people' aren't investing the time necessary to learn the industry.\n\nIn that sense, people are willing to teach you (even if you do leave) because it benefits the industry as whole -- plus you might boomarang back at some point.\n\nIn a way I feel this connects to the earlier point about ego. The \"I don't need to be an apprentice when I can bounce between companies every 2.5 and maximize profit\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U055V4HCHU7",
        "type": "message",
        "ts": "1689094460.287759",
        "client_msg_id": "173f266b-3d68-4aac-8898-cdec452adf22",
        "text": "<@U03LJBR6THT> so many good points to unpack\n\n&gt; I don't know how to mentor people properly &amp; I realized I don't think many people do.\nDid you have a mentor yourself? I wonder if this is a 'chicken and egg' problem. Potential mentors themselves need a good example to emulate. What in your mind does a \"proper\" mentorship look like?\n\n&gt; More so, when I've gone and done this myself, I essentially got told to stop from my managers\n:disappointed: ugh, I'm sorry. Mentorship programs don't start and end between mentor and mentee, there has to be a support system to facilitate that relationship.\n\n&gt; My biggest concern is capable people getting completely turned off tech due to cultural problems\nI've noticed most mentorship or apprentice program in software only start when you're in the door. On the other hand, trade apprenticeships are paired with school and take you from square 0 to 100. Do you think there's room for industry vets to reach outside of the industry to students considering CS or broadly 'people interesting in software'.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "141ca9fd8fff",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-04\/5210750326597_141ca9fd8fff00418f9b_72.jpg",
            "first_name": "Walker",
            "real_name": "Walker Griggs",
            "display_name": "Walker Griggs",
            "team": "T5TCAFTA9",
            "name": "walker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689017004.403839",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E0l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U03LJBR6THT"
                            },
                            {
                                "type": "text",
                                "text": " so many good points to unpack\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't know how to mentor people properly & I realized I don't think many people do."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Did you have a mentor yourself? I wonder if this is a 'chicken and egg' problem. Potential mentors themselves need a good example to emulate. What in your mind does a \"proper\" mentorship look like?\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More so, when I've gone and done this myself, I essentially got told to stop from my managers"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "disappointed",
                                "unicode": "1f61e"
                            },
                            {
                                "type": "text",
                                "text": " ugh, I'm sorry. Mentorship programs don't start and end between mentor and mentee, there has to be a support system to facilitate that relationship.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My biggest concern is capable people getting completely turned off tech due to cultural problems"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've noticed most mentorship or apprentice program in software only start when you're in the door. On the other hand, trade apprenticeships are paired with school and take you from square 0 to 100. Do you think there's room for industry vets to reach outside of the industry to students considering CS or broadly 'people interesting in software'."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03LJBR6THT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03R0B9U1GD",
        "type": "message",
        "ts": "1689094874.670589",
        "edited": {
            "user": "U03R0B9U1GD",
            "ts": "1689094951.000000"
        },
        "client_msg_id": "020c6b6f-2212-4114-932e-5c0f03371c96",
        "text": "It's an \"apprenticeship scheme\", which is a <https:\/\/www.apprenticeships.gov.uk\/#|national government thing> here. I don't know what the difference is between that and 'internship', as I suspect it might mean different things in different English-speaking countries. 'Apprenticeship' just means that it's officially recognised here. Whether it's officially led by one person or many, I'd certainly expect them to learn from multiple people! Different people have different skills and backgrounds, and being exposed to that variety of people is a huge benefit of schemes like this. In my original career (not tech), I did a similar thing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "78c476adad42",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-26\/3992499177765_78c476adad42ab6cfe32_72.png",
            "first_name": "Lu",
            "real_name": "Lu Wilson",
            "display_name": "TodePond",
            "team": "T5TCAFTA9",
            "name": "l2wilson94",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689017004.403839",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uax",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's an \"apprenticeship scheme\", which is a "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.apprenticeships.gov.uk\/#",
                                "text": "national government thing"
                            },
                            {
                                "type": "text",
                                "text": " here. I don't know what the difference is between that and 'internship', as I suspect it might mean different things in different English-speaking countries. 'Apprenticeship' just means that it's officially recognised here. Whether it's officially led by one person or many, I'd certainly expect them to learn from multiple people! Different people have different skills and backgrounds, and being exposed to that variety of people is a huge benefit of schemes like this. In my original career (not tech), I did a similar thing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03LJBR6THT",
        "type": "message",
        "ts": "1689096443.148849",
        "edited": {
            "user": "U03LJBR6THT",
            "ts": "1689096521.000000"
        },
        "client_msg_id": "4c0ce934-570c-4e0f-bff2-9030aac478cc",
        "text": "<@U055V4HCHU7>\n&gt; Did you have a mentor yourself? I wonder if this is a 'chicken and egg' problem. Potential mentors themselves need a good example to emulate. What in your mind does a \"proper\" mentorship look like?\nI didn't, and I completely agree. I'm still trying to figure out what a \"proper\" mentor looks like, but I'd think it'd have to incorporate the following with some frequency.\n - work with the mentor on something - pair programming (?)\n - talk through problems mentee is facing &amp; get encouragement + advice\n&gt; I've noticed most mentorship or apprentice program in software only start when you're in the door. On the other hand, trade apprenticeships are paired with school and take you from square 0 to 100. Do you think there's room for industry vets to reach outside of the industry to students considering CS or broadly 'people interesting in software'.\nWould love to do this and I think many would, but I wouldn't know how.\n\nOn another note: my sister is in planning and after you start the job, you need to go through a mentorship to get to a certain title. It's mostly just talking + encouragement from what I know, but I think the encouragement is at least as important as technical if not more.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0afa5db0b2d5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-07-06\/5524013698279_0afa5db0b2d593650747_72.jpg",
            "first_name": "Marcelle",
            "real_name": "Marcelle Rusu",
            "display_name": "Marcelle Rusu",
            "team": "T5TCAFTA9",
            "name": "marcelrusu0",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689017004.403839",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HLw=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U055V4HCHU7"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Did you have a mentor yourself? I wonder if this is a 'chicken and egg' problem. Potential mentors themselves need a good example to emulate. What in your mind does a \"proper\" mentorship look like?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I didn't, and I completely agree. I'm still trying to figure out what a \"proper\" mentor looks like, but I'd think it'd have to incorporate the following with some frequency.\n - work with the mentor on something - pair programming (?)\n - talk through problems mentee is facing & get encouragement + advice\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've noticed most mentorship or apprentice program in software only start when you're in the door. On the other hand, trade apprenticeships are paired with school and take you from square 0 to 100. Do you think there's room for industry vets to reach outside of the industry to students considering CS or broadly 'people interesting in software'."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would love to do this and I think many would, but I wouldn't know how.\n\nOn another note: my sister is in planning and after you start the job, you need to go through a mentorship to get to a certain title. It's mostly just talking + encouragement from what I know, but I think the encouragement is at least as important as technical if not more."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1689109619.828579",
        "client_msg_id": "e95e12f9-f207-4c57-b812-5a1e90e74eac",
        "text": "What happens if I reply here to a 3 year-old thread?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578906654.152800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cbNM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What happens if I reply here to a 3 year-old thread?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "UD3AK9JRF"
                ],
                "count": 1
            },
            {
                "name": "wave::skin-tone-3",
                "users": [
                    "UE6EFEPTQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1689114056.768569",
        "client_msg_id": "E24D7D85-1B0D-4FD6-B2D8-9A41B7093FF2",
        "text": "What you'd expect, perhaps?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578906654.152800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WKl4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What you'd expect, perhaps?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05597GCDDK",
        "type": "message",
        "ts": "1689118227.745139",
        "edited": {
            "user": "U05597GCDDK",
            "ts": "1689119389.000000"
        },
        "client_msg_id": "1c56843d-b019-4253-99f1-34e4e7ad47f9",
        "text": "*What we talk about when we talk about expressivity*\n\nI enjoyed the little tangent on expressivity in the latest episode. I've had thoughts on this recently and it prompted me to skim Felleisen's paper. I really resonated with the hosts' reframing of expressivity as being the part of the language that's oriented towards the programmer, not towards the machine.\n\nI currently think that most programmers, when talking about \"expressivity\", actually mean essentially two things:\n\n1. I can use my own words\n2. I am not restricted by grammar\nThese things are strongly tied to writing, as that's still how we do most of our coding.\n\n\"Using my own words\" is literally that - in any given chunk of source text, how many of the words were chosen by the programmer (e.g. to be particular to their domain or their theory of the program) and how many were specified by the language or environment? Punctuation, I think, also counts as words the programmer didn't get to choose. Random examples:\n\n• In Ruby, one can create little DSLs where almost all words in a specific part of the code are \"my own words\"\n• In assembly languages, the programmer can choose almost none of the words (except labels?)\n• Being able to rename imported symbols lets the programmer choose their own words in specific contexts (same goes for type aliases, etc.)\n• Languages with few keywords should tend to have more words chosen by the programmer... or at least, by the authors of the standard library?\nI equate being \"unrestricted by grammar\" roughly to whether a language is statement-oriented or expression-oriented. The Austral spec has a great section on why it chose to be statement-oriented, and concludes that \"a statement-oriented syntax is less simple, but it forces code to be structurally simple\": <https:\/\/austral-lang.org\/spec\/spec.html#stmt-orientation>\n\nIn Austral, it's an ideological choice to force programs into a certain shape. But in general, it seems to me that languages with less \"grammatical restrictions\" in their parser are described as more expressive. Maybe this is just correlation with other features of those languages.\n\nI'd love to know how everyone else understands \"expressivitiy\" when we talk about programming.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "07fbb70c0e39",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-28\/5179303716261_07fbb70c0e3980e07e51_72.jpg",
            "first_name": "Daniel",
            "real_name": "Daniel Buckmaster",
            "display_name": "Daniel Buckmaster",
            "team": "T5TCAFTA9",
            "name": "mail397",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689118227.745139",
        "reply_count": 35,
        "reply_users_count": 9,
        "latest_reply": "1689716161.587319",
        "reply_users": [
            "U013WBS1B1C",
            "UE6EFEPTQ",
            "UJBAJNFLK",
            "UK3LH8CF5",
            "U016VUZGUUQ",
            "U04E5QAD6DD",
            "U03LJBR6THT",
            "ULM3U6275",
            "U0378MDUG1Y"
        ],
        "replies": [
            {
                "user": "U013WBS1B1C",
                "ts": "1689127730.508099"
            },
            {
                "user": "U013WBS1B1C",
                "ts": "1689127787.195669"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1689148319.568939"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1689151304.101499"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1689178546.327129"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1689178590.934669"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1689181906.161099"
            },
            {
                "user": "U013WBS1B1C",
                "ts": "1689191089.737759"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1689191258.868469"
            },
            {
                "user": "U013WBS1B1C",
                "ts": "1689191376.962689"
            },
            {
                "user": "U013WBS1B1C",
                "ts": "1689192276.153629"
            },
            {
                "user": "U013WBS1B1C",
                "ts": "1689193594.843739"
            },
            {
                "user": "U04E5QAD6DD",
                "ts": "1689210689.961569"
            },
            {
                "user": "U013WBS1B1C",
                "ts": "1689225498.782189"
            },
            {
                "user": "U04E5QAD6DD",
                "ts": "1689252225.662369"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1689286791.149829"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1689286973.508699"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1689287064.559459"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1689326858.826909"
            },
            {
                "user": "U03LJBR6THT",
                "ts": "1689351631.644589"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1689357166.933889"
            },
            {
                "user": "U013WBS1B1C",
                "ts": "1689359668.018179"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1689427049.380399"
            },
            {
                "user": "U013WBS1B1C",
                "ts": "1689560324.847499"
            },
            {
                "user": "ULM3U6275",
                "ts": "1689595407.279989"
            },
            {
                "user": "U0378MDUG1Y",
                "ts": "1689664080.946329"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1689686006.386839"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1689690710.666009"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1689692447.496359"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1689697348.623959"
            },
            {
                "user": "U03LJBR6THT",
                "ts": "1689706884.779879"
            },
            {
                "user": "U03LJBR6THT",
                "ts": "1689706998.246149"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1689708564.446159"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1689711216.445119"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1689716161.587319"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FSLQV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What we talk about when we talk about expressivity",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nI enjoyed the little tangent on expressivity in the latest episode. I've had thoughts on this recently and it prompted me to skim Felleisen's paper. I really resonated with the hosts' reframing of expressivity as being the part of the language that's oriented towards the programmer, not towards the machine.\n\nI currently think that most programmers, when talking about \"expressivity\", actually mean essentially two things:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I can use my own words"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I am not restricted by grammar"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThese things are strongly tied to writing, as that's still how we do most of our coding.\n\n\"Using my own words\" is literally that - in any given chunk of source text, how many of the words were chosen by the programmer (e.g. to be particular to their domain or their theory of the program) and how many were specified by the language or environment? Punctuation, I think, also counts as words the programmer didn't get to choose. Random examples:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "In Ruby, one can create little DSLs where almost all words in a specific part of the code are \"my own words\""
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "In assembly languages, the programmer can choose almost none of the words (except labels?)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Being able to rename imported symbols lets the programmer choose their own words in specific contexts (same goes for type aliases, etc.)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Languages with few keywords should tend to have more words chosen by the programmer... or at least, by the authors of the standard library?"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI equate being \"unrestricted by grammar\" roughly to whether a language is statement-oriented or expression-oriented. The Austral spec has a great section on why it chose to be statement-oriented, and concludes that \"a statement-oriented syntax is less simple, but it forces code to be structurally simple\": "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/austral-lang.org\/spec\/spec.html#stmt-orientation"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIn Austral, it's an ideological choice to force programs into a certain shape. But in general, it seems to me that languages with less \"grammatical restrictions\" in their parser are described as more expressive. Maybe this is just correlation with other features of those languages.\n\nI'd love to know how everyone else understands \"expressivitiy\" when we talk about programming."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013WBS1B1C",
        "type": "message",
        "ts": "1689127730.508099",
        "client_msg_id": "b7df254c-643d-4386-84e9-7427885f64a8",
        "text": "There's a risk I'll go on for a long time. :^)\n\nI work on Red (<http:\/\/red-lang.org|red-lang.org>), a descendant of Rebol, which was inspired by Lisp\/Forth\/Logo. A key point in Carl Sassenrath's design of Rebol was that it was first a messaging language; a data format. Secondarily, you could interpret it to make stuff happen.\n\nTo the first point, everything is data, so the number of lexical forms is very high compared to most langs. But the number of keywords is zero. Yes, in a standard environment there will be a lot of words you expect to be there, and work in a certain way. But you *can* break or enhance the system by altering them.\n\nAnother key feature in standard Red is the `parse` function, which makes it relatively easy to write BNF-like PEG grammars to build dialects (eDSLs). Not only at the string\/char level, but at the value level, because everything is data once loaded from text.\n\nAll those lexical forms (and also standard types that don't have a literal syntax) can be used in your dialects. This makes for a very flexible and powerful \"language construction toolkit\", which is how I sometimes describe Red. And to bring it full meta-circle, `parse` and other features are dialects, as is the low level `Red\/System` language, a C-level language that shares syntax, but not semantics, with Red and is used to write the runtime for performance reasons (it compiles to machine code). e.g. it's static and lacks most high level datatypes. Red also has a GUI dialect.\n\nNow, for how expressive this all is...I'm biased, but there *is* an aspect that *isn't* very flexible: lexical forms (literal syntax for values). You have to hack the lexer and add new types for that, which is by design. Why not make it easy? Back to Red being a messaging language. In the context of data exchange, you need to agree on the basic language elements.\n\nFormatting is another facet of expressivity. Consider poetry, free verse versus something like a pantoum or sestina, which are very rigid forms. This relates to both form and function for PLs. Whitespace, line breaks, statement-ending punctuation, all effect how you write for your readers, and perhaps how susceptible things are to (un)intentional corruption. e.g., you can't strip spaces and lines from a Python program. On the function side, we veer into static\/dynamic aspects.\n\nThe less rules you have, the more expressive you can be. Consider art. What you gain in expressive freedom, you may give up in appreciation. Constraints are important, but also contextual. Can you have an effective fully expressive GPL? Or to get that (ASM) do you give up too much \"appreciation\", because we also *have to* share, communicate about, and understand these works we craft.\n\nPersonally, I think we have to balance things based on context. Be as flexible and expressive as possible, in the target domain, to the point where any more leads to less benefit and more cost for target users. Please some of the people, most of the time.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "99d013fa8bfb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-07-05\/2248942033796_99d013fa8bfb537f563a_72.jpg",
            "first_name": "",
            "real_name": "Gregg Irwin",
            "display_name": "Gregg Irwin",
            "team": "T5TCAFTA9",
            "name": "gregg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689118227.745139",
        "parent_user_id": "U05597GCDDK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kaiV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's a risk I'll go on for a long time. :^)\n\nI work on Red ("
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/red-lang.org",
                                "text": "red-lang.org"
                            },
                            {
                                "type": "text",
                                "text": "), a descendant of Rebol, which was inspired by Lisp\/Forth\/Logo. A key point in Carl Sassenrath's design of Rebol was that it was first a messaging language; a data format. Secondarily, you could interpret it to make stuff happen.\n\nTo the first point, everything is data, so the number of lexical forms is very high compared to most langs. But the number of keywords is zero. Yes, in a standard environment there will be a lot of words you expect to be there, and work in a certain way. But you "
                            },
                            {
                                "type": "text",
                                "text": "can",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " break or enhance the system by altering them.\n\nAnother key feature in standard Red is the "
                            },
                            {
                                "type": "text",
                                "text": "parse",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " function, which makes it relatively easy to write BNF-like PEG grammars to build dialects (eDSLs). Not only at the string\/char level, but at the value level, because everything is data once loaded from text.\n\nAll those lexical forms (and also standard types that don't have a literal syntax) can be used in your dialects. This makes for a very flexible and powerful \"language construction toolkit\", which is how I sometimes describe Red. And to bring it full meta-circle, "
                            },
                            {
                                "type": "text",
                                "text": "parse",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and other features are dialects, as is the low level "
                            },
                            {
                                "type": "text",
                                "text": "Red\/System",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " language, a C-level language that shares syntax, but not semantics, with Red and is used to write the runtime for performance reasons (it compiles to machine code). e.g. it's static and lacks most high level datatypes. Red also has a GUI dialect.\n\nNow, for how expressive this all is...I'm biased, but there "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " an aspect that "
                            },
                            {
                                "type": "text",
                                "text": "isn't",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " very flexible: lexical forms (literal syntax for values). You have to hack the lexer and add new types for that, which is by design. Why not make it easy? Back to Red being a messaging language. In the context of data exchange, you need to agree on the basic language elements.\n\nFormatting is another facet of expressivity. Consider poetry, free verse versus something like a pantoum or sestina, which are very rigid forms. This relates to both form and function for PLs. Whitespace, line breaks, statement-ending punctuation, all effect how you write for your readers, and perhaps how susceptible things are to (un)intentional corruption. e.g., you can't strip spaces and lines from a Python program. On the function side, we veer into static\/dynamic aspects.\n\nThe less rules you have, the more expressive you can be. Consider art. What you gain in expressive freedom, you may give up in appreciation. Constraints are important, but also contextual. Can you have an effective fully expressive GPL? Or to get that (ASM) do you give up too much \"appreciation\", because we also "
                            },
                            {
                                "type": "text",
                                "text": "have to",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " share, communicate about, and understand these works we craft.\n\nPersonally, I think we have to balance things based on context. Be as flexible and expressive as possible, in the target domain, to the point where any more leads to less benefit and more cost for target users. Please some of the people, most of the time."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013WBS1B1C",
        "type": "message",
        "ts": "1689127787.195669",
        "client_msg_id": "8aa4c62d-0e9b-417f-bbd9-686884cfd517",
        "text": "I warned you. :^)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "99d013fa8bfb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-07-05\/2248942033796_99d013fa8bfb537f563a_72.jpg",
            "first_name": "",
            "real_name": "Gregg Irwin",
            "display_name": "Gregg Irwin",
            "team": "T5TCAFTA9",
            "name": "gregg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689118227.745139",
        "parent_user_id": "U05597GCDDK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5cDA8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I warned you. :^)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "boom",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013WBS1B1C",
        "type": "message",
        "ts": "1689128941.763149",
        "client_msg_id": "e75f4505-9d25-4424-b632-e7a2da787550",
        "text": "<@U055V4HCHU7> I've been fortunate to work with may types of people, around the need\/love of building software. Where my ego comment comes from leans heavily toward those (broad brush here) who are off-the-charts smart as engineers, but struggle on the social\/empathy\/human side. I *think* I'm somewhere in the middle. :^) People in this group are interested in constructive collaboration, learning together. That's why I feel safe posting things that may be flat-out wrong, or make me look ignorant.\n\nWe're all somewhere on this journey, via different paths. Some of my favorite memories are working with someone who was way smarter than me on the math\/code side, but also able to meet me in the middle on the need to make things accessible to \"normal\" devs. Many times, though, working with people so much smarter than me on the machine side is tough, and even at my advanced age I can doubt the value of my experience and design values. I've also been on the other side, where maybe I wasn't so great at *being* mentored, because I thought I was right. :^)\n\nA direct analog for me is theatre. When I direct, it's very intuitive and comes from my passion for it, just like software. And, just like software, sometimes the most talented actor just won't take direction. Sometimes it still works out, but it can also make the whole show less than it could be, because the vision doesn't hang together when one or more pieces don't mesh (this is true for the tech aspects like lighting and set design as well).\n\nAs for how to mentor, I can only say I've had some great ones who probably taught me by example and osmosis. Don't try to mentor everyone. Find the right mentees, who have a spark, and just share your love for your craft with them. Be the student as much as the teacher. I probably learn more than I teach, because seeing through new eyes make you question and try to understand more.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "99d013fa8bfb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-07-05\/2248942033796_99d013fa8bfb537f563a_72.jpg",
            "first_name": "",
            "real_name": "Gregg Irwin",
            "display_name": "Gregg Irwin",
            "team": "T5TCAFTA9",
            "name": "gregg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689017004.403839",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o0J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U055V4HCHU7"
                            },
                            {
                                "type": "text",
                                "text": " I've been fortunate to work with may types of people, around the need\/love of building software. Where my ego comment comes from leans heavily toward those (broad brush here) who are off-the-charts smart as engineers, but struggle on the social\/empathy\/human side. I *think* I'm somewhere in the middle. :^) People in this group are interested in constructive collaboration, learning together. That's why I feel safe posting things that may be flat-out wrong, or make me look ignorant.\n\nWe're all somewhere on this journey, via different paths. Some of my favorite memories are working with someone who was way smarter than me on the math\/code side, but also able to meet me in the middle on the need to make things accessible to \"normal\" devs. Many times, though, working with people so much smarter than me on the machine side is tough, and even at my advanced age I can doubt the value of my experience and design values. I've also been on the other side, where maybe I wasn't so great at "
                            },
                            {
                                "type": "text",
                                "text": "being",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " mentored, because I thought I was right. :^)\n\nA direct analog for me is theatre. When I direct, it's very intuitive and comes from my passion for it, just like software. And, just like software, sometimes the most talented actor just won't take direction. Sometimes it still works out, but it can also make the whole show less than it could be, because the vision doesn't hang together when one or more pieces don't mesh (this is true for the tech aspects like lighting and set design as well).\n\nAs for how to mentor, I can only say I've had some great ones who probably taught me by example and osmosis. Don't try to mentor everyone. Find the right mentees, who have a spark, and just share your love for your craft with them. Be the student as much as the teacher. I probably learn more than I teach, because seeing through new eyes make you question and try to understand more."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]