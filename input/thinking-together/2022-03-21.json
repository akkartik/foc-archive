[
    {
        "user": "U03687FLUDU",
        "type": "message",
        "ts": "1647874770.899939",
        "client_msg_id": "61c65e68-cb94-432b-9c99-20285b69c2a8",
        "text": "I really like a paper by Daniel Moody - \"The “Physics” of Notations: Toward a Scientific Basis for Constructing Visual Notations in Software Engineering\".  <https:\/\/ieeexplore.ieee.org\/document\/5353439> It highlights and explains the problems of not using all the visual properties.  It seems that not much has changed since.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0e7780a404d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0e7780a404d5eca302f3cbacfd9f0cde.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Agris",
            "real_name": "Agris Šostaks",
            "display_name": "Agris Šostaks",
            "team": "T5TCAFTA9",
            "name": "agris.sostaks",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1645456763.075959",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G2cLQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really like a paper by Daniel Moody - \"The “Physics” of Notations: Toward a Scientific Basis for Constructing Visual Notations in Software Engineering\".  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/ieeexplore.ieee.org\/document\/5353439"
                            },
                            {
                                "type": "text",
                                "text": " It highlights and explains the problems of not using all the visual properties.  It seems that not much has changed since."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1647885985.387139",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1647888597.000000"
        },
        "client_msg_id": "137da23c-738c-49e9-ac7b-0b953c74d8e5",
        "text": "FWIW, here's how I would summarize this issue:\n\n1. cooperative single-stack, async i\/o -&gt; \nnightmare of inscrutable state machines\n\n2. pre-emptive multi-stack, blocking i\/o -&gt;\nnightmare of indeterminacy\n\n3. cooperative multi-stack, async i\/o -&gt;\nstacks avoid state machines, cooperation avoids indeterminacy",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647422642.414839",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/rFt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FWIW, here's how I would summarize this issue:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "cooperative single-stack, async i\/o -> "
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "nightmare of inscrutable state machines\n\n2. pre-emptive multi-stack, blocking i\/o ->\nnightmare of indeterminacy\n\n3. cooperative multi-stack, async i\/o ->\nstacks avoid state machines, cooperation avoids indeterminacy"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1647886478.019279",
        "client_msg_id": "535cef6e-74ec-4dfe-8f03-a097a928dcd8",
        "text": "<@ULM3U6275>\n\n&gt; cooperative multi-stack, async i\/o \nWhat language\/system would be a good example here?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647422642.414839",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HX8j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "ULM3U6275"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "cooperative multi-stack, async i\/o "
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nWhat language\/system would be a good example here?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1647888333.523509",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1647893989.000000"
        },
        "client_msg_id": "5e369201-12bd-4d02-be7d-11354fd61f83",
        "text": "<@UK3LH8CF5> My language, Io, uses coroutines. Go seems to supports them. IIRC, there is a fork or version of Python that supports them, and possibly a newer version of Ruby that has them. I think Smalltalk and some LISP also supported them.\n\nThe key to using coroutines properly is to wrap your async i\/o calls to transparently handle pausing the current coroutine and having the scheduler resume it upon the async callback (e.g. your i\/o library and scheduler would use libevent\/libev\/etc) . This way, it looks like a blocking call and the stack handles all your state machine work for you. I think this is the bit that prevents most people from understanding the value coroutines, as they think you have to write that code with each use, instead of it being handled by your i\/o libraries and scheduler.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647422642.414839",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9n5ii",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": " My language, Io, uses coroutines. Go seems to supports them. IIRC, there is a fork or version of Python that supports them, and possibly a newer version of Ruby that has them. I think Smalltalk and some LISP also supported them.\n\nThe key to using coroutines properly is to wrap your async i\/o calls to transparently handle pausing the current coroutine and having the scheduler resume it upon the async callback (e.g. your i\/o library and scheduler would use libevent\/libev\/etc) . This way, it looks like a blocking call and the stack handles all your state machine work for you. I think this is the bit that prevents most people from understanding the value coroutines, as they think you have to write that code with each use, instead of it being handled by your i\/o libraries and scheduler."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1647890329.507489",
        "client_msg_id": "2c6f6712-65d7-454f-b4b3-5eca371103db",
        "text": "Is there any research on measuring human understanding of data formats? Quite difficult to Google for because it doesn't understand \"data\" as the subject the research.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LAACd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there any research on measuring human understanding of data formats? Quite difficult to Google for because it doesn't understand \"data\" as the subject the research."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1647891345.536769",
        "client_msg_id": "e28dd710-4f35-412a-beeb-9dfe47607189",
        "text": "Yeah, I had some similar questions. Understanding depends on what tools the humans use..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g0res",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I had some similar questions. Understanding depends on what tools the humans use.."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]