[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1737812552.282549",
        "client_msg_id": "a5a9739c-64d9-4f03-9fb5-9d4bc423022e",
        "text": "Now I am a bit lost. What I see is a tree, both visually and in the parsed data. Where are the edges that relate multiple nodes? Where are edges that have edges themselves?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737703849.426849",
        "parent_user_id": "U08A3DJ5VKM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "stdg2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Now I am a bit lost. What I see is a tree, both visually and in the parsed data. Where are the edges that relate multiple nodes? Where are edges that have edges themselves?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "The edges are reified. Nodes prefixed by a dot (meta nodes) are edges\/relations between data nodes. The example given was not meant to be a sample demonstrating the qualities I mentioned. Indeed it mostly behaves as a tree due to the text source layout. But when using a live environment, such as a GUI interface, the text representation is not needed, and so it facilitates more advanced compositions. In any case, this is more in theoretical than practical utility, since it's designed for documents and those are naturally tree-like",
        "files": [
            {
                "id": "F08ACMQLPTN",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U08A3DJ5VKM",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+6i32",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The edges are reified. Nodes prefixed by a dot (meta nodes) are edges\/relations between data nodes. The example given was not meant to be a sample demonstrating the qualities I mentioned. Indeed it mostly behaves as a tree due to the text source layout. But when using a live environment, such as a GUI interface, the text representation is not needed, and so it facilitates more advanced compositions. In any case, this is more in theoretical than practical utility, since it's designed for documents and those are naturally tree-like"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1737836542.096869",
        "client_msg_id": "328b6946-61e3-4f45-a95c-eb6cbe7afc6d",
        "thread_ts": "1737703849.426849",
        "parent_user_id": "U08A3DJ5VKM",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "I haven't gone as far as implementing references and a parsing supporting it, so this is just a mock to demonstrate the layout. I've done it by hand so might contain some errors. I think you can even use the file system to create hypergraphs by interpreting directories as hyperedges and using symbolic links to instantiate nodes (files) across many directories. Basically any tree model can be elevated to a hypergraph with semantic interventions. What's missing from this in-memory repr are multivalued backreferences, which would allow for multiway pathfinding starting at any node",
        "files": [
            {
                "id": "F08AA6TN23C",
                "created": 1737837567,
                "timestamp": 1737837567,
                "name": "Sem título",
                "title": "Sem título",
                "mimetype": "text\/plain",
                "filetype": "text",
                "pretty_type": "Plain Text",
                "user": "U08A3DJ5VKM",
                "user_team": "T5TCAFTA9",
                "editable": true,
                "size": 422,
                "mode": "snippet",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F08AA6TN23C\/sem_t__tulo?token=xoxe-197418537349-9563586786369-9561652713025-65bb8fe543aecc29d5ac9ddff9d0bf09",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F08AA6TN23C\/download\/sem_t__tulo?token=xoxe-197418537349-9563586786369-9561652713025-65bb8fe543aecc29d5ac9ddff9d0bf09",
                "permalink": "https:\/\/feelingofcomputing.slack.com\/files\/U5TCAFTD3\/F08AA6TN23C\/sem_t__tulo",
                "permalink_public": "https:\/\/slack-files.com\/T5TCAFTA9-F08AA6TN23C-cf0d3391dc",
                "edit_link": "https:\/\/feelingofcomputing.slack.com\/files\/U5TCAFTD3\/F08AA6TN23C\/sem_t__tulo\/edit",
                "is_starred": false,
                "skipped_shares": true,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": true,
        "user": "U08A3DJ5VKM",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gpvwg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven't gone as far as implementing references and a parsing supporting it, so this is just a mock to demonstrate the layout. I've done it by hand so might contain some errors. I think you can even use the file system to create hypergraphs by interpreting directories as hyperedges and using symbolic links to instantiate nodes (files) across many directories. Basically any tree model can be elevated to a hypergraph with semantic interventions. What's missing from this in-memory repr are multivalued backreferences, which would allow for multiway pathfinding starting at any node"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1737837568.697599",
        "client_msg_id": "f8db4419-834a-4675-86ae-951476eb98e4",
        "thread_ts": "1737703849.426849",
        "parent_user_id": "U08A3DJ5VKM"
    },
    {
        "user": "U08A3DJ5VKM",
        "type": "message",
        "ts": "1737837739.769619",
        "client_msg_id": "e59aa10a-cb3e-45fc-9a8c-7fe413d815bb",
        "text": "the row schema is `[parent_id, relation_id, key, value, meta_relation, data_relation]`",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f15ff7293c76",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-24\/8368890056976_f15ff7293c7610751dc7_72.jpg",
            "first_name": "Jon",
            "real_name": "Jon Secchis",
            "display_name": "Jon Secchis",
            "team": "T5TCAFTA9",
            "name": "jon979",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737703849.426849",
        "parent_user_id": "U08A3DJ5VKM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hSszv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the row schema is "
                            },
                            {
                                "type": "text",
                                "text": "[parent_id, relation_id, key, value, meta_relation, data_relation]",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    }
]