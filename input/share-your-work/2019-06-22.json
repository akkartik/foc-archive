[
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1561194003.106100",
        "client_msg_id": "a9adfa1b-9059-4bda-a792-c379f9c63dc6",
        "text": "<@UCUSW7WVD> My hunch was that these are bidirectional. So denotational semantics like Curry-Howard Correspondence lets you translate back and forth between the imperative programs. So these I think establishes common ground between the vertices. Not really sure about the Operational\/Axiomatic part, that was pulled in mostly by going through wikipedia summaries.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561164958.101900",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7t\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " My hunch was that these are bidirectional. So denotational semantics like Curry-Howard Correspondence lets you translate back and forth between the imperative programs. So these I think establishes common ground between the vertices. Not really sure about the Operational\/Axiomatic part, that was pulled in mostly by going through wikipedia summaries."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1561194130.106300",
        "client_msg_id": "49aaa2a2-a05c-4747-8786-609e48bbb6d9",
        "text": "<@UKQT95T1V> I just found out during the research for this that there's something called Isomorphism theorems put forth by Emmy Noether: <https:\/\/en.wikipedia.org\/wiki\/Isomorphism_theorems> Not sure if you were asking about these.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561164958.101900",
        "parent_user_id": "UDKTZSD6H",
        "attachments": [
            {
                "image_url": "https:\/\/upload.wikimedia.org\/wikipedia\/commons\/d\/dc\/Diagram_for_the_First_Isomorphism_Theorem.png",
                "image_width": 219,
                "image_height": 333,
                "image_bytes": 23769,
                "title": "Isomorphism theorems",
                "title_link": "https:\/\/en.wikipedia.org\/wiki\/Isomorphism_theorems",
                "from_url": "https:\/\/en.wikipedia.org\/wiki\/Isomorphism_theorems",
                "author_name": "Wikipedia",
                "author_link": "https:\/\/en.wikipedia.org\/",
                "text": "In mathematics, specifically abstract algebra, the isomorphism theorems (also known as Noether's isomorphism theorems) are three theorems that describe the relationship between quotients, homomorphisms, and subobjects.  Versions of the theorems exist for groups, rings, vector spaces, modules, Lie algebras, and various other algebraic structures.  In universal algebra, the isomorphism theorems can be generalized to the context of algebras and congruences.",
                "fallback": "wikipedia: Isomorphism theorems",
                "service_icon": "https:\/\/a.slack-edge.com\/bfaba\/img\/unfurl_icons\/wikipedia.png",
                "id": 1,
                "original_url": "https:\/\/en.wikipedia.org\/wiki\/Isomorphism_theorems"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lcXp\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UKQT95T1V"
                            },
                            {
                                "type": "text",
                                "text": " I just found out during the research for this that there's something called Isomorphism theorems put forth by Emmy Noether: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Isomorphism_theorems"
                            },
                            {
                                "type": "text",
                                "text": " Not sure if you were asking about these."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJDQKSSJ0",
        "type": "message",
        "ts": "1561245859.107200",
        "client_msg_id": "55278d22-0cb9-473a-96ce-1e478e242ff7",
        "text": "<@UC6997THT>  I haven’t dug into perf a huge amount yet, so I imagine you’d run into issues relatively quickly trying to build something complex. At the same time, Maraca does only ‘mount’ streams that are currently in use, so the issues are more about the amount of complexity that can be active at one time, not the overall complexity of the app. For example with the <http:\/\/maraca-lang.org|maraca-lang.org> site, only the streams for the current page will be running, so the issues would be how much was going on with any one page, not how many pages the site has. That would apply similarly to things like menus being opened\/closed etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g17c6442fbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/317c6442fbb28b6db872e7c4116d622c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Jon",
            "real_name": "Jon Whitehead",
            "display_name": "jon",
            "team": "T5TCAFTA9",
            "name": "jsiwhitehead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0d1iq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": "  I haven’t dug into perf a huge amount yet, so I imagine you’d run into issues relatively quickly trying to build something complex. At the same time, Maraca does only ‘mount’ streams that are currently in use, so the issues are more about the amount of complexity that can be active at one time, not the overall complexity of the app. For example with the "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/maraca-lang.org",
                                "text": "maraca-lang.org"
                            },
                            {
                                "type": "text",
                                "text": " site, only the streams for the current page will be running, so the issues would be how much was going on with any one page, not how many pages the site has. That would apply similarly to things like menus being opened\/closed etc."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJDQKSSJ0",
        "type": "message",
        "ts": "1561246073.107400",
        "client_msg_id": "d716a91f-8dc5-4ea1-bceb-99b50961b9e9",
        "text": "The main thought I have for potential optimisation is to find common patterns and run them more specifically, ie `[1, 2, 3].[v=&gt;&gt; v? + 1]` currently creates a lot more intermediate streams than it needs to, as I’ve just coded naively for the general case so far. However that’s about as far as my thinking on that has got so far..!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g17c6442fbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/317c6442fbb28b6db872e7c4116d622c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Jon",
            "real_name": "Jon Whitehead",
            "display_name": "jon",
            "team": "T5TCAFTA9",
            "name": "jsiwhitehead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560980815.068200",
        "parent_user_id": "UJDQKSSJ0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s7B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The main thought I have for potential optimisation is to find common patterns and run them more specifically, ie "
                            },
                            {
                                "type": "text",
                                "text": "[1, 2, 3].[v=>> v? + 1]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " currently creates a lot more intermediate streams than it needs to, as I’ve just coded naively for the general case so far. However that’s about as far as my thinking on that has got so far..!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]