[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1626016377.208400",
        "edited": {
            "user": "U013ZLJARC7",
            "ts": "1626016622.000000"
        },
        "client_msg_id": "5b6fe253-e5c9-465e-94c1-16750a58e29d",
        "text": "<@UCUSW7WVD> what I mean by semantics is that, for example:\n• Clojure's `reduce` takes a function, an optional initial value, and a sequence. `(reduce #(assoc %1 (str %2) %2) {} [1 2 3 4]) ; =&gt; {\"1\" 1, \"2\" 2, \"3\" 3, \"4\" 4}`\n• Ruby calls this `collect`, but instead of being a function it's an Array method that doesn't take an initial value: `[ \"a\", \"b\", \"c\", \"d\" ].collect { |x| x + \"!\" } #=&gt; [\"a!\", \"b!\", \"c!\", \"d!\"]`\n• APL calls the same operation reduce, but spells it `\/`  and uses it as a modifier to another operation: `+\/1 2 3 4 5 ⍝ 15`\n... and so on. These are all translations of the same concept, but they have cultural differences that make an exact translation impossible.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625710827.187800",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6mtZa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " what I mean by semantics is that, for example:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Clojure's "
                                    },
                                    {
                                        "type": "text",
                                        "text": "reduce",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " takes a function, an optional initial value, and a sequence. "
                                    },
                                    {
                                        "type": "text",
                                        "text": "(reduce #(assoc %1 (str %2) %2) {} [1 2 3 4]) ; => {\"1\" 1, \"2\" 2, \"3\" 3, \"4\" 4}",
                                        "style": {
                                            "code": true
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Ruby calls this "
                                    },
                                    {
                                        "type": "text",
                                        "text": "collect",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", but instead of being a function it's an Array method that doesn't take an initial value: "
                                    },
                                    {
                                        "type": "text",
                                        "text": "[ \"a\", \"b\", \"c\", \"d\" ].collect { |x| x + \"!\" } #=> [\"a!\", \"b!\", \"c!\", \"d!\"]",
                                        "style": {
                                            "code": true
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "APL calls the same operation reduce, but spells it "
                                    },
                                    {
                                        "type": "text",
                                        "text": "\/",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "  and uses it as a modifier to another operation: "
                                    },
                                    {
                                        "type": "text",
                                        "text": "+\/1 2 3 4 5 ⍝ 15",
                                        "style": {
                                            "code": true
                                        }
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "... and so on. These are all translations of the same concept, but they have cultural differences that make an exact translation impossible."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC",
                    "UNCP67JSK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1626016685.208800",
        "client_msg_id": "c2320e59-cbe4-45e3-a762-f5f69af14e17",
        "text": "Yeah, I went through that same thought process myself.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625710827.187800",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a5vp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I went through that same thought process myself."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1626017436.212100",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1626017447.000000"
        },
        "client_msg_id": "8D8B5652-28F4-4428-AE94-1AF40AD506D9",
        "text": "<@U013ZLJARC7> having them all laid out in the same place would be wonderful, not to put them all together on a single album (indeed impossible), but instead to make a killer mixtape.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625710827.187800",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "URh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " having them all laid out in the same place would be wonderful, not to put them all together on a single album (indeed impossible), but instead to make a killer mixtape."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1626020975.212500",
        "client_msg_id": "acfecd28-6d8f-407b-ae5d-4b2ea3152f7a",
        "text": "I have a book called Symbol Sourcebook: An Authoritative Guide to International Graphic Symbols by Drefuss which is always fun to flip through",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625710827.187800",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xjw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a book called Symbol Sourcebook: An Authoritative Guide to International Graphic Symbols by Drefuss which is always fun to flip through"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01JNTE35QS",
        "type": "message",
        "ts": "1626053450.212800",
        "client_msg_id": "3b137b7a-d774-49c6-a2d2-37e6bcd368f4",
        "text": "I would reuse the work done in APL or K, the full list of verbs and adverbs would be a good starting point. Along with this are some key elements of the implementation (such as sort returning indices rather than returning values). I also think that many of these can be implemented on top of some basic primitives - BQN does this pretty well.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "97155db555c2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-01-13\/1631845309525_97155db555c2091ecd20_72.jpg",
            "first_name": "",
            "real_name": "Vijay Chakravarthy",
            "display_name": "Vijay Chakravarthy",
            "team": "T5TCAFTA9",
            "name": "vchakrav",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625710827.187800",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aBDW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would reuse the work done in APL or K, the full list of verbs and adverbs would be a good starting point. Along with this are some key elements of the implementation (such as sort returning indices rather than returning values). I also think that many of these can be implemented on top of some basic primitives - BQN does this pretty well."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1626060381.215000",
        "client_msg_id": "52D6543E-A4FA-4951-8239-51A6548D65F6",
        "text": "<@U013ZLJARC7> You say translation table, but I wonder whether it’s tractable to write a program that does a literal n x n compilation. Give me a loop like operation, then rewrite it in all the different languages.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625710827.187800",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KLZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " You say translation table, but I wonder whether it’s tractable to write a program that does a literal n x n compilation. Give me a loop like operation, then rewrite it in all the different languages."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]