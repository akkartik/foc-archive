[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1655710804.429539",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1655710937.000000"
        },
        "client_msg_id": "10c567a2-375a-41de-b927-4d1da0bfb9ac",
        "text": "<@UCUSW7WVD> Indeed, as <@UML4ZEKDK> said, there is no double work. The startup script constructs the image by loading packages. Here's a typical piece of code from my startup script:\n```(RPackageOrganizer default includesPackageNamed: 'BaselineOfZotero')\n    ifFalse: [\n        Metacello new\n            baseline: 'Zotero';\n            repository: '<github:\/\/khinsen\/GT-Zotero:main\/src>';\n            onConflictUseLoaded;\n            load ].```\nIt's the same principles as in Common Lisp's \"systems\", the main difference being that nowadays, most people use Common Lisp images like compiled binaries, created once but then never modified. The difference is purely in usage patterns.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655316367.875769",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x\/mu0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Indeed, as "
                            },
                            {
                                "type": "user",
                                "user_id": "UML4ZEKDK"
                            },
                            {
                                "type": "text",
                                "text": " said, there is no double work. The startup script constructs the image by loading packages. Here's a typical piece of code from my startup script:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(RPackageOrganizer default includesPackageNamed: 'BaselineOfZotero')\n    ifFalse: [\n        Metacello new\n            baseline: 'Zotero';\n            repository: '"
                            },
                            {
                                "type": "link",
                                "url": "github:\/\/khinsen\/GT-Zotero:main\/src"
                            },
                            {
                                "type": "text",
                                "text": "';\n            onConflictUseLoaded;\n            load ]."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's the same principles as in Common Lisp's \"systems\", the main difference being that nowadays, most people use Common Lisp images like compiled binaries, created once but then never modified. The difference is purely in usage patterns."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1655711127.965639",
        "client_msg_id": "d872a2c4-1a42-473e-83f0-6c63f714bd71",
        "text": "Wondering if the word \"control\" (as used in cybernetics) could be useful. Mutability is about control over a resource. And distributed control is where governance comes in.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FqmUx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wondering if the word \"control\" (as used in cybernetics) could be useful. Mutability is about control over a resource. And distributed control is where governance comes in."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "amiga-tick",
                "users": [
                    "U014WA16VNJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02JDAYKW7J",
        "type": "message",
        "ts": "1655718555.806569",
        "client_msg_id": "8136281b-ddfd-48b0-8565-3a89c4e9826a",
        "text": "<@U014WA16VNJ> my guess is you could find suitable vocab\/metaphor in the gene transfer world, horizontal, epigenetic etc For example,  competitive as well as cooperative\/symbiotic exchanges with the mycelium world, internal as well as with the surrounding environment\/systems, provide a pretty rich ground for thinking about mutation, mutability and state.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "1ab8763ceb21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-14\/2826386958343_1ab8763ceb219317febf_72.jpg",
            "first_name": "Daniel",
            "real_name": "Daniel Krasner",
            "display_name": "Daniel Krasner",
            "team": "T5TCAFTA9",
            "name": "krasnerdaniel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tObv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " my guess is you could find suitable vocab\/metaphor in the gene transfer world, horizontal, epigenetic etc For example,  competitive as well as cooperative\/symbiotic exchanges with the mycelium world, internal as well as with the surrounding environment\/systems, provide a pretty rich ground for thinking about mutation, mutability and state."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "brain",
                "users": [
                    "U014WA16VNJ",
                    "USL4R0T61"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1655747158.959289",
        "edited": {
            "user": "U03DNFDFYDA",
            "ts": "1655747235.000000"
        },
        "client_msg_id": "77e5f006-5c58-499f-88a4-90bc0a3d6eb9",
        "text": "There’s a recurring theme in my career, going back to my very first job, that goes under the mental headline of “wide logic” problems… That’s where you have a somewhat narrow stream (conceptually, not necessarily streaming per se) of data, and you need to evaluate a large number of functions against each item--at least a handful, often dozens, sometimes hundreds! The functions are basically always provided by the user, although normally in a declarative, non-Turing-complete DSL. I’m curious whether others have noticed this pattern, and whether you know of any more mainstream labels for it?\n\nThe closest I’ve found is papers that reference publish\/subscribe and indexing techniques for complex boolean expression trees, e.g.:\n• <https:\/\/dl.acm.org\/doi\/10.14778\/2732296.2732298|An efficient publish\/subscribe index for e-commerce databases> (VLDB ’14)\n• <https:\/\/dl.acm.org\/doi\/10.1145\/2487259.2487260|Analysis and optimization for boolean expression indexing [BE-Tree]> (ACM Trans. DB. Sys. ’13)\n• <https:\/\/dl.acm.org\/doi\/10.1145\/3448016.3457266|A-Tree: A Dynamic Data Structure for Efficiently Indexing Arbitrary Boolean Expressions> (SIGMOD\/PODS ’21 … actually this is a new one for me, I need to read it now… :slightly_smiling_face:)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655747158.959289",
        "reply_count": 15,
        "reply_users_count": 4,
        "latest_reply": "1655811575.243389",
        "reply_users": [
            "U03DNFDFYDA",
            "UEBG0NPDK",
            "U02E4DAQGSZ",
            "U013ZLJARC7"
        ],
        "replies": [
            {
                "user": "U03DNFDFYDA",
                "ts": "1655747304.186279"
            },
            {
                "user": "U03DNFDFYDA",
                "ts": "1655748114.837129"
            },
            {
                "user": "U03DNFDFYDA",
                "ts": "1655749029.213759"
            },
            {
                "user": "U03DNFDFYDA",
                "ts": "1655749242.929969"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1655749385.184329"
            },
            {
                "user": "U03DNFDFYDA",
                "ts": "1655749416.780449"
            },
            {
                "user": "U03DNFDFYDA",
                "ts": "1655749452.434219"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1655749490.555159"
            },
            {
                "user": "U03DNFDFYDA",
                "ts": "1655749579.487879"
            },
            {
                "user": "U03DNFDFYDA",
                "ts": "1655749801.216289"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1655750122.998189"
            },
            {
                "user": "U03DNFDFYDA",
                "ts": "1655750232.745209"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1655761893.884199"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1655762323.503099"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1655811575.243389"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2p9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There’s a recurring theme in my career, going back to my very first job, that goes under the mental headline of “wide logic” problems… That’s where you have a somewhat narrow stream (conceptually, not necessarily streaming per se) of data, and you need to evaluate a large number of functions against each item--at least a handful, often dozens, sometimes hundreds! The functions are basically always provided by the user, although normally in a declarative, non-Turing-complete DSL. I’m curious whether others have noticed this pattern, and whether you know of any more mainstream labels for it?\n\nThe closest I’ve found is papers that reference publish\/subscribe and indexing techniques for complex boolean expression trees, e.g.:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/dl.acm.org\/doi\/10.14778\/2732296.2732298",
                                        "text": "An efficient publish\/subscribe index for e-commerce databases"
                                    },
                                    {
                                        "type": "text",
                                        "text": " (VLDB ’14)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/dl.acm.org\/doi\/10.1145\/2487259.2487260",
                                        "text": "Analysis and optimization for boolean expression indexing [BE-Tree]"
                                    },
                                    {
                                        "type": "text",
                                        "text": " (ACM Trans. DB. Sys. ’13)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/dl.acm.org\/doi\/10.1145\/3448016.3457266",
                                        "text": "A-Tree: A Dynamic Data Structure for Efficiently Indexing Arbitrary Boolean Expressions"
                                    },
                                    {
                                        "type": "text",
                                        "text": " (SIGMOD\/PODS ’21 … actually this is a new one for me, I need to read it now… "
                                    },
                                    {
                                        "type": "emoji",
                                        "name": "slightly_smiling_face",
                                        "unicode": "1f642"
                                    },
                                    {
                                        "type": "text",
                                        "text": ")"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1655747304.186279",
        "client_msg_id": "ba81b084-26b4-4bde-9288-7adbe63d73a0",
        "text": "Some stories…",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655747158.959289",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hwu2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some stories…"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1655748114.837129",
        "client_msg_id": "f8757bfe-2a20-46a5-834d-a1c4b8e24cb9",
        "text": "First job: a (snail mail) direct marketing agency. We would run dozens of queries\/reports to analyze the performance of mailings\/campaigns, breaking down response rates, average donation amounts, etc.\n\nThe functions were often “symbolic” (i.e. calculated) fields in the 4GL, they were in a Turing-complete language but often written by relatively unskilled programmers. I built a system that would traverse the analysis\/mailing list once, eval all the expressions once per record, and aggregate them in memory over multiple group-bys",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655747158.959289",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6JE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "First job: a (snail mail) direct marketing agency. We would run dozens of queries\/reports to analyze the performance of mailings\/campaigns, breaking down response rates, average donation amounts, etc.\n\nThe functions were often “symbolic” (i.e. calculated) fields in the 4GL, they were in a Turing-complete language but often written by relatively unskilled programmers. I built a system that would traverse the analysis\/mailing list once, eval all the expressions once per record, and aggregate them in memory over multiple group-bys"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1655748966.611579",
        "edited": {
            "user": "U03CEGR3HSL",
            "ts": "1655748995.000000"
        },
        "client_msg_id": "1ed38ade-ace0-499a-b256-406dc1f0dd8a",
        "text": "Is it possible that in our efforts to find alternatives to imperative programming, we have failed to promulgate knowledge about how to program imperatively?\n\nBack in the day, folks like Dijkstra, Hoare, Wirth, Knuth, and Naur did a lot of work on figuring out how to write imperative programs that did what they were intended to do.\n\nHowever, nowadays, I get the impression that much of the energy being spent on making programs better is focused on alternative ways to structure programs, like object oriented design, distributed and\/or parallel and\/or concurrent, event driven, reactive, etc. However, most of these design disciplines still involve executing chunks of imperative code, they just involve new and different ways of deciding which imperative code runs when.\n\nThis may be a dull and boring idea, but is it possible that part of what we need in order to improve software is wider distribution and study of the old ways of writing correct imperative programs, so that more of the little chunks of imperative code that get executed during an object oriented or event driven program will do what they are supposed to do?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7fd1bd5c536",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7fd1bd5c53681452a80086a54ebb2ad1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Personal",
            "real_name": "Personal Dynamic Media",
            "display_name": "Personal Dynamic Media",
            "team": "T5TCAFTA9",
            "name": "personaldynamicmedia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655748966.611579",
        "reply_count": 7,
        "reply_users_count": 7,
        "latest_reply": "1655959279.484379",
        "reply_users": [
            "U03DNFDFYDA",
            "UCUSW7WVD",
            "U03CEGR3HSL",
            "U03E03MNL3V",
            "U02028JHX37",
            "U01SUK9M8R2",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "U03DNFDFYDA",
                "ts": "1655749902.653779"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1655760552.235979"
            },
            {
                "user": "U03CEGR3HSL",
                "ts": "1655760872.401939"
            },
            {
                "user": "U03E03MNL3V",
                "ts": "1655772886.863429"
            },
            {
                "user": "U02028JHX37",
                "ts": "1655790781.802479"
            },
            {
                "user": "U01SUK9M8R2",
                "ts": "1655852114.844389"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1655959279.484379"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aSxXt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is it possible that in our efforts to find alternatives to imperative programming, we have failed to promulgate knowledge about how to program imperatively?\n\nBack in the day, folks like Dijkstra, Hoare, Wirth, Knuth, and Naur did a lot of work on figuring out how to write imperative programs that did what they were intended to do.\n\nHowever, nowadays, I get the impression that much of the energy being spent on making programs better is focused on alternative ways to structure programs, like object oriented design, distributed and\/or parallel and\/or concurrent, event driven, reactive, etc. However, most of these design disciplines still involve executing chunks of imperative code, they just involve new and different ways of deciding which imperative code runs when.\n\nThis may be a dull and boring idea, but is it possible that part of what we need in order to improve software is wider distribution and study of the old ways of writing correct imperative programs, so that more of the little chunks of imperative code that get executed during an object oriented or event driven program will do what they are supposed to do?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1655749029.213759",
        "client_msg_id": "166baa6f-0c11-41ed-a059-951f6f334517",
        "text": "Second, third and fourth jobs didn’t really have this feature…",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655747158.959289",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AloH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Second, third and fourth jobs didn’t really have this feature…"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1655749242.929969",
        "client_msg_id": "9dba2e8b-02e3-413f-a64f-3a8c97a02bf0",
        "text": "Fifth job was <http:\/\/layer7.com|layer7.com> (an API gateway appliance), every message needed to be resolved to one of potentially hundreds of policies, but the resolution logic was pretty simple, and once resolved, the policy didn’t tend to be too branchy",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655747158.959289",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JwR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Fifth job was "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/layer7.com",
                                "text": "layer7.com"
                            },
                            {
                                "type": "text",
                                "text": " (an API gateway appliance), every message needed to be resolved to one of potentially hundreds of policies, but the resolution logic was pretty simple, and once resolved, the policy didn’t tend to be too branchy"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1655749385.184329",
        "client_msg_id": "ADA56DD7-AE81-474D-8B48-99C917B82E4E",
        "text": "Sounds like streaming analytics to me.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655747158.959289",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A3D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sounds"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "like"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "streaming"
                            },
                            {
                                "type": "text",
                                "text": " analytics "
                            },
                            {
                                "type": "text",
                                "text": "to"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "me."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1655749416.780449",
        "client_msg_id": "17a90f07-3052-470a-98c0-fa8c8fc3c415",
        "text": "Sixth job was a SaaS app for monitoring compliance rules at brokerages… There were hundreds of handcrafted rules that needed to be evaluated against every Order, Trade and Account record after a nightly ETL job. Before I got involved, every rule was run one at a time, sequentially, and some customers’ nightly jobs were starting to run up against the clock.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655747158.959289",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uPI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sixth job was a SaaS app for monitoring compliance rules at brokerages… There were hundreds of handcrafted rules that needed to be evaluated against every Order, Trade and Account record after a nightly ETL job. Before I got involved, every rule was run one at a time, sequentially, and some customers’ nightly jobs were starting to run up against the clock."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1655749452.434219",
        "client_msg_id": "11855547-6dba-4f6e-8238-2f385c249615",
        "text": "Definitely streaming analytics, but from what I’ve seen so far the support for this pattern isn’t great anywhere",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655747158.959289",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "COrij",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Definitely streaming analytics, but from what I’ve seen so far the support for this pattern isn’t great anywhere"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1655749490.555159",
        "client_msg_id": "74146895-4CC6-4F38-9927-4365C6DB5650",
        "text": "Differential dataflow should handle it well I would think. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655747158.959289",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3DNxl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Differential"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "dataflow"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "should"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "handle"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "it"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "well"
                            },
                            {
                                "type": "text",
                                "text": " I "
                            },
                            {
                                "type": "text",
                                "text": "would"
                            },
                            {
                                "type": "text",
                                "text": " think"
                            },
                            {
                                "type": "text",
                                "text": ". "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1655749579.487879",
        "client_msg_id": "07e35e3a-9170-4070-b25f-ed80fbd7d23f",
        "text": "I’ve definitely been keeping a close eye on <http:\/\/materialize.io|materialize.io> :slightly_smiling_face: … IIUC they don’t do a great job with datasets that are significantly larger than main memory",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655747158.959289",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w\/O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve definitely been keeping a close eye on "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/materialize.io",
                                "text": "materialize.io"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " … IIUC they don’t do a great job with datasets that are significantly larger than main memory"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1655749801.216289",
        "client_msg_id": "30f9c133-69f0-44f6-acb6-eca8b397d7a6",
        "text": "At the brokerage monitoring thing, the hack I came up with was to stipulate that every rule needed to start with (in an AND position) a predicate that was constrained to be mechanically translatable to SQL, and all other predicates were MVEL, less constrained. All the rules that shared that primary predicate would be run as a single query as the first filter, and the MVEL expressions for the sub-rules would be run in-memory instead of pushed down",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655747158.959289",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/=h\/D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At the brokerage monitoring thing, the hack I came up with was to stipulate that every rule needed to start with (in an AND position) a predicate that was constrained to be mechanically translatable to SQL, and all other predicates were MVEL, less constrained. All the rules that shared that primary predicate would be run as a single query as the first filter, and the MVEL expressions for the sub-rules would be run in-memory instead of pushed down"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1655749902.653779",
        "client_msg_id": "2de7451c-6ac3-46df-bc64-549e54fe761d",
        "text": "&gt; the old ways of writing correct imperative programs\nNot sure how well this ever worked :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655748966.611579",
        "parent_user_id": "U03CEGR3HSL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yR3",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the old ways of writing correct imperative programs"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure how well this ever worked "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1655750122.998189",
        "client_msg_id": "cef6eabe-7fed-4c04-ae32-5214d5489e5a",
        "text": "ah yeah, if you need something out of core, I don't think DD (which is lower level than the materialize offering) will give you that, though it may be something you could add. <http:\/\/Relational.ai|Relational.ai> is probably almost exactly what you want (very powerful variant of datalog that can handle very large datasets and does incremental evaluation), but they're a bit early yet.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655747158.959289",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=y88e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ah yeah, if you need something out of core, I don't think DD (which is lower level than the materialize offering) will give you that, though it may be something you could add. "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/Relational.ai",
                                "text": "Relational.ai"
                            },
                            {
                                "type": "text",
                                "text": " is probably almost exactly what you want (very powerful variant of datalog that can handle very large datasets and does incremental evaluation), but they're a bit early yet."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1655750232.745209",
        "client_msg_id": "78703ebc-165c-4d1f-97ec-4230e8ce3c14",
        "text": "Lately I’ve been more focused on teasing out the 3-4 very different cost models for the sub-expressions that queries are composed of:\n• pure functions that don’t even look at data or the environment; that can be evaluated whenever\n• functions that need to look at the record, or cheap environment stuff like the current time of day\n• stateful functions, usually aggregates but sometimes more complex\n• things that need to do IO: lookups, external service calls, etc. Caching becomes mission-critical",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655747158.959289",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BWO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lately I’ve been more focused on teasing out the 3-4 very different cost models for the sub-expressions that queries are composed of:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "pure functions that don’t even look at data or the environment; that can be evaluated whenever"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "functions that need to look at the record, or cheap environment stuff like the current time of day"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "stateful functions, usually aggregates but sometimes more complex"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "things that need to do IO: lookups, external service calls, etc. Caching becomes mission-critical"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1655760552.235979",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1655777123.000000"
        },
        "client_msg_id": "2451aefc-b47a-46b1-9920-3092a93606a8",
        "text": "I notice you didn't mention functional in your list. Was that deliberate? :slightly_smiling_face: I don't think it involves chunks of imperative code, or orchestration of when each step runs.\n\nDijkstra's _A Discipline of Programming_ is one of the top 10 books on my bookshelf, and highly recommended no matter what paradigm you program in.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655748966.611579",
        "parent_user_id": "U03CEGR3HSL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X4MJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I notice you didn't mention functional in your list. Was that deliberate? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " I don't think it involves chunks of imperative code, or orchestration of when each step runs.\n\nDijkstra's "
                            },
                            {
                                "type": "text",
                                "text": "A Discipline of Programming",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is one of the top 10 books on my bookshelf, and highly recommended no matter what paradigm you program in."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "amiga-tick",
                "users": [
                    "U02M6PM725T"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1655760872.401939",
        "client_msg_id": "dd0254b4-313c-42d7-b287-b08d69b5e07d",
        "text": "Yes, I left out purely functional programming and logic programming on purpose, both because they are not especially popular and because it requires some twisted thinking to fit them into the viewpoint I am taking.\n\nHowever, I would argue that mostly functional programming, like in Scheme, ML, or Clojure would still fit into this worldview of programs still containing small chunks of imperative code that need to be written correctly.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7fd1bd5c536",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7fd1bd5c53681452a80086a54ebb2ad1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Personal",
            "real_name": "Personal Dynamic Media",
            "display_name": "Personal Dynamic Media",
            "team": "T5TCAFTA9",
            "name": "personaldynamicmedia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655748966.611579",
        "parent_user_id": "U03CEGR3HSL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SmxU\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, I left out purely functional programming and logic programming on purpose, both because they are not especially popular and because it requires some twisted thinking to fit them into the viewpoint I am taking.\n\nHowever, I would argue that mostly functional programming, like in Scheme, ML, or Clojure would still fit into this worldview of programs still containing small chunks of imperative code that need to be written correctly."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1655761893.884199",
        "edited": {
            "user": "U02E4DAQGSZ",
            "ts": "1655762002.000000"
        },
        "client_msg_id": "5fdeaedb-e9e3-4e19-8d05-444ff8a87e6e",
        "text": "yeah I have seen this a lot too, e.g. achievements on fitness trackers (tell me when I have done 10,000 steps over 10K customer base).\n\nThe specification is declarative but the data arrives incrementally. Due to the huge maintenance issues of trying to upgrade state on an incremental streaming solution, I tend to recommend just recomputing from scratch every X mins and throw horizontal compute at it (e.g. BigQuery). The system remains stateless then, plus you always need the from scratch computation anyway to recover from disaster, so it's the first thing to do anyway.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655747158.959289",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "abk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah I have seen this a lot too, e.g. achievements on fitness trackers (tell me when I have done 10,000 steps over 10K customer base).\n\nThe specification is declarative but the data arrives incrementally. Due to the huge maintenance issues of trying to upgrade state on an incremental streaming solution, I tend to recommend just recomputing from scratch every X mins and throw horizontal compute at it (e.g. BigQuery). The system remains stateless then, plus you always need the from scratch computation anyway to recover from disaster, so it's the first thing to do anyway."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1655762323.503099",
        "client_msg_id": "2283aa06-215e-46fe-8cf0-c4baa7010493",
        "text": "I see this as  a recurring theme of incremental computation, where I see analogues with differential equations.\n```declarative is to imperatives as y = f(x) is to dy\/dx = f(x, y) ```",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655747158.959289",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PIuv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I see this as  a recurring theme of incremental computation, where I see analogues with differential equations.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "declarative is to imperatives as y = f(x) is to dy\/dx = f(x, y) "
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U03E03MNL3V",
        "type": "message",
        "ts": "1655772886.863429",
        "client_msg_id": "88F3907F-ADAD-4AC3-839C-7790B1C606FC",
        "text": "Rust does the things. To write imperative programming correctly today, we will need Rust or better.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ed439042059",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-05-12\/3510607958037_8ed439042059d9927ccd_72.jpg",
            "first_name": "Ryo",
            "real_name": "Ryo Hirayama",
            "display_name": "Ryo Hirayama",
            "team": "T5TCAFTA9",
            "name": "ryo12redstone",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655748966.611579",
        "parent_user_id": "U03CEGR3HSL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l9m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Rust"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "does"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "the"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "things. To write imperative programming correctly today, we"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "will need Rust or better."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1655790370.376589",
        "client_msg_id": "4f890c69-5a3c-4045-8f48-cb1a812df599",
        "text": "Thanks for the update <@UJBAJNFLK>.  I haven't used Smalltalk in anger in 20 years and so fully expect that I don't know a thing about modern setups.  (Except for having clicked around Glamorous Toolkit a bit.  How could I not?)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655316367.875769",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AdD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the update "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": ".  I haven't used Smalltalk in anger in 20 years and so fully expect that I don't know a thing about modern setups.  (Except for having clicked around Glamorous Toolkit a bit.  How could I not?)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02028JHX37",
        "type": "message",
        "ts": "1655790781.802479",
        "client_msg_id": "f3524b16-900a-49b8-a74f-16e3adc31e63",
        "text": "I’m not sure I agree with that bits of imperative code always get run (I mean: obviously it does; but is this a good viewpoint?).\n\nHowever, what certainly happens in all paradigms (even functional and logic) is that inbetween “cybernetical parts” (parts that do stuff: function applications, rules, statements, message sends, …) you get to play with lexical variables containing state. These aren’t easily analyzed, even when the state is “immutable” (immutability doesn’t imply discoverability or predictability).\n\nSo what is needed, in my view, is better handling of lexical variables (what they contain w.r.t. cybernetic elements of the program) and their evolution through control flow (imperative control flow, but also repeated message receives \/ function applications). One can imagine that a better understanding of imperative programs might lead to this handling of variables and control flow, since both are present in almost all paradigms in the form they had in imperative languages (an exception I can think of is constraint-solving).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdf13e3ce9df",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/df13e3ce9dfc39e2f387bd3d6e87b952.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jan Ruzicka",
            "display_name": "Jan Ruzicka",
            "team": "T5TCAFTA9",
            "name": "jan.ruzicka01",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655748966.611579",
        "parent_user_id": "U03CEGR3HSL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "euu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m not sure I agree with that bits of imperative code always get run (I mean: obviously it does; but is this a good viewpoint?).\n\nHowever, what certainly happens in all paradigms (even functional and logic) is that inbetween “cybernetical parts” (parts that do stuff: function applications, rules, statements, message sends, …) you get to play with lexical variables containing state. These aren’t easily analyzed, even when the state is “immutable” (immutability doesn’t imply discoverability or predictability).\n\nSo what is needed, in my view, is better handling of lexical variables (what they contain w.r.t. cybernetic elements of the program) and their evolution through control flow (imperative control flow, but also repeated message receives \/ function applications). One can imagine that a better understanding of imperative programs might lead to this handling of variables and control flow, since both are present in almost all paradigms in the form they had in imperative languages (an exception I can think of is constraint-solving)."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]