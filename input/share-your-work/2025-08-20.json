[
    {
        "user": "U01MCG14D38",
        "type": "message",
        "ts": "1755700899.146169",
        "client_msg_id": "0e4b21a6-2e84-4da0-b1eb-b7c514ec9d34",
        "text": "You've given me a bunch of new things for my reading list, I'll say that! Need to look more into the viable systems model now.\n\nThe thing that I worry about with granting code execution abilities to LLMs is that the sandboxing abilities we typically use for arbitrary code are pretty coarse-grained. Especially if you add metaprogramming to the mix; it's all well and good to have a framework for controlling access to the files on your filesystem, but if the agent can modify itself to use `File.open` directly it can bypass your framework.\n\nThat said, I think you're right that being able to do metaprogramming will likely be important to make better use of them! Which makes it all the more important to figure out how to do that safely. I think the most promising approach there is using object-capabilities, which (to very much oversimplify) involves having a strict sandbox by default and selectively passing in capabilities for fine-grained authority. Your agent can write whatever code it wants, but if all that code only has access to the capabilities that are locally in-scope at that point, you're in a much better place I think. <https:\/\/spritely.institute\/news\/announcing-spritely-oaken.html|This> is the most concise but detailed explanation I've seen of what that might look like at a language level.\n\nThe trouble, of course, is that it's difficult to do that in most programming languages, and the languages I'm aware of that are working on it aren't done yet. :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g91f898f2272",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/91f898f2272e506007fec215d6b75609.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jonathan Frederickson",
            "display_name": "Jonathan Frederickson",
            "team": "T5TCAFTA9",
            "name": "jonathan795",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755436500.789159",
        "parent_user_id": "U05GSC0B4A0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NnjW7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You've given me a bunch of new things for my reading list, I'll say that! Need to look more into the viable systems model now.\n\nThe thing that I worry about with granting code execution abilities to LLMs is that the sandboxing abilities we typically use for arbitrary code are pretty coarse-grained. Especially if you add metaprogramming to the mix; it's all well and good to have a framework for controlling access to the files on your filesystem, but if the agent can modify itself to use "
                            },
                            {
                                "type": "text",
                                "text": "File.open",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " directly it can bypass your framework.\n\nThat said, I think you're right that being able to do metaprogramming will likely be important to make better use of them! Which makes it all the more important to figure out how to do that safely. I think the most promising approach there is using object-capabilities, which (to very much oversimplify) involves having a strict sandbox by default and selectively passing in capabilities for fine-grained authority. Your agent can write whatever code it wants, but if all that code only has access to the capabilities that are locally in-scope at that point, you're in a much better place I think. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/spritely.institute\/news\/announcing-spritely-oaken.html",
                                "text": "This"
                            },
                            {
                                "type": "text",
                                "text": " is the most concise but detailed explanation I've seen of what that might look like at a language level.\n\nThe trouble, of course, is that it's difficult to do that in most programming languages, and the languages I'm aware of that are working on it aren't done yet. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05GSC0B4A0",
        "type": "message",
        "ts": "1755701743.958789",
        "client_msg_id": "6c2a639a-7e24-4b93-81fb-6e2a0f80c8f2",
        "text": "Hah you know what's really interesting about that...you can kind of look at the evolution of our practices and industry as this pendulum swinging between unsafe and safe (in the past I've heard informal vs formal) - where the informal\/unsafe side rushes out ahead and gets some early wins and then once things get big enough the safe side comes in and makes it stable on each new platform....if you squint its kind of like smalltalk -&gt; c++\/java -&gt; ruby\/javascript -&gt; typescript\/rust",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g6366d8630c4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6366d8630c4e2394142efb0a9358fcc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "Scott",
            "real_name": "Scott",
            "display_name": "Scott",
            "team": "T5TCAFTA9",
            "name": "scott099",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755436500.789159",
        "parent_user_id": "U05GSC0B4A0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B6gjZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hah you know what's really interesting about that...you can kind of look at the evolution of our practices and industry as this pendulum swinging between unsafe and safe (in the past I've heard informal vs formal) - where the informal\/unsafe side rushes out ahead and gets some early wins and then once things get big enough the safe side comes in and makes it stable on each new platform....if you squint its kind of like smalltalk -> c++\/java -> ruby\/javascript -> typescript\/rust"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05GSC0B4A0",
        "type": "message",
        "ts": "1755701837.552099",
        "client_msg_id": "1d5391de-db7e-42bb-a616-a46cc7162de5",
        "text": "I suspect the people that rush ahead and don't bother with worrying that an agent can modify itself to use `File.open` if most of the time it wont will end up finding a bunch of cases where things do go wrong pretty often...and that's when you'll see a huge demand for those strict sandboxing capabilities come up",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g6366d8630c4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6366d8630c4e2394142efb0a9358fcc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "Scott",
            "real_name": "Scott",
            "display_name": "Scott",
            "team": "T5TCAFTA9",
            "name": "scott099",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755436500.789159",
        "parent_user_id": "U05GSC0B4A0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yyAH0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suspect the people that rush ahead and don't bother with worrying that an agent can modify itself to use "
                            },
                            {
                                "type": "text",
                                "text": "File.open",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " if most of the time it wont will end up finding a bunch of cases where things do go wrong pretty often...and that's when you'll see a huge demand for those strict sandboxing capabilities come up"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05GSC0B4A0",
        "type": "message",
        "ts": "1755701992.306439",
        "client_msg_id": "aefc198a-9276-4925-8764-6ae88d3f893f",
        "text": "People are already getting comfortable putting Claude Code into yolo mode, and a few people are starting to install claude code onto their production VM and just having it modify code directly there :laughing:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g6366d8630c4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6366d8630c4e2394142efb0a9358fcc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "Scott",
            "real_name": "Scott",
            "display_name": "Scott",
            "team": "T5TCAFTA9",
            "name": "scott099",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755436500.789159",
        "parent_user_id": "U05GSC0B4A0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p6Mkn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "People are already getting comfortable putting Claude Code into yolo mode, and a few people are starting to install claude code onto their production VM and just having it modify code directly there "
                            },
                            {
                                "type": "emoji",
                                "name": "laughing",
                                "unicode": "1f606"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]