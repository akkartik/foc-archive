[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1591948865.183700",
        "client_msg_id": "105F93E6-3BE8-4EB8-896D-46B8D82342F7",
        "text": "<@UCGAK10LS> It seems that what you want is scaled integers, right? Maybe <http:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2018\/p0828r1.html|this proposal> would work for you. There even seems to be <https:\/\/github.com\/johnmcfarlane\/cnl|an implementation> (in C++).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591869278.153800",
        "parent_user_id": "UCGAK10LS",
        "attachments": [
            {
                "fallback": "johnmcfarlane\/cnl",
                "text": "A Compositional Numeric Library for C++",
                "title": "johnmcfarlane\/cnl",
                "footer": "<https:\/\/github.com\/johnmcfarlane\/cnl|johnmcfarlane\/cnl>",
                "id": 1,
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "ts": 1500525957,
                "color": "24292f",
                "fields": [
                    {
                        "title": "Stars",
                        "value": "337",
                        "short": true
                    },
                    {
                        "title": "Language",
                        "value": "C++",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text",
                    "fields"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https:\/\/github.com\/johnmcfarlane\/cnl",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "04J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " It seems that what you want is scaled integers, right? Maybe "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2018\/p0828r1.html",
                                "text": "this proposal"
                            },
                            {
                                "type": "text",
                                "text": " would work for you. There even seems to be "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/johnmcfarlane\/cnl",
                                "text": "an implementation"
                            },
                            {
                                "type": "text",
                                "text": " (in C++)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1591949060.185900",
        "client_msg_id": "15E3BDD8-4816-4E24-9CBA-D6960C699467",
        "text": "<@UEQ6M68H0> DEC64 follows different priorities than IEEE 754. If your needs are closer to DEC64, that’s fine, but not a reason to call IEEE754 stupid.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591869278.153800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qEI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " DEC64 follows different priorities than IEEE 754. If your needs are closer to DEC64, that’s fine, but not a reason to call IEEE754 stupid."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1591953177.188100",
        "client_msg_id": "7277C9AA-232F-4B85-9008-F51B1F92ED50",
        "text": "<@UJBAJNFLK> I want fractional numbers like 1.5, and dynamic range (compact representations of 2^100 and 2^-100) and I don’t think that proposal addresses that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591869278.153800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1HxOv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " I want fractional numbers like 1.5, and dynamic range (compact representations of 2^100 and 2^-100) and I don’t think that proposal addresses that."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1591953212.188700",
        "client_msg_id": "90C30CE4-C398-47CC-B780-59E5782C6E0F",
        "text": "(Though I appreciate the suggestions)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591869278.153800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5UHl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Though I appreciate the suggestions)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL5AX4G2H",
        "type": "message",
        "ts": "1591955819.200400",
        "client_msg_id": "59209c7d-12da-4cd5-bd5d-285b878db6f3",
        "text": "Weekly update from CodeFaster. This week's topic is how to write a printf debug statement. It's a simple but important suggestion that's often overlooked. The post does the main job of making it clear how to use it from the examples. Some of the subtlties of the advantages were obscured in the writing. So I'll lean more on code examples and less on english prose\n\n<https:\/\/codefaster.substack.com\/p\/printf-debugging|https:\/\/codefaster.substack.com\/p\/printf-debugging>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b05739c44158",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-12-05\/1552783044467_b05739c44158d860f3bd_72.png",
            "first_name": "",
            "real_name": "Tyler Adams",
            "display_name": "Tyler Adams",
            "team": "T5TCAFTA9",
            "name": "coppero1237",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591955819.200400",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1591955863.200700",
        "reply_users": [
            "UL5AX4G2H"
        ],
        "replies": [
            {
                "user": "UL5AX4G2H",
                "ts": "1591955863.200700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "Printf Debugging",
                "title_link": "https:\/\/codefaster.substack.com\/p\/printf-debugging",
                "text": "Printf debugging is essential, so since we’re going to do it anyways, let’s do it fast. In this post we’ll focus specifically on how to write printf debugging log lines to make them fast to read and write programs against. There’s two important features: a machine parsable format like json or DSV and explicitly labeled fields.",
                "fallback": "Printf Debugging",
                "thumb_url": "https:\/\/cdn.substack.com\/image\/fetch\/w_256,c_limit,f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fc21d3e2d-bc9d-401f-bbe8-225d0d0643d9_256x256.png",
                "from_url": "https:\/\/codefaster.substack.com\/p\/printf-debugging",
                "thumb_width": 256,
                "thumb_height": 256,
                "service_icon": "https:\/\/bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com\/public\/images\/d8afe861-b0e8-49ce-b80e-2d642b648703\/apple-touch-icon-57x57.png",
                "service_name": "codefaster.substack.com",
                "id": 1,
                "original_url": "https:\/\/codefaster.substack.com\/p\/printf-debugging"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mpuJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Weekly update from CodeFaster. This week's topic is how to write a printf debug statement. It's a simple but important suggestion that's often overlooked. The post does the main job of making it clear how to use it from the examples. Some of the subtlties of the advantages were obscured in the writing. So I'll lean more on code examples and less on english prose\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/codefaster.substack.com\/p\/printf-debugging",
                                "text": "https:\/\/codefaster.substack.com\/p\/printf-debugging"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL5AX4G2H",
        "type": "message",
        "ts": "1591955863.200700",
        "client_msg_id": "75da0a4d-d5f8-4b79-a11e-c5084d061d4f",
        "text": "Im posting this here as was suggested in <#C0120A3L30R|two-minute-week> if I wanted a public forum for a weekly update.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b05739c44158",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-12-05\/1552783044467_b05739c44158d860f3bd_72.png",
            "first_name": "",
            "real_name": "Tyler Adams",
            "display_name": "Tyler Adams",
            "team": "T5TCAFTA9",
            "name": "coppero1237",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591955819.200400",
        "parent_user_id": "UL5AX4G2H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N9b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Im posting this here as was suggested in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C0120A3L30R"
                            },
                            {
                                "type": "text",
                                "text": " if I wanted a public forum for a weekly update."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1591965671.200900",
        "client_msg_id": "424f64b3-ceee-410f-89ef-09e96bc32cbb",
        "text": "&gt; I want to see a library for dyadic rational arithmetic.\nI googled that, and got:\n• <https:\/\/github.com\/SRI-CSL\/libpoly\/tree\/master\/src\/number>\nThe code for exact dyadic rational addition and multiplication is actually quite simple.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591869278.153800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s7a",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I want to see a library for dyadic rational arithmetic."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I googled that, and got:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/SRI-CSL\/libpoly\/tree\/master\/src\/number"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The code for exact dyadic rational addition and multiplication is actually quite simple."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1591968862.201100",
        "client_msg_id": "1179dd50-e17e-4461-b6b9-94d2c00d145f",
        "text": "<@UCGAK10LS> please remind us what operations you want to do.  You've mentioned addition and multiplication, sometimes division.  What else?  Roots?  Trig?  What?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591869278.153800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XmaG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " please remind us what operations you want to do.  You've mentioned addition and multiplication, sometimes division.  What else?  Roots?  Trig?  What?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1591975277.202600",
        "client_msg_id": "967ED511-0E9A-4435-A434-BBC9E9F2490A",
        "text": "As we have several fans of Christopher Alexander here, I don‘t want you to miss out on this gem of a talk I just came across: <https:\/\/twitter.com\/stefanlesser\/status\/1271442252078989315?s=21|https:\/\/twitter.com\/stefanlesser\/status\/1271442252078989315?s=21>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591975277.202600",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1592287188.325900",
        "reply_users": [
            "UC2A2ARPT",
            "UAVCC2X70",
            "U5STGTB3J"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1591991977.203800"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1592283086.322800"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1592283551.323100"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1592287188.325900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/stefanlesser|@stefanlesser>: „Designing with Forces“, a presentation by <https:\/\/twitter.com\/rjs|@rjs> about how to apply some of Christopher Alexander‘s ideas to software design, is well worth watching. \nAlexander came up with so much more than just design patterns which can be applied to software. \n<https:\/\/youtu.be\/vjWJBy_9DO0>",
                "ts": 1591970429,
                "author_name": "Stefan Lesser",
                "author_link": "https:\/\/twitter.com\/stefanlesser\/status\/1271442252078989315",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/378800000350383902\/ea834338bc94043c1d14c94538e39eda_normal.jpeg",
                "author_subname": "@stefanlesser",
                "text": "„Designing with Forces“, a presentation by <https:\/\/twitter.com\/rjs|@rjs> about how to apply some of Christopher Alexander‘s ideas to software design, is well worth watching. \nAlexander came up with so much more than just design patterns which can be applied to software. \n<https:\/\/youtu.be\/vjWJBy_9DO0>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/stefanlesser\/status\/1271442252078989315?s=21",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/stefanlesser\/status\/1271442252078989315?s=21",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wu3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As we have several fans of Christopher Alexander here, I don‘t want you to miss out on this gem of a talk I just came across: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/stefanlesser\/status\/1271442252078989315?s=21",
                                "text": "https:\/\/twitter.com\/stefanlesser\/status\/1271442252078989315?s=21"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UMWF81HTP",
                    "UEZQXJK9V",
                    "UDQKHNP51",
                    "UAVCC2X70"
                ],
                "count": 5
            },
            {
                "name": "heart",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1591979080.202900",
        "client_msg_id": "3805ba8f-95c5-429c-8bb2-ee055409f656",
        "text": "<@UCGAK10LS> Oops, right, I have filed that library under the wrong heading in my notes. Which leaves... no library I know about for scaled integers. Which have nevertheless been widely used, as they are very simple to implement in many situations. Addition, subtraction, and multiplications are nearly trivial.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591869278.153800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cRB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " Oops, right, I have filed that library under the wrong heading in my notes. Which leaves... no library I know about for scaled integers. Which have nevertheless been widely used, as they are very simple to implement in many situations. Addition, subtraction, and multiplications are nearly trivial."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1591980421.203100",
        "client_msg_id": "26aa5dd0-575f-4ef7-979a-1ac61aee718e",
        "text": "Well, there is no doubt a body of comp-sci research on this sort of thing that would be worth looking at. \"value range analysis\" is a term I've heard...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590977348.305600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nrw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, there is no doubt a body of comp-sci research on this sort of thing that would be worth looking at. \"value range analysis\" is a term I've heard..."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UK500AGQ4",
        "type": "message",
        "ts": "1591986407.203300",
        "edited": {
            "user": "UK500AGQ4",
            "ts": "1591986570.000000"
        },
        "client_msg_id": "ec35fbbb-5bf7-4603-ae59-42a10cda6146",
        "text": "<@UAVCC2X70> that's an interesting project, have you thought of the analogy to application macros, e.g. in vim or emacs? interestingly, in Emacs, you can record a macro by performing actions, and then store it as Elisp code which calls the functions those actions invoked",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g87b7201c4f7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/687b7201c4f7653ccc0ec77826fc51d7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Spencer Baugh",
            "display_name": "Spencer Baugh",
            "team": "T5TCAFTA9",
            "name": "spencerbaugh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591889749.164700",
        "parent_user_id": "UK500AGQ4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TbC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": " that's an interesting project, have you thought of the analogy to application macros, e.g. in vim or emacs? interestingly, in Emacs, you can record a macro by performing actions, and then store it as Elisp code which calls the functions those actions invoked"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1591991977.203800",
        "client_msg_id": "5b5d1db8-b03c-40ae-a2a8-9709783a454b",
        "text": "I too can vouch for this being good talk.\n\nHere's a higher quality version: <https:\/\/vimeo.com\/10875362>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591975277.202600",
        "parent_user_id": "U5STGTB3J",
        "attachments": [
            {
                "service_name": "Vimeo",
                "service_url": "https:\/\/vimeo.com\/",
                "title": "Ryan Singer, “Designing with Forces: How to Apply Christopher Alexander in Everyday Work ”",
                "title_link": "https:\/\/vimeo.com\/10875362",
                "author_name": "MFA Interaction Design",
                "author_link": "https:\/\/vimeo.com\/svaixd",
                "thumb_url": "https:\/\/i.vimeocdn.com\/video\/174883917_295x166.jpg",
                "thumb_width": 295,
                "thumb_height": 166,
                "fallback": "Vimeo Video: Ryan Singer, “Designing with Forces: How to Apply Christopher Alexander in Everyday Work ”",
                "video_html": "<iframe src=\"https:\/\/player.vimeo.com\/video\/10875362?autoplay=1&amp;app_id=122963\" width=\"400\" height=\"225\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen title=\"Ryan Singer, &amp;ldquo;Designing with Forces: How to Apply Christopher Alexander in Everyday Work &amp;rdquo;\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/vimeo.com\/10875362",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/vimeo.png",
                "id": 1,
                "original_url": "https:\/\/vimeo.com\/10875362"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DOfI1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I too can vouch for this being good talk.\n\nHere's a higher quality version: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/vimeo.com\/10875362"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1592005065.204400",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1592005095.000000"
        },
        "client_msg_id": "f105c524-0565-482b-8ef3-36d0ec2763fa",
        "text": "<@UJN1TAYEQ> Ah, I couldn't find anything like this when I looked, thank you! Yes, it does seem that an implementation won't be too challenging, so I'm probably going to write my own from scratch. Truncated division (to custom precision) might be tricky. I guess I'll find out!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591869278.153800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pbYZZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " Ah, I couldn't find anything like this when I looked, thank you! Yes, it does seem that an implementation won't be too challenging, so I'm probably going to write my own from scratch. Truncated division (to custom precision) might be tricky. I guess I'll find out!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1592005378.204700",
        "client_msg_id": "54878fa0-adca-4042-aadc-06a4f9f201c1",
        "text": "<@UJBAJNFLK> \"Scaled integers\" is a legacy term, right? Most of the sources seem to be referring to older systems and hardware design (or conflate them with fixed-point numbers). I can't seem to find anything interesting.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591869278.153800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VKh7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " \"Scaled integers\" is a legacy term, right? Most of the sources seem to be referring to older systems and hardware design (or conflate them with fixed-point numbers). I can't seem to find anything interesting."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1592005563.204900",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1592005619.000000"
        },
        "client_msg_id": "9e20b966-9fe9-4100-952b-4ab034e866e8",
        "text": "<@UA14TGLTC> Basically all the operations you can do on floats today, except those that consume\/produce non-arithmetic values like -0, NaN, and infinities. So yeah, I'd want rounded roots and transcendental functions. But I will probably have to implement those myself, which is acceptable, because I don't need them in my initial prototyping.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591869278.153800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oCG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " Basically all the operations you can do on floats today, except those that consume\/produce non-arithmetic values like -0, NaN, and infinities. So yeah, I'd want rounded roots and transcendental functions. But I will probably have to implement those myself, which is acceptable, because I don't need them in my initial prototyping."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1592007162.213400",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1592008154.000000"
        },
        "client_msg_id": "70308149-eabf-4e41-8fe3-ed260fb66d1c",
        "text": "Kudos to <@U6KQ2S410> for bringing this to my attention via tweet, here is a blistering article from the British Journal for the Philosophy of Science article <https:\/\/doi.org\/10.1093\/bjps\/axz029> entitled \"Is peer review a good idea?\".  As an outsider to computer science academia, I found that the small group of gatekeepers was an incestuous bunch which only publishes each other, and represents a small clique who thrives on exclusivity, and blocked me the one time I tried to publish about Beads for vague reasons. A working product is better proof than a paper without proof, so it wasn't going to stop me, but it would have been nicer had i been able to publish the major features in an article so that I could get credit for the novel things. It is one of the forms of alternative payment currencies, to get credit for an invention or improvement. It is one of the reasons people publish, in addition to the communist ideal of increasing the public wealth.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592007162.213400",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1592247347.314500",
        "reply_users": [
            "U6KQ2S410",
            "UEQ6M68H0"
        ],
        "replies": [
            {
                "user": "U6KQ2S410",
                "ts": "1592246317.314300"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1592247347.314500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JGwcV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Kudos to "
                            },
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": " for bringing this to my attention via tweet, here is a blistering article from the British Journal for the Philosophy of Science article "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/doi.org\/10.1093\/bjps\/axz029"
                            },
                            {
                                "type": "text",
                                "text": " entitled \"Is peer review a good idea?\".  As an outsider to computer science academia, I found that the small group of gatekeepers was an incestuous bunch which only publishes each other, and represents a small clique who thrives on exclusivity, and blocked me the one time I tried to publish about Beads for vague reasons. A working product is better proof than a paper without proof, so it wasn't going to stop me, but it would have been nicer had i been able to publish the major features in an article so that I could get credit for the novel things. It is one of the forms of alternative payment currencies, to get credit for an invention or improvement. It is one of the reasons people publish, in addition to the communist ideal of increasing the public wealth."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFLN9JFRT",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1592020881.220500",
        "edited": {
            "user": "UFEQUBNNT",
            "ts": "1592020965.000000"
        },
        "client_msg_id": "3B4C0372-E99D-4BE0-923D-E7B1FD5687E2",
        "text": "Have you used Visual Basic? I used to drag and drop components into windows for fun, just to see what they did. Click around the property windows, type stuff, check boxes. Sometimes I’d have installed software that automatically added bits of their functionality to the list of controls I could drop in.\n\nThese days it’s like, “I hope someone’s wrapped this feature in a React component and put it on NPM with an example of how to initialize it.”",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590522102.229200",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RcM8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you used Visual Basic? I used to drag and drop components into windows for fun, just to see what they did. Click around the property windows, type stuff, check boxes. Sometimes I’d have installed software that automatically added bits of their functionality to the list of controls I could drop in.\n\nThese days it’s like, “I hope someone’s wrapped this feature in a React component and put it on NPM with an example of how to initialize it.”"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1592021907.226600",
        "edited": {
            "user": "UFEQUBNNT",
            "ts": "1592021921.000000"
        },
        "client_msg_id": "69F0C91F-58EE-408B-991A-C6091BDFA728",
        "text": "Thanks for making it available!\n\nIt looks like it’s a pure language\/BERT model… Is there a clear path toward integrating with external sources of information like the Python runtime? I’m noticing in your example that some likelihood is assigned to sequences that refer to variables that don’t appear to be in scope.\n\nIs there a natural language model embedded inside it? Like, if I feed it “# &lt;mask&gt;” how likely am I to get a comment that documents the next line of code?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591023770.311300",
        "parent_user_id": "UPU0YJ1CM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cB3Ve",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for making it available!\n\nIt looks like it’s a pure language\/BERT model… Is there a clear path toward integrating with external sources of information like the Python runtime? I’m noticing in your example that some likelihood is assigned to sequences that refer to variables that don’t appear to be in scope.\n\nIs there a natural language model embedded inside it? Like, if I feed it “# <mask>” how likely am I to get a comment that documents the next line of code?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UPU0YJ1CM"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1592023174.240100",
        "client_msg_id": "C08E8733-9738-4803-8EF4-B9F5827B58FF",
        "text": "FWIW, when I wrote a browser-based projectional editor for a blocks language, I found it easiest to write it just like I would any other form on the web.\n\nI had one UI component per type of AST node. The components rendered text fields and drop targets and other standard web UI affordances to support editability.\n\nVariable bindings, types, etc, are derivative information that I could cache when necessary, or just recompute from the AST as-needed. I mostly did the latter.\n\nBecause I designed the AST for projectional editing, there were comment slots on any node that would benefit from special rendering of comments, and I had a comment block node that you could wrap any other block of code in to describe what that block did. If you’re using someone else’s AST, you may not have that luxury, but you may be able to write your own AST for editing and a translation layer between yours and the executable AST. I have parsed JavaScript ASTs to guess which comments document which other nodes and with some heuristics you can guess pretty well.\n\nHope this helps!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591623666.059200",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zYc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FWIW, when I wrote a browser-based projectional editor for a blocks language, I found it easiest to write it just like I would any other form on the web.\n"
                            },
                            {
                                "type": "text",
                                "text": "\nI had one UI component per type of AST node. The components rendered text fields and drop targets and other standard web UI affordances to support editability.\n\nVariable bindings, types, etc, are derivative information that I could cache when necessary, or just recompute from the AST as-needed. I mostly did the latter.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Because I designed the AST for projectional editing, there were comment slots on any node that would benefit from special rendering of comments, and I had a comment block node that you could wrap any other block of code in to describe what that block did. If you’re using someone else’s AST, you may not have that luxury, but you may be able to write your own AST for editing and a translation layer between yours and the executable AST. I have parsed JavaScript ASTs to guess which comments document which other nodes and with some heuristics you can guess pretty well.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Hope this helps!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFLN9JFRT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1592023914.244600",
        "client_msg_id": "8CA2F278-FDB5-44F4-9BCD-C705DD413F15",
        "text": "Does anyone here have experience embedding WebAssembly VMs? I’d like to talk about where there’s any firm ground from which to start on a FoC idea. I can only find half-finished projects and systems that _used_ to work.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592023914.244600",
        "reply_count": 42,
        "reply_users_count": 7,
        "latest_reply": "1593796642.273800",
        "reply_users": [
            "UBN9AFS0N",
            "UJN1TAYEQ",
            "UFEQUBNNT",
            "U014Y19RYA3",
            "UEQ6M68H0",
            "UAL7940NM",
            "UHDQ62M4P"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1592041627.246200"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1592041668.246500"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1592041679.246800"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1592051828.250200"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1592084415.253900"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1592084471.254500"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1592084756.257600"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1592087323.257800"
            },
            {
                "user": "U014Y19RYA3",
                "ts": "1592094120.258600"
            },
            {
                "user": "U014Y19RYA3",
                "ts": "1592094179.258800"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1592094508.261000"
            },
            {
                "user": "U014Y19RYA3",
                "ts": "1592094650.261200"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1592094744.261800"
            },
            {
                "user": "U014Y19RYA3",
                "ts": "1592094758.262000"
            },
            {
                "user": "U014Y19RYA3",
                "ts": "1592094774.262200"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1592095420.262600"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1592108457.262800"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1592108692.263900"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1592158721.266200"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1592161232.292200"
            },
            {
                "user": "UAL7940NM",
                "ts": "1592166684.295000"
            },
            {
                "user": "U014Y19RYA3",
                "ts": "1592178205.297300"
            },
            {
                "user": "U014Y19RYA3",
                "ts": "1592178283.297500"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1593791347.257000"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1593791390.257200"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1593791424.257400"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1593791465.257600"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1593791546.258000"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1593791595.258200"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1593791617.258400"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1593791629.258600"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1593791660.258800"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1593791683.259000"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1593791869.259200"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1593791933.259600"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1593792263.259800"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1593793336.260500"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1593793458.261000"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1593793480.261300"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1593793535.261500"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1593796607.273000"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1593796642.273800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tn+SU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does anyone here have experience embedding WebAssembly VMs? I’d like to talk about where there’s any firm ground from which to start on a FoC idea. I can only find half-finished projects and systems that "
                            },
                            {
                                "type": "text",
                                "text": "used",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to work."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]