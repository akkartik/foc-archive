[
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1595576988.300900",
        "client_msg_id": "874b121a-bb80-41fc-8fa2-364b1cc00414",
        "text": "This reminds me of A City Is Not A Tree, where he says a city should be modelled as a semilattice. In particular it has some discussion similar to above about when things are truly \"separate\" or not",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NsCo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This reminds me of A City Is Not A Tree, where he says a city should be modelled as a semilattice. In particular it has some discussion similar to above about when things are truly \"separate\" or not"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1595578576.302300",
        "client_msg_id": "79C564F2-9627-41AA-86A8-5891B06754EB",
        "text": "I think some of you here will enjoy this podcast by Ryan Singer of Basecamp, author of _Shape Up_:\n<https:\/\/synthetic.transistor.fm\/|https:\/\/synthetic.transistor.fm\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595578576.302300",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1595623223.450900",
        "reply_users": [
            "UBM0S2AN4"
        ],
        "replies": [
            {
                "user": "UBM0S2AN4",
                "ts": "1595623223.450900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "Synthetic A Priori",
                "title_link": "https:\/\/synthetic.transistor.fm\/",
                "text": "Step into the messy phase of wrestling with ideas before they become conclusions. Ryan Singer draws connections between design, tech, science, and formal systems.",
                "fallback": "Synthetic A Priori",
                "image_url": "https:\/\/images.transistor.fm\/file\/transistor\/images\/social_images\/site\/4480\/Asset_1_3x.png",
                "from_url": "https:\/\/synthetic.transistor.fm\/",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 49538,
                "service_name": "synthetic.transistor.fm",
                "id": 1,
                "original_url": "https:\/\/synthetic.transistor.fm\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vRq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think some of you here will enjoy this podcast by Ryan Singer of Basecamp, author of "
                            },
                            {
                                "type": "text",
                                "text": "Shape Up",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ":\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/synthetic.transistor.fm\/",
                                "text": "https:\/\/synthetic.transistor.fm\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UKP3B2J5D",
                    "UMWF81HTP",
                    "U014WA16VNJ",
                    "UBM0S2AN4",
                    "U010328JA1E"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1595579159.302600",
        "client_msg_id": "ffb0a5ce-fdf9-4dac-9df0-2ec907d6c109",
        "text": "Just to add kindly precision (but I am not sure if this is really important for the discussion):\n&gt; WASM doesn't work with one file. In fact typically it's min 3 files not including assets. One HTML file, one script with all the JS&lt;-&gt;WASM glue. One wasm file.\nTechnically, if needed one can bundle all this in one HTML file, with a script tag for the JavaScript \/ WASM glue, and with the WebAssembly binary content encoded in base64 somewhere in the script or in a custom HTML tag.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hSdV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just to add kindly precision (but I am not sure if this is really important for the discussion):\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "WASM doesn't work with one file. In fact typically it's min 3 files not including assets. One HTML file, one script with all the JS<->WASM glue. One wasm file."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Technically, if needed one can bundle all this in one HTML file, with a script tag for the JavaScript \/ WASM glue, and with the WebAssembly binary content encoded in base64 somewhere in the script or in a custom HTML tag."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7",
                    "U01661S9F34",
                    "ULK0Z4MPV",
                    "UC2A2ARPT"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1595580201.303800",
        "client_msg_id": "4eb9428b-c093-48d9-b2ea-5ebe37ac1248",
        "text": "I am 100% sure these map to different processors in your brain. The exclusivity of a bucket allows you to leverage your Location powers. As things like the Mind Palace technique, and the trick of returning to the place you lost your train of thought, show, leveraging our sense of physical location is very powerful.\n\nTags are also brilliant, but they leverage a different thing, which is our natural ability to categorise and stereotype. This is mainly useful for describing queries and commands.\n\nI remember having an argument about 15 years ago with somebody who was saying that filesystems should be rewritten to be based only on tags, as it's more general. They made the (good) point that it's absurd to distinguish between \/usr\/photos\/wedding\/ and \/usr\/wedding\/photos\/. I still struggle to explain why I hate the idea so gutturally, but I do. I can't relax until I can say \"that's *there's*, that's *here*\" etc. \n\nBasically the ideal system for me is built on a bedrock of buckets, but with the ability to arbitrary query it based on properties, including arbitrary user defined tags. Something's location, i.e. it's filepath can be considered an implicit tag but it should be recognised as fundamentally different.\n\nI am actually making a system like this; basically a Lucene+Tika powered add-on for a filesystem. Impossible to know how universal my preferences are   :shrug:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nq5V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am 100% sure these map to different processors in your brain. The exclusivity of a bucket allows you to leverage your Location powers. As things like the Mind Palace technique, and the trick of returning to the place you lost your train of thought, show, leveraging our sense of physical location is very powerful.\n\nTags are also brilliant, but they leverage a different thing, which is our natural ability to categorise and stereotype. This is mainly useful for describing queries and commands.\n\nI remember having an argument about 15 years ago with somebody who was saying that filesystems should be rewritten to be based only on tags, as it's more general. They made the (good) point that it's absurd to distinguish between \/usr\/photos\/wedding\/ and \/usr\/wedding\/photos\/. I still struggle to explain why I hate the idea so gutturally, but I do. I can't relax until I can say \"that's "
                            },
                            {
                                "type": "text",
                                "text": "there's",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", that's "
                            },
                            {
                                "type": "text",
                                "text": "here",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\" etc. \n\nBasically the ideal system for me is built on a bedrock of buckets, but with the ability to arbitrary query it based on properties, including arbitrary user defined tags. Something's location, i.e. it's filepath can be considered an implicit tag but it should be recognised as fundamentally different.\n\nI am actually making a system like this; basically a Lucene+Tika powered add-on for a filesystem. Impossible to know how universal my preferences are   "
                            },
                            {
                                "type": "emoji",
                                "name": "shrug",
                                "unicode": "1f937"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D",
                    "U9C92716C"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1595580726.304100",
        "client_msg_id": "1d5247c2-1c58-4d8e-a2b2-74766440a39c",
        "text": "There was a good bit written about this distinction in the early 00s, trying to tease out the differences using the terms _taxonomy_ and _folksonomy_. Some of that work might be of interest to your concerns.\n\n<@UDQBTJ211> Do kangaroos go in `\/animals\/australian` or `\/animals\/marsupial`? Is a hot dog a sandwich?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N\/AC5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There was a good bit written about this distinction in the early 00s, trying to tease out the differences using the terms "
                            },
                            {
                                "type": "text",
                                "text": "taxonomy",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "folksonomy",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Some of that work might be of interest to your concerns.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " Do kangaroos go in "
                            },
                            {
                                "type": "text",
                                "text": "\/animals\/australian",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "text",
                                "text": "\/animals\/marsupial",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? Is a hot dog a sandwich?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1595581000.304300",
        "client_msg_id": "77369ec8-a365-45d3-9509-e5964e87ae63",
        "text": "I think the point is, it doesn't matter, there's value in it going Somewhere if that allows you to make use of a sense of location.\n\nWhere does a spork go in a kitchen? I bet it varies by person, but I bet all of those people would remember where *they* put it, in their own kitchen. In someone else's kitchen they would have to start querying and searching, for sure.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q9k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think the point is, it doesn't matter, there's value in it going Somewhere if that allows you to make use of a sense of location.\n\nWhere does a spork go in a kitchen? I bet it varies by person, but I bet all of those people would remember where "
                            },
                            {
                                "type": "text",
                                "text": "they",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " put it, in their own kitchen. In someone else's kitchen they would have to start querying and searching, for sure."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "UKP3B2J5D",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1595581085.304500",
        "client_msg_id": "b6e06123-8965-4a36-882c-827fe32c9cc1",
        "text": "I recently sorted out my Lego so been thinking about this a lot :sweat_smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CqHX0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I recently sorted out my Lego so been thinking about this a lot "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "joy",
                "users": [
                    "U013ZLJARC7",
                    "UE6EFEPTQ",
                    "UKP3B2J5D",
                    "U9C92716C"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595581668.305100",
        "client_msg_id": "dfc1daaa-736d-4c91-b66a-6d173be35962",
        "text": "<@UDQBTJ211> So in the \"models for information\" thread, <@UEBG0NPDK> was talking about how he prefers the idea of \"namespaced tags\", which look a lot like file paths, so you can write something like `\/usr\/photo\/wedding\/`. The distinction from exclusive buckets though, is that you can reference a single datum under multiple different paths!  How does that idea feel to you?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ioKly",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " So in the \"models for information\" thread, "
                            },
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " was talking about how he prefers the idea of \"namespaced tags\", which look a lot like file paths, so you can write something like "
                            },
                            {
                                "type": "text",
                                "text": "\/usr\/photo\/wedding\/",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". The distinction from exclusive buckets though, is that you can reference a single datum under multiple different paths!  How does that idea feel to you?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595581928.305300",
        "client_msg_id": "48d4f8d7-e558-4343-b61a-32508cc77fe4",
        "text": "<@U013ZLJARC7> Those terms are leading me to some interesting resources. Thank you!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HiP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " Those terms are leading me to some interesting resources. Thank you!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1595584897.320400",
        "client_msg_id": "FAC36E86-AFF4-4C5D-A789-620AFD72F5ED",
        "text": "The classic paper _<https:\/\/www.cc.gatech.edu\/classes\/AY2013\/cs7601_spring\/papers\/Simon-Complexity.pdf|The Architecture of Complexity>_ has a lot to say about hierarchy, and where it comes from. It's hard to not see hierarchies everywhere, although it isn’t really clear if that's because _they are_ everywhere, or if it's because _we_ just like to see them everywhere. (Hint: it's us. Our brains love containment as a foundational structure for sense-making.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t=UQk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The classic paper "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.cc.gatech.edu\/classes\/AY2013\/cs7601_spring\/papers\/Simon-Complexity.pdf",
                                "text": "The Architecture of Complexity",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " has a lot to say about hierarchy, and where it comes from. It's hard to not see hierarchies everywhere, although it isn’t really clear if that's because "
                            },
                            {
                                "type": "text",
                                "text": "they are",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " everywhere, or if it's because "
                            },
                            {
                                "type": "text",
                                "text": "we",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " just like to see them everywhere. (Hint: it's us. Our brains love containment as a foundational structure for sense-making.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1595588743.356700",
        "client_msg_id": "D8D18321-00E3-4355-9551-5B0ED10052B1",
        "text": "<@UCGAK10LS> You mention a lot of different things as part of the “bucket” category, so it’s a little difficult to come up with a single, universal answer to what the differences are.\n\nMathematically, a set and a tag can both be just a binary relation without any explicit properties assumed. Then they could be the same, behaviorally.\n\nA list implies some sort of order on multiple relations of that kind, which a tag doesn’t (although you’d always have to order elements tagged with the same tag in some way to display them).\n\nTables and databases add more assumptions on the relations they model. Are they reflexive? Transitive (which you need to model hierarchy)? Etc.\n\nTags probably feel more flexible because they don’t assume anything about the relation they model other than that there exists one (perhaps if it’s one- or two-way?), while “buckets”, especially when seen as containers, do assume that these relations have additional properties which makes them less “flexible”.\n\nAt the end of the day though, the “purity” of tags is diluted by practical concerns, e.g. how to display all elements tagged with the same tag, and then you’re forced to ensure the relations have certain properties, and suddenly you’re back in container-land, just that the same elements can now also be in several containers at once. And then you run into questions of identity: if I change that element in one category, does it change everywhere, or does it just change in the current context (was it just a copy)?\n\nAlso, not hard-coding any properties of these relations basically just shifts the burden on the user; they still need to remember what a tag means to them and keeping different kinds of meaning apart. That’s when they suddenly re-introduce containment with hacks like namespaces or paths.\n\nTechnically, modeling fewer assumptions on relations gives you more flexibility in exchange for performance, as the system can’t make certain assumptions (e.g. order) which could be used for optimizations (e.g. indices).\n\nThankfully, the way the system seems to work from a user’s perspective doesn’t necessarily have to be the way it’s implemented. That probably is what good abstractions are about — they’re not just hiding something, they’re hiding a dramatically different structure that you wouldn’t expect from how the system behaves — and hopefully the way it behaves is easier to understand than how it actually works.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6p=l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " You mention a lot of different things as part of the “bucket” category, so it’s a little difficult to come up with a single, universal answer to what the differences are.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Mathematically, a set and a tag can both be just a binary relation without any explicit properties assumed. Then they could be the same, behaviorally.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "A list implies some sort of order on multiple relations of that kind, which a tag doesn’t (although you’d always have to order elements tagged with the same tag in some way to display them).\n"
                            },
                            {
                                "type": "text",
                                "text": "\nTables and databases add more assumptions on the relations they model. Are they reflexive? Transitive (which you need to model hierarchy)? Etc.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Tags probably feel more flexible because they don’t assume anything about the relation they model other than that there exists one (perhaps if it’s one- or two-way?), while “buckets”, especially when seen as containers, do assume that these relations have additional properties which makes them less “flexible”.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "At the end of the day though, the “purity” of tags is diluted by practical concerns, e.g. how to display all elements tagged with the same tag, and then you’re forced to ensure the relations have certain properties, and suddenly you’re back in container-land, just that the same elements can now also be in several containers at once. And then you run into questions of identity: if I change that element in one category, does it change everywhere, or does it just change in the current context (was it just a copy)?\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Also, not hard-coding any properties of these relations basically just shifts the burden on the user; they still need to remember what a tag means to them and keeping different kinds of meaning apart. That’s when they suddenly re-introduce containment with hacks like namespaces or paths.\n"
                            },
                            {
                                "type": "text",
                                "text": "\nTechnically, modeling fewer assumptions on relations gives you more flexibility in exchange for performance, as the system can’t make certain assumptions (e.g. order) which could be used for optimizations (e.g. indices).\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Thankfully, the way the system seems to work from a user’s perspective doesn’t necessarily have to be the way it’s implemented. That probably is what good abstractions are about — they’re not just hiding something, they’re hiding a dramatically different structure that you wouldn’t expect from how the system behaves — and hopefully the way it behaves is easier to understand than how it actually works."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D",
                    "UL3CJ7YKC",
                    "UHWC9PXBL",
                    "UDQBTJ211",
                    "UJ6LDMMN0"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595589039.356900",
        "client_msg_id": "d150c252-ab30-494a-adde-91baa641db92",
        "text": "Yes, <@UCGAK10LS>, that's a good point: you can't edit db views. You can't edit the value in a formula cell. So a bucket that can evolve may look the same as a query result, but the latter only evolves because one of the former does. Same with tagged data: the \"bucket\" of items with that tag depends on items being tagged, and can't be edited or evolve independent of that. Whereas a directory of items, a bucket, can.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eyr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, "
                            },
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": ", that's a good point: you can't edit db views. You can't edit the value in a formula cell. So a bucket that can evolve may look the same as a query result, but the latter only evolves because one of the former does. Same with tagged data: the \"bucket\" of items with that tag depends on items being tagged, and can't be edited or evolve independent of that. Whereas a directory of items, a bucket, can."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1595589386.357100",
        "client_msg_id": "75faf964-ca73-4fb3-a995-c8c09c723350",
        "text": "From an end user perspective, the question is whether the item or a collection of items is the primary focus. In some modelling tasks, it's important to model a first class bucket of items, e.g. the actual people standing in an actual room, rather than having a big swimming pool of people and picking out those who are in the room to be tagged accordingly.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fNcco",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "From an end user perspective, the question is whether the item or a collection of items is the primary focus. In some modelling tasks, it's important to model a first class bucket of items, e.g. the actual people standing in an actual room, rather than having a big swimming pool of people and picking out those who are in the room to be tagged accordingly."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1595591178.357700",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1595591270.000000"
        },
        "client_msg_id": "fa656949-860a-4171-87fc-f08697c477e8",
        "text": "<@UCGAK10LS> Also don’t forget you can replace data on edges easily by introducing a new, intermediate node. `(N1)--[E]--(N2)` might become `(N1)--(E)--(N2)` , then you have a bipartite graph to work with.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hwcE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " Also don’t forget you can replace data on edges easily by introducing a new, intermediate node. "
                            },
                            {
                                "type": "text",
                                "text": "(N1)--[E]--(N2)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " might become "
                            },
                            {
                                "type": "text",
                                "text": "(N1)--(E)--(N2)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " , then you have a bipartite graph to work with."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595591963.358400",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595592057.000000"
        },
        "client_msg_id": "a9f86b21-7fdb-4a49-82ea-923190b66ca3",
        "text": "<@U5STGTB3J> I think we're going off into the weeds a bit here. I'm (personally) not interested in talking about specific data structures or data models in this thread. That kind of discussion is best reserved for the thread I initiated yesterday. I listed a couple of examples only to hint at how the abstract notion of a \"bucket\" can manifest.\n&gt; “buckets”, especially when seen as containers, do assume that these relations have additional properties which makes them less “flexible”.\nI think the actual *interface* that users are presented with is going to be the main driver of assumptions about what a bucket means. My definition of \"bucket\" here means simply an exclusive location that a datum is considered to \"live\" within. That's extremely broad, and my hope for this thread is that we can work out the relevance and utility of buckets in comparison to tags.\n&gt; And then you run into questions of identity: if I change that element in one category, does it change everywhere, or does it just change in the current context (was it just a copy)?\nI actually believe this to be the *only* difference between buckets and tags. In the presence of *mutation*, the two concepts may behave differently, and without mutation, they are equivalent. I've not yet had time to develop detailed reasoning as to why this might be the case. I'll hopefully post something here in the next 24h.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K8O0q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " I think we're going off into the weeds a bit here. I'm (personally) not interested in talking about specific data structures or data models in this thread. That kind of discussion is best reserved for the thread I initiated yesterday. I listed a couple of examples only to hint at how the abstract notion of a \"bucket\" can manifest.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "“buckets”, especially when seen as containers, do assume that these relations have additional properties which makes them less “flexible”."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think the actual "
                            },
                            {
                                "type": "text",
                                "text": "interface",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that users are presented with is going to be the main driver of assumptions about what a bucket means. My definition of \"bucket\" here means simply an exclusive location that a datum is considered to \"live\" within. That's extremely broad, and my hope for this thread is that we can work out the relevance and utility of buckets in comparison to tags.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And then you run into questions of identity: if I change that element in one category, does it change everywhere, or does it just change in the current context (was it just a copy)?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I actually believe this to be the "
                            },
                            {
                                "type": "text",
                                "text": "only",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " difference between buckets and tags. In the presence of "
                            },
                            {
                                "type": "text",
                                "text": "mutation",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", the two concepts may behave differently, and without mutation, they are equivalent. I've not yet had time to develop detailed reasoning as to why this might be the case. I'll hopefully post something here in the next 24h."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0165TZ39GV",
        "type": "message",
        "ts": "1595592612.359800",
        "edited": {
            "user": "U0165TZ39GV",
            "ts": "1595595456.000000"
        },
        "client_msg_id": "dbb6b701-324a-42bd-a01a-1e2aae95fe4d",
        "text": "I just put out the latest Enso devblog:\n<https:\/\/medium.com\/@enso_org\/enso-dev-blog-friday-17th-july-702456f6f94>\nThis one’s got some neat stuff in it, including first look at the standard library (in textual Enso, not yet in visual), and the colour-by-type for ports and edges that may be familiar to users of Luna 1.x.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "dc2c7f9b4a4f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-29\/1217517778004_dc2c7f9b4a4f3937c08d_72.png",
            "first_name": "Joe",
            "real_name": "Joe Nash",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joe.nash",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595592612.359800",
        "reply_count": 2,
        "reply_users_count": 1,
        "latest_reply": "1595595463.388800",
        "reply_users": [
            "U0165TZ39GV"
        ],
        "replies": [
            {
                "user": "U0165TZ39GV",
                "ts": "1595592632.360400"
            },
            {
                "user": "U0165TZ39GV",
                "ts": "1595595463.388800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/enso_org|@enso_org>: :rotating_light: New dev blog :rotating_light:\nThis week:\n- Types represented in the colour of ports and edges\n- Context-sensitive code suggestions database\n- CLI for the Enso launcher\n- First look at the standard library, with State, List, and testing\n<https:\/\/medium.com\/@enso_org\/enso-dev-blog-19th-june-2020-335e528d50b>",
                "ts": 1595592521,
                "author_name": "Enso (formerly Luna)",
                "author_link": "https:\/\/twitter.com\/enso_org\/status\/1286634404404768768",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1276175817400291335\/zvrNeVit_normal.jpg",
                "author_subname": "@enso_org",
                "text": ":rotating_light: New dev blog :rotating_light:\nThis week:\n- Types represented in the colour of ports and edges\n- Context-sensitive code suggestions database\n- CLI for the Enso launcher\n- First look at the standard library, with State, List, and testing\n<https:\/\/medium.com\/@enso_org\/enso-dev-blog-19th-june-2020-335e528d50b>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/enso_org\/status\/1286634404404768768",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/enso_org\/status\/1286634404404768768",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iMN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just put out the latest Enso devblog:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/medium.com\/@enso_org\/enso-dev-blog-friday-17th-july-702456f6f94"
                            },
                            {
                                "type": "text",
                                "text": "\nThis one’s got some neat stuff in it, including first look at the standard library (in textual Enso, not yet in visual), and the colour-by-type for ports and edges that may be familiar to users of Luna 1.x."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "sunglasses",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1595592623.360000",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1595592866.000000"
        },
        "client_msg_id": "fb2c7345-fa4b-458d-9330-2636843a85ae",
        "text": "*Set* ~= *Tag* isn’t it?\n\nAs for *List* \/ *Table*: they have an extra layer of connection via integers (list 1D, table 2D), but you could replace this “mesh” with adding proper *next\/prev* information (tags) everywhere. Integers themselves can be modeled! You should check out Idris!\n\nlist of [1,2,3] VS\nset of numbers(1,3,2) + nexts( (1,2) (2,3) ) + prevs( (2,1), (3,2) ) + the automation which adds these pieces of information always on change.\n\nTo me, naturally, if we would like to be really really precise we would only use Sets + adding out extra layers of information to the models by ourselves, but Integers are so useful and make us so capable to hack around with a degree of certaincy without fluff. However, using integers exposes logic you can use to reason about your code.\n\nOn the other hand, building on Integers means you are exposed to “vulnerability”, because you don’t use the “real interfaces” Integers themselves really do have behind. (eg. successor aka “next”\/ successor^-1 aka “prev”)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6qMq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Set",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ~= "
                            },
                            {
                                "type": "text",
                                "text": "Tag",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " isn’t it?\n\nAs for "
                            },
                            {
                                "type": "text",
                                "text": "List",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " \/ "
                            },
                            {
                                "type": "text",
                                "text": "Table",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": they have an extra layer of connection via integers (list 1D, table 2D), but you could replace this “mesh” with adding proper "
                            },
                            {
                                "type": "text",
                                "text": "next\/prev",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " information (tags) everywhere. Integers themselves can be modeled! You should check out Idris!\n\nlist of [1,2,3] VS\nset of numbers(1,3,2) + nexts( (1,2) (2,3) ) + prevs( (2,1), (3,2) ) + the automation which adds these pieces of information always on change.\n\nTo me, naturally, if we would like to be really really precise we would only use Sets + adding out extra layers of information to the models by ourselves, but Integers are so useful and make us so capable to hack around with a degree of certaincy without fluff. However, using integers exposes logic you can use to reason about your code.\n\nOn the other hand, building on Integers means you are exposed to “vulnerability”, because you don’t use the “real interfaces” Integers themselves really do have behind. (eg. successor aka “next”\/ successor^-1 aka “prev”)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595592626.360200",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595592668.000000"
        },
        "client_msg_id": "216dbe58-02db-47c2-a671-ada1982fe970",
        "text": "<@UL3CJ7YKC> Tbh I'm not really keen on thinking about graphs as a foundational concept. Graphs are a solution looking for a problem. You can use a graph to model a set of relationships, but a graph *is not itself* a set of relationships. I think we should talk about \"entities\" and \"pointers\" between them as a *potential use case* for graphs rather than talking about graphs first and figuring out their applicability thereafter. Otherwise our thought patterns will never escape from our preconceptions of what a graph _is_ and _can be_.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yEblu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UL3CJ7YKC"
                            },
                            {
                                "type": "text",
                                "text": " Tbh I'm not really keen on thinking about graphs as a foundational concept. Graphs are a solution looking for a problem. You can use a graph to model a set of relationships, but a graph "
                            },
                            {
                                "type": "text",
                                "text": "is not itself",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " a set of relationships. I think we should talk about \"entities\" and \"pointers\" between them as a "
                            },
                            {
                                "type": "text",
                                "text": "potential use case",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for graphs rather than talking about graphs first and figuring out their applicability thereafter. Otherwise our thought patterns will never escape from our preconceptions of what a graph "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "can be",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0165TZ39GV",
        "type": "message",
        "ts": "1595592632.360400",
        "client_msg_id": "e8f8942d-d7eb-464d-a8de-938b1888ccb5",
        "text": "<@UC2A2ARPT> I think the layered state stuff speaks to some of your questions about variables",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "dc2c7f9b4a4f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-29\/1217517778004_dc2c7f9b4a4f3937c08d_72.png",
            "first_name": "Joe",
            "real_name": "Joe Nash",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joe.nash",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595592612.359800",
        "parent_user_id": "U0165TZ39GV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pvPg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I think the layered state stuff speaks to some of your questions about variables"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595592891.361000",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595592911.000000"
        },
        "client_msg_id": "d7864afc-84a3-4ff5-b55f-5e99a69b20aa",
        "text": "We're off-topic again! I'm going to delete the mentions of those concrete data structures from the question. They are not really what I was trying to talk about at all here.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tsw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We're off-topic again! I'm going to delete the mentions of those concrete data structures from the question. They are not really what I was trying to talk about at all here."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1595592961.361400",
        "client_msg_id": "ceca6352-4732-481f-ba58-ce929f759a6c",
        "text": "Ah. Ok. Then my answer is: nothing. :smile: But maybe I don’t get the idea.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y===",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah. Ok. Then my answer is: nothing. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " But maybe I don’t get the idea."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1595593088.361700",
        "client_msg_id": "4cd5ad9a-7c90-4eed-99d0-c979f85cee65",
        "text": "I added an extra note to the question clarifying the conceptual difference.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xn4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I added an extra note to the question clarifying the conceptual difference."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UL3CJ7YKC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UKP3B2J5D",
        "type": "message",
        "ts": "1595594347.362500",
        "edited": {
            "user": "UKP3B2J5D",
            "ts": "1595594649.000000"
        },
        "client_msg_id": "36E7C555-2ED3-4744-96D0-20FF89CF321B",
        "text": "What are the axes on which different programming languages differ?\nSo far, I have\nevaluation - eager or lazy\nabstraction mechanisms - classes, modules etc\ntypes - static, dynamic, strongly, weakly (I know first 2 and last 2 are different categories:slightly_smiling_face:)\nsyntax\nprimitives\nWhat else?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4980e1f3e51a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-03\/1220847671058_4980e1f3e51a273b630a_72.png",
            "first_name": "Ope",
            "real_name": "Ope",
            "display_name": "opeispo",
            "team": "T5TCAFTA9",
            "name": "ogunks900",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "reply_count": 15,
        "reply_users_count": 8,
        "latest_reply": "1595633572.489400",
        "reply_users": [
            "U014WA16VNJ",
            "U0165TZ39GV",
            "UKP3B2J5D",
            "UHWC9PXBL",
            "UEBG0NPDK",
            "UC2A2ARPT",
            "UJN1TAYEQ",
            "UFB8STN7K"
        ],
        "replies": [
            {
                "user": "U014WA16VNJ",
                "ts": "1595594698.364700"
            },
            {
                "user": "U014WA16VNJ",
                "ts": "1595594803.367400"
            },
            {
                "user": "U0165TZ39GV",
                "ts": "1595594899.369400"
            },
            {
                "user": "UKP3B2J5D",
                "ts": "1595595168.382300"
            },
            {
                "user": "UKP3B2J5D",
                "ts": "1595595548.392700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1595601248.427100"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1595601788.427400"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1595603659.429900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1595603970.434100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1595604479.435600"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1595604747.438800"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1595604870.441300"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1595612276.443400"
            },
            {
                "user": "UFB8STN7K",
                "ts": "1595628407.485700"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1595633572.489400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bhz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What are the axes on which different programming languages differ?\nSo far, I have\nevaluation - eager or lazy\nabstraction mechanisms - classes, modules etc\ntypes - static, dynamic, strongly, weakly (I know first 2 and last 2 are different categories"
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": ")\nsyntax\nprimitives\nWhat else?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "U0165TZ39GV",
                    "U014WA16VNJ",
                    "USA54AECX",
                    "UA14TGLTC"
                ],
                "count": 4
            },
            {
                "name": "brain",
                "users": [
                    "USA54AECX"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1595594698.364700",
        "client_msg_id": "9E050EDC-3753-4645-A5C2-D3CFA4D0542B",
        "text": "Perhaps paradigm, exceptions, or expressive power? (As measured by some formal heuristic, such as statement ratio or line ratio, often compared to C)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L0s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Perhaps paradigm, exceptions, or expressive power? (As measured by some formal heuristic, such as statement ratio or line ratio, often compared to C)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1595594803.367400",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1595594825.000000"
        },
        "client_msg_id": "E77D5CE1-33CE-450C-86B7-25DBB43700BB",
        "text": "I don’t really like my contributions above so perhaps I can ask a useful question. Could you further define axes, in this context. Should they be formal properties? Should the options be mutually exclusive?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JnAZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don’t really like my contributions above so perhaps I can ask a useful question. Could you further define axes, in this context. Should they be formal properties? Should the options be mutually exclusive?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0165TZ39GV",
        "type": "message",
        "ts": "1595594899.369400",
        "edited": {
            "user": "U0165TZ39GV",
            "ts": "1595594911.000000"
        },
        "client_msg_id": "4a844a67-90c2-4f36-9fe6-5f547032a260",
        "text": "Size? There’s a lot of languages, i.e. Lua, where a major feature they espouse is being small in size and embeddable, for example",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "dc2c7f9b4a4f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-29\/1217517778004_dc2c7f9b4a4f3937c08d_72.png",
            "first_name": "Joe",
            "real_name": "Joe Nash",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joe.nash",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Ig87",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Size? There’s a lot of languages, i.e. Lua, where a major feature they espouse is being small in size and embeddable, for example"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1595595114.380200",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1595595157.000000"
        },
        "client_msg_id": "A65C75A1-8245-414D-88B8-5DA1AA9E56B2",
        "text": "<@UCGAK10LS> I agree for most of us we should not go from graphs -&gt; use-cases and want to add: “Not every problem is a graph problem” which is evidently true. There’s also the useful truth that almost any imaginable problem can be translated into some sort of graph. (Space efficiency, practical implementation aside)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JcMHf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " I agree for most of us we should not go from graphs -> use-cases and want to add: “Not every problem is a graph problem” which is evidently true. There’s also the useful truth that almost any imaginable problem can be translated into some sort of graph. (Space efficiency, practical implementation aside)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UKP3B2J5D",
        "type": "message",
        "ts": "1595595168.382300",
        "client_msg_id": "352E98E7-0069-4268-81FA-2B3F3177B0BE",
        "text": "I mean something concrete that’s a property of the language not just what it affords. Like you can do functional programming in the broad sense in python for example but Haskell affords it better so I want to keep paradigms out since the programmer can decide to use different paradigms. I remember something Phillip Wadler said(I think he is the one who said it) that Haskell is the best imperative language. \n\nlike a friend pointed out Memory management - Garbage collection. Though I wonder if garbage collection is going a bit into the implementation vs. what the language actually is.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4980e1f3e51a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-03\/1220847671058_4980e1f3e51a273b630a_72.png",
            "first_name": "Ope",
            "real_name": "Ope",
            "display_name": "opeispo",
            "team": "T5TCAFTA9",
            "name": "ogunks900",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "75dD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I mean something concrete that’s a property of the language not just what it affords. Like you can do functional programming in the broad sense in python for example but Haskell affords it better so I want to keep paradigms out since the programmer can decide to use different paradigms. I remember something Phillip Wadler said(I think he is the one who said it) that Haskell is the best imperative language. \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "like a friend pointed out Memory management - Garbage collection. Though I wonder if garbage collection is going a bit into the implementation vs. what the language actually is."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0165TZ39GV",
        "type": "message",
        "ts": "1595595463.388800",
        "client_msg_id": "b5e94a5b-9af7-4d3d-b09c-194413a0dd4a",
        "text": "(just updated because I managed to post the old link)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "dc2c7f9b4a4f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-29\/1217517778004_dc2c7f9b4a4f3937c08d_72.png",
            "first_name": "Joe",
            "real_name": "Joe Nash",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joe.nash",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595592612.359800",
        "parent_user_id": "U0165TZ39GV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZogMe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(just updated because I managed to post the old link)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKP3B2J5D",
        "type": "message",
        "ts": "1595595548.392700",
        "client_msg_id": "D2B16D86-2FA0-4B1F-8627-CBA6991A0177",
        "text": "Pointers or no pointers. Mutable variables",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4980e1f3e51a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-03\/1220847671058_4980e1f3e51a273b630a_72.png",
            "first_name": "Ope",
            "real_name": "Ope",
            "display_name": "opeispo",
            "team": "T5TCAFTA9",
            "name": "ogunks900",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5sjC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Pointers or no pointers. Mutable variables"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1595595566.393500",
        "client_msg_id": "5F15EC1B-E7FE-458C-A345-39491B2A0D35",
        "text": "I often think in sets, partial orders, trees connected to lists inside of graphs next to some other structure, etcetera. It’s certainly a messy business and we’d miss a lot of perfectly sensible thinking if we forced people to first translate their thoughts into graphs. But I guess that’s what the computer is there for :wink: ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8mkWe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I often think in sets, partial orders, trees connected to lists inside of graphs next to some other structure, etcetera. It’s certainly a messy business and we’d miss a lot of perfectly sensible thinking if we forced people to first translate their thoughts into graphs. But I guess that’s what the computer is there for "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1595596457.403200",
        "client_msg_id": "b7e7f61a-51e5-463b-91a2-8ab86806fa21",
        "text": "I think the key distinguisher is the exclusivity. This is what maps to our natural understanding of location and identity. An object can only be in one place. If otherwise identical objects are in different locations we perceive them as copies. I think this persists even if mutations on one affect the other. We perceive the \"other object\" as being magically affected \"at a distance\", we can't perceive it as one object with two locations. The notion than an object can only be in one location at a time, overpowers the related notion that objects can easily change their location and persist their identity.\n\nThis is not quite the same as containment. The features of physical containment are transitivity and anti-reflectivity. If A contains B, then B cannot contain A. If A contains B, and B contains C, then C is also inside A (indirectly).\n\nA filesystem obeys these physical properties, but something like Python's list does not obey either. This is why users get confused by lists that contain each other, and objects being changed when they are in two lists. It is also why symlinks can be so confusing. (You thought you were deleting a copy? Too bad sucker!)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tuPn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think the key distinguisher is the exclusivity. This is what maps to our natural understanding of location and identity. An object can only be in one place. If otherwise identical objects are in different locations we perceive them as copies. I think this persists even if mutations on one affect the other. We perceive the \"other object\" as being magically affected \"at a distance\", we can't perceive it as one object with two locations. The notion than an object can only be in one location at a time, overpowers the related notion that objects can easily change their location and persist their identity.\n\nThis is not quite the same as containment. The features of physical containment are transitivity and anti-reflectivity. If A contains B, then B cannot contain A. If A contains B, and B contains C, then C is also inside A (indirectly).\n\nA filesystem obeys these physical properties, but something like Python's list does not obey either. This is why users get confused by lists that contain each other, and objects being changed when they are in two lists. It is also why symlinks can be so confusing. (You thought you were deleting a copy? Too bad sucker!)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1595597489.416200",
        "client_msg_id": "A8425617-A8DB-4A2E-A811-0523BA7C6E28",
        "text": "Let’s go off-topic to the other side then… :-)\n\nWhen you say “interface” I hear “how users understand it”. Then we can talk about my favorite topic: image schemas. These are cognitive patterns that we all use to structure our understanding.\n\nA “bucket” is an instance of the _container_ schema. Things are either in it or not, and it has a boundary (which we might or might not be able to describe precisely). That means that the container is of a different quality than the elements it contains.\n\nA “tag” is an instance of the _link_ schema. It just means there is something that connects the things at the two ends like a rope (imagine the force you feel when two items are tied together with a rope; and it is such physicality that gives meaning to the abstract concept). The two items connected to each other don’t automatically have different “status” like in the container version, although they could have through other schemas in effect simultaneously.\n\nWe can cope with the same things being in different containers at once, usually through frames, which are larger contexts of experience. E.g. when you say “cut the flesh” and you are in a restaurant, you evoke completely different images than when you’re a surgeon in a hospital. And it even works out ok on the surgeon’s night out to the steak house. ;-)\n\nNow if you use a tag to signify membership to a group, e.g. all blog articles tagged with “technology”, then it’s used much more like a container and likely understood based on the container schema.\n\nThere are also more complex image schemas that could be relevant, for instance _whole-part_, which is a little like a container, but where the elements don’t just have to be present, but also need to be arranged in a certain configuration for the whole to emerge. E.g. if you disassemble your car and still have all the parts, it’s not really a car anymore. (That’s also behind the layers example Kartik made in the other thread.)\n\nOr take the _center-periphery_ schema. This is how we understand gradual or fuzzy relations. Some things are “core” or central, and if you change them the thing is no longer the same thing, e,g. a tree where you cut the trunk is still a tree, but it’s not the same tree anymore. Other things are peripheral and can change, but if they do the thing still stays the same. E.g. if the tree loses all leads in winter it’s still the same tree. Oh, did you have a haircut recently? No problem, still you.\n\nThe difference between “bucket” and “tag” can be as simple as _container_ vs. _link_, depending on how you use it. \nIf the identity of an object changes when it’s modified in different places, does it mean it wasn’t supposed to be the same thing in the first place? This is at the core(!) of programming issues around value vs. reference types and affects your system design. What parts of the elements tagged or put into buckets can change without making them a different thing?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LKljz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Let’s go off-topic to the other side then… :-)\n\n"
                            },
                            {
                                "type": "text",
                                "text": "When you say “interface” I hear “how users understand it”. Then we can talk about my favorite topic: image schemas. These are cognitive patterns that we all use to structure our understanding.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "A “bucket” is an instance of the "
                            },
                            {
                                "type": "text",
                                "text": "container",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " schema. Things are either in it or not, and it has a boundary (which we might or might not be able to describe precisely). That means that the container is of a different quality than the elements it contains.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "A “tag” is an instance of the "
                            },
                            {
                                "type": "text",
                                "text": "link",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " schema. It just means there is something that connects the things at the two ends like a rope (imagine the force you feel when two items are tied together with a rope; and it is such physicality that gives meaning to the abstract concept). The two items connected to each other don’t automatically have different “status” like in the container version, although they could have through other schemas in effect simultaneously.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "We can cope with the same things being in different containers at once, usually through frames, which are larger contexts of experience. E.g. when you say “cut the flesh” and you are in a restaurant, you evoke completely different images than when you’re a surgeon in a hospital. And it even works out ok on the surgeon’s night out to the steak house. ;-)\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Now if you use a tag to signify membership to a group, e.g. all blog articles tagged with “technology”, then it’s used much more like a container and likely understood based on the container schema.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "There are also more complex image schemas that could be relevant, for instance "
                            },
                            {
                                "type": "text",
                                "text": "whole-part",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which is a little like a container, but where the elements don’t just have to be present, but also need to be arranged in a certain configuration for the whole to emerge. E.g. if you disassemble your car and still have all the parts, it’s not really a car anymore. (That’s also behind the layers example Kartik made in the other thread.)\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Or take the "
                            },
                            {
                                "type": "text",
                                "text": "center-periphery",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " schema. This is how we understand gradual or fuzzy relations. Some things are “core” or central, and if you change them the thing is no longer the same thing, e,g. a tree where you cut the trunk is still a tree, but it’s not the same tree anymore. Other things are peripheral and can change, but if they do the thing still stays the same. E.g. if the tree loses all leads in winter it’s still the same tree. Oh, did you have a haircut recently? No problem, still you.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "The difference between “bucket” and “tag” can be as simple as "
                            },
                            {
                                "type": "text",
                                "text": "container",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vs. "
                            },
                            {
                                "type": "text",
                                "text": "link",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", depending on how you use it. \nIf the identity of an object changes when it’s modified in different places, does it mean it wasn’t supposed to be the same thing in the first place? This is at the core(!) of programming issues around value vs. reference types and affects your system design. What parts of the elements tagged or put into buckets can change without making them a different thing?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDQBTJ211",
                    "UHWC9PXBL",
                    "UKP3B2J5D"
                ],
                "count": 3
            },
            {
                "name": "heavy_minus_sign",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1595599048.416500",
        "client_msg_id": "9054b4ce-508b-4c4f-84b5-caf2085b3d02",
        "text": "I think I disagree that tagging is the same as linking. Tagging to me is a kind of a categorizing\/grouping. It's a type of non-exclusive container. Then I would put \"bucket\" as a separate image schema of exclusive container, which to me feels like a v important distinction. Mistaking a non-exclusive container for an exclusive container is surely to root of those spooky action at a distance gotchas.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0kEnU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think I disagree that tagging is the same as linking. Tagging to me is a kind of a categorizing\/grouping. It's a type of non-exclusive container. Then I would put \"bucket\" as a separate image schema of exclusive container, which to me feels like a v important distinction. Mistaking a non-exclusive container for an exclusive container is surely to root of those spooky action at a distance gotchas."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1595600820.423200",
        "client_msg_id": "23C326B5-E0DD-4642-B557-ECCB876CDC46",
        "text": "deep in the weeds here, but i think that the core of the ambiguity here is about identity vs value. in my head a value is something you can “get to” by eg a query or a computation (paths, links), whereas an identity refers to more of a physical object you might find in a place (something you can mutate). if you change a path or a computation, you get a different value. if you change “a thing”, the values update (properties of that thing update? language is hard). that kind of implies that a paths and computations are “things” that “give you” values, which strikes me as both exciting and scary (too meta?)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "leQtV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "deep in the weeds here, but i think that the core of the ambiguity here is about identity vs value. in my head a value is something you can “get to” by eg a query or a computation (paths, links), whereas an identity refers to more of a physical object you might find in a place (something you can mutate). if you change a path or a computation, you get a different value. if you change “a thing”, the values update (properties of that thing update? language is hard). that kind of implies that a paths and computations are “things” that “give you” values, which strikes me as both exciting and scary (too meta?)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1595601044.426700",
        "client_msg_id": "32944FB5-F497-41F9-A0E3-D6036CDCFA86",
        "text": "if that’s the case, buckets are things that contain things whereas tags are things that return or evaluate to values (lists of things). i think?\n\ni think the system needs to address both copy &amp; paste and linking but it needs to do so in a closed way (algebraically) ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571049.299600",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lOB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if that’s the case, buckets are things that contain things whereas tags are things that return or evaluate to values (lists of things). i think?\n\ni think the system needs to address both copy & paste and linking but it needs to do so in a closed way (algebraically) "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1595601248.427100",
        "client_msg_id": "2CA9060D-35D5-4C8E-A438-16D74F9FD0B7",
        "text": "scope and name resolution!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q5hPX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "scope and name resolution!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1595601788.427400",
        "client_msg_id": "A3C2A6F2-1F29-4802-9D5C-F68C952E9124",
        "text": "<https:\/\/www.famicol.in\/language_checklist.html|https:\/\/www.famicol.in\/language_checklist.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "biB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.famicol.in\/language_checklist.html",
                                "text": "https:\/\/www.famicol.in\/language_checklist.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "grin",
                "users": [
                    "U013ZLJARC7",
                    "UKP3B2J5D",
                    "UJ6LDMMN0"
                ],
                "count": 3
            },
            {
                "name": "rolling_on_the_floor_laughing",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1595603621.429000",
        "client_msg_id": "BC60B729-5536-4C13-8113-8BA60F181D92",
        "text": "<@UEBG0NPDK> <@UA14TGLTC> does that mean that clojure’s EDN is a natural fit for 6NF or am i missing something?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5oWax",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " does that mean that clojure’s EDN is a natural fit for 6NF or am i missing something?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1595603659.429900",
        "client_msg_id": "F29A41E4-7650-413C-A22E-758891FF759E",
        "text": "(There needs to be a :sigh: reaction)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xYCr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(There needs to be a :sigh: reaction)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1595603970.434100",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1595604411.000000"
        },
        "client_msg_id": "F562536A-17AD-47A2-B0FF-78C41F7ACA19",
        "text": "Considering generics, one of the axes could be: how dynamic is polymorphism, and where is it handled? (Is it just based on data types, or are there protocols, or templates, or generics, etc)\n\nAlso... how large is the type-level part of the language? Is it just primitive hints like Int \/ String, can you define new types, or is it basically a whole other execution context (a la Idris)?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bEeO+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Considering generics, one of the axes could be: how dynamic is polymorphism, and where is it handled? (Is it just based on data types, or are there protocols, or templates, or generics, etc)\n\nAlso... how large is the type-level part of the language? Is it just primitive hints like Int \/ String, can you define new types, or is it basically a whole other execution context (a la Idris)?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1595604479.435600",
        "client_msg_id": "224276BF-7F53-4A1D-B5AC-6FE57D3BEA5E",
        "text": "Another axis (or, rather, a space): what details of the underlying stack do they reveal, redefine, or obscure?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N8b=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another axis (or, rather, a space): what details of the underlying stack do they reveal, redefine, or obscure?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1595604747.438800",
        "client_msg_id": "1C0DF261-6872-4242-B444-342F6C0ED07E",
        "text": "How are they meant to be evaluated? Effectful statements in order? Some sort of tree with branches in parallel? Some sort of search through a possibility space? No notion of evaluation at all? (Not all programming languages are meant to \"run\" on a \"computer\")",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gLJQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How are they meant to be evaluated? Effectful statements in order? Some sort of tree with branches in parallel? Some sort of search through a possibility space? No notion of evaluation at all? (Not all programming languages are meant to \"run\" on a \"computer\")"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            },
            {
                "name": "thinking_face",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1595604870.441300",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1595609099.000000"
        },
        "client_msg_id": "E9DB474E-2F74-41E3-A3B5-6767B54D3A10",
        "text": "(Many of these points won't lie on a line unless you sort of... rank them from \"totally chill and normal and boring\" to \"very eccentric, don't invite to the office\", which I think is a wonderful way to rank ideas in computer science)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iDuU=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Many of these points won't lie on a line unless you sort of... rank them from \"totally chill and normal and boring\" to \"very eccentric, don't invite to the office\", which I think is a wonderful way to rank ideas in computer science)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "the_horns",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1595612276.443400",
        "client_msg_id": "844d9a07-fedd-405b-869a-00bb0bb1d9da",
        "text": "Instead of \"mutable variables\", I prefer 'pure functions and referentially transparent expressions' vs 'shared mutable state'. Curv is in the former category, but it supports mutable local variables and a `while` loop. Curv wants to be a better imperative language than Haskell.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7OMmY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Instead of \"mutable variables\", I prefer 'pure functions and referentially transparent expressions' vs 'shared mutable state'. Curv is in the former category, but it supports mutable local variables and a "
                            },
                            {
                                "type": "text",
                                "text": "while",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " loop. Curv wants to be a better imperative language than Haskell."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1595614891.443600",
        "edited": {
            "user": "U01661S9F34",
            "ts": "1595616366.000000"
        },
        "client_msg_id": "3ed24df2-4842-4346-88b1-17117bb3aa97",
        "text": "I forgot about <http:\/\/itch.io|itch.io>! That is another great example of a modern Flash games like market! <http:\/\/poke.com|poke.com> looks interesting as well.\n\n&gt; but it's a way higher barrier to entry than flash ever was. There's no doing anything in Pico-8 without code but there was plenty of flash with no or minimal code.\nGood point. I can see that much of your argument is about barrier to entry and ease of use.  :+1:\n\nNow about your 4 things. I'm going to disagree with you on a few points:\n\n&gt; 1. being able to distribute as a single file. not entirely sure this is important but feel it's possible it is important\nI would like to point out that Flash _was not that different._ \nIn theory you could just \"play a swf\" file directly, but nobody did that. You still had to host a website with an HTML file (and probably a CSS file), and embed the swf file. And the user had to download or update their flash player on a regular basis.\nIn fact, nobody did that either! They uploaded their swf to Newgrounds, who did all the hosting work for them. The key here is the marketplace (Newgrounds).\n\nThat's not much different than the JS\/WASM, HTML, CSS combo we have today. It's not really just \"one file\"...\nAn important part of the equation was that Newgrounds did a lot of that hosting work for you as a content creator.\nThere is no reason the same kind of thing couldn't be done for WASM or modern JS. In fact, that's what <http:\/\/itch.io|itch.io> and Pico-8 are doing!\n\nI would also like to point out that _you can embedd assets_ in the WASM binary!\nModern assets like 3D models and bitmap textures are also very different from Vector based assets (I will talk more about this below).\n\nThe key is that there was a convenient way to get from the content creation tool to the hosting site easily. That's a really good point!\nI just want to point out that there is nothing technologically preventing us from building something just as convenient today, it just hasn't been built yet...\n\n&gt; being able to stream the assets from that single file vs having to wait for the entire file to download. If 1 is important than so is this.\nI am actually not sure what you mean by _stream_ assets. It's been a long time since I programmed with flash (I did back in the day, but it was a looong time ago), but I'm pretty sure it didn't \"stream\" anything, at least not in the modern sense of sending bytes over a network a little bit at a time. Youtube didn't even exist until 2005, and when Youtube started, streaming technology was still pretty bad... If I'm wrong, please give me a source and correct me.\n\nI _think_ what you mean is compression. Flash was good at compression. It also had good \"time to first interaction\" latency. I totally agree that \"time to first interaction\" is super important and extremely under appreciated with modern computers. It's a big pet peeve of mine (and anyone who follows Jon Blow, Casey Muratori, and the handmade philosophy).,\n\nI would like to point out the Flash assets were almost entirely vector based. Vectors compress extremely well! They are just control points for a Bezier curve equation.\nThe internet also had much less bandwidth during the height of Flash, so in general the assets were smaller.\nI remember Flash animations that had a lot of bitmap assets instead of vectors. You got loading screens just as bad as today (worse in some cases).\n\nThe situation is actually better today for the end user from the tech standpoint. The internet has orders of magnitude more bandwidth, and the browser apis let us do actual proper streaming of data (through js download requests or websockets).\n\n&gt; working well on mobile in the browser (this is only semi-possible because Apple has so far refused to implement the needed APIs. In particular the fullscreen API so a webpage can go fullscreen (or close to it ) like a native app can and the orientation API so a webpage can force landscape view. Android Chrome\/Firefox has had both of these for 6+ years and it hasn't ruined the browsing experience there.\nYeah. Modern Apple sucks. I agree. lol\n\n&gt; A well designed non-programmer friendly app for making things\n&gt; It wasn't just that the tech existed. It's that there was an app that let people easily use tech to make stuff.\nI think you make a really good point here. I would add that it's not just about the content creation app, but also the hosting and distribution sites like Newgrounds. Newgrounds was a \"proto-app-store\" in many ways.\n\n&gt; It could also be though the flash was just something that happened and it's time has passed.\nYou might be right here. It seems like the big game engines like Unity, and the proprietary app stores, both on mobile and desktop, have taken over the hole left by Flash.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HiWc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I forgot about "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/itch.io",
                                "text": "itch.io"
                            },
                            {
                                "type": "text",
                                "text": "! That is another great example of a modern Flash games like market! "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/poke.com",
                                "text": "poke.com"
                            },
                            {
                                "type": "text",
                                "text": " looks interesting as well.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but it's a way higher barrier to entry than flash ever was. There's no doing anything in Pico-8 without code but there was plenty of flash with no or minimal code."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good point. I can see that much of your argument is about barrier to entry and ease of use.  "
                            },
                            {
                                "type": "emoji",
                                "name": "+1",
                                "unicode": "1f44d"
                            },
                            {
                                "type": "text",
                                "text": "\n\nNow about your 4 things. I'm going to disagree with you on a few points:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "1. being able to distribute as a single file. not entirely sure this is important but feel it's possible it is important"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would like to point out that Flash "
                            },
                            {
                                "type": "text",
                                "text": "was not that different. ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nIn theory you could just \"play a swf\" file directly, but nobody did that. You still had to host a website with an HTML file (and probably a CSS file), and embed the swf file. And the user had to download or update their flash player on a regular basis.\nIn fact, nobody did that either! They uploaded their swf to Newgrounds, who did all the hosting work for them. The key here is the marketplace (Newgrounds).\n\nThat's not much different than the JS\/WASM, HTML, CSS combo we have today. It's not really just \"one file\"...\nAn important part of the equation was that Newgrounds did a lot of that hosting work for you as a content creator.\nThere is no reason the same kind of thing couldn't be done for WASM or modern JS. In fact, that's what "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/itch.io",
                                "text": "itch.io"
                            },
                            {
                                "type": "text",
                                "text": " and Pico-8 are doing!\n\nI would also like to point out that "
                            },
                            {
                                "type": "text",
                                "text": "you can embedd assets",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in the WASM binary!\nModern assets like 3D models and bitmap textures are also very different from Vector based assets (I will talk more about this below).\n\nThe key is that there was a convenient way to get from the content creation tool to the hosting site easily. That's a really good point!\nI just want to point out that there is nothing technologically preventing us from building something just as convenient today, it just hasn't been built yet...\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "being able to stream the assets from that single file vs having to wait for the entire file to download. If 1 is important than so is this."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am actually not sure what you mean by "
                            },
                            {
                                "type": "text",
                                "text": "stream ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "assets. It's been a long time since I programmed with flash (I did back in the day, but it was a looong time ago), but I'm pretty sure it didn't \"stream\" anything, at least not in the modern sense of sending bytes over a network a little bit at a time. Youtube didn't even exist until 2005, and when Youtube started, streaming technology was still pretty bad... If I'm wrong, please give me a source and correct me.\n\nI "
                            },
                            {
                                "type": "text",
                                "text": "think ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "what you mean is compression. Flash was good at compression. It also had good \"time to first interaction\" latency. I totally agree that \"time to first interaction\" is super important and extremely under appreciated with modern computers. It's a big pet peeve of mine (and anyone who follows Jon Blow, Casey Muratori, and the handmade philosophy).,\n\nI would like to point out the Flash assets were almost entirely vector based. Vectors compress extremely well! They are just control points for a Bezier curve equation.\nThe internet also had much less bandwidth during the height of Flash, so in general the assets were smaller.\nI remember Flash animations that had a lot of bitmap assets instead of vectors. You got loading screens just as bad as today (worse in some cases).\n\nThe situation is actually better today for the end user from the tech standpoint. The internet has orders of magnitude more bandwidth, and the browser apis let us do actual proper streaming of data (through js download requests or websockets).\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "working well on mobile in the browser (this is only semi-possible because Apple has so far refused to implement the needed APIs. In particular the fullscreen API so a webpage can go fullscreen (or close to it ) like a native app can and the orientation API so a webpage can force landscape view. Android Chrome\/Firefox has had both of these for 6+ years and it hasn't ruined the browsing experience there."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nYeah. Modern Apple sucks. I agree. lol\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A well designed non-programmer friendly app for making things\nIt wasn't just that the tech existed. It's that there was an app that let people easily use tech to make stuff."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think you make a really good point here. I would add that it's not just about the content creation app, but also the hosting and distribution sites like Newgrounds. Newgrounds was a \"proto-app-store\" in many ways.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It could also be though the flash was just something that happened and it's time has passed."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You might be right here. It seems like the big game engines like Unity, and the proprietary app stores, both on mobile and desktop, have taken over the hole left by Flash."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1595615267.444100",
        "edited": {
            "user": "UHDQ62M4P",
            "ts": "1595615488.000000"
        },
        "client_msg_id": "fcf5e798-9bbb-4580-a33e-429928cce127",
        "text": "In the abstract, if making a \"module\" is taking together N nodes in a graph such that internal connections are isolated from ones that go thru the module boundary, then not allowing hierarchy at all will limit the \"arity reduction\", since either there will be a ton of modules, or modules will contain a ton of nodes. Hierarchy will help with the cognitive complexity of the graph, IF the average amount of edges is low or very clustered. The problem with hierarchy is what happens when a new edge gets introduced, and the system doesn't allow re-running the modularization heuristics from zero :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xdmJ6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the abstract, if making a \"module\" is taking together N nodes in a graph such that internal connections are isolated from ones that go thru the module boundary, then not allowing hierarchy at all will limit the \"arity reduction\", since either there will be a ton of modules, or modules will contain a ton of nodes. Hierarchy will help with the cognitive complexity of the graph, IF the average amount of edges is low or very clustered. The problem with hierarchy is what happens when a new edge gets introduced, and the system doesn't allow re-running the modularization heuristics from zero "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1595616049.444600",
        "edited": {
            "user": "U01661S9F34",
            "ts": "1595620062.000000"
        },
        "client_msg_id": "20b3f051-df8e-40d6-8a80-96c4229b97aa",
        "text": "My TLDR; description of the \"ideal system\" we are describing looks like this:\n\n• A content creation tool that is polished and intuitive for artists (normies?  non-technical people?)\n• with low barrier to entry scripting \/ programming interface\n• A runtime that allows for a low \"time to first use\" latency metric and good compression (that might mean vector based, or some other easily compressed asset, or taking better advantage of modern data streaming technology)\n• Is tied to some hosting platform. Some \"app-store\" or \"marketplace\" like system that is integrated with the creation tool to provide creators with low friction content distribution and hosting.\nThe technology to build all of this exists today imo, but:\nIs there a place in the modern web (or modern computers in general if we include mobile devices) for such a platform?\nDoes it make sense to tie it to the web given the rise of mobile computing and politics like Apple's walled garden?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OS7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My TLDR; description of the \"ideal system\" we are describing looks like this:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "A content creation tool that is polished and intuitive for artists (normies?  non-technical people?)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "with low barrier to entry scripting \/ programming interface"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "A runtime that allows for a low \"time to first use\" latency metric and good compression (that might mean vector based, or some other easily compressed asset, or taking better advantage of modern data streaming technology)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Is tied to some hosting platform. Some \"app-store\" or \"marketplace\" like system that is integrated with the creation tool to provide creators with low friction content distribution and hosting."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThe technology to build all of this exists today imo, but:\nIs there a place in the modern web (or modern computers in general if we include mobile devices) for such a platform?\nDoes it make sense to tie it to the web given the rise of mobile computing and politics like Apple's walled garden?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "ULK0Z4MPV",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1595618648.446000",
        "client_msg_id": "ba8b3bf2-ba41-4f25-b672-dd30139aa223",
        "text": "I think that many companies are standardizing a workflow, that before writing any code you need to write a `design document` with the options on how to solve a problem and the chosen solution. A lot of times this document has the code changes required by any of the solution options.\nTo me the options that we didn't end up following seem as valuable as the chosen option, and those options should also be captured in code. A really easy way could be in separate branches, but then we loose visibility of them.\nIs anybody familiar with source control software or with patterns to work with source control that also keeps tracks of options considered but not followed at the end?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595618648.446000",
        "reply_count": 11,
        "reply_users_count": 5,
        "latest_reply": "1600930207.000300",
        "reply_users": [
            "UUB7RA7PF",
            "UCUSW7WVD",
            "U85HCL7JP",
            "U016VUZGUUQ",
            "UPX3PH28N"
        ],
        "replies": [
            {
                "user": "UUB7RA7PF",
                "ts": "1595619208.446300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1595620968.446900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1595621059.447300"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1595700085.041600"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1595787879.122300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1595788575.122500"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1595789520.122800"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1595880854.155600"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1595884803.156500"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1595951969.170100"
            },
            {
                "user": "UPX3PH28N",
                "ts": "1600930207.000300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oJqR2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think that many companies are standardizing a workflow, that before writing any code you need to write a "
                            },
                            {
                                "type": "text",
                                "text": "design document",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " with the options on how to solve a problem and the chosen solution. A lot of times this document has the code changes required by any of the solution options.\nTo me the options that we didn't end up following seem as valuable as the chosen option, and those options should also be captured in code. A really easy way could be in separate branches, but then we loose visibility of them.\nIs anybody familiar with source control software or with patterns to work with source control that also keeps tracks of options considered but not followed at the end?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUB7RA7PF",
        "type": "message",
        "ts": "1595619208.446300",
        "edited": {
            "user": "UUB7RA7PF",
            "ts": "1595619287.000000"
        },
        "client_msg_id": "1f19486b-02cd-413e-a1ff-f14ad2d48047",
        "text": "I can confirm regarding design documents (we called them Tech Design Docs - TDD - not the best name since it is confused with test driven development).\n\nRegarding documenting different options, usually we would consult the TDD or ask somebody, which is certainly not very approachable.\nAnd if there was a clearly better alternative to implement something, usually we would describe it in TODO comment next to the implementation.\n\nHowever, I wonder how often somebody really asks (why wasn't this done in this way), from my experience, I haven't seen that happening very often, at least not at the degree where reviewing all the previously considered options would be useful. But it does happen sometimes, and then TDDs usually worked out (but with lot of digging, figuring out the latest one and so on).\nJust thinking out loud, I might on the other hand find it useful if they were more available, but it is hard to imagine right now.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2fdcf29b225b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-26\/971836171367_2fdcf29b225b02e66825_72.png",
            "first_name": "Martin",
            "real_name": "Martin Sosic",
            "display_name": "Martin",
            "team": "T5TCAFTA9",
            "name": "sosic.martin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595618648.446000",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Stk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I can confirm regarding design documents (we called them Tech Design Docs - TDD - not the best name since it is confused with test driven development).\n\nRegarding documenting different options, usually we would consult the TDD or ask somebody, which is certainly not very approachable.\nAnd if there was a clearly better alternative to implement something, usually we would describe it in TODO comment next to the implementation.\n\nHowever, I wonder how often somebody really asks (why wasn't this done in this way), from my experience, I haven't seen that happening very often, at least not at the degree where reviewing all the previously considered options would be useful. But it does happen sometimes, and then TDDs usually worked out (but with lot of digging, figuring out the latest one and so on).\nJust thinking out loud, I might on the other hand find it useful if they were more available, but it is hard to imagine right now."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1595620968.446900",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1595620991.000000"
        },
        "client_msg_id": "530ec9e4-a06f-49d6-8ede-255c8e3aa7bb",
        "text": "Yeah, I'm not aware of existing solutions, but this is a problem I've often felt and tried to hack my way towards.\n\nOn my projects I use a system of layers so that I can keep track of past versions with fewer features. And continue to keep them working in CI: <http:\/\/akkartik.name\/post\/wart-layers>. Layers form a linear sequence, and I've often considered introducing branches. But I've never found a strong concrete use case and clean way to do this.\n\nOne easy approach may be branches as you mentioned coupled with links to those branches (on GitHub or wherever) sprinkled in a few key places that the branch modifies. I like links :slightly_smiling_face: (<https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1592285060323600?thread_ts=1592252831.319600&amp;cid=C5T9GPWFL>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595618648.446000",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4DfLy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I'm not aware of existing solutions, but this is a problem I've often felt and tried to hack my way towards.\n\nOn my projects I use a system of layers so that I can keep track of past versions with fewer features. And continue to keep them working in CI: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/post\/wart-layers"
                            },
                            {
                                "type": "text",
                                "text": ". Layers form a linear sequence, and I've often considered introducing branches. But I've never found a strong concrete use case and clean way to do this.\n\nOne easy approach may be branches as you mentioned coupled with links to those branches (on GitHub or wherever) sprinkled in a few key places that the branch modifies. I like links "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1592285060323600?thread_ts=1592252831.319600&cid=C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1595621059.447300",
        "client_msg_id": "3542934f-2f27-46c9-be4c-6950477a4a2b",
        "text": "Here's another attempt in an old project of mine, creating a subdirectory called 'alternatives' with clones of the top-level at specific points: <https:\/\/github.com\/akkartik\/wart\/tree\/master\/alternatives\/lite>. And each of them has a subdirectory called 'orig' with the baseline to compare against. Like I said, totally hacky.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595618648.446000",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ugl1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's another attempt in an old project of mine, creating a subdirectory called 'alternatives' with clones of the top-level at specific points: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/akkartik\/wart\/tree\/master\/alternatives\/lite"
                            },
                            {
                                "type": "text",
                                "text": ". And each of them has a subdirectory called 'orig' with the baseline to compare against. Like I said, totally hacky."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1595622443.447600",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1595622562.000000"
        },
        "client_msg_id": "8beabef5-6978-4234-9967-cab486a484da",
        "text": "One thing I'll say it's that it often makes sense to have hierarchy of the data model, and you'll almost always have a hierarchal execution model (e.g. data composition and function composition). But it's a mistake to shoe-horn one into the other. That's the mistake I see most often in OO programs: This part of the use case touches this data (class), so that class owns that slice of the behavior, e.g. Car.DriveToTheStore() (or maybe maybe MapNavigator.DriveToTheStorePart1() calls Car.DriveToThrStorePart2(), etc.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bcg4k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One thing I'll say it's that it often makes sense to have hierarchy of the data model, and you'll almost always have a hierarchal execution model (e.g. data composition and function composition). But it's a mistake to shoe-horn one into the other. That's the mistake I see most often in OO programs: This part of the use case touches this data (class), so that class owns that slice of the behavior, e.g. Car.DriveToTheStore() (or maybe maybe MapNavigator.DriveToTheStorePart1() calls Car.DriveToThrStorePart2(), etc.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1595622749.447900",
        "client_msg_id": "8a1dbb25-ae77-4724-8913-f70fa2dd1dcb",
        "text": "It's a bit chicken &amp; egg, whilst platforms accelerated the growth of the flash, the content existed first. I imagine modern equivalents might be able to compile and publish to many platforms, eg. apple \/ google app stores, native desktop, and the web.\n\nPerhaps animation is a nice gateway into programming. Tweening is a nice simple point-click exercise but the more complex behaviour you need, the deeper into programming you go.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/lc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's a bit chicken & egg, whilst platforms accelerated the growth of the flash, the content existed first. I imagine modern equivalents might be able to compile and publish to many platforms, eg. apple \/ google app stores, native desktop, and the web.\n\nPerhaps animation is a nice gateway into programming. Tweening is a nice simple point-click exercise but the more complex behaviour you need, the deeper into programming you go."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "amiga-tick",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBM0S2AN4",
        "type": "message",
        "ts": "1595623223.450900",
        "client_msg_id": "7D4C823C-8317-458A-95D8-66E6158BC5F2",
        "text": "I’ve been really enjoying this podcast. I don’t always understand what Ryan is saying but it is interesting and relaxing :relieved:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "51fa9d9a15c7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-04\/783621221861_51fa9d9a15c7c36a4a28_72.png",
            "first_name": "",
            "real_name": "Brian Zindler",
            "display_name": "zindlurb",
            "team": "T5TCAFTA9",
            "name": "zindlerb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595578576.302300",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t+8AS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve been really enjoying this podcast. I don’t always understand what Ryan is saying but it is interesting and relaxing "
                            },
                            {
                                "type": "emoji",
                                "name": "relieved",
                                "unicode": "1f60c"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1595624049.460300",
        "client_msg_id": "cde853c7-a707-4503-9cbf-46075ce215e2",
        "text": "&gt; Perhaps animation is a nice gateway into programming. Tweening is a nice simple point-click exercise but the more complex behaviour you need, the deeper into programming you go.\n:point_up: This right here is a key insight I think!\n\nFrom a \"FOC\" point of view. Flash served as a \"gentle intro to programming\" gateway drug for a generation of programmers.\nFlash was the 2000's equivalent of Basic for many people.\n\nWhat made Flash a good intro to programming tool? I think you just answered that question :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A2q91",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Perhaps animation is a nice gateway into programming. Tweening is a nice simple point-click exercise but the more complex behaviour you need, the deeper into programming you go."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "point_up",
                                "unicode": "261d-fe0f"
                            },
                            {
                                "type": "text",
                                "text": " This right here is a key insight I think!\n\nFrom a \"FOC\" point of view. Flash served as a \"gentle intro to programming\" gateway drug for a generation of programmers.\nFlash was the 2000's equivalent of Basic for many people.\n\nWhat made Flash a good intro to programming tool? I think you just answered that question "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "ULK0Z4MPV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1595624526.464200",
        "client_msg_id": "0f8ffebc-2aa4-4bc5-ad93-db047cb0bc9e",
        "text": "I was thinking in an earlier thread how flash animation might be a good introduction to programming, and a lot of you here are working ways to democratise \/ make programming easier. So perhaps understanding how people learnt to program could offer insights into how to teach people to program and make programming in general less complex. So I'm curious, how did you learn to program?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "reply_count": 22,
        "reply_users_count": 14,
        "latest_reply": "1595770326.108200",
        "reply_users": [
            "ULK0Z4MPV",
            "U01661S9F34",
            "UKP3B2J5D",
            "UBN9AFS0N",
            "UHWC9PXBL",
            "U013866H7LY",
            "UR482RFPY",
            "UBM0S2AN4",
            "UCUSW7WVD",
            "UJ6LDMMN0",
            "U013ZLJARC7",
            "U0123H7JRDM",
            "UC6997THT",
            "UDQBTJ211"
        ],
        "replies": [
            {
                "user": "ULK0Z4MPV",
                "ts": "1595624541.464300"
            },
            {
                "user": "U01661S9F34",
                "ts": "1595625356.465400"
            },
            {
                "user": "ULK0Z4MPV",
                "ts": "1595625690.465800"
            },
            {
                "user": "UKP3B2J5D",
                "ts": "1595626294.474900"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1595627612.484500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1595629645.488600"
            },
            {
                "user": "U013866H7LY",
                "ts": "1595634815.489900"
            },
            {
                "user": "U013866H7LY",
                "ts": "1595634896.490100"
            },
            {
                "user": "U013866H7LY",
                "ts": "1595635191.490600"
            },
            {
                "user": "UR482RFPY",
                "ts": "1595635378.491100"
            },
            {
                "user": "ULK0Z4MPV",
                "ts": "1595636932.492000"
            },
            {
                "user": "UBM0S2AN4",
                "ts": "1595639275.005800"
            },
            {
                "user": "ULK0Z4MPV",
                "ts": "1595641106.007200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1595641958.007700"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1595657986.010200"
            },
            {
                "user": "UKP3B2J5D",
                "ts": "1595668885.014400"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1595676189.015200"
            },
            {
                "user": "U0123H7JRDM",
                "ts": "1595686176.037000"
            },
            {
                "user": "U01661S9F34",
                "ts": "1595718530.042900"
            },
            {
                "user": "UC6997THT",
                "ts": "1595769567.107700"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1595770254.108000"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1595770326.108200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m0h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was thinking in an earlier thread how flash animation might be a good introduction to programming, and a lot of you here are working ways to democratise \/ make programming easier. So perhaps understanding how people learnt to program could offer insights into how to teach people to program and make programming in general less complex. So I'm curious, how did you learn to program?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UKP3B2J5D",
                    "UBSMEUXAA"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1595624541.464300",
        "edited": {
            "user": "ULK0Z4MPV",
            "ts": "1595625079.000000"
        },
        "client_msg_id": "0bafdd76-cb7c-45e4-8f19-adf9164fd2f0",
        "text": "I learnt the basics via <https:\/\/store.steampowered.com\/app\/383730\/RPG_Maker_2000\/|RPG Maker 2000>. You can use it to make little gameboy-like RPG games with point n' click coding (I wanted to make my own Pokemon obviously).\n\nAt first if I wanted something different to happen I just duplicated the map, so if you entered the forest, and went back to town you'd end up in an entirely new but identical map with characters saying new things. I had 100s of identical maps but the great thing about the RPG Maker is you could download and see inside other people games.\n\nSo I downloaded someone else's game and they only had one copy of each map and instead they used these things called switches (boolean values) to make different things happen after particular events. Soon my games had 1000s of switches. Eventually, I downloaded another game and it had barely any switches instead it had a single storyline variable that would increment by one every time something significant happened.\n\nFrom there I learnt to use variables in more complex ways, and whilst I only pursued programming as a career fairly recently, I've used a basic level of programming with almost everything I do, and that's stuck with me as a foundation ever since.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GxUGD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I learnt the basics via "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/store.steampowered.com\/app\/383730\/RPG_Maker_2000\/",
                                "text": "RPG Maker 2000"
                            },
                            {
                                "type": "text",
                                "text": ". You can use it to make little gameboy-like RPG games with point n' click coding (I wanted to make my own Pokemon obviously).\n\nAt first if I wanted something different to happen I just duplicated the map, so if you entered the forest, and went back to town you'd end up in an entirely new but identical map with characters saying new things. I had 100s of identical maps but the great thing about the RPG Maker is you could download and see inside other people games.\n\nSo I downloaded someone else's game and they only had one copy of each map and instead they used these things called switches (boolean values) to make different things happen after particular events. Soon my games had 1000s of switches. Eventually, I downloaded another game and it had barely any switches instead it had a single storyline variable that would increment by one every time something significant happened.\n\nFrom there I learnt to use variables in more complex ways, and whilst I only pursued programming as a career fairly recently, I've used a basic level of programming with almost everything I do, and that's stuck with me as a foundation ever since."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UR482RFPY"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1595624603.464700",
        "client_msg_id": "175bdaf5-76fc-425f-90f5-4e1005a3351f",
        "text": "<@U01661S9F34> thought it would be interesting to make a thread about this <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1595624526464200>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1595624526464200",
                "fallback": "[July 24th, 2020 2:02 PM] ryan.king1809: I was thinking in an earlier thread how flash animation might be a good introduction to programming, and a lot of you here are working ways to democratise \/ make programming easier. So perhaps understanding how people learnt to program could offer insights into how to teach people to program and make programming in general less complex. So I'm curious, how did you learn to program?",
                "ts": "1595624526.464200",
                "author_id": "ULK0Z4MPV",
                "author_subname": "Ryan King",
                "channel_id": "C5T9GPWFL",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "text": "I was thinking in an earlier thread how flash animation might be a good introduction to programming, and a lot of you here are working ways to democratise \/ make programming easier. So perhaps understanding how people learnt to program could offer insights into how to teach people to program and make programming in general less complex. So I'm curious, how did you learn to program?",
                "author_name": "Ryan King",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/ULK0Z4MPV",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1595624526464200",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+H1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01661S9F34"
                            },
                            {
                                "type": "text",
                                "text": " thought it would be interesting to make a thread about this "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1595624526464200"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1595625356.465400",
        "edited": {
            "user": "U01661S9F34",
            "ts": "1595625391.000000"
        },
        "client_msg_id": "61b2955b-3822-4113-92c4-21619c38cf84",
        "text": "When I was a kid, we would get the \"Things You Never Knew Existed\" catalog in the mail. For those not familiar, it was full of mostly useless \"as seen on TV\" type products. I loved looking at all the weird stuff in that magazine...\n\nI somehow convinced my parents to order two things from that magazine. First was a deck of Pokemon cards. Second was \"Interplay's learn to program BASIC on CD-ROM\"\nI am a product of late 90's edu-tainment :rolling_on_the_floor_laughing:\n\nI found a youtube video of \"learn to program BASIC\" for your horror and entertainment:\n<https:\/\/www.youtube.com\/watch?v=uBYz9syhNAA>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "parent_user_id": "ULK0Z4MPV",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Learn to Program Basic: The Movie (1998, Interplay)",
                "title_link": "https:\/\/www.youtube.com\/watch?v=uBYz9syhNAA",
                "author_name": "Khalbrae",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCixwylFMG0iRLMskabyf5IA",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/uBYz9syhNAA\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Learn to Program Basic: The Movie (1998, Interplay)",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/uBYz9syhNAA?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/www.youtube.com\/watch?v=uBYz9syhNAA",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=uBYz9syhNAA"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fQDw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When I was a kid, we would get the \"Things You Never Knew Existed\" catalog in the mail. For those not familiar, it was full of mostly useless \"as seen on TV\" type products. I loved looking at all the weird stuff in that magazine...\n\nI somehow convinced my parents to order two things from that magazine. First was a deck of Pokemon cards. Second was \"Interplay's learn to program BASIC on CD-ROM\"\nI am a product of late 90's edu-tainment "
                            },
                            {
                                "type": "emoji",
                                "name": "rolling_on_the_floor_laughing",
                                "unicode": "1f923"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI found a youtube video of \"learn to program BASIC\" for your horror and entertainment:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=uBYz9syhNAA"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "anguished",
                "users": [
                    "ULK0Z4MPV"
                ],
                "count": 1
            },
            {
                "name": "smile",
                "users": [
                    "UKP3B2J5D",
                    "U013ZLJARC7"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1595625690.465800",
        "client_msg_id": "74f3c9a2-dfdb-411a-baec-eb4e4d22cf9e",
        "text": "<@U01661S9F34> this aesthetic is clearly what FoC projects are missing",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wk4x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01661S9F34"
                            },
                            {
                                "type": "text",
                                "text": " this aesthetic is clearly what FoC projects are missing"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "rolling_on_the_floor_laughing",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            },
            {
                "name": "ok_hand",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UKP3B2J5D",
        "type": "message",
        "ts": "1595626294.474900",
        "client_msg_id": "1846AFE7-C118-4E0C-B5F6-494F3D990D88",
        "text": "So technically I was taught QBasic in secondary school but I don’t remember any of it. \n\nThen first year in uni picked up Java but never got to the point where I felt competent so I dropped it. \n\nThen I found Python In year 3 I think and I loved it! Compared to C, which was another language I dabbled in because I wanted to write embedded systems; It had\/has better UX. With C, I guess I was way too sloppy and would get frustrated by the segmentation faults + it was really low level while python had this robust standard library. \nTo get proficient, my gateway drug was competitive programming - Hackerrank in particular. It was\/is fun coming up with solution and it appealed to my math\/competitive side a lot. Was a side thing and planned to write embedded systems but here I am :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4980e1f3e51a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-03\/1220847671058_4980e1f3e51a273b630a_72.png",
            "first_name": "Ope",
            "real_name": "Ope",
            "display_name": "opeispo",
            "team": "T5TCAFTA9",
            "name": "ogunks900",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JAqSA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So technically I was taught QBasic in secondary school but I don’t remember any of it. \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Then first year in uni picked up Java but never got to the point where I felt competent so I dropped it. \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Then I found Python In year 3 I think and I loved it! Compared to C, which was another language I dabbled in because I wanted to write embedded systems; It had\/has better UX. With C, I guess I was way too sloppy and would get frustrated by the segmentation faults + it was really low level while python had this robust standard library. \nTo get proficient, my gateway drug was competitive programming - Hackerrank in particular. It was\/is fun coming up with solution and it appealed to my math\/competitive side a lot. Was a side thing and planned to write embedded systems but here I am "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U01661S9F34"
                ],
                "count": 2
            },
            {
                "name": "sunglasses",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UKP3B2J5D",
        "type": "message",
        "ts": "1595626800.480700",
        "client_msg_id": "2116E8A2-8EA5-4B79-A52F-1DEA73BCE4EA",
        "text": "<@UAVCC2X70> to illustrate with another example, paper.cut() this for me is a wrong way to model stuff. Somethings are just data and can’t do anything. They should be acted upon instead. It should be cut(paper).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4980e1f3e51a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-03\/1220847671058_4980e1f3e51a273b630a_72.png",
            "first_name": "Ope",
            "real_name": "Ope",
            "display_name": "opeispo",
            "team": "T5TCAFTA9",
            "name": "ogunks900",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bl23",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": " to illustrate with another example, paper.cut() this for me is a wrong way to model stuff. Somethings are just data and can’t do anything. They should be acted upon instead. It should be cut(paper)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_check_mark",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1595626941.480900",
        "client_msg_id": "0af44bfc-c867-4343-a763-bc3afbfaea54",
        "text": "Multimethods are useful here.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "atrmK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Multimethods are useful here."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1595627612.484500",
        "client_msg_id": "51ae2c31-fa21-4be6-bd0e-aa7463700e58",
        "text": "html, then copypasting javascript without knowing what I was doing (20 years ago), then c",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q21",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "html, then copypasting javascript without knowing what I was doing (20 years ago), then c"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1595628407.485700",
        "edited": {
            "user": "UFB8STN7K",
            "ts": "1595628485.000000"
        },
        "client_msg_id": "c71a4323-ae5b-4cd9-89eb-a8525a377631",
        "text": "In my experience:\n• automatically garbage collected vs. not\n• statically vs. dynamically typed\n• inheritance-oriented vs. composition-oriented\nThe three most useful high-level axes for comparing languages.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eIH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my experience:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "automatically garbage collected vs. not"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "statically vs. dynamically typed"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "inheritance-oriented vs. composition-oriented"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The three most useful high-level axes for comparing languages."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D",
                    "UC2A2ARPT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1595629645.488600",
        "client_msg_id": "A9776911-5BCD-4725-A8EF-CEBA892423EE",
        "text": "cheating at warcraft 1 bychanging the .ini files to finish the campaign because i was too young to understand how to be even marginally good at it lol",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vwje",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "cheating at warcraft 1 bychanging the .ini files to finish the campaign because i was too young to understand how to be even marginally good at it lol"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "UC2A2ARPT",
                    "ULK0Z4MPV"
                ],
                "count": 2
            },
            {
                "name": "smile",
                "users": [
                    "UJ6LDMMN0",
                    "UKP3B2J5D"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1595631948.489100",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1595640827.000000"
        },
        "client_msg_id": "fd3ca722-4c55-403c-8563-74e45f959f36",
        "text": "I'm still watching this. Halfway through, this feels complementary to and as important as Bret Victor's work.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595438091.136800",
        "parent_user_id": "U01661S9F34",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "37Ci",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm still watching this. Halfway through, this feels complementary to and as important as Bret Victor's work."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "amiga-tick",
                "users": [
                    "U01661S9F34",
                    "UC2A2ARPT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1595633572.489400",
        "client_msg_id": "3f1b2fd5-4ec7-43c4-8391-6c440e1b383a",
        "text": "The method by which garbage on the heap is collected affects what language primitives are available, what is efficient, and how you write code. There are multiple choices: tracing gc (most languages but originally Lisp), C, Rust, Swift, etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595594347.362500",
        "parent_user_id": "UKP3B2J5D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X4=X2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The method by which garbage on the heap is collected affects what language primitives are available, what is efficient, and how you write code. There are multiple choices: tracing gc (most languages but originally Lisp), C, Rust, Swift, etc."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013866H7LY",
        "type": "message",
        "ts": "1595634815.489900",
        "client_msg_id": "4c068a05-221b-480a-8166-b3f9cf123967",
        "text": "<@ULK0Z4MPV> that's exactly how I started coding :stuck_out_tongue: I got my hands on a burned copy of Macromedia Flash 5 and started with bouncing ball animations. I remember using a lot of free tutorials. At some point I learned to trigger frame changes with buttons, and that's all I needed to start making cursor mazes where you need to avoid the walls and moving obstacles. All of the obstacles were just animated buttons that you weren't allowed to hover over.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d1dd97f527ea",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-16\/1246051744354_d1dd97f527eae7f5a753_72.jpg",
            "first_name": "Zach",
            "real_name": "Zach Potter",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "zspotting",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HoJc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "ULK0Z4MPV"
                            },
                            {
                                "type": "text",
                                "text": " that's exactly how I started coding "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": " I got my hands on a burned copy of Macromedia Flash 5 and started with bouncing ball animations. I remember using a lot of free tutorials. At some point I learned to trigger frame changes with buttons, and that's all I needed to start making cursor mazes where you need to avoid the walls and moving obstacles. All of the obstacles were just animated buttons that you weren't allowed to hover over."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL"
                ],
                "count": 2
            },
            {
                "name": "tada",
                "users": [
                    "ULK0Z4MPV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013866H7LY",
        "type": "message",
        "ts": "1595634896.490100",
        "edited": {
            "user": "U013866H7LY",
            "ts": "1595634913.000000"
        },
        "client_msg_id": "52bfb923-090f-4de4-9e4c-62e5d6638aa3",
        "text": "That's all possible without having to write any ActionScript, which I did eventually learn, but I think it was a steep learning curve from there on.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d1dd97f527ea",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-16\/1246051744354_d1dd97f527eae7f5a753_72.jpg",
            "first_name": "Zach",
            "real_name": "Zach Potter",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "zspotting",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PZHHo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's all possible without having to write any ActionScript, which I did eventually learn, but I think it was a steep learning curve from there on."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013866H7LY",
        "type": "message",
        "ts": "1595635191.490600",
        "client_msg_id": "9c1a1566-e136-4f52-a481-4e7258d86f44",
        "text": "I wish I could remember exactly what features of the editor\/model made things accessible for me at 13. But I'd guess it had to do with having a traditional graphics editor with the capability of attaching code\/behavior to objects on the canvas.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d1dd97f527ea",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-16\/1246051744354_d1dd97f527eae7f5a753_72.jpg",
            "first_name": "Zach",
            "real_name": "Zach Potter",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "zspotting",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WN=Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wish I could remember exactly what features of the editor\/model made things accessible for me at 13. But I'd guess it had to do with having a traditional graphics editor with the capability of attaching code\/behavior to objects on the canvas."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UR482RFPY",
        "type": "message",
        "ts": "1595635378.491100",
        "client_msg_id": "66220321-07e3-486c-a4a2-7105440e0871",
        "text": "It was QBasic for me. At some point I discovered that Microsoft Office came with VBA which was fun because I could make buttons and stuff.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0c567409952",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0c5674099527c19ca0eccac4f2309515.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Paul Butler",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "paulgb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2JT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It was QBasic for me. At some point I discovered that Microsoft Office came with VBA which was fun because I could make buttons and stuff."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1595636401.491300",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1595636443.000000"
        },
        "client_msg_id": "e06b3aad-1469-440f-9f6d-d66b2fd986dc",
        "text": "<@USH01JEDQ> ...earlier in this thread.... ;) <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1591042419317500?thread_ts=1591041589.315800&amp;cid=C5T9GPWFL>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4DCj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "USH01JEDQ"
                            },
                            {
                                "type": "text",
                                "text": " ...earlier in this thread.... ;) "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1591042419317500?thread_ts=1591041589.315800&cid=C5T9GPWFL"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1595636932.492000",
        "client_msg_id": "d5f3fe35-e91d-4476-a467-c82265e6f9a1",
        "text": "<@UKP3B2J5D> maybe we should be teaching programming in a way that fits into Bartle's taxonomy of player types ( although I'm a bit iffy on psychological taxonomies )\n<@U013866H7LY> I'm no scientist but that's theory validated for me! :tada:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "52S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UKP3B2J5D"
                            },
                            {
                                "type": "text",
                                "text": " maybe we should be teaching programming in a way that fits into Bartle's taxonomy of player types ( although I'm a bit iffy on psychological taxonomies )\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U013866H7LY"
                            },
                            {
                                "type": "text",
                                "text": " I'm no scientist but that's theory validated for me! "
                            },
                            {
                                "type": "emoji",
                                "name": "tada",
                                "unicode": "1f389"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "U013866H7LY"
                ],
                "count": 1
            },
            {
                "name": "white_check_mark",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBM0S2AN4",
        "type": "message",
        "ts": "1595639275.005800",
        "edited": {
            "user": "UBM0S2AN4",
            "ts": "1595640230.000000"
        },
        "client_msg_id": "98C36CFA-7A7F-4229-80F9-CFE077E92E9B",
        "text": "As a kid I was briefly exposed to programming through gamemaker and a community college java class. But it never really stuck.\n\nAs a college freshman I took intro to programming (also in java :sob:) but at the time I didnt really have a reason to want to learn to program so it never really stuck.\n\nI started programming seriously my senior year. I became motivated to actually learn to program after I learned about people I felt were doing interesting things with computers (Bret Victor, Paul Graham, _why, David Nolen, Rich Hickey). I also felt motivated to learn because I was graduating from an unknown liberal arts school with a low gpa :sweat_smile:.\n\nI suspect for most people they need to first understand how they can use programming to do things that are meaningful to them (make games, music, money, “I want to be like x person”, learn things, etc.) in order to have the discipline to learn. I think starting with a domain specific tool for doing meaningful things like a game maker and allowing users to “open the hood” with programming is a good way to scaffold learning.\n\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "51fa9d9a15c7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-04\/783621221861_51fa9d9a15c7c36a4a28_72.png",
            "first_name": "",
            "real_name": "Brian Zindler",
            "display_name": "zindlurb",
            "team": "T5TCAFTA9",
            "name": "zindlerb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fh4up",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As a kid I was briefly exposed to programming through gamemaker and a community college java class. But it never really stuck.\n\nAs a college freshman I took intro to programming (also in java "
                            },
                            {
                                "type": "emoji",
                                "name": "sob",
                                "unicode": "1f62d"
                            },
                            {
                                "type": "text",
                                "text": ") but at the time I didnt really have a reason to want to learn to program so it never really stuck.\n\nI started programming seriously my senior year. I became motivated to actually learn to program after I learned about people I felt were doing interesting things with computers (Bret Victor, Paul Graham, _why, David Nolen, Rich Hickey). I also felt motivated to learn because I was graduating from an unknown liberal arts school with a low gpa "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nI suspect for most people they need to first understand how they can use programming to do things that are meaningful to them (make games, music, money, “I want to be like x person”, learn things, etc.) in order to have the discipline to learn. I think starting with a domain specific tool for doing meaningful things like a game maker and allowing users to “open the hood” with programming is a good way to scaffold learning.\n\n"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "ULK0Z4MPV",
                    "UJ6LDMMN0",
                    "UKP3B2J5D"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1595639800.006100",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1595643351.000000"
        },
        "client_msg_id": "387b9ab3-447b-472e-90b9-34288282e72f",
        "text": "<@UKP3B2J5D> - Exactly. I'd say that _any_ proper module are just x, and only contain functionality (if any) for acting on that x. That x can be simple data, or a whole system -- so long as it's a _whole_ system (which can contain other entities that are also whole in the same way). A module does not act on its neighbor or outside world, only on its contents aka \"itself\".\n\n<@UCGAK10LS>  - That's what I mean by \"vertical\" slices (e.g. \"down\" = my constituents) versus \"horizontal\" (e.g. I'm the middle part, and my neighbors are the left and right parts, of some bigger whole, and none of us can be understood in isolation).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wiU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UKP3B2J5D"
                            },
                            {
                                "type": "text",
                                "text": " - Exactly. I'd say that "
                            },
                            {
                                "type": "text",
                                "text": "any",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " proper module are just x, and only contain functionality (if any) for acting on that x. That x can be simple data, or a whole system -- so long as it's a "
                            },
                            {
                                "type": "text",
                                "text": "whole",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " system (which can contain other entities that are also whole in the same way). A module does not act on its neighbor or outside world, only on its contents aka \"itself\".\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": "  - That's what I mean by \"vertical\" slices (e.g. \"down\" = my constituents) versus \"horizontal\" (e.g. I'm the middle part, and my neighbors are the left and right parts, of some bigger whole, and none of us can be understood in isolation)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1595641106.007200",
        "client_msg_id": "ebd9e844-59d2-4667-adc8-24b8d9d30d5b",
        "text": "100% - if they taught me how to play the Mighty Morphin' Power Ranges theme instead of hot cross buns on the recorder in kindergarden, I imagine I'd at least have some musical talent right now.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RObUj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "100% - if they taught me how to play the Mighty Morphin' Power Ranges theme instead of hot cross buns on the recorder in kindergarden, I imagine I'd at least have some musical talent right now."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "rolling_on_the_floor_laughing",
                "users": [
                    "U01661S9F34",
                    "UKP3B2J5D"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1595641955.007500",
        "client_msg_id": "06a90b95-fe3c-4212-8132-b858438bb7f9",
        "text": "I saw an ad once, of a boy walking through his house commanding IOT objects to do random things: \"Fridge, turn on the kitchen lights. Toaster, read my email. TV, set an alarm on my phone\". Or something like that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595556744.290800",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yEiA8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I saw an ad once, of a boy walking through his house commanding IOT objects to do random things: \"Fridge, turn on the kitchen lights. Toaster, read my email. TV, set an alarm on my phone\". Or something like that."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1595641958.007700",
        "client_msg_id": "d57d1bac-e811-41e3-b2cd-4fd873fc7cb6",
        "text": "I saw a computer for the first time in my life at age 18, in my sophomore year of undergrad. However, my dad was always sure that it was the field for me (even though he had no computer knowledge either). So he bought me a computer book when I was in IX or X grade -- on dBASE III Plus. And I read it a few times over the next few years. In my freshman year I was declared CS but had no CS courses, and we weren't permitted yet into that holy of holies, the computer lab. But I _could_ access computer books in the library. I read the K&amp;R C book and various others that year (including one that had an Alice in Wonderland theme throughout; I no longer remember the title, but I really enjoyed that one). But still without access to a computer.\n\nI was pretty good at Math and Physics in high school, but it was pretty clear by the end of my sophomore year that computers were the thing for me: I never fell asleep in front of a computer the way I fell asleep over my textbooks for other subjects. And the feeling of flow was intensely pleasurable. In my junior year there was a contest to build an AI for a boardgame, and I won it by implementing A* search. So it seems clear that I must have had a few hundred hours of practice in that first year.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UCGld",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I saw a computer for the first time in my life at age 18, in my sophomore year of undergrad. However, my dad was always sure that it was the field for me (even though he had no computer knowledge either). So he bought me a computer book when I was in IX or X grade -- on dBASE III Plus. And I read it a few times over the next few years. In my freshman year I was declared CS but had no CS courses, and we weren't permitted yet into that holy of holies, the computer lab. But I "
                            },
                            {
                                "type": "text",
                                "text": "could",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " access computer books in the library. I read the K&R C book and various others that year (including one that had an Alice in Wonderland theme throughout; I no longer remember the title, but I really enjoyed that one). But still without access to a computer.\n\nI was pretty good at Math and Physics in high school, but it was pretty clear by the end of my sophomore year that computers were the thing for me: I never fell asleep in front of a computer the way I fell asleep over my textbooks for other subjects. And the feeling of flow was intensely pleasurable. In my junior year there was a contest to build an AI for a boardgame, and I won it by implementing A* search. So it seems clear that I must have had a few hundred hours of practice in that first year."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U01661S9F34",
                    "UKP3B2J5D",
                    "U013ZLJARC7",
                    "ULK0Z4MPV"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1595657986.010200",
        "client_msg_id": "35b9ad1d-4890-4ac3-9dec-5a513129bf42",
        "text": "If I recall well, I first program in Basic with a Comodore 64 in a school small workshop when I was a kid (maybe 12). Then also at school and with some friend's computer I continue Basic on computers like Sinclair ZX81, MO5 and TO7. I don't recall well all what I have created that time, just one thing: some program related to the 1986 FIFA World Cup (at that time I loved soccer) to show teams and results or something like that with some graphic part. I recall using some grid paper to figure out the pixels for the logo as I had to encode it pixel by pixel, there was no drawing tool at that time.\n\nLater I owned my first computer an Atari 520 STF, in fact co-own because it was the family computer. I was amazed by the possibilities of the computer and in particular there was MIDI input\/output which allows to use the computer for music and also to play network games (by connecting two Atari with MIDI). I uses mostly for games of course. But I also continued programming with Basic for some little programs every now and then.\n\nDuring all that period it was in fact a bit frustrating, because several time I wanted to develop games, but it was very complicated at that time, and I have started some but never really finished one. But, in fact programming was my thing, so I was happy to create things whatever it was.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595624526.464200",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V5F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If I recall well, I first program in Basic with a Comodore 64 in a school small workshop when I was a kid (maybe 12). Then also at school and with some friend's computer I continue Basic on computers like Sinclair ZX81, MO5 and TO7. I don't recall well all what I have created that time, just one thing: some program related to the 1986 FIFA World Cup (at that time I loved soccer) to show teams and results or something like that with some graphic part. I recall using some grid paper to figure out the pixels for the logo as I had to encode it pixel by pixel, there was no drawing tool at that time.\n\nLater I owned my first computer an Atari 520 STF, in fact co-own because it was the family computer. I was amazed by the possibilities of the computer and in particular there was MIDI input\/output which allows to use the computer for music and also to play network games (by connecting two Atari with MIDI). I uses mostly for games of course. But I also continued programming with Basic for some little programs every now and then.\n\nDuring all that period it was in fact a bit frustrating, because several time I wanted to develop games, but it was very complicated at that time, and I have started some but never really finished one. But, in fact programming was my thing, so I was happy to create things whatever it was."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "ULK0Z4MPV",
                    "U01661S9F34"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1595658406.010500",
        "client_msg_id": "3fa6b604-bc30-4ec8-bcf7-d3cdcffde027",
        "text": "<@UBSMEUXAA> I'm still waiting too. :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595090645.460700",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=D2j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBSMEUXAA"
                            },
                            {
                                "type": "text",
                                "text": " I'm still waiting too. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UBSMEUXAA"
                ],
                "count": 1
            }
        ]
    }
]