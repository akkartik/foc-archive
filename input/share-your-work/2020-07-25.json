[
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1595689358.412800",
        "client_msg_id": "b519822d-d675-4454-923e-98d3e6c1f1c6",
        "text": "You've said that it is possible to use GT as an IDE for programming languages other than Smalltalk. My language, Curv, is a DSL for constructing interactive 2D and 3D animations. So I am investigating whether it is possible to use GT as an IDE for Curv.\n\nOne requirement is to be able to inspect Curv values (eg, inspect the value of a variable). A value in Curv may be an interactive 3D animation. I would also like to be able to construct documentation for Curv using GT, and embed Curv interactive animations within this documentation, in the manner of \"explorable explanations\" or \"The Book of Shaders\".\n\nSo the basic requirement is to be able to embed interactive 3D graphics directly in a GT window or document, rather than use a Pharo plugin that invokes the operating system to open a separate 3D graphics window outside of Pharo.\n\nPerformance is also important. I need to use the GPU to render 3D graphics to get sufficient performance for interactive frame rates. I don't want interaction to be laggy, so I'd prefer to get the pixels from the GPU frame buffer into the Pharo window in the most direct way possible.\n\nIs support for this something you would like to see in GT in the future? If so, do you have a preferred technical approach for how you would like to get there?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595571873.400800",
        "parent_user_id": "UE1JQM9HQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sR6e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You've said that it is possible to use GT as an IDE for programming languages other than Smalltalk. My language, Curv, is a DSL for constructing interactive 2D and 3D animations. So I am investigating whether it is possible to use GT as an IDE for Curv.\n\nOne requirement is to be able to inspect Curv values (eg, inspect the value of a variable). A value in Curv may be an interactive 3D animation. I would also like to be able to construct documentation for Curv using GT, and embed Curv interactive animations within this documentation, in the manner of \"explorable explanations\" or \"The Book of Shaders\".\n\nSo the basic requirement is to be able to embed interactive 3D graphics directly in a GT window or document, rather than use a Pharo plugin that invokes the operating system to open a separate 3D graphics window outside of Pharo.\n\nPerformance is also important. I need to use the GPU to render 3D graphics to get sufficient performance for interactive frame rates. I don't want interaction to be laggy, so I'd prefer to get the pixels from the GPU frame buffer into the Pharo window in the most direct way possible.\n\nIs support for this something you would like to see in GT in the future? If so, do you have a preferred technical approach for how you would like to get there?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1595725094.420600",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1595763878.000000"
        },
        "client_msg_id": "84900067-7CB5-4CDD-BD22-9D56016EE633",
        "text": "1. you should have line numbers printed next to the code if you’re going to reference code by line number—there’s some ambiguity in the motivating example as to whether “line 1” means `let mut v =` or `let x =`.\n2. i’m kind of a dumbass about rust, so more code comments would be helpful for people who (like me) haven’t bothered to learn the syntax (depends on your intended audience)\n3. it might be helpful to reference some of the literature on programming education specifically dealing with (i think they’re referred to as) cognitive schemas (sorry i can’t find the paper i’m thinking of atm)\n4. this seems like the type of thing language designers should absolutely be thinking about. i don’t know much about rust and haven’t learned about the borrow checker but this seems like a pretty solid intro ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595636687.411800",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oWr",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "you should have line numbers printed next to the code if you’re going to reference code by line number—there’s some ambiguity in the motivating example as to whether “line 1” means "
                                    },
                                    {
                                        "type": "text",
                                        "text": "let mut v =",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " or "
                                    },
                                    {
                                        "type": "text",
                                        "text": "let x =",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "i’m kind of a dumbass about rust, so more code comments would be helpful for people who (like me) haven’t bothered to learn the syntax (depends on your intended audience)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "it might be helpful to reference some of the literature on programming education specifically dealing with (i think they’re referred to as) cognitive schemas (sorry i can’t find the paper i’m thinking of atm)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "this seems like the type of thing language designers should absolutely be thinking about. i don’t know much about rust and haven’t learned about the borrow checker but this seems like a pretty solid intro "
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    }
                ]
            }
        ]
    }
]