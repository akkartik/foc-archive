[
    {
        "user": "U02QC0PPER3",
        "type": "message",
        "ts": "1720111704.809189",
        "client_msg_id": "0bda1b38-02e0-4ad4-a63a-14a7972aa424",
        "text": "<https:\/\/github.com\/standardnotes\/app> has e2e encrypted sync, but I don't remember the exact techniques they use.\n---\n\nHow much do you care about offline multi-device scenarios with conflicts?  What is the resolution of \"last-wins\" you care about?\n\nRelaying deltas sounds like Operational Transformation, specifically \"operation-based OT\" as opposed to \"state-based OT\"?\nIf so, consider CRDTs instead — basically they give more peace of mind.\n(I'd google \"yjs encrypted\" &amp; \"automerge encrypted\" — the 2 leading CRDT engines)\n\n<https:\/\/localfirstweb.dev\/> probably has useful resources.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "90c9108c61f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-12\/2854686602576_90c9108c61f5d809eb8a_72.jpg",
            "first_name": "Beni",
            "real_name": "Beni Cherniavsky-Paskin",
            "display_name": "Beni Cherniavsky-Paskin",
            "team": "T5TCAFTA9",
            "name": "beni.cherniavsky",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720039689.044269",
        "parent_user_id": "UPDJV04FR",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JZzwF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/standardnotes\/app"
                            },
                            {
                                "type": "text",
                                "text": " has e2e encrypted sync, but I don't remember the exact techniques they use.\n---\n\nHow much do you care about offline multi-device scenarios with conflicts?  What is the resolution of \"last-wins\" you care about?\n\nRelaying deltas sounds like Operational Transformation, specifically \"operation-based OT\" as opposed to \"state-based OT\"?\nIf so, consider CRDTs instead — basically they give more peace of mind.\n(I'd google \"yjs encrypted\" & \"automerge encrypted\" — the 2 leading CRDT engines)\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/localfirstweb.dev\/"
                            },
                            {
                                "type": "text",
                                "text": " probably has useful resources."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UPDJV04FR",
        "type": "message",
        "ts": "1720114048.386569",
        "edited": {
            "user": "UPDJV04FR",
            "ts": "1720114271.000000"
        },
        "client_msg_id": "2486CA98-DF5E-420E-8C6D-CE061236472A",
        "text": "Thanks! Yes, this is inspired by operational transform. I’m aware of CRDTs but haven’t tried them out. I’ll read up.\n\nRegarding offline conflicts, they’ll be frequent. E.g. a TODO list where you check off a box on your laptop but shut the lid before it syncs. Then you check the box again on your phone for a sense of completion. In single-user scenarios like this, “last wins” just means whichever operation has a later timestamp is the one that overwrites the current app state, which makes sense because any conflict just indicates the user changed their mind, rather than being an actual disagreement as in multi-user scenarios.\n\nThanks for that link to localfirstweb.dev! That is highly relevant.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g68488bdee31",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/68488bdee316f15225caa185e233be88.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "",
            "real_name": "Mason",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "masonsimon",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720039689.044269",
        "parent_user_id": "UPDJV04FR",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rYhvw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! Yes, this is inspired by operational transform. I’m aware of CRDTs but haven’t tried them out. I’ll read up.\n\nRegarding offline conflicts, they’ll be frequent. E.g. a TODO list where you check off a box on your laptop but shut the lid before it syncs. Then you check the box again on your phone for a sense of completion. In single-user scenarios like this, “last wins” just means whichever operation has a later timestamp is the one that overwrites the current app state, which makes sense because any conflict just indicates the user changed their mind, rather than being an actual disagreement as in multi-user scenarios.\n\nThanks for that link to localfirstweb.dev! That is highly relevant"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03R0B9U1GD",
        "type": "message",
        "ts": "1720159123.421609",
        "client_msg_id": "741773ec-0621-4f74-a36b-097a957eb3f9",
        "text": "i wrote up my experience of slowly discovering the live coding world, and how my Arroost tool fits into it, and the motivations for my work\n<https:\/\/www.todepond.com\/wikiblogarden\/scrappy-fiddles\/sharing\/normalising\/live\/|https:\/\/www.todepond.com\/wikiblogarden\/scrappy-fiddles\/sharing\/normalising\/live\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "78c476adad42",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-26\/3992499177765_78c476adad42ab6cfe32_72.png",
            "first_name": "Lu",
            "real_name": "Lu Wilson",
            "display_name": "TodePond",
            "team": "T5TCAFTA9",
            "name": "l2wilson94",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "image_url": "https:\/\/todepond.com\/og.png",
                "image_width": 1200,
                "image_height": 630,
                "image_bytes": 33416,
                "from_url": "https:\/\/www.todepond.com\/wikiblogarden\/scrappy-fiddles\/sharing\/normalising\/live\/",
                "service_icon": "https:\/\/www.todepond.com\/favicon.png",
                "id": 1,
                "original_url": "https:\/\/www.todepond.com\/wikiblogarden\/scrappy-fiddles\/sharing\/normalising\/live\/",
                "fallback": "Todepond dot com",
                "title": "Todepond dot com",
                "title_link": "https:\/\/www.todepond.com\/wikiblogarden\/scrappy-fiddles\/sharing\/normalising\/live\/",
                "service_name": "todepond.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "awz4M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i wrote up my experience of slowly discovering the live coding world, and how my Arroost tool fits into it, and the motivations for my work\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.todepond.com\/wikiblogarden\/scrappy-fiddles\/sharing\/normalising\/live\/",
                                "text": "https:\/\/www.todepond.com\/wikiblogarden\/scrappy-fiddles\/sharing\/normalising\/live\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "exploding_head",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UMV4B97GT",
                    "U06131CATV3",
                    "U07BWTYKJQG",
                    "UML4ZEKDK",
                    "UP00ZLX6G",
                    "U05M5A8E0NT",
                    "U047BL7EJDA"
                ],
                "count": 7
            }
        ]
    }
]