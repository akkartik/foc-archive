[
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1569655474.116100",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1569655553.000000"
        },
        "client_msg_id": "595d0d39-3521-474b-907b-8967c0cffd67",
        "text": "How about an abstraction mechanism for changing the abstraction mechanisms? How about applying _that_ mechanism to itself?\n\nI actually just posted something that's somewhat about that: <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1569653638037600>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569596004.115400",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mur",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How about an abstraction mechanism for changing the abstraction mechanisms? How about applying "
                            },
                            {
                                "type": "text",
                                "text": "that",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " mechanism to itself?\n\nI actually just posted something that's somewhat about that: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1569653638037600"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1569656154.116400",
        "client_msg_id": "a4d00b54-63a9-4fa1-a3bf-63a8a530efa6",
        "text": "If you follow Dan's logic, you will end up with 2nd level LISP, which is devilishly hard to read. I am not aware of any program using 3rd level nesting, but perhaps some LISP fanatic can recall a case where it was needed. Most large LISP and FORTH programs were 2nd level. I am working in the opposite direction, trying to convert as much executable code into declarative, which is 0 level code; i.e. not executed but just \"there\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569596004.115400",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HBN43",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you follow Dan's logic, you will end up with 2nd level LISP, which is devilishly hard to read. I am not aware of any program using 3rd level nesting, but perhaps some LISP fanatic can recall a case where it was needed. Most large LISP and FORTH programs were 2nd level. I am working in the opposite direction, trying to convert as much executable code into declarative, which is 0 level code; i.e. not executed but just \"there\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UNCP67JSK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1569681261.116700",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1569681288.000000"
        },
        "client_msg_id": "8e1cf55c-ea7e-4987-922f-fefafe886718",
        "text": "That article is all I know and probably all I need to know :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568987238.082500",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Av\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That article is all I know and probably all I need to know "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]