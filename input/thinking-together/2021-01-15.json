[
    {
        "subtype": "bot_message",
        "text": "I was listening to some of the old episodes of the podcast and have been thinking about projectional editing in general. I'm not sure if this is a novel insight or not, but there seems to be some form of equivalence between reading\/writing code textually vs with blocks\/shapes and the equivalence of algebra\/geometry.\nThere are many proofs and problems that seem to lend themselves to geometry over algebra but there are also situations that being able to reason about something algebraically makes it substantially simpler. I think this is the situation where you need both and it's possible at certain levels of abstraction you would want to be able to easily shift back and forth. For example I could imagine a system that had components built in a textual representation but then the component linking all done utilizing shapes.",
        "username": "Alex",
        "icons": {
            "image_48": "https:\/\/s3-us-west-2.amazonaws.com\/slack-files2\/bot_icons\/2021-01-05\/1614325536835_48.png"
        },
        "type": "message",
        "ts": "1610742663.002400",
        "bot_id": "BEYLABLRH",
        "thread_ts": "1610742663.002400",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1610978272.029600",
        "reply_users": [
            "USH01JEDQ",
            "BEYLABLRH",
            "UHWC9PXBL",
            "U013ZLJARC7"
        ],
        "replies": [
            {
                "user": "USH01JEDQ",
                "ts": "1610743611.002500"
            },
            {
                "user": "BEYLABLRH",
                "ts": "1610744061.002900"
            },
            {
                "user": "USH01JEDQ",
                "ts": "1610750677.003100"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1610854140.022000"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1610978272.029600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ugg36",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was listening to some of the old episodes of the podcast and have been thinking about projectional editing in general. I'm not sure if this is a novel insight or not, but there seems to be some form of equivalence between reading\/writing code textually vs with blocks\/shapes and the equivalence of algebra\/geometry.\nThere are many proofs and problems that seem to lend themselves to geometry over algebra but there are also situations that being able to reason about something algebraically makes it substantially simpler. I think this is the situation where you need both and it's possible at certain levels of abstraction you would want to be able to easily shift back and forth. For example I could imagine a system that had components built in a textual representation but then the component linking all done utilizing shapes."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USH01JEDQ",
        "type": "message",
        "ts": "1610743611.002500",
        "client_msg_id": "72d2a5e7-b951-49c2-8f76-94d4ce6086e9",
        "text": "Makes me think of this scene <https:\/\/www.youtube.com\/watch?v=7xRLU0wgwuQ>\n\nThen Will says \"Here, for you code block \/ linear proof people, I wrote it down\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "854f96b690f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-17\/6370745671793_854f96b690f51d1266ee_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Galtenberg",
            "display_name": "Chris G",
            "team": "T5TCAFTA9",
            "name": "galtenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610742663.002400",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Will Finds a Simple Geometrical Structure - a Tree - Good Will Hunting (1997) - Movie Clip HD Scene",
                "title_link": "https:\/\/www.youtube.com\/watch?v=7xRLU0wgwuQ",
                "author_name": "Legendary Movie Scenes",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCXLCtqOKDHDwQtin_TuCwiw",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/7xRLU0wgwuQ\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Will Finds a Simple Geometrical Structure - a Tree - Good Will Hunting (1997) - Movie Clip HD Scene",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/7xRLU0wgwuQ?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=7xRLU0wgwuQ",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=7xRLU0wgwuQ"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7ol6G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Makes me think of this scene "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=7xRLU0wgwuQ"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThen Will says \"Here, for you code block \/ linear proof people, I wrote it down\""
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UEZQXJK9V"
                ],
                "count": 1
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "I completely forgot about that scene but that's exactly what I'm thinking about.",
        "username": "Alex",
        "icons": {
            "image_48": "https:\/\/s3-us-west-2.amazonaws.com\/slack-files2\/bot_icons\/2021-01-05\/1614325536835_48.png"
        },
        "type": "message",
        "ts": "1610744061.002900",
        "bot_id": "BEYLABLRH",
        "thread_ts": "1610742663.002400",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4RcD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I completely forgot about that scene but that's exactly what I'm thinking about."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USH01JEDQ",
        "type": "message",
        "ts": "1610750677.003100",
        "client_msg_id": "3bfaf585-2179-41ef-854f-d9be1d683a73",
        "text": "Really it's what MVC was originally meant for (one of Trygve's intentions) of having multiple possible views for a model, letting the user select the view that most directly mapped to how they think and work - <https:\/\/folk.universitetetioslo.no\/trygver\/themes\/mvc\/mvc-index.html>\n\nI love how tools like ZenKit allow the same data table to be represented as a list, a table, a kanban board, even a mindmap and calendar",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "854f96b690f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-17\/6370745671793_854f96b690f51d1266ee_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Galtenberg",
            "display_name": "Chris G",
            "team": "T5TCAFTA9",
            "name": "galtenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610742663.002400",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "88NIa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Really it's what MVC was originally meant for (one of Trygve's intentions) of having multiple possible views for a model, letting the user select the view that most directly mapped to how they think and work - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/folk.universitetetioslo.no\/trygver\/themes\/mvc\/mvc-index.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI love how tools like ZenKit allow the same data table to be represented as a list, a table, a kanban board, even a mindmap and calendar"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEZQXJK9V"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1610778816.014400",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1610778843.000000"
        },
        "client_msg_id": "1a3bf026-d483-4d6b-bb37-93d92aa08de5",
        "text": "*Perhaps all programming is distributed programming?*\n\nThis little thread is melting my mind: <https:\/\/queer.af\/@erincandescent\/105562630364133151>\n\nMy mindset for the past 5 years has been that UX = gradual teaching on demand = never lying to the end-user, which implies never telling big lies, only little white lies that are easy to push aside to learn more. But at the heart of everything I did is the big lie that I'm programming \"a\" single unitary computer.\n\nI've always known about many little controllers in our computers, but my mind treated them as exceptions. I think society has this consensual hallucination that software runs \"on top of\" hardware. The past six months (starting from my old realizations about BIOS: <https:\/\/futureofcoding.slack.com\/archives\/C0120A3L30R\/p1599112907014300>) have been a slow, painful journey to come to grips with this fact.\n\nBat signal to <@UJKC8B0QN>; this is fodder for your old thread from May 2019 that most software is built across collections of computers. <@UJM9NG84Q> too had a post around the same time that messaging and communication are all, that decomposition is trivial, that focusing on \"programming\" is often a modernist approach. If we started from the assumption that \"coding\" is about orchestrating groups of computers, what would we do differently? What does the UX for programming look like if you also have to specify where computations happen? It seems to make Bret Victor's problem much harder. But following Alan Kay, perhaps we don't yet have the \"hardest and most profound thing to then build every easier thing out of\".\n\nI'm also thinking about Dave Ackley's <https:\/\/movablefeastmachine.org>. He started out in security, so he likely knew all this when he started out on his project. You can't secure your computing substrate if you aren't thinking about 90% of the computers in it.\n\nAnyways, likely the fever dream will break in a day or two and I'll go back to ~lying to myself~ programming my little computer. But I thought I'd throw this out while it's fresh.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610778816.014400",
        "reply_count": 45,
        "reply_users_count": 10,
        "latest_reply": "1611107643.043300",
        "reply_users": [
            "UCGAK10LS",
            "U5STGTB3J",
            "U01661S9F34",
            "U8A5MS6R1",
            "UHWC9PXBL",
            "UJBAJNFLK",
            "UCUSW7WVD",
            "U013ZLJARC7",
            "U0112C10V4Y",
            "UBSMEUXAA"
        ],
        "replies": [
            {
                "user": "UCGAK10LS",
                "ts": "1610781197.014800"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1610800535.017600"
            },
            {
                "user": "U01661S9F34",
                "ts": "1610829657.017900"
            },
            {
                "user": "U01661S9F34",
                "ts": "1610830386.018300"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1610851829.020900"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1610854517.027100"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1610874234.027400"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1610910164.027700"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1610956904.029300"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1610979942.029900"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1610986878.030300"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1610987256.030600"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1610987328.030900"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1610987366.031200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1610987504.031400"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1610987526.031600"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1610987576.031800"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1610987588.032000"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1610987839.032500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1610988149.032700"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1611050680.037000"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1611079635.037300"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611081030.037700"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611081432.037900"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611081494.038100"
            },
            {
                "user": "U01661S9F34",
                "ts": "1611094589.038500"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611095229.038800"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611095638.039000"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611095963.039200"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611096758.039400"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611097179.039600"
            },
            {
                "user": "U01661S9F34",
                "ts": "1611097341.039800"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611098365.040000"
            },
            {
                "user": "U01661S9F34",
                "ts": "1611099503.040200"
            },
            {
                "user": "U01661S9F34",
                "ts": "1611099909.040500"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611100075.040700"
            },
            {
                "user": "U01661S9F34",
                "ts": "1611100088.041000"
            },
            {
                "user": "U01661S9F34",
                "ts": "1611100154.041200"
            },
            {
                "user": "U01661S9F34",
                "ts": "1611100637.041500"
            },
            {
                "user": "U01661S9F34",
                "ts": "1611100790.041700"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1611100992.041900"
            },
            {
                "user": "U01661S9F34",
                "ts": "1611101248.042100"
            },
            {
                "user": "U01661S9F34",
                "ts": "1611101846.042300"
            },
            {
                "user": "U01661S9F34",
                "ts": "1611102388.042700"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1611107643.043300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9WHc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Perhaps all programming is distributed programming?",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nThis little thread is melting my mind: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/queer.af\/@erincandescent\/105562630364133151"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMy mindset for the past 5 years has been that UX = gradual teaching on demand = never lying to the end-user, which implies never telling big lies, only little white lies that are easy to push aside to learn more. But at the heart of everything I did is the big lie that I'm programming \"a\" single unitary computer.\n\nI've always known about many little controllers in our computers, but my mind treated them as exceptions. I think society has this consensual hallucination that software runs \"on top of\" hardware. The past six months (starting from my old realizations about BIOS: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C0120A3L30R\/p1599112907014300"
                            },
                            {
                                "type": "text",
                                "text": ") have been a slow, painful journey to come to grips with this fact.\n\nBat signal to "
                            },
                            {
                                "type": "user",
                                "user_id": "UJKC8B0QN"
                            },
                            {
                                "type": "text",
                                "text": "; this is fodder for your old thread from May 2019 that most software is built across collections of computers. "
                            },
                            {
                                "type": "user",
                                "user_id": "UJM9NG84Q"
                            },
                            {
                                "type": "text",
                                "text": " too had a post around the same time that messaging and communication are all, that decomposition is trivial, that focusing on \"programming\" is often a modernist approach. If we started from the assumption that \"coding\" is about orchestrating groups of computers, what would we do differently? What does the UX for programming look like if you also have to specify where computations happen? It seems to make Bret Victor's problem much harder. But following Alan Kay, perhaps we don't yet have the \"hardest and most profound thing to then build every easier thing out of\".\n\nI'm also thinking about Dave Ackley's "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/movablefeastmachine.org"
                            },
                            {
                                "type": "text",
                                "text": ". He started out in security, so he likely knew all this when he started out on his project. You can't secure your computing substrate if you aren't thinking about 90% of the computers in it.\n\nAnyways, likely the fever dream will break in a day or two and I'll go back to "
                            },
                            {
                                "type": "text",
                                "text": "lying to myself",
                                "style": {
                                    "strike": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " programming my little computer. But I thought I'd throw this out while it's fresh."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "U01661S9F34",
                    "UKDM3GLAJ"
                ],
                "count": 2
            },
            {
                "name": "100",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1610781197.014800",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1610832967.000000"
        },
        "client_msg_id": "7566d9ae-3f87-40f5-bc45-6e044419f739",
        "text": "I'm definitely of the opinion that distribution should be built into the semantics of every programming language (actors etc.), rather than exposed as a library. That suggestion probably isn't too controversial within this community :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610778816.014400",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rma",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm definitely of the opinion that distribution should be built into the semantics of every programming language (actors etc.), rather than exposed as a library. That suggestion probably isn't too controversial within this community "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD",
                    "U019CPED6T1"
                ],
                "count": 2
            }
        ]
    }
]