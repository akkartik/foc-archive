[
    {
        "user": "UP28ETUSE",
        "type": "message",
        "ts": "1581065852.052000",
        "edited": {
            "user": "UP28ETUSE",
            "ts": "1581065869.000000"
        },
        "client_msg_id": "1d5da2b3-422d-454f-ae24-55ecae82f77b",
        "text": "I've heard about behavioral programming while researching Harel's statecharts (which are themselves a nice idea). I'd like to try it out in a toy project, for the time being, since the idea of moving the immutability to the code base itself is tempting. That's how I see those bthreads as of now, as a means of implementing an immutable code base. Although, append-only better describes the situation.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7cefc64f7b1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7cefc64f7b1b53513625bf3487ecd16d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "Ionuț",
            "real_name": "Ionuț G. Stan",
            "display_name": "Ionuț G. Stan",
            "team": "T5TCAFTA9",
            "name": "ionut.g.stan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580955499.046800",
        "parent_user_id": "USUMN6XLH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9=g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've heard about behavioral programming while researching Harel's statecharts (which are themselves a nice idea). I'd like to try it out in a toy project, for the time being, since the idea of moving the immutability to the code base itself is tempting. That's how I see those bthreads as of now, as a means of implementing an immutable code base. Although, append-only better describes the situation."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "URC5MU2AZ",
        "type": "message",
        "ts": "1581098919.052500",
        "client_msg_id": "48fcc44a-b7bc-4b9b-86ae-a8a4dea75001",
        "text": "This looks interesting: <https:\/\/www.coscreen.co\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2ab01717445",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2ab0171744564df5b57138d2f081cbe7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Brandon Hudgeons",
            "display_name": "Brandon Hudgeons",
            "team": "T5TCAFTA9",
            "name": "brandon",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575499159.025000",
        "parent_user_id": "UN89MTTML",
        "attachments": [
            {
                "title": "CoScreen - Radically Different Remote Collaboration",
                "title_link": "https:\/\/www.coscreen.co\/",
                "text": "With CoScreen, any window you drag &amp; drop to your extended display is instantly shared with your team on their extended displays &amp; vice versa. Sign up for our beta.",
                "fallback": "CoScreen - Radically Different Remote Collaboration",
                "from_url": "https:\/\/www.coscreen.co\/",
                "service_icon": "https:\/\/www.coscreen.co\/images\/favicon.ico",
                "service_name": "coscreen.co",
                "id": 1,
                "original_url": "https:\/\/www.coscreen.co\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZYU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This looks interesting: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.coscreen.co\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1581099813.052800",
        "client_msg_id": "c0040418-c6b2-41c3-b238-0a3d863128e5",
        "text": "For js you have: <https:\/\/quokkajs.com\/>\n\nIt has plugins for IntelliJ \/ VSCode as well. Has a free part \/ version.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580300849.245800",
        "parent_user_id": "USUMN6XLH",
        "attachments": [
            {
                "title": "Quokka - Live Scratchpad for JavaScript in your editor",
                "title_link": "https:\/\/quokkajs.com\/",
                "text": "Quokka is a rapid prototyping playground in your editor, with access to your project's files, inline reporting, code coverage and rich output formatting.",
                "fallback": "Quokka - Live Scratchpad for JavaScript in your editor",
                "from_url": "https:\/\/quokkajs.com\/",
                "service_icon": "https:\/\/quokkajs.com\/assets\/img\/favicon.ico?v=4",
                "service_name": "quokkajs.com",
                "id": 1,
                "original_url": "https:\/\/quokkajs.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k4yl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For js you have: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/quokkajs.com\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIt has plugins for IntelliJ \/ VSCode as well. Has a free part \/ version."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQ706GB9U",
        "type": "message",
        "ts": "1581118402.053700",
        "client_msg_id": "b953f0e8-78b0-4956-99ec-9459c20c8b7e",
        "text": "this reminds me of a project that I made where the program was parsing many different versions of an xml (it was a long time ago) file. I wrote the version 1 was a recursive decent parser class. Version N+1 extends N and override the parts of the AST that had changed. it ment that I didn’t break parsing of older messages. it did mean that i couldn’t deprecate the code old versions that weren’t used anymore. it made easy to see what changed from between versions.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g80bf3c31da6",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/80bf3c31da6a1f3f44e68bfe227fd35d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "George",
            "real_name": "George Campbell",
            "display_name": "George",
            "team": "T5TCAFTA9",
            "name": "abersnaze",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1580955499.046800",
        "parent_user_id": "USUMN6XLH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K7Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this reminds me of a project that I made where the program was parsing many different versions of an xml (it was a long time ago) file. I wrote the version 1 was a recursive decent parser class. Version N+1 extends N and override the parts of the AST that had changed. it ment that I didn’t break parsing of older messages. it did mean that i couldn’t deprecate the code old versions that weren’t used anymore. it made easy to see what changed from between versions."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]