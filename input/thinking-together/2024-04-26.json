[
    {
        "user": "UP00ZLX6G",
        "type": "message",
        "ts": "1714116893.449839",
        "client_msg_id": "fdd951c5-ee50-412f-904e-238b9412193f",
        "text": "I agree with <@UK3LH8CF5> in that it’s all about the interface. Configuration done badly, feels like bureaucracy eg, filling in a tax form - you don’t know what to put in a lot of the times and it’s very tedious. Yaml\/Json interfaces encourage this type of interface. When designed well, it’s part of the system eg, games that make you “configure” the game by playing the game",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbf26b30edd8",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bf26b30edd8ed78a32e08172b3ffab4a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Tak Tran",
            "display_name": "Tak Tran",
            "team": "T5TCAFTA9",
            "name": "contact584",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714062480.601149",
        "parent_user_id": "U04JY2BF24E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k4RTk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree with "
                            },
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": " in that it’s all about the interface. Configuration done badly, feels like bureaucracy eg, filling in a tax form - you don’t know what to put in a lot of the times and it’s very tedious. Yaml\/Json interfaces encourage this type of interface. When designed well, it’s part of the system eg, games that make you “configure” the game by playing the game"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCS1K3QTH",
        "type": "message",
        "ts": "1714139131.472379",
        "client_msg_id": "19076412-2927-40a8-8f52-ebc4c0d9ee77",
        "text": "&gt; Ivan imagines a world where general purpose programming languages are replaced (or supplanted) by domain-specific tooling.\n\nIn some ways I think we are already there: javascript on the client, backend in C\/C++\/java\/Python\/C# etc. Shell scripting for OS, YML for build pipelines.\n\nIn other ways, we are a long way off. An example:\n• say you are a nurse manager running a new service you have staff you know the laws relating to healthcare provision, safety, there are agree services, metrics and tariffs. How do you do this?  what you do is run it on a bunch of spreadsheets.  Why - even low code tools require you to bring in a consultant to get it working acceptably - if you are running a large service that is widespread you may eventually put together a business case to procure a system. (assuming there is a vendor for what your need). When the service winds down that patient information is lost.\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "af83411b2f9d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433010126754_af83411b2f9d3dc221a8_72.jpg",
            "first_name": "Stephen",
            "real_name": "Stephen De Gabrielle",
            "display_name": "Stephen De Gabrielle",
            "team": "T5TCAFTA9",
            "name": "spdegabrielle",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714062480.601149",
        "parent_user_id": "U04JY2BF24E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VX9BI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> Ivan imagines a world where general purpose programming languages are replaced (or supplanted) by domain-specific tooling.\n\nIn some ways I think we are already there: javascript on the client, backend in C\/C++\/java\/Python\/C# etc. Shell scripting for OS, YML for build pipelines.\n\nIn other ways, we are a long way off. An example:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "say you are a nurse manager running a new service you have staff you know the laws relating to healthcare provision, safety, there are agree services, metrics and tariffs. How do you do this?  what you do is run it on a bunch of spreadsheets.  Why - even low code tools require you to bring in a consultant to get it working acceptably - if you are running a large service that is widespread you may eventually put together a business case to procure a system. (assuming there is a vendor for what your need). When the service winds down that patient information is lost."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    },
    {
        "user": "UCS1K3QTH",
        "type": "message",
        "ts": "1714139216.639929",
        "client_msg_id": "2201ffb7-102d-4ce5-9dc9-9c390da761ab",
        "text": "there are limited options for professionals who are not programmers to get systems that do what they need.  Current low code systems come with a bunch of compromises and assumptions they may cost more than they are worth.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "af83411b2f9d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433010126754_af83411b2f9d3dc221a8_72.jpg",
            "first_name": "Stephen",
            "real_name": "Stephen De Gabrielle",
            "display_name": "Stephen De Gabrielle",
            "team": "T5TCAFTA9",
            "name": "spdegabrielle",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714062480.601149",
        "parent_user_id": "U04JY2BF24E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yk3MW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there are limited options for professionals who are not programmers to get systems that do what they need.  Current low code systems come with a bunch of compromises and assumptions they may cost more than they are worth."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04JY2BF24E",
        "type": "message",
        "ts": "1714139773.335279",
        "edited": {
            "user": "U04JY2BF24E",
            "ts": "1714139806.000000"
        },
        "client_msg_id": "5044f84c-bfaa-4c94-b046-e220ece906a4",
        "text": "Another potential distinction here, from the discussion above: some freedom to define relationships between different parts of the program. If we lock the user into a pre-defined schema with pre-defined relationships, then we fall squarely on the side of \"configuration\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "154a9d12968c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-06-13\/5441522160256_154a9d12968ca5a13cf5_72.jpg",
            "first_name": "Greg",
            "real_name": "Greg Bylenok",
            "display_name": "Greg Bylenok",
            "team": "T5TCAFTA9",
            "name": "gregory.bylenok",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714062480.601149",
        "parent_user_id": "U04JY2BF24E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0KkxU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another potential distinction here, from the discussion above: some freedom to define relationships between different parts of the program. If we lock the user into a pre-defined schema with pre-defined relationships, then we fall squarely on the side of \"configuration\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCS1K3QTH"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCS1K3QTH",
        "type": "message",
        "ts": "1714139808.780739",
        "client_msg_id": "80660dc7-bc49-46d4-a7d6-51055d6f934e",
        "text": "&gt;  Sounds like Racket Lang could be a solid bet if they can withstand the elites knocking performance and distribution issues out.\nRacket is interesting because the metaprogramming facilities open the doors to building a wider variety of programming languages.\n\nThe performance question is interesting, because Racket has excellent performance, but it isn't a system programming language like Rust or C++ - and doesn't pretend to be.\n\nSo you wouldn't run Racket on a large scale - but DSL's for professionals - the machines they use are mostly idle - the size and speed of the Racket is just not noticeable.\n\nWhat is missing is DSL's(future of coding!) that support the needs of the users.\n\nRacket has tools to help make those DSL's (as do many other languages) - but the DSL's for non-programmers don't exist yet.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "af83411b2f9d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433010126754_af83411b2f9d3dc221a8_72.jpg",
            "first_name": "Stephen",
            "real_name": "Stephen De Gabrielle",
            "display_name": "Stephen De Gabrielle",
            "team": "T5TCAFTA9",
            "name": "spdegabrielle",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714062480.601149",
        "parent_user_id": "U04JY2BF24E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qIPOR",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " Sounds like Racket Lang could be a solid bet if they can withstand the elites knocking performance and distribution issues out."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Racket is interesting because the metaprogramming facilities open the doors to building a wider variety of programming languages.\n\nThe performance question is interesting, because Racket has excellent performance, but it isn't a system programming language like Rust or C++ - and doesn't pretend to be.\n\nSo you wouldn't run Racket on a large scale - but DSL's for professionals - the machines they use are mostly idle - the size and speed of the Racket is just not noticeable.\n\nWhat is missing is DSL's(future of coding!) that support the needs of the users.\n\nRacket has tools to help make those DSL's (as do many other languages) - but the DSL's for non-programmers don't exist yet."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCS1K3QTH",
        "type": "message",
        "ts": "1714142207.870779",
        "client_msg_id": "b6278ece-0742-4deb-ade8-1961e7fd4ca8",
        "text": "Some of the most interesting programmers I can think of are from other professions. I know a number of doctors who were licensed professionals with years of experience who taught themselves to program to solve problems that mattered to them. (I'll acknowledge survivor bias because I only know ones who succeeded.)\n\nAs programmers they are quite varied, but unlike a professional programmer, designing DSL's to suit their professional needs never occurred to them.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "af83411b2f9d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433010126754_af83411b2f9d3dc221a8_72.jpg",
            "first_name": "Stephen",
            "real_name": "Stephen De Gabrielle",
            "display_name": "Stephen De Gabrielle",
            "team": "T5TCAFTA9",
            "name": "spdegabrielle",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714062480.601149",
        "parent_user_id": "U04JY2BF24E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/u8bi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some of the most interesting programmers I can think of are from other professions. I know a number of doctors who were licensed professionals with years of experience who taught themselves to program to solve problems that mattered to them. (I'll acknowledge survivor bias because I only know ones who succeeded.)\n\nAs programmers they are quite varied, but unlike a professional programmer, designing DSL's to suit their professional needs never occurred to them."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06EN0BPK0W",
        "type": "message",
        "ts": "1714164222.337339",
        "client_msg_id": "d620313f-305f-442d-8394-bb2a55734365",
        "text": "Hi everyone, I'm currently trying to think of ways to improve OpenAPI developer experience, can someone check out the design doc for a simplified OpenAPI generator:  <https:\/\/chebykin.org\/posts\/openapic>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8326f56d8557",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-04-26\/7044135290017_8326f56d8557f0a4db70_72.jpg",
            "first_name": "Ivan",
            "real_name": "Ivan Chebykin",
            "display_name": "Ivan Chebykin",
            "team": "T5TCAFTA9",
            "name": "ivan430",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YP95R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi everyone, I'm currently trying to think of ways to improve OpenAPI developer experience, can someone check out the design doc for a simplified OpenAPI generator:  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/chebykin.org\/posts\/openapic"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06MCTWJKSR",
        "type": "message",
        "ts": "1714167263.353999",
        "client_msg_id": "8418c97b-eba3-4730-a0f7-13c6d28559b2",
        "text": "+1 mention for Hedy (after blocks or at age 10+). Gradual approach into textual programming to mitigate that up-front frustration. The format seems good so that it can be effective self-guided which must be empowering. Multi-lingual language is an awesome attention to detail! Recommend Feliennes GOTO 2022 talk on Hedy, its wonderful",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5b4c95c70d98",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-04-10\/6931478324918_5b4c95c70d98784a05cc_72.jpg",
            "first_name": "Declan",
            "real_name": "Declan",
            "display_name": "Declan Naughton",
            "team": "T5TCAFTA9",
            "name": "declann1990",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711793448.647909",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GVgZT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "+1 mention for Hedy (after blocks or at age 10+). Gradual approach into textual programming to mitigate that up-front frustration. The format seems good so that it can be effective self-guided which must be empowering. Multi-lingual language is an awesome attention to detail! Recommend Feliennes GOTO 2022 talk on Hedy, its wonderful"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    }
]