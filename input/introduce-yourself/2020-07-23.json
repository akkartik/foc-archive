[
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1595543506.489100",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1595544306.000000"
        },
        "client_msg_id": "201840ff-d172-4910-b73b-fb10c3352980",
        "text": "<@UAVCC2X70> I arrived to new symmetries. All of these below are essentially the same thing: 1. they have private state 2. can be instantiated multiple times 3. are waiting for events\/messages from the outside:\n\nobject ~= process ~= thread ~= closure ~= function (+ its live call on the stack! - but it is ephemeral) ~= computer ~= machine\nand\nalso ~= eventStream (but in HOT eventstream case state is in the subscriber or you can say in COLD case the eventstream itself has the state [of all previous events])\n\nEventStreams (+subscribers) are special, because you can split the (3.) events from the (1.) private state - and manage the event part on a higher level of abstraction (via Stream operators) AND this is the only way to handle (model) parallel async computations sensibly! I’ll go with that for sure!\n\nRx for the win, cyclejs for the win, old Elm for the win (not anymore), Reactive Functional Programming ftw, etc. (Clojure &amp; Haskell has stuff for that, maybe even Scala based on my research)\n\nThough, I’d like to use stuff with React Native and reuse my knowledge in the JS(TS!) world so I am focused on cycle.js these days; it has react extensions - working with React Native as well. For iOS there is ReactiveCocoa out there - I am considering that as well, because Apple seems to be so much ahead and it would be nice to program Apple Watch.\n\n<@UDKTZSD6H>\n<@UCUSW7WVD>\n<@U8A5MS6R1>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563205840.243800",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G3tb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": " I arrived to new symmetries. All of these below are essentially the same thing: 1. they have private state 2. can be instantiated multiple times 3. are waiting for events\/messages from the outside:\n\nobject ~= process ~= thread ~= closure ~= function (+ its live call on the stack! - but it is ephemeral) ~= computer ~= machine\nand\nalso ~= eventStream (but in HOT eventstream case state is in the subscriber or you can say in COLD case the eventstream itself has the state [of all previous events])\n\nEventStreams (+subscribers) are special, because you can split the (3.) events from the (1.) private state - and manage the event part on a higher level of abstraction (via Stream operators) AND this is the only way to handle (model) parallel async computations sensibly! I’ll go with that for sure!\n\nRx for the win, cyclejs for the win, old Elm for the win (not anymore), Reactive Functional Programming ftw, etc. (Clojure & Haskell has stuff for that, maybe even Scala based on my research)\n\nThough, I’d like to use stuff with React Native and reuse my knowledge in the JS(TS!) world so I am focused on cycle.js these days; it has react extensions - working with React Native as well. For iOS there is ReactiveCocoa out there - I am considering that as well, because Apple seems to be so much ahead and it would be nice to program Apple Watch.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UDKTZSD6H"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1595562571.490500",
        "client_msg_id": "90772701-c8df-4f3a-a88a-640a77889782",
        "text": "Sitting in my basement I clapped for _Golden Beads_ like a dumbass.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595232726.479000",
        "parent_user_id": "U013ZLJARC7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Axh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sitting in my basement I clapped for "
                            },
                            {
                                "type": "text",
                                "text": "Golden Beads",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " like a dumbass."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    }
]