[
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1722932111.984679",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1722933109.000000"
        },
        "client_msg_id": "9d780693-31ff-4552-ae6c-705e07f19915",
        "text": "Ivan Reese 3, 3, 4\nArvind Thyagarajan 2\nJasmine Otto 4\nJimmy Miller  2\nKartik Agaram 2\nAvon 2\nEli Mellen 5\nPaul Tarvydas 3\nKonrad Hinsen 2\nTom Larkworthy 4\nDany 3\nNilesh Trivedi 4\nBeni Cherniavsky-Paskin 3\nJason Morris 2\nGuyren Howe 3\nJohn Christensen 3\nStefan Lesser 2\nMark Dewing 4",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722660123.009799",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0Xx1H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ivan Reese 3, 3, 4\nArvind Thyagarajan 2\nJasmine Otto 4\nJimmy Miller  2\nKartik Agaram 2\nAvon 2\nEli Mellen 5\nPaul Tarvydas 3\nKonrad Hinsen 2\nTom Larkworthy 4\nDany 3\nNilesh Trivedi 4\nBeni Cherniavsky-Paskin 3\nJason Morris 2\nGuyren Howe 3\nJohn Christensen 3\nStefan Lesser 2\nMark Dewing 4"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1722932127.502109",
        "client_msg_id": "35eec86f-797d-4e6a-b179-52a85cd1d07c",
        "text": "Time to add the new ones folks!!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722660123.009799",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jj+Oe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Time to add the new ones folks!!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1722932444.955469",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1722932615.000000"
        },
        "client_msg_id": "7035bff9-84a9-45ba-a351-1b9ef4228fbf",
        "text": "And hello, my homies so far!  <@U023V63MF6V> <@U06131CATV3>  <@UJBAJNFLK> <@U5STGTB3J> :hugging_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722660123.009799",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wsHXe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And hello, my homies so far!  "
                            },
                            {
                                "type": "user",
                                "user_id": "U023V63MF6V"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U06131CATV3"
                            },
                            {
                                "type": "text",
                                "text": "  "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "hugging_face",
                                "unicode": "1f917"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U023V63MF6V",
                    "U06131CATV3"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1722932587.822889",
        "client_msg_id": "e7c7182b-c4b6-45e1-8878-9a48f4e0f688",
        "text": "<@U02U0AS3J49> <@UCUSW7WVD> prod prod...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722660123.009799",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xzpVP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02U0AS3J49"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " prod prod..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "UE6EFEPTQ",
        "thread_ts": "1722660123.009799",
        "root": {
            "text": "Follow-up to <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1722547627788149|yesterday's prompt on problem statements>: post a single comment with a number from 1 to 6 for every comment but yours in yesterday's thread, indicating how close you perceive everyone else's problem statement to be relative to yours. (And don't read other people's comments before you post yours; that's part of the fun here.)\n\nHere's what the numeric scale means:\n• 1: This is a rewording of my problem statement.\n• 2: This overlaps almost entirely with my problem statement.\n• 3: I care about this problem.\n• 4: This doesn't seem like a big problem.\n• 5: This is fine, I don't think it is a problem.\n• 6: This statement is alien to me, I don't understand it as a problem statement.\nHopefully that makes sense and I haven't missed some major option..\n\nIn a day or two I'll collate the results in the attached table. (You're welcome to do so as well; just download the html file and open it in a browser tab, fill in and hit the 'save' button to save a local copy with your edits. Upload it here if you like, that can be an alternative way to give your votes.)",
            "files": [
                {
                    "id": "F07F5MDAQ5U",
                    "created": 1722659927,
                    "timestamp": 1722659927,
                    "name": "problems.html",
                    "title": "problems.html",
                    "mimetype": "text\/plain",
                    "filetype": "html",
                    "pretty_type": "HTML",
                    "user": "UCUSW7WVD",
                    "user_team": "T5TCAFTA9",
                    "editable": true,
                    "size": 14751,
                    "mode": "snippet",
                    "is_external": false,
                    "external_type": "",
                    "is_public": true,
                    "public_url_shared": false,
                    "display_as_bot": false,
                    "username": "",
                    "url_private": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F07F5MDAQ5U\/problems.html?token=xoxe-197418537349-9563586786369-9561652713025-65bb8fe543aecc29d5ac9ddff9d0bf09",
                    "url_private_download": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F07F5MDAQ5U\/download\/problems.html?token=xoxe-197418537349-9563586786369-9561652713025-65bb8fe543aecc29d5ac9ddff9d0bf09",
                    "permalink": "https:\/\/feelingofcomputing.slack.com\/files\/U5TCAFTD3\/F07F5MDAQ5U\/problems.html",
                    "permalink_public": "https:\/\/slack-files.com\/T5TCAFTA9-F07F5MDAQ5U-5813686ca5",
                    "edit_link": "https:\/\/feelingofcomputing.slack.com\/files\/U5TCAFTD3\/F07F5MDAQ5U\/problems.html\/edit",
                    "is_starred": false,
                    "skipped_shares": true,
                    "has_rich_preview": false,
                    "file_access": "visible"
                }
            ],
            "upload": false,
            "user": "UCUSW7WVD",
            "display_as_bot": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "6MRSW",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "Follow-up to "
                                },
                                {
                                    "type": "link",
                                    "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1722547627788149",
                                    "text": "yesterday's prompt on problem statements"
                                },
                                {
                                    "type": "text",
                                    "text": ": post a single comment with a number from 1 to 6 for every comment but yours in yesterday's thread, indicating how close you perceive everyone else's problem statement to be relative to yours. (And don't read other people's comments before you post yours; that's part of the fun here.)\n\nHere's what the numeric scale means:\n"
                                }
                            ]
                        },
                        {
                            "type": "rich_text_list",
                            "elements": [
                                {
                                    "type": "rich_text_section",
                                    "elements": [
                                        {
                                            "type": "text",
                                            "text": "1: This is a rewording of my problem statement."
                                        }
                                    ]
                                },
                                {
                                    "type": "rich_text_section",
                                    "elements": [
                                        {
                                            "type": "text",
                                            "text": "2: This overlaps almost entirely with my problem statement."
                                        }
                                    ]
                                },
                                {
                                    "type": "rich_text_section",
                                    "elements": [
                                        {
                                            "type": "text",
                                            "text": "3: I care about this problem."
                                        }
                                    ]
                                },
                                {
                                    "type": "rich_text_section",
                                    "elements": [
                                        {
                                            "type": "text",
                                            "text": "4: This doesn't seem like a big problem."
                                        }
                                    ]
                                },
                                {
                                    "type": "rich_text_section",
                                    "elements": [
                                        {
                                            "type": "text",
                                            "text": "5: This is fine, I don't think it is a problem."
                                        }
                                    ]
                                },
                                {
                                    "type": "rich_text_section",
                                    "elements": [
                                        {
                                            "type": "text",
                                            "text": "6: This statement is alien to me, I don't understand it as a problem statement."
                                        }
                                    ]
                                }
                            ],
                            "style": "bullet",
                            "indent": 0,
                            "offset": 0,
                            "border": 0
                        },
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "\nHopefully that makes sense and I haven't missed some major option..\n\nIn a day or two I'll collate the results in the attached table. (You're welcome to do so as well; just download the html file and open it in a browser tab, fill in and hit the 'save' button to save a local copy with your edits. Upload it here if you like, that can be an alternative way to give your votes.)"
                                }
                            ]
                        }
                    ]
                }
            ],
            "type": "message",
            "ts": "1722660123.009799",
            "edited": {
                "user": "UCUSW7WVD",
                "ts": "1722670483.000000"
            },
            "client_msg_id": "97618218-9dcb-442b-bced-e5ba8866d880",
            "thread_ts": "1722660123.009799",
            "reply_count": 17,
            "reply_users_count": 11,
            "latest_reply": "1722941222.117739",
            "reply_users": [
                "UCUSW7WVD",
                "U023V63MF6V",
                "UC2A2ARPT",
                "U03U0SCU5LH",
                "U02E4DAQGSZ",
                "UJBAJNFLK",
                "U06131CATV3",
                "UK3LH8CF5",
                "U5STGTB3J",
                "UE6EFEPTQ",
                "UGWUJUZHT"
            ],
            "replies": [
                {
                    "user": "UCUSW7WVD",
                    "ts": "1722660625.155409"
                },
                {
                    "user": "U023V63MF6V",
                    "ts": "1722698320.620469"
                },
                {
                    "user": "UC2A2ARPT",
                    "ts": "1722738457.814119"
                },
                {
                    "user": "U03U0SCU5LH",
                    "ts": "1722748460.521869"
                },
                {
                    "user": "U02E4DAQGSZ",
                    "ts": "1722752635.984159"
                },
                {
                    "user": "UJBAJNFLK",
                    "ts": "1722798001.299209"
                },
                {
                    "user": "U06131CATV3",
                    "ts": "1722798646.427989"
                },
                {
                    "user": "UK3LH8CF5",
                    "ts": "1722805391.615309"
                },
                {
                    "user": "UJBAJNFLK",
                    "ts": "1722838639.110989"
                },
                {
                    "user": "U5STGTB3J",
                    "ts": "1722885542.966329"
                },
                {
                    "user": "UE6EFEPTQ",
                    "ts": "1722932111.984679"
                },
                {
                    "user": "UE6EFEPTQ",
                    "ts": "1722932127.502109"
                },
                {
                    "user": "UE6EFEPTQ",
                    "ts": "1722932444.955469"
                },
                {
                    "user": "UE6EFEPTQ",
                    "ts": "1722932587.822889"
                },
                {
                    "user": "UE6EFEPTQ",
                    "ts": "1722933168.307579"
                },
                {
                    "user": "UGWUJUZHT",
                    "ts": "1722941149.865079"
                },
                {
                    "user": "UGWUJUZHT",
                    "ts": "1722941222.117739"
                }
            ],
            "is_locked": false,
            "subscribed": false
        },
        "type": "message",
        "ts": "1722933168.307579",
        "client_msg_id": "07b1b697-c58d-4015-8802-00610ad171ae",
        "text": "Reminder to folks to play this fun game...",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "grqfR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reminder to folks to play this fun game..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1722933221.708789",
        "client_msg_id": "3eac5387-35ba-43aa-9c7e-e579635fc423",
        "text": "Where are we with this interesting project, Kartik?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722795835.688829",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xVxAM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Where are we with this interesting project, Kartik?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "UE6EFEPTQ",
        "thread_ts": "1722547627.788149",
        "root": {
            "user": "UCUSW7WVD",
            "type": "message",
            "ts": "1722547627.788149",
            "edited": {
                "user": "UCUSW7WVD",
                "ts": "1722548662.000000"
            },
            "client_msg_id": "1b497f77-fea5-4963-962c-a1cf9c586e33",
            "text": "Prompt for everyone here: to the extent that you think about the Future of Coding or have projects to try to improve things, _what problem are you trying to attack?_ Can you state it in a couple of sentences? Without reference to a solution? Try to be precise about the audience. For example, some problems affect everyone, while others affect only professional programmers, or only researchers who use computers in their work.\n\nMy hypothesis is that focusing on problems will help us all find our most promising collaborators in this group. (The next step will be to combat our tendency to be defined by our tools, to let our tools erect barriers that divide and balkanize us. But that's further down the road. For now, let's just \"find our homies,\" the people we share specific dissatisfactions with.)\n\nThere are ideas for problem statements in a couple of earlier threads:\n• <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1718448593662299>\n• <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1717926129937119>\n• <https:\/\/futureofcoding.slack.com\/archives\/C01932BJGE8\/p1721870703344739>\nBut this thread is not for critiquing or analyzing any of those statements. Just add your own, and nothing else.\n\n(It's totally fine to copy statements from these threads. Many of them were arrived at after tons of consideration so it would be surprising if others didn't care about them. Also feel free to synthesize from multiple statements. Just try to get to something crisp and opinionated.)",
            "team": "T5TCAFTA9",
            "thread_ts": "1722547627.788149",
            "reply_count": 23,
            "reply_users_count": 22,
            "latest_reply": "1722989368.665789",
            "reply_users": [
                "UC2A2ARPT",
                "U023V63MF6V",
                "U05UK5T7LPP",
                "UK3LH8CF5",
                "UCUSW7WVD",
                "U06131CATV3",
                "UMQ6LR9NZ",
                "UGWUJUZHT",
                "UJBAJNFLK",
                "U02E4DAQGSZ",
                "U03U0SCU5LH",
                "U018S42NMMM",
                "U02QC0PPER3",
                "U02U0AS3J49",
                "U05PY5AQCA2",
                "UE6EFEPTQ",
                "U05UF5P8PT8",
                "U5STGTB3J",
                "UNS7QDKFV",
                "U6KQ2S410",
                "U06BUK2M2RH",
                "U8A5MS6R1"
            ],
            "replies": [
                {
                    "user": "UC2A2ARPT",
                    "ts": "1722548339.611319"
                },
                {
                    "user": "U023V63MF6V",
                    "ts": "1722550808.881439"
                },
                {
                    "user": "U05UK5T7LPP",
                    "ts": "1722550852.665059"
                },
                {
                    "user": "UK3LH8CF5",
                    "ts": "1722554340.361509"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1722555808.040519"
                },
                {
                    "user": "U06131CATV3",
                    "ts": "1722558582.843389"
                },
                {
                    "user": "UMQ6LR9NZ",
                    "ts": "1722561265.704009"
                },
                {
                    "user": "UGWUJUZHT",
                    "ts": "1722564745.534409"
                },
                {
                    "user": "UJBAJNFLK",
                    "ts": "1722579464.077899"
                },
                {
                    "user": "U02E4DAQGSZ",
                    "ts": "1722580704.510929"
                },
                {
                    "user": "U03U0SCU5LH",
                    "ts": "1722584047.073699"
                },
                {
                    "user": "U018S42NMMM",
                    "ts": "1722587380.444379"
                },
                {
                    "user": "U02QC0PPER3",
                    "ts": "1722597039.759469"
                },
                {
                    "user": "U02U0AS3J49",
                    "ts": "1722606072.463919"
                },
                {
                    "user": "U05PY5AQCA2",
                    "ts": "1722639838.143559"
                },
                {
                    "user": "UE6EFEPTQ",
                    "ts": "1722680784.733919"
                },
                {
                    "user": "U05UF5P8PT8",
                    "ts": "1722823622.690399"
                },
                {
                    "user": "U5STGTB3J",
                    "ts": "1722884804.976699"
                },
                {
                    "user": "UNS7QDKFV",
                    "ts": "1722893246.769729"
                },
                {
                    "user": "UE6EFEPTQ",
                    "ts": "1722933264.070309"
                },
                {
                    "user": "U6KQ2S410",
                    "ts": "1722958388.631929"
                },
                {
                    "user": "U06BUK2M2RH",
                    "ts": "1722976580.603399"
                },
                {
                    "user": "U8A5MS6R1",
                    "ts": "1722989368.665789"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "To0a4",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "Prompt for everyone here: to the extent that you think about the Future of Coding or have projects to try to improve things, "
                                },
                                {
                                    "type": "text",
                                    "text": "what problem are you trying to attack?",
                                    "style": {
                                        "italic": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": " Can you state it in a couple of sentences? Without reference to a solution? Try to be precise about the audience. For example, some problems affect everyone, while others affect only professional programmers, or only researchers who use computers in their work.\n\nMy hypothesis is that focusing on problems will help us all find our most promising collaborators in this group. (The next step will be to combat our tendency to be defined by our tools, to let our tools erect barriers that divide and balkanize us. But that's further down the road. For now, let's just \"find our homies,\" the people we share specific dissatisfactions with.)\n\nThere are ideas for problem statements in a couple of earlier threads:\n"
                                }
                            ]
                        },
                        {
                            "type": "rich_text_list",
                            "elements": [
                                {
                                    "type": "rich_text_section",
                                    "elements": [
                                        {
                                            "type": "link",
                                            "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1718448593662299"
                                        }
                                    ]
                                },
                                {
                                    "type": "rich_text_section",
                                    "elements": [
                                        {
                                            "type": "link",
                                            "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1717926129937119"
                                        }
                                    ]
                                },
                                {
                                    "type": "rich_text_section",
                                    "elements": [
                                        {
                                            "type": "link",
                                            "url": "https:\/\/futureofcoding.slack.com\/archives\/C01932BJGE8\/p1721870703344739"
                                        }
                                    ]
                                }
                            ],
                            "style": "bullet",
                            "indent": 0,
                            "border": 0
                        },
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "\nBut this thread is not for critiquing or analyzing any of those statements. Just add your own, and nothing else.\n\n(It's totally fine to copy statements from these threads. Many of them were arrived at after tons of consideration so it would be surprising if others didn't care about them. Also feel free to synthesize from multiple statements. Just try to get to something crisp and opinionated.)"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1722933264.070309",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1722933288.000000"
        },
        "client_msg_id": "323fdb49-2b16-49f0-a77a-8674f1bfe0df",
        "text": "Reminder to folks: here's the other part of the fun game",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g0j6M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reminder to folks: here's the other part of the fun game"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1722941149.865079",
        "client_msg_id": "4c5140d8-c429-415b-bf84-cbcf6f914128",
        "text": "a collection of responses: <https:\/\/kinopio.club\/foc-problem-statements-cy_cNhWzNuga550F5cRg-> (use browser controls to zoom and pan)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722660123.009799",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "from_url": "https:\/\/kinopio.club\/foc-problem-statements-cy_cNhWzNuga550F5cRg-",
                "service_icon": "https:\/\/kinopio.club\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/kinopio.club\/foc-problem-statements-cy_cNhWzNuga550F5cRg-",
                "fallback": "Kinopio: FoC problem statements – Kinopio",
                "text": "A space to whiteboard, moodboard, brainstorm, and take notes",
                "title": "FoC problem statements – Kinopio",
                "title_link": "https:\/\/kinopio.club\/foc-problem-statements-cy_cNhWzNuga550F5cRg-",
                "service_name": "Kinopio"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hHqqZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "a collection of responses: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/kinopio.club\/foc-problem-statements-cy_cNhWzNuga550F5cRg-"
                            },
                            {
                                "type": "text",
                                "text": " (use browser controls to zoom and pan)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heartbeat",
                "users": [
                    "UCUSW7WVD",
                    "U05UK5T7LPP"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1722941222.117739",
        "client_msg_id": "daca9280-2b60-490d-af07-fe8ae05616c3",
        "text": "using Kartik as a guinea pig, his numberings are: <https:\/\/kinopio.club\/foc-kartik-6hXfuTy1f_n0-Y48pS2-_>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722660123.009799",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "from_url": "https:\/\/kinopio.club\/foc-kartik-6hXfuTy1f_n0-Y48pS2-_",
                "service_icon": "https:\/\/kinopio.club\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/kinopio.club\/foc-kartik-6hXfuTy1f_n0-Y48pS2-_",
                "fallback": "Kinopio: FoC Kartik – Kinopio",
                "text": "A space to whiteboard, moodboard, brainstorm, and take notes",
                "title": "FoC Kartik – Kinopio",
                "title_link": "https:\/\/kinopio.club\/foc-kartik-6hXfuTy1f_n0-Y48pS2-_",
                "service_name": "Kinopio"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P4vzd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "using Kartik as a guinea pig, his numberings are: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/kinopio.club\/foc-kartik-6hXfuTy1f_n0-Y48pS2-_"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1722946618.737869",
        "client_msg_id": "096BACFB-751A-45BC-BC71-9BCDD29CE132",
        "text": "Yes some parts resonated with me. It reminded me of my own notes which I kept private. Looking forward to find a opportunity to exchange on these ideas. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722853687.265869",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LptqH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes some parts resonated with me"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " It reminded me of my own notes which I kept private"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Looking forward to find a opportunity to exchange on these ideas"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1722956240.985899",
        "client_msg_id": "c766b2b2-4c9e-41aa-8dd0-3581f75b7721",
        "text": "Interesting notes!\n\nFirst reaction: the title says \"how\" but not \"what\". I think the two go together by necessity. If you first decide, in the abstract, _how_ you want to program, you end up constraining _what_ you can program. Which is fine, of course, if you are aware of it and give priority to methodology. And I like reading about such approaches because my own is almost the opposite: start from _what_ and then figuring out _how_.\n\nAnother surprise for me is the focus on \"a program\", meaning a relatively autonomous unit of software. In the context of situated software, which I am also a big fan of, this looks like an unwelcome constraint. My own tendency at the moment is the opposite: build extensions\/plugins to frameworks such as Glamorous Toolkit (or my own Common Lisp inspector framework) to profit from their affordances and keep the problem-specific code small. But then, this means accepting large dependencies. In terms of durability, a \"program\" is probably the better bet.\n\nThe nine-point synthesis is very interesting. Points 1-3 agree with my own experience. Also 5 and 6. Point 4 is one reason why I like building on a framework: it makes experimentation cheaper (see point 7!). At the cost of durability. Tough trade-off.\n\nPoint 9 reminds me of Gilbert Simondon's \"The mode of existence of technical objects\". He considers a technical object mature when it no longer resembles independent parts bolted together. A single design taking into account everything all at once.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722853687.265869",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m6P2Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting notes!\n\nFirst reaction: the title says \"how\" but not \"what\". I think the two go together by necessity. If you first decide, in the abstract, "
                            },
                            {
                                "type": "text",
                                "text": "how",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " you want to program, you end up constraining "
                            },
                            {
                                "type": "text",
                                "text": "what",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " you can program. Which is fine, of course, if you are aware of it and give priority to methodology. And I like reading about such approaches because my own is almost the opposite: start from "
                            },
                            {
                                "type": "text",
                                "text": "what",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and then figuring out "
                            },
                            {
                                "type": "text",
                                "text": "how",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nAnother surprise for me is the focus on \"a program\", meaning a relatively autonomous unit of software. In the context of situated software, which I am also a big fan of, this looks like an unwelcome constraint. My own tendency at the moment is the opposite: build extensions\/plugins to frameworks such as Glamorous Toolkit (or my own Common Lisp inspector framework) to profit from their affordances and keep the problem-specific code small. But then, this means accepting large dependencies. In terms of durability, a \"program\" is probably the better bet.\n\nThe nine-point synthesis is very interesting. Points 1-3 agree with my own experience. Also 5 and 6. Point 4 is one reason why I like building on a framework: it makes experimentation cheaper (see point 7!). At the cost of durability. Tough trade-off.\n\nPoint 9 reminds me of Gilbert Simondon's \"The mode of existence of technical objects\". He considers a technical object mature when it no longer resembles independent parts bolted together. A single design taking into account everything all at once."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1722957985.608789",
        "client_msg_id": "7b1f5a2d-c1df-4e2b-b7a6-1245c68a3263",
        "text": "<@UGWUJUZHT> Thanks for sharing that essay. I have a weird cognitive dissonance when reading this. On the one hand you seem to criticize something about complexity that I deeply want to agree with, on the other hand you express it in ways that feel strangely foreign to me, as if you use words that mean completely different things to you than they mean to me.\n\n“Functions” being the obvious one here. You made it clear that you don’t mean “functional programming”. But I don’t really understand what it is exactly that you identify as the culprit? The closest to a definition of what you mean I can find in the essay is:\n\n&gt; Developers base most of their thinking on the idea that CPUs must be used as function-interpreters. This is what I call “function-based programming”.\nIt’s not going to be helpful, I suppose, but from a mathematical standpoint — which I would think most programmers actually ignore — isn’t that reasonable? Computation, or the theories we have of it by Church and Turing, are rooted in \"computable functions”. And electronic computers are approximating these theoretic models, adding their own complexities of having limitations in both time and space.\n\nThe only way I can make sense of what you’re saying is paraphrasing it as, “Now that we figured out how to build actual CPUs as approximations of these models, let’s go and find better(?) models” — which to me sounds like a cart before the horse situation.\n\nWhat should developers use CPUs as instead?\n\n&gt; I feel that so-called “computer science” ran with only the one paradigm - inefficient, function-based thinking mapped onto hardware manipulation - at the expense of cutting off many avenues of problem-solving.\nAny chance you have an example of one of these many alternative avenues of problem-solving? That would probably be the most effective way to see where I am misinterpreting you.\n\n&gt; Functional programming notation denies the existence of _time._ “Functions” can be manipulated faster than the speed of light.\nI wouldn’t say “denies”. More like “doesn’t need”.\nComputation can be modeled without factoring time (or space) into the model, which makes the model simpler and some would even say elegant. You can integrate time into the model, if you want — see Functional Reactive Programming for instance, or monads (which are a kind of ordering as you would get from sequential execution). But the key is you don’t have to, you only do that when you need to. That most `map` functions run sequentially is not a fault of functional programming.\n\nIf you come from the other end, which seems to be your starting point, I wonder how you think all that state and implicit ordering in CPUs or electronic circuits (through sequential wiring, synchronization, and clock signal feedback loops) has benefits in generalizing a new computational model from that, if what we have is already coming from such a more general (and quite elegant) model in the first place?\n\n&gt; So-called “functional programming” is just a way of forcing CPUs to act like macro processing engines at “run time”.\nAssuming you’re now talking about actual functional programming, I think you’re missing an important aspect. Yes, term rewriting is doing a lot of the heavy lifting (which I assume is what you’re going for with the macro analogy), but ultimately even pure functional programming languages grapple with side effects \/ IO and do manipulate state eventually. But there are clear benefits of modeling as much as you can in a pure functional fashion, which doesn’t make any assumptions on how your data types are actually modeled in memory and how your operations are sequenced, unless you need to. Which makes handling stuff like state and concurrency a lot easier to deal with. See <https:\/\/www.destroyallsoftware.com\/talks\/boundaries|Functional Core, Imperative Shell>. And <https:\/\/curtclifton.net\/papers\/MoseleyMarks06a.pdf|Out of the Tar Pit>.\n\n&gt; For the record, C and Pascal and Haskell and Python and JS and WASM and Scala and many other programming languages, are function-based, while PROLOG is not function-based, and, StateCharts are not function-based.\nI can see how you consider PROLOG different, as logic programming feels very different to either imperative or functional programming, even though it can be seen as a more extreme form of functional programming, where the actual computation is completely wrapped in the query engine.\nNo idea how StateCharts integrate into your mental model.\n\nI hope this doesn’t sound like an attack. I’m trying to poke at some of your statements, hoping to reveal insight in what it really is that you try to make us aware of. As I said in the beginning, I’m tempted to agree with you. For instance, this sounds a lot like something I would criticize too:\n\n&gt; In 1972, the game of Pong could be built with about $100.00 worth of chips on one circuit board, whereas in 2024, Pong needs megabytes of memory and a full-blown computer. 2024-1972 = 52 years. Hmm. Sounds like a bad investment, when put in those terms.\nYeah, I’m totally with you here. For lots of reasons that seem completely different from yours.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722636399.108109",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P6j3Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for sharing that essay. I have a weird cognitive dissonance when reading this. On the one hand you seem to criticize something about complexity that I deeply want to agree with, on the other hand you express it in ways that feel strangely foreign to me, as if you use words that mean completely different things to you than they mean to me.\n\n“Functions” being the obvious one here. You made it clear that you don’t mean “functional programming”. But I don’t really understand what it is exactly that you identify as the culprit? The closest to a definition of what you mean I can find in the essay is:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Developers base most of their thinking on the idea that CPUs must be used as function-interpreters. This is what I call “function-based programming”."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIt’s not going to be helpful, I suppose, but from a mathematical standpoint — which I would think most programmers actually ignore — isn’t that reasonable? Computation, or the theories we have of it by Church and Turing, are rooted in \"computable functions”. And electronic computers are approximating these theoretic models, adding their own complexities of having limitations in both time and space.\n\nThe only way I can make sense of what you’re saying is paraphrasing it as, “Now that we figured out how to build actual CPUs as approximations of these models, let’s go and find better(?) models” — which to me sounds like a cart before the horse situation.\n\nWhat should developers use CPUs as instead?\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel that so-called “computer science” ran with only the one paradigm - inefficient, function-based thinking mapped onto hardware manipulation - at the expense of cutting off many avenues of problem-solving."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nAny chance you have an example of one of these many alternative avenues of problem-solving? That would probably be the most effective way to see where I am misinterpreting you.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Functional programming notation denies the existence of "
                            },
                            {
                                "type": "text",
                                "text": "time.",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " “Functions” can be manipulated faster than the speed of light."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI wouldn’t say “denies”. More like “doesn’t need”.\nComputation can be modeled without factoring time (or space) into the model, which makes the model simpler and some would even say elegant. You can integrate time into the model, if you want — see Functional Reactive Programming for instance, or monads (which are a kind of ordering as you would get from sequential execution). But the key is you don’t have to, you only do that when you need to. That most "
                            },
                            {
                                "type": "text",
                                "text": "map",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " functions run sequentially is not a fault of functional programming.\n\nIf you come from the other end, which seems to be your starting point, I wonder how you think all that state and implicit ordering in CPUs or electronic circuits (through sequential wiring, synchronization, and clock signal feedback loops) has benefits in generalizing a new computational model from that, if what we have is already coming from such a more general (and quite elegant) model in the first place?\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So-called “functional programming” is just a way of forcing CPUs to act like macro processing engines at “run time”."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nAssuming you’re now talking about actual functional programming, I think you’re missing an important aspect. Yes, term rewriting is doing a lot of the heavy lifting (which I assume is what you’re going for with the macro analogy), but ultimately even pure functional programming languages grapple with side effects \/ IO and do manipulate state eventually. But there are clear benefits of modeling as much as you can in a pure functional fashion, which doesn’t make any assumptions on how your data types are actually modeled in memory and how your operations are sequenced, unless you need to. Which makes handling stuff like state and concurrency a lot easier to deal with. See "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.destroyallsoftware.com\/talks\/boundaries",
                                "text": "Functional Core, Imperative Shell"
                            },
                            {
                                "type": "text",
                                "text": ". And "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/curtclifton.net\/papers\/MoseleyMarks06a.pdf",
                                "text": "Out of the Tar Pit"
                            },
                            {
                                "type": "text",
                                "text": ".\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For the record, C and Pascal and Haskell and Python and JS and WASM and Scala and many other programming languages, are function-based, while PROLOG is not function-based, and, StateCharts are not function-based."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI can see how you consider PROLOG different, as logic programming feels very different to either imperative or functional programming, even though it can be seen as a more extreme form of functional programming, where the actual computation is completely wrapped in the query engine.\nNo idea how StateCharts integrate into your mental model.\n\nI hope this doesn’t sound like an attack. I’m trying to poke at some of your statements, hoping to reveal insight in what it really is that you try to make us aware of. As I said in the beginning, I’m tempted to agree with you. For instance, this sounds a lot like something I would criticize too:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In 1972, the game of Pong could be built with about $100.00 worth of chips on one circuit board, whereas in 2024, Pong needs megabytes of memory and a full-blown computer. 2024-1972 = 52 years. Hmm. Sounds like a bad investment, when put in those terms."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nYeah, I’m totally with you here. For lots of reasons that seem completely different from yours."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6KQ2S410",
        "type": "message",
        "ts": "1722958388.631929",
        "edited": {
            "user": "U6KQ2S410",
            "ts": "1722958578.000000"
        },
        "client_msg_id": "ec6fbb4f-75e9-4a00-a4b1-349702b1eb11",
        "text": "OK I’ll play.\nThe problem is that software development is shattered into a stack of special-purpose technologies, each with their own terminology, syntax, and semantics. This creates a great deal of friction and complexity. Maybe this complexity is necessary for the most intensive software, but the long tail of small-scale software problems can be solved with much simpler tools. My goal is to collapse the stack into a unified substrate that is dramatically simpler albeit slower. My meta-goal is to organize other researchers into a field working on software substrates.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e8f4c2151d2b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-09\/225308926294_e8f4c2151d2b70ebfae3_72.jpg",
            "first_name": "Jonathan",
            "real_name": "Jonathan Edwards",
            "display_name": "jonathoda",
            "team": "T5TCAFTA9",
            "name": "jonathoda",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722547627.788149",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RS7Tc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OK I’ll play.\nThe problem is that software development is shattered into a stack of special-purpose technologies, each with their own terminology, syntax, and semantics. This creates a great deal of friction and complexity. Maybe this complexity is necessary for the most intensive software, but the long tail of small-scale software problems can be solved with much simpler tools. My goal is to collapse the stack into a unified substrate that is dramatically simpler albeit slower. My meta-goal is to organize other researchers into a field working on software substrates."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "fire",
                "users": [
                    "U023V63MF6V",
                    "U06131CATV3",
                    "U06BUK2M2RH"
                ],
                "count": 3
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U8A5MS6R1",
                    "UML4ZEKDK",
                    "UJBAJNFLK",
                    "U06BUK2M2RH",
                    "U05UK5T7LPP"
                ],
                "count": 6
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1722964589.837139",
        "client_msg_id": "065aa56f-d5ae-4a6c-bf35-771ab949fb0a",
        "text": "Just waiting for data atm. It's only been a day and it seems like that's shorter than your time between checks of the Slack? There are probably others like that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722795835.688829",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6kUVh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just waiting for data atm. It's only been a day and it seems like that's shorter than your time between checks of the Slack? There are probably others like that."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1722964756.822619",
        "client_msg_id": "41c35274-a6f7-43d4-ac87-55402d656894",
        "text": "<@UGWUJUZHT>, have you thought about plotting the distances as a graph on Kinopio like I do here? I'm very curious what something like that might look like. Probably a better experience than my janky app.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722795835.688829",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iRlCz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": ", have you thought about plotting the distances as a graph on Kinopio like I do here? I'm very curious what something like that might look like. Probably a better experience than my janky app."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1722972822.751999",
        "client_msg_id": "bdc14108-5dd4-4bf2-a2ff-97528b427df3",
        "text": "<@UCUSW7WVD> Not yet. My knee-jerk reaction is to think in terms of line-thickness, colour, transparency, size, off-page linking. I haven't played with the data yet - still procrastinating. After watching Orion's use of tldraw, I wonder if assigning different values of -ve gravity might result in interesting results? (but, Kinopio doesn't do that kind of thing). Or, maybe Obsidian's \"graph view\" would (finally) come in handy?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722795835.688829",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "opm47",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Not yet. My knee-jerk reaction is to think in terms of line-thickness, colour, transparency, size, off-page linking. I haven't played with the data yet - still procrastinating. After watching Orion's use of tldraw, I wonder if assigning different values of -ve gravity might result in interesting results? (but, Kinopio doesn't do that kind of thing). Or, maybe Obsidian's \"graph view\" would (finally) come in handy?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U06BUK2M2RH",
        "type": "message",
        "ts": "1722976580.603399",
        "client_msg_id": "4a669521-2b54-40e8-b926-26f6ffe24dd9",
        "text": "I want to see software go from:\n\nMolded to computers → Molded to humans\nArcane symbols → Intuitive physicality\nMass-manufactured → Self-authored\nHidden inner world → Fully inspectable\nOssified → Malleable\nSiloed → Co-located\nLonely → Shared",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9eac202d45a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-28\/6396121022742_9eac202d45a2827e9fa6_72.jpg",
            "first_name": "Dennis",
            "real_name": "Dennis Hansen",
            "display_name": "Dennis Hansen",
            "team": "T5TCAFTA9",
            "name": "dhansen909",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722547627.788149",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0RswU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I want to see software go from:\n\nMolded to computers → Molded to humans\nArcane symbols → Intuitive physicality\nMass-manufactured → Self-authored\nHidden inner world → Fully inspectable\nOssified → Malleable\nSiloed → Co-located\nLonely → Shared"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U023V63MF6V",
                    "U5STGTB3J",
                    "UML4ZEKDK",
                    "UCUSW7WVD",
                    "UE6EFEPTQ",
                    "U06131CATV3",
                    "UJBAJNFLK",
                    "U05UK5T7LPP",
                    "U075Q2WP3UK"
                ],
                "count": 9
            },
            {
                "name": "amiga-tick",
                "users": [
                    "UC2A2ARPT",
                    "UE6EFEPTQ"
                ],
                "count": 2
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1722977697.491449",
        "client_msg_id": "3fad86a7-49d5-47a5-9a1f-8bcbbbde2121",
        "text": "<@U5STGTB3J> Just to let you know - I really appreciate your having taken the time to give me your detailed comments. I keep grappling with how to put this info into words and am spiralling inwards (I hope :-). There’s *something* deep down in my intuition that I’m managing not to say clearly. Seeing how my words are interpreted helps me dig deeper. One of the first things I built in my first real software job in 1981 got me wondering why I could build reliable hardware but have never been able to build software that meets the same level of reliability (it ain’t “essential complexity”, it’s something else. I don’t have the answer, but, I’m pretty sure that it ain’t “more of the same” (to which, one can ask “what is this The Same thing - is there some underlying commonality that is causing woe?”). I need to mull over choosing new words. It may take me a while to respond in more depth.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722636399.108109",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tf+OZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " Just to let you know - I really appreciate your having taken the time to give me your detailed comments. I keep grappling with how to put this info into words and am spiralling inwards (I hope :-). There’s "
                            },
                            {
                                "type": "text",
                                "text": "something",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " deep down in my intuition that I’m managing not to say clearly. Seeing how my words are interpreted helps me dig deeper. One of the first things I built in my first real software job in 1981 got me wondering why I could build reliable hardware but have never been able to build software that meets the same level of reliability (it ain’t “essential complexity”, it’s something else. I don’t have the answer, but, I’m pretty sure that it ain’t “more of the same” (to which, one can ask “what is this The Same thing - is there some underlying commonality that is causing woe?”). I need to mull over choosing new words. It may take me a while to respond in more depth."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1722989368.665789",
        "client_msg_id": "0c6d8112-62d3-4971-8243-f3690c30e951",
        "text": "I'm most aligned with \"Software is trapped in silos (apps) and can't be recomposed.\"\n\nImagine a world where pencils only work on notepads from the same manufacturer. Where you can draw only certain words and shapes that the notepad had been designed for. Where collages and inter-manufacturer paper-pencil integrations require upfront agreement and engineering between all involved parties. This is the digital world of today. I want a software medium where I can easily compose any artifacts, without requiring heavy upfront integration. Where I can slice, copy, paste, share, decompose, inspect the provenance and generally engage with all artifacts in a uniform way. I want a collaborative, dynamic medium which also happens to be programmable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722547627.788149",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pHCN8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm most aligned with \"Software is trapped in silos (apps) and can't be recomposed.\"\n\nImagine a world where pencils only work on notepads from the same manufacturer. Where you can draw only certain words and shapes that the notepad had been designed for. Where collages and inter-manufacturer paper-pencil integrations require upfront agreement and engineering between all involved parties. This is the digital world of today. I want a software medium where I can easily compose any artifacts, without requiring heavy upfront integration. Where I can slice, copy, paste, share, decompose, inspect the provenance and generally engage with all artifacts in a uniform way. I want a collaborative, dynamic medium which also happens to be programmable."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U06BUK2M2RH",
                    "UMQ6LR9NZ",
                    "U06131CATV3",
                    "UML4ZEKDK",
                    "UJBAJNFLK",
                    "U05UK5T7LPP",
                    "UE6EFEPTQ"
                ],
                "count": 7
            },
            {
                "name": "rainbow",
                "users": [
                    "U023V63MF6V",
                    "UE6EFEPTQ"
                ],
                "count": 2
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJBAJNFLK",
                    "UE6EFEPTQ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1723000832.078849",
        "client_msg_id": "643e6d50-8417-4c08-8e99-69fc53213978",
        "text": "<@U5STGTB3J> A tiny slice of my thoughts on your questions: (more to come…) (does this shed more light on what I mean to say?):\nThe idea of forcing FP to handle ALL of programming is based on the belief that FP is “close” to the hardware. It’s not. Use FP for what it’s good for and develop other notation(s) for the stuff the lies outside of the boundaries of FP, e.g. mutation, control-flow, heaps, etc. It is thought that the C language is “close to the hardware”. It’s not. C supports “recursion” which is not inherently supported by the hardware. You must add extra software and hardware and operating system magic to implement C. [Specifically, function-calling].",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722636399.108109",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SYSg1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " A tiny slice of my thoughts on your questions: (more to come…) (does this shed more light on what I mean to say?):\nThe idea of forcing FP to handle ALL of programming is based on the belief that FP is “close” to the hardware. It’s not. Use FP for what it’s good for and develop other notation(s) for the stuff the lies outside of the boundaries of FP, e.g. mutation, control-flow, heaps, etc. It is thought that the C language is “close to the hardware”. It’s not. C supports “recursion” which is not inherently supported by the hardware. You must add extra software and hardware and operating system magic to implement C. [Specifically, function-calling]."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1723001241.190829",
        "edited": {
            "user": "U05PY5AQCA2",
            "ts": "1723001265.000000"
        },
        "client_msg_id": "7A516889-D0AE-4E75-BCDC-38D512AA8B76",
        "text": "I’m fairly strongly convinced that Functional Programming, and other higher-level abstractions we’ve created for programming computers, such as the Relational Model, serve two main purposes:\n1. They are an easier abstraction for humans to reason about (author, read) than say the abstraction of pure machine language (noting that ML is also an abstraction — there is no “language” in the hardware; there is just state driving the Turing Machine); and\n2. They support modularity.\nI can see no way that either of these is any sort of obstacle to the future of programming. And I believe that better, higher-level abstractions (eg linear types in Rust) are likely to be the future of programming.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722636399.108109",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rZxNI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m fairly strongly convinced that Functional Programming, and other higher-level abstractions we’ve created for programming computers, such as the Relational Model, serve two main purposes:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "They are an easier abstraction for humans to reason about (author, read) than say the abstraction of pure machine language (noting that ML is also an abstraction — there is no “language” in the hardware; there is just state driving the Turing Machine); and"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "They support modularity."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI can see no way that either of these is any sort of obstacle to the future of programming. And I believe that better, higher-level abstractions (eg linear types in Rust) are likely to be the future of programming."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1723001749.026199",
        "client_msg_id": "ccaa9964-8c84-4481-a1d6-954c897791c3",
        "text": "Evidence suggests that “strong typing” and the rise of FP is correlated with bloatware. FoCers must take such observations into consideration and remain open-minded.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722636399.108109",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DnV4I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Evidence suggests that “strong typing” and the rise of FP is correlated with bloatware. FoCers must take such observations into consideration and remain open-minded."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1723001781.913949",
        "client_msg_id": "76143751-D4D5-4DB0-87C7-0E2C7C601F61",
        "text": "“Evidence”?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722636399.108109",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A8Jci",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "“Evidence”?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]