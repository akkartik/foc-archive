[
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1574853658.233600",
        "client_msg_id": "cb9aae7f-f8cf-4bd8-a0f1-3064ae43171b",
        "text": "<@UCUSW7WVD> Thanks for your response, you have some really good points. Will check out your posts later as well!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dN7io",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for your response, you have some really good points. Will check out your posts later as well!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1574853698.233800",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1574853712.000000"
        },
        "client_msg_id": "90aeaf8f-2cd9-4280-952b-6063fe6bf444",
        "text": "<@UHDQ62M4P> I had a similar idea earlier (like reconstructor), it is interesting people made it real!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XqIJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHDQ62M4P"
                            },
                            {
                                "type": "text",
                                "text": " I had a similar idea earlier (like reconstructor), it is interesting people made it real!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UHDQ62M4P"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "Got these:",
        "files": [
            {
                "id": "FQQ8Q7XDH",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "U8A5MS6R1",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mqP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Got these:"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1574875792.234400",
        "client_msg_id": "02349c9a-f7c9-4f06-8cf4-3d975d94b817",
        "thread_ts": "1574694345.141000",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1574877337.244600",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1574920090.000000"
        },
        "client_msg_id": "94e975b1-1ce9-4290-8cd2-acce9289e76b",
        "text": "Earlier today <@U6KQ2S410> tweeted this enjoyable blog post, _Your Debugger Sucks_ [1], which references the Pernosco debugger [2]. I'm familiar with omniscient debuggers like Chronomancer, but this is the first I've heard of Pernosco, and it seems very neat. Omniscient debuggers take a step beyond time travel debugging, allowing instant exploration _and comparison_ of program state across time. The video on the home page gives a sense of Pernosco's UI (not great), but the About page is what I found most interesting — a very cleanly written and compelling articulation of their vision, and a taste of what we've all been missing.\n\n[1] <https:\/\/robert.ocallahan.org\/2019\/11\/your-debugger-sucks.html>\n[2] <https:\/\/pernos.co>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574877337.244600",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1574885872.247000",
        "reply_users": [
            "U8A5MS6R1"
        ],
        "replies": [
            {
                "user": "U8A5MS6R1",
                "ts": "1574885872.247000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "39T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Earlier today "
                            },
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": " tweeted this enjoyable blog post, "
                            },
                            {
                                "type": "text",
                                "text": "Your Debugger Sucks",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " [1], which references the Pernosco debugger [2]. I'm familiar with omniscient debuggers like Chronomancer, but this is the first I've heard of Pernosco, and it seems very neat. Omniscient debuggers take a step beyond time travel debugging, allowing instant exploration "
                            },
                            {
                                "type": "text",
                                "text": "and comparison",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of program state across time. The video on the home page gives a sense of Pernosco's UI (not great), but the About page is what I found most interesting — a very cleanly written and compelling articulation of their vision, and a taste of what we've all been missing.\n\n[1] "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/robert.ocallahan.org\/2019\/11\/your-debugger-sucks.html"
                            },
                            {
                                "type": "text",
                                "text": "\n[2] "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/pernos.co"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1",
                    "UD31LGQKB",
                    "UML4ZEKDK"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1574880983.245400",
        "client_msg_id": "a4d6aff4-f942-4443-b2a8-6235e1a9b8a5",
        "text": "Has anyone made a “visual” (or otherwise more user friendly) programming tool for regular expressions?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574880983.245400",
        "reply_count": 7,
        "reply_users_count": 4,
        "latest_reply": "1575070607.315700",
        "reply_users": [
            "UBN9AFS0N",
            "U8A5MS6R1",
            "UAL7940NM",
            "UEQ6M68H0"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1574881883.245600"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1574881895.245800"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1574884470.246200"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1574884586.246400"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1574884796.246600"
            },
            {
                "user": "UAL7940NM",
                "ts": "1574896153.248100"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1575070607.315700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "woQi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Has anyone made a “visual” (or otherwise more user friendly) programming tool for regular expressions?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UL3CJ7YKC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1574881883.245600",
        "client_msg_id": "1be80ffd-0252-4279-967b-376d318a94de",
        "text": "I've been thinking about it, and would like to try something inspired by this: <https:\/\/rosie-lang.org\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574880983.245400",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gMp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been thinking about it, and would like to try something inspired by this: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/rosie-lang.org\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1574881895.245800",
        "client_msg_id": "708fb319-3911-497b-b81f-4b506ee1f67f",
        "text": "<https:\/\/thestrangeloop.com\/2018\/rosie-pattern-language-improving-on-50-year-old-regular-expression-technology.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574880983.245400",
        "parent_user_id": "ULM3U6275",
        "attachments": [
            {
                "title": "Rosie Pattern Language: Improving on 50-Year Old Regular Expression Technology - Strange Loop",
                "title_link": "https:\/\/thestrangeloop.com\/2018\/rosie-pattern-language-improving-on-50-year-old-regular-expression-technology.html",
                "text": "Strange Loop (Sept 12-14, 2019 - St. Louis) is a conference for software developers covering programming langs, databases, distributed systems, security, machine learning, creativity, and more!",
                "fallback": "Rosie Pattern Language: Improving on 50-Year Old Regular Expression Technology - Strange Loop",
                "thumb_url": "https:\/\/s3.amazonaws.com\/strangeloop\/uploadedimgs\/prod\/strange_loop_logo_final_color_no_year_square.jpg",
                "from_url": "https:\/\/thestrangeloop.com\/2018\/rosie-pattern-language-improving-on-50-year-old-regular-expression-technology.html",
                "thumb_width": 1700,
                "thumb_height": 1700,
                "service_icon": "https:\/\/thestrangeloop.com\/favicon.ico",
                "service_name": "thestrangeloop.com",
                "id": 1,
                "original_url": "https:\/\/thestrangeloop.com\/2018\/rosie-pattern-language-improving-on-50-year-old-regular-expression-technology.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qI4d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/thestrangeloop.com\/2018\/rosie-pattern-language-improving-on-50-year-old-regular-expression-technology.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1574884470.246200",
        "client_msg_id": "00d4753a-63be-43b7-b4d6-b18744da76d5",
        "text": "Also see <https:\/\/ohmlang.github.io\/editor\/> - not regex specifically but PEG based. (I kinda like PEGs more anyway). Click on the examples to see the parse tree that shows the associated rules on hover.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574880983.245400",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V2e6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also see "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/ohmlang.github.io\/editor\/"
                            },
                            {
                                "type": "text",
                                "text": " - not regex specifically but PEG based. (I kinda like PEGs more anyway). Click on the examples to see the parse tree that shows the associated rules on hover."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1574884586.246400",
        "client_msg_id": "4081764b-c425-4e73-8da5-61a2f39699a7",
        "text": "Oh just read - Rosie is PEG based too :sunglasses:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574880983.245400",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RA6O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh just read - Rosie is PEG based too "
                            },
                            {
                                "type": "emoji",
                                "name": "sunglasses",
                                "unicode": "1f60e"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1574884796.246600",
        "client_msg_id": "46e4a56c-2f9b-4f17-9839-3086ae5c2a44",
        "text": "There's also some visual regex tools e.g. <https:\/\/www.debuggex.com\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574880983.245400",
        "parent_user_id": "ULM3U6275",
        "attachments": [
            {
                "title": "   Debuggex: Online visual regex tester. JavaScript, Python, and PCRE. ",
                "title_link": "https:\/\/www.debuggex.com\/",
                "text": "Test your regex by visualizing it with a live editor. JavaScript, Python, and PCRE.",
                "fallback": "   Debuggex: Online visual regex tester. JavaScript, Python, and PCRE. ",
                "from_url": "https:\/\/www.debuggex.com\/",
                "service_name": "debuggex.com",
                "id": 1,
                "original_url": "https:\/\/www.debuggex.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dC5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's also some visual regex tools e.g. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.debuggex.com\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1574885872.247000",
        "client_msg_id": "b5e7a5d4-e4fa-4316-8258-e92e195086f6",
        "text": "Yeah! This point specifically is :100:\n\n\n&gt; Traditional debuggers have an notion of \"the current point in time\" that is tied to heavyweight internal state (typically a set of running processes). In Pernosco, \"the current point in time\" is still a useful UI concept (we call it the focus), but it is merely a parameter to queries to our omniscient database, so we can change it freely and instantly.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574877337.244600",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8SKFF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah! This point specifically is "
                            },
                            {
                                "type": "emoji",
                                "name": "100",
                                "unicode": "1f4af"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Traditional debuggers have an notion of \"the current point in time\" that is tied to heavyweight internal state (typically a set of running processes). In Pernosco, \"the current point in time\" is still a useful UI concept (we call it the focus), but it is merely a parameter to queries to our omniscient database, so we can change it freely and instantly."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1574896153.248100",
        "client_msg_id": "595fc4fe-6c0a-4b10-b53a-4c6d55024b71",
        "text": "I like this online regex \"IDE\": <https:\/\/regex101.com\/|https:\/\/regex101.com\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574880983.245400",
        "parent_user_id": "ULM3U6275",
        "attachments": [
            {
                "title": "Regex101 - online regex editor and debugger",
                "title_link": "https:\/\/regex101.com\/",
                "text": "Regex101 allows you to create, debug, test and have your expressions explained for PHP, PCRE, Python, Golang and JavaScript. The website also features a community where you can share useful expressions.",
                "fallback": "Regex101 - online regex editor and debugger",
                "from_url": "https:\/\/regex101.com\/",
                "service_icon": "https:\/\/regex101.com\/static\/assets\/apple-icon-57x57.png",
                "service_name": "regex101.com",
                "id": 1,
                "original_url": "https:\/\/regex101.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jst",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like this online regex \"IDE\": "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/regex101.com\/",
                                "text": "https:\/\/regex101.com\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275",
                    "UP7SQ8KT3",
                    "UNE30DK8U"
                ],
                "count": 3
            },
            {
                "name": "100",
                "users": [
                    "UNE30DK8U"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1574899766.248400",
        "client_msg_id": "3f7b82e2-ce11-4a3d-86c6-e216c994ef03",
        "text": "This is a very Forth-like topic :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kcl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a very Forth-like topic :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "grin",
                "users": [
                    "UHDQ62M4P"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1574906767.250600",
        "client_msg_id": "75650E0C-5BB9-4A28-8452-ECE719AB105E",
        "text": "yeah, it would have to be a custom language and environment. you’d need something like unison’s content addressing system. if i were to buzzword it i’d call it a “semantic addressing” system",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574794252.227300",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4ai",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah, it would have to be a custom language and environment. you’d need something like unison’s content addressing system. if i were to buzzword it i’d call it a “semantic addressing” system"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1574921333.251500",
        "client_msg_id": "85123bab-e1da-4509-a517-5d99070991ed",
        "text": "Just to get back to the extension mechanisms, there's three integration points that I think work so well together:\n\n• Acme will execute any program typed and gestured in the app, setting an environment variable that contains the ID of the Acme window where it's executing. So users \"install\" \"plugins\" by typing a name into the top bar, where it stays until they delete it.\n• Other programs can connect to Acme via a network protocol which, among other things, lets you control any window given its ID. In particular, if you request a window's event stream, that suppresses almost all default behaviors so that you can redefine what the \"execute\" and \"look\" mouse gestures do, while other windows continue to operate normally.\n• The network protocol emulates a filesystem interface that for convenience is wrapped by a command-line program whose interface boils down to `9p read [path]` and `9p write [path]`.\nSo given any interface problem, you can attack it in a variety of ways:\n\n• Make a program that the user invokes, whose input is the current selection and\/or whose output overwrites the current selection.\n• Make a program that controls Acme from afar with the network protocol.\n• Combination of the first two.\nAnd it's remarkably simple. Like, here's a shell script that you can use as your $EDITOR that opens a file in a new Acme window, adding \"Cancel\" and \"Done\" commands to the UI that dictate the exit code and whether it saves:\n\n```#!\/bin\/bash\n\nfilename=\"$1\"\n\nwinid=$(echo $(9p read acme\/new\/ctl) | cut -d ' ' -f 1)\n\n# Open the file\necho name $filename | 9p write acme\/$winid\/ctl\necho get | 9p write acme\/$winid\/ctl\n\n# Add commands to the tag line\necho -n Cancel Done | 9p write acme\/$winid\/tag\n\n9p read acme\/$winid\/event 2&gt; \/dev\/null | while read -r line; do\n\tcmd=$(echo $line | cut -d ' ' -f 5)\n\n\tif [ \"$cmd\" == \"Cancel\" ]; then\n\t\t# Mark the file clean\n\t\techo clean | 9p write acme\/$winid\/ctl\n\n\t\t# Close the window\n\t\techo del | 9p write acme\/$winid\/ctl\n\n\t\texit 1\n\tfi\n\n\tif [ \"$cmd\" == \"Done\" ]; then\n\t\t# Write the file\n\t\techo put | 9p write acme\/$winid\/ctl\n\n\t\t# Close the window\n\t\techo del | 9p write acme\/$winid\/ctl\n\n\t\texit\n\tfi\ndone```\nThe whole thing might be complex to implement for the editor devs, but there are obvious compromises that would make it easy, and probably still be infinitely better than an API that consists entirely of command-line arguments and SIGINT. :sweat_smile: If it ever doesn't seem worth it, consider threads like this: <https:\/\/twitter.com\/geoffreylitt\/status\/1178806585289773056>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574624756.123700",
        "parent_user_id": "UFEQUBNNT",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/geoffreylitt|@geoffreylitt>: Is there a small simple tweak that you desperately wish you could make to some piece of software you use frequently?\n\n(Collecting motivating examples for a tool for end user tweaking)",
                "ts": 1569884365,
                "author_name": "Geoffrey Litt",
                "author_link": "https:\/\/twitter.com\/geoffreylitt\/status\/1178806585289773056",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/722626068293763072\/4erM-SPN_normal.jpg",
                "author_subname": "@geoffreylitt",
                "text": "Is there a small simple tweak that you desperately wish you could make to some piece of software you use frequently?\n\n(Collecting motivating examples for a tool for end user tweaking)",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/geoffreylitt\/status\/1178806585289773056",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/geoffreylitt\/status\/1178806585289773056",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jtqxa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just to get back to the extension mechanisms, there's three integration points that I think work so well together:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Acme will execute any program typed and gestured in the app, setting an environment variable that contains the ID of the Acme window where it's executing. So users \"install\" \"plugins\" by typing a name into the top bar, where it stays until they delete it."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Other programs can connect to Acme via a network protocol which, among other things, lets you control any window given its ID. In particular, if you request a window's event stream, that suppresses almost all default behaviors so that you can redefine what the \"execute\" and \"look\" mouse gestures do, while other windows continue to operate normally."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The network protocol emulates a filesystem interface that for convenience is wrapped by a command-line program whose interface boils down to "
                                    },
                                    {
                                        "type": "text",
                                        "text": "9p read [path]",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " and "
                                    },
                                    {
                                        "type": "text",
                                        "text": "9p write [path]",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nSo given any interface problem, you can attack it in a variety of ways:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Make a program that the user invokes, whose input is the current selection and\/or whose output overwrites the current selection."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Make a program that controls Acme from afar with the network protocol."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Combination of the first two."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nAnd it's remarkably simple. Like, here's a shell script that you can use as your $EDITOR that opens a file in a new Acme window, adding \"Cancel\" and \"Done\" commands to the UI that dictate the exit code and whether it saves:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "#!\/bin\/bash\n\nfilename=\"$1\"\n\nwinid=$(echo $(9p read acme\/new\/ctl) | cut -d ' ' -f 1)\n\n# Open the file\necho name $filename | 9p write acme\/$winid\/ctl\necho get | 9p write acme\/$winid\/ctl\n\n# Add commands to the tag line\necho -n Cancel Done | 9p write acme\/$winid\/tag\n\n9p read acme\/$winid\/event 2> \/dev\/null | while read -r line; do\n\tcmd=$(echo $line | cut -d ' ' -f 5)\n\n\tif [ \"$cmd\" == \"Cancel\" ]; then\n\t\t# Mark the file clean\n\t\techo clean | 9p write acme\/$winid\/ctl\n\n\t\t# Close the window\n\t\techo del | 9p write acme\/$winid\/ctl\n\n\t\texit 1\n\tfi\n\n\tif [ \"$cmd\" == \"Done\" ]; then\n\t\t# Write the file\n\t\techo put | 9p write acme\/$winid\/ctl\n\n\t\t# Close the window\n\t\techo del | 9p write acme\/$winid\/ctl\n\n\t\texit\n\tfi\ndone"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThe whole thing might be complex to implement for the editor devs, but there are obvious compromises that would make it easy, and probably still be infinitely better than an API that consists entirely of command-line arguments and SIGINT. "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            },
                            {
                                "type": "text",
                                "text": " If it ever doesn't seem worth it, consider threads like this: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/geoffreylitt\/status\/1178806585289773056"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]