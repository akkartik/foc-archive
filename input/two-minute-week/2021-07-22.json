[
    {
        "user": "UUB7RA7PF",
        "type": "message",
        "ts": "1626957048.105000",
        "client_msg_id": "e83a423c-92e8-41f9-b754-4ec1f58edbdc",
        "text": "Last week in Wasp was really productive:\n- We wrote our first public design doc, and added instructions to README on how to write them and where to put them. We will continue to do this for every new non-trivial feature, so that everybody can more easily pitch-in and influence what we are building! <https:\/\/github.com\/wasp-lang\/wasp\/tree\/master\/waspc\/docs\/design-docs>\n- Our first-time contributor <https:\/\/github.com\/saatvikshah> did an amazing job of implementing a whole new Wasp feature: support for each operation to individually opt out of authentication! <https:\/\/github.com\/wasp-lang\/wasp\/pull\/279>\n- Thanks to hard work by our intern <https:\/\/github.com\/craigmc08>, we merged first part of new Wasp compiler, rewritten to use parser\/lexer generators that use formal grammar, instead of using parser combinator library where we had to do all this manually. <https:\/\/github.com\/wasp-lang\/wasp\/pull\/274>\n- We implemented support for running custom server setup code. <https:\/\/github.com\/wasp-lang\/wasp\/pull\/285>\n- We brought Waspello demo app (Trello implementation in Wasp) to its MVP stage. This will help us develop Wasp for apps that require \"advanced\" reactivity <https:\/\/github.com\/wasp-lang\/wasp\/tree\/trello-example-app\/examples\/trello>\n\nNext couple of weeks we will go for vacation, but then we are back in full-speed! Wish you all a great summer :slightly_smiling_face:!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2fdcf29b225b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-26\/971836171367_2fdcf29b225b02e66825_72.png",
            "first_name": "Martin",
            "real_name": "Martin Sosic",
            "display_name": "Martin",
            "team": "T5TCAFTA9",
            "name": "sosic.martin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MoibN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Last week in Wasp was really productive:\n- We wrote our first public design doc, and added instructions to README on how to write them and where to put them. We will continue to do this for every new non-trivial feature, so that everybody can more easily pitch-in and influence what we are building! "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/wasp-lang\/wasp\/tree\/master\/waspc\/docs\/design-docs"
                            },
                            {
                                "type": "text",
                                "text": "\n- Our first-time contributor "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/saatvikshah"
                            },
                            {
                                "type": "text",
                                "text": " did an amazing job of implementing a whole new Wasp feature: support for each operation to individually opt out of authentication! "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/wasp-lang\/wasp\/pull\/279"
                            },
                            {
                                "type": "text",
                                "text": "\n- Thanks to hard work by our intern "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/craigmc08"
                            },
                            {
                                "type": "text",
                                "text": ", we merged first part of new Wasp compiler, rewritten to use parser\/lexer generators that use formal grammar, instead of using parser combinator library where we had to do all this manually. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/wasp-lang\/wasp\/pull\/274"
                            },
                            {
                                "type": "text",
                                "text": "\n- We implemented support for running custom server setup code. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/wasp-lang\/wasp\/pull\/285"
                            },
                            {
                                "type": "text",
                                "text": "\n- We brought Waspello demo app (Trello implementation in Wasp) to its MVP stage. This will help us develop Wasp for apps that require \"advanced\" reactivity "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/wasp-lang\/wasp\/tree\/trello-example-app\/examples\/trello"
                            },
                            {
                                "type": "text",
                                "text": "\n\nNext couple of weeks we will go for vacation, but then we are back in full-speed! Wish you all a great summer "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UUB7RA7PF",
        "type": "message",
        "ts": "1626957151.105100",
        "client_msg_id": "64f5f878-2cd6-4bb2-8019-ccbaffd89d39",
        "text": "Do you imagine Ratio being used instead of web app frameworks, to replace some of the web apps? Or is it more for personal tools? What would I use Ratio instead of?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2fdcf29b225b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-26\/971836171367_2fdcf29b225b02e66825_72.png",
            "first_name": "Martin",
            "real_name": "Martin Sosic",
            "display_name": "Martin",
            "team": "T5TCAFTA9",
            "name": "sosic.martin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1626424396.078100",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TV\/\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do you imagine Ratio being used instead of web app frameworks, to replace some of the web apps? Or is it more for personal tools? What would I use Ratio instead of?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1626959945.105300",
        "client_msg_id": "27ad980b-f9d2-4174-8136-75ae4553be42",
        "text": "Good question!\n\nGiven a more flexible layout block (right now you can only create equally sized columns and rows), I think that web apps could be built with it. It already solves a lot of the annoying parts (props drilling, state management, component creation, imports, …). In theory you could build a block that can work with a database — anything really because it’s just backed by code. And because you start with an empty canvas, you could build anything. So in a sense it is a framework that comes with its own GUI builder.\n\nThe longer I think about it, the more I realize that it could become an operating system that could host all of my apps — with the advantage that apps could talk to each other and share data. Not sure if I want to push it in that direction, but it is an interesting thought experiment.\n\nI think you could use Ratio instead of: online code playgrounds (CodePen, ObservableHQ), Automation tools (Automator, Workflows, Zappier), Code Utilities (Paw, JSON Tree Viewers, API Explorers) and Command Line Tools that are missing a GUI (image compressors, FFMPEG, FTP, …). So mainly developer tools used to figure things out.\n\nThe other audience could be “open” personal apps that can be hacked and interoperate. That part depends on the time invested into that area. But the fun part would be that someone could program a “backend” block (e.g. for fetching and sending emails) and someone else could build UI on top of it. And someone else could build a different UI on top of it. And so on … right now the design is very unified, but you can completely change the look and feel if you wanted to. Will try to show something in my next demo :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1626424396.078100",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xo5IN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good question!\n\nGiven a more flexible layout block (right now you can only create equally sized columns and rows), I think that web apps could be built with it. It already solves a lot of the annoying parts (props drilling, state management, component creation, imports, …). In theory you could build a block that can work with a database — anything really because it’s just backed by code. And because you start with an empty canvas, you could build anything. So in a sense it is a framework that comes with its own GUI builder.\n\nThe longer I think about it, the more I realize that it could become an operating system that could host all of my apps — with the advantage that apps could talk to each other and share data. Not sure if I want to push it in that direction, but it is an interesting thought experiment.\n\nI think you could use Ratio instead of: online code playgrounds (CodePen, ObservableHQ), Automation tools (Automator, Workflows, Zappier), Code Utilities (Paw, JSON Tree Viewers, API Explorers) and Command Line Tools that are missing a GUI (image compressors, FFMPEG, FTP, …). So mainly developer tools used to figure things out.\n\nThe other audience could be “open” personal apps that can be hacked and interoperate. That part depends on the time invested into that area. But the fun part would be that someone could program a “backend” block (e.g. for fetching and sending emails) and someone else could build UI on top of it. And someone else could build a different UI on top of it. And so on … right now the design is very unified, but you can completely change the look and feel if you wanted to. Will try to show something in my next demo "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1626968794.107800",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1626969085.000000"
        },
        "client_msg_id": "937bd7ab-2586-4675-99db-dc47e47b5eeb",
        "text": "New Feature: Variables in Formula Editor Keyboard\n\nFirst feature that adds alternatives to drag &amp; drop operations\n\nImproves discoverability\n\nAvoids long\/failed drag&amp;drop operations\n\nMakes it easier to use on devices without a mouse\n\n<https:\/\/www.youtube.com\/watch?v=IEA1oailsk8>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1626968794.107800",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1627025986.109000",
        "reply_users": [
            "U01ULEWACPP",
            "UBN9AFS0N"
        ],
        "replies": [
            {
                "user": "U01ULEWACPP",
                "ts": "1627023435.108700"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1627025986.109000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "New Feature: Variables in Formula Editor Keyboard",
                "title_link": "https:\/\/www.youtube.com\/watch?v=IEA1oailsk8",
                "author_name": "Instadeq",
                "author_link": "https:\/\/www.youtube.com\/c\/Instadeq",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/IEA1oailsk8\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: New Feature: Variables in Formula Editor Keyboard",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/IEA1oailsk8?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=IEA1oailsk8",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=IEA1oailsk8"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nNs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "New Feature: Variables in Formula Editor Keyboard\n\nFirst feature that adds alternatives to drag & drop operations\n\nImproves discoverability\n\nAvoids long\/failed drag&drop operations\n\nMakes it easier to use on devices without a mouse\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=IEA1oailsk8"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "U01ULEWACPP"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "U013ZLJARC7",
                    "U0282PL61U1"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1627023435.108700",
        "edited": {
            "user": "U01ULEWACPP",
            "ts": "1627023458.000000"
        },
        "client_msg_id": "e0b61282-b2a9-4179-b196-a8415b6520a4",
        "text": "Thanks for sharing your learning that shows that drag &amp; drop can be difficult to use. Your conclusion is good: offer alternatives and treat drag &amp; drop as a pro user feature. Are you planning on adding Excel-like referencing by typing (`=`) too, or is that already possible?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1626968794.107800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BcD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for sharing your learning that shows that drag & drop can be difficult to use. Your conclusion is good: offer alternatives and treat drag & drop as a pro user feature. Are you planning on adding Excel-like referencing by typing ("
                            },
                            {
                                "type": "text",
                                "text": "=",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") too, or is that already possible?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]