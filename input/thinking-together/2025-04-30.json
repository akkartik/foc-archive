[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1746025061.236739",
        "client_msg_id": "e6fbd587-bf79-4701-9086-48035cb16dcc",
        "text": "For the first axis, there are probably many candidates, depending on how \"mainstream\" we require them to be. Quantum computing is an obvious candidate, as <@U06SS0DHZD1> pointed out. There are also more exotic ideas, such as the <https:\/\/www.lix.polytechnique.fr\/~fvalenci\/papers\/cham.pdf|Chemical Abstract Machine> . On the other hand, I'd remove \"learning of matrix weights\" from the list as long as it is implemented strictly in terms of the preceding technique in the list. Just to punish laziness.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1745974416.421639",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eIDXn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For the first axis, there are probably many candidates, depending on how \"mainstream\" we require them to be. Quantum computing is an obvious candidate, as "
                            },
                            {
                                "type": "user",
                                "user_id": "U06SS0DHZD1"
                            },
                            {
                                "type": "text",
                                "text": " pointed out. There are also more exotic ideas, such as the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.lix.polytechnique.fr\/~fvalenci\/papers\/cham.pdf",
                                "text": "Chemical Abstract Machine"
                            },
                            {
                                "type": "text",
                                "text": " . On the other hand, I'd remove \"learning of matrix weights\" from the list as long as it is implemented strictly in terms of the preceding technique in the list. Just to punish laziness."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1746025247.789359",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1746025340.000000"
        },
        "client_msg_id": "bdb7262e-f493-4b70-a3fd-c9646b0d3e13",
        "text": "We could also admit human crowds as computational agents, and then decide that markets are a form of computation. Perhaps the fundamental question is what defines computation within a wider framing, e.g. \"information processing\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1745974416.421639",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2l3vS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We could also admit human crowds as computational agents, and then decide that markets are a form of computation. Perhaps the fundamental question is what defines computation within a wider framing, e.g. \"information processing\"."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1746026325.504339",
        "client_msg_id": "f694bdb5-8f04-43a0-bcf2-346310e66802",
        "text": "I don't care too much that one metaphor is built in terms of another, or which kind is most fundamental. That kind of reductionism seems unimportant here.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1745974416.421639",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/oQZE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't care too much that one metaphor is built in terms of another, or which kind is most fundamental. That kind of reductionism seems unimportant here."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U066TQFTXFT",
        "type": "message",
        "ts": "1746030543.032279",
        "client_msg_id": "e9aa0841-d625-4d96-b681-60fba27c0caf",
        "text": "Naive question (apologies in advance): What does convention vs configuration mean in a visual programming language? Are there interesting examples of this playing out in practice?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g134b8de0ace",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/134b8de0aceaba40d4b30757a3bffd48.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Josh",
            "real_name": "Josh Bleecher Snyder",
            "display_name": "josharian",
            "team": "T5TCAFTA9",
            "name": "josharian",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1746030543.032279",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1746033738.926049",
        "reply_users": [
            "U023V63MF6V",
            "U066TQFTXFT"
        ],
        "replies": [
            {
                "user": "U023V63MF6V",
                "ts": "1746032793.216409"
            },
            {
                "user": "U066TQFTXFT",
                "ts": "1746033738.926049"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hIuRc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Naive question (apologies in advance): What does convention vs configuration mean in a visual programming language? Are there interesting examples of this playing out in practice?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U023V63MF6V",
        "type": "message",
        "ts": "1746032793.216409",
        "client_msg_id": "0eade971-b14c-43c5-8d37-598fa8a4e170",
        "text": "If I understand the question correctly...\n\nI see it as a tradeoff between expressive power in the visual medium and reducing cognitive load to accelerate the production of \"known patterns\" of run-of-the-mill software products.\n\nBut I don't think that's the only reading. At the granular level I think some conventions in some visual programming paradigms flow intuitively from humans working with materials and do result in the medium feeling ready-to-hand (say, dragging cards around on a 2D canvas, or inputs grouped and separated from outputs)?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8c781271e0f0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-30\/2111810970118_8c781271e0f034f7c468_72.jpg",
            "first_name": "",
            "real_name": "Arvind Thyagarajan",
            "display_name": "Arvind Thyagarajan",
            "team": "T5TCAFTA9",
            "name": "arvind",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1746030543.032279",
        "parent_user_id": "U066TQFTXFT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UklwI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If I understand the question correctly...\n\nI see it as a tradeoff between expressive power in the visual medium and reducing cognitive load to accelerate the production of \"known patterns\" of run-of-the-mill software products.\n\nBut I don't think that's the only reading. At the granular level I think some conventions in some visual programming paradigms flow intuitively from humans working with materials and do result in the medium feeling ready-to-hand (say, dragging cards around on a 2D canvas, or inputs grouped and separated from outputs)?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U066TQFTXFT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U066TQFTXFT",
        "type": "message",
        "ts": "1746033738.926049",
        "client_msg_id": "d8891938-0950-4004-8a14-7f816eab1c96",
        "text": "I guess if one were to lean hard into the distinction as used in textual programming, conventions (as opposed to configurations) are stronger than that--it's not that inputs and outputs are usually grouped for clarity, but that what _makes_ them inputs and outputs are the fact that they are grouped in a certain way.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g134b8de0ace",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/134b8de0aceaba40d4b30757a3bffd48.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Josh",
            "real_name": "Josh Bleecher Snyder",
            "display_name": "josharian",
            "team": "T5TCAFTA9",
            "name": "josharian",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1746030543.032279",
        "parent_user_id": "U066TQFTXFT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/ftpK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess if one were to lean hard into the distinction as used in textual programming, conventions (as opposed to configurations) are stronger than that--it's not that inputs and outputs are usually grouped for clarity, but that what "
                            },
                            {
                                "type": "text",
                                "text": "makes",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " them inputs and outputs are the fact that they are grouped in a certain way."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U089PPWPXT9",
        "type": "message",
        "ts": "1746056879.162799",
        "text": "This reminds me of an old USENIX talk that I found very inspiring, on Eidetic Systems, aka recording every input into the OS, write only, forever\n\n<https:\/\/www.usenix.org\/conference\/osdi14\/technical-sessions\/presentation\/devecsery>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2aef2debaf55",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-05-20\/8928952294050_2aef2debaf55324daeea_72.png",
            "first_name": "Spencer",
            "real_name": "Spencer Fleming",
            "display_name": "Spencer Fleming",
            "team": "T5TCAFTA9",
            "name": "mail035",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "ts": "1741917853.097469",
                "author_id": "U05PY5AQCA2",
                "channel_id": "C5T9GPWFL",
                "channel_team": "T5TCAFTA9",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T5TCAFTA9",
                        "channel": "C5T9GPWFL",
                        "ts": "1741917853.097469",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "SHFqM",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "I think economic incentives in the development of technology have strongly favoured big business. We want to write large apps with lots of users that can run efficiently on AWS.\n\nBut computing is "
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "staggeringly cheap. ",
                                                    "style": {
                                                        "bold": false,
                                                        "italic": true
                                                    }
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "If we are willing to entertain “inefficiency”, we can make small business and individual user software in very different ways to what we do now.\n\nThis and other aspects of the economics of all this lead me to believe that our default when storing data is that it is a write-only store. The “current” version of a row is the one with the latest timestamp.\n\nIt is easy enough to roll event sourcing into this. We already “store” incoming requests — in the stupid text log file, if nowhere else. If instead, we store full, structured inputs to each request coming into a system in a database table (because we’re all about relations), then we arrive at the results of an input to a system are the results of triggers on those inputs.\n\nStep back, and consider the larger picture: every state the system was ever in can be reviewed. Every input to the system is recorded, and every state transition.\n\nNow, we circle back to small business software, and to my other bugbear: we don’t make software for non-developers to solve their own problems.\n\nBut if you put a FileMaker-like interface in front of that write-only store, and you think about augmenting that UI with tools to explore its history, I think you really have something.\n\nFuture of programming? Give me this system, with a Datalog query interface, and I can replace most of what I do in a traditional programming language with queries. Traditional programming is relegated to side-effecting or efficiency-concerned stuff."
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1741917853097469?thread_ts=1741867333.751819&cid=C5T9GPWFL",
                "is_share": true,
                "fallback": "[March 13th, 2025 8:04 PM] guyren: I think economic incentives in the development of technology have strongly favoured big business. We want to write large apps with lots of users that can run efficiently on AWS.\n\nBut computing is _staggeringly cheap._ If we are willing to entertain “inefficiency”, we can make small business and individual user software in very different ways to what we do now.\n\nThis and other aspects of the economics of all this lead me to believe that our default when storing data is that it is a write-only store. The “current” version of a row is the one with the latest timestamp.\n\nIt is easy enough to roll event sourcing into this. We already “store” incoming requests — in the stupid text log file, if nowhere else. If instead, we store full, structured inputs to each request coming into a system in a database table (because we’re all about relations), then we arrive at the results of an input to a system are the results of triggers on those inputs.\n\nStep back, and consider the larger picture: every state the system was ever in can be reviewed. Every input to the system is recorded, and every state transition.\n\nNow, we circle back to small business software, and to my other bugbear: we don’t make software for non-developers to solve their own problems.\n\nBut if you put a FileMaker-like interface in front of that write-only store, and you think about augmenting that UI with tools to explore its history, I think you really have something.\n\nFuture of programming? Give me this system, with a Datalog query interface, and I can replace most of what I do in a traditional programming language with queries. Traditional programming is relegated to side-effecting or efficiency-concerned stuff.",
                "text": "I think economic incentives in the development of technology have strongly favoured big business. We want to write large apps with lots of users that can run efficiently on AWS.\n\nBut computing is _staggeringly cheap._ If we are willing to entertain “inefficiency”, we can make small business and individual user software in very different ways to what we do now.\n\nThis and other aspects of the economics of all this lead me to believe that our default when storing data is that it is a write-only store. The “current” version of a row is the one with the latest timestamp.\n\nIt is easy enough to roll event sourcing into this. We already “store” incoming requests — in the stupid text log file, if nowhere else. If instead, we store full, structured inputs to each request coming into a system in a database table (because we’re all about relations), then we arrive at the results of an input to a system are the results of triggers on those inputs.\n\nStep back, and consider the larger picture: every state the system was ever in can be reviewed. Every input to the system is recorded, and every state transition.\n\nNow, we circle back to small business software, and to my other bugbear: we don’t make software for non-developers to solve their own problems.\n\nBut if you put a FileMaker-like interface in front of that write-only store, and you think about augmenting that UI with tools to explore its history, I think you really have something.\n\nFuture of programming? Give me this system, with a Datalog query interface, and I can replace most of what I do in a traditional programming language with queries. Traditional programming is relegated to side-effecting or efficiency-concerned stuff.",
                "author_name": "Guyren Howe",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/U05PY5AQCA2",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_48.jpg",
                "author_subname": "Guyren Howe",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NsAGl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This reminds me of an old USENIX talk that I found very inspiring, on Eidetic Systems, aka recording every input into the OS, write only, forever\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.usenix.org\/conference\/osdi14\/technical-sessions\/presentation\/devecsery"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U04S5LF5C7R",
                    "UML4ZEKDK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U089PPWPXT9",
        "type": "message",
        "ts": "1746056906.675389",
        "client_msg_id": "1e3e0611-a2ee-432a-8aeb-6412c6febc2d",
        "text": "With that, you can roll back any local computation, branch off of it, etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2aef2debaf55",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-05-20\/8928952294050_2aef2debaf55324daeea_72.png",
            "first_name": "Spencer",
            "real_name": "Spencer Fleming",
            "display_name": "Spencer Fleming",
            "team": "T5TCAFTA9",
            "name": "mail035",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UZLqO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "With that, you can roll back any local computation, branch off of it, etc."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U089PPWPXT9",
        "type": "message",
        "ts": "1746056965.954899",
        "client_msg_id": "ed2bd195-a63c-4ae6-9769-a27fd73b7bc2",
        "text": "Still trying to work out how much ought to be the OS's job and how much ought to be the App's job",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2aef2debaf55",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-05-20\/8928952294050_2aef2debaf55324daeea_72.png",
            "first_name": "Spencer",
            "real_name": "Spencer Fleming",
            "display_name": "Spencer Fleming",
            "team": "T5TCAFTA9",
            "name": "mail035",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1746056965.954899",
        "reply_count": 6,
        "reply_users_count": 2,
        "latest_reply": "1746121876.883959",
        "reply_users": [
            "UJBAJNFLK",
            "U089PPWPXT9"
        ],
        "replies": [
            {
                "user": "UJBAJNFLK",
                "ts": "1746081585.360429"
            },
            {
                "user": "U089PPWPXT9",
                "ts": "1746109290.638259"
            },
            {
                "user": "U089PPWPXT9",
                "ts": "1746109447.734399"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1746117308.085619"
            },
            {
                "user": "U089PPWPXT9",
                "ts": "1746121846.340899"
            },
            {
                "user": "U089PPWPXT9",
                "ts": "1746121876.883959"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0qRkZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Still trying to work out how much ought to be the OS's job and how much ought to be the App's job"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1746081585.360429",
        "client_msg_id": "bcfb4e55-00e2-4818-aa97-f0f0ab1de228",
        "text": "And to what degree the owner of the computer or data should be able to override eternal storage, to prevent this from becoming a privacy nightmare.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1746056965.954899",
        "parent_user_id": "U089PPWPXT9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s0o\/Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And to what degree the owner of the computer or data should be able to override eternal storage, to prevent this from becoming a privacy nightmare."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1746081832.489059",
        "client_msg_id": "b47b2df2-de79-413b-ab38-710db52daa3d",
        "text": "I agree. But if you want to map out the space of computation, you have to say somewhere what you mean by computation, at least roughly.\n\nI have witnessed two heated debates, between academics of different disciplines, on the question \"is the brain a computer?\" In both cases, it turned out after some rounds of shouting at each other that each participants had a different view of what \"computer\" means. At one extreme, it was \"a physical system capable of processing information\", at the other extreme it was a deterministic system with a clear separation of hardware and software layers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1745974416.421639",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zt\/hu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree. But if you want to map out the space of computation, you have to say somewhere what you mean by computation, at least roughly.\n\nI have witnessed two heated debates, between academics of different disciplines, on the question \"is the brain a computer?\" In both cases, it turned out after some rounds of shouting at each other that each participants had a different view of what \"computer\" means. At one extreme, it was \"a physical system capable of processing information\", at the other extreme it was a deterministic system with a clear separation of hardware and software layers."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up_2",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            },
            {
                "name": "bulb",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1746082708.540329",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1746082792.000000"
        },
        "client_msg_id": "1a214e3d-db7f-43cf-b5bc-333e73966700",
        "text": "Yeah. Perhaps it would help to clarify that I'm thinking in this thread about the experience of getting some desired behavior. What does the inner experience of \"programming\" feel like. So the technical part of my OP was, you can program by engaging with syntax and semantics, or by running tons of data through an algorithm to tweak weights, or by whatever mechanism Dave Ackley is doing that I don't understand but definitely seems much more fault tolerant than syntax and semantics.\n\nExpert systems and relevance work do feel like first-class different experiences. Maybe related to neural networks? In all 3 the feedback loop seems definitely dilated. There's no equivalent of adding a semi-colon in response to an error message..\n\nI don't know enough about quantum computers to know what the activity of programming them feels like. So open question. Is it just libraries that run on a coprocessor with weird time complexity properties, and some barriers to adjusting function boundaries (to avoid observing at the wrong time)? Or is there more to the experience?\n\nFPGAs don't immediately feel different in the same way. My rough sense is you compile the same conventional languages to commands that configure logic gates. It's akin to compiling down to Verilog. Though there's some weirdness in terms of seemingly simple things in software that explode to take up tons of gates. That might make programming them feel different.\n\nSimilarly, DAOs on blockchains seem like regular programming, just less flexible? Once it goes on the ledger it's hard\/impossible to change.. They're probably slower, but we also have lots of experience with slow languages :slightly_smiling_face: ZK proofs do feel fundamentally different.\n\nI have some sympathy for the idea that analog computation and reversible computation feel like their own experience. But I don't know enough to be sure.\n\nI also have some sympathy for the idea that programming a game feels very different than other kinds of programming even if you're using similar languages and tools. There's a level of mechanism design and tuning for playability that's gestalt rather than detail-oriented in a way that I've never quite been able to grok. And that barrier is always an indication it's a whole different activity.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1745974416.421639",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wRwsc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah. Perhaps it would help to clarify that I'm thinking in this thread about the experience of getting some desired behavior. What does the inner experience of \"programming\" feel like. So the technical part of my OP was, you can program by engaging with syntax and semantics, or by running tons of data through an algorithm to tweak weights, or by whatever mechanism Dave Ackley is doing that I don't understand but definitely seems much more fault tolerant than syntax and semantics.\n\nExpert systems and relevance work do feel like first-class different experiences. Maybe related to neural networks? In all 3 the feedback loop seems definitely dilated. There's no equivalent of adding a semi-colon in response to an error message..\n\nI don't know enough about quantum computers to know what the activity of programming them feels like. So open question. Is it just libraries that run on a coprocessor with weird time complexity properties, and some barriers to adjusting function boundaries (to avoid observing at the wrong time)? Or is there more to the experience?\n\nFPGAs don't immediately feel different in the same way. My rough sense is you compile the same conventional languages to commands that configure logic gates. It's akin to compiling down to Verilog. Though there's some weirdness in terms of seemingly simple things in software that explode to take up tons of gates. That might make programming them feel different.\n\nSimilarly, DAOs on blockchains seem like regular programming, just less flexible? Once it goes on the ledger it's hard\/impossible to change.. They're probably slower, but we also have lots of experience with slow languages "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " ZK proofs do feel fundamentally different.\n\nI have some sympathy for the idea that analog computation and reversible computation feel like their own experience. But I don't know enough to be sure.\n\nI also have some sympathy for the idea that programming a game feels very different than other kinds of programming even if you're using similar languages and tools. There's a level of mechanism design and tuning for playability that's gestalt rather than detail-oriented in a way that I've never quite been able to grok. And that barrier is always an indication it's a whole different activity."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up_2",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            }
        ]
    }
]