[
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1597910829.007800",
        "client_msg_id": "748943FD-B502-41ED-84B8-908CD08363F6",
        "text": "I’ve been a keen follower of Casey and his handmade hero series for a while, along with his partner in crime, Jonathan Blow. Their rants are always fun, and I agree with most of it. His recent demo of how Visual Studio is slower than the version from 10 years ago was telling. The statement that software which works in the morning isn’t guaranteed to work in the afternoon is frightening and so true! A feature I’m keen to build into my own software is a snapshot ability to enable retreat to any modification point. Perhaps that’s something that should happen at an OS level? Because I can’t see a day where we don’t need updates to patch vulnerabilities, if nothing else....",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597899212.000500",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N+l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve been a keen follower of Casey and his handmade hero series for a while, along with his partner in crime, Jonathan Blow. Their rants are always fun, and I agree with most of it. His recent demo of how Visual Studio is slower than the version from 10 years ago was telling. The statement that software which works in the morning isn’t guaranteed to work in the afternoon is frightening and so true! A feature I’m keen to build into my own software is a snapshot ability to enable retreat to any modification point. Perhaps that’s something that should happen at an OS level? Because I can’t see a day where we don’t need updates to patch vulnerabilities, if nothing else...."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "ok_hand",
                "users": [
                    "UFPPABQ7P",
                    "U014WA16VNJ",
                    "U013HU44GLS"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1597929777.008900",
        "client_msg_id": "03b97e02-f986-4151-8d02-7ce8b85d2779",
        "text": "Yes, of course snapshots should happen at the OS level. This is decades overdue, but we are seeing progress in the Linux world. Ubuntu 20.04 has ZFS on root, with automatic snapshots when a package is upgraded. Fedora 33 (due Oct 2020) defaults to BTRFS on root, again with automatic snapshots and the ability to roll back to a previous state. NixOS has a different approach to package management, allowing individual apps to be rolled back, rather than requiring rollback to an earlier state to be a \"global\" operation. The flatpak app distribution system (works on all modern Linux systems) permits rollback to a previous version (which is granular on a per-app basis). What seems to be largely missing so far is a slick, high level GUI for rolling back software changes.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597899212.000500",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V\/b\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, of course snapshots should happen at the OS level. This is decades overdue, but we are seeing progress in the Linux world. Ubuntu 20.04 has ZFS on root, with automatic snapshots when a package is upgraded. Fedora 33 (due Oct 2020) defaults to BTRFS on root, again with automatic snapshots and the ability to roll back to a previous state. NixOS has a different approach to package management, allowing individual apps to be rolled back, rather than requiring rollback to an earlier state to be a \"global\" operation. The flatpak app distribution system (works on all modern Linux systems) permits rollback to a previous version (which is granular on a per-app basis). What seems to be largely missing so far is a slick, high level GUI for rolling back software changes."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK",
                    "UUQ2EQW21"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1597933164.009400",
        "client_msg_id": "1370b870-14ae-494e-9399-f74b0f128757",
        "text": "I have been using <https:\/\/guix.gnu.org\/|Guix> (which is based on the same ideas as Nix) for a while to stabilized my software environment, and I wouldn't want to live without it. You can not only snapshot your installed software, but even install the state from an arbitrary point back in time (though that can be slow because everything gets recompiled, starting with the compiler).\nGUI support is indeed missing, and some important software hasn't been packaged yet. You can't install binaries made for ordinary Linux distributions either, because the file system layout is very different. So this is not ready for prime time, but it's far more than just a proof of concept.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597899212.000500",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "title": "GNU's advanced distro and transactional package manager — GNU Guix",
                "title_link": "https:\/\/guix.gnu.org\/",
                "text": "Guix is an advanced distribution of the GNU operating system. Guix is technology that respects the freedom of computer users. You are free to run the system for any purpose, study how it works, improve it, and share it with the whole world.",
                "fallback": "GNU's advanced distro and transactional package manager — GNU Guix",
                "from_url": "https:\/\/guix.gnu.org\/",
                "service_icon": "https:\/\/guix.gnu.org\/static\/base\/img\/icon.png",
                "service_name": "guix.gnu.org",
                "id": 1,
                "original_url": "https:\/\/guix.gnu.org\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ifEDW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have been using "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/guix.gnu.org\/",
                                "text": "Guix"
                            },
                            {
                                "type": "text",
                                "text": " (which is based on the same ideas as Nix) for a while to stabilized my software environment, and I wouldn't want to live without it. You can not only snapshot your installed software, but even install the state from an arbitrary point back in time (though that can be slow because everything gets recompiled, starting with the compiler).\nGUI support is indeed missing, and some important software hasn't been packaged yet. You can't install binaries made for ordinary Linux distributions either, because the file system layout is very different. So this is not ready for prime time, but it's far more than just a proof of concept."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1597952459.010100",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1597952590.000000"
        },
        "client_msg_id": "e558ecd3-30ce-411a-a85a-3f40728db90f",
        "text": "I really wish this future would happen, but we’d need someone with a _ton_ of money to do it and I think that’s very unlikely anytime soon. It always felt like hardware interfaces should be implemented as a blackboard system where devices push events and consume events and nothing else (similar to his “just have ring buffers” idea). Interop is trivial at that point. Creating new devices is just pushing new events that some other system looks for. The events can be easily versioned and so on. The problem is that doing so isn’t just a ground up software rewrite, it really is a ground up hardware _*ecosystem*_ reconstruction and boy is that a tall order.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597899212.000500",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8KoWx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really wish this future would happen, but we’d need someone with a "
                            },
                            {
                                "type": "text",
                                "text": "ton",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of money to do it and I think that’s very unlikely anytime soon. It always felt like hardware interfaces should be implemented as a blackboard system where devices push events and consume events and nothing else (similar to his “just have ring buffers” idea). Interop is trivial at that point. Creating new devices is just pushing new events that some other system looks for. The events can be easily versioned and so on. The problem is that doing so isn’t just a ground up software rewrite, it really is a ground up hardware "
                            },
                            {
                                "type": "text",
                                "text": "ecosystem",
                                "style": {
                                    "bold": true,
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "reconstruction and boy is that a tall order."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UFPPABQ7P",
                    "U013ZLJARC7"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1597957631.011100",
        "client_msg_id": "3450c3fa-25e4-423c-95d0-bf04eca4b1e3",
        "text": "<https:\/\/data-apis.org\/blog\/announcing_the_consortium\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597957631.011100",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1597996252.014200",
        "reply_users": [
            "UJBAJNFLK"
        ],
        "replies": [
            {
                "user": "UJBAJNFLK",
                "ts": "1597996252.014200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "Announcing the Consortium for Python Data API Standards",
                "title_link": "https:\/\/data-apis.org\/blog\/announcing_the_consortium\/",
                "text": "An initiative to develop API standards for n-dimensional arrays and dataframes",
                "fallback": "Announcing the Consortium for Python Data API Standards",
                "ts": 1597651200,
                "from_url": "https:\/\/data-apis.org\/blog\/announcing_the_consortium\/",
                "service_name": "data-apis.org",
                "id": 1,
                "original_url": "https:\/\/data-apis.org\/blog\/announcing_the_consortium\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rZ=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/data-apis.org\/blog\/announcing_the_consortium\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK",
                    "UJ6LDMMN0"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "USH01JEDQ",
        "type": "message",
        "ts": "1597957719.012200",
        "client_msg_id": "54EE8A06-FE73-4538-8874-C4081B49E32A",
        "text": "A basic article, and choir-preaching for this group, but still... it’s Paul Ford and Wired\n\n<https:\/\/www.wired.com\/story\/databases-coding-real-programming-myth\/|https:\/\/www.wired.com\/story\/databases-coding-real-programming-myth\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "854f96b690f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-17\/6370745671793_854f96b690f51d1266ee_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Galtenberg",
            "display_name": "Chris G",
            "team": "T5TCAFTA9",
            "name": "galtenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597957719.012200",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1598043708.038000",
        "reply_users": [
            "UC2A2ARPT",
            "U5STGTB3J"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1597957761.012500"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1598043708.038000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "Wired",
                "title": "‘Real’ Programming Is an Elitist Myth",
                "title_link": "https:\/\/www.wired.com\/story\/databases-coding-real-programming-myth\/",
                "text": "When people build a database to manage reading lists or feed their neighbors, that’s coding—and culture.",
                "fallback": "Wired: ‘Real’ Programming Is an Elitist Myth",
                "image_url": "https:\/\/media.wired.com\/photos\/5f32ea0cc693e7df1016521e\/191:100\/w_1280,c_limit\/28.09%2520Ford_Top%2520Art.jpg?mbid=social_retweet",
                "from_url": "https:\/\/www.wired.com\/story\/databases-coding-real-programming-myth\/",
                "image_width": 478,
                "image_height": 250,
                "image_bytes": 87819,
                "service_icon": "https:\/\/www.wired.com\/verso\/static\/wired\/assets\/favicon.ccc13c90b928e0b02eaafcfb05864c93a0136dd0.ico",
                "id": 1,
                "original_url": "https:\/\/www.wired.com\/story\/databases-coding-real-programming-myth\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IRMv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A basic article, and choir-preaching for this group, but still... it’s Paul Ford and Wired\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.wired.com\/story\/databases-coding-real-programming-myth\/",
                                "text": "https:\/\/www.wired.com\/story\/databases-coding-real-programming-myth\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL",
                    "UA14TGLTC",
                    "UCXR52MU2",
                    "U013ZLJARC7",
                    "UJ6LDMMN0",
                    "U01955JHTHS"
                ],
                "count": 7
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1597957761.012500",
        "client_msg_id": "7e82c60a-0cca-48aa-b4c4-09a37fc34896",
        "text": "I wonder if <@UP6FDQXA7> still visits the Slack...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597957719.012200",
        "parent_user_id": "USH01JEDQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HXD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wonder if "
                            },
                            {
                                "type": "user",
                                "user_id": "UP6FDQXA7"
                            },
                            {
                                "type": "text",
                                "text": " still visits the Slack..."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMWF81HTP",
        "type": "message",
        "ts": "1597975834.013100",
        "client_msg_id": "7165918a-22d4-4a0d-a787-9d45fd858ce6",
        "text": "<@UJBAJNFLK> I'm still getting familiar with it but the work that the p2p community is doing is incredibly imaginative. <https:\/\/n-o-d-e.net\/zine\/|This recently released zine> has a good overview of their efforts.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4022671f3400",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-03\/775814402657_4022671f340032b9eb75_72.jpg",
            "first_name": "yoshiki",
            "real_name": "yoshiki",
            "display_name": "yoshiki",
            "team": "T5TCAFTA9",
            "name": "yoshikischmitz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1597767731.111000",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9ANBH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " I'm still getting familiar with it but the work that the p2p community is doing is incredibly imaginative. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/n-o-d-e.net\/zine\/",
                                "text": "This recently released zine"
                            },
                            {
                                "type": "text",
                                "text": " has a good overview of their efforts."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]