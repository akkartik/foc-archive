[
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1577349917.206000",
        "client_msg_id": "96346882-2C0A-46CF-AABC-600F853C0FDD",
        "text": "<@UE6EFEPTQ> Fully agree — I said it before here somewhere that most if not all computation is just transforming data. If we can figure out easier ways to let non-programmers transform their own data, or better yet let the computer do transformations for them automatically where necessary, I think we will have solved a big part of the future of programming puzzle.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577227635.106800",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KVKLA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": " Fully agree — I said it before here somewhere that most if not all computation is just transforming data. If we can figure out easier ways to let non-programmers transform their own data, or better yet let the computer do transformations for them automatically where necessary, I think we will have solved a big part of the future of programming puzzle."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHZUS56SV",
        "type": "message",
        "ts": "1577368949.206300",
        "client_msg_id": "1e7f2b09-030c-4424-8ca4-0296e8ee5b79",
        "text": "<@U8A5MS6R1> I'm sure you're aware of it but this breakdown of composition that you describe between the OS and programming languages is exactly why Smalltalk says there shouldn't be an operating system :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga164d5ab3ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0a164d5ab3ffe877513fe9c400908eaa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Benoît Fleury",
            "display_name": "Benoît Fleury",
            "team": "T5TCAFTA9",
            "name": "me1796",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577178650.059300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BrP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " I'm sure you're aware of it but this breakdown of composition that you describe between the OS and programming languages is exactly why Smalltalk says there shouldn't be an operating system "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHZUS56SV",
        "type": "message",
        "ts": "1577369308.206500",
        "client_msg_id": "b5c2637d-6188-4052-81fc-7a8158a283c4",
        "text": "Regarding the unix pipe and <@U5STGTB3J>'s question. I see this as very similar to the Lisp cons cell. It is the smallest interface we could think of in order to build text and data processing systems. I think it is succesful because it allows your system to grow quickly (you can easily reuse existing parts to make new parts), while preventing an explosion of special cases (anarchy). I think it ties to the general problem of communication in systems. How to design the protocols between the parts to allow for growth while preventing failures. It is really a balancing act between freedom and control.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga164d5ab3ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0a164d5ab3ffe877513fe9c400908eaa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Benoît Fleury",
            "display_name": "Benoît Fleury",
            "team": "T5TCAFTA9",
            "name": "me1796",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577178650.059300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ywNbX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regarding the unix pipe and "
                            },
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": "'s question. I see this as very similar to the Lisp cons cell. It is the smallest interface we could think of in order to build text and data processing systems. I think it is succesful because it allows your system to grow quickly (you can easily reuse existing parts to make new parts), while preventing an explosion of special cases (anarchy). I think it ties to the general problem of communication in systems. How to design the protocols between the parts to allow for growth while preventing failures. It is really a balancing act between freedom and control."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1577370250.206700",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1577372961.000000"
        },
        "client_msg_id": "9e0f658f-b310-49c0-8513-d680c042a08d",
        "text": "I agree that those are good questions wrt languages, but if the goal to empower users, is it safe to assume the ideal artifact that serves that purpose will take the form of a language?\n\nIf you were to ask a user how they’d like to interact with a computer to accomplish their goals (short of some magic AI genie), would we expect them to tell us they want to write something we’d recognize as code?\n\nFor example, are spreadsheets or HyperCard “languages”?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577254484.117800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NvhI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree that those are good questions wrt languages, but if the goal to empower users, is it safe to assume the ideal artifact that serves that purpose will take the form of a language?\n\nIf you were to ask a user how they’d like to interact with a computer to accomplish their goals (short of some magic AI genie), would we expect them to tell us they want to write something we’d recognize as code?"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "For example, are spreadsheets or HyperCard “languages”?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U8A5MS6R1",
                    "UJ6LDMMN0",
                    "UFLN9JFRT",
                    "UHWC9PXBL"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1577374027.208400",
        "client_msg_id": "BA30196C-6278-4083-BCD4-521CA861D5D6",
        "text": "Great to see that others are building eve inspired languages. I stand in awe of so many here! ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f\/vpZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great to see that others are building eve inspired languages. I stand in awe of so many here! "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1577384959.208800",
        "client_msg_id": "b1db9f82-0869-4d37-bd79-f41e6e388ab6",
        "text": "<@UHZUS56SV> - yes! I wrote about the different perspective brought by Smalltalk in the following (chronologically preceeding, but logically following) post - Systems, not Programs. <https:\/\/shalabh.com\/programmable-systems\/systems-not-programs.html>. I feel we kind of accept many things as natural but they are just emergent patterns from deliberate design choices that became ubiquitous. I wonder if someone has worked on a taxonomy of composition models in computing - that would be interesting to read.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577178650.059300",
        "parent_user_id": "U8A5MS6R1",
        "attachments": [
            {
                "title": " Systems, not Programs  ",
                "title_link": "https:\/\/shalabh.com\/programmable-systems\/systems-not-programs.html",
                "text": "We need programming, but do we need the program?",
                "fallback": " Systems, not Programs  ",
                "from_url": "https:\/\/shalabh.com\/programmable-systems\/systems-not-programs.html",
                "service_name": "shalabh.com",
                "id": 1,
                "original_url": "https:\/\/shalabh.com\/programmable-systems\/systems-not-programs.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JjM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHZUS56SV"
                            },
                            {
                                "type": "text",
                                "text": " - yes! I wrote about the different perspective brought by Smalltalk in the following (chronologically preceeding, but logically following) post - Systems, not Programs. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/shalabh.com\/programmable-systems\/systems-not-programs.html"
                            },
                            {
                                "type": "text",
                                "text": ". I feel we kind of accept many things as natural but they are just emergent patterns from deliberate design choices that became ubiquitous. I wonder if someone has worked on a taxonomy of composition models in computing - that would be interesting to read."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1577385432.209100",
        "client_msg_id": "d29a2492-1183-4395-b7fd-21dba8c74769",
        "text": "&gt;  the ideal artifact that serves that purpose will take the form of a language?\nExcellent question! The current programming world view takes as its base assumption a workflow where you 'write the program as a ~text language' and then 'submit it' to the computer to run. Can this workflow itself be twisted around to something else, rather than just the language piece of this jigsaw puzzle replaced with a different language piece? Tomas Petricek's write-up talks about this also I think: <http:\/\/tomasp.net\/blog\/2018\/programming-interaction\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577254484.117800",
        "parent_user_id": "UEQ6M68H0",
        "attachments": [
            {
                "title": "Programming as interaction: A new perspective for programming language research",
                "title_link": "http:\/\/tomasp.net\/blog\/2018\/programming-interaction\/",
                "text": "In programming research, we say a lot about programs and languages, but very little about the actual process of programming. One simple trick that will make programming language research significantly more interesting is to think about programs not as expressions, but as a result of a sequence of interactions that create it. This includes usual things such as writing code and refactoring, but if we also include, say, running a part of the program, we become capable of saying many more interesting things and building new powerful programming tools.",
                "fallback": "Programming as interaction: A new perspective for programming language research",
                "thumb_url": "http:\/\/tomasp.net\/blog\/2018\/programming-interaction\/kent-sq.png",
                "from_url": "http:\/\/tomasp.net\/blog\/2018\/programming-interaction\/",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "http:\/\/tomasp.net\/img\/favicon-big.png",
                "service_name": "tomasp.net",
                "id": 1,
                "original_url": "http:\/\/tomasp.net\/blog\/2018\/programming-interaction\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Vv",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " the ideal artifact that serves that purpose will take the form of a language?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Excellent question! The current programming world view takes as its base assumption a workflow where you 'write the program as a ~text language' and then 'submit it' to the computer to run. Can this workflow itself be twisted around to something else, rather than just the language piece of this jigsaw puzzle replaced with a different language piece? Tomas Petricek's write-up talks about this also I think: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/tomasp.net\/blog\/2018\/programming-interaction\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275",
                    "UFLN9JFRT",
                    "UBSMEUXAA"
                ],
                "count": 3
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1577386103.209400",
        "client_msg_id": "7b1623c6-4cfb-401a-a8b5-b4ef4147c2cd",
        "text": "I'm also interested in reading it! But I can't promise any high quality review feedback.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577307438.157000",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0Su",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm also interested in reading it! But I can't promise any high quality review feedback."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_check_mark",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1577412417.209800",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1577498830.000000"
        },
        "client_msg_id": "5245b9cb-5156-40d9-9b28-b3fe5330bb32",
        "text": "<@ULM3U6275> Unquestionably Excel is a programming language with a visual shell. The language has many innovative properties, such as a closed, protected arithmetic, where undefined quantities ripple through the system without crashing (unlike programs in almost every other language), etc. The environment has an automatic variable naming system using A5, B3, etc., which has the further property that when you insert a new column, all of the labels are automatically fixed up. This is the semantic implication of a column insert on the underlying code. The end user is not particularly aware of the underlying language until they write a formula or create a VBA function which exposes the naked underbelly of the language that drives the system. Since a range of cells has a visual representation, it is possible to create simple sheets with some SUM functions without typing a single character. So one could say they have perfected the visual aids because they have minimized textual interactions.\n\nThe supposed dichotomy between text and graphical forms is an illusion that constantly comes up in this discussion group. If you look back at the history of mathematics, and most particularly to the time when Newton and Leibniz were inventing calculus, you will see that Newton, in order to prove that his calculus worked, had to write all these letters and demonstrate geometrical proofs of his work, because that's what people could understand. Subsequently, some famous mathematician proved that all of geometry can be represented in algebra.  I don't care which node and wire product you show me, i can remap the geometry of that product into algebra (which is textual) and textual transformations of that algebra. In fact, since a computer is a one-dimensional stream of opcodes, if your software runs on a computer it had to be mapped at some point to the symbolic algebra of the Intel or ARM instruction set.\n I have seen multi-million dollar budget projects flounder in the FoC space caused in part by the team focusing on the graphical interface before they defined their backend algebra. When you click and drag an object you are performing an algebraic operation that can be represented in text. If you haven't figured out the grammar, verbs, nouns, and semantics of your back-end language first, you will thrash around, because the limits of your underlying algebra will inevitably push back up into the higher layers.\n\nIf you want to build a sturdy house, you gotta build from the bottom up; laying the foundation first. Putting in the windows before the concrete is poured is frankly crazy. That being said, one has to design from both ends, and have a vision of the final product. This is what makes creating a new language so tricky, especially when you want to have a graphical front end.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577254484.117800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MAlw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "ULM3U6275"
                            },
                            {
                                "type": "text",
                                "text": " Unquestionably Excel is a programming language with a visual shell. The language has many innovative properties, such as a closed, protected arithmetic, where undefined quantities ripple through the system without crashing (unlike programs in almost every other language), etc. The environment has an automatic variable naming system using A5, B3, etc., which has the further property that when you insert a new column, all of the labels are automatically fixed up. This is the semantic implication of a column insert on the underlying code. The end user is not particularly aware of the underlying language until they write a formula or create a VBA function which exposes the naked underbelly of the language that drives the system. Since a range of cells has a visual representation, it is possible to create simple sheets with some SUM functions without typing a single character. So one could say they have perfected the visual aids because they have minimized textual interactions.\n\nThe supposed dichotomy between text and graphical forms is an illusion that constantly comes up in this discussion group. If you look back at the history of mathematics, and most particularly to the time when Newton and Leibniz were inventing calculus, you will see that Newton, in order to prove that his calculus worked, had to write all these letters and demonstrate geometrical proofs of his work, because that's what people could understand. Subsequently, some famous mathematician proved that all of geometry can be represented in algebra.  I don't care which node and wire product you show me, i can remap the geometry of that product into algebra (which is textual) and textual transformations of that algebra. In fact, since a computer is a one-dimensional stream of opcodes, if your software runs on a computer it had to be mapped at some point to the symbolic algebra of the Intel or ARM instruction set.\n I have seen multi-million dollar budget projects flounder in the FoC space caused in part by the team focusing on the graphical interface before they defined their backend algebra. When you click and drag an object you are performing an algebraic operation that can be represented in text. If you haven't figured out the grammar, verbs, nouns, and semantics of your back-end language first, you will thrash around, because the limits of your underlying algebra will inevitably push back up into the higher layers.\n\nIf you want to build a sturdy house, you gotta build from the bottom up; laying the foundation first. Putting in the windows before the concrete is poured is frankly crazy. That being said, one has to design from both ends, and have a vision of the final product. This is what makes creating a new language so tricky, especially when you want to have a graphical front end."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFLN9JFRT",
                    "UMVFWPZ36"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1577417254.214000",
        "client_msg_id": "0CBDA06B-6E8A-4F33-8688-229A30CAF44C",
        "text": "Agreed that you have to build the foundations first of the language but with the end goal in site. I think one of the big things I see in designing languages is that a lot of research is experimentation without a known end goal. How many projects here have a clear end goal?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577254484.117800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1\/+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Agreed that you have to build the foundations first of the language but with the end goal in site. I think one of the big things I see in designing languages is that a lot of research is experimentation without a known end goal. How many projects here have a clear end goal?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1577417645.215800",
        "client_msg_id": "76ECFA24-1125-4262-A0F9-DE29903E28C7",
        "text": "Fantastic write up. I guess containers are also another composition model. With http as the bridge?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577178650.059300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eCP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Fantastic write up. I guess containers are also another composition model. With http as the bridge?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1577418984.216900",
        "client_msg_id": "D3B1D593-9530-4383-9478-6868F77328C0",
        "text": "I’ll read it too ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577307438.157000",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZTtv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ll read it too "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_check_mark",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1577430251.218100",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1577430349.000000"
        },
        "client_msg_id": "36528172-3ea6-40c3-89d6-9d1876ac335f",
        "text": "Yes I see containers as a composition model. In fact beyond a certain scale, the common model is you have some stateful processes as peers and they send messages to each other. Some focus on the naming aspect (e.g. services) while others focus on the reproducibility aspect.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577178650.059300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EzTp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes I see containers as a composition model. In fact beyond a certain scale, the common model is you have some stateful processes as peers and they send messages to each other. Some focus on the naming aspect (e.g. services) while others focus on the reproducibility aspect."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFLN9JFRT"
                ],
                "count": 1
            }
        ]
    }
]