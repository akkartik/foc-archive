[
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1592206702.310100",
        "client_msg_id": "876c6a8c-5f70-49f8-aa79-76c15a4856aa",
        "text": "I'm looking for papers \/ projects \/ programming languages in which the presentation \/ editing representation is text and the storage representation is decoupled from presentation \/ editing. In typical programming languages these representations are the same (code is edited as text and stored 1:1). In structured \/ projectional editing environments the editing representation is often non-textual. Even though these environments separate presentation from storage, it seems like a by-product while the focus lies on the editing experience. I'd like to see studies of the implications of separating presentation and storage representations for programming languages. I can imagine that this could help backwards-compatible language evolution, end a lot of syntax bike-shedding discussions and probably even let different programming languages share common concepts. I'm not the first one to think about this for sure, but I didn't manage to find useful resources.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592206702.310100",
        "reply_count": 11,
        "reply_users_count": 5,
        "latest_reply": "1592430326.367100",
        "reply_users": [
            "UAL7940NM",
            "UJN1TAYEQ",
            "UFPPABQ7P",
            "UPMFG2571",
            "UEDDR6L5Q"
        ],
        "replies": [
            {
                "user": "UAL7940NM",
                "ts": "1592206794.310200"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1592221693.311000"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1592237524.311700"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1592240266.311900"
            },
            {
                "user": "UAL7940NM",
                "ts": "1592248589.314700"
            },
            {
                "user": "UPMFG2571",
                "ts": "1592311767.334200"
            },
            {
                "user": "UEDDR6L5Q",
                "ts": "1592329640.341000"
            },
            {
                "user": "UEDDR6L5Q",
                "ts": "1592329685.341300"
            },
            {
                "user": "UAL7940NM",
                "ts": "1592379799.360400"
            },
            {
                "user": "UAL7940NM",
                "ts": "1592380171.361200"
            },
            {
                "user": "UEDDR6L5Q",
                "ts": "1592430326.367100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VqPRa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm looking for papers \/ projects \/ programming languages in which the presentation \/ editing representation is text and the storage representation is decoupled from presentation \/ editing. In typical programming languages these representations are the same (code is edited as text and stored 1:1). In structured \/ projectional editing environments the editing representation is often non-textual. Even though these environments separate presentation from storage, it seems like a by-product while the focus lies on the editing experience. I'd like to see studies of the implications of separating presentation and storage representations for programming languages. I can imagine that this could help backwards-compatible language evolution, end a lot of syntax bike-shedding discussions and probably even let different programming languages share common concepts. I'm not the first one to think about this for sure, but I didn't manage to find useful resources."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1592206794.310200",
        "client_msg_id": "63bbffdb-b495-446e-8133-ff2282335840",
        "text": "Do you know related research or have some thoughts on this? Please post below and thanks in advance :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592206702.310100",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ys2hE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do you know related research or have some thoughts on this? Please post below and thanks in advance "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1592213080.310400",
        "client_msg_id": "2ab107c5-3443-4ee7-bd6c-2ee9d0dfbe0b",
        "text": "Timely!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592169728.296900",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bBa+j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Timely!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1592221693.311000",
        "client_msg_id": "4514a5d4-70c9-47f9-90ba-9da4d78ae731",
        "text": "You might look at the Intentional Programming project. <https:\/\/en.wikipedia.org\/wiki\/Intentional_programming>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592206702.310100",
        "parent_user_id": "UAL7940NM",
        "attachments": [
            {
                "title": "Intentional programming",
                "title_link": "https:\/\/en.wikipedia.org\/wiki\/Intentional_programming",
                "from_url": "https:\/\/en.wikipedia.org\/wiki\/Intentional_programming",
                "author_name": "Wikipedia",
                "author_link": "https:\/\/en.wikipedia.org\/",
                "text": "In computer programming, Intentional Programming is a programming paradigm developed by Charles Simonyi that encodes in software source code the precise intention which programmers (or users) have in mind when conceiving their work. By using the appropriate level of abstraction at which the programmer is thinking, creating and maintaining computer programs become easier. By separating the concerns for intentions and how they are being operated upon, the software becomes more modular and allows for more reusable software code.\nIntentional Programming was developed by former Microsoft chief architect Charles Simonyi, who led a team in Microsoft Research, which developed the paradigm and built an integrated development environment (IDE) called IP (for Intentional Programming) that demonstrated the paradigm. Microsoft decided not to productize the Intentional Programming paradigm, as in the early 2000s Microsoft was rolling out C# and .NET to counter Java adoption. Charles Simonyi decided, with approval of Microsoft, to take his idea out from Microsoft and commercialize it himself. He founded the company Intentional Software to pursue this. Microsoft licensed the Intentional Programming patents Simonyi had acquired while at Microsoft, but no source code, to Intentional Software.\nAn overview of Intentional Programming as it was developed at Microsoft Research is given in Chapter 11 of the book Generative Programming: Methods, Tools, and Applications.",
                "fallback": "wikipedia: Intentional programming",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/wikipedia.png",
                "id": 1,
                "original_url": "https:\/\/en.wikipedia.org\/wiki\/Intentional_programming"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z1b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You might look at the Intentional Programming project. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Intentional_programming"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1592237524.311700",
        "client_msg_id": "6ff05429-e0c3-4a77-ad59-be957ee36e52",
        "text": "As for implications...\nIf the storage representation is quite different from the text presentation (eg, XML vs C-like syntax), then you'll be using a tree as an intermediate representation. Even though \"the presentation \/ editing representation is text\", there is a challenge if you want to provide a convention text editing interface, because maybe not all texts can be backward mapped into your tree representation (eg, what about mismatched parentheses)? So what happens? If there is a syntax error, you can't save your file until the syntax error is fixed? Or you provide a \"structured editing\" interface that doesn't allow you to make syntax errors? What I've read about structure editors is that there's a learning curve, and you run into the problem that a lot of common idioms that programmers learn for editing code using a conventional text editor don't work in a structure editor, creating frustration.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592206702.310100",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nKp0g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As for implications...\nIf the storage representation is quite different from the text presentation (eg, XML vs C-like syntax), then you'll be using a tree as an intermediate representation. Even though \"the presentation \/ editing representation is text\", there is a challenge if you want to provide a convention text editing interface, because maybe not all texts can be backward mapped into your tree representation (eg, what about mismatched parentheses)? So what happens? If there is a syntax error, you can't save your file until the syntax error is fixed? Or you provide a \"structured editing\" interface that doesn't allow you to make syntax errors? What I've read about structure editors is that there's a learning curve, and you run into the problem that a lot of common idioms that programmers learn for editing code using a conventional text editor don't work in a structure editor, creating frustration."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1592240266.311900",
        "edited": {
            "user": "UFPPABQ7P",
            "ts": "1592240287.000000"
        },
        "client_msg_id": "f0c5a7e2-d7db-4104-956e-ab05058e137a",
        "text": "<@UAL7940NM> I hope you're doing well!\nAt Storyscript we have a projectional editor which doesn't show syntax errors per se, it only says when code is correct and \"runnable\". We couple that with \"grammar suggestions\" like in MS Word \/ Grammarly to help show you how to make corrections. In this way, any syntax that isn't \"valid\" is simply stored as stylable text. It took a lot of trial-and-error to figure out how strict our exportable\/saveable representation would be to an AST, but we struck a pretty good balance IMO (leaning more towards flexibility \/ error tolerant than what we started with).\nA part of our approach was made more complex, because we threw the whole \"compilation pipeline concept\" out the window, and went with managing our authoring tool using an ECS data model (like in game development)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592206702.310100",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f=gO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAL7940NM"
                            },
                            {
                                "type": "text",
                                "text": " I hope you're doing well!\nAt Storyscript we have a projectional editor which doesn't show syntax errors per se, it only says when code is correct and \"runnable\". We couple that with \"grammar suggestions\" like in MS Word \/ Grammarly to help show you how to make corrections. In this way, any syntax that isn't \"valid\" is simply stored as stylable text. It took a lot of trial-and-error to figure out how strict our exportable\/saveable representation would be to an AST, but we struck a pretty good balance IMO (leaning more towards flexibility \/ error tolerant than what we started with).\nA part of our approach was made more complex, because we threw the whole \"compilation pipeline concept\" out the window, and went with managing our authoring tool using an ECS data model (like in game development)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1592242443.312300",
        "client_msg_id": "8fe2e0e0-3361-4876-92e2-c132508bfb47",
        "text": "Why do you guys think COM interop in Windows has fallen out of vogue? At the surface, it seems like an awesome way to get apps working together, but I haven't seen it used in a very long time.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592242443.312300",
        "reply_count": 2,
        "reply_users_count": 1,
        "latest_reply": "1592341222.346600",
        "reply_users": [
            "UD6EXQVM0"
        ],
        "replies": [
            {
                "user": "UD6EXQVM0",
                "ts": "1592340671.346000"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1592341222.346600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rj7w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why do you guys think COM interop in Windows has fallen out of vogue? At the surface, it seems like an awesome way to get apps working together, but I haven't seen it used in a very long time."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1592244482.313000",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1592244601.000000"
        },
        "client_msg_id": "c590daa8-66ca-44f2-841e-2e3b58f123d0",
        "text": "TIL Deutsch Limit: <https:\/\/en.wikipedia.org\/wiki\/Deutsch_limit>\nEtymology from this quip: “Well, this is all fine and well, but the problem with visual programming languages is that you can’t have more than 50 visual primitives on the screen at the same time. How are you going to write an operating system?”",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592244482.313000",
        "reply_count": 8,
        "reply_users_count": 4,
        "latest_reply": "1592359006.353800",
        "reply_users": [
            "UC2A2ARPT",
            "U6FKVSVCK",
            "UDKTZSD6H",
            "UHWC9PXBL"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1592244650.313300"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1592246120.314100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1592249237.314900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1592249331.315700"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1592249637.316000"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1592358962.352600"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1592358987.353100"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1592359006.353800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MfCBw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "TIL Deutsch Limit: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Deutsch_limit"
                            },
                            {
                                "type": "text",
                                "text": "\nEtymology from this quip: “Well, this is all fine and well, but the problem with visual programming languages is that you can’t have more than 50 visual primitives on the screen at the same time. How are you going to write an operating system?”"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "upside_down_face",
                "users": [
                    "UC2A2ARPT",
                    "UEBG0NPDK",
                    "U6FKVSVCK",
                    "UUB7RA7PF"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1592244650.313300",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1592244655.000000"
        },
        "client_msg_id": "e37253f4-7a85-49ae-9383-7d169dba277b",
        "text": "That and other _totally bogus_ objections collected here: <https:\/\/github.com\/ivanreese\/visual-programming-codex\/blob\/master\/criticisms.md>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592244482.313000",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CWQLT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That and other "
                            },
                            {
                                "type": "text",
                                "text": "totally bogus",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " objections collected here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/ivanreese\/visual-programming-codex\/blob\/master\/criticisms.md"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UDKTZSD6H",
                    "UJ6LDMMN0",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U6FKVSVCK",
        "type": "message",
        "ts": "1592246120.314100",
        "client_msg_id": "8d77b16e-8867-4498-8d45-276ada744363",
        "text": "I find it at least a little amusing that the text editor I have open is currently displaying just over 60 lines of code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cad501b70b26",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-07\/786673147216_cad501b70b26e7666ed0_72.png",
            "first_name": "Tim",
            "real_name": "Tim Babb",
            "display_name": "tbabb",
            "team": "T5TCAFTA9",
            "name": "tbabb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592244482.313000",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l1c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I find it at least a little amusing that the text editor I have open is currently displaying just over 60 lines of code."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6KQ2S410",
        "type": "message",
        "ts": "1592246317.314300",
        "client_msg_id": "e24ec01e-9f6b-47be-811b-76bb651183be",
        "text": "<@UEQ6M68H0> there are unwritten requirements for getting papers published, handed down verbally from advisor to student. It's almost impossible if you haven't been on the inside. Nevertheless, once you learn the code, getting published may be more likely to have a long-term impact than having your product become popular.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e8f4c2151d2b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-09\/225308926294_e8f4c2151d2b70ebfae3_72.jpg",
            "first_name": "Jonathan",
            "real_name": "Jonathan Edwards",
            "display_name": "jonathoda",
            "team": "T5TCAFTA9",
            "name": "jonathoda",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592007162.213400",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=vYc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " there are unwritten requirements for getting papers published, handed down verbally from advisor to student. It's almost impossible if you haven't been on the inside. Nevertheless, once you learn the code, getting published may be more likely to have a long-term impact than having your product become popular."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1592247347.314500",
        "client_msg_id": "a3e82aca-5034-4381-86af-ce0f16e1a29c",
        "text": "<@U6KQ2S410> how true.  Getting published is almost as mysterious as getting a grant. I tried a few times to get a grant but was unsuccessful. One time i bid on a USAID project on Tanzania, where i was going to ship container loads of paper and HP LaserJets with satellite internet to a small set of towns outside the capital, so they could print textbooks on demand that were created by a small staff in the capital, with bilingual versions for the regional languages. With a net price of about $3 per 100 page book, it was the most cost effective textbook delivery system imaginable, and the state dept liked the project and we were in the final contention, but the big textbook company that was planning to sell the typical books for $80 a book got them to delay the offering and kills us because we couldn't keep hanging onto a project that never starts at a predictable time. You can't hold a staff without already having projects. Knowing how to navigate the grant system is a truly dark art, and the people who know how to wrangle grants on a consistent basis earn a lot of money and have ultimate job security. One of the groups i bumped into called their Washington office \"proposal island\", because it becomes a continuous process.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592007162.213400",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TMRrE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": " how true.  Getting published is almost as mysterious as getting a grant. I tried a few times to get a grant but was unsuccessful. One time i bid on a USAID project on Tanzania, where i was going to ship container loads of paper and HP LaserJets with satellite internet to a small set of towns outside the capital, so they could print textbooks on demand that were created by a small staff in the capital, with bilingual versions for the regional languages. With a net price of about $3 per 100 page book, it was the most cost effective textbook delivery system imaginable, and the state dept liked the project and we were in the final contention, but the big textbook company that was planning to sell the typical books for $80 a book got them to delay the offering and kills us because we couldn't keep hanging onto a project that never starts at a predictable time. You can't hold a staff without already having projects. Knowing how to navigate the grant system is a truly dark art, and the people who know how to wrangle grants on a consistent basis earn a lot of money and have ultimate job security. One of the groups i bumped into called their Washington office \"proposal island\", because it becomes a continuous process."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1592248589.314700",
        "client_msg_id": "b2e176d0-f792-4706-8bea-8cc8eb57daa8",
        "text": "<@UJN1TAYEQ> Thanks for bringing Intentional Programming up. I heard of it but never really took a deeper look. It's time for that I guess. Regarding mapping into the storage representation: I would be ok with not allowing to save code that contains syntax errors. It shouldn't be too hard to bring code into a form that parses, and on the other hand this forces you to deal with these kinds of errors early. Committed code and input to compilers would be guaranteed to be well formed to some extend, which I think is a good thing.\nStructured editing doesn't work IMO when requiring each edit to map from one valid AST to another valid one. There's just to many operations needed for this to be practical. Text editing allows composing a few simple edit operations into larger transformations, kinda unix-philosophy style.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592206702.310100",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J=5U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for bringing Intentional Programming up. I heard of it but never really took a deeper look. It's time for that I guess. Regarding mapping into the storage representation: I would be ok with not allowing to save code that contains syntax errors. It shouldn't be too hard to bring code into a form that parses, and on the other hand this forces you to deal with these kinds of errors early. Committed code and input to compilers would be guaranteed to be well formed to some extend, which I think is a good thing.\nStructured editing doesn't work IMO when requiring each edit to map from one valid AST to another valid one. There's just to many operations needed for this to be practical. Text editing allows composing a few simple edit operations into larger transformations, kinda unix-philosophy style."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Also, my background is in 3d animation. Don't come at me with that \"50 visual primitives\" nonsense, Fred.",
        "files": [
            {
                "id": "F015FGFSWLB",
                "mode": "tombstone"
            },
            {
                "id": "F015MFMDWKE",
                "mode": "tombstone"
            },
            {
                "id": "F0150HX5ARM",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jE3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, my background is in 3d animation. Don't come at me with that \"50 visual primitives\" nonsense, Fred."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1592249237.314900",
        "thread_ts": "1592244482.313000",
        "parent_user_id": "UDKTZSD6H",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1592249331.315700",
        "client_msg_id": "43870f24-2acd-4c66-8ce3-401d61e30b5b",
        "text": "(No shade directed at you, <@UDKTZSD6H> — I just _love_ dumping mud on the Deutsch Limit)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592244482.313000",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1Ef",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(No shade directed at you, "
                            },
                            {
                                "type": "user",
                                "user_id": "UDKTZSD6H"
                            },
                            {
                                "type": "text",
                                "text": " — I just "
                            },
                            {
                                "type": "text",
                                "text": "love",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " dumping mud on the Deutsch Limit)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1592249637.316000",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1592249738.000000"
        },
        "client_msg_id": "8703da9a-1898-4e50-bb98-5d0ba5a35424",
        "text": "Oh nope, I am pretty programming is barely just symbolic manipulation guy. I just found it amusing that quasi-science (like most of UX anyway) has ideas like that. Also, sweet move in compiling the criticisms in a repo.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592244482.313000",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B=pK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh nope, I am pretty programming is barely just symbolic manipulation guy. I just found it amusing that quasi-science (like most of UX anyway) has ideas like that. Also, sweet move in compiling the criticisms in a repo."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1592250420.316700",
        "client_msg_id": "f1d408c8-7348-41ac-b3f7-fe644d6ca2c0",
        "text": "No Code on Hacker News <https:\/\/news.ycombinator.com\/item?id=23520185>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592250420.316700",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1592288232.326300",
        "reply_users": [
            "ULM3U6275",
            "UDQKHNP51"
        ],
        "replies": [
            {
                "user": "ULM3U6275",
                "ts": "1592250636.316800"
            },
            {
                "user": "UDQKHNP51",
                "ts": "1592288232.326300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kDB\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No Code on Hacker News "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=23520185"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1592250636.316800",
        "client_msg_id": "aa1ab3f2-9403-48a2-a3d3-09bbe24239e2",
        "text": "I enjoyed this comment: “Little story: I did a lot of work with Army grunts trying to avoid getting blown up. The main tool was excel. Software shops kept delivering junk that nobody used. The acquisitions guys loved a slick demo and that’s pretty much all it did. They’d come in and install a new server cluster, which means a bigger server room, which means more cooling, which means a bigger generator, which means more diesel trucks, which means more convoys on the road, which means more getting blown up. New grunts would tool around on it for a month and then get a novel task they had to use excel for, and never go back. The acq guys had such disdain for the ‘users’ that they couldn’t imagine that they actually knew WTF they were doing. The slick demo went on to win the DCGS contract, and now they’re stuck with ‘easy’ where they need flexible, customizable, fast, simple (all the way down the stack).”",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592250420.316700",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jnn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I enjoyed this comment: “Little story: I did a lot of work with Army grunts trying to avoid getting blown up. The main tool was excel. Software shops kept delivering junk that nobody used. The acquisitions guys loved a slick demo and that’s pretty much all it did. They’d come in and install a new server cluster, which means a bigger server room, which means more cooling, which means a bigger generator, which means more diesel trucks, which means more convoys on the road, which means more getting blown up. New grunts would tool around on it for a month and then get a novel task they had to use excel for, and never go back. The acq guys had such disdain for the ‘users’ that they couldn’t imagine that they actually knew WTF they were doing. The slick demo went on to win the DCGS contract, and now they’re stuck with ‘easy’ where they need flexible, customizable, fast, simple (all the way down the stack).”"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEBG0NPDK",
                    "UFLN9JFRT",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1592252831.319600",
        "client_msg_id": "53c465d1-93d4-436c-bdf3-1d53bd9ae4cc",
        "text": "Basically all documentation tools I’m aware of are aimed at communicating things others. Is anyone aware of tools that are instead focused on personal documentation? Tools that are tied into the source\/source control in some way, but that are for personal use and not shared with others? Obviously people can make their own little conventions and things in stuff like org mode. But I’m curious if anyone is aware of purpose built tools for this.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592252831.319600",
        "reply_count": 14,
        "reply_users_count": 9,
        "latest_reply": "1592475025.371200",
        "reply_users": [
            "U010SQSJGLS",
            "UE1JQM9HQ",
            "UETFVV24Q",
            "UK3LH8CF5",
            "UDQKHNP51",
            "UCUSW7WVD",
            "UJBAJNFLK",
            "UMWF81HTP",
            "UE0ETTCG7"
        ],
        "replies": [
            {
                "user": "U010SQSJGLS",
                "ts": "1592253829.319900"
            },
            {
                "user": "U010SQSJGLS",
                "ts": "1592253842.320100"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1592257223.320500"
            },
            {
                "user": "UETFVV24Q",
                "ts": "1592259870.320800"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1592266851.321100"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1592266879.321300"
            },
            {
                "user": "UDQKHNP51",
                "ts": "1592283687.323400"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1592285060.323600"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1592294237.329700"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1592294417.330100"
            },
            {
                "user": "UMWF81HTP",
                "ts": "1592306851.333100"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1592430424.367400"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1592430472.367600"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1592475025.371200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kf2U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Basically all documentation tools I’m aware of are aimed at communicating things others. Is anyone aware of tools that are instead focused on personal documentation? Tools that are tied into the source\/source control in some way, but that are for personal use and not shared with others? Obviously people can make their own little conventions and things in stuff like org mode. But I’m curious if anyone is aware of purpose built tools for this."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U010SQSJGLS",
        "type": "message",
        "ts": "1592253829.319900",
        "client_msg_id": "e83c2d8c-20d0-4224-9be4-8a001b527462",
        "text": "I guess my experience is that communicating with my future self is a lot like communicating with other people.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge900b2beeb5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e900b2beeb5a6877d191b8d15623671b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Michael Coblenz",
            "display_name": "Michael Coblenz",
            "team": "T5TCAFTA9",
            "name": "mcoblenz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592252831.319600",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rUKS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess my experience is that communicating with my future self is a lot like communicating with other people."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UDQKHNP51",
                    "UMWF81HTP",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U010SQSJGLS",
        "type": "message",
        "ts": "1592253842.320100",
        "edited": {
            "user": "U010SQSJGLS",
            "ts": "1592253852.000000"
        },
        "client_msg_id": "cc07f644-74de-47b8-99c3-99e6aee6db92",
        "text": "I’ve pulled up notes I wrote to myself long ago and thought “I have no idea what I was talking about…“.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge900b2beeb5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e900b2beeb5a6877d191b8d15623671b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Michael Coblenz",
            "display_name": "Michael Coblenz",
            "team": "T5TCAFTA9",
            "name": "mcoblenz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592252831.319600",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gXcAS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve pulled up notes I wrote to myself long ago and thought “I have no idea what I was talking about…“."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1592257223.320500",
        "edited": {
            "user": "UE1JQM9HQ",
            "ts": "1592257240.000000"
        },
        "client_msg_id": "e17c92c7-d658-445c-8198-e86300c828ef",
        "text": "Interesting question, <@UK3LH8CF5>. Could you detail what type of documentation do you have in mind? Is it documentation of code, or something else?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592252831.319600",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GVPl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting question, "
                            },
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": ". Could you detail what type of documentation do you have in mind? Is it documentation of code, or something else?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UETFVV24Q",
        "type": "message",
        "ts": "1592259870.320800",
        "client_msg_id": "98b89e42-6201-4bb6-8a8b-3c4912bc0143",
        "text": "<https:\/\/roamresearch.com\/> is the hip startup in this area",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3e6a851923d2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-20\/1067569014342_3e6a851923d262ea9e74_72.png",
            "first_name": "",
            "real_name": "Andy F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andy.fischer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592252831.319600",
        "parent_user_id": "UK3LH8CF5",
        "attachments": [
            {
                "service_name": "Roam Research",
                "title": "Roam Research – A note taking tool for networked thought.",
                "title_link": "https:\/\/roamresearch.com\/",
                "text": "As easy to use as a word document or bulleted list, and as powerful for finding, collecting, and connecting related ideas as a graph database. Collaborate with others in real time, or store all your data locally.",
                "fallback": "Roam Research: Roam Research – A note taking tool for networked thought.",
                "image_url": "https:\/\/roamresearch.com\/assets\/astro.png",
                "from_url": "https:\/\/roamresearch.com\/",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 32439,
                "service_icon": "https:\/\/roamresearch.com\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/roamresearch.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dT7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/roamresearch.com\/"
                            },
                            {
                                "type": "text",
                                "text": " is the hip startup in this area"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE1JQM9HQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1592266851.321100",
        "client_msg_id": "63ab8bdd-f9ae-4640-89ae-d0c46fa8b767",
        "text": "<@UE1JQM9HQ> There are all sorts of personal notes I'd love to leave in code bases that either 1) I don't want anyone to read because the are opinions 2) aren't fully formed yet so shouldn't be shared widely. \n\nMore often than not it would be documentation of context and ideas than what the code itself does. Or reminders to myself why I can't do certain things I want to do.\n\nBut I think where these notes would be particularly useful is when trying to learn a codebase and a system. How do all these things hook together? What things have I discovered so far and what open questions do I have? What pitfalls have I run into? \n\nIn clojure I would also leave some \"Rich comments\" of code that I can run in the repl but isn't cleaned up for others. \n\nIf I could make these personal notes I would write more documentation. Because now documentation doesn't have to be clean all at once or something that will pass code review. I can continue to refine overtime and promote.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592252831.319600",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wk\/m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            },
                            {
                                "type": "text",
                                "text": " There are all sorts of personal notes I'd love to leave in code bases that either 1) I don't want anyone to read because the are opinions 2) aren't fully formed yet so shouldn't be shared widely. \n\nMore often than not it would be documentation of context and ideas than what the code itself does. Or reminders to myself why I can't do certain things I want to do.\n\nBut I think where these notes would be particularly useful is when trying to learn a codebase and a system. How do all these things hook together? What things have I discovered so far and what open questions do I have? What pitfalls have I run into? \n\nIn clojure I would also leave some \"Rich comments\" of code that I can run in the repl but isn't cleaned up for others. \n\nIf I could make these personal notes I would write more documentation. Because now documentation doesn't have to be clean all at once or something that will pass code review. I can continue to refine overtime and promote."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UMWF81HTP",
                    "UHWC9PXBL"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "UE1JQM9HQ",
                    "UMWF81HTP"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1592266879.321300",
        "client_msg_id": "81c8099d-a91a-45a6-b113-f8572ce08bcb",
        "text": "<@UETFVV24Q> I like roam, but as far as I know it has no direct connection to source\/source control.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592252831.319600",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iuJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UETFVV24Q"
                            },
                            {
                                "type": "text",
                                "text": " I like roam, but as far as I know it has no direct connection to source\/source control."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1592280667.322100",
        "client_msg_id": "8bde8df1-bb03-4949-92c5-e3f05156a2e5",
        "text": "<@UK500AGQ4> - Not specifically, but what I am seeing is that many many things in software are all just variations of recording and replaying actions: Functions, code commits (GIT), SVG, lisp macros (they're just functions of code), app macros, UI forms, audio\/video files, build pipelines, automated tests, ... In theory we could replace all of it with plain old function composition. The same could be said of data (aka \"homoiconicity\"). Even the idea of a \"programming language\" \/ compiler is just a function from code to code, and that boundary need not be so hard or all that separate from the thing being built from it (aka \"infrastructure as code\", i.e. another examine of reifying what something is and how it's made as code aka actions)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591889749.164700",
        "parent_user_id": "UK500AGQ4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PaN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UK500AGQ4"
                            },
                            {
                                "type": "text",
                                "text": " - Not specifically, but what I am seeing is that many many things in software are all just variations of recording and replaying actions: Functions, code commits (GIT), SVG, lisp macros (they're just functions of code), app macros, UI forms, audio\/video files, build pipelines, automated tests, ... In theory we could replace all of it with plain old function composition. The same could be said of data (aka \"homoiconicity\"). Even the idea of a \"programming language\" \/ compiler is just a function from code to code, and that boundary need not be so hard or all that separate from the thing being built from it (aka \"infrastructure as code\", i.e. another examine of reifying what something is and how it's made as code aka actions)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1592283086.322800",
        "client_msg_id": "206c4fbf-01c0-456e-af0c-4515984a56da",
        "text": "This was brilliant! Thanks for sharing!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591975277.202600",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=rh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This was brilliant! Thanks for sharing!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1592283551.323100",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1592283559.000000"
        },
        "client_msg_id": "c4692e9c-ef1e-4c8d-b3af-0ad70b8e5d9a",
        "text": "I think this can apply not just to UI design, but also API design: identify the forces between your and a client's infrastructure (or between different components of your own stuff), and boil it down to the simplest API (endpoints or functions, etc.) to facilitate those (real-world) forces \/ needs. And reevaluate for fit-ness.\n\nThe main difference between UI and API is mechanism; it's still the interaction boundary, and should be the thing you get right first for the right reasons governed by the outer context; and then everything else is just the stuff that makes that interface actually work.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591975277.202600",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rdbI1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think this can apply not just to UI design, but also API design: identify the forces between your and a client's infrastructure (or between different components of your own stuff), and boil it down to the simplest API (endpoints or functions, etc.) to facilitate those (real-world) forces \/ needs. And reevaluate for fit-ness.\n\nThe main difference between UI and API is mechanism; it's still the interaction boundary, and should be the thing you get right first for the right reasons governed by the outer context; and then everything else is just the stuff that makes that interface actually work."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQKHNP51",
        "type": "message",
        "ts": "1592283687.323400",
        "client_msg_id": "4132edce-57e1-422b-9ab2-174992ee1173",
        "text": "<@UK3LH8CF5> how would connect the notes to the code? one solution I can think of:\n• create a Tiddlywiki instance only you can access\n• write your thoughts on a piece of code in a tiddler (Tiddlywiki name for entry or note)\n• link to the tiddler in a comment near your relevant piece of code",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3074e1515db",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b3074e1515db1a3d79acf5d954eac0d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Lucian Ursu",
            "display_name": "elbear",
            "team": "T5TCAFTA9",
            "name": "lucian.ursu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592252831.319600",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fx1B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": " how would connect the notes to the code? one solution I can think of:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "create a Tiddlywiki instance only you can access"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "write your thoughts on a piece of code in a tiddler (Tiddlywiki name for entry or note)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "link to the tiddler in a comment near your relevant piece of code"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1592285060.323600",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1592285257.000000"
        },
        "client_msg_id": "187adf54-ad6e-4137-8877-882d9a0b6e1f",
        "text": "I find hyperlinks into codebases _incredibly_ useful. Thank you GitHub and <https:\/\/plugins.jetbrains.com\/plugin\/8183-gitlink>! With hyperlinks for any line of code at any point in time I can just use regular docs (Google docs, LaTeX, Confluence, Markdown, plain text) to create pretty decent private documentation.\n\nI still can't hyperlink to any line of code at _all_ points in time, so that it's the same line but carrying forward transparently as new commits roll in. But I find it's actually better to err on the side of situating documentation timefully rather than timelessly. That way I'm constantly reminded that documentation can go out of date.\n\nIn principle it sucks that I can't get backlinks. \"What are all my notes that link inside function `foo`?\" But in practice I've just never had _that_ many docs about any single function, so I haven't missed it _that_ much. Plain docs + hyperlinks may well be the 80% solution that gets us well into the region of diminishing returns.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592252831.319600",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zRcz9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I find hyperlinks into codebases "
                            },
                            {
                                "type": "text",
                                "text": "incredibly",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " useful. Thank you GitHub and "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/plugins.jetbrains.com\/plugin\/8183-gitlink"
                            },
                            {
                                "type": "text",
                                "text": "! With hyperlinks for any line of code at any point in time I can just use regular docs (Google docs, LaTeX, Confluence, Markdown, plain text) to create pretty decent private documentation.\n\nI still can't hyperlink to any line of code at "
                            },
                            {
                                "type": "text",
                                "text": "all",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " points in time, so that it's the same line but carrying forward transparently as new commits roll in. But I find it's actually better to err on the side of situating documentation timefully rather than timelessly. That way I'm constantly reminded that documentation can go out of date.\n\nIn principle it sucks that I can't get backlinks. \"What are all my notes that link inside function "
                            },
                            {
                                "type": "text",
                                "text": "foo",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "?\" But in practice I've just never had "
                            },
                            {
                                "type": "text",
                                "text": "that",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " many docs about any single function, so I haven't missed it "
                            },
                            {
                                "type": "text",
                                "text": "that",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " much. Plain docs + hyperlinks may well be the 80% solution that gets us well into the region of diminishing returns."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1592287188.325900",
        "client_msg_id": "D88B14D7-5630-49ED-B383-493F3457F916",
        "text": "Basecamp (the company Ryan Singer works for) just released the new email client “Hey!”, and it has this design methodology all over it. \n<https:\/\/hey.com\/how-it-works\/|https:\/\/hey.com\/how-it-works\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591975277.202600",
        "parent_user_id": "U5STGTB3J",
        "attachments": [
            {
                "title": "How HEY Works | HEY",
                "title_link": "https:\/\/hey.com\/how-it-works\/",
                "text": "HEY isn’t just email software. That’s just not enough. HEY is software + a philosophy of email.",
                "fallback": "How HEY Works | HEY",
                "from_url": "https:\/\/hey.com\/how-it-works\/",
                "service_icon": "https:\/\/hey.com\/favicon-196x196.png",
                "service_name": "hey.com",
                "id": 1,
                "original_url": "https:\/\/hey.com\/how-it-works\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "euPs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Basecamp (the company Ryan Singer works for) just released the new email client “Hey!”, and it has this design methodology all over it. \n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/hey.com\/how-it-works\/",
                                "text": "https:\/\/hey.com\/how-it-works\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UDQKHNP51",
        "type": "message",
        "ts": "1592288232.326300",
        "client_msg_id": "1f29ab7c-b293-4889-96b9-a6a36ac284a9",
        "text": "I love vas3k’s blog. At least I found great his article on machine learning",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3074e1515db",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b3074e1515db1a3d79acf5d954eac0d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Lucian Ursu",
            "display_name": "elbear",
            "team": "T5TCAFTA9",
            "name": "lucian.ursu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592250420.316700",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mYCv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I love vas3k’s blog. At least I found great his article on machine learning"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1592288459.327500",
        "client_msg_id": "ec4c2a28-eccf-4878-af0b-c15b36e47271",
        "text": "I hadn't see this before. Probably not what most people here imaging to be the future of coding bit still interesting?\n\n<https:\/\/www.paintcodeapp.com\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592288459.327500",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1592291012.329300",
        "reply_users": [
            "UC2A2ARPT"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1592291012.329300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "PaintCode - Turn your drawings into Objective-C or Swift drawing code",
                "title_link": "https:\/\/www.paintcodeapp.com\/",
                "text": "PaintCode is a unique vector drawing app that generates Objective-C or Swift code in real time, acting as a bridge between developers and graphic designers.",
                "fallback": "PaintCode - Turn your drawings into Objective-C or Swift drawing code",
                "from_url": "https:\/\/www.paintcodeapp.com\/",
                "service_icon": "https:\/\/www.paintcodeapp.com\/images\/favicon.png",
                "service_name": "paintcodeapp.com",
                "id": 1,
                "original_url": "https:\/\/www.paintcodeapp.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eTwt1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I hadn't see this before. Probably not what most people here imaging to be the future of coding bit still interesting?\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.paintcodeapp.com\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL",
                    "UA14TGLTC",
                    "UAVCC2X70"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U015UNF0LSV",
        "type": "message",
        "ts": "1592289020.328800",
        "client_msg_id": "be61091c-a7d9-42a6-9235-ae15e8d47956",
        "text": "Hello, new person here, is there some kind of forum\/wiki that accumulates the knowledge discussed in this slack?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g33f8237e026",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/33f8237e0261c712b24582ad7ced7986.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Peter Damoc",
            "display_name": "Peter Damoc",
            "team": "T5TCAFTA9",
            "name": "pdamoc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592289020.328800",
        "reply_count": 6,
        "reply_users_count": 3,
        "latest_reply": "1592425421.366800",
        "reply_users": [
            "UC2A2ARPT",
            "UKEBCCARJ",
            "UFLN9JFRT"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1592290477.328900"
            },
            {
                "user": "UKEBCCARJ",
                "ts": "1592411434.363600"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1592411910.363900"
            },
            {
                "user": "UFLN9JFRT",
                "ts": "1592418237.365100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1592425353.366600"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1592425421.366800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F3N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello, new person here, is there some kind of forum\/wiki that accumulates the knowledge discussed in this slack?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UL5AX4G2H"
                ],
                "count": 1
            },
            {
                "name": "joy",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1592290477.328900",
        "client_msg_id": "8d621311-252f-4c8e-9eb5-ea61e87c85c0",
        "text": "We don't currently have something like that, but I'm planning to organize a collaborative community project around that goal in the second half of the year.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592289020.328800",
        "parent_user_id": "U015UNF0LSV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ag=E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We don't currently have something like that, but I'm planning to organize a collaborative community project around that goal in the second half of the year."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UMWF81HTP",
                    "U010328JA1E",
                    "UKEBCCARJ"
                ],
                "count": 3
            }
        ]
    }
]