[
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1702757349.726829",
        "client_msg_id": "02EEA2D5-4B53-40B1-8C0C-E112CAC073A1",
        "text": "In linguistics, we have \"denotation\" and \"connotation\" as two forms of meaning. In programming, we have denotational semantics and operational semantics. Do we have connotational semantics? (If not — may we?)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "reply_count": 29,
        "reply_users_count": 11,
        "latest_reply": "1703079934.316909",
        "reply_users": [
            "U03CEGR3HSL",
            "UC2A2ARPT",
            "UK3LH8CF5",
            "UMQ6LR9NZ",
            "UFEQUBNNT",
            "U023V63MF6V",
            "U0245E9RB2B",
            "U013ZLJARC7",
            "UNS7QDKFV",
            "U5STGTB3J",
            "U8A5MS6R1"
        ],
        "replies": [
            {
                "user": "U03CEGR3HSL",
                "ts": "1702758121.465389"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1702758712.200259"
            },
            {
                "user": "U03CEGR3HSL",
                "ts": "1702759089.123419"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1702760238.935229"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1702760298.422389"
            },
            {
                "user": "U03CEGR3HSL",
                "ts": "1702760386.766639"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1702760397.974569"
            },
            {
                "user": "U03CEGR3HSL",
                "ts": "1702760406.920809"
            },
            {
                "user": "U03CEGR3HSL",
                "ts": "1702760539.519579"
            },
            {
                "user": "U03CEGR3HSL",
                "ts": "1702760584.469309"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1702765618.013079"
            },
            {
                "user": "UMQ6LR9NZ",
                "ts": "1702766046.311289"
            },
            {
                "user": "UMQ6LR9NZ",
                "ts": "1702766097.768279"
            },
            {
                "user": "UMQ6LR9NZ",
                "ts": "1702766158.841969"
            },
            {
                "user": "UMQ6LR9NZ",
                "ts": "1702766359.969469"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1702782029.618459"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1702782418.591939"
            },
            {
                "user": "U03CEGR3HSL",
                "ts": "1702784728.094949"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1702790219.112979"
            },
            {
                "user": "U023V63MF6V",
                "ts": "1702793525.338469"
            },
            {
                "user": "U0245E9RB2B",
                "ts": "1702793915.430769"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1702794190.092929"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1702809215.279829"
            },
            {
                "user": "UMQ6LR9NZ",
                "ts": "1702816970.968889"
            },
            {
                "user": "UNS7QDKFV",
                "ts": "1702831885.045879"
            },
            {
                "user": "U03CEGR3HSL",
                "ts": "1702832561.143399"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1702894289.464369"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1703050679.925199"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1703079934.316909"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ooqRc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In linguistics, we have \"denotation\" and \"connotation\" as two forms of meaning. In programming, we have denotational semantics and operational semantics"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Do we have connotational semantics? (If not — may we?)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD",
                    "U05UBCXHWM6"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1702758121.465389",
        "client_msg_id": "c4bb0aaf-34dc-420e-ac78-db7242c2a874",
        "text": "We have idioms and design patterns which, when recognized by a reader, carry connotations.\n\nWhether that's a good thing or a bad thing is debatable. \n\nPaul Graham has argued that the presence of design patterns in a language indicates an inability to create the abstraction you really need. For example, he has compared design patterns to manual macro expansions.\n<https:\/\/twitter.com\/paulg\/status\/1409386827803410436|https:\/\/twitter.com\/paulg\/status\/1409386827803410436>\n\nPeter Norvig is rumored to have said \"Design patterns are bug reports against your programming language.\"\n\nHe also pointed out how many standard design patterns become unnecessary in a sufficiently dynamic language.\n<https:\/\/norvig.com\/design-patterns\/|https:\/\/norvig.com\/design-patterns\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7fd1bd5c536",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7fd1bd5c53681452a80086a54ebb2ad1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Personal",
            "real_name": "Personal Dynamic Media",
            "display_name": "Personal Dynamic Media",
            "team": "T5TCAFTA9",
            "name": "personaldynamicmedia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "srDd0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We have idioms and design patterns which, when recognized by a reader, carry connotations.\n\nWhether that's a good thing or a bad thing is debatable. \n\nPaul Graham has argued that the presence of design patterns in a language indicates an inability to create the abstraction you really need. For example, he has compared design patterns to manual macro expansions.\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/paulg\/status\/1409386827803410436",
                                "text": "https:\/\/twitter.com\/paulg\/status\/1409386827803410436"
                            },
                            {
                                "type": "text",
                                "text": "\n\nPeter Norvig is rumored to have said \"Design patterns are bug reports against your programming language.\"\n\nHe also pointed out how many standard design patterns become unnecessary in a sufficiently dynamic language.\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/norvig.com\/design-patterns\/",
                                "text": "https:\/\/norvig.com\/design-patterns\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1702758712.200259",
        "client_msg_id": "4C99B3C8-44FB-4157-8E6D-4E9E12847461",
        "text": "My sense is that every (say) adjective in human language both denotes and connotes distinct meanings. Does every programming construct connote something? Is this where the debate over the meaning of reduce vs loop emerges?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BMr9r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My sense is that every (say) adjective in human language both denotes and connotes distinct meanings"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Does every programming construct connote something? Is this where the debate over the meaning of reduce vs loop emerges?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1702759089.123419",
        "edited": {
            "user": "U03CEGR3HSL",
            "ts": "1702759138.000000"
        },
        "client_msg_id": "96ef11fd-308f-4f07-a8d7-3bc43b79e9a2",
        "text": "My first instinct is to say the connotation is (ideally) the programmer's intent. I'm not certain yet whether I believe that, but starting from there...\n\nI think this does seem relevant to discussions about language features specifically meant to iterate over a range of numbers or the members of a collection, versus something more generic like the for loop in C.\n\nOne could argue that the distance between denotation and connotation is greater with a generic for loop than it is with a loop structure specifically meant to iterate over the members of a collection, and by reducing the difference between denotation and connotation you reduce the intellectual difficulty of reading the code, and you make it easier for the compiler to infer the programmer's intent for purposes of optimization.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7fd1bd5c536",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7fd1bd5c53681452a80086a54ebb2ad1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Personal",
            "real_name": "Personal Dynamic Media",
            "display_name": "Personal Dynamic Media",
            "team": "T5TCAFTA9",
            "name": "personaldynamicmedia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DzQ\/v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My first instinct is to say the connotation is (ideally) the programmer's intent. I'm not certain yet whether I believe that, but starting from there...\n\nI think this does seem relevant to discussions about language features specifically meant to iterate over a range of numbers or the members of a collection, versus something more generic like the for loop in C.\n\nOne could argue that the distance between denotation and connotation is greater with a generic for loop than it is with a loop structure specifically meant to iterate over the members of a collection, and by reducing the difference between denotation and connotation you reduce the intellectual difficulty of reading the code, and you make it easier for the compiler to infer the programmer's intent for purposes of optimization."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1702760238.935229",
        "client_msg_id": "9990FD9C-1AE5-49C2-8B39-D903CE8154A1",
        "text": "I'd go further — I think there's a bit of a low-brow _stink_ on using a for loop when (say) mapping would be more elegant, and (right back at them) a bit of a high-brow stink on anything fancier than a loop. Like, our programming constructs have a culture around them. The choice of construct connotes something about the person who wrote the code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SA1tA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd go further — I think there's a bit of a low-brow "
                            },
                            {
                                "type": "text",
                                "text": "stink",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " on using a for loop when (say) mapping would be more elegant, and (right back at them) a bit of a high-brow stink on anything fancier than a loop"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Like, our programming constructs have a culture around them. The choice of construct connotes something about the person who wrote the code"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "U05BRNRAC4V"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1702760298.422389",
        "client_msg_id": "DE836388-1EB0-4A46-9A0B-1C87D6623D2A",
        "text": "(A word can connote more than one meaning simultaneously, right?)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0H9Xh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(A word can connote more than one meaning simultaneously, right?)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1702760386.766639",
        "client_msg_id": "de3ed5cc-b1e2-4937-a079-ab1448cf9835",
        "text": "Of course. I'm not a literary type, but I think that's where many of the so-called layered meanings in literature and poetry come from.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7fd1bd5c536",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7fd1bd5c53681452a80086a54ebb2ad1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Personal",
            "real_name": "Personal Dynamic Media",
            "display_name": "Personal Dynamic Media",
            "team": "T5TCAFTA9",
            "name": "personaldynamicmedia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AYPBF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Of course. I'm not a literary type, but I think that's where many of the so-called layered meanings in literature and poetry come from."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1702760397.974569",
        "client_msg_id": "F5CC4CBB-C0B4-4FE8-89E7-5BFD7DAC50EF",
        "text": "So perhaps the connotational semantics are tied up with the reasons that a construct is added to a language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h7IDS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So perhaps the connotational semantics are tied up with the reasons that a construct is added to a language"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1702760406.920809",
        "client_msg_id": "b599ecf9-e709-440e-a261-de0386539d61",
        "text": "And a word can definitely denote more than one meaning simultaneously. That's where puns come from!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7fd1bd5c536",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7fd1bd5c53681452a80086a54ebb2ad1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Personal",
            "real_name": "Personal Dynamic Media",
            "display_name": "Personal Dynamic Media",
            "team": "T5TCAFTA9",
            "name": "personaldynamicmedia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3gO4X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And a word can definitely denote more than one meaning simultaneously. That's where puns come from!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1702760539.519579",
        "client_msg_id": "fbed60d8-bf79-4345-bad0-e3b1e631eff6",
        "text": "&gt; So perhaps the connotational semantics are tied up with the reasons that a construct is added to a language.\n&gt; \nThat might be where some of them start, but I think connotations, like idioms, grow within the shared understanding of a community.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7fd1bd5c536",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7fd1bd5c53681452a80086a54ebb2ad1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Personal",
            "real_name": "Personal Dynamic Media",
            "display_name": "Personal Dynamic Media",
            "team": "T5TCAFTA9",
            "name": "personaldynamicmedia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o7hLg",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So perhaps the connotational semantics are tied up with the reasons that a construct is added to a language.\n"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThat might be where some of them start, but I think connotations, like idioms, grow within the shared understanding of a community."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1702760584.469309",
        "client_msg_id": "250d70a7-1854-483b-a0f1-880b0283b99c",
        "text": "Disclaimer: I've given this no serious thought before, so I may have totally different opinions tomorrow.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7fd1bd5c536",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7fd1bd5c53681452a80086a54ebb2ad1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Personal",
            "real_name": "Personal Dynamic Media",
            "display_name": "Personal Dynamic Media",
            "team": "T5TCAFTA9",
            "name": "personaldynamicmedia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FjroS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Disclaimer: I've given this no serious thought before, so I may have totally different opinions tomorrow."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1702765618.013079",
        "client_msg_id": "ECE3449A-758D-4D8C-BF11-CFF4FDFC81BD",
        "text": "I definitely think different language constructs carry connotations. Don’t know any work specifically about it. But am reminded of this I saw the other day. <https:\/\/interconnected.org\/home\/2023\/12\/05\/code|https:\/\/interconnected.org\/home\/2023\/12\/05\/code>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uLJq9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I definitely think different language constructs carry connotations"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "Don’t"
                            },
                            {
                                "type": "text",
                                "text": " know any work specifically about it"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " But am reminded of this I saw the other day"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/interconnected.org\/home\/2023\/12\/05\/code",
                                "text": "https:\/\/interconnected.org\/home\/2023\/12\/05\/code"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1702766046.311289",
        "client_msg_id": "4ed1c1a6-dfd0-4db5-b22d-a5c28db4e55a",
        "text": "<https:\/\/en.wikipedia.org\/wiki\/Roland_Barthes|Barthes>!\n\nFor Barthes connotation and denotation are different orders of “signification.”\n\n&gt; He suggested that the construction of myths results in two levels of signification: the “language-object”, a first order linguistic system; and the “metalanguage”, the second-order system transmitting the myth.\nWhere the language-object refers directly to some thing, and metalanguage is used to convey meaning in the mode of myth!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0V1ih",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Roland_Barthes",
                                "text": "Barthes"
                            },
                            {
                                "type": "text",
                                "text": "!\n\nFor Barthes connotation and denotation are different orders of “signification.”\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "He suggested that the construction of myths results in two levels of signification: the “language-object”, a first order linguistic system; and the “metalanguage”, the second-order system transmitting the myth."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nWhere the language-object refers directly to some thing, and metalanguage is used to convey meaning in the mode of myth!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1702766097.768279",
        "client_msg_id": "648f505d-66cc-414c-b538-2c98ab39749f",
        "text": "(this is sort of foundational to a lot of marxist readings of stuff, so…a marxist programming?)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gW7Ef",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(this is sort of foundational to a lot of marxist readings of stuff, so…a marxist programming?)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1702766158.841969",
        "client_msg_id": "7106b537-530f-48fd-b522-df4c00d3ac0d",
        "text": "<https:\/\/literariness.org\/2016\/03\/18\/connotation-and-denotation\/|A quick thing on Barthes in relation to connotation and denotation>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PpCDz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/literariness.org\/2016\/03\/18\/connotation-and-denotation\/",
                                "text": "A quick thing on Barthes in relation to connotation and denotation"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1702766359.969469",
        "client_msg_id": "fd232784-8a26-43b4-8b86-4f7d7ce3740b",
        "text": "<https:\/\/www.oxfordreference.com\/display\/10.1093\/oi\/authority.20110803095710580|1 last link, because I got overexcited>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Czzwa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.oxfordreference.com\/display\/10.1093\/oi\/authority.20110803095710580",
                                "text": "1 last link, because I got overexcited"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1702782029.618459",
        "client_msg_id": "C7E60422-AB44-4069-8AD7-AE054A813FF4",
        "text": "Ivan, were you ever a Rubyist? I was, in the early 2000’s when there were dozens of DSLs for any particular task, and the various sources of connotation described in this thread were in full force—syntactical, tribal, brow-based. Whether and when you chose to write { and } or “do” and “end” (which are basically equivalent) could make me feel at home in a file or like a foreigner, because it said something about who you learned Ruby from or which language you just came from. It probably wasn’t a special time or language, but it’s something I noticed because I was in a community that reveled in it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Py+CD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ivan, were you ever a Rubyist? I was, in the early 2000’s when there were dozens of DSLs for any particular task, and the various sources of connotation described in this thread were in full force—syntactical, tribal, brow-based. Whether and when you chose to write { and } or “do” and “end” (which are basically equivalent) could make me feel at home in a file or like a foreigner, because it said something about who you learned Ruby from or which language you just came from. It probably wasn’t a special time or language, but"
                            },
                            {
                                "type": "text",
                                "text": " it’s"
                            },
                            {
                                "type": "text",
                                "text": " something I noticed because I was in a community that reveled in it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "rolling_on_the_floor_laughing",
                "users": [
                    "UA14TGLTC",
                    "U02QC0PPER3"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1702782418.591939",
        "client_msg_id": "DE3A8C63-E420-4203-B840-ECD0BC6718E1",
        "text": "Yeah, that's a great example of what I'm thinking.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "koL\/D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, that's a great example of what I'm thinking"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1702784728.094949",
        "client_msg_id": "cdc262b4-1b7e-43f0-8ab2-61b5b4399c35",
        "text": "Not sure exactly what the different styles connote, but there used to be holy wars over indentation styles.\n\n<https:\/\/en.m.wikipedia.org\/wiki\/Indentation_style|https:\/\/en.m.wikipedia.org\/wiki\/Indentation_style>\n\n<http:\/\/www.catb.org\/jargon\/html\/I\/indent-style.html|http:\/\/www.catb.org\/jargon\/html\/I\/indent-style.html> \n\nPerl has an especially idiom heavy culture. I still remember thinking through \"do_something(..) || die(...);\" the first several times I saw it.\n\nI once worked on a code base where the standard way of doing something i times was \"while(i--) {...}\". THAT took some getting used to.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7fd1bd5c536",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7fd1bd5c53681452a80086a54ebb2ad1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Personal",
            "real_name": "Personal Dynamic Media",
            "display_name": "Personal Dynamic Media",
            "team": "T5TCAFTA9",
            "name": "personaldynamicmedia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DFyHQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure exactly what the different styles connote, but there used to be holy wars over indentation styles.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.m.wikipedia.org\/wiki\/Indentation_style",
                                "text": "https:\/\/en.m.wikipedia.org\/wiki\/Indentation_style"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.catb.org\/jargon\/html\/I\/indent-style.html",
                                "text": "http:\/\/www.catb.org\/jargon\/html\/I\/indent-style.html"
                            },
                            {
                                "type": "text",
                                "text": " \n\nPerl has an especially idiom heavy culture. I still remember thinking through \"do_something(..) || die(...);\" the first several times I saw it.\n\nI once worked on a code base where the standard way of doing something i times was \"while(i--) {...}\". THAT took some getting used to."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1702790219.112979",
        "edited": {
            "user": "UFEQUBNNT",
            "ts": "1702791221.000000"
        },
        "client_msg_id": "DC983D7C-A3FC-4B58-8EB1-7FA9C4ABEFA2",
        "text": "I love this question. I’m still thinking about it.\n\nI thought of a few mundane examples of when designers intentionally smuggled connotations into the language: “foo!” as syntax for _unsafely_ removing null from foo’s type, and “foo?.bar” for when we’re _unsure_ whether foo exists. These are good.\n\nBut man, I can’t think of instances as universally relatable as we have in prose. Like syntax for _begrudgingly_ implementing an interface, or _timidly_ asserting a precondition, or _sarcastically_ implementing a can’t-happen branch, or _apologetically_ throwing an exception. I can’t think of a way, without a comment, to tell a reader that the following code _seems_ to work but I’ve only ever run it once so be careful. Put it in the top-level instead of packaging it up in a function? What about self-confident code?\n\nDo I just have a huge blind spot for these things, though? I recently learned that TypeScript has two syntaxes for declaring object types. I use them both regularly, but I never spared a conscious thought for their concurrent existence. I would use one to evoke OCaml-ness and the other, Java-ness. Total autopilot. All vibes.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1VxHY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I love this question. I’m still thinking about it.\n\nI thought of a few mundane examples of when designers intentionally smuggled connotations into the language: “foo!” as syntax for "
                            },
                            {
                                "type": "text",
                                "text": "unsafely",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " removing null from foo’s type, and “foo?.bar” for when we’re "
                            },
                            {
                                "type": "text",
                                "text": "unsure",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " whether foo exists. These are good.\n\nBut man, I can’t think of instances as universally relatable as we have in prose. Like syntax for "
                            },
                            {
                                "type": "text",
                                "text": "begrudgingly",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " implementing an interface, or "
                            },
                            {
                                "type": "text",
                                "text": "timidly",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " asserting a precondition, or "
                            },
                            {
                                "type": "text",
                                "text": "sarcastically",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " implementing a can’t-happen branch, or "
                            },
                            {
                                "type": "text",
                                "text": "apologetically",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " throwing an exception. I can’t think of a way, without a comment, to tell a reader that the following code "
                            },
                            {
                                "type": "text",
                                "text": "seems",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " to work but I’ve only ever run it once so be careful. Put it in the top-level instead of packaging it up in a function? What about self-confident code?\n\nDo I just have a huge blind spot for these things, though? I recently learned that TypeScript has two syntaxes for declaring object types. I use them both regularly, but I never spared a conscious thought for their concurrent existence. I would use one to evoke OCaml-ness and the other, Java-ness. Total autopilot. All vibes."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U023V63MF6V",
        "type": "message",
        "ts": "1702793525.338469",
        "client_msg_id": "0ff393d9-11ba-4303-ad06-5ccdb2b380da",
        "text": "i'm finding it hard to imagine connotation without emotion; which (clearly) is unnecessary in the parts of the programme that deliver machine instructions (so far!) -- but there's space for it in the parts of the programme that are mean to be read, admired, spread, taught, debated, timecapsuled, encultured...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8c781271e0f0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-30\/2111810970118_8c781271e0f034f7c468_72.jpg",
            "first_name": "",
            "real_name": "Arvind Thyagarajan",
            "display_name": "Arvind Thyagarajan",
            "team": "T5TCAFTA9",
            "name": "arvind",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0ufVZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i'm finding it hard to imagine connotation without emotion; which (clearly) is unnecessary in the parts of the programme that deliver machine instructions (so far!) -- but there's space for it in the parts of the programme that are mean to be read, admired, spread, taught, debated, timecapsuled, encultured..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0245E9RB2B",
        "type": "message",
        "ts": "1702793915.430769",
        "client_msg_id": "92cf7f44-141c-4d51-9ac3-74f49e4ac70c",
        "text": "The best thing I've learned from following <@UC1TYP06P> is that the design of a program is something different from the code. Sometimes it's not even possible to recover the design from just the source code: <https:\/\/www.pathsensitive.com\/2018\/01\/the-design-of-software-is-thing-apart.html>.\n\nBut you can make your intentions clearer, and one way is through the connotations of your code. The programmatic structures and the variable names that you choose both communicate something about the design.\n\nI believe most of the bugs that I've written in the past year happened because the design of a component changed and the implementation didn't.\n\nAt that point, the code may still \"work\" just fine in its current form (i.e., it returns the correct output for any input). But if so, it works by coincidence rather than by design.\n\nAnother way to say this is that the connotations of the code implicitly make promises about the behavior. And if those promises are no longer guaranteed by the design, it becomes very easy to create bugs by calling a function in a way that seems natural, but has unintended side effects.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4146ee716d5c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-06-09\/2162420776068_4146ee716d5cee83a3b8_72.jpg",
            "first_name": "",
            "real_name": "Timothy Johnson",
            "display_name": "Timothy Johnson",
            "team": "T5TCAFTA9",
            "name": "timjohnson314",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n2bRS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The best thing I've learned from following "
                            },
                            {
                                "type": "user",
                                "user_id": "UC1TYP06P"
                            },
                            {
                                "type": "text",
                                "text": " is that the design of a program is something different from the code. Sometimes it's not even possible to recover the design from just the source code: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.pathsensitive.com\/2018\/01\/the-design-of-software-is-thing-apart.html"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nBut you can make your intentions clearer, and one way is through the connotations of your code. The programmatic structures and the variable names that you choose both communicate something about the design.\n\nI believe most of the bugs that I've written in the past year happened because the design of a component changed and the implementation didn't.\n\nAt that point, the code may still \"work\" just fine in its current form (i.e., it returns the correct output for any input). But if so, it works by coincidence rather than by design.\n\nAnother way to say this is that the connotations of the code implicitly make promises about the behavior. And if those promises are no longer guaranteed by the design, it becomes very easy to create bugs by calling a function in a way that seems natural, but has unintended side effects."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1702794190.092929",
        "client_msg_id": "991F0CD7-9674-489D-9ABE-998F55020380",
        "text": "In (human) language, where do connotations come from? Do they emerge from popular usage? Somewhere else? Multiple factors?\n\nWould _connotational semantics_ come from a similar source?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1702757349.726829",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TTPof",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In (human) language, where do connotations come from? Do they emerge from popular usage? Somewhere else? Multiple factors?\n\nWould "
                            },
                            {
                                "type": "text",
                                "text": "connotational semantics ",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": "come from a similar source?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]