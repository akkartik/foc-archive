[
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1543666652.029200",
        "client_msg_id": "257C87BF-B9C0-4336-8549-239A31B2DEE5",
        "text": "<https:\/\/programmingmadecomplicated.wordpress.com\/2018\/11\/30\/the-everyday-reality\/>\n\n<@UCQ4BBFQ9> You raise some interesting questions in the end. I’m tempted to start talking about (accidental) complexity and how over time this stateful mess of a running system explodes into a fractal multi-dimensional tree of stateful subsystems and that we haven’t found any other way yet to tame this complexity other than rewinding time and start all over again — hence the restarts; but I’m sure you already knew this and your list of question was more rhetorical and meant to inspire.\n\nLove the final question in your post:\n&gt;How much effective control do we actually exercise over the universal simulators that we bought and consider our “own” posessions?\n\nI don’t have an answer and this can be taken very different directions.\n\nI like to think into the direction of how that complexity takes our superpowers away slowly, and how we somehow don’t feel the need to rectify that situation and instead continue piling more abstractions on top of the ones that we hardly understand anymore.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1543666652.029200",
        "reply_count": 11,
        "reply_users_count": 6,
        "latest_reply": "1544032227.090400",
        "reply_users": [
            "UEH6T3RJB",
            "UE6EFEPTQ",
            "UD3AK9JRF",
            "U5STGTB3J",
            "UCQ4BBFQ9",
            "U8A5MS6R1"
        ],
        "replies": [
            {
                "user": "UEH6T3RJB",
                "ts": "1543675875.029600"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1543749771.043500"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1543749787.043700"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1543750178.044900"
            },
            {
                "user": "UD3AK9JRF",
                "ts": "1543761712.045400"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1543766105.046000"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1543766581.049800"
            },
            {
                "user": "UCQ4BBFQ9",
                "ts": "1543867661.060100"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1543991959.062700"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1544025785.090200"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1544032227.090400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "Programming, Made Complicated",
                "service_url": "http:\/\/programmingmadecomplicated.wordpress.com",
                "title": "The everyday reality",
                "title_link": "https:\/\/programmingmadecomplicated.wordpress.com\/2018\/11\/30\/the-everyday-reality\/",
                "author_name": "Joel",
                "author_link": "https:\/\/programmingmadecomplicated.wordpress.com\/author\/programmingmadecomplicated\/",
                "text": "Why, after finally giving in and upgrading to MacOS Mojave, is the &ldquo;restore previous session&rdquo; button grayed out? I took great care to terminate Firefox explicitly and cleanly before I let the computer have its way and restart.\nI had loads of tabs open. This is normal for me. Normally I use an explicit tab-saving extension on other browsers, but this lets me grow the number of simultaneous unfinished threads without bound.\nSo when I got a new MacBook, I took it as an opportunity to make a fresh start &ndash; no Chrome, no tab saver; just one restorable session that might ensure some browsing discipline.\nBefore long, of course, it wants to update. And, of course, update requires restart, because why not. And of course, restart means close all open applications and explicitly re-open them again later. But there&rsquo;s a handy little button: &ldquo;remind me tomorrow&rdquo;. So my work stays undisrupted for a long time.\nBut then weird things start happening. The other day, I found that my MacBook was no longer charging when connected to mains power, and it was running low on battery. I tried everything I could think of: checked the plug switch, tried a socket that I knew to be working, trying different cables. With battery running out, I did the last resort: close browser, and turn it off and on again. A few seconds later:\n&ldquo;Ding!&rdquo;\nAaaand the battery&rsquo;s mysteriously charging again.\nOther things have gone wrong in the past when I&rsquo;ve delayed updates. It feels as if my computer has a sentience, and is so desperate to update [via restarting] that various parts of it start going on strike until its demands are met.\nPossibly by design, possibly not. Maybe I&rsquo;m just seeing patterns that are not there.\nStill. Why, why, a thousand &ldquo;why&rdquo;s that will never be answered in a way that yields any understanding or future mitigation.\nWhy couldn&rsquo;t I restore my tabs like I normally do?\nWhy do things mysteriously start to go wrong in a ways that encourage me to restart?\nWhy does so much of the content of the &ldquo;essential&rdquo; updates consist of stuff I never ever use nor plan to use?\nWhy does updating software require a restart?\nWhy should updating software require a restart?\nHeck, why does restarting kill open applications by default?\nWhy don&rsquo;t things just stay around until you decide to finish with them?\nWhy is the filesystem preserved between restarts but the contents of RAM not automatically persisted?\nAs in &ndash; why is the default mode of computer interaction a dynamic desktop that must be cleared at the end of each day, and a static filing cabinet that you have to load+unload from?\nWhy do we put up with this?\nWhy do I feel powerless to do anything significant about it within a timeframe of less than an entire lifetime of work?\nAlso, while I&rsquo;m at it,\nWhy do I have to figure out how to safely &ldquo;root&rdquo; my phone to be able to delete the litany of huge preinstalled Google apps I never use nor intend to use, in order for me to upgrade Android, and to free enough space to download $(turns out I suddenly need this random app that is the only way to pay for \/ use real-world service X that I happen to unexpectedly need)\nAnd why does Bluetooth File Transfer say &ldquo;file not sent&rdquo; without any other information that could help me perturb variables of my situation to try and get the damn photo to transfer?\nWe like to think, and sometimes lament, that as programmers, we are an elite few having access to the full potential of computer software while the average shlub is forced to just accept what they&rsquo;re given.\nWhen the scope is making little apps and websites, there&rsquo;s a lot of truth to this. But as far as the common-case, everyday experience of using computers goes &mdash; because even the 1337est haxxors at your workplace use a screen and a GUI to manage their terminals &mdash; how much effective control do we actually exercise over the universal simulators that we bought and consider our &ldquo;own&rdquo; posessions?",
                "fallback": "Programming, Made Complicated Link: The everyday reality",
                "from_url": "https:\/\/programmingmadecomplicated.wordpress.com\/2018\/11\/30\/the-everyday-reality\/",
                "service_icon": "https:\/\/s2.wp.com\/i\/webclip.png",
                "id": 1,
                "original_url": "https:\/\/programmingmadecomplicated.wordpress.com\/2018\/11\/30\/the-everyday-reality\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SvA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/programmingmadecomplicated.wordpress.com\/2018\/11\/30\/the-everyday-reality\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UCQ4BBFQ9"
                            },
                            {
                                "type": "text",
                                "text": " You raise some interesting questions in the end. I’m tempted to start talking about (accidental) complexity and how over time this stateful mess of a running system explodes into a fractal multi-dimensional tree of stateful subsystems and that we haven’t found any other way yet to tame this complexity other than rewinding time and start all over again — hence the restarts; but I’m sure you already knew this and your list of question was more rhetorical and meant to inspire.\n\nLove the final question in your post:"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How much effective control do we actually exercise over the universal simulators that we bought and consider our “own” posessions?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nI don’t have an answer and this can be taken very different directions.\n\nI like to think into the direction of how that complexity takes our superpowers away slowly, and how we somehow don’t feel the need to rectify that situation and instead continue piling more abstractions on top of the ones that we hardly understand anymore."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEH6T3RJB",
        "type": "message",
        "ts": "1543675875.029600",
        "client_msg_id": "48158254-d1f7-4a76-a1f6-40a3dc3741c1",
        "text": "Hey, <@U5STGTB3J> and <@UCQ4BBFQ9> - great blog post and reflections. Two related things come to mind, about the two themes which have come up, which could be described as \"ownability\" and \"durability\". Firstly, Philip Tchernavskij and my PPIG 2018 paper in which we argue that most technological artefacts are not even theoretically ownable - <https:\/\/github.com\/amb26\/papers\/blob\/master\/ppig-2018\/What_Lies_in_the_Path_of_the_Revolution.pdf> . Secondly, a recent tweet of <@U6KQ2S410>’s about an interesting new system, Urbit, written by a politically unsavory individual - <https:\/\/twitter.com\/jonathoda\/status\/918157356784955393> - \"a formal model of the system does not contain an operation which unpredictably erases half its brain\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5184556fcf3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/75184556fcf3aa660f5e56b8e5bdd46d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0021-72.png",
            "first_name": "",
            "real_name": "Antranig Basman",
            "display_name": "Bosmon",
            "team": "T5TCAFTA9",
            "name": "amb26slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1543666652.029200",
        "parent_user_id": "U5STGTB3J",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/jonathoda|@jonathoda>: \"a formal model of the system does not contain an operation which unpredictably erases half its brain\" <http:\/\/media.urbit.org\/whitepaper.pdf>",
                "ts": 1507740747,
                "author_name": "Jonathan Edwards",
                "author_link": "https:\/\/twitter.com\/jonathoda\/status\/918157356784955393",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/587356046223486976\/Si4vWb1__normal.jpg",
                "author_subname": "@jonathoda",
                "text": "\"a formal model of the system does not contain an operation which unpredictably erases half its brain\" <http:\/\/media.urbit.org\/whitepaper.pdf>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/jonathoda\/status\/918157356784955393",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/jonathoda\/status\/918157356784955393",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DKmd3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey, "
                            },
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "user",
                                "user_id": "UCQ4BBFQ9"
                            },
                            {
                                "type": "text",
                                "text": " - great blog post and reflections. Two related things come to mind, about the two themes which have come up, which could be described as \"ownability\" and \"durability\". Firstly, Philip Tchernavskij and my PPIG 2018 paper in which we argue that most technological artefacts are not even theoretically ownable - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/amb26\/papers\/blob\/master\/ppig-2018\/What_Lies_in_the_Path_of_the_Revolution.pdf"
                            },
                            {
                                "type": "text",
                                "text": " . Secondly, a recent tweet of "
                            },
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": "’s about an interesting new system, Urbit, written by a politically unsavory individual - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/jonathoda\/status\/918157356784955393"
                            },
                            {
                                "type": "text",
                                "text": " - \"a formal model of the system does not contain an operation which unpredictably erases half its brain\""
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U8A5MS6R1"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEH6T3RJB",
        "type": "message",
        "ts": "1543676079.030000",
        "client_msg_id": "ee531f1d-0e09-451f-a424-08bcdef22d24",
        "text": "Yes, Fauconnier's \"mental spaces\" indeed tantalisingly suggest that they could be operationalised. The only work I've seen in this area so far is Oli Sharpe's semiotic programming language \"Semprola\" <http:\/\/semprola.blogspot.com\/> - which I've urged him to extend in a more Lakoffian direction.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5184556fcf3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/75184556fcf3aa660f5e56b8e5bdd46d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0021-72.png",
            "first_name": "",
            "real_name": "Antranig Basman",
            "display_name": "Bosmon",
            "team": "T5TCAFTA9",
            "name": "amb26slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1543578970.002000",
        "parent_user_id": "UEH6T3RJB",
        "attachments": [
            {
                "title": "Semprola - A Semiotic Programming Language",
                "title_link": "http:\/\/semprola.blogspot.com\/",
                "text": "Semiotic Programming (SP) is an approach to programming computers in the age of ubiquitous, networked computing.",
                "fallback": "Semprola - A Semiotic Programming Language",
                "from_url": "http:\/\/semprola.blogspot.com\/",
                "service_icon": "http:\/\/semprola.blogspot.com\/favicon.ico",
                "service_name": "semprola.blogspot.com",
                "id": 1,
                "original_url": "http:\/\/semprola.blogspot.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4ej4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, Fauconnier's \"mental spaces\" indeed tantalisingly suggest that they could be operationalised. The only work I've seen in this area so far is Oli Sharpe's semiotic programming language \"Semprola\" "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/semprola.blogspot.com\/"
                            },
                            {
                                "type": "text",
                                "text": " - which I've urged him to extend in a more Lakoffian direction."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEH6T3RJB",
        "type": "message",
        "ts": "1543676264.030300",
        "client_msg_id": "5c09754d-8c89-488c-b3b8-8ba8aee6ed2c",
        "text": "<@U8A5MS6R1> - indeed, Lakoff himself has already argued that mathematics is an inescapably metaphorical discipline. His \"Where Mathematics Comes From\" was one of <@UDCLA1HU4>’s early suggestions for our Revolutionary Reading Group - <https:\/\/en.wikipedia.org\/wiki\/Where_Mathematics_Comes_From> . When you say \"we almost always misunderstand stuff\", you are referring to the process of understanding itself - that is, what you refer to as misunderstanding is actually understanding :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5184556fcf3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/75184556fcf3aa660f5e56b8e5bdd46d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0021-72.png",
            "first_name": "",
            "real_name": "Antranig Basman",
            "display_name": "Bosmon",
            "team": "T5TCAFTA9",
            "name": "amb26slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1543578970.002000",
        "parent_user_id": "UEH6T3RJB",
        "attachments": [
            {
                "image_url": "https:\/\/upload.wikimedia.org\/wikipedia\/en\/9\/9a\/Where_Mathematics_Comes_From.jpg",
                "image_width": 248,
                "image_height": 310,
                "image_bytes": 21077,
                "title": "Where Mathematics Comes From",
                "title_link": "https:\/\/en.wikipedia.org\/wiki\/Where_Mathematics_Comes_From",
                "from_url": "https:\/\/en.wikipedia.org\/wiki\/Where_Mathematics_Comes_From",
                "author_name": "Wikipedia",
                "author_link": "https:\/\/en.wikipedia.org\/",
                "text": "Where Mathematics Comes From: How the Embodied Mind Brings Mathematics into Being (hereinafter WMCF) is a book by George Lakoff, a cognitive linguist, and Rafael E. Núñez, a psychologist. Published in 2000, WMCF seeks to found a cognitive science of mathematics, a theory of embodied mathematics based on conceptual metaphor.",
                "fallback": "wikipedia: Where Mathematics Comes From",
                "service_icon": "https:\/\/a.slack-edge.com\/bfaba\/img\/unfurl_icons\/wikipedia.png",
                "id": 1,
                "original_url": "https:\/\/en.wikipedia.org\/wiki\/Where_Mathematics_Comes_From"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8y1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " - indeed, Lakoff himself has already argued that mathematics is an inescapably metaphorical discipline. His \"Where Mathematics Comes From\" was one of "
                            },
                            {
                                "type": "user",
                                "user_id": "UDCLA1HU4"
                            },
                            {
                                "type": "text",
                                "text": "’s early suggestions for our Revolutionary Reading Group - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Where_Mathematics_Comes_From"
                            },
                            {
                                "type": "text",
                                "text": " . When you say \"we almost always misunderstand stuff\", you are referring to the process of understanding itself - that is, what you refer to as misunderstanding is actually understanding "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1543682771.031400",
        "client_msg_id": "163dd0a9-bd66-405e-977c-109c07e356c8",
        "text": "REBL - Stuart Halloway <https:\/\/www.youtube.com\/watch?v=c52QhiXsmyI>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l1y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "REBL - Stuart Halloway "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=c52QhiXsmyI"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1543682814.031600",
        "client_msg_id": "282d4970-b58f-4928-b78d-5a5924b032c1",
        "text": "REBL is a graphical, interactive tool for browsing Clojure data.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tLZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "REBL is a graphical, interactive tool for browsing Clojure data."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1543682839.031800",
        "client_msg_id": "a3d3161e-6f8b-4bbf-bd81-28921ec57a51",
        "text": "a two-pane browser\/viewer system for viewing collections and their contents\n    navigation into and back out of nested collections\n    a structured editor pane for entering expressions to be evaluated\n    a root browse of a history of expression evaluations\n    the ability to 'wrap' a stdio based REPL (e.g. Clojure's native REPL) so that it can monitor and display the interactions therein, while still allowing them to flow back to the host (e.g. the editor)\n    when used with non-stdio repls (e.g. nREPL), can be launched a la carte and accepts values to inspect via an API call\n    the ability to capture nested values as defs in the user namespace\n    the ability to run multiple independent UI windows\n    metadata viewing\n    datafy support\n    extensibility to new browsers and viewers\n    full keyboard control via hotkeys",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PraDD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "a two-pane browser\/viewer system for viewing collections and their contents\n    navigation into and back out of nested collections\n    a structured editor pane for entering expressions to be evaluated\n    a root browse of a history of expression evaluations\n    the ability to 'wrap' a stdio based REPL (e.g. Clojure's native REPL) so that it can monitor and display the interactions therein, while still allowing them to flow back to the host (e.g. the editor)\n    when used with non-stdio repls (e.g. nREPL), can be launched a la carte and accepts values to inspect via an API call\n    the ability to capture nested values as defs in the user namespace\n    the ability to run multiple independent UI windows\n    metadata viewing\n    datafy support\n    extensibility to new browsers and viewers\n    full keyboard control via hotkeys"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1543729043.042700",
        "client_msg_id": "2c4d740c-f1b6-4e34-b337-8b86db72203b",
        "text": "<@UEH6T3RJB>'s paper on ownable software (<https:\/\/github.com\/amb26\/papers\/blob\/master\/ppig-2018\/What_Lies_in_the_Path_of_the_Revolution.pdf>) at <https:\/\/futureprogramming.slack.com\/archives\/C5T9GPWFL\/p1543675875029600?thread_ts=1543666652.029200&amp;cid=C5T9GPWFL> really deserves its own thread. This is fantastic.\n\nThe notion of a program addition operator for arbitrary code is a huge open research problem. Consider my research plan as an alternative: changing software development _customs_ to make comprehensibility a first-class design consideration, and giving up on black-box composition in favor of a more white-box approach where the community adapting some piece of comprehensible software for its own needs is willing to take on ownership for code they didn't write, and to mess with its guts as needed.\n\nIt will require more people to be willing to learn programming. In exchange you'd be able to start now (soonish, once I come up with tools to help migrate code between divergent forks) rather than wait for a technological breakthrough.\n\nOn the other hand, I've been focused on the technical challenges and hadn't scoped out their implications on the eco-system in quite so much detail. This is _super_ useful, thank you very much for doing this work.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1543729043.042700",
        "reply_count": 16,
        "reply_users_count": 6,
        "latest_reply": "1544157433.146600",
        "reply_users": [
            "UE6EFEPTQ",
            "UDJ2TKB99",
            "UEH6T3RJB",
            "UBJGA440K",
            "UCUSW7WVD",
            "U8A5MS6R1"
        ],
        "replies": [
            {
                "user": "UE6EFEPTQ",
                "ts": "1543749879.043900"
            },
            {
                "user": "UDJ2TKB99",
                "ts": "1543772263.055500"
            },
            {
                "user": "UDJ2TKB99",
                "ts": "1543772934.057400"
            },
            {
                "user": "UEH6T3RJB",
                "ts": "1543844635.058600"
            },
            {
                "user": "UEH6T3RJB",
                "ts": "1543845454.059000"
            },
            {
                "user": "UDJ2TKB99",
                "ts": "1543848517.059200"
            },
            {
                "user": "UBJGA440K",
                "ts": "1543945432.061100"
            },
            {
                "user": "UBJGA440K",
                "ts": "1543945478.061300"
            },
            {
                "user": "UBJGA440K",
                "ts": "1543945525.061500"
            },
            {
                "user": "UDJ2TKB99",
                "ts": "1544048486.102500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1544120251.122700"
            },
            {
                "user": "UDJ2TKB99",
                "ts": "1544121728.127000"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1544124476.127200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1544125805.127400"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1544131154.128200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1544157433.146600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/futureprogramming.slack.com\/archives\/C5T9GPWFL\/p1543675875029600?thread_ts=1543666652.029200&amp;cid=C5T9GPWFL",
                "fallback": "[December 1st, 2018 6:51 AM] amb26slack: Hey, <@U5STGTB3J> and <@UCQ4BBFQ9> - great blog post and reflections. Two related things come to mind, about the two themes which have come up, which could be described as \"ownability\" and \"durability\". Firstly, Philip Tchernavskij and my PPIG 2018 paper in which we argue that most technological artefacts are not even theoretically ownable - <https:\/\/github.com\/amb26\/papers\/blob\/master\/ppig-2018\/What_Lies_in_the_Path_of_the_Revolution.pdf> . Secondly, a recent tweet of <@U6KQ2S410>’s about an interesting new system, Urbit, written by a politically unsavory individual - <https:\/\/twitter.com\/jonathoda\/status\/918157356784955393> - \"a formal model of the system does not contain an operation which unpredictably erases half its brain\"",
                "ts": "1543675875.029600",
                "author_id": "UEH6T3RJB",
                "author_subname": "Antranig Basman",
                "channel_id": "C5T9GPWFL",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "Hey, <@U5STGTB3J> and <@UCQ4BBFQ9> - great blog post and reflections. Two related things come to mind, about the two themes which have come up, which could be described as \"ownability\" and \"durability\". Firstly, Philip Tchernavskij and my PPIG 2018 paper in which we argue that most technological artefacts are not even theoretically ownable - <https:\/\/github.com\/amb26\/papers\/blob\/master\/ppig-2018\/What_Lies_in_the_Path_of_the_Revolution.pdf> . Secondly, a recent tweet of <@U6KQ2S410>’s about an interesting new system, Urbit, written by a politically unsavory individual - <https:\/\/twitter.com\/jonathoda\/status\/918157356784955393> - \"a formal model of the system does not contain an operation which unpredictably erases half its brain\"",
                "author_name": "Antranig Basman",
                "author_link": "https:\/\/futureprogramming.slack.com\/team\/UEH6T3RJB",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/75184556fcf3aa660f5e56b8e5bdd46d.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F3654%2Fimg%2Favatars%2Fava_0021-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureprogramming.slack.com\/archives\/C5T9GPWFL\/p1543675875029600?thread_ts=1543666652.029200&amp;cid=C5T9GPWFL",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wsR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEH6T3RJB"
                            },
                            {
                                "type": "text",
                                "text": "'s paper on ownable software ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/amb26\/papers\/blob\/master\/ppig-2018\/What_Lies_in_the_Path_of_the_Revolution.pdf"
                            },
                            {
                                "type": "text",
                                "text": ") at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureprogramming.slack.com\/archives\/C5T9GPWFL\/p1543675875029600?thread_ts=1543666652.029200&amp;cid=C5T9GPWFL",
                                "text": "https:\/\/futureprogramming.slack.com\/archives\/C5T9GPWFL\/p1543675875029600?thread_ts=1543666652.029200&cid=C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": " really deserves its own thread. This is fantastic.\n\nThe notion of a program addition operator for arbitrary code is a huge open research problem. Consider my research plan as an alternative: changing software development "
                            },
                            {
                                "type": "text",
                                "text": "customs",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to make comprehensibility a first-class design consideration, and giving up on black-box composition in favor of a more white-box approach where the community adapting some piece of comprehensible software for its own needs is willing to take on ownership for code they didn't write, and to mess with its guts as needed.\n\nIt will require more people to be willing to learn programming. In exchange you'd be able to start now (soonish, once I come up with tools to help migrate code between divergent forks) rather than wait for a technological breakthrough.\n\nOn the other hand, I've been focused on the technical challenges and hadn't scoped out their implications on the eco-system in quite so much detail. This is "
                            },
                            {
                                "type": "text",
                                "text": "super",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " useful, thank you very much for doing this work."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UEH6T3RJB",
                    "UBSMEUXAA"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1",
                    "UES04SML7"
                ],
                "count": 2
            }
        ]
    }
]