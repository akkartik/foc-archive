[
    {
        "user": "U0282PL61U1",
        "type": "message",
        "ts": "1740993163.251069",
        "client_msg_id": "de70fc78-3cf3-4725-86ab-e108e5814cdc",
        "text": "<https:\/\/metacpan.org\/pod\/Async::MergePoint>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8f365fd896e9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529753983250_8f365fd896e9c8f573b5_72.jpg",
            "first_name": "xyzzy",
            "real_name": "xyzzy",
            "display_name": "xyzzy",
            "team": "T5TCAFTA9",
            "name": "moodyharsh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1740865414.876049",
        "parent_user_id": "UGWUJUZHT",
        "attachments": [
            {
                "from_url": "https:\/\/metacpan.org\/pod\/Async::MergePoint",
                "service_icon": "https:\/\/metacpan.org\/static\/icons\/apple-touch-icon.png",
                "thumb_url": "https:\/\/metacpan.org\/static\/images\/dots.png",
                "thumb_width": 200,
                "thumb_height": 200,
                "id": 1,
                "original_url": "https:\/\/metacpan.org\/pod\/Async::MergePoint",
                "fallback": "MetaCPAN: Async::MergePoint",
                "text": "resynchronise diverged control flow",
                "title": "Async::MergePoint",
                "title_link": "https:\/\/metacpan.org\/pod\/Async::MergePoint",
                "service_name": "MetaCPAN"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VxuzX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/metacpan.org\/pod\/Async::MergePoint"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0282PL61U1",
        "type": "message",
        "ts": "1740993212.079999",
        "client_msg_id": "bc5abad7-df62-4f88-bdf9-252caafb6a9a",
        "text": "In the past I have used re-entrant mutexes to synchorie async stuff easily",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8f365fd896e9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529753983250_8f365fd896e9c8f573b5_72.jpg",
            "first_name": "xyzzy",
            "real_name": "xyzzy",
            "display_name": "xyzzy",
            "team": "T5TCAFTA9",
            "name": "moodyharsh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1740865414.876049",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sR0x8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the past I have used re-entrant mutexes to synchorie async stuff easily"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0282PL61U1",
        "type": "message",
        "ts": "1740993236.767259",
        "client_msg_id": "65f448e8-c95c-4fbb-999d-8410b547d1b3",
        "text": "although I misplaced the code but it was a mutex in js",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8f365fd896e9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529753983250_8f365fd896e9c8f573b5_72.jpg",
            "first_name": "xyzzy",
            "real_name": "xyzzy",
            "display_name": "xyzzy",
            "team": "T5TCAFTA9",
            "name": "moodyharsh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1740865414.876049",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "POT1f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "although I misplaced the code but it was a mutex in js"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0282PL61U1",
        "type": "message",
        "ts": "1740993288.130579",
        "client_msg_id": "18648962-70f2-495e-baad-1f1542cfacbf",
        "text": "something more flexible can be done with a queue, which is basically at the heart of Linda ... which is like the twin of Flow Based \/ Data Flow programming",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8f365fd896e9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529753983250_8f365fd896e9c8f573b5_72.jpg",
            "first_name": "xyzzy",
            "real_name": "xyzzy",
            "display_name": "xyzzy",
            "team": "T5TCAFTA9",
            "name": "moodyharsh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1740865414.876049",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oBISm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "something more flexible can be done with a queue, which is basically at the heart of Linda ... which is like the twin of Flow Based \/ Data Flow programming"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1741032578.017609",
        "client_msg_id": "73d337d8-6d3d-4e25-ae27-c475c60b8519",
        "text": "IMO, the issue isn't declarative vs. imperative, the issue is \"reasoning about time\/sequencing\/ordering\". This kind of thing is eschewed by FP and current PLs, hence, is not part of ChatGPT's corpus. <https:\/\/programmingsimplicity.substack.com\/p\/on-reasoning-about-time-sequencing?r=1egdky|...>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1740865414.876049",
        "parent_user_id": "UGWUJUZHT",
        "attachments": [
            {
                "from_url": "https:\/\/programmingsimplicity.substack.com\/p\/on-reasoning-about-time-sequencing?r=1egdky",
                "service_icon": "https:\/\/substackcdn.com\/image\/fetch\/f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9bf28261-3dbc-4931-99f3-57bb47beeb02%2Fapple-touch-icon-57x57.png",
                "thumb_url": "https:\/\/substackcdn.com\/image\/fetch\/w_1200,h_600,c_fill,f_jpg,q_auto:good,fl_progressive:steep,g_auto\/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9d69eba9-d5d3-4387-a046-9b881b00bd45_131x131.png",
                "thumb_width": 131,
                "thumb_height": 131,
                "id": 1,
                "original_url": "https:\/\/programmingsimplicity.substack.com\/p\/on-reasoning-about-time-sequencing?r=1egdky",
                "fallback": "On Reasoning About Time, Sequencing and Ordering",
                "text": "2025-03-03",
                "title": "On Reasoning About Time, Sequencing and Ordering",
                "title_link": "https:\/\/programmingsimplicity.substack.com\/p\/on-reasoning-about-time-sequencing?r=1egdky",
                "service_name": "programmingsimplicity.substack.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "618yA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "IMO, the issue isn't declarative vs. imperative, the issue is \"reasoning about time\/sequencing\/ordering\". This kind of thing is eschewed by FP and current PLs, hence, is not part of ChatGPT's corpus. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/programmingsimplicity.substack.com\/p\/on-reasoning-about-time-sequencing?r=1egdky",
                                "text": "..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1741044452.201479",
        "client_msg_id": "744aa55c-a89b-4bed-95b0-25558779d4bf",
        "text": "Well ChatGPT and I posited that FP is just a twisted corruption of what's really going on. My current thinking is something like: instead of `g(f(s1))=&gt;s3`, restructure it as: `s1-&gt;f-&gt;s2-&gt;g-&gt;s3` - a more powerful and general processing model. For a start, you don't need to wait - it's async. Next, you get to see intermediate states. Finally, you can go beyond a transient pipeline and leave the chain in-place. Then change s1 and watch s2 and then s3 change.. I'm still working through the various concepts, but for me (not you), it's about finding where Imperative and Declarative fit in all that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1740865414.876049",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EsbOe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well ChatGPT and I posited that FP is just a twisted corruption of what's really going on. My current thinking is something like: instead of "
                            },
                            {
                                "type": "text",
                                "text": "g(f(s1))=>s3",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", restructure it as: "
                            },
                            {
                                "type": "text",
                                "text": "s1->f->s2->g->s3",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " - a more powerful and general processing model. For a start, you don't need to wait - it's async. Next, you get to see intermediate states. Finally, you can go beyond a transient pipeline and leave the chain in-place. Then change s1 and watch s2 and then s3 change.. I'm still working through the various concepts, but for me (not you), it's about finding where Imperative and Declarative fit in all that."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1741044668.698729",
        "client_msg_id": "e5a335ca-90ed-4798-80eb-ef9126b721f3",
        "text": "I think it's something like: as long as your primary focus is functions, you're Imperative. If it's state, you're Declarative. If your nodes-n-wires have functions for nodes - Imperative - you're chaining a sequence of tasks. If the nodes are state and the wires are functions - Declarative - you're defining the relationships between bits of data.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1740865414.876049",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cKSxP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it's something like: as long as your primary focus is functions, you're Imperative. If it's state, you're Declarative. If your nodes-n-wires have functions for nodes - Imperative - you're chaining a sequence of tasks. If the nodes are state and the wires are functions - Declarative - you're defining the relationships between bits of data."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1741074642.065799",
        "client_msg_id": "eb5ccdcb-d5f2-4113-b9bb-51e0915a93be",
        "text": "<@UE6EFEPTQ> At first sight, it looks like you are (re-)discovering flow-based programming.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1740865414.876049",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nmc6f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": " At first sight, it looks like you are (re-)discovering flow-based programming."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]