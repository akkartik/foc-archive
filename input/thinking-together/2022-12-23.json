[
    {
        "subtype": "thread_broadcast",
        "user": "UJBAJNFLK",
        "thread_ts": "1671521797.378819",
        "root": {
            "user": "U0296ACR13M",
            "type": "message",
            "ts": "1671521797.378819",
            "edited": {
                "user": "U0296ACR13M",
                "ts": "1671522275.000000"
            },
            "client_msg_id": "857688c2-1885-41c7-be32-97178ab04024",
            "text": "Any opinions on should _the editors in which you edit a structure (AST) rather than text_ be called Structure Editors, Structured Editors, Structural Editors (just saw <@U03LMRE6MQE> use this term in his post), or Projectional Editors? Are all of these synonyms or are they just related in specific ways?\n\nPersonally I like Structure Editor the best, as opposed to Text Editor. Although Structured and Structural sound correct, I feel like they refer to the editor UI. Similar to how the terms graphical and visual are used. But a Structure editor could be either visual or textual, so having Structure Editor as the 'base term' would allow being more specific by saying Graphical Structure Editor or Textual Structure Editor. Also, even if technically a structure editor would always use a projection of the structure, I feel like it would be best to reserve the term Projectional Editor to editors that explicitly support multiple projections of the said structure.  However, Projection(al) might be a bit foreign term to people not familiar with the topic, so I would rather just use Structure Editor 99% of the time. I feel like one of the barriers for more widespread usage of structure editors is that you have to explain people what they even are and it would certainly be easier to change this if the developer field could agree on the terminology :slightly_smiling_face:.\n\nAny thoughts?",
            "team": "T5TCAFTA9",
            "thread_ts": "1671521797.378819",
            "reply_count": 20,
            "reply_users_count": 9,
            "latest_reply": "1674241975.654179",
            "reply_users": [
                "U03R0B9U1GD",
                "U0296ACR13M",
                "U013ZLJARC7",
                "U03J1HP9C0G",
                "UGWUJUZHT",
                "U03LMRE6MQE",
                "UJBAJNFLK",
                "U79HM6726",
                "ULM3U6275"
            ],
            "replies": [
                {
                    "user": "U03R0B9U1GD",
                    "ts": "1671522340.337339"
                },
                {
                    "user": "U03R0B9U1GD",
                    "ts": "1671522542.584069"
                },
                {
                    "user": "U0296ACR13M",
                    "ts": "1671522561.744529"
                },
                {
                    "user": "U0296ACR13M",
                    "ts": "1671522599.037089"
                },
                {
                    "user": "U03R0B9U1GD",
                    "ts": "1671522787.099499"
                },
                {
                    "user": "U0296ACR13M",
                    "ts": "1671522983.555769"
                },
                {
                    "user": "U013ZLJARC7",
                    "ts": "1671527182.877669"
                },
                {
                    "user": "U013ZLJARC7",
                    "ts": "1671527232.517079"
                },
                {
                    "user": "U03J1HP9C0G",
                    "ts": "1671541383.577169"
                },
                {
                    "user": "UGWUJUZHT",
                    "ts": "1671556992.672599"
                },
                {
                    "user": "U0296ACR13M",
                    "ts": "1671641685.971529"
                },
                {
                    "user": "UGWUJUZHT",
                    "ts": "1671650532.079039"
                },
                {
                    "user": "U03LMRE6MQE",
                    "ts": "1671700672.656719"
                },
                {
                    "user": "UGWUJUZHT",
                    "ts": "1671713931.376959"
                },
                {
                    "user": "UJBAJNFLK",
                    "ts": "1671716960.985979"
                },
                {
                    "user": "UGWUJUZHT",
                    "ts": "1671775304.698739"
                },
                {
                    "user": "UJBAJNFLK",
                    "ts": "1671785800.274309"
                },
                {
                    "user": "UGWUJUZHT",
                    "ts": "1671979233.520089"
                },
                {
                    "user": "U79HM6726",
                    "ts": "1673817394.927199"
                },
                {
                    "user": "ULM3U6275",
                    "ts": "1674241975.654179"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "2OHj",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "Any opinions on should "
                                },
                                {
                                    "type": "text",
                                    "text": "the editors in which you edit a structure (AST) rather than text",
                                    "style": {
                                        "italic": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": " be called Structure Editors, Structured Editors, Structural Editors (just saw "
                                },
                                {
                                    "type": "user",
                                    "user_id": "U03LMRE6MQE"
                                },
                                {
                                    "type": "text",
                                    "text": " use this term in his post), or Projectional Editors? Are all of these synonyms or are they just related in specific ways?\n\nPersonally I like Structure Editor the best, as opposed to Text Editor. Although Structured and Structural sound correct, I feel like they refer to the editor UI. Similar to how the terms graphical and visual are used. But a Structure editor could be either visual or textual, so having Structure Editor as the 'base term' would allow being more specific by saying Graphical Structure Editor or Textual Structure Editor. Also, even if technically a structure editor would always use a projection of the structure, I feel like it would be best to reserve the term Projectional Editor to editors that explicitly support multiple projections of the said structure.  However, Projection(al) might be a bit foreign term to people not familiar with the topic, so I would rather just use Structure Editor 99% of the time. I feel like one of the barriers for more widespread usage of structure editors is that you have to explain people what they even are and it would certainly be easier to change this if the developer field could agree on the terminology "
                                },
                                {
                                    "type": "emoji",
                                    "name": "slightly_smiling_face",
                                    "unicode": "1f642"
                                },
                                {
                                    "type": "text",
                                    "text": ".\n\nAny thoughts?"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1671785800.274309",
        "client_msg_id": "b4733156-114c-4a1a-b3a5-3ba5e942e06d",
        "text": "Thanks <@UGWUJUZHT>, that's a very good answer (better long than cryptic!). I was aware of the advantages of PEG, and of the exceptional tooling support in Ohm-JS for PEG. So my summary of your explanation is \"Rather than using a PEG library for language X, use Ohm-JS to generate something that you can process in\/with language X.\" You gain better tooling, at the price of build system complexity if your ecosystem is not already JS.",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s4o1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": ", that's a very good answer (better long than cryptic!). I was aware of the advantages of PEG, and of the exceptional tooling support in Ohm-JS for PEG. So my summary of your explanation is \"Rather than using a PEG library for language X, use Ohm-JS to generate something that you can process in\/with language X.\" You gain better tooling, at the price of build system complexity if your ecosystem is not already JS."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02PUDETGRW",
        "type": "message",
        "ts": "1671798042.383319",
        "client_msg_id": "a9254dcc-790b-4c8e-863a-cca906e8c8f0",
        "text": "Hello all! Once I saw a great tool in here, to test react components and build a state tree or something like that. Looks like it was here but I can not recall the name so would be really pleased if someone could point me to that tool. Thanks",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "62d5c0083caf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-01\/2799368556017_62d5c0083caff61eeaaa_72.jpg",
            "first_name": "Alex",
            "real_name": "Alex Bender",
            "display_name": "Alex Bender",
            "team": "T5TCAFTA9",
            "name": "axbndr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671798042.383319",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1671829622.285699",
        "reply_users": [
            "UP00ZLX6G",
            "U02PUDETGRW",
            "UBN9AFS0N"
        ],
        "replies": [
            {
                "user": "UP00ZLX6G",
                "ts": "1671804693.294879"
            },
            {
                "user": "U02PUDETGRW",
                "ts": "1671807537.790279"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1671827730.398269"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1671827740.501829"
            },
            {
                "user": "U02PUDETGRW",
                "ts": "1671829622.285699"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "voP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello all! Once I saw a great tool in here, to test react components and build a state tree or something like that. Looks like it was here but I can not recall the name so would be really pleased if someone could point me to that tool. Thanks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02QC0PPER3",
        "type": "message",
        "ts": "1671803993.541119",
        "client_msg_id": "ea7be09c-36b5-4833-9eb2-9050bbcd5a1c",
        "text": "This claims that much of your keyboard muscle memory can translate to your other hand! <https:\/\/blog.xkcd.com\/2007\/08\/14\/mirrorboard-a-one-handed-keyboard-layout-for-the-lazy\/>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "90c9108c61f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-12\/2854686602576_90c9108c61f5d809eb8a_72.jpg",
            "first_name": "Beni",
            "real_name": "Beni Cherniavsky-Paskin",
            "display_name": "Beni Cherniavsky-Paskin",
            "team": "T5TCAFTA9",
            "name": "beni.cherniavsky",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671101813.353719",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xl7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This claims that much of your keyboard muscle memory can translate to your other hand! "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/blog.xkcd.com\/2007\/08\/14\/mirrorboard-a-one-handed-keyboard-layout-for-the-lazy\/"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP00ZLX6G",
        "type": "message",
        "ts": "1671804693.294879",
        "client_msg_id": "987db7e1-b55f-4e67-b1b3-655b1d93ca95",
        "text": "<https:\/\/xstate.js.org\/docs\/> ?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbf26b30edd8",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bf26b30edd8ed78a32e08172b3ffab4a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Tak Tran",
            "display_name": "Tak Tran",
            "team": "T5TCAFTA9",
            "name": "contact584",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671798042.383319",
        "parent_user_id": "U02PUDETGRW",
        "attachments": [
            {
                "from_url": "https:\/\/xstate.js.org\/docs\/",
                "service_icon": "https:\/\/xstate.js.org\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/xstate.js.org\/docs\/",
                "fallback": "XState Docs",
                "text": "Documentation for XState: State Machines and Statecharts for the Modern Web",
                "title": "XState Docs",
                "title_link": "https:\/\/xstate.js.org\/docs\/",
                "service_name": "xstate.js.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+yJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/xstate.js.org\/docs\/"
                            },
                            {
                                "type": "text",
                                "text": " ?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1671807076.914879",
        "client_msg_id": "6a658674-6c93-466b-a731-2de256970c66",
        "text": "Question:\n\nHow did REGEX jaibreak from Compiler Technology and become popular with non-compilerists?\n\nFirst guess: (1) grep, sed, awk, etc. broke the ice, and, (2) perl brought REGEX into the mainstream.\n\nI guess that perl solved a latent problem, which made it very popular.  What was that problem?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671807076.914879",
        "reply_count": 8,
        "reply_users_count": 5,
        "latest_reply": "1671839134.709889",
        "reply_users": [
            "U014WA16VNJ",
            "UKJGU23KP",
            "UE6EFEPTQ",
            "U013ZLJARC7",
            "U016VUZGUUQ"
        ],
        "replies": [
            {
                "user": "U014WA16VNJ",
                "ts": "1671807363.703569"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1671807693.989459"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1671807922.905449"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1671818044.751689"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1671818430.929689"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1671818686.360429"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1671818755.247999"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1671839134.709889"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h8Tz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Question:\n\nHow did REGEX jaibreak from Compiler Technology and become popular with non-compilerists?\n\nFirst guess: (1) grep, sed, awk, etc. broke the ice, and, (2) perl brought REGEX into the mainstream.\n\nI guess that perl solved a latent problem, which made it very popular.  What was that problem?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1671807363.703569",
        "client_msg_id": "23353115-A7A8-4C5B-83E1-E7DBCC498E77",
        "text": "I think part of the answer is that is that it’s representation as strings meant that it was supported by a near-ubiquitous infrastructure of plaintext which made it much easier to share, store, and use in everyday systems.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671807076.914879",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bxxr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think part of the answer is that is that "
                            },
                            {
                                "type": "text",
                                "text": "it’s"
                            },
                            {
                                "type": "text",
                                "text": " representation as strings meant that it was supported by a near-ubiquitous infrastructure of plaintext which made it much easier to share, store, and use in everyday systems."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT",
                    "U016VUZGUUQ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U02PUDETGRW",
        "type": "message",
        "ts": "1671807537.790279",
        "client_msg_id": "ca427d65-c726-4761-9d74-13e473611cf5",
        "text": "it’s an interesting one, but not that tool. I’m looking for one where user can put some component and press button Explore or whatever it reads, whcih will then click all possible controls and collect all possible states of the component",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "62d5c0083caf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-01\/2799368556017_62d5c0083caff61eeaaa_72.jpg",
            "first_name": "Alex",
            "real_name": "Alex Bender",
            "display_name": "Alex Bender",
            "team": "T5TCAFTA9",
            "name": "axbndr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671798042.383319",
        "parent_user_id": "U02PUDETGRW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uxj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it’s an interesting one, but not that tool. I’m looking for one where user can put some component and press button Explore or whatever it reads, whcih will then click all possible controls and collect all possible states of the component"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1671807693.989459",
        "client_msg_id": "41053142-DEEC-4CDF-8580-C4261FE23B6D",
        "text": "The real question for me is why isn’t grep\/regex search more commonly used by non-programmers? ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671807076.914879",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4w8t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The real question for me is why isn’t grep\/regex search more commonly used by non-programmers? "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1671807922.905449",
        "client_msg_id": "15a472b6-96e1-48a4-a6a4-8e1c45ae9fe7",
        "text": "It's funny how all declarative syntaxes (syntaxii?) acquire a reputation for fiendishness! Take CSS - coulda been a non-programmer language but it's notoriously hard to do simple things like line stuff up; take SQL - a team at my work had the \"SQL expert\" who everyone went to cos it was so bloody hard, and of course, the most notorious of all: regexes - if only there were a non-brain-twisting way of doing them!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671807076.914879",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0Avi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's funny how all declarative syntaxes (syntaxii?) acquire a reputation for fiendishness! Take CSS - coulda been a non-programmer language but it's notoriously hard to do simple things like line stuff up; take SQL - a team at my work had the \"SQL expert\" who everyone went to cos it was so bloody hard, and of course, the most notorious of all: regexes - if only there were a non-brain-twisting way of doing them!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT",
                    "U016VUZGUUQ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1671818044.751689",
        "edited": {
            "user": "U013ZLJARC7",
            "ts": "1671818059.000000"
        },
        "client_msg_id": "00541300-50ba-4b5a-bdc0-c53eee7ba045",
        "text": "<@UE6EFEPTQ> There are better ways of writing them that date back to the 1960s. This rant from Sussman captures the problems, and the implementation that follows shows one way of improving matters:\n<https:\/\/github.com\/bzinberg\/regex-combinator\/blob\/c49d6aba03d2a42c33b1bdafc7d5e5ded9d60eb8\/ps.txt#L33>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671807076.914879",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/2+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": " There are better ways of writing them that date back to the 1960s. This rant from Sussman captures the problems, and the implementation that follows shows one way of improving matters:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/bzinberg\/regex-combinator\/blob\/c49d6aba03d2a42c33b1bdafc7d5e5ded9d60eb8\/ps.txt#L33"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1671818430.929689",
        "client_msg_id": "FB1435E3-5791-4A84-87CE-46EEBB9D00D8",
        "text": "One part of that seems a bit off. The nice formalism is for regular expressions, which don’t support backreferences (one of the ways that modern “regexes” drifted from the original concept—towards more power, but more obscurity).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671807076.914879",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bLn2e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One part of that seems a bit off. The nice formalism is for regular expressions, which "
                            },
                            {
                                "type": "text",
                                "text": "don’t"
                            },
                            {
                                "type": "text",
                                "text": " support backreferences (one of the ways that modern “regexes” drifted from the original concept"
                            },
                            {
                                "type": "text",
                                "text": "—"
                            },
                            {
                                "type": "text",
                                "text": "towards more power, but more obscurity)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1671818686.360429",
        "client_msg_id": "E3D76A5D-F76D-45F7-9340-CFE6F39E43AC",
        "text": "Combinators are neat, and I wish they were better integrated as an option that plays nicely with existing libraries. The downside is that they give up the very powerful idea of regular expressions as a language, instead of just another API for doing string processing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671807076.914879",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F5X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Combinators are neat, and I wish they were better integrated as an option that plays nicely with existing libraries. The downside is that they give up the very powerful idea of regular expressions as a language, instead of just another API for doing string processing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1671818755.247999",
        "client_msg_id": "513B1669-C9AE-4822-BB5B-51FB1E9398A1",
        "text": "As a result, they’re most powerful for programmers who rarely use regular expressions, and programmers who want to do certain more abstract manipulations of regular expressions, but weak for non-programmer end users, and programmers who routinely use regular expressions.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671807076.914879",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hKc1b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As a result, "
                            },
                            {
                                "type": "text",
                                "text": "they’re"
                            },
                            {
                                "type": "text",
                                "text": " most powerful for programmers who rarely use regular expressions, and programmers who want to do certain more abstract manipulations of regular expressions, but weak for non-programmer end users, and programmers who routinely use regular expressions."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1671827730.398269",
        "client_msg_id": "25712321-792b-40b1-becf-03bccbe84909",
        "text": "try some terms like react or test here: <http:\/\/history.futureofcoding.org\/history\/links\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671798042.383319",
        "parent_user_id": "U02PUDETGRW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0n4zn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "try some terms like react or test here: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/history.futureofcoding.org\/history\/links\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1671827740.501829",
        "client_msg_id": "5780cb86-4e88-4d98-9911-3f60d27f1bd7",
        "text": "(takes a while to load or filter :smile:)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671798042.383319",
        "parent_user_id": "U02PUDETGRW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1uVzm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(takes a while to load or filter "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02PUDETGRW",
        "type": "message",
        "ts": "1671829622.285699",
        "client_msg_id": "740ac5bb-d62b-45b9-84df-2a1c72ed53b4",
        "text": "tried before contacting you in the first place haha. didn’t work out",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "62d5c0083caf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-01\/2799368556017_62d5c0083caff61eeaaa_72.jpg",
            "first_name": "Alex",
            "real_name": "Alex Bender",
            "display_name": "Alex Bender",
            "team": "T5TCAFTA9",
            "name": "axbndr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671798042.383319",
        "parent_user_id": "U02PUDETGRW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MfgI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "tried before contacting you in the first place haha. didn’t work out"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1671839134.709889",
        "client_msg_id": "b2b7fff8-f3ae-4d57-9f63-ef906ff6085f",
        "text": "Parsing is an essential part of any IO more complicated than accepting and echoing byte strings. Regex solves or helps solve parsing across a wide variety of problems.  I think that answers why it \"jailbroke\" from \"compilerists\": it was never just a compiler thing, everyone needs parsing. Once someone figured out the math, something like regex was inevitable.\n\nThe question of Perl's adoption, and by extension PCRE, is IMO a separate one, more historical than theoretical. I assume it's the usual right-place-right-time\/path-dependent\/worse-is-better type of story. Certainly Perl is more than PCRE, and was responsive to more problems than just parsing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1671807076.914879",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JR4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Parsing is an essential part of any IO more complicated than accepting and echoing byte strings. Regex solves or helps solve parsing across a wide variety of problems.  I think that answers why it \"jailbroke\" from \"compilerists\": it was never just a compiler thing, everyone needs parsing. Once someone figured out the math, something like regex was inevitable.\n\nThe question of Perl's adoption, and by extension PCRE, is IMO a separate one, more historical than theoretical. I assume it's the usual right-place-right-time\/path-dependent\/worse-is-better type of story. Certainly Perl is more than PCRE, and was responsive to more problems than just parsing."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]