[
    {
        "user": "U02FYPLHU67",
        "type": "message",
        "ts": "1633334218.036400",
        "edited": {
            "user": "U02FYPLHU67",
            "ts": "1633334378.000000"
        },
        "client_msg_id": "b595729c-3589-4b82-b39a-4d52b9c76b38",
        "text": "My expertise is in optimization problems, yes. Though I believe it has applications in languages for End-User Development, in special for data analysis tasks.\n\nA Jupyper-like notebook or spreadsheet-like environment could benefit from it, if the user provides hints about a desired outcome and the CP system generates a list of candidate solutions that satisfy them, possibly ordered by some quality criteria, instead of having to express a complete precise specification of the code needed to generate that outcome.\n\nThis approach may provide a more exploratory, iterative experience, adequate for early stage design, rather than a full-blown coding style needed for engineering a robust fully reusable program.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "da03e6d17065",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-28\/2536072635510_da03e6d17065db49a1d3_72.jpg",
            "first_name": "Diego",
            "real_name": "Diego Moya",
            "display_name": "dialmove",
            "team": "T5TCAFTA9",
            "name": "dialmove",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1633039394.032300",
        "parent_user_id": "U02FYPLHU67",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TLcq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My expertise is in optimization problems, yes. Though I believe it has applications in languages for End-User Development, in special for data analysis tasks.\n\nA Jupyper-like notebook or spreadsheet-like environment could benefit from it, if the user provides hints about a desired outcome and the CP system generates a list of candidate solutions that satisfy them, possibly ordered by some quality criteria, instead of having to express a complete precise specification of the code needed to generate that outcome.\n\nThis approach may provide a more exploratory, iterative experience, adequate for early stage design, rather than a full-blown coding style needed for engineering a robust fully reusable program."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1633336045.039800",
        "client_msg_id": "5B4EED77-C5B6-48AB-BB9E-8A2EF32DC421",
        "text": "Very interesting I’ll reply in the other thread ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1632414970.023600",
        "parent_user_id": "U6FBH9H26",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7n1Ca",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very interesting I’ll reply in the other thread "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1633336432.044500",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1633336679.000000"
        },
        "client_msg_id": "3E4F1033-1084-4D6B-8B7B-43076034A3DD",
        "text": "I notice that a lot of people in the constraint programming community propose things like that (using CP to approximate or “search” for a solution to a certain problem). But can’t you also see CP as a first-class programming paradigm? “Show me all values fulfilling these constraints, sorted by X” or “pick the minimum value satisfying Y” are pretty general programming primitives. I’m pretty sure you could build a practical language out of them.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1633039394.032300",
        "parent_user_id": "U02FYPLHU67",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9rkz8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I notice that a lot of people in the constraint programming community propose things like that (using CP to approximate or “search” for a solution to a certain problem). But can’t you also see CP as a first-class programming paradigm? “Show me all values fulfilling these constraints, sorted by X” or “pick the minimum value satisfying Y” are pretty general programming primitives. I’m pretty sure you could build a practical language out of them."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U02FYPLHU67",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1633336494.045600",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1633336505.000000"
        },
        "client_msg_id": "077F77A3-F3A8-4A2B-9A37-2BC1E61A64EA",
        "text": "The CP literature tends to position itself as only suited to domain-specific problems, and it baffles me. :neutral_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1633039394.032300",
        "parent_user_id": "U02FYPLHU67",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K0oW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The CP literature tends to position itself as only suited to domain-specific problems, and it baffles me. "
                            },
                            {
                                "type": "emoji",
                                "name": "neutral_face",
                                "unicode": "1f610"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQ11REJBW",
        "type": "message",
        "ts": "1633359148.049400",
        "client_msg_id": "68eac60a-f1ef-4ca6-959e-baa20078cf95",
        "text": "Hi, my name is Jamshid and I am from Afghanistan, living in Vancouver, Canada. I am a Software Developer, running a software development startup with 15 developers locally resident in Afghanistan. Since the past 7 years, I am also running CodeWeekend, Afghanistan’s first and largest developers community. We are currently planning for next cohort of our Coding Bootcamp for Afghan youth both inside Afghanistan and outside Afghanistan (specially recent refugees). It is a great pleasure to be here in this community.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g13ca8bf6a26",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/13ca8bf6a26814d21a281629dd2e7054.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "",
            "real_name": "Jamshid",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jamshidhashimi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PL1u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi, my name is Jamshid and I am from Afghanistan, living in Vancouver, Canada. I am a Software Developer, running a software development startup with 15 developers locally resident in Afghanistan. Since the past 7 years, I am also running CodeWeekend, Afghanistan’s first and largest developers community. We are currently planning for next cohort of our Coding Bootcamp for Afghan youth both inside Afghanistan and outside Afghanistan (specially recent refugees). It is a great pleasure to be here in this community."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "UCUSW7WVD",
                    "U01HKV85Y1J",
                    "UDQBTJ211",
                    "UC2A2ARPT",
                    "U013HU44GLS",
                    "U01A0KANUUU",
                    "UJ6LDMMN0",
                    "U0123H7JRDM",
                    "U02FYPLHU67",
                    "USH01JEDQ",
                    "U8A5MS6R1",
                    "U01JNTE35QS",
                    "U013ZLJARC7",
                    "UJBAJNFLK",
                    "U023V63MF6V",
                    "UN9SCH5RD",
                    "U85HCL7JP",
                    "UA14TGLTC",
                    "UFPPABQ7P",
                    "UBSMEUXAA",
                    "U01BEPTPY7M"
                ],
                "count": 21
            },
            {
                "name": "wave::skin-tone-4",
                "users": [
                    "UBN9AFS0N"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02FYPLHU67",
        "type": "message",
        "ts": "1633366980.051000",
        "edited": {
            "user": "U02FYPLHU67",
            "ts": "1633367447.000000"
        },
        "client_msg_id": "d20660e3-3090-44b8-9364-48909bd87716",
        "text": "<@UCGAK10LS> I think we speak that way because \"solutions\" is the general term for the list of results compatible with the asserted constraints, but there's no prior implication on where you apply this generic mechanism otherwise.\n\nAs for a paradigm based on CP languages, there _is_ such thing! Some constraint programming libraries like <https:\/\/github.com\/pothitos\/naxos|naxos> or <https:\/\/choco-solver.org\/|Choco-solver> integrate with imperative coding, and you can use them as a kind of oracle which you feed data into and from which you get lists of successful results. I find them somehow awkward though, sometimes it feels like you need to work with two isolated models of the domain problem, one in the classical environment and one inside the solver.\n\nConceptually I find it a bit simpler (still not _easy_, though) to use <https:\/\/en.wikipedia.org\/wiki\/Constraint_logic_programming|constraint logic programming>, i.e. prolog-like environments where you program through generate-and-test subroutines but it internally keeps track of what values it can skip, for being incompatible with the current search space state.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "da03e6d17065",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-28\/2536072635510_da03e6d17065db49a1d3_72.jpg",
            "first_name": "Diego",
            "real_name": "Diego Moya",
            "display_name": "dialmove",
            "team": "T5TCAFTA9",
            "name": "dialmove",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1633039394.032300",
        "parent_user_id": "U02FYPLHU67",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "GitHub - pothitos\/naxos: A C++ Constraint Programming Library",
                "title_link": "https:\/\/github.com\/pothitos\/naxos",
                "text": "A C++ Constraint Programming Library. Contribute to pothitos\/naxos development by creating an account on GitHub.",
                "fallback": "GitHub: GitHub - pothitos\/naxos: A C++ Constraint Programming Library",
                "image_url": "https:\/\/opengraph.githubassets.com\/77fddad2d2ea78c8dbee55ea784c16d51f3e83dd682be4810e5fd8deb42e394c\/pothitos\/naxos",
                "image_width": 500,
                "image_height": 250,
                "from_url": "https:\/\/github.com\/pothitos\/naxos",
                "image_bytes": 120582,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/pothitos\/naxos"
            },
            {
                "title": "Choco-solver",
                "title_link": "https:\/\/choco-solver.org\/",
                "text": "A Java library for Constraint Programming",
                "fallback": "Choco-solver",
                "from_url": "https:\/\/choco-solver.org\/",
                "service_icon": "https:\/\/choco-solver.org\/favicons\/apple-touch-icon-180x180.png",
                "service_name": "choco-solver.org",
                "id": 2,
                "original_url": "https:\/\/choco-solver.org\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p2uXx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " I think we speak that way because \"solutions\" is the general term for the list of results compatible with the asserted constraints, but there's no prior implication on where you apply this generic mechanism otherwise.\n\nAs for a paradigm based on CP languages, there "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " such thing! Some constraint programming libraries like "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/pothitos\/naxos",
                                "text": "naxos"
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/choco-solver.org\/",
                                "text": "Choco-solver"
                            },
                            {
                                "type": "text",
                                "text": " integrate with imperative coding, and you can use them as a kind of oracle which you feed data into and from which you get lists of successful results. I find them somehow awkward though, sometimes it feels like you need to work with two isolated models of the domain problem, one in the classical environment and one inside the solver.\n\nConceptually I find it a bit simpler (still not "
                            },
                            {
                                "type": "text",
                                "text": "easy",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", though) to use "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Constraint_logic_programming",
                                "text": "constraint logic programming"
                            },
                            {
                                "type": "text",
                                "text": ", i.e. prolog-like environments where you program through generate-and-test subroutines but it internally keeps track of what values it can skip, for being incompatible with the current search space state."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02FYPLHU67",
        "type": "message",
        "ts": "1633367871.052100",
        "edited": {
            "user": "U02FYPLHU67",
            "ts": "1633368155.000000"
        },
        "client_msg_id": "f120f87b-d429-4de4-b16f-abffdea0e2f8",
        "text": "What I'm curious about CP is its potential parnership with Machine Learning. The current AI renaissance is all about advanced statistical techniques, and they're getting awesome never-seen-before results in all kinds of artistic media or tasks requiring observation and adequate reactions. Yet it always feels like these techniques don't really understand the problem they're solving, they merely act by imitation of what they were trained on.\n\nClassic AI, the one based on logic inferences, is strong in that task of understanding the situation and giving precise answers. Yet it lacks intuition and has not been seen to be able to generate anything similar to creativity. I have often wondered if there would be a way to combine the strengths of both, but I know of no research that has attempted to do that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "da03e6d17065",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-28\/2536072635510_da03e6d17065db49a1d3_72.jpg",
            "first_name": "Diego",
            "real_name": "Diego Moya",
            "display_name": "dialmove",
            "team": "T5TCAFTA9",
            "name": "dialmove",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1633039394.032300",
        "parent_user_id": "U02FYPLHU67",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XWE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What I'm curious about CP is its potential parnership with Machine Learning. The current AI renaissance is all about advanced statistical techniques, and they're getting awesome never-seen-before results in all kinds of artistic media or tasks requiring observation and adequate reactions. Yet it always feels like these techniques don't really understand the problem they're solving, they merely act by imitation of what they were trained on.\n\nClassic AI, the one based on logic inferences, is strong in that task of understanding the situation and giving precise answers. Yet it lacks intuition and has not been seen to be able to generate anything similar to creativity. I have often wondered if there would be a way to combine the strengths of both, but I know of no research that has attempted to do that."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02FYPLHU67",
        "type": "message",
        "ts": "1633369306.052600",
        "client_msg_id": "75e02a39-791e-48ff-87fe-c097c9cad629",
        "text": "Maybe this last though is interesting for the \"thinking together\"...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "da03e6d17065",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-28\/2536072635510_da03e6d17065db49a1d3_72.jpg",
            "first_name": "Diego",
            "real_name": "Diego Moya",
            "display_name": "dialmove",
            "team": "T5TCAFTA9",
            "name": "dialmove",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1633039394.032300",
        "parent_user_id": "U02FYPLHU67",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FZPe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe this last though is interesting for the \"thinking together\"..."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UDQBTJ211"
                ],
                "count": 1
            }
        ]
    }
]