[
    {
        "user": "U03LT7540HZ",
        "type": "message",
        "ts": "1659770060.561389",
        "client_msg_id": "690ee405-63d8-4dc9-9049-5f8c402bafc0",
        "text": "What is dead code?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "754abc97c5ce",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-06-22\/3731055996048_754abc97c5ce87f6c99f_72.jpg",
            "first_name": "Tony",
            "real_name": "Tony Worm",
            "display_name": "Tony Worm",
            "team": "T5TCAFTA9",
            "name": "tony066",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1659731101.023949",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Co2iy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What is dead code?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1659776410.861529",
        "client_msg_id": "dc4f3267-c84d-4c0f-87fa-1c5d4689bf19",
        "text": "dead-coding is the opposite of live-coding",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1659731101.023949",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vUV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "dead-coding is the opposite of live-coding"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1659791451.346769",
        "client_msg_id": "334e79e9-8d57-4299-b59c-e95a550d7b0b",
        "text": "<@U03LT7540HZ> I'd define a live-coding language as a language that allows building and changing code incrementally at the level of the smallest autonomous unit, typically a function. And that requires that the language accept incomplete and\/or inconsistent program state, at least temporarily, which is why most (all?) statically typed languages are no good for live coding.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1659731101.023949",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zXFkp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U03LT7540HZ"
                            },
                            {
                                "type": "text",
                                "text": " I'd define a live-coding language as a language that allows building and changing code incrementally at the level of the smallest autonomous unit, typically a function. And that requires that the language accept incomplete and\/or inconsistent program state, at least temporarily, which is why most (all?) statically typed languages are no good for live coding."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1659798407.342329",
        "client_msg_id": "fbf6e6d5-dffc-4af8-b787-6843fa83c861",
        "text": "I would say it has less to do with type discipline than with having the compiler with you so you can interactively build up your program while it's running, inspect values, &amp;c. (See the example below of doing this sort of thing with OCaml.) That said, <https:\/\/en.wikipedia.org\/wiki\/Nominal_type_system|nominal> type systems do make things harder than using <https:\/\/en.wikipedia.org\/wiki\/Structural_type_system|structural> ones — and not just for live coding! :slightly_smiling_face:\n<https:\/\/global.discourse-cdn.com\/standard11\/uploads\/ocaml\/original\/2X\/5\/53856f555462c98314f99209cb3a145a02181428.webp>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1659731101.023949",
        "parent_user_id": "UAJKEBGP8",
        "attachments": [
            {
                "from_url": "https:\/\/global.discourse-cdn.com\/standard11\/uploads\/ocaml\/original\/2X\/5\/53856f555462c98314f99209cb3a145a02181428.webp",
                "image_url": "https:\/\/global.discourse-cdn.com\/standard11\/uploads\/ocaml\/original\/2X\/5\/53856f555462c98314f99209cb3a145a02181428.webp",
                "image_width": 838,
                "image_height": 706,
                "image_bytes": 918454,
                "id": 1,
                "original_url": "https:\/\/global.discourse-cdn.com\/standard11\/uploads\/ocaml\/original\/2X\/5\/53856f555462c98314f99209cb3a145a02181428.webp",
                "fallback": "838x706px image"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NXA=h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would say it has less to do with type discipline than with having the compiler with you so you can interactively build up your program while it's running, inspect values, &c. (See the example below of doing this sort of thing with OCaml.) That said, "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Nominal_type_system",
                                "text": "nominal"
                            },
                            {
                                "type": "text",
                                "text": " type systems do make things harder than using "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Structural_type_system",
                                "text": "structural"
                            },
                            {
                                "type": "text",
                                "text": " ones — and not just for live coding! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/global.discourse-cdn.com\/standard11\/uploads\/ocaml\/original\/2X\/5\/53856f555462c98314f99209cb3a145a02181428.webp"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1659800502.689979",
        "client_msg_id": "d9a7c7f5-e102-4c84-b6c4-23936fad4162",
        "text": "Relatedly, it's wild to me that so-called visual programming, which started off _extremely_ live, is now just as commonly not live as it is live. Talk about screwing up a good thing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1659731101.023949",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TZcH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Relatedly, it's wild to me that so-called visual programming, which started off "
                            },
                            {
                                "type": "text",
                                "text": "extremely",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " live, is now just as commonly not live as it is live. Talk about screwing up a good thing."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cry",
                "users": [
                    "U013ZLJARC7",
                    "UAJKEBGP8",
                    "UJBAJNFLK",
                    "UA14TGLTC",
                    "UML4ZEKDK",
                    "U023V63MF6V"
                ],
                "count": 6
            }
        ]
    },
    {
        "user": "U03LT7540HZ",
        "type": "message",
        "ts": "1659823129.848759",
        "client_msg_id": "e7901815-d1c9-435a-b775-fa742440cdda",
        "text": "My take is that it's all about tooling and your setup. Most of these things are achievable to a productive state without being absolute about how that is done. A fast compiler and a solid debugger can effectively create the same experience.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "754abc97c5ce",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-06-22\/3731055996048_754abc97c5ce87f6c99f_72.jpg",
            "first_name": "Tony",
            "real_name": "Tony Worm",
            "display_name": "Tony Worm",
            "team": "T5TCAFTA9",
            "name": "tony066",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1659731101.023949",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jwu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My take is that it's all about tooling and your setup. Most of these things are achievable to a productive state without being absolute about how that is done. A fast compiler and a solid debugger can effectively create the same experience."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03LT7540HZ",
        "type": "message",
        "ts": "1659823557.998539",
        "edited": {
            "user": "U03LT7540HZ",
            "ts": "1659823582.000000"
        },
        "client_msg_id": "4c2abd22-4231-4d5e-b35f-d122b419ed06",
        "text": "Though I've always wondered how we might move beyond the file for developer experience... :thinking_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "754abc97c5ce",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-06-22\/3731055996048_754abc97c5ce87f6c99f_72.jpg",
            "first_name": "Tony",
            "real_name": "Tony Worm",
            "display_name": "Tony Worm",
            "team": "T5TCAFTA9",
            "name": "tony066",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1659731101.023949",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M021",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Though I've always wondered how we might move beyond the file for developer experience... "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1659839839.671699",
        "client_msg_id": "722561fb-0aaf-4eba-8ca1-85a157ad4505",
        "text": "- publications: Microsoft Word\n- videos: “scrubbing” ; iMovie, Davinci Resolve, etc.\n- music: DAWs, “scrubbing”, live-editing of “automation”.\n- musical performance: Ableton Live, sonicPI, etc.\n- drum sequencing: iterative, layered recording in drum loop editors\n- ascii Art: vscode, etc., colorization\n- mind-maps: Kinopio, etc.\n- accounting artefacts: spreadsheets\n- robots: industrial robotic arm training\n- text: emacs\n- text: Apple Dictation\n- programs: Lisp, REPLs, etc.\n- “visualization” of CPU operation: single-stepping debuggers",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1659731101.023949",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5DQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "- publications: Microsoft Word\n- videos: “scrubbing” ; iMovie, Davinci Resolve, etc.\n- music: DAWs, “scrubbing”, live-editing of “automation”.\n- musical performance: Ableton Live, sonicPI, etc.\n- drum sequencing: iterative, layered recording in drum loop editors\n- ascii Art: vscode, etc., colorization\n- mind-maps: Kinopio, etc.\n- accounting artefacts: spreadsheets\n- robots: industrial robotic arm training\n- text: emacs\n- text: Apple Dictation\n- programs: Lisp, REPLs, etc.\n- “visualization” of CPU operation: single-stepping debuggers"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJNJQD2AC"
                ],
                "count": 1
            }
        ]
    }
]