[
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1569003927.020800",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1569004179.000000"
        },
        "client_msg_id": "71b41f49-02a1-4be2-a029-ba783729bd63",
        "text": "A fairly timeless syntax for programming in raw machine code: <https:\/\/mastodon.social\/@akkartik\/102825992961303855>. It's for a fixed processor, but the general approach (numbers, metadata, strings, tests, blocks) should apply to any processor. It takes little code to support, and provides decent ergonomics. Good power to weight ratio, if I do say so myself.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "Mastodon",
                "title": "Kartik Agaram (@akkartik@mastodon.social)",
                "title_link": "https:\/\/mastodon.social\/@akkartik\/102825992961303855",
                "text": "Attached: 1 image *Update on the Mu computer* We now have structured control flow (with goto statements :joy: ) Compare this screenshot with the ones in the previous message of this thread. At this point I think I've climbed as far up the ladder of abstractions as I can with just syntax sugar. The next step up will be a new language. It'll still look the same: registers, curly braces, one operation to a line. But operations won't be x86 opcodes anymore. Registers and operands will have types. @rain@niu.moe @vertigo",
                "fallback": "Mastodon: Kartik Agaram (@akkartik@mastodon.social)",
                "image_url": "https:\/\/files.mastodon.social\/media_attachments\/files\/019\/036\/267\/original\/2040231dd0aab084.png",
                "image_width": 195,
                "image_height": 250,
                "from_url": "https:\/\/mastodon.social\/@akkartik\/102825992961303855",
                "image_bytes": 215491,
                "service_icon": "https:\/\/mastodon.social\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/mastodon.social\/@akkartik\/102825992961303855"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RPUcf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A fairly timeless syntax for programming in raw machine code: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/mastodon.social\/@akkartik\/102825992961303855"
                            },
                            {
                                "type": "text",
                                "text": ". It's for a fixed processor, but the general approach (numbers, metadata, strings, tests, blocks) should apply to any processor. It takes little code to support, and provides decent ergonomics. Good power to weight ratio, if I do say so myself."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "hushed",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    }
]