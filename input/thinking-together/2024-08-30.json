[
    {
        "user": "U018S42NMMM",
        "type": "message",
        "ts": "1725007782.404059",
        "edited": {
            "user": "U018S42NMMM",
            "ts": "1725008016.000000"
        },
        "client_msg_id": "4f4a33d7-f171-4b9b-927f-0e08ec25f94d",
        "text": "I've been thinking about how neurosymbolic AI might be achieved. The first problem is that of memory\/knowledge. Triple stores are often recommended. But I am failing to see how triples are THE definitive choice for knowledge representation.\n\nThe classic example would be: How to store the fact \"Bob's age is 23yrs\". This maps to the Entity-Attribute-Value or Subject-Predicate-Object pattern and the triple `(Bob, age, 23yrs)` works.\n\nBut on one hand, even a 2-store can be used:\n```(Bob, Bob's age)\n(Bob's age, 23yrs)```\nThis has more layers of indirections, yes. But the primitives become simpler.\nOn the other hand, if the fact was \"Bob bought this camera in Singapore for 100$\", the same layers of indirections show up in triple stores as well.\n\nArbitrary knowledge seems multidimensional (time, place, context etc etc). Is there a reason to believe that triple stores achieve the best tradeoff between simplicity and expressivity?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "972d4c887a7c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-10\/4782052692709_972d4c887a7c689aae4a_72.jpg",
            "first_name": "",
            "real_name": "Nilesh Trivedi",
            "display_name": "Nilesh Trivedi",
            "team": "T5TCAFTA9",
            "name": "nilesh.tr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725007782.404059",
        "reply_count": 16,
        "reply_users_count": 9,
        "latest_reply": "1725273951.339509",
        "reply_users": [
            "U018S42NMMM",
            "UBN9AFS0N",
            "UGWUJUZHT",
            "UQ706GB9U",
            "U05PY5AQCA2",
            "U8A5MS6R1",
            "U07JALQGJRG",
            "U02E4DAQGSZ",
            "U02U0AS3J49"
        ],
        "replies": [
            {
                "user": "U018S42NMMM",
                "ts": "1725009319.266699"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1725010417.586909"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1725019214.072349"
            },
            {
                "user": "UQ706GB9U",
                "ts": "1725030240.323159"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1725050240.716419"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1725059582.386479"
            },
            {
                "user": "U018S42NMMM",
                "ts": "1725063975.441209"
            },
            {
                "user": "U07JALQGJRG",
                "ts": "1725070119.380189"
            },
            {
                "user": "U018S42NMMM",
                "ts": "1725071057.066029"
            },
            {
                "user": "U07JALQGJRG",
                "ts": "1725072783.425879"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1725072836.096109"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1725073013.101369"
            },
            {
                "user": "U018S42NMMM",
                "ts": "1725073470.836229"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1725089239.744069"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1725122398.627819"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1725273951.339509"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tO37z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been thinking about how neurosymbolic AI might be achieved. The first problem is that of memory\/knowledge. Triple stores are often recommended. But I am failing to see how triples are THE definitive choice for knowledge representation.\n\nThe classic example would be: How to store the fact \"Bob's age is 23yrs\". This maps to the Entity-Attribute-Value or Subject-Predicate-Object pattern and the triple "
                            },
                            {
                                "type": "text",
                                "text": "(Bob, age, 23yrs)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " works.\n\nBut on one hand, even a 2-store can be used:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Bob, Bob's age)\n(Bob's age, 23yrs)"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This has more layers of indirections, yes. But the primitives become simpler.\nOn the other hand, if the fact was \"Bob bought this camera in Singapore for 100$\", the same layers of indirections show up in triple stores as well.\n\nArbitrary knowledge seems multidimensional (time, place, context etc etc). Is there a reason to believe that triple stores achieve the best tradeoff between simplicity and expressivity?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "blue_heart",
                "users": [
                    "U07JALQGJRG"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U018S42NMMM",
        "type": "message",
        "ts": "1725009319.266699",
        "client_msg_id": "2c5f4c51-a1da-4a4a-a5e2-c71d5a6da047",
        "text": "The alternative to triplestores that I am considering is Metagraphs as explained here by OpenCOG\/Atomspace: <https:\/\/github.com\/opencog\/atomspace\/blob\/master\/opencog\/sheaf\/docs\/ram-cpu.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "972d4c887a7c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-10\/4782052692709_972d4c887a7c689aae4a_72.jpg",
            "first_name": "",
            "real_name": "Nilesh Trivedi",
            "display_name": "Nilesh Trivedi",
            "team": "T5TCAFTA9",
            "name": "nilesh.tr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725007782.404059",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lnj6O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The alternative to triplestores that I am considering is Metagraphs as explained here by OpenCOG\/Atomspace: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/opencog\/atomspace\/blob\/master\/opencog\/sheaf\/docs\/ram-cpu.pdf"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1725010417.586909",
        "client_msg_id": "5caca78e-321d-43db-b824-e7110b8231d9",
        "text": "is the expert system winter over? :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725007782.404059",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QOACC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "is the expert system winter over? "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "grin",
                "users": [
                    "U018S42NMMM",
                    "UE6EFEPTQ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1725019214.072349",
        "client_msg_id": "084412c6-c58d-46e5-b211-fdf709133ea1",
        "text": "I concluded that triples are more practical for what I am concerned with <https:\/\/guitarvydas.github.io\/2021\/03\/16\/Triples.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725007782.404059",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hWYNM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I concluded that triples are more practical for what I am concerned with "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/guitarvydas.github.io\/2021\/03\/16\/Triples.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U018S42NMMM"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UQ706GB9U",
        "type": "message",
        "ts": "1725030240.323159",
        "client_msg_id": "6f178b90-5e3d-4cec-ab98-6c2e5c848f5f",
        "text": "Replace the text labels with token vectors. :thinking_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g80bf3c31da6",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/80bf3c31da6a1f3f44e68bfe227fd35d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "George",
            "real_name": "George Campbell",
            "display_name": "George",
            "team": "T5TCAFTA9",
            "name": "abersnaze",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725007782.404059",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Yww0h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Replace the text labels with token vectors. "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1725050240.716419",
        "client_msg_id": "B952321A-43B2-436E-97A8-4C9B2450EEF0",
        "text": "Triple stores are appealing because you can refer to a well-studied logic (Description Logic). This tells us that triple stores have a very good expressiveness:computational efficiency tradeoff.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725007782.404059",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4sb1p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Triple stores are appealing because you can refer to a well-studied logic (Description Logic). This tells us that triple stores have a very good expressiveness:computational efficiency tradeoff."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "astonished",
                "users": [
                    "U018S42NMMM"
                ],
                "count": 1
            },
            {
                "name": "blue_heart",
                "users": [
                    "U07JALQGJRG"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1725059582.386479",
        "client_msg_id": "802dd294-0810-4f79-98f5-498228d26dcd",
        "text": "To take your specific example, in a triple store if you add `(Jane, age, 25yrs)`, it is clear that `age` represents the same attribute as the `age` in Bob's triple. It is not clear to me how this equivalence will be represented in the 2-store example.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725007782.404059",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e8KU3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To take your specific example, in a triple store if you add "
                            },
                            {
                                "type": "text",
                                "text": "(Jane, age, 25yrs)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", it is clear that "
                            },
                            {
                                "type": "text",
                                "text": "age",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " represents the same attribute as the "
                            },
                            {
                                "type": "text",
                                "text": "age",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in Bob's triple. It is not clear to me how this equivalence will be represented in the 2-store example."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U018S42NMMM",
        "type": "message",
        "ts": "1725063975.441209",
        "edited": {
            "user": "U018S42NMMM",
            "ts": "1725064324.000000"
        },
        "client_msg_id": "19cf6f07-a8d9-4fb1-9a53-86a5001def03",
        "text": "<@U05PY5AQCA2> That does explain a lot. Triples naturally map binary relations. \"X is R-related to Y\" becomes (X, R, Y). It's just that I was expecting higher arity relations (ternary and above) to be as common and important: \"X, Y and Z are R-related\" would map most easily to the quad (R, X, Y, Z).\nThe simplest example being sentences describing binary _operations_: \"3 plus 4 is 7\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "972d4c887a7c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-10\/4782052692709_972d4c887a7c689aae4a_72.jpg",
            "first_name": "",
            "real_name": "Nilesh Trivedi",
            "display_name": "Nilesh Trivedi",
            "team": "T5TCAFTA9",
            "name": "nilesh.tr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725007782.404059",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GMOd5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U05PY5AQCA2"
                            },
                            {
                                "type": "text",
                                "text": " That does explain a lot. Triples naturally map binary relations. \"X is R-related to Y\" becomes (X, R, Y). It's just that I was expecting higher arity relations (ternary and above) to be as common and important: \"X, Y and Z are R-related\" would map most easily to the quad (R, X, Y, Z).\nThe simplest example being sentences describing binary "
                            },
                            {
                                "type": "text",
                                "text": "operations",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": \"3 plus 4 is 7\"."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U07JALQGJRG",
        "type": "message",
        "ts": "1725070119.380189",
        "client_msg_id": "fe167578-faaa-4f17-8696-a8b923ed00e3",
        "text": "I may be naive, but it makes sense to me with analogy to language structure, like Subject Verb Object. There's a lot more you can say that way than with just Subject Verb.\n\nOr maybe it makes more sense as Object Function Result. `(Jane, getAge, 25yrs)`",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7744be691cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7744be691cc012a06105570b02701e0c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Kyle",
            "real_name": "Kyle Beechly",
            "display_name": "Kyle Beechly",
            "team": "T5TCAFTA9",
            "name": "contact533",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725007782.404059",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K2Pbp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I may be naive, but it makes sense to me with analogy to language structure, like Subject Verb Object. There's a lot more you can say that way than with just Subject Verb.\n\nOr maybe it makes more sense as Object Function Result. "
                            },
                            {
                                "type": "text",
                                "text": "(Jane, getAge, 25yrs)",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U018S42NMMM",
        "type": "message",
        "ts": "1725071057.066029",
        "client_msg_id": "64f778c1-da1d-40d0-816d-eae5109af2fb",
        "text": "<@U07JALQGJRG> The question is: If we want expressiveness, why stop at 3? Why not 4 or 5? For example, support adverbs, adjectives, temporality, context etc natively.\n\nAnd if we want simplicity, why stop at 3? Why not 2? As in lisp, once a system supports pairs, we can construct linked lists, dictionaries, trees and graphs etc out of pairs quite easily.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "972d4c887a7c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-10\/4782052692709_972d4c887a7c689aae4a_72.jpg",
            "first_name": "",
            "real_name": "Nilesh Trivedi",
            "display_name": "Nilesh Trivedi",
            "team": "T5TCAFTA9",
            "name": "nilesh.tr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725007782.404059",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fRhoy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U07JALQGJRG"
                            },
                            {
                                "type": "text",
                                "text": " The question is: If we want expressiveness, why stop at 3? Why not 4 or 5? For example, support adverbs, adjectives, temporality, context etc natively.\n\nAnd if we want simplicity, why stop at 3? Why not 2? As in lisp, once a system supports pairs, we can construct linked lists, dictionaries, trees and graphs etc out of pairs quite easily."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U07JALQGJRG",
        "type": "message",
        "ts": "1725072783.425879",
        "edited": {
            "user": "U07JALQGJRG",
            "ts": "1725072947.000000"
        },
        "client_msg_id": "6cfa3bc8-fd2e-4e9e-a45a-b4a224501b49",
        "text": "<@U018S42NMMM> Why do linguists only consider Subject, Object, and Verb when composing the <https:\/\/en.wikipedia.org\/wiki\/Word_order|constituent order> of a clause? I'm by no means an expert here, and don't know offhand what truly separates nouns and verbs from modifiers and adverbials to make this distinction, but there's something here that I resonate with.\n\nAs for why three and not two, in analogy to linguistics, how much can we say with only one Noun and a Verb? We can say \"Alice hugged,\" but not \"Alice hugged Bob.\" We can say \"Bob was hugged,\" but how do we convey the relationship between Alice and Bob? I think it can be done, but the complexity of the structure to make that happen might outweigh the complexity of adding the third aspect.\n\nNot claiming to have an answer here, just sharing my raw feels in the hope it might help point to a greater truth",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7744be691cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7744be691cc012a06105570b02701e0c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Kyle",
            "real_name": "Kyle Beechly",
            "display_name": "Kyle Beechly",
            "team": "T5TCAFTA9",
            "name": "contact533",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725007782.404059",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QTUFZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U018S42NMMM"
                            },
                            {
                                "type": "text",
                                "text": " Why do linguists only consider Subject, Object, and Verb when composing the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Word_order",
                                "text": "constituent order"
                            },
                            {
                                "type": "text",
                                "text": " of a clause? I'm by no means an expert here, and don't know offhand what truly separates nouns and verbs from modifiers and adverbials to make this distinction, but there's something here that I resonate with.\n\nAs for why three and not two, in analogy to linguistics, how much can we say with only one Noun and a Verb? We can say \"Alice hugged,\" but not \"Alice hugged Bob.\" We can say \"Bob was hugged,\" but how do we convey the relationship between Alice and Bob? I think it can be done, but the complexity of the structure to make that happen might outweigh the complexity of adding the third aspect.\n\nNot claiming to have an answer here, just sharing my raw feels in the hope it might help point to a greater truth"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U018S42NMMM"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1725072836.096109",
        "client_msg_id": "53656C38-B111-4091-9090-F0B656A7F3A0",
        "text": "The triple can be considered: relation-column, id, value.\n\nSo if you had a table of persons: name, dob, zip code.\n\nThen you can have triples (person-name, id, name); (person-dob, id, dob); (person-zip, id, zip).\n\nThis is equivalent to a table where all the non-pk columns are nullable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725007782.404059",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IDbY\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The triple can be considered: relation-column, id, value.\n\nSo if you had a table of persons: name, dob, zip code.\n\nThen you can have triples (person-name, id, name); (person-dob, id, dob); (person-zip, id, zip).\n\nThis is equivalent to a table where all the non-pk columns are nullable."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "blue_heart",
                "users": [
                    "U07JALQGJRG",
                    "U018S42NMMM"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1725073013.101369",
        "edited": {
            "user": "U05PY5AQCA2",
            "ts": "1725073025.000000"
        },
        "client_msg_id": "0A4AAFDB-2E35-4C13-AE32-8C18F92696D6",
        "text": "If you flip that around, relational purists often prefer a relational model where you can’t store null values, and you just do this sort of thing to represent optional values.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725007782.404059",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RTPiO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you flip that around, relational purists often prefer a relational model where you can’t store null values, and you just do this sort of thing to represent optional values."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U018S42NMMM",
        "type": "message",
        "ts": "1725073470.836229",
        "client_msg_id": "332915ef-7ca4-4d59-acec-0a4b6b42cfef",
        "text": "Yeah, triples are perfect for describing standalone objects. But not so much for describing rich relations between the objects.\n\"X is parent of Y\" is fine.\n\"City1 is 100km far from City2\" requires breaking it down into multiple triples, something like:\n\n```Distance1 is_from City1\nDistance1 is_to City2\nDistance1 has_measure 100km```\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "972d4c887a7c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-10\/4782052692709_972d4c887a7c689aae4a_72.jpg",
            "first_name": "",
            "real_name": "Nilesh Trivedi",
            "display_name": "Nilesh Trivedi",
            "team": "T5TCAFTA9",
            "name": "nilesh.tr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725007782.404059",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sd04k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, triples are perfect for describing standalone objects. But not so much for describing rich relations between the objects.\n\"X is parent of Y\" is fine.\n\"City1 is 100km far from City2\" requires breaking it down into multiple triples, something like:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Distance1 is_from City1\nDistance1 is_to City2\nDistance1 has_measure 100km"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    }
]