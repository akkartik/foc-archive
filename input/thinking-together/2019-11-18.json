[
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1574064268.499400",
        "client_msg_id": "44434bb0-ca75-44a6-8994-1497b67adb25",
        "text": "Ultorg is a wonderful little product. As a long time user of Filemaker Pro which is one of the longest-running and best entry-level databases on the market, i can numerous advantages for people who are exploring data and want to stay inside the spreadsheet paradigm. Where Filemaker has some advantages is their wonderful form design system, which has many graphical aids, and makes it easy to create very nice looking forms with lots of input validation. But for freeform queries Ultorg kicks FMPro's butt, and i can see a very lively market for that kind of product. There is a lot of data analysis that needs to be done, and the automatic report generation tools is fantastic.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574045798.499000",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LW=y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ultorg is a wonderful little product. As a long time user of Filemaker Pro which is one of the longest-running and best entry-level databases on the market, i can numerous advantages for people who are exploring data and want to stay inside the spreadsheet paradigm. Where Filemaker has some advantages is their wonderful form design system, which has many graphical aids, and makes it easy to create very nice looking forms with lots of input validation. But for freeform queries Ultorg kicks FMPro's butt, and i can see a very lively market for that kind of product. There is a lot of data analysis that needs to be done, and the automatic report generation tools is fantastic."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1574065184.499600",
        "client_msg_id": "3eeae1f2-7a58-4cb5-b0bc-c6530bdb0a30",
        "text": "My Beads system uses distributed objects via a subscription model. I have published an example of the client\/server code for 12 simultaneous games of tictactoe. Each of the clients can see the other games being played, and join in multiple games at once. The server  holds the ultimate source of truth, and the clients subscribe to some portion of the master graph database. No explicit messages in my system, and all clients are guaranteed a consistent state at all times. A lot of people want to make multiplayer games and systems, and one key thing i am after is being able to debug those systems easily. I am envisioning time travel debugging of the client and the server at the same time. It is a fascinating subject.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1573925494.455000",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NdU9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My Beads system uses distributed objects via a subscription model. I have published an example of the client\/server code for 12 simultaneous games of tictactoe. Each of the clients can see the other games being played, and join in multiple games at once. The server  holds the ultimate source of truth, and the clients subscribe to some portion of the master graph database. No explicit messages in my system, and all clients are guaranteed a consistent state at all times. A lot of people want to make multiplayer games and systems, and one key thing i am after is being able to debug those systems easily. I am envisioning time travel debugging of the client and the server at the same time. It is a fascinating subject."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1574067112.499900",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1574067194.000000"
        },
        "client_msg_id": "a5773dd4-651d-4957-acce-baf40274622f",
        "text": "What <@UEQ6M68H0> said also applies to Onex and the Object Network*.\nThis keeps happening, I guess we're arch rivals! :smile:\n\n(* apart from the time travel debugging bit)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1573925494.455000",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3ArBd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What "
                            },
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " said also applies to Onex and the Object Network*.\nThis keeps happening, I guess we're arch rivals! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "\n\n(* apart from the time travel debugging bit)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1574076235.000300",
        "client_msg_id": "01dd1b1c-4d1d-401e-91f3-73ac306732f4",
        "text": "(* although that has got me thinking about how much object version history I save.. hmm..)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1573925494.455000",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=RJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(* although that has got me thinking about how much object version history I save.. hmm..)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK22Z72L8",
        "type": "message",
        "ts": "1574085864.000600",
        "client_msg_id": "d9f5d9bf-720c-4ec3-a494-da61b1694f70",
        "text": "When I was at Uni I used to socialise with a medical doctor that was working on his MD. He was doing clinical research and curating a data set using Microsoft Access. It’s interesting to see how non-programmers look at this kind of problem. He said something like “Building databases is fun, and productive… until you put too much in and it’s all tangled up … and you can’t remember how you put it together…”",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g19534d8a577",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b19534d8a57758546bdc252eefecc432.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Dafydd",
            "real_name": "Dafydd Rees",
            "display_name": "daf",
            "team": "T5TCAFTA9",
            "name": "daf",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574045798.499000",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tjFi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When I was at Uni I used to socialise with a medical doctor that was working on his MD. He was doing clinical research and curating a data set using Microsoft Access. It’s interesting to see how non-programmers look at this kind of problem. He said something like “Building databases is fun, and productive… until you put too much in and it’s all tangled up … and you can’t remember how you put it together…”"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK22Z72L8",
        "type": "message",
        "ts": "1574085934.000800",
        "client_msg_id": "0f0db7d4-fd05-4a04-a314-0a70cbde66ab",
        "text": "He made a throwaway remark that just happened to summarise the problems of software development at large but especially that of self-taught developers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g19534d8a577",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b19534d8a57758546bdc252eefecc432.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Dafydd",
            "real_name": "Dafydd Rees",
            "display_name": "daf",
            "team": "T5TCAFTA9",
            "name": "daf",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574045798.499000",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3N2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "He made a throwaway remark that just happened to summarise the problems of software development at large but especially that of self-taught developers."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1574100925.005200",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1574100980.000000"
        },
        "client_msg_id": "62ed11e2-9918-4763-a892-0baa1cde8759",
        "text": "This has probably been posted before but reposting because this always impresses me. I believe this note is from Alan Kay:\n\n&gt; This system --including everything -- \"OS\", SDK, Media, GUI, Tools, and the content -- is about 10,000 lines of Smalltalk-78 code sitting on top of about 6K bytes of machine code (the latter was emulated to get the whole system going).\n\nThe software mentioned has a windowing system, multiple desktops, IDE\/code editing and running, paint, animation, document editing\/viewing, gesture recognition). 16K lines on top of hardware.. how is this possible? (What am I missing?)\n\nSource: <https:\/\/news.ycombinator.com\/item?id=19722205>\n\nLink to demo: <https:\/\/www.youtube.com\/watch?v=AnrlSqtpOkw&amp;t=135s>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "reply_count": 22,
        "reply_users_count": 9,
        "latest_reply": "1574450296.111900",
        "reply_users": [
            "U8A5MS6R1",
            "UPMFG2571",
            "UGWUJUZHT",
            "U5STGTB3J",
            "UNBPP291C",
            "UJBAJNFLK",
            "UJN1TAYEQ",
            "UHWC9PXBL",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "U8A5MS6R1",
                "ts": "1574100973.005400"
            },
            {
                "user": "UPMFG2571",
                "ts": "1574109726.006000"
            },
            {
                "user": "UPMFG2571",
                "ts": "1574109731.006200"
            },
            {
                "user": "UPMFG2571",
                "ts": "1574109736.006500"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1574114930.006900"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1574148073.022200"
            },
            {
                "user": "UNBPP291C",
                "ts": "1574155613.022700"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1574165939.029800"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1574179437.030000"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1574183702.036700"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1574186175.037300"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1574192789.074400"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1574194333.074800"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1574195177.075000"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1574204193.080000"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1574214563.084000"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1574278538.085600"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1574278750.085900"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1574284112.086300"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1574285825.086600"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1574287534.086900"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1574450296.111900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ka5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This has probably been posted before but reposting because this always impresses me. I believe this note is from Alan Kay:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This system --including everything -- \"OS\", SDK, Media, GUI, Tools, and the content -- is about 10,000 lines of Smalltalk-78 code sitting on top of about 6K bytes of machine code (the latter was emulated to get the whole system going)."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nThe software mentioned has a windowing system, multiple desktops, IDE\/code editing and running, paint, animation, document editing\/viewing, gesture recognition). 16K lines on top of hardware.. how is this possible? (What am I missing?)\n\nSource: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=19722205"
                            },
                            {
                                "type": "text",
                                "text": "\n\nLink to demo: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=AnrlSqtpOkw&amp;t=135s",
                                "text": "https:\/\/www.youtube.com\/watch?v=AnrlSqtpOkw&t=135s"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1574100973.005400",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1574100983.000000"
        },
        "client_msg_id": "43ad617d-fb2c-4868-98b6-5a90be1532be",
        "text": "Here's live editing of an animation in motion by runtime coupling of the paint view and the animation view: <https:\/\/youtu.be\/AnrlSqtpOkw?t=609>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9c\/En",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's live editing of an animation in motion by runtime coupling of the paint view and the animation view: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/AnrlSqtpOkw?t=609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMFG2571",
        "type": "message",
        "ts": "1574109726.006000",
        "client_msg_id": "2a24ce3a-ce86-4bf5-8b3a-dce116d63dbb",
        "text": "It's possible because the level of _accidental_ complexity was low. When you build all the systems across all levels of the stack you can ensure each of them do their jobs well and there are no inefficiencies. If there are, you can change it. I'm not a fan of Apple but this is one of reasons they do so well technically (design, latency, etc) - their technology is vertically integrated. Here are some talks about the complexity crisis in software today and why it _seems_ baffling that you could develop complex systems in a few thousand lines of code:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9c42167d8bfa",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-19\/1070853245589_9c42167d8bfa4cbf26ad_72.png",
            "first_name": "Nuno",
            "real_name": "Nuno Leiria",
            "display_name": "Nuno Leiria",
            "team": "T5TCAFTA9",
            "name": "omniparagon",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G913w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's possible because the level of "
                            },
                            {
                                "type": "text",
                                "text": "accidental",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " complexity was low. When you build all the systems across all levels of the stack you can ensure each of them do their jobs well and there are no inefficiencies. If there are, you can change it. I'm not a fan of Apple but this is one of reasons they do so well technically (design, latency, etc) - their technology is vertically integrated. Here are some talks about the complexity crisis in software today and why it "
                            },
                            {
                                "type": "text",
                                "text": "seems",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " baffling that you could develop complex systems in a few thousand lines of code:"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275",
                    "UPD5QQW81",
                    "UKP3B2J5D",
                    "U8A5MS6R1",
                    "UA14TGLTC"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UPMFG2571",
        "type": "message",
        "ts": "1574109731.006200",
        "client_msg_id": "44ce5d46-aec7-446f-8523-cdc65599e502",
        "text": "<https:\/\/www.youtube.com\/watch?v=pW-SOdj4Kkk>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9c42167d8bfa",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-19\/1070853245589_9c42167d8bfa4cbf26ad_72.png",
            "first_name": "Nuno",
            "real_name": "Nuno Leiria",
            "display_name": "Nuno Leiria",
            "team": "T5TCAFTA9",
            "name": "omniparagon",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Jonathan Blow - Preventing the Collapse of Civilization (English only)",
                "title_link": "https:\/\/www.youtube.com\/watch?v=pW-SOdj4Kkk",
                "author_name": "Alexander Bus",
                "author_link": "https:\/\/www.youtube.com\/user\/TrobbY54",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/pW-SOdj4Kkk\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Jonathan Blow - Preventing the Collapse of Civilization (English only)",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/pW-SOdj4Kkk?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=pW-SOdj4Kkk",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=pW-SOdj4Kkk"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "arcY2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=pW-SOdj4Kkk"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMFG2571",
        "type": "message",
        "ts": "1574109736.006500",
        "client_msg_id": "4e2e989e-0d1a-4e6b-9443-e87cc8515c8a",
        "text": "<https:\/\/www.youtube.com\/watch?v=kZRE7HIO3vk>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9c42167d8bfa",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-19\/1070853245589_9c42167d8bfa4cbf26ad_72.png",
            "first_name": "Nuno",
            "real_name": "Nuno Leiria",
            "display_name": "Nuno Leiria",
            "team": "T5TCAFTA9",
            "name": "omniparagon",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "The Thirty Million Line Problem",
                "title_link": "https:\/\/www.youtube.com\/watch?v=kZRE7HIO3vk",
                "author_name": "Handmade Hero",
                "author_link": "https:\/\/www.youtube.com\/user\/handmadeheroarchive",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/kZRE7HIO3vk\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: The Thirty Million Line Problem",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/kZRE7HIO3vk?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=kZRE7HIO3vk",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=kZRE7HIO3vk"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YB9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=kZRE7HIO3vk"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1574114930.006900",
        "client_msg_id": "dfa8e9fc-4662-4e64-8028-2e0156962df6",
        "text": "C Code on MC6809 was 40% the size of the same C code on MC68000.\n\nMC6809 was an 8-bit cpu, MC6800 was 16-bit.\n\nCode size for 16-bit cpus is larger than for 8-bit cpus (MC6809, Smalltalk-78 8-bit VM).\n\nProbably another big step from 8-bit to 64-bit.\n\nSome early Burroughs machine used Huffman encoding for instructions.  Smallest instruction was 2-bits (?).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LSFH8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "C Code on MC6809 was 40% the size of the same C code on MC68000.\n\nMC6809 was an 8-bit cpu, MC6800 was 16-bit.\n\nCode size for 16-bit cpus is larger than for 8-bit cpus (MC6809, Smalltalk-78 8-bit VM).\n\nProbably another big step from 8-bit to 64-bit.\n\nSome early Burroughs machine used Huffman encoding for instructions.  Smallest instruction was 2-bits (?)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKQT95T1V",
        "type": "message",
        "ts": "1574140155.008400",
        "client_msg_id": "b548c83e-4e79-44b0-a121-8f3276f507e7",
        "text": "do folks have a feel for how Unison and Darklang contrast with one another? both seem to have broadly similar goals",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5602bab02fb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c5602bab02fb00f0c9a052ee6c220513.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Alan Johnson",
            "display_name": "Alan Johnson",
            "team": "T5TCAFTA9",
            "name": "alan135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574140155.008400",
        "reply_count": 8,
        "reply_users_count": 7,
        "latest_reply": "1576731989.000600",
        "reply_users": [
            "UNBPP291C",
            "U79HM6726",
            "UHWC9PXBL",
            "U6BRN7A0Y",
            "UD31LGQKB",
            "U8A5MS6R1",
            "UKQT95T1V"
        ],
        "replies": [
            {
                "user": "UNBPP291C",
                "ts": "1574156062.022900"
            },
            {
                "user": "U79HM6726",
                "ts": "1574165658.025500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1574204315.082500"
            },
            {
                "user": "U6BRN7A0Y",
                "ts": "1574204652.082700"
            },
            {
                "user": "U6BRN7A0Y",
                "ts": "1574204684.082900"
            },
            {
                "user": "UD31LGQKB",
                "ts": "1574219271.084200"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1574270201.085400"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1576731989.000600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "umSJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "do folks have a feel for how Unison and Darklang contrast with one another? both seem to have broadly similar goals"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1574147736.019200",
        "client_msg_id": "c331ec90-d607-46d0-837e-545d622603e0",
        "text": "People vastly underestimate how clever and refined Filemaker is in 2019. They have a graphical schema editor that is super clever; with special pagination preview dotted-lines so you can make it print nice for multi-page schemas. They use a node and wire metaphor in what they call the relationship editor, which is the part that creates the implied joins. Some years back Filemaker ditched their insides, and replaced ti with MySQL guts. So today, Filemaker is actually just a GUI for MySQL.  As Filemaker evolved, they have steadily increased the price of the product. Their only major flaw is their scripting language is really clumsy and archaic.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574045798.499000",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0LY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "People vastly underestimate how clever and refined Filemaker is in 2019. They have a graphical schema editor that is super clever; with special pagination preview dotted-lines so you can make it print nice for multi-page schemas. They use a node and wire metaphor in what they call the relationship editor, which is the part that creates the implied joins. Some years back Filemaker ditched their insides, and replaced ti with MySQL guts. So today, Filemaker is actually just a GUI for MySQL.  As Filemaker evolved, they have steadily increased the price of the product. Their only major flaw is their scripting language is really clumsy and archaic."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1574148073.022200",
        "client_msg_id": "B486DE91-E2E8-48F2-8379-A07F4DC788BC",
        "text": "I’m not sure I want to buy into the sentiment that “things are just more complex today than they had been in the past”. I mean, yes, sure, but they are because we made them so. That applies to hardware as much as to software.\n\nWe’re just generally bad at cleaning up and getting rid of things. And so we keep old stuff around forever, because, hey, it still works and software is difficult to get right so let’s better not touch it and build new stuff on top of it instead.\n\nIt takes courage to change the infrastructure and throw away the old that still works, but overall just introduces complexity we no longer need. It’s a dumb and risky thing to do. You’ll break a lot of things and really piss off a lot of people who’ve gotten used to the old ways of doing things.\n\nYou’d have to be crazy to think that the long-term benefits of reducing that complexity will outweigh the short-term hassle of new bugs, missing features, and annoyed customers.\n\nI’m glad there are still a few people crazy enough to keep doing it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574100925.005200",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tjAO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m not sure I want to buy into the sentiment that “things are just more complex today than they had been in the past”. I mean, yes, sure, but they are because we made them so. That applies to hardware as much as to software.\n\nWe’re just generally bad at cleaning up and getting rid of things. And so we keep old stuff around forever, because, hey, it still works and software is difficult to get right so let’s better not touch it and build new stuff on top of it instead.\n\nIt takes courage to change the infrastructure and throw away the old that still works, but overall just introduces complexity we no longer need. It’s a dumb and risky thing to do. You’ll break a lot of things and really piss off a lot of people who’ve gotten used to the old ways of doing things.\n\nYou’d have to be crazy to think that the long-term benefits of reducing that complexity will outweigh the short-term hassle of new bugs, missing features, and annoyed customers.\n\nI’m glad there are still a few people crazy enough to keep doing it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D",
                    "UHWC9PXBL",
                    "UA14TGLTC",
                    "UAVCC2X70"
                ],
                "count": 4
            },
            {
                "name": "100",
                "users": [
                    "U8A5MS6R1",
                    "UHWC9PXBL",
                    "UAVCC2X70"
                ],
                "count": 3
            }
        ]
    }
]