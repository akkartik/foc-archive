[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1629874875.116800",
        "client_msg_id": "95f6942a-9e09-42c3-95b6-19e624d5a7b1",
        "text": "A bit of personal experience in this space: In the first iteration of my <https:\/\/github.com\/khinsen\/leibniz|Digital Scientific Notation Leibniz> (which is _not_ a programming language, but still a formal language with syntax and semantics), I opted for an XML representation of the AST in order to permit processing Leibniz code more easily, without having to implement a parser. I picked XML over s-expressions because of better tooling support in various languages, and XML over JSON because of the richer structuring possibilities.\n\nI had no intention of doing anything one could call universal, but then, XML or s-expressions may well be as close to universal as one can get: a tree structure. Now I wonder: is there anything beyond the tree structure that is universal about ASTs?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "GitHub - khinsen\/leibniz: A Digital Scientific Notation",
                "title_link": "https:\/\/github.com\/khinsen\/leibniz",
                "text": "A Digital Scientific Notation. Contribute to khinsen\/leibniz development by creating an account on GitHub.",
                "fallback": "GitHub: GitHub - khinsen\/leibniz: A Digital Scientific Notation",
                "image_url": "https:\/\/opengraph.githubassets.com\/48dcfb0752b7e92d108bc8c38626e09e155ae50941de71f9cf9f29e16faaa42d\/khinsen\/leibniz",
                "image_width": 500,
                "image_height": 250,
                "from_url": "https:\/\/github.com\/khinsen\/leibniz",
                "image_bytes": 93813,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/khinsen\/leibniz"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o64M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A bit of personal experience in this space: In the first iteration of my "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/khinsen\/leibniz",
                                "text": "Digital Scientific Notation Leibniz"
                            },
                            {
                                "type": "text",
                                "text": " (which is "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " a programming language, but still a formal language with syntax and semantics), I opted for an XML representation of the AST in order to permit processing Leibniz code more easily, without having to implement a parser. I picked XML over s-expressions because of better tooling support in various languages, and XML over JSON because of the richer structuring possibilities.\n\nI had no intention of doing anything one could call universal, but then, XML or s-expressions may well be as close to universal as one can get: a tree structure. Now I wonder: is there anything beyond the tree structure that is universal about ASTs?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U027P92A0N5",
                    "UMVFWPZ36"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U02BBHT50KD",
        "type": "message",
        "ts": "1629876986.117100",
        "client_msg_id": "ca6e41e2-976a-4073-a389-096f0c649445",
        "text": "<https:\/\/en.wikipedia.org\/wiki\/Concatenative_programming_language>\nmight be relevant.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "39cf814320cd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-08-16\/2398026638401_39cf814320cd5bc3df99_72.jpg",
            "first_name": "Kirill",
            "real_name": "Kirill Chernyshov",
            "display_name": "Kirill Chernyshov",
            "team": "T5TCAFTA9",
            "name": "delaguardo",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bmU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Concatenative_programming_language"
                            },
                            {
                                "type": "text",
                                "text": "\nmight be relevant."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1629898076.117700",
        "client_msg_id": "9067674e-f26e-4537-99ee-dcd1d54dabfe",
        "text": "Indeed. Forth and Factor (the only concatenative languages I know a bit) pose the same challenge for a universal AST as Common Lisp with its reader macros: how to handle languages that permit extending the parser?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sXSII",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Indeed. Forth and Factor (the only concatenative languages I know a bit) pose the same challenge for a universal AST as Common Lisp with its reader macros: how to handle languages that permit extending the parser?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02CABPNXJ6",
        "type": "message",
        "ts": "1629906523.118000",
        "client_msg_id": "219f53f6-4300-4478-afdd-431037667fd6",
        "text": "Hey! New to the community here (just intro’d myself in <#CC2JRGVLK|introduce-yourself>). Anybody interested in version control and coding workflows? In particular, the way Git is used industry wide at software companies. Here are some observations:\n• Despite the VCS being distributed, orgs use single source of truth\n• Units of collaboration are batches of change (PRs) and the smaller the better\n• Often code review is either nitpicking or shallow (“LGTM”) \n• “Getting” other people’s work-in-progress code (to help or just try it out) is laborious - (stashing own work, adding remote, fetching, checkout)\nI am really into the idea of tight feedback loops when developing. Starting from how we help one another, feedback from CI all the way to actually shipping small, incremental changes to prod. I think there is a lot of power that could be unlocked for devs by continuous sync-ing of code in the cloud. WDYT?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "da935dd8f5f2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-17\/2637689844176_da935dd8f5f27e987de0_72.jpg",
            "first_name": "Kiril",
            "real_name": "Kiril Videlov",
            "display_name": "Kiril Videlov",
            "team": "T5TCAFTA9",
            "name": "kiril",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629906523.118000",
        "reply_count": 7,
        "reply_users_count": 4,
        "latest_reply": "1630110892.004600",
        "reply_users": [
            "U027P92A0N5",
            "U02CABPNXJ6",
            "UJZS8UUJV",
            "UKFNXF0F9"
        ],
        "replies": [
            {
                "user": "U027P92A0N5",
                "ts": "1629908970.118200"
            },
            {
                "user": "U02CABPNXJ6",
                "ts": "1629920310.118700"
            },
            {
                "user": "UJZS8UUJV",
                "ts": "1629945967.000300"
            },
            {
                "user": "U027P92A0N5",
                "ts": "1629969697.001200"
            },
            {
                "user": "U027P92A0N5",
                "ts": "1629971732.001500"
            },
            {
                "user": "U027P92A0N5",
                "ts": "1629971781.001700"
            },
            {
                "user": "UKFNXF0F9",
                "ts": "1630110892.004600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jAgCf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey! New to the community here (just intro’d myself in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CC2JRGVLK"
                            },
                            {
                                "type": "text",
                                "text": "). Anybody interested in version control and coding workflows? In particular, the way Git is used industry wide at software companies. Here are some observations:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Despite the VCS being distributed, orgs use single source of truth"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Units of collaboration are batches of change (PRs) and the smaller the better"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Often code review is either nitpicking or shallow (“LGTM”) "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "“Getting” other people’s work-in-progress code (to help or just try it out) is laborious - (stashing own work, adding remote, fetching, checkout)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am really into the idea of tight feedback loops when developing. Starting from how we help one another, feedback from CI all the way to actually shipping small, incremental changes to prod. I think there is a lot of power that could be unlocked for devs by continuous sync-ing of code in the cloud. WDYT?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U027P92A0N5",
        "type": "message",
        "ts": "1629908970.118200",
        "client_msg_id": "fccd9b36-6336-4d96-bac3-2c201b350e03",
        "text": "Have you read <https:\/\/tonsky.me\/blog\/reinventing-git-interface\/> for starters? :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d6900487d910",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-07-07\/2254853369060_d6900487d9109f495c79_72.jpg",
            "first_name": "Alexander",
            "real_name": "Alexander Chichigin",
            "display_name": "Alex Chichigin",
            "team": "T5TCAFTA9",
            "name": "sad.ronin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629906523.118000",
        "parent_user_id": "U02CABPNXJ6",
        "attachments": [
            {
                "service_name": "tonsky.me",
                "title": "Reinventing Git interface",
                "title_link": "https:\/\/tonsky.me\/blog\/reinventing-git-interface\/",
                "text": "A set of recommendations on how Git UI can be improved not on a cosmetic, but on a very fundamental level. We aim at making Git more usable, powerful and easier to learn by radically simplifying its interface and keeping compartibility with the implementation",
                "fallback": "tonsky.me: Reinventing Git interface",
                "ts": 1402988400,
                "from_url": "https:\/\/tonsky.me\/blog\/reinventing-git-interface\/",
                "id": 1,
                "original_url": "https:\/\/tonsky.me\/blog\/reinventing-git-interface\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PpnB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you read "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/tonsky.me\/blog\/reinventing-git-interface\/"
                            },
                            {
                                "type": "text",
                                "text": " for starters? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02CABPNXJ6",
        "type": "message",
        "ts": "1629920310.118700",
        "client_msg_id": "8a8d71ef-ac1c-4faa-b7c6-a4c04cf30768",
        "text": "Just did, thanks for sharing",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "da935dd8f5f2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-17\/2637689844176_da935dd8f5f27e987de0_72.jpg",
            "first_name": "Kiril",
            "real_name": "Kiril Videlov",
            "display_name": "Kiril Videlov",
            "team": "T5TCAFTA9",
            "name": "kiril",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629906523.118000",
        "parent_user_id": "U02CABPNXJ6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w09h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just did, thanks for sharing"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJZS8UUJV",
        "type": "message",
        "ts": "1629945438.000100",
        "client_msg_id": "d4ecfabc-4a24-4e3b-bc4b-dbe7c908a7d5",
        "text": "<@U02BBHT50KD> is the parser extension Konrad mentioned what you were suggesting there? (I thought for a second you meant the ASTs in those langs aren’t well represented as trees?)\n\n<@UJBAJNFLK> what could I search for learn more about that?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g62b260c347a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/962b260c347a11e19b0fdce4a97a5d49.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Luke",
            "real_name": "Luke Persola",
            "display_name": "Luke Persola",
            "team": "T5TCAFTA9",
            "name": "lukepersola",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cletD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02BBHT50KD"
                            },
                            {
                                "type": "text",
                                "text": " is the parser extension Konrad mentioned what you were suggesting there? (I thought for a second you meant the ASTs in those langs aren’t well represented as trees?)\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " what could I search for learn more about that?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJZS8UUJV",
        "type": "message",
        "ts": "1629945967.000300",
        "edited": {
            "user": "UJZS8UUJV",
            "ts": "1629946709.000000"
        },
        "client_msg_id": "0a7c0787-e447-47f6-b9e4-deed59dc1093",
        "text": "<@U02CABPNXJ6>\nBy “single source of truth” here you mean having a master branch?\n\n&gt; I think there is a lot of power that could be unlocked for devs by continuous sync-ing of code in the cloud.\nSo I guess the current best way to do this is having a culture where people try to commit smaller PRs more frequently, and frequently rebase their local changes on top of the shared branch. ~Are you imaging automated that a bit more to we don’t have to rely on individuals as much?~\n(I just read about the 2-way syncing so I think I understand now,)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g62b260c347a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/962b260c347a11e19b0fdce4a97a5d49.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Luke",
            "real_name": "Luke Persola",
            "display_name": "Luke Persola",
            "team": "T5TCAFTA9",
            "name": "lukepersola",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629906523.118000",
        "parent_user_id": "U02CABPNXJ6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4q3h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02CABPNXJ6"
                            },
                            {
                                "type": "text",
                                "text": "\nBy “single source of truth” here you mean having a master branch?\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think there is a lot of power that could be unlocked for devs by continuous sync-ing of code in the cloud."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So I guess the current best way to do this is having a culture where people try to commit smaller PRs more frequently, and frequently rebase their local changes on top of the shared branch. "
                            },
                            {
                                "type": "text",
                                "text": "Are you imaging automated that a bit more to we don’t have to rely on individuals as much?",
                                "style": {
                                    "strike": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n(I just read about the 2-way syncing so I think I understand now,)"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]