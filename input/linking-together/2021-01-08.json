[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1610093128.460900",
        "client_msg_id": "726842d1-aa93-4b4a-b66c-3860ebcf5727",
        "text": "<@UD6EXQVM0> There is the eternal issue with the \"Open Source\" label that it is used for two different things: the legal status of source code, and the social structures of its development (the famous \"bazaar\"). My example was meant to illustrate why the bazaar model doesn't encourage technical innovation.\n\nThe legal and social perspectives of Open Source are orthgonal issues at first sight, but in practice, most Open Source projects rely on both the legal and the social part. One way to frame recent criticisms of Open Source, including <@U6KQ2S410>'s as I understand it, is the lack (so far) of other social structures that can predictably and reliably produce software that is legally Open Source. In particular structures that are more compatible with innovation.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1609787901.435600",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Pi8Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UD6EXQVM0"
                            },
                            {
                                "type": "text",
                                "text": " There is the eternal issue with the \"Open Source\" label that it is used for two different things: the legal status of source code, and the social structures of its development (the famous \"bazaar\"). My example was meant to illustrate why the bazaar model doesn't encourage technical innovation.\n\nThe legal and social perspectives of Open Source are orthgonal issues at first sight, but in practice, most Open Source projects rely on both the legal and the social part. One way to frame recent criticisms of Open Source, including "
                            },
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": "'s as I understand it, is the lack (so far) of other social structures that can predictably and reliably produce software that is legally Open Source. In particular structures that are more compatible with innovation."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1610100440.461100",
        "client_msg_id": "6a7d213b-2427-49f1-a6c9-2a1735cdd83b",
        "text": "<@UD6EXQVM0> \"I would further argue that people like me shouldn't have to be businessmen and shouldn't have to found \"startups\" and spend our time fundraising from VCs and wealthy \"angels\". My passion is software, not business\" while I can sympathise with this idea, I really do think its quite a selfish statement. Niklas Luhman has this idea of System Theory and Sociology , in which he says the following about structures and functions within societies: a function is needed in a society so a structure will emerge to support that function. So you always have to ask yourself, what can be a good balance between your needs and the needs of society. I do thikn the idea of a universal basic income could be a major driver for positive change in society. But there are many people in most societies who do not think this way.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1609787901.435600",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cMFb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UD6EXQVM0"
                            },
                            {
                                "type": "text",
                                "text": " \"I would further argue that people like me shouldn't have to be businessmen and shouldn't have to found \"startups\" and spend our time fundraising from VCs and wealthy \"angels\". My passion is software, not business\" while I can sympathise with this idea, I really do think its quite a selfish statement. Niklas Luhman has this idea of System Theory and Sociology , in which he says the following about structures and functions within societies: a function is needed in a society so a structure will emerge to support that function. So you always have to ask yourself, what can be a good balance between your needs and the needs of society. I do thikn the idea of a universal basic income could be a major driver for positive change in society. But there are many people in most societies who do not think this way."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1610100912.461300",
        "client_msg_id": "864c6fcf-9fe8-4939-961a-b8b7da55c5e9",
        "text": "Also very good to see that <@UJBAJNFLK> observes that we need to really clarify about what we are talking when talking about\"open source\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1609787901.435600",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y73Vf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also very good to see that "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " observes that we need to really clarify about what we are talking when talking about\"open source\"."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1610170727.462200",
        "client_msg_id": "267a1432-b6f5-4224-8837-6228daeba5c1",
        "text": "Crap, looks like I missed this opportunity. Probably wouldn't have landed it anyway?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1606245835.281400",
        "parent_user_id": "UFQQ3P867",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w9tFY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Crap, looks like I missed this opportunity. Probably wouldn't have landed it anyway?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1610174481.462400",
        "client_msg_id": "939d586b-a838-4b6e-b96d-dc04f92026a3",
        "text": "Something I don't understand: why should [1, 2] + [[0,0],[0,0]] be [[1,2],[1,2]] and not [[1,1],[2,2]]? Is it completely arbitrary or is there a reason?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1605627698.246200",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/eKY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Something I don't understand: why should [1, 2] + [[0,0],[0,0]] be [[1,2],[1,2]] and not [[1,1],[2,2]]? Is it completely arbitrary or is there a reason?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1610175864.462600",
        "client_msg_id": "0f3868d2-3de2-42ff-8c5a-aee9e1dcb7a5",
        "text": "GReTA: \"a platform for the international graph rewriting community, to promote recent developments and trends in the field, and to permit a regular networking and interaction between members of this community\"\n\nOkay, so where do I go if I'm newb and merely want to learn more about graph rewriting?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607148052.311000",
        "parent_user_id": "USH01JEDQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OJu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "GReTA: \"a platform for the international graph rewriting community, to promote recent developments and trends in the field, and to permit a regular networking and interaction between members of this community\"\n\nOkay, so where do I go if I'm newb and merely want to learn more about graph rewriting?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1610175968.462800",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1610176051.000000"
        },
        "client_msg_id": "e6dd4133-42f8-4559-a3af-0983bce4bcd9",
        "text": "In particular I would like to know ways in which graph rewriting can be somehow superior to traditional, um, programs; the topic is only interesting to me insofar as it can provide a better way to accomplish something.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607148052.311000",
        "parent_user_id": "USH01JEDQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ttKaL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In particular I would like to know ways in which graph rewriting can be somehow superior to traditional, um, programs; the topic is only interesting to me insofar as it can provide a better way to accomplish something."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1610178372.463300",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1610178435.000000"
        },
        "client_msg_id": "cad61683-1de8-40d0-b28e-ce9e3eed254c",
        "text": "I came to the same conclusion, that requiring provable termination isn't useful, but perhaps it's a useful default - perhaps a language can be designed such that it can prove most programs will terminate, and for cases where it can't prove it, you'll get a warning that you can then turn off (either by 'conjecturing' that it terminates, or declaring that it doesn't always terminate and the programmer just accepts it).\n\nHowever, if I was building a language, there are other type-system features I would prioritize over termination analysis (e.g. unit inference).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604952430.207700",
        "parent_user_id": "UPVBV34EL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WbjRy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I came to the same conclusion, that requiring provable termination isn't useful, but perhaps it's a useful default - perhaps a language can be designed such that it can prove most programs will terminate, and for cases where it can't prove it, you'll get a warning that you can then turn off (either by 'conjecturing' that it terminates, or declaring that it doesn't always terminate and the programmer just accepts it).\n\nHowever, if I was building a language, there are other type-system features I would prioritize over termination analysis (e.g. unit inference)."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]