[
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1707642969.944659",
        "client_msg_id": "F7A9686F-A4B1-4549-9631-DBB66AAE9644",
        "text": "Here's a link to a small video demonstrating the above: <https:\/\/youtu.be\/QrFnzhhHzD8|https:\/\/youtu.be\/QrFnzhhHzD8>\n\nConnections that have the same output have their svg path calculated using the distance from the closest node to that output.\n\nI've also changed the way value-nodes are handled by the shader : instead of recompiling the shader after changing the value, now direct uniform parameters into the shader are used which is a much smoother experience.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1707577006.843849",
        "parent_user_id": "U0123H7JRDM",
        "attachments": [
            {
                "from_url": "https:\/\/youtu.be\/QrFnzhhHzD8",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/QrFnzhhHzD8\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/QrFnzhhHzD8?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"Auto layout connections from same output for visual programming\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https:\/\/youtu.be\/QrFnzhhHzD8",
                "fallback": "YouTube Video: Auto layout connections from same output for visual programming",
                "title": "Auto layout connections from same output for visual programming",
                "title_link": "https:\/\/youtu.be\/QrFnzhhHzD8",
                "author_name": "Maikel van de Lisdonk",
                "author_link": "https:\/\/www.youtube.com\/@maikelvandelisdonk7024",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "asIni",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's a link to a small video demonstrating the above: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/QrFnzhhHzD8",
                                "text": "https:\/\/youtu.be\/QrFnzhhHzD8"
                            },
                            {
                                "type": "text",
                                "text": "\n\nConnections that have the same output have their svg path calculated using the distance from the closest node to that output.\n\nI've also changed the way value-nodes are handled by the shader : instead of recompiling the shader after changing the value, now direct uniform parameters into the shader are used which is a much smoother experience."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "I started all this by saying PPLs were surprisingly visual and physical, so I'm concentrating on the interaction loop that I had in mind when I said those things: every time you edit a program, you see how it affects the distributions of data flowing through.\n\nSo in the attached GIF, there's a dataflow graph for a simple model where every few seconds I add an additional wire.\n\nPPLs don't solve for a result—they _converge_. So I expected the visualizations to have a very springy response to changes. And that's what I get! In fact, the juiciness of the program output contrasts so much with the stilted UI that I might have to resubscribe to some game design blogs sooner than later. :grimacing:\n\nBut this is good. I have ideas for where to take the language that are milquetoast but implementable by me in my spare time, at a pace that I think should allow me to explore complex models within my lifetime.",
        "files": [
            {
                "id": "F06JZ0874GY",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UFEQUBNNT",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fRdqj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I started all this by saying PPLs were surprisingly visual and physical, so I'm concentrating on the interaction loop that I had in mind when I said those things: every time you edit a program, you see how it affects the distributions of data flowing through.\n\nSo in the attached GIF, there's a dataflow graph for a simple model where every few seconds I add an additional wire.\n\nPPLs don't solve for a result—they "
                            },
                            {
                                "type": "text",
                                "text": "converge",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". So I expected the visualizations to have a very springy response to changes. And that's what I get! In fact, the juiciness of the program output contrasts so much with the stilted UI that I might have to resubscribe to some game design blogs sooner than later. "
                            },
                            {
                                "type": "emoji",
                                "name": "grimacing",
                                "unicode": "1f62c"
                            },
                            {
                                "type": "text",
                                "text": "\n\nBut this is good. I have ideas for where to take the language that are milquetoast but implementable by me in my spare time, at a pace that I think should allow me to explore complex models within my lifetime."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1707719352.951569",
        "edited": {
            "user": "UFEQUBNNT",
            "ts": "1707719408.000000"
        },
        "client_msg_id": "c189097a-091a-4b22-8759-dfdf71658b0b",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U0296ACR13M",
                    "U0123H7JRDM",
                    "UMV4B97GT"
                ],
                "count": 4
            },
            {
                "name": "cake",
                "users": [
                    "U85HCL7JP",
                    "U06H4766K42"
                ],
                "count": 2
            }
        ]
    }
]