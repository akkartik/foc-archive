[
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1661850313.524709",
        "edited": {
            "user": "UGWUJUZHT",
            "ts": "1661852166.000000"
        },
        "client_msg_id": "c3b52298-370c-4e08-8bef-c2732dcbd060",
        "text": "&gt; do we _really_ need a visualizer?\nIMO, the question about “visualization” might be rhetorical - visualization of _what_?\n\nDebugging belongs to the realm of creativity, not of clockwork engineering.\n\nDebugging is iteration.  Debugging is notation-specific.  Debugging is paradigm-specific.  For example, if you Design a system using, say, the OO paradigm, you want a debugger that shows you the OO-iness of your code, not, say, machine-level single-stepping from a completely different paradigm.\n\n<@UCUSW7WVD>’s Handmade-network video reminds me of a long-standing _je ne sais quoi_ I’ve had about <https:\/\/equis.cs.queensu.ca\/~equis\/pubs\/1992\/cordy-jvlc-92.pdf|GVL> . Kind of a projectional editing REPL (based on simplistic-SVG?).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661748033.254809",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m=B7",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "do we "
                            },
                            {
                                "type": "text",
                                "text": "really",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " need a visualizer?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIMO, the question about “visualization” might be rhetorical - visualization of "
                            },
                            {
                                "type": "text",
                                "text": "what",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "?\n\nDebugging belongs to the realm of creativity, not of clockwork engineering.\n\nDebugging is iteration.  Debugging is notation-specific.  Debugging is paradigm-specific.  For example, if you Design a system using, say, the OO paradigm, you want a debugger that shows you the OO-iness of your code, not, say, machine-level single-stepping from a completely different paradigm.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": "’s Handmade-network video reminds me of a long-standing "
                            },
                            {
                                "type": "text",
                                "text": "je ne sais quoi",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " I’ve had about "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/equis.cs.queensu.ca\/~equis\/pubs\/1992\/cordy-jvlc-92.pdf",
                                "text": "GVL"
                            },
                            {
                                "type": "text",
                                "text": " . Kind of a projectional editing REPL (based on simplistic-SVG?)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1661850395.866549",
        "client_msg_id": "b76c1c10-3707-428a-bc4a-9e8609198919",
        "text": "Why are you asking specifically about Lisp, instead of something more modern?\n\nLisp is a tree-oriented assembler.  That’s why I love it.\n\nCurrently, my 2 favourite tools are Lispworks (for power and debugging) and Ohm-JS with Ohm-Editor (for draping multiple paradigms\/syntaxes over powerful baubles).\n\nIMO, creativity and engineering are very deep, different topics with many subdivisions, each.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661481349.386469",
        "parent_user_id": "U03LT7540HZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UTXGD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why are you asking specifically about Lisp, instead of something more modern?\n\nLisp is a tree-oriented assembler.  That’s why I love it.\n\nCurrently, my 2 favourite tools are Lispworks (for power and debugging) and Ohm-JS with Ohm-Editor (for draping multiple paradigms\/syntaxes over powerful baubles).\n\nIMO, creativity and engineering are very deep, different topics with many subdivisions, each."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]