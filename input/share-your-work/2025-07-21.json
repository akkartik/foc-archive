[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1753103822.931919",
        "client_msg_id": "f06bae5c-ff21-494f-96b2-d855a30530bd",
        "text": "&gt; This - psychologically - seemed to infer that CPUs were supposed to be used as function-machines.\nI doubt it. C goes back to a time when FP was considered impractical. I see the reasoning behind the term \"function\" in C (as in Lisp) as procedures being a generalization of the concept \"function\" in the context of code (as opposed to math).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1752759391.595909",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "au3Oa",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This - psychologically - seemed to infer that CPUs were supposed to be used as function-machines."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I doubt it. C goes back to a time when FP was considered impractical. I see the reasoning behind the term \"function\" in C (as in Lisp) as procedures being a generalization of the concept \"function\" in the context of code (as opposed to math)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1753104939.045359",
        "client_msg_id": "246ce94c-335e-4c82-bb89-18827dc5953a",
        "text": "Yes, FP was considered impractical in the days of C. (In fact, I studied Denotational Semantics due to my interest in compilers, and rolled my eyes). Yet, I think that there was a *psychological* effect just in the use of the word \"function\" instead of the then-used words like \"procedure\" and \"subroutine\". The word \"function\" gave free reign to thoughts like \"mutation is bad\", \"state is bad\", functions must return a value, no side-effects (what is a \"server\", then?), etc., etc. All of that led to bloat such as MMUs, caches, preemption, excessive amounts of memory, ignoring of coroutines, etc., etc. When I listen to Muratori's talk, I \"hear\" this. He actually flip-flops between using the words \"subroutine\" and \"function\" while decrying bloatware. Functions require stacks, everything-is-a-function-ideology requires \"infinite\" stacks which leads to virtual memory and excessive amounts of memory (we *need* more memory for fatter and better media, but, that does not directly imply that our code needs to become bloated, too). Functions create ad-hoc blocking which leads to heavy-weight operating systems needing to use preemption. Early games had the right idea, IMO, you slipped in a cartridge and the software took over the whole machine, without 55,000,000 LOC of operating system getting in the way.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1752759391.595909",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yyRuy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, FP was considered impractical in the days of C. (In fact, I studied Denotational Semantics due to my interest in compilers, and rolled my eyes). Yet, I think that there was a "
                            },
                            {
                                "type": "text",
                                "text": "psychological",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " effect just in the use of the word \"function\" instead of the then-used words like \"procedure\" and \"subroutine\". The word \"function\" gave free reign to thoughts like \"mutation is bad\", \"state is bad\", functions must return a value, no side-effects (what is a \"server\", then?), etc., etc. All of that led to bloat such as MMUs, caches, preemption, excessive amounts of memory, ignoring of coroutines, etc., etc. When I listen to Muratori's talk, I \"hear\" this. He actually flip-flops between using the words \"subroutine\" and \"function\" while decrying bloatware. Functions require stacks, everything-is-a-function-ideology requires \"infinite\" stacks which leads to virtual memory and excessive amounts of memory (we "
                            },
                            {
                                "type": "text",
                                "text": "need",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " more memory for fatter and better media, but, that does not directly imply that our code needs to become bloated, too). Functions create ad-hoc blocking which leads to heavy-weight operating systems needing to use preemption. Early games had the right idea, IMO, you slipped in a cartridge and the software took over the whole machine, without 55,000,000 LOC of operating system getting in the way."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1753125430.812489",
        "client_msg_id": "b50509e6-bdce-45a2-b0f0-2984cfb58f2d",
        "text": "The term \"function\" is actually pre-C. Fortran used it as well, in pretty much the same sense, with the possibility of mutable state as well.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1752759391.595909",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qV032",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The term \"function\" is actually pre-C. Fortran used it as well, in pretty much the same sense, with the possibility of mutable state as well."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1753126938.288759",
        "client_msg_id": "2983ed99-7df6-47ec-a3b7-1d7dde8831cc",
        "text": "I haven't used Fortran in ages, but I remember that a \"function\" was different from a \"subroutine\". Do you know what the difference is\/was?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1752759391.595909",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8VUjF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven't used Fortran in ages, but I remember that a \"function\" was different from a \"subroutine\". Do you know what the difference is\/was?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]