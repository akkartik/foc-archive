[
    {
        "user": "U071KDQALD8",
        "type": "message",
        "ts": "1752185101.587149",
        "client_msg_id": "D431E1FF-C64A-44A3-AFF0-360A0CA3A0A1",
        "text": "<@UC2A2ARPT> I have been working on this idea for a while: What if I use a diagram from Category theory to display and manipulate source code. Reading source code and writing source code through the diagram. \n\nI have been following a little bit the discussions here regarding visual programming but not extensively. \n\nThe point is that when you describe a category you need to define the composition method, ie how two arrows compose in the diagram and what are the objects (points in the diagram).\n\nIt is all based on the fact that category theory can describe any abstraction. On top of that it allows you to have some formal ways to move between different categories or between levels of abstraction.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "79541040a55b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-05-01\/7053467218194_79541040a55bb3f43dc0_72.png",
            "first_name": "Theo",
            "real_name": "Theo Gotsopoulos",
            "display_name": "thgs",
            "team": "T5TCAFTA9",
            "name": "theogpl57.2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750344053.106189",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G0Gwi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I have been working on this idea for a while: What if I use a diagram from Category theory to display and manipulate source code. Reading source code and writing source code through the diagram. \n\nI have been following a little bit the discussions here regarding visual programming but not extensively. \n\nThe point is that when you describe a category you need to define the composition method, ie how two arrows compose in the diagram and what are the objects (points in the diagram).\n\nIt is all based on the fact that category theory can describe any abstraction. On top of that it allows you to have some formal ways to move between different categories or between levels of abstraction."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U01ULEWACPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U071KDQALD8",
        "type": "message",
        "ts": "1752185278.105519",
        "client_msg_id": "13064047-3674-465A-8D7F-3119BA1B30A4",
        "text": "Maybe i should put something up to make it a bit more tangible because what i just described is probably too broad.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "79541040a55b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-05-01\/7053467218194_79541040a55bb3f43dc0_72.png",
            "first_name": "Theo",
            "real_name": "Theo Gotsopoulos",
            "display_name": "thgs",
            "team": "T5TCAFTA9",
            "name": "theogpl57.2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750344053.106189",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jbA6\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe i should put something up to make it a bit more tangible because what i just described is probably too broad."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U071KDQALD8",
        "type": "message",
        "ts": "1752185690.665589",
        "edited": {
            "user": "U071KDQALD8",
            "ts": "1752185724.000000"
        },
        "client_msg_id": "9514C453-22C8-4B84-965E-9A0729542395",
        "text": "However to just give some relative perspective  for my categorical diagram, the point is really whatever i need it to be and the important thing are the arrows in the diagram. Say the category of types and functions contains types as objects, then my objects are types. Say i move up a level in the abstraction ladder, the objects could be classes in a dependency graph and the arrows the dependency direction. The points themselves are less important, as basically they just define a start and an end for the arrow, which is the important thing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "79541040a55b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-05-01\/7053467218194_79541040a55bb3f43dc0_72.png",
            "first_name": "Theo",
            "real_name": "Theo Gotsopoulos",
            "display_name": "thgs",
            "team": "T5TCAFTA9",
            "name": "theogpl57.2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1750344053.106189",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nk9Jp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "However to just give some relative perspective  for my categorical diagram, the point is really whatever i need it to be and the important thing are the arrows in the diagram. Say the category of types and functions contains types as objects, then my objects are types. Say i move up a level in the abstraction ladder, the objects could be classes in a dependency graph and the arrows the dependency direction. The points themselves are less important, as basically they just define a start and an end for the arrow, which is the important thing."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]