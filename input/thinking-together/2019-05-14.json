[
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1557820028.344900",
        "client_msg_id": "8b3d344d-df46-4b50-9a57-167ec67fc0c7",
        "text": "I'm a hipster user liberation front member",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557172593.159600",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TFq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm a hipster user liberation front member"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1557820075.345100",
        "client_msg_id": "afd9155f-895a-4ed2-b15b-ee5670b33b50",
        "text": "(before it had a name) :stuck_out_tongue:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557172593.159600",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cn7M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(before it had a name) "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1557823377.347500",
        "client_msg_id": "49DE06A0-B479-4785-ACE0-EC8339B404C0",
        "text": "Ok :). I will record some parts and send them around for feedback.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557614429.334000",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+GyL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ok :). I will record some parts and send them around for feedback."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1557823605.347700",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1557864534.000000"
        },
        "client_msg_id": "c6a00fb9-fedf-4364-9b80-3ea72f4f9d79",
        "text": "I bought a lot of expensive software like Autocad, and i think for a product that complex which never stops evolving the subscription model is reasonable, but my Adobe CS5.5 Master collection which was over $1000 is just fine and i don't want to spend cumulatively thousands to add features i only use 3% of already. Anyway the evolution of Director's Lingo into Actionscript is a bit complex,  as I was merely a consumer of Adobe and Macromedia products, and i don't have insight into the various product streams and designers that were put together to produce the final product, which was AS1, then AS2 then a few years later AS3. Adobe and Macromedia had competing products in multiple areas, and there was a long-forgotten product from Adobe that could do animation and had some scripting, but the two teams were fused together (probably a very upsetting moment when all those competing project teams were locked into one room, probably lots of people storming and\/or fired). A lot of really bright people have worked for Adobe over their long history, and they have acquired and blended many things to get where they are. AS3 is 99% the same as current JS. You can with a few dozen find\/replace operations convert AS3 into JS code. They are remarkably similar.\n\nBut the implementation of modules in JS is incomplete and quite annoying. Unlike in Modula-2 which produced a special file containing the AST of the exported items of a module, which allows for separate compilation, JS modules can't do that, and you can't import a scalar value and update it from another module; you can only modify object properties. Also AS3 has int32 and unsigned32 primitive data types. Boy would it be great if JS had those, because operating systems still use such things. Another missing area is packed arrays, which are much less expensive in RAM, and for large fixed-size  tabular data would be so much more efficient. JS is a memory pig; just look at a browser's total memory footprint, and it typically exceeds the total memory used for Windows 7, which is somewhat absurd. One of the things i really hate about the modern stack is it is so heavy, so many million lines of code, and so many thousands of pages to fully document all the API's and interactions. It is ridiculously complex now.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557290857.200100",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jyka",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I bought a lot of expensive software like Autocad, and i think for a product that complex which never stops evolving the subscription model is reasonable, but my Adobe CS5.5 Master collection which was over $1000 is just fine and i don't want to spend cumulatively thousands to add features i only use 3% of already. Anyway the evolution of Director's Lingo into Actionscript is a bit complex,  as I was merely a consumer of Adobe and Macromedia products, and i don't have insight into the various product streams and designers that were put together to produce the final product, which was AS1, then AS2 then a few years later AS3. Adobe and Macromedia had competing products in multiple areas, and there was a long-forgotten product from Adobe that could do animation and had some scripting, but the two teams were fused together (probably a very upsetting moment when all those competing project teams were locked into one room, probably lots of people storming and\/or fired). A lot of really bright people have worked for Adobe over their long history, and they have acquired and blended many things to get where they are. AS3 is 99% the same as current JS. You can with a few dozen find\/replace operations convert AS3 into JS code. They are remarkably similar.\n\nBut the implementation of modules in JS is incomplete and quite annoying. Unlike in Modula-2 which produced a special file containing the AST of the exported items of a module, which allows for separate compilation, JS modules can't do that, and you can't import a scalar value and update it from another module; you can only modify object properties. Also AS3 has int32 and unsigned32 primitive data types. Boy would it be great if JS had those, because operating systems still use such things. Another missing area is packed arrays, which are much less expensive in RAM, and for large fixed-size  tabular data would be so much more efficient. JS is a memory pig; just look at a browser's total memory footprint, and it typically exceeds the total memory used for Windows 7, which is somewhat absurd. One of the things i really hate about the modern stack is it is so heavy, so many million lines of code, and so many thousands of pages to fully document all the API's and interactions. It is ridiculously complex now."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1557845030.349600",
        "edited": {
            "user": "U5TCAFTD3",
            "ts": "1557845037.000000"
        },
        "client_msg_id": "5c34d49f-d36d-45ec-9c51-8083e3b9e21e",
        "text": "I was very excited to find a _curriculum_ for reimagining the personal computer this morning! Weeks 3 &amp; 4 seem particularly relevant for this community but I'm excited to check out rest of it when I have time <http:\/\/chrisnovello.com\/teaching\/risd\/computer-utopias\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557845030.349600",
        "reply_count": 6,
        "reply_users_count": 5,
        "latest_reply": "1557909498.423100",
        "reply_users": [
            "UGLSY9X3J",
            "UAVCC2X70",
            "UC2A2ARPT",
            "UA14TGLTC",
            "UJFN50C00"
        ],
        "replies": [
            {
                "user": "UGLSY9X3J",
                "ts": "1557845692.349900"
            },
            {
                "user": "UGLSY9X3J",
                "ts": "1557845825.350100"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1557849762.352900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1557852784.354000"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1557883643.388200"
            },
            {
                "user": "UJFN50C00",
                "ts": "1557909498.423100"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1557986831.165500",
        "attachments": [
            {
                "title": "Computer Utopias",
                "title_link": "http:\/\/chrisnovello.com\/teaching\/risd\/computer-utopias\/",
                "text": "A studio workgroup for urgent concerns in computers &amp; representation. :earth_americas::calling:",
                "fallback": "Computer Utopias",
                "from_url": "http:\/\/chrisnovello.com\/teaching\/risd\/computer-utopias\/",
                "service_name": "chrisnovello.com",
                "id": 1,
                "original_url": "http:\/\/chrisnovello.com\/teaching\/risd\/computer-utopias\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ic=A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was very excited to find a "
                            },
                            {
                                "type": "text",
                                "text": "curriculum",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for reimagining the personal computer this morning! Weeks 3 & 4 seem particularly relevant for this community but I'm excited to check out rest of it when I have time "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/chrisnovello.com\/teaching\/risd\/computer-utopias\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UAVCC2X70",
                    "UHWC9PXBL",
                    "UA14TGLTC",
                    "U8A5MS6R1"
                ],
                "count": 4
            },
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UJM9NG84Q",
                    "UEQ7QL15F"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UGLSY9X3J",
        "type": "message",
        "ts": "1557845692.349900",
        "client_msg_id": "1bcf96f1-6924-4db5-a2a0-305ecbe995c2",
        "text": "this looks great!\n\nSide note \/ Slight rant, I don’t understand why so many people think AI \/ Machine Learning is this new computing future. As someone who’s familiar with these technologies and use them regularly, it’s unclear how they help with humanism (usually tends towards the opposite). MIT even committed $1bn to AI \/ ML as the new computing future and singled those out. _Rant over_",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g03ebdf13bbe",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e03ebdf13bbeacace66454bea388b927.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Srini Kadamati",
            "display_name": "srini",
            "team": "T5TCAFTA9",
            "name": "srini",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557845030.349600",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RHF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this looks great!\n\nSide note \/ Slight rant, I don’t understand why so many people think AI \/ Machine Learning is this new computing future. As someone who’s familiar with these technologies and use them regularly, it’s unclear how they help with humanism (usually tends towards the opposite). MIT even committed $1bn to AI \/ ML as the new computing future and singled those out. "
                            },
                            {
                                "type": "text",
                                "text": "Rant over",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UC2A2ARPT",
                    "UA14TGLTC",
                    "UAL7940NM"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UGLSY9X3J",
        "type": "message",
        "ts": "1557845825.350100",
        "client_msg_id": "58552189-1bb4-4ba8-9a49-482ef70b34f1",
        "text": "but again, this class sounds amazing! Providence (where RISD is) is just an hour away from where I live. I wonder if I could find a way to take this class :stuck_out_tongue:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g03ebdf13bbe",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e03ebdf13bbeacace66454bea388b927.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Srini Kadamati",
            "display_name": "srini",
            "team": "T5TCAFTA9",
            "name": "srini",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557845030.349600",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bTkrz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but again, this class sounds amazing! Providence (where RISD is) is just an hour away from where I live. I wonder if I could find a way to take this class "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1557849762.352900",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1557849797.000000"
        },
        "client_msg_id": "9347fedc-6f9c-41be-a687-1eef13086f1a",
        "text": "I see a plethora of great resource-links that most of us would benefit from reading! (It's because Alan Kay told <@U5TCAFTD3> (and thus us?) read a mountain :wink:)\n\nIt will take forever, but I'll work my way through over time (even if I just skim some of them)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557845030.349600",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kol",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I see a plethora of great resource-links that most of us would benefit from reading! (It's because Alan Kay told "
                            },
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": " (and thus us?) read a mountain "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            },
                            {
                                "type": "text",
                                "text": ")\n\nIt will take forever, but I'll work my way through over time (even if I just skim some of them)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1557852387.353300",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1557852395.000000"
        },
        "client_msg_id": "e0de3e64-1e64-4a51-bc4d-6b6df94f03b9",
        "text": "<https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Typed_arrays>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557290857.200100",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7FE2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Typed_arrays"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1557852784.354000",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1557855215.000000"
        },
        "client_msg_id": "8f2c2360-c3c7-4913-9985-3df35c2b56b3",
        "text": "Yep, Week 4 had some nice links.\n\nOh! Week 10 is tasty too.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557845030.349600",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w191",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yep, Week 4 had some nice links.\n\nOh! Week 10 is tasty too."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1557854727.355200",
        "client_msg_id": "09b35eae-6a6b-4370-ac55-0ae6609dc474",
        "text": "Did anyone get this error when trying to join this Slack? \"Error Verifying Invite: Sorry, there was an unexpected error. Please try again.\" I have a friend who's having trouble joining from his phone.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557854727.355200",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1557879206.387300",
        "reply_users": [
            "U5TCAFTD3",
            "UFEQUBNNT",
            "UHWC9PXBL"
        ],
        "replies": [
            {
                "user": "U5TCAFTD3",
                "ts": "1557854770.355300"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1557854880.355500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1557879194.386700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1557879206.387300"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1557986831.165500",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yjJe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Did anyone get this error when trying to join this Slack? \"Error Verifying Invite: Sorry, there was an unexpected error. Please try again.\" I have a friend who's having trouble joining from his phone."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1557854770.355300",
        "client_msg_id": "362e017b-6e3c-45e4-966c-817fc5e1b60c",
        "text": "Yeah it seems not to work on mobile for some reason",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557854727.355200",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PIP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah it seems not to work on mobile for some reason"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1557854880.355500",
        "client_msg_id": "4b36c9fa-8bf9-4187-a066-3b8a4bf63fae",
        "text": "Ah, all right, I'll let him know. Thanks.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557854727.355200",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J8p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, all right, I'll let him know. Thanks."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJM9NG84Q",
        "type": "message",
        "ts": "1557860308.364300",
        "client_msg_id": "1f7aa03a-6651-4d41-b615-face530ed734",
        "text": "Just a random thought: I was looking at Bret Victor’s old Learnable Programming, and it had a little note about how programming consists of decomposing problems, and I realized: that’s not what I do these days. I spend all my time thinking about messaging and communication between systems, and “decomposition” feels like a luxury. I don’t know if that’s a general change in programming, or just the nature of my work or professional stage… but it feels like a real change to me.\n\nThat is, I spend a lot of time thinking about these things:\n1. What are the entities in my system? These could be as simple as objects, but might be remote services, or different processes, browser tabs, etc.\n2. Who knows what?\n3. Who needs to keep track of what?\n4. From any given context, how do I get access to the other entities?\n5. How do I communicate with them? The push\/pull of functions or RPC? Pub\/sub? Some wonky event system?\n6. Where does a particular change originate, and which entities are simply reactive?\n\nThis all is where a lot of modern language development leaves me cold. Types don’t offer much here. Going further, I think there really is a kind of modernist\/postmodernist break here (ala <http:\/\/homepages.mcs.vuw.ac.nz\/~kjx\/papers\/nopp.pdf>): modern approaches attempt to create self-consistent and robust systems, and postmodernist approaches accept that we operate in a diverse systems where a lot of important things happen at the intersection of incompatible modernist systems.\n\nI don’t have any conclusion in mind, but I’d be interested in people’s thoughts.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4791f7f49bc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/74791f7f49bc26afa271eced90cda37c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "",
            "real_name": "Ian Bicking",
            "display_name": "Ian Bicking",
            "team": "T5TCAFTA9",
            "name": "ian",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557860308.364300",
        "reply_count": 35,
        "reply_users_count": 10,
        "latest_reply": "1570003743.141300",
        "reply_users": [
            "UCUSW7WVD",
            "UJBAJNFLK",
            "UJM9NG84Q",
            "UEQ6M68H0",
            "UJKC8B0QN",
            "U8A5MS6R1",
            "UA14TGLTC",
            "UJN1TAYEQ",
            "UHDQ62M4P",
            "UM1HH60GN"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1557860866.364500"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1557860968.364800"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1557860976.365000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1557861224.365300"
            },
            {
                "user": "UJM9NG84Q",
                "ts": "1557862461.366100"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1557864999.367000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1557867147.367300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1557867912.368900"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557868947.381300"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1557869598.382100"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1557884793.388700"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1557895760.418200"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1557938276.425700"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1558039584.432200"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1568241117.287100"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1568241236.287300"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1568924362.391800"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1568959040.398700"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1568959213.398900"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1568959828.399100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1569796242.080200"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1569821270.091300"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1569822496.095400"
            },
            {
                "user": "UM1HH60GN",
                "ts": "1569852705.107100"
            },
            {
                "user": "UM1HH60GN",
                "ts": "1569852719.107300"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1569861076.114300"
            },
            {
                "user": "UM1HH60GN",
                "ts": "1569861461.114500"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1569896553.122900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1569910996.127500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1569914902.128400"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1569915641.128900"
            },
            {
                "user": "UM1HH60GN",
                "ts": "1569928703.136300"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1569931281.136500"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1569940995.136900"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1570003743.141300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fdx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just a random thought: I was looking at Bret Victor’s old Learnable Programming, and it had a little note about how programming consists of decomposing problems, and I realized: that’s not what I do these days. I spend all my time thinking about messaging and communication between systems, and “decomposition” feels like a luxury. I don’t know if that’s a general change in programming, or just the nature of my work or professional stage… but it feels like a real change to me.\n\nThat is, I spend a lot of time thinking about these things:\n1. What are the entities in my system? These could be as simple as objects, but might be remote services, or different processes, browser tabs, etc.\n2. Who knows what?\n3. Who needs to keep track of what?\n4. From any given context, how do I get access to the other entities?\n5. How do I communicate with them? The push\/pull of functions or RPC? Pub\/sub? Some wonky event system?\n6. Where does a particular change originate, and which entities are simply reactive?\n\nThis all is where a lot of modern language development leaves me cold. Types don’t offer much here. Going further, I think there really is a kind of modernist\/postmodernist break here (ala "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/homepages.mcs.vuw.ac.nz\/~kjx\/papers\/nopp.pdf"
                            },
                            {
                                "type": "text",
                                "text": "): modern approaches attempt to create self-consistent and robust systems, and postmodernist approaches accept that we operate in a diverse systems where a lot of important things happen at the intersection of incompatible modernist systems.\n\nI don’t have any conclusion in mind, but I’d be interested in people’s thoughts."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UJCHWTMH6",
                    "UJKC8B0QN",
                    "U8A5MS6R1",
                    "UFEQUBNNT",
                    "UA14TGLTC",
                    "UD3AK9JRF"
                ],
                "count": 7
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1557860866.364500",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1557861330.000000"
        },
        "client_msg_id": "f3aa9ec7-a31f-4ed2-a0b8-15d35ccca8cc",
        "text": "Modernist\/postmodernist seems a really fertile distinction alongside pro-evolution\/anti-evolution (my favored framing for what used to be west-coast vs east coast: <http:\/\/yosefk.com\/blog\/what-worse-is-better-vs-the-right-thing-is-really-about.html>) and liberal\/conservative (<https:\/\/gist.github.com\/cornchz\/3313150>).\n\n(I’ve been thinking about these categorizations lately after reading <https:\/\/josephg.com\/blog\/3-tribes>, which feels less general but still wrong in a constructive way.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557860308.364300",
        "parent_user_id": "UJM9NG84Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Agf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Modernist\/postmodernist seems a really fertile distinction alongside pro-evolution\/anti-evolution (my favored framing for what used to be west-coast vs east coast: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/yosefk.com\/blog\/what-worse-is-better-vs-the-right-thing-is-really-about.html"
                            },
                            {
                                "type": "text",
                                "text": ") and liberal\/conservative ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/gist.github.com\/cornchz\/3313150"
                            },
                            {
                                "type": "text",
                                "text": ").\n\n(I’ve been thinking about these categorizations lately after reading "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/josephg.com\/blog\/3-tribes"
                            },
                            {
                                "type": "text",
                                "text": ", which feels less general but still wrong in a constructive way.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHDQ62M4P"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1557860968.364800",
        "client_msg_id": "84a833cc-4d64-41b5-bcc7-176ff7091227",
        "text": "That reminds me of the explanation that Gerald Sussman has give for MIT's switch from Scheme to Python as their introductory language (it was in some video, I don't have the reference at hand unfortunately). He said that programming had changed, basic algorithms and data structures were less important now gluing stuff together. Python was a better fit for that kind of work.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557860308.364300",
        "parent_user_id": "UJM9NG84Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1E5T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That reminds me of the explanation that Gerald Sussman has give for MIT's switch from Scheme to Python as their introductory language (it was in some video, I don't have the reference at hand unfortunately). He said that programming had changed, basic algorithms and data structures were less important now gluing stuff together. Python was a better fit for that kind of work."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1557860976.365000",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1557861004.000000"
        },
        "client_msg_id": "38bb6c4d-473f-4898-ab05-33a4268d5250",
        "text": "I’m probably pretty batshit modernist:\n\n<http:\/\/akkartik.name\/about>\n<http:\/\/akkartik.name\/post\/libraries>\n<http:\/\/akkartik.name\/post\/libraries2>\n<http:\/\/akkartik.name\/post\/readable-bad>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557860308.364300",
        "parent_user_id": "UJM9NG84Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5ry",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m probably pretty batshit modernist:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/about"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/post\/libraries"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/post\/libraries2"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/post\/readable-bad"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1557861224.365300",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1557861279.000000"
        },
        "client_msg_id": "176ba259-425e-48c7-8a7f-23df6e11f662",
        "text": "<@UJBAJNFLK> I’ve seen that as well. It’s mentioned in <http:\/\/wingolog.org\/archives\/2009\/03\/24\/international-lisp-conference-day-two> so perhaps there was never a permalink for it. I’ve always found this argument tendentious and a rationalization. Even if the world turns out to be post-modernist (a big if), there’s value in the first few stages of learning being modernist.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557860308.364300",
        "parent_user_id": "UJM9NG84Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/MHo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " I’ve seen that as well. It’s mentioned in "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/wingolog.org\/archives\/2009\/03\/24\/international-lisp-conference-day-two"
                            },
                            {
                                "type": "text",
                                "text": " so perhaps there was never a permalink for it. I’ve always found this argument tendentious and a rationalization. Even if the world turns out to be post-modernist (a big if), there’s value in the first few stages of learning being modernist."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UETJZ9V0T",
        "type": "message",
        "ts": "1557861393.365700",
        "client_msg_id": "b83be102-de84-432d-8f37-fff3fa575b59",
        "text": "definitely in favor of user liberation here! I’ve also been using the related label “personal computation” (as in <https:\/\/twitter.com\/maxkreminski\/status\/1121174498533732352>) for some of my own work in this direction",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "c07ca0b2f01a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-26\/960723935025_c07ca0b2f01a007b5ce8_72.png",
            "first_name": "Max",
            "real_name": "Max Kreminski",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "maxkreminski",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557172593.159600",
        "parent_user_id": "U8A5MS6R1",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/maxkreminski|@maxkreminski>: officially planting a flag in the ground for “personal computation” as a research area involving the reclaiming of computation for individuals &amp; small communities\n\noverlaps with end-user programming, humane digital social platforms, player creativity in games, anarchist AI, etc",
                "ts": 1556143805,
                "author_name": "Max Kreminski",
                "author_link": "https:\/\/twitter.com\/maxkreminski\/status\/1121174498533732352",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1116631912146014215\/r4Amjrt-_normal.jpg",
                "author_subname": "@maxkreminski",
                "text": "officially planting a flag in the ground for “personal computation” as a research area involving the reclaiming of computation for individuals &amp; small communities\n\noverlaps with end-user programming, humane digital social platforms, player creativity in games, anarchist AI, etc",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/maxkreminski\/status\/1121174498533732352",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/maxkreminski\/status\/1121174498533732352",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KVv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "definitely in favor of user liberation here! I’ve also been using the related label “personal computation” (as in "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/maxkreminski\/status\/1121174498533732352"
                            },
                            {
                                "type": "text",
                                "text": ") for some of my own work in this direction"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "U8A5MS6R1",
                    "UD43R8ZFV",
                    "U6KQ2S410",
                    "UJ6LDMMN0",
                    "UBSMEUXAA"
                ],
                "count": 6
            }
        ]
    },
    {
        "user": "UJM9NG84Q",
        "type": "message",
        "ts": "1557862461.366100",
        "client_msg_id": "f6653752-cc3d-4abb-a014-56c1cec7ebb8",
        "text": "I don’t particularly like the term “glue”. It makes it seem like people are just slapping things together. IMHO the modernist work, encapsulated into a single process running a well-defined language, is the easy part. That’s why I spend all my time on the interprocess part… because it’s so much harder! And it tears down my attempts to create good programming language abstractions, because those abstractions don’t apply widely enough. Ideas and goals are spread out across many systems.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4791f7f49bc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/74791f7f49bc26afa271eced90cda37c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "",
            "real_name": "Ian Bicking",
            "display_name": "Ian Bicking",
            "team": "T5TCAFTA9",
            "name": "ian",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557860308.364300",
        "parent_user_id": "UJM9NG84Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rUZXY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don’t particularly like the term “glue”. It makes it seem like people are just slapping things together. IMHO the modernist work, encapsulated into a single process running a well-defined language, is the easy part. That’s why I spend all my time on the interprocess part… because it’s so much harder! And it tears down my attempts to create good programming language abstractions, because those abstractions don’t apply widely enough. Ideas and goals are spread out across many systems."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1557864605.366500",
        "client_msg_id": "163b4e5e-8979-4d69-b966-5e5143dcf982",
        "text": "typed arrays in JS have many restrictions such as being fixed in length. Not a very flexible tool, but it is progress.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557290857.200100",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D7Oiq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "typed arrays in JS have many restrictions such as being fixed in length. Not a very flexible tool, but it is progress."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1557864955.366800",
        "client_msg_id": "1cfb3050-dcf1-46d6-b584-8749f3e9caee",
        "text": "Does anyone have any thoughts on reactive datalog (<https:\/\/www.youtube.com\/watch?v=ZgqFlowyfTA>)? To me, it would seem, with reactive datalog, a lot of translation code between nodes that are separate in size and distance (db, server, browser) become un-necessary. This would imply a multiplicative reduction in codebase size and proportionately reduced complexity.\n\nI would across the software community were seeing an effort to push reactiveness into a component of the database, which of course, just shifts the effort, but does so in a manor that makes the tools (databases) easier to understand, rather then trying to bootsrape the functionality into your system later. Examples such as rethinkdb (rip), kafka streaming, spark, flink all do this at scale, but are unwiedly for small teams. More accessible reactive databases like firebase have a limited query  language and no universal way to update your client (browser) db.\n\nSo with that in mind, im very interested in:\n\n• thoughts on reactive databases in general\n• thoughts on how to sync browser state with the database\n• examples of existing works and papers\n• mathematical models surrounding these concepts (algorithms, proofs etc...)\n• tradeoffs, maybe a reactive database requires vastly more memory and space?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Reactive Datalog for Datomic - Nikolas Göbel",
                "title_link": "https:\/\/www.youtube.com\/watch?v=ZgqFlowyfTA",
                "author_name": "ClojureTV",
                "author_link": "https:\/\/www.youtube.com\/user\/ClojureTV",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/ZgqFlowyfTA\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Reactive Datalog for Datomic - Nikolas Göbel",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/ZgqFlowyfTA?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=ZgqFlowyfTA",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=ZgqFlowyfTA"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mICc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does anyone have any thoughts on reactive datalog ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=ZgqFlowyfTA"
                            },
                            {
                                "type": "text",
                                "text": ")? To me, it would seem, with reactive datalog, a lot of translation code between nodes that are separate in size and distance (db, server, browser) become un-necessary. This would imply a multiplicative reduction in codebase size and proportionately reduced complexity.\n\nI would across the software community were seeing an effort to push reactiveness into a component of the database, which of course, just shifts the effort, but does so in a manor that makes the tools (databases) easier to understand, rather then trying to bootsrape the functionality into your system later. Examples such as rethinkdb (rip), kafka streaming, spark, flink all do this at scale, but are unwiedly for small teams. More accessible reactive databases like firebase have a limited query  language and no universal way to update your client (browser) db.\n\nSo with that in mind, im very interested in:\n\n• thoughts on reactive databases in general\n• thoughts on how to sync browser state with the database\n• examples of existing works and papers\n• mathematical models surrounding these concepts (algorithms, proofs etc...)\n• tradeoffs, maybe a reactive database requires vastly more memory and space?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UHTPRR5SM",
                    "UHS9K1N6A",
                    "UA14TGLTC",
                    "UC2RTNAHZ"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1557864999.367000",
        "client_msg_id": "c89c9efc-3e81-426a-acec-f86ced04a8b9",
        "text": "Sussman didn't have the guts to admit that LISP is a tired dead horse, that should have been abandoned a long time ago. It has one of the lowest readability-by-other scores of of the known languages. I can think of only 2 languages worse than LISP for readability, and those are FORTH and APL. In Sussman's heyday there were only a few hundred computers in existence, and now that computers are everywhere, and there are millions of programmers, it is extremely important to be able to read and use other people's code. Take some random chunk of LISP and good luck trying to fit that. You can't determine the data structures being used in LISP unless you mentally execute the program in your head, and we all know that chess masters can play multiple games in their heads blindfolded, but that is not a widely distributed skill...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557860308.364300",
        "parent_user_id": "UJM9NG84Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W9l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sussman didn't have the guts to admit that LISP is a tired dead horse, that should have been abandoned a long time ago. It has one of the lowest readability-by-other scores of of the known languages. I can think of only 2 languages worse than LISP for readability, and those are FORTH and APL. In Sussman's heyday there were only a few hundred computers in existence, and now that computers are everywhere, and there are millions of programmers, it is extremely important to be able to read and use other people's code. Take some random chunk of LISP and good luck trying to fit that. You can't determine the data structures being used in LISP unless you mentally execute the program in your head, and we all know that chess masters can play multiple games in their heads blindfolded, but that is not a widely distributed skill..."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "tada",
                "users": [
                    "UKFNXF0F9"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1557867147.367300",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1557867204.000000"
        },
        "client_msg_id": "28c7805c-df11-4b5f-a8f6-2ecdd273e359",
        "text": "<@UJM9NG84Q> I definitely empathize, happy to stop using “glue”. It didn’t have negative connotations in my mind.\n\nThe recent thread on distributed computing may be relevant if you hadn’t already seen it: <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1557434052245400>\n\nI’m trying to be cognizant of my modernist bias, but there are levels of questions here:\n• How much of the difficulty creating abstractions that work across systems is due to design failures in individual systems?\n• Is it possible to cross the chasm to new, equally diverse systems that don’t suffer from those foundational design flaws?\n\nValid answers:\n• No matter what you do, the complexity of integrating across system boundaries will dominate. (In all domains?)\n• Maybe there’s a perfect world somewhere, but there’s no way for us to get there. We’re locked in by past decisions.\n• Change all the things!\n\nI think the answer depends on domain. Games, for example, often don’t have to deal with multiple platforms, and where they do they can polyfill the heck out of them to make integration plug and play. But that’s of course just one tiny end of the spectrum.\n\nOne may also be able to get away with modernism at lower layers of the stack. My background is in systems programming, and that maybe explains something.\n\nAnyways, just trying to throw out ideas that someone else can maybe run with to show me the limitations of my worldview:\n• Yes, we can and should change all the things.\n• Good fences make good neighbors. Good components simplify integration problems.\n• It will take a long time. Probably longer than a lifetime.\n• Nobody will ever have all the answers, so above all make foundational design decisions open to revision (with less effort than it will take with the current stack).\n• Lots of respect for people who have to live with and deal with the current state of the world in the meantime. (Like me in my day job.)\n\nBonus link if you read this far: <http:\/\/akkartik.name\/post\/deepness>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557860308.364300",
        "parent_user_id": "UJM9NG84Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cPH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJM9NG84Q"
                            },
                            {
                                "type": "text",
                                "text": " I definitely empathize, happy to stop using “glue”. It didn’t have negative connotations in my mind.\n\nThe recent thread on distributed computing may be relevant if you hadn’t already seen it: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1557434052245400"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI’m trying to be cognizant of my modernist bias, but there are levels of questions here:\n• How much of the difficulty creating abstractions that work across systems is due to design failures in individual systems?\n• Is it possible to cross the chasm to new, equally diverse systems that don’t suffer from those foundational design flaws?\n\nValid answers:\n• No matter what you do, the complexity of integrating across system boundaries will dominate. (In all domains?)\n• Maybe there’s a perfect world somewhere, but there’s no way for us to get there. We’re locked in by past decisions.\n• Change all the things!\n\nI think the answer depends on domain. Games, for example, often don’t have to deal with multiple platforms, and where they do they can polyfill the heck out of them to make integration plug and play. But that’s of course just one tiny end of the spectrum.\n\nOne may also be able to get away with modernism at lower layers of the stack. My background is in systems programming, and that maybe explains something.\n\nAnyways, just trying to throw out ideas that someone else can maybe run with to show me the limitations of my worldview:\n• Yes, we can and should change all the things.\n• Good fences make good neighbors. Good components simplify integration problems.\n• It will take a long time. Probably longer than a lifetime.\n• Nobody will ever have all the answers, so above all make foundational design decisions open to revision (with less effort than it will take with the current stack).\n• Lots of respect for people who have to live with and deal with the current state of the world in the meantime. (Like me in my day job.)\n\nBonus link if you read this far: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/post\/deepness"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJM9NG84Q"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1557867912.368900",
        "client_msg_id": "d569c754-b4b5-468a-9391-4a8b013e8283",
        "text": "Paraphrasing from the above link <http:\/\/homepages.mcs.vuw.ac.nz\/~kjx\/papers\/nopp.pdf> (section 5):\n\n&gt; It doesn’t make sense to say a Bovine object is an abstraction of a real cow.. or that the object in the program is “implemented by” a cow in reality.. or that the `Cow` class is a Platonic ideal of the immutable, eternal form of a cow.. Instead, the object in the program can be seen as a sign of the object in the world. Unlike abstractions, which can be reasoned about using deduction (from causes to effects), signs are effectively implications, and are modelled using abduction (reasoning from effects to causes).\n\n:heart: :heart:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557860308.364300",
        "parent_user_id": "UJM9NG84Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xy2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Paraphrasing from the above link "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/homepages.mcs.vuw.ac.nz\/~kjx\/papers\/nopp.pdf"
                            },
                            {
                                "type": "text",
                                "text": " (section 5):\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It doesn’t make sense to say a Bovine object is an abstraction of a real cow.. or that the object in the program is “implemented by” a cow in reality.. or that the "
                            },
                            {
                                "type": "text",
                                "text": "Cow",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " class is a Platonic ideal of the immutable, eternal form of a cow.. Instead, the object in the program can be seen as a sign of the object in the world. Unlike abstractions, which can be reasoned about using deduction (from causes to effects), signs are effectively implications, and are modelled using abduction (reasoning from effects to causes)."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "emoji",
                                "name": "heart",
                                "unicode": "2764-fe0f"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "heart",
                                "unicode": "2764-fe0f"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJM9NG84Q",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJKC8B0QN",
        "type": "message",
        "ts": "1557868947.381300",
        "client_msg_id": "7348685d-acde-4deb-b5d8-f3469078d4d0",
        "text": "<@UJM9NG84Q> I don't want to self-promote too much but your pain points here are too in-line with what I'm trying to do to hold myself back.  <https:\/\/strat.world\/> Strat's whole purpose is to provide language abstractions over what you've laid out up there.  It's still pretty early in development but it can deploy arbitrarily complex systems.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557860308.364300",
        "parent_user_id": "UJM9NG84Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w\/q5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJM9NG84Q"
                            },
                            {
                                "type": "text",
                                "text": " I don't want to self-promote too much but your pain points here are too in-line with what I'm trying to do to hold myself back.  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/strat.world\/"
                            },
                            {
                                "type": "text",
                                "text": " Strat's whole purpose is to provide language abstractions over what you've laid out up there.  It's still pretty early in development but it can deploy arbitrarily complex systems."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1557869598.382100",
        "client_msg_id": "ae3cb7d9-5a22-48d8-94b6-5faa815d5646",
        "text": "&gt; This all is where a lot of modern language development leaves me cold. Types don’t offer much here.\n\nAbsolutely. A lot of 'system design' happens outside the scope of a usual programming language. In the end languages are employed in the service of the system, but there seem to be a sharp contrast in the models of composition 'in-language\/in-process' vs 'cross-process'.\n\n&gt;  I spend all my time thinking about messaging and communication between systems, and “decomposition” feels like a luxury.\n\nYes. There is an incredible amount of model duplication in the way we build systems today. Each part is like an island where you define, from the ground up, each of the entities you wish to deal with in that island. The description of the larger system-wide entities and processes is shredded into little pieces, glued together with implementation details such as messaging libraries, and separated into various such islands.\n\n(From the linked paper)\n&gt; We consider that the term “program” is both too big and too little for post modern computer science.\n&gt; “Program” is too small because often we are  working on multiple programs.\nI suppose I heavily lean towards post-modern in this regard. \"Programs\" aren't interesting to me anymore and any model where you first compose programs (~processes) and then compose them into systems doesn't scale up well. Instead what's interesting is the whole lifecycle of the system, inspecting and updating the higher level processes that it embodies. Can we work with these directly? Update them, see the inspect the hypothetical effect on other processes, etc.? I wrote a bit here: <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1557508482325700>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557860308.364300",
        "parent_user_id": "UJM9NG84Q",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1557508482325700",
                "fallback": "[May 10th, 2019 10:14 AM] shalabh.chaturvedi: I find the infrastructure\/language separation not particularly useful. I think the problem is a 'system problem' - which doesn't say much but at least does not start by splitting up the system into infra and language. In a sense this infra\/language divide is similar to the language\/ide divide. We can choose to adopt this POV but will never think of things like Excel. This is a framing of the problem that I think hides other insights.\n\nIn the broad sense all you have is 'the system'.  One machine or multi doesn't matter. And what you are doing is 'negotiating with the system' to have it behave how you want. All negotiation is via back-and-forth messaging. One pattern that emerges is you write these static descriptions of little processes called programs in programming languages and send them off, as one message at a time, into the system. Then separately you send other messages to control (start\/stop) the previously defined programs, and yet other messages (yaml etc.) to wire them up. Each of your processes only run on one machine, but the larger logical process (which you never wrote down as a single program) is emergent behavior.  Almost all current improvements are trying to incrementally optimize this pattern.\n\nAre there other patterns that can be explored instead?",
                "ts": "1557508482.325700",
                "author_id": "U8A5MS6R1",
                "author_subname": "Shalabh Chaturvedi",
                "channel_id": "C5T9GPWFL",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "I find the infrastructure\/language separation not particularly useful. I think the problem is a 'system problem' - which doesn't say much but at least does not start by splitting up the system into infra and language. In a sense this infra\/language divide is similar to the language\/ide divide. We can choose to adopt this POV but will never think of things like Excel. This is a framing of the problem that I think hides other insights.\n\nIn the broad sense all you have is 'the system'.  One machine or multi doesn't matter. And what you are doing is 'negotiating with the system' to have it behave how you want. All negotiation is via back-and-forth messaging. One pattern that emerges is you write these static descriptions of little processes called programs in programming languages and send them off, as one message at a time, into the system. Then separately you send other messages to control (start\/stop) the previously defined programs, and yet other messages (yaml etc.) to wire them up. Each of your processes only run on one machine, but the larger logical process (which you never wrote down as a single program) is emergent behavior.  Almost all current improvements are trying to incrementally optimize this pattern.\n\nAre there other patterns that can be explored instead?",
                "author_name": "Shalabh Chaturvedi",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/U8A5MS6R1",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1557508482325700",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Svv5",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This all is where a lot of modern language development leaves me cold. Types don’t offer much here."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nAbsolutely. A lot of 'system design' happens outside the scope of a usual programming language. In the end languages are employed in the service of the system, but there seem to be a sharp contrast in the models of composition 'in-language\/in-process' vs 'cross-process'.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " I spend all my time thinking about messaging and communication between systems, and “decomposition” feels like a luxury."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nYes. There is an incredible amount of model duplication in the way we build systems today. Each part is like an island where you define, from the ground up, each of the entities you wish to deal with in that island. The description of the larger system-wide entities and processes is shredded into little pieces, glued together with implementation details such as messaging libraries, and separated into various such islands.\n\n(From the linked paper)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We consider that the term “program” is both too big and too little for post modern computer science.\n“Program” is too small because often we are  working on multiple programs."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suppose I heavily lean towards post-modern in this regard. \"Programs\" aren't interesting to me anymore and any model where you first compose programs (~processes) and then compose them into systems doesn't scale up well. Instead what's interesting is the whole lifecycle of the system, inspecting and updating the higher level processes that it embodies. Can we work with these directly? Update them, see the inspect the hypothetical effect on other processes, etc.? I wrote a bit here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1557508482325700"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJM9NG84Q"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFXFB1RK8",
        "type": "message",
        "ts": "1557877495.385700",
        "client_msg_id": "c15497e3-d330-4871-b03a-7158b52ac070",
        "text": "Reading what <@UJNJQD2AC> and <@UJM9NG84Q> above wrote leaves me thinking that what I love most about writing software in Elm (and to a lesser extent React) or SQL is what I don't have to think about. Particularly these last couple of years writing decentralized systems writes can come at me from anywhere at any time -- if I had to translate those back into specific \"display updates\" the reconciliation would be abominable. Vice versa, by channeling writes through a single point I get tremendous leverage to be able to interpose whatever storage engine I want. The flip side of all this, of course, is that it doesn't scale. By that I mean that the abstraction breaks down inevitably when speed becomes a first-order concern. That happens in SQL databases when you get a few gigabytes more data than your system has RAM (if not before) or in Elm \/ React when you are trying to respond on the next frame for things like text entry.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3ffd374deb8",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/53ffd374deb821ab07cdef9f7e321364.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Peter van Hardenberg",
            "display_name": "Peter van Hardenberg",
            "team": "T5TCAFTA9",
            "name": "pvh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557877495.385700",
        "reply_count": 13,
        "reply_users_count": 6,
        "latest_reply": "1558031347.431900",
        "reply_users": [
            "UFXFB1RK8",
            "UJNJQD2AC",
            "UA14TGLTC",
            "UCUSW7WVD",
            "U8A5MS6R1",
            "UJK8MKYAZ"
        ],
        "replies": [
            {
                "user": "UFXFB1RK8",
                "ts": "1557877538.385800"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1557877669.386100"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1557880966.387800"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1557885105.389000"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1557890704.389700"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1557890817.390000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1557970490.426600"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1558009459.428300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1558023658.428900"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1558023997.429200"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1558030017.431500"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1558030092.431700"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1558031347.431900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H8x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reading what "
                            },
                            {
                                "type": "user",
                                "user_id": "UJNJQD2AC"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "user",
                                "user_id": "UJM9NG84Q"
                            },
                            {
                                "type": "text",
                                "text": " above wrote leaves me thinking that what I love most about writing software in Elm (and to a lesser extent React) or SQL is what I don't have to think about. Particularly these last couple of years writing decentralized systems writes can come at me from anywhere at any time -- if I had to translate those back into specific \"display updates\" the reconciliation would be abominable. Vice versa, by channeling writes through a single point I get tremendous leverage to be able to interpose whatever storage engine I want. The flip side of all this, of course, is that it doesn't scale. By that I mean that the abstraction breaks down inevitably when speed becomes a first-order concern. That happens in SQL databases when you get a few gigabytes more data than your system has RAM (if not before) or in Elm \/ React when you are trying to respond on the next frame for things like text entry."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFXFB1RK8",
        "type": "message",
        "ts": "1557877538.385800",
        "client_msg_id": "b8ee0494-345f-42b9-8941-8cb1285af44a",
        "text": "I don't have any real conclusions from all this -- maybe that Reactive Programming could be a good idea -- and I can't explain why I don't have a positive sentiment towards Haskell despite it demonstrating these properties.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3ffd374deb8",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/53ffd374deb821ab07cdef9f7e321364.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Peter van Hardenberg",
            "display_name": "Peter van Hardenberg",
            "team": "T5TCAFTA9",
            "name": "pvh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557877495.385700",
        "parent_user_id": "UFXFB1RK8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vT7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't have any real conclusions from all this -- maybe that Reactive Programming could be a good idea -- and I can't explain why I don't have a positive sentiment towards Haskell despite it demonstrating these properties."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFXFB1RK8",
        "type": "message",
        "ts": "1557877669.386100",
        "client_msg_id": "ecad855f-544d-4790-92aa-f3bf9b9d8513",
        "text": "Broadly, I will note (as a recovering database person) that in the end you always have to look inside the box and inside the box is always a horrifying maze of abstractions and optimizations... or worse, it isn't.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3ffd374deb8",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/53ffd374deb821ab07cdef9f7e321364.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Peter van Hardenberg",
            "display_name": "Peter van Hardenberg",
            "team": "T5TCAFTA9",
            "name": "pvh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557877495.385700",
        "parent_user_id": "UFXFB1RK8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9wwf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Broadly, I will note (as a recovering database person) that in the end you always have to look inside the box and inside the box is always a horrifying maze of abstractions and optimizations... or worse, it isn't."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1557879194.386700",
        "client_msg_id": "761A731A-724C-46F7-8337-A2382A515F7E",
        "text": "yeah I had this problem trying to join on mobile",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557854727.355200",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GVI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah I had this problem trying to join on mobile"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1557879206.387300",
        "client_msg_id": "30B0CBB0-63CB-413D-B737-53EB812548A3",
        "text": "joining on desktop and then adding via mobile worked fine",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557854727.355200",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dO5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "joining on desktop and then adding via mobile worked fine"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1557880966.387800",
        "client_msg_id": "7a89e99a-d471-4635-924d-0503ccfc47e8",
        "text": "It's true that performance often adds complexity, in part, that's why it's interesting to consider a more declarative model to start. Eventually it might only become documentation, but it gives us something invaluable throughout, which is clarity of intent. \n\nI think trying to get something perfect here is too much, if we can just get something slightly better that's enough, both in terms of personal satisfaction and improving the ecosystem.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557877495.385700",
        "parent_user_id": "UFXFB1RK8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W\/3a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's true that performance often adds complexity, in part, that's why it's interesting to consider a more declarative model to start. Eventually it might only become documentation, but it gives us something invaluable throughout, which is clarity of intent. \n\nI think trying to get something perfect here is too much, if we can just get something slightly better that's enough, both in terms of personal satisfaction and improving the ecosystem."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1557883643.388200",
        "client_msg_id": "3a0a36aa-081f-4da2-a282-8f717b8bc034",
        "text": "<@UGLSY9X3J> in fairness to ML as an interface, one does interact with a ML system a bit differently than a conventional programming system.  Certainly has little to do with humanism.  If anything, input data and pray is even more obscure than attempting to codify rules.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557845030.349600",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V1\/4y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGLSY9X3J"
                            },
                            {
                                "type": "text",
                                "text": " in fairness to ML as an interface, one does interact with a ML system a bit differently than a conventional programming system.  Certainly has little to do with humanism.  If anything, input data and pray is even more obscure than attempting to codify rules."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1557884793.388700",
        "client_msg_id": "ecf38c8d-4e69-4cd0-83c4-307ebb950205",
        "text": "<@UJM9NG84Q> not just you.  To me it seems that the operating systems are what have mostly failed to raise to the occasion.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557860308.364300",
        "parent_user_id": "UJM9NG84Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OBDH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJM9NG84Q"
                            },
                            {
                                "type": "text",
                                "text": " not just you.  To me it seems that the operating systems are what have mostly failed to raise to the occasion."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1557885105.389000",
        "client_msg_id": "d35e3c69-9526-40c9-a727-1d818dcc90ba",
        "text": "What with Turing tarpits, the value of a programming environment is not in what it can, but in what it does *not* do well.  It's not the features but the limitations.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557877495.385700",
        "parent_user_id": "UFXFB1RK8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NT3Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What with Turing tarpits, the value of a programming environment is not in what it can, but in what it does "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " do well.  It's not the features but the limitations."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1557885634.389200",
        "client_msg_id": "7ee89abc-3dbc-4522-8a6e-9c12ab970054",
        "text": "<@U6KQ2S410> having seen the phrase in context, \"user liberation front\" as a term works.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557172593.159600",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F2O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": " having seen the phrase in context, \"user liberation front\" as a term works."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U6KQ2S410"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1557890704.389700",
        "edited": {
            "user": "UJNJQD2AC",
            "ts": "1557890762.000000"
        },
        "client_msg_id": "7ebd1a6f-b19d-42ab-8df6-9f76a28c4689",
        "text": "Sure, I'm not aware yet of the constraints around datalog as a query language. I'm sure they exist, I just haven't encountered it in my very short travels. \n\nThough using it only as a query language is one form of limitation. \n\nDatalog is based on prolog, so that would be interesting to study as a look into how the model applies more generally.\n\nMore directly, the biggest thing you can't do, is fine tune performance at this layer of abstraction.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557877495.385700",
        "parent_user_id": "UFXFB1RK8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k0Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sure, I'm not aware yet of the constraints around datalog as a query language. I'm sure they exist, I just haven't encountered it in my very short travels. \n\nThough using it only as a query language is one form of limitation. \n\nDatalog is based on prolog, so that would be interesting to study as a look into how the model applies more generally.\n\nMore directly, the biggest thing you can't do, is fine tune performance at this layer of abstraction."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1557890817.390000",
        "client_msg_id": "627d1495-1e69-4adb-82f3-ee0914c3b217",
        "text": "Datalog is a good example since it's like Prolog the good parts.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557877495.385700",
        "parent_user_id": "UFXFB1RK8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Aq7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Datalog is a good example since it's like Prolog the good parts."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1557892873.409500",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1557893525.000000"
        },
        "client_msg_id": "4fdbf6eb-4edb-475f-b2bc-8759f6feb897",
        "text": "I just came across this video of Alan Kay delving deep into what \"object oriented\" really meant, and how it differs from other systems and languages that later claimed to be OO:\n\n<https:\/\/youtu.be\/QjJaFG63Hlo>\n\nThere's also this similar (shorter and less in-depth) one by Dan Ingalls:\n\n<https:\/\/youtu.be\/Ao9W93OxQ7U>\n\nA few interesting points that I gathered:\n\n* It's not OO without message passing (e.g. you can request an object to do something, but it's not a command like a method-call is).\n* This is partly so that the \"message\" remains intact at runtime, rather than being compiled away, so that (for example) you could later substitute different objects that reasons to the same messages, without breaking anything.\n* Classes and static types are not that important. It's more about the objects and messages\n* One goal is to get rid of the idea of \"control flow\" passing from one object to another, and instead have each advertize what it needs or what it's intent is, and let a kernel do the \"wiring\" automatically. Objects can thus run in parallel, or even in different machines, and the communication \/ execution is the same.\n* Modularity actually ends up being much less important than having much smaller systems &amp; code. The OO approach Kay gives (if done right) allows code to be reduced enormously, but at the cost of not being modular. But so what, because the whole thing (whatever it may be) is very simple to understand and maintain and change.\n* Apparently MVC (model, view, controller) was built-in, and you never need any code for keeping track of or updating what is displayed anywhere. Instead, each object just provides a spec for how it should be drawn or displayed, and the kernel automatically takes care of getting updated views of the object at regular intervals (when it has changed)\n\n(I might have some of this a bit wrong, and maybe some of it is specific to SmallTalk. My point here is just to give a hint of what you might find in these videos, and what you might think about if you (e.g. <@UCQ4BBFQ9>?) want to experiment with an \"actual\" OO system)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557892873.409500",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1558004530.428000",
        "reply_users": [
            "U8A5MS6R1",
            "UJQRDCZRA"
        ],
        "replies": [
            {
                "user": "U8A5MS6R1",
                "ts": "1557944647.426200"
            },
            {
                "user": "UJQRDCZRA",
                "ts": "1558004530.428000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Seminar with Alan Kay on Object Oriented Programming (VPRI 0246)",
                "title_link": "https:\/\/youtu.be\/QjJaFG63Hlo",
                "author_name": "Yoshiki Ohshima",
                "author_link": "https:\/\/www.youtube.com\/user\/yoshikiohshima",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/QjJaFG63Hlo\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Seminar with Alan Kay on Object Oriented Programming (VPRI 0246)",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/QjJaFG63Hlo?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/youtu.be\/QjJaFG63Hlo",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/QjJaFG63Hlo"
            },
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Object-Oriented Programming, lecture by Daniel Ingalls",
                "title_link": "https:\/\/youtu.be\/Ao9W93OxQ7U",
                "author_name": "Computer History Museum",
                "author_link": "https:\/\/www.youtube.com\/user\/ComputerHistory",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/Ao9W93OxQ7U\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Object-Oriented Programming, lecture by Daniel Ingalls",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/Ao9W93OxQ7U?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/youtu.be\/Ao9W93OxQ7U",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 2,
                "original_url": "https:\/\/youtu.be\/Ao9W93OxQ7U"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gly8V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just came across this video of Alan Kay delving deep into what \"object oriented\" really meant, and how it differs from other systems and languages that later claimed to be OO:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/QjJaFG63Hlo"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThere's also this similar (shorter and less in-depth) one by Dan Ingalls:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/Ao9W93OxQ7U"
                            },
                            {
                                "type": "text",
                                "text": "\n\nA few interesting points that I gathered:\n\n* It's not OO without message passing (e.g. you can request an object to do something, but it's not a command like a method-call is).\n* This is partly so that the \"message\" remains intact at runtime, rather than being compiled away, so that (for example) you could later substitute different objects that reasons to the same messages, without breaking anything.\n* Classes and static types are not that important. It's more about the objects and messages\n* One goal is to get rid of the idea of \"control flow\" passing from one object to another, and instead have each advertize what it needs or what it's intent is, and let a kernel do the \"wiring\" automatically. Objects can thus run in parallel, or even in different machines, and the communication \/ execution is the same.\n* Modularity actually ends up being much less important than having much smaller systems & code. The OO approach Kay gives (if done right) allows code to be reduced enormously, but at the cost of not being modular. But so what, because the whole thing (whatever it may be) is very simple to understand and maintain and change.\n* Apparently MVC (model, view, controller) was built-in, and you never need any code for keeping track of or updating what is displayed anywhere. Instead, each object just provides a spec for how it should be drawn or displayed, and the kernel automatically takes care of getting updated views of the object at regular intervals (when it has changed)\n\n(I might have some of this a bit wrong, and maybe some of it is specific to SmallTalk. My point here is just to give a hint of what you might find in these videos, and what you might think about if you (e.g. "
                            },
                            {
                                "type": "user",
                                "user_id": "UCQ4BBFQ9"
                            },
                            {
                                "type": "text",
                                "text": "?) want to experiment with an \"actual\" OO system)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UAJ9DV971",
                    "U8A5MS6R1",
                    "UE0ETTCG7"
                ],
                "count": 4
            },
            {
                "name": "+1",
                "users": [
                    "UJFN50C00",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1557895760.418200",
        "client_msg_id": "d0b6c938-1a3b-4f92-a5b1-9be0b3b20fd9",
        "text": "After reading the paper, I find I actually have a reasonable ‘post-modern component’ to my belief system:\n• Section 6: I think ‘requirements’ are not a good way to frame collaboration on software.\n• Section 7: I have no bias between ‘high’ and ‘low’ computing culture. Mostly because I’m too dense for these ideas to even register. (However, being blase about “faults in construction” is hard to stomach.)\n• Section 7: I love the idea of “ancient programs living in connection with programs not yet written”. Here’s my original introduction post from last year: <https:\/\/futureprogramming.slack.com\/archives\/CC2JRGVLK\/p1536962970000100>\n• Section 8: I’ve written about our over-reliance on modules: <http:\/\/akkartik.name\/post\/modularity>. I care primarily about encouraging outsiders to read source code, and there’s a fundamental tension there: abstractions help authors manage a codebase but initially hinder outsiders in understanding the codebase.\n\nAlright, I’m done navel-gazing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557860308.364300",
        "parent_user_id": "UJM9NG84Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qfc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "After reading the paper, I find I actually have a reasonable ‘post-modern component’ to my belief system:\n• Section 6: I think ‘requirements’ are not a good way to frame collaboration on software.\n• Section 7: I have no bias between ‘high’ and ‘low’ computing culture. Mostly because I’m too dense for these ideas to even register. (However, being blase about “faults in construction” is hard to stomach.)\n• Section 7: I love the idea of “ancient programs living in connection with programs not yet written”. Here’s my original introduction post from last year: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureprogramming.slack.com\/archives\/CC2JRGVLK\/p1536962970000100"
                            },
                            {
                                "type": "text",
                                "text": "\n• Section 8: I’ve written about our over-reliance on modules: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/post\/modularity"
                            },
                            {
                                "type": "text",
                                "text": ". I care primarily about encouraging outsiders to read source code, and there’s a fundamental tension there: abstractions help authors manage a codebase but initially hinder outsiders in understanding the codebase.\n\nAlright, I’m done navel-gazing."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    }
]