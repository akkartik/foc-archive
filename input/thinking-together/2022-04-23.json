[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1650702843.175699",
        "client_msg_id": "0d581376-3920-4f61-94cc-968c37e7a90e",
        "text": "My experience is much the same as <@UCUSW7WVD>'s. The one environment that feels as programmable today as it did 15 years ago is Emacs. I suspect Emacs itself also grew bigger, if only for GUI improvements such as better rendering. But from the point of view of add-ons and customization, it's constant.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650464577.515109",
        "parent_user_id": "U03CEGR3HSL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "v0m2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My experience is much the same as "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": "'s. The one environment that feels as programmable today as it did 15 years ago is Emacs. I suspect Emacs itself also grew bigger, if only for GUI improvements such as better rendering. But from the point of view of add-ons and customization, it's constant."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03CEGR3HSL",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1650727820.667669",
        "client_msg_id": "c764f519-dfae-4fc2-a0e1-1751ae5ebec4",
        "text": "That was tantalizing enough that I did some more digging.\n\nEmacs in 1997 (v20.1): 152kLoC C, 386kLoC lisp, 1010 lisp DEFUNs defined in C, 15k defuns defined in lisp\nEmacs in 2022: 405kLoC C, 1.25MLoC lisp, 1780 lisp DEFUNs defined in C, 42k defuns defined in lisp\n\nThis is pretty blunt, of course. I'm just counting `DEFUN` in the `src\/` directory and `^(defun`  in the `lisp\/` directory. Let me know if there's a more accurate approach. But my impression is that Emacs pays so much attention to backwards compatibility that you are able to ignore new affordances for add-ons and customization until you need to go find something.\n\nFor completeness:\n\nVim: 275kLoC in 2006 (v7.0) -&gt; 390kLoC now\nNeovim: 167kLoC in 2015 (v0.1.0) -&gt; 238kLoC now\n\nVery interesting that Neovim is smaller now than Vim was in 2006.\n\ntl;dr - `sloccount` is a useful tool!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650464577.515109",
        "parent_user_id": "U03CEGR3HSL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rL9d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That was tantalizing enough that I did some more digging.\n\nEmacs in 1997 (v20.1): 152kLoC C, 386kLoC lisp, 1010 lisp DEFUNs defined in C, 15k defuns defined in lisp\nEmacs in 2022: 405kLoC C, 1.25MLoC lisp, 1780 lisp DEFUNs defined in C, 42k defuns defined in lisp\n\nThis is pretty blunt, of course. I'm just counting "
                            },
                            {
                                "type": "text",
                                "text": "DEFUN",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in the "
                            },
                            {
                                "type": "text",
                                "text": "src\/",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " directory and "
                            },
                            {
                                "type": "text",
                                "text": "^(defun ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in the "
                            },
                            {
                                "type": "text",
                                "text": "lisp\/",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " directory. Let me know if there's a more accurate approach. But my impression is that Emacs pays so much attention to backwards compatibility that you are able to ignore new affordances for add-ons and customization until you need to go find something.\n\nFor completeness:\n\nVim: 275kLoC in 2006 (v7.0) -> 390kLoC now\nNeovim: 167kLoC in 2015 (v0.1.0) -> 238kLoC now\n\nVery interesting that Neovim is smaller now than Vim was in 2006.\n\ntl;dr - "
                            },
                            {
                                "type": "text",
                                "text": "sloccount",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is a useful tool!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03CEGR3HSL",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1650728125.332199",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1650728167.000000"
        },
        "client_msg_id": "e8500f36-296d-4f5a-8d11-448b34ccd696",
        "text": "Another potential metric that occurs to me here is \"build difficulty index\". Not really covered at all by my stats above.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650464577.515109",
        "parent_user_id": "U03CEGR3HSL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6iaZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another potential metric that occurs to me here is \"build difficulty index\". Not really covered at all by my stats above."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03CEGR3HSL",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1650731586.091999",
        "client_msg_id": "250db856-6137-4345-82c4-252f10055409",
        "text": "My point is that I don't really care about the size of Emacs. I do look at Emacs source code (the Lisp part) quite often, but I get there by navigating from my own code to layers below. As long as the number of layers I have to go through doesn't increase, the size of the Lisp code is irrelevant for me.\n\nAs you note, Emacs values backwards compatibility highly, which is something I do care about. Perhaps even more importantly, Emacs values programmability, and therefore offers good support for exploring its own source code.\n\nSo a good metric would perhaps be \"number of navigation steps until you hit a primitive\" (which for Emacs would be a function implemented in C)&gt;",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650464577.515109",
        "parent_user_id": "U03CEGR3HSL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jxj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My point is that I don't really care about the size of Emacs. I do look at Emacs source code (the Lisp part) quite often, but I get there by navigating from my own code to layers below. As long as the number of layers I have to go through doesn't increase, the size of the Lisp code is irrelevant for me.\n\nAs you note, Emacs values backwards compatibility highly, which is something I do care about. Perhaps even more importantly, Emacs values programmability, and therefore offers good support for exploring its own source code.\n\nSo a good metric would perhaps be \"number of navigation steps until you hit a primitive\" (which for Emacs would be a function implemented in C)>"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03CEGR3HSL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1650733506.325319",
        "client_msg_id": "bc258270-6ffb-4c59-89e0-3ed2aaf139c7",
        "text": "I'm kinda handwaving that the amount of elisp growing at the same pace as C above suggests there's no difference between C and Lisp once you start poking at the internals of the elisp. But if you're just _using_ the elisp primitives, the surface area of names (which I'm estimating by counting `defun`s) does seem to grow a bit slower than the total volume of Emacs code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650464577.515109",
        "parent_user_id": "U03CEGR3HSL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JwG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm kinda handwaving that the amount of elisp growing at the same pace as C above suggests there's no difference between C and Lisp once you start poking at the internals of the elisp. But if you're just "
                            },
                            {
                                "type": "text",
                                "text": "using",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the elisp primitives, the surface area of names (which I'm estimating by counting "
                            },
                            {
                                "type": "text",
                                "text": "defun",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "s) does seem to grow a bit slower than the total volume of Emacs code."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1650781756.976969",
        "client_msg_id": "6e40a3cb-212c-484a-a1fa-8be052d99a2f",
        "text": "Surface matters more than volume, indeed, but any simple metric misses the importance of modularity. I suppose Emacs' size made a jump when org-mode was adopted into the core distribution, but this had no impact on people not using org-mode. They could (still can) simply ignore it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650464577.515109",
        "parent_user_id": "U03CEGR3HSL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZhJN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Surface matters more than volume, indeed, but any simple metric misses the importance of modularity. I suppose Emacs' size made a jump when org-mode was adopted into the core distribution, but this had no impact on people not using org-mode. They could (still can) simply ignore it."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]