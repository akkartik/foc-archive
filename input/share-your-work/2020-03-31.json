[
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1585660982.034100",
        "client_msg_id": "add77705-7759-4ad6-9ffa-b59a37ca2519",
        "text": "Hey everyone! A while ago I have shared video of short presentation about generic tree editor (Towards efficient development tools).\n\nSince then I got some progress, recorded a video demo to document it.\nI would be glad to receive feedback: <https:\/\/youtu.be\/KOHNUtw8h5o>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "reply_count": 49,
        "reply_users_count": 10,
        "latest_reply": "1586293219.095700",
        "reply_users": [
            "UBN9AFS0N",
            "UUQ2EQW21",
            "UCKRZS3DZ",
            "ULM3U6275",
            "U85HCL7JP",
            "UDQBTJ211",
            "UHDQ62M4P",
            "UCUSW7WVD",
            "U5STGTB3J",
            "U0118UBB41G"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1585662821.034700"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1585669213.034900"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1585669381.035100"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1585669475.035300"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1585669487.035500"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1585669639.035700"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1585670236.035900"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1585670420.036100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1585670525.036300"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1585672087.036500"
            },
            {
                "user": "ULM3U6275",
                "ts": "1585673533.037000"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1585673674.037200"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1585677659.037600"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1585678665.037800"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1585678849.038000"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1585678892.038400"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1585679258.038600"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1585679263.038800"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1585687224.039800"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1585687463.040000"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1585688478.040200"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1585691363.040500"
            },
            {
                "user": "ULM3U6275",
                "ts": "1585698285.041300"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1585721554.041800"
            },
            {
                "user": "ULM3U6275",
                "ts": "1585760888.047900"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1585761879.048500"
            },
            {
                "user": "ULM3U6275",
                "ts": "1585762285.048800"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1585762342.049000"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1585762374.049200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1586244000.066000"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1586246108.066200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1586246554.066800"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1586247240.067100"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1586247458.067900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1586247706.068300"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1586248179.068500"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1586254074.083000"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1586254217.084200"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1586254381.086900"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1586254886.087100"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1586255422.087500"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1586255623.087800"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1586255951.091000"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1586256067.093700"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1586257738.093900"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1586258062.094100"
            },
            {
                "user": "U0118UBB41G",
                "ts": "1586268278.094800"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1586269452.095100"
            },
            {
                "user": "U0118UBB41G",
                "ts": "1586293219.095700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Generic Tree Editor prototype -- Vladimir Gordeev",
                "title_link": "https:\/\/youtu.be\/KOHNUtw8h5o",
                "author_name": "Vladimir Gordeev",
                "author_link": "https:\/\/www.youtube.com\/user\/GordeevVladimirV",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/KOHNUtw8h5o\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Generic Tree Editor prototype -- Vladimir Gordeev",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/KOHNUtw8h5o?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/KOHNUtw8h5o",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/KOHNUtw8h5o"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wx2B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey everyone! A while ago I have shared video of short presentation about generic tree editor (Towards efficient development tools).\n\nSince then I got some progress, recorded a video demo to document it.\nI would be glad to receive feedback: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/KOHNUtw8h5o"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "ULM3U6275",
                    "UJBAJNFLK",
                    "UA14TGLTC",
                    "UT9TWSZB5"
                ],
                "count": 4
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U79HM6726"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1585661142.034300",
        "client_msg_id": "0a0dc601-53cb-4c8f-a57e-a47d9397eecb",
        "text": "Some of the commentators were asking for a video demo. Two months later finally it here:\n<https:\/\/www.youtube.com\/watch?v=KOHNUtw8h5o>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579618716.012400",
        "parent_user_id": "UCKRZS3DZ",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Generic Tree Editor prototype -- Vladimir Gordeev",
                "title_link": "https:\/\/www.youtube.com\/watch?v=KOHNUtw8h5o",
                "author_name": "Vladimir Gordeev",
                "author_link": "https:\/\/www.youtube.com\/user\/GordeevVladimirV",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/KOHNUtw8h5o\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Generic Tree Editor prototype -- Vladimir Gordeev",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/KOHNUtw8h5o?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=KOHNUtw8h5o",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=KOHNUtw8h5o"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OGXA1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some of the commentators were asking for a video demo. Two months later finally it here:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=KOHNUtw8h5o"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1585662821.034700",
        "client_msg_id": "f57e7a5c-d395-4cc2-864e-570b74552adf",
        "text": "at the end you mention that you would like to develop a small functional programming language to experiment with it, wouldn't it be faster and more focused to use scheme\/fennel or even a language like lambdu or hazel instead of adding an extra project?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WPY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "at the end you mention that you would like to develop a small functional programming language to experiment with it, wouldn't it be faster and more focused to use scheme\/fennel or even a language like lambdu or hazel instead of adding an extra project?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1585669213.034900",
        "client_msg_id": "bbc507a9-0341-4f29-bbf2-3d4a86c44112",
        "text": "Oh, Fennel looks interesting :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TTH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh, Fennel looks interesting "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1585669381.035100",
        "client_msg_id": "2bf9b76c-a2ac-454f-a293-25f24143e9a0",
        "text": "I was thinking about adopting this editor to Scheme. Then I realized that to demonstrate some cool features that structure-stored code provides it would require to modify Scheme, it likely won't be standard-compliant.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hWI+5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was thinking about adopting this editor to Scheme. Then I realized that to demonstrate some cool features that structure-stored code provides it would require to modify Scheme, it likely won't be standard-compliant."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1585669475.035300",
        "client_msg_id": "cf08ada8-fb13-4206-b47e-13564408ac82",
        "text": "You couldn't make a DSL in scheme to do what you want?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vx2S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You couldn't make a DSL in scheme to do what you want?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1585669487.035500",
        "client_msg_id": "3a7e7c7e-0c06-4f07-991f-c11e21693242",
        "text": "(just watched the video by the way; nice UI)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L+Q+P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(just watched the video by the way; nice UI)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1585669639.035700",
        "client_msg_id": "62b71694-3926-4d0c-a565-5c87f6844ae5",
        "text": "adopting a subset of an existing language will save you a lot of time and also will make it easier for others to understand what's going on since they won't have to understand a new tool and a new language at the same time. Also it may get more adopted if the language it supports has existing users",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5yS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "adopting a subset of an existing language will save you a lot of time and also will make it easier for others to understand what's going on since they won't have to understand a new tool and a new language at the same time. Also it may get more adopted if the language it supports has existing users"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1585670236.035900",
        "client_msg_id": "0b036179-b3ef-472f-979a-7a193caa34b6",
        "text": "<@UBN9AFS0N> I think I clearly understand what are you talking about and I agree with you.\n\nI am not planning to create a language that will get widely adopted. That's not the goal. Instead I just want to explore possible features that structure-based source code editing may provide.\n\nIt think that target audience of this project are not actual programmers, but programming language enthusiasts, basically future of coding people. I would like to create platform for experiments.\n\nI certainly would like to adopt to this editor platform something familiar like Scheme and make development more convenient than usual relying on structure-based source code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OSL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " I think I clearly understand what are you talking about and I agree with you.\n\nI am not planning to create a language that will get widely adopted. That's not the goal. Instead I just want to explore possible features that structure-based source code editing may provide.\n\nIt think that target audience of this project are not actual programmers, but programming language enthusiasts, basically future of coding people. I would like to create platform for experiments.\n\nI certainly would like to adopt to this editor platform something familiar like Scheme and make development more convenient than usual relying on structure-based source code."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1585670420.036100",
        "client_msg_id": "d3a3234f-00f2-4c46-8210-256c75ded44f",
        "text": "if you want to explore possible features for a structure-based source code editor, then what better than the requirements enforced by existing languages? I'm not saying to support all, but you can pick and chose from a really restricted subset and grow from there. If you want to explore what a language designed from the ground up to be a first class citizen on that type of editors, then creating a language may be part of the project, but you mention that your editor plans to be generic, so supporting existing languages and formats saves you time and gets wider audience",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=OPq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if you want to explore possible features for a structure-based source code editor, then what better than the requirements enforced by existing languages? I'm not saying to support all, but you can pick and chose from a really restricted subset and grow from there. If you want to explore what a language designed from the ground up to be a first class citizen on that type of editors, then creating a language may be part of the project, but you mention that your editor plans to be generic, so supporting existing languages and formats saves you time and gets wider audience"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1585670525.036300",
        "client_msg_id": "e5d8312e-3895-4db9-a099-7d2892c9b359",
        "text": "my feedback is just because I see promise in your idea and I think that the new language idea would take energy and focus from the main activity, you may run out of energy\/time or get to a dead end just because you decided to attack two problems at the same time",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oTXI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "my feedback is just because I see promise in your idea and I think that the new language idea would take energy and focus from the main activity, you may run out of energy\/time or get to a dead end just because you decided to attack two problems at the same time"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "ULM3U6275",
                    "U79HM6726"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1585672087.036500",
        "client_msg_id": "9e7bc9fc-c707-42dc-bd56-95965fbc3150",
        "text": "Your comments really made me think, <@UBN9AFS0N>. I even went for a short walk to sort things out with clear head. Thank you for that!\n\nI realized that making a platform for experiments for others is my secondary goal. My actual first goal is to implement vision of convenient programming that I have. Generic tree editor is just a step towards it.\n\nIf creating a platform generic structure editing was the only goal, then indeed I should work with existing structure-based programming languages, make it convenient to edit code written in them. But for now that is my secondary goal.\n\nFor my first goal I need flexibility from both sides: on the editor side, on the programming language design side. If I rely on existing programming languages I lose freedom on one side. Lamdu and Unison do not look like thing that I have in mind.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wrw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Your comments really made me think, "
                            },
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": ". I even went for a short walk to sort things out with clear head. Thank you for that!\n\nI realized that making a platform for experiments for others is my secondary goal. My actual first goal is to implement vision of convenient programming that I have. Generic tree editor is just a step towards it.\n\nIf creating a platform generic structure editing was the only goal, then indeed I should work with existing structure-based programming languages, make it convenient to edit code written in them. But for now that is my secondary goal.\n\nFor my first goal I need flexibility from both sides: on the editor side, on the programming language design side. If I rely on existing programming languages I lose freedom on one side. Lamdu and Unison do not look like thing that I have in mind."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1585673533.037000",
        "client_msg_id": "30e1cc41-827a-45cc-a6a4-62481c311bc2",
        "text": "<@UCKRZS3DZ> This looks really nice. What was the keyboard command to duplicate entries?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yR9I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCKRZS3DZ"
                            },
                            {
                                "type": "text",
                                "text": " This looks really nice. What was the keyboard command to duplicate entries?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1585673674.037200",
        "client_msg_id": "dde8f539-aa96-428e-b491-c04638945348",
        "text": "<@ULM3U6275> You do Shift + arrows to go into selection mode. After that just press D.\n\nI wanted to make it modeless, but Ctrl+D, Alt+D, Ctrl+Shift+D seem already binded by browser.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N3iZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "ULM3U6275"
                            },
                            {
                                "type": "text",
                                "text": " You do Shift + arrows to go into selection mode. After that just press D.\n\nI wanted to make it modeless, but Ctrl+D, Alt+D, Ctrl+Shift+D seem already binded by browser."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1585677659.037600",
        "client_msg_id": "b724aefc-4933-4303-934c-709aad8feffe",
        "text": "I’m working on a project that has some overlap with your ideas. But it’s still in a really early stage, so I don’t have much to show rn.\n2 questions:\n• Do you have a grammar for how are you storing AST’s?\n• Are you storing the text in files? I’m playing with storing the AST’s in a database\nCool video <@UCKRZS3DZ>!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7D\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m working on a project that has some overlap with your ideas. But it’s still in a really early stage, so I don’t have much to show rn.\n2 questions:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Do you have a grammar for how are you storing AST’s?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Are you storing the text in files? I’m playing with storing the AST’s in a database"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cool video "
                            },
                            {
                                "type": "user",
                                "user_id": "UCKRZS3DZ"
                            },
                            {
                                "type": "text",
                                "text": "!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1585678665.037800",
        "client_msg_id": "428e29b9-888a-4702-82be-6337f333df6a",
        "text": "<@U85HCL7JP> Thanks!\n\nNo grammar, I just store DAG as it is. Just like when you store JSON you don't use any grammar.\n\nRight now I store it in browser's key-value localStorage. I calculate hash for each node, hash serves as a key. Pretty much the same way Git stores its DAGs.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bWmF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U85HCL7JP"
                            },
                            {
                                "type": "text",
                                "text": " Thanks!\n\nNo grammar, I just store DAG as it is. Just like when you store JSON you don't use any grammar.\n\nRight now I store it in browser's key-value localStorage. I calculate hash for each node, hash serves as a key. Pretty much the same way Git stores its DAGs."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Is this Erlang AST?",
        "files": [
            {
                "id": "F010V6WHG1F",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "U85HCL7JP",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rQP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is this Erlang AST?"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1585678849.038000",
        "client_msg_id": "eefadee8-b3a9-4402-87e9-9ca7404502f5",
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ"
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1585678892.038400",
        "client_msg_id": "bab83a4f-d842-4825-bf47-25f6aa96034e",
        "text": "Nice demo. I always have way more respect for tools that scale arbitrarily, as this one does. It feels serious and not a toy built for a demo.\n\nOne possible improvement would be a zoomed out overview of where you are in the whole tree, similar to Sublime Text's zoomed out document in the top right. You could click that to make massive jumps quickly without going all the way up and all the way down again.\n\nI personally like to know \"where I am\" globally at a glance, it helps me organise stuff in my head",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SV8h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice demo. I always have way more respect for tools that scale arbitrarily, as this one does. It feels serious and not a toy built for a demo.\n\nOne possible improvement would be a zoomed out overview of where you are in the whole tree, similar to Sublime Text's zoomed out document in the top right. You could click that to make massive jumps quickly without going all the way up and all the way down again.\n\nI personally like to know \"where I am\" globally at a glance, it helps me organise stuff in my head"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1585679258.038600",
        "client_msg_id": "9c786241-330c-4341-bfd3-5db5f2509f4f",
        "text": "<@UDQBTJ211> Thanks!\n&gt; One possible improvement would be a zoomed out overview of where you are in the whole tree, similar to Sublime Text's zoomed out document in the top right.\nThat's in todo list :smiley:\nThere are many things that I would like to have in this editor, just hadn't time for it.\n\nAnother thing I want to add is to switch to spreadsheet user interface if almost all entries of current node have same set of keys. This way you can work with tabular data, while still keeping abstraction of a tree.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6A5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " Thanks!\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One possible improvement would be a zoomed out overview of where you are in the whole tree, similar to Sublime Text's zoomed out document in the top right."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's in todo list "
                            },
                            {
                                "type": "emoji",
                                "name": "smiley",
                                "unicode": "1f603"
                            },
                            {
                                "type": "text",
                                "text": "\nThere are many things that I would like to have in this editor, just hadn't time for it.\n\nAnother thing I want to add is to switch to spreadsheet user interface if almost all entries of current node have same set of keys. This way you can work with tabular data, while still keeping abstraction of a tree."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1585679263.038800",
        "edited": {
            "user": "UCKRZS3DZ",
            "ts": "1585679370.000000"
        },
        "client_msg_id": "7d801778-7170-4b6e-91a6-cdc3632421f2",
        "text": "<@U85HCL7JP> No, actually it is Python AST for factorial function.\n\nI produced this AST using standard Python ast library. Then I manually inserted this DAG into my editor, just to demonstrate how it could look like. There is no automatic way to store it for now, because there is no stable storage API.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ca0SA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U85HCL7JP"
                            },
                            {
                                "type": "text",
                                "text": " No, actually it is Python AST for factorial function.\n\nI produced this AST using standard Python ast library. Then I manually inserted this DAG into my editor, just to demonstrate how it could look like. There is no automatic way to store it for now, because there is no stable storage API."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "U85HCL7JP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1585687224.039800",
        "client_msg_id": "b9189267-7b62-4b43-b1d0-6ca25f740e58",
        "text": "&gt; I realized that making a platform for experiments for others is my secondary goal. *My actual first goal is to implement vision of convenient programming that I have.* Generic tree editor is just a step towards it.\nCan you talk a bit more about what’s your vision?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9JjB",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I realized that making a platform for experiments for others is my secondary goal. "
                            },
                            {
                                "type": "text",
                                "text": "My actual first goal is to implement vision of convenient programming that I have.",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " Generic tree editor is just a step towards it."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can you talk a bit more about what’s your vision?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1585687463.040000",
        "client_msg_id": "f080fb76-6439-41f5-8b55-1ac7a86096b4",
        "text": "<@UCKRZS3DZ> you might like treesheets, it has a lot of similarities.. the biggest difference is that it doesn't enforce the concept of \"keys\", instead it has a 2D set of children for each node, such that keys are easy to add if needed",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vkMY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCKRZS3DZ"
                            },
                            {
                                "type": "text",
                                "text": " you might like treesheets, it has a lot of similarities.. the biggest difference is that it doesn't enforce the concept of \"keys\", instead it has a 2D set of children for each node, such that keys are easy to add if needed"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCKRZS3DZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1585688478.040200",
        "client_msg_id": "2ac94263-5891-4279-9b84-6d6cdb9ad3e8",
        "text": "<@UHDQ62M4P> oh, I've seen treesheets! I stumbled upon it when I was looking for existing generic tree editors. Treesheets are kind of close to what I wanted.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=+5ZM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHDQ62M4P"
                            },
                            {
                                "type": "text",
                                "text": " oh, I've seen treesheets! I stumbled upon it when I was looking for existing generic tree editors. Treesheets are kind of close to what I wanted."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UHDQ62M4P"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1585691363.040500",
        "edited": {
            "user": "UCKRZS3DZ",
            "ts": "1585692081.000000"
        },
        "client_msg_id": "866f005b-9c17-4b26-9a2c-621843a40eed",
        "text": "<@U85HCL7JP> Maybe slack comment is not the best place to put it. I'll share what I can get from the top of my head.\n\nSome of what I am writing here I have shared in my presentation: <https:\/\/www.youtube.com\/watch?v=t8UH3DjvxDE&amp;t=37s>\n\nSome general principles:\n\n1. Too much expressiveness is bad -- turns programming into Chaos (like Lisp macro hell). Too much restriction is also bad -- turns programming into a prison of Order (try to do complicated IO in Haskell). To get comfortable PL we need to walk a fine line between these Order and Chaos, to balance PL design. Many design decisions that I make just shift balance of Order and Chaos to make users less overwhelmed.\n2. Programmers develop software through observe-modify-repeat loop in their heads. To make programming easy and efficient we need to optimize this loop. Make observation of the change fast, make modification safe and painless.\nSome technical ideas:\n\n1. Actors with isolated memory and communication by copying messages (from Erlang) -- brilliant idea that makes programming a lot easier. When it is guaranteed that this piece of code is influenced by these several inputs it is a lot easier to debug and reproduce it. This is absolutely necessary and should be as widespread as use of pure functions.\n2. Application is basically a composition of many actors that message each other. During execution some actors might be spawned and killed as needed. This is very powerful and possible compositions might be quite overwhelming. To shift this situation towards Order I want to restrict possible compositions: it should be a regular tree.\n3. One powerful data structure for almost everything: DAG. Pattern matching helps a lot with all kinds of manipulation. If an actor provides an interface of a DAG, it should be possible to pattern match against it. This way you can walk database, filesystem or web service in similar manner you would walk local DAG. \n4. Test cases of input and expected output are attached directly to the function, it is part of the annotation. This makes it very easy to modify it -- tests for this particular function would run over and over. Precondition and postcondition code is part of the function. They help to distinguish bad input and error in the code, which helps to make IDE convenient. This feature is a lot easier to implement for structure-based source code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Towards efficient development tools — student Vladimir Gordeev",
                "title_link": "https:\/\/www.youtube.com\/watch?v=t8UH3DjvxDE&amp;t=37s",
                "author_name": "Innopolis University",
                "author_link": "https:\/\/www.youtube.com\/user\/InnopolisU",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/t8UH3DjvxDE\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Towards efficient development tools — student Vladimir Gordeev",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/t8UH3DjvxDE?feature=oembed&start=37&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=t8UH3DjvxDE&amp;t=37s",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=t8UH3DjvxDE&amp;t=37s"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tDG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U85HCL7JP"
                            },
                            {
                                "type": "text",
                                "text": " Maybe slack comment is not the best place to put it. I'll share what I can get from the top of my head.\n\nSome of what I am writing here I have shared in my presentation: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=t8UH3DjvxDE&t=37s"
                            },
                            {
                                "type": "text",
                                "text": "\n\nSome general principles:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Too much expressiveness is bad -- turns programming into Chaos (like Lisp macro hell). Too much restriction is also bad -- turns programming into a prison of Order (try to do complicated IO in Haskell). To get comfortable PL we need to walk a fine line between these Order and Chaos, to balance PL design. Many design decisions that I make just shift balance of Order and Chaos to make users less overwhelmed."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Programmers develop software through observe-modify-repeat loop in their heads. To make programming easy and efficient we need to optimize this loop. Make observation of the change fast, make modification safe and painless."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nSome technical ideas:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Actors with isolated memory and communication by copying messages (from Erlang) -- brilliant idea that makes programming a lot easier. When it is guaranteed that this piece of code is influenced by these several inputs it is a lot easier to debug and reproduce it. This is absolutely necessary and should be as widespread as use of pure functions."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Application is basically a composition of many actors that message each other. During execution some actors might be spawned and killed as needed. This is very powerful and possible compositions might be quite overwhelming. To shift this situation towards Order I want to restrict possible compositions: it should be a regular tree."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "One powerful data structure for almost everything: DAG. Pattern matching helps a lot with all kinds of manipulation. If an actor provides an interface of a DAG, it should be possible to pattern match against it. This way you can walk database, filesystem or web service in similar manner you would walk local DAG. "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Test cases of input and expected output are attached directly to the function, it is part of the annotation. This makes it very easy to modify it -- tests for this particular function would run over and over. Precondition and postcondition code is part of the function. They help to distinguish bad input and error in the code, which helps to make IDE convenient. This feature is a lot easier to implement for structure-based source code."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1585698285.041300",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1585699045.000000"
        },
        "client_msg_id": "7c0c552e-e04f-488e-b3d6-56a91bcf6126",
        "text": "I agree with all of these except the focus on pure functions. You’ll also need some form of resumable stacks (such as coroutines) within your actors to write readable code this way.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+RQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree with all of these except the focus on pure functions. You’ll also need some form of resumable stacks (such as coroutines) within your actors to write readable code this way."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1585721554.041800",
        "client_msg_id": "94f785fa-b767-4ba7-892e-7bff9527d26f",
        "text": "<@ULM3U6275> how these resumable coroutines could look like?\n\nMy experience with actors comes mostly from Erlang, I don't think there are any resumable coroutines, so I am not sure I understand.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1585660982.034100",
        "parent_user_id": "UCKRZS3DZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Toc+a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "ULM3U6275"
                            },
                            {
                                "type": "text",
                                "text": " how these resumable coroutines could look like?\n\nMy experience with actors comes mostly from Erlang, I don't think there are any resumable coroutines, so I am not sure I understand."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]