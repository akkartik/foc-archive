[
    {
        "user": "UD43R8ZFV",
        "type": "message",
        "ts": "1547760110.010200",
        "client_msg_id": "0FF89260-BE8C-478C-8ADF-A2908E56C5DE",
        "text": "“I can easily see the machine code that is generated for all architectures as I change my code.” That’s quite the feature request. I wonder if a language that consistently outputs the expected machine code could be all that much better than assembly or something like LLVM IR?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "85ee3dacef95",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-30\/445630960161_85ee3dacef95dd5617e4_72.png",
            "first_name": "Tim",
            "real_name": "Tim Swast",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "tswast",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1546542577.005300",
        "parent_user_id": "UDLGND5GA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pNj2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "“I can easily see the machine code that is generated for all architectures as I change my code.” That’s quite the feature request. I wonder if a language that consistently outputs the expected machine code could be all that much better than assembly or something like LLVM IR?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD43R8ZFV",
        "type": "message",
        "ts": "1547760255.011000",
        "client_msg_id": "DA453141-62A5-4539-AD0C-EC12299E33CD",
        "text": "“Burst is designed to take as input not your entire program, but a single method in that program: the entrypoint to a hot loop.” Sounds a lot like Numba for Python.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "85ee3dacef95",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-30\/445630960161_85ee3dacef95dd5617e4_72.png",
            "first_name": "Tim",
            "real_name": "Tim Swast",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "tswast",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1546542577.005300",
        "parent_user_id": "UDLGND5GA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kpgY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "“Burst is designed to take as input not your entire program, but a single method in that program: the entrypoint to a hot loop.” Sounds a lot like Numba for Python."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]