[
    {
        "user": "U05SU27S1M2",
        "type": "message",
        "ts": "1699102578.314309",
        "client_msg_id": "18574efb-256e-4e28-a9eb-cfddd4a7032f",
        "text": "<@U0112C10V4Y> yes using opencv <https:\/\/docs.opencv.org\/4.x\/d9\/d8b\/tutorial_py_contours_hierarchy.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "60e6ebbc4a9a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-18\/5922641047217_60e6ebbc4a9a68a57656_72.png",
            "first_name": "Alex",
            "real_name": "Alex McLean",
            "display_name": "Alex McLean",
            "team": "T5TCAFTA9",
            "name": "alex952",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1696588167.703199",
        "parent_user_id": "U05SU27S1M2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pqMxp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0112C10V4Y"
                            },
                            {
                                "type": "text",
                                "text": " yes using opencv "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.opencv.org\/4.x\/d9\/d8b\/tutorial_py_contours_hierarchy.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05SU27S1M2",
        "type": "message",
        "ts": "1699102818.034369",
        "client_msg_id": "7c57ec00-c259-44b6-9e0b-9d182b4779ac",
        "text": "It then builds realtalk claims from the opencv contours\n```When \/tool\/ is a \"embedded shape recognizer\", \/tool\/ points \"up\" at \/p\/ within (2) inches, \/p\/ recognized contours \/cs\/ with origin \/origin\/:\n    local boxes = {}\n    for i,c in ipairs(cs) do\n        local tl = c.region[1]\n        local br = c.region[3]\n        local w,h = br.x - tl.x, br.y-tl.y\n        local box = create_id(p, i)\n\n        -- Assumes parent contours are always earlier in the table\n        local parent_box = c.parent_index &gt; 0 and boxes[c.parent_index] or nil\n        Claim (origin) has box2 (box) with position (tl) width (w) height (h).\n        Claim box (box) is in a stack with children count (c.children_count) parent (parent_box) centroid (c.centroid).\n        Claim box (box) has contour (c).\n        table.insert(boxes, box)\n    end\nEnd```\nand separately does a hack to discard inner contours of drawn containers\n```\n-- Find outer shapes\nWhen \/origin\/ has box2 \/box\/, box \/box\/ is in a stack with parent (nil):\n    Claim (box) is a shape with level (0).\nEnd\n\n-- Find inner shapes\nWhen \/parent\/ is a shape with options \/o\/, box \/child\/ is in a stack with parent \/parent\/,\n    box \/inner_child\/ is in a stack with parent \/child\/:\n    Claim (inner_child) is a shape with level (o.level+1) container (parent).\nEnd```\na bit hacky but does the job",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "60e6ebbc4a9a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-18\/5922641047217_60e6ebbc4a9a68a57656_72.png",
            "first_name": "Alex",
            "real_name": "Alex McLean",
            "display_name": "Alex McLean",
            "team": "T5TCAFTA9",
            "name": "alex952",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1696588167.703199",
        "parent_user_id": "U05SU27S1M2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2AWM6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It then builds realtalk claims from the opencv contours\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When \/tool\/ is a \"embedded shape recognizer\", \/tool\/ points \"up\" at \/p\/ within (2) inches, \/p\/ recognized contours \/cs\/ with origin \/origin\/:\n    local boxes = {}\n    for i,c in ipairs(cs) do\n        local tl = c.region[1]\n        local br = c.region[3]\n        local w,h = br.x - tl.x, br.y-tl.y\n        local box = create_id(p, i)\n\n        -- Assumes parent contours are always earlier in the table\n        local parent_box = c.parent_index > 0 and boxes[c.parent_index] or nil\n        Claim (origin) has box2 (box) with position (tl) width (w) height (h).\n        Claim box (box) is in a stack with children count (c.children_count) parent (parent_box) centroid (c.centroid).\n        Claim box (box) has contour (c).\n        table.insert(boxes, box)\n    end\nEnd"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and separately does a hack to discard inner contours of drawn containers\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n-- Find outer shapes\nWhen \/origin\/ has box2 \/box\/, box \/box\/ is in a stack with parent (nil):\n    Claim (box) is a shape with level (0).\nEnd\n\n-- Find inner shapes\nWhen \/parent\/ is a shape with options \/o\/, box \/child\/ is in a stack with parent \/parent\/,\n    box \/inner_child\/ is in a stack with parent \/child\/:\n    Claim (inner_child) is a shape with level (o.level+1) container (parent).\nEnd"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "a bit hacky but does the job"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0112C10V4Y",
        "type": "message",
        "ts": "1699104919.124319",
        "client_msg_id": "518504e6-0b78-4793-8cb5-f7adbc383c70",
        "text": "Thanks! I'm quite interested in the idea of interpreters of hand drawn languages, I think I understand now what your video is showing",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf521cc065bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f521cc065bb724c90c57c263ec7ee857.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Naveen Michaud-Agrawal",
            "display_name": "Naveen Michaud-Agrawal",
            "team": "T5TCAFTA9",
            "name": "naveen.michaudagrawal",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1696588167.703199",
        "parent_user_id": "U05SU27S1M2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nmQT7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! I'm quite interested in the idea of interpreters of hand drawn languages, I think I understand now what your video is showing"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U05SU27S1M2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U05SU27S1M2",
        "type": "message",
        "ts": "1699112272.634449",
        "client_msg_id": "1180de3d-6925-4e9b-a536-1058f6eed7cc",
        "text": "<@U0112C10V4Y> it might be clearer in this <https:\/\/youtu.be\/TFQCVk7Iyyk>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "60e6ebbc4a9a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-18\/5922641047217_60e6ebbc4a9a68a57656_72.png",
            "first_name": "Alex",
            "real_name": "Alex McLean",
            "display_name": "Alex McLean",
            "team": "T5TCAFTA9",
            "name": "alex952",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1696588167.703199",
        "parent_user_id": "U05SU27S1M2",
        "attachments": [
            {
                "from_url": "https:\/\/youtu.be\/TFQCVk7Iyyk",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/TFQCVk7Iyyk\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/TFQCVk7Iyyk?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"Shape sequencer\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https:\/\/youtu.be\/TFQCVk7Iyyk",
                "fallback": "YouTube Video: Shape sequencer",
                "title": "Shape sequencer",
                "title_link": "https:\/\/youtu.be\/TFQCVk7Iyyk",
                "author_name": "Alex McLean",
                "author_link": "https:\/\/www.youtube.com\/@yaxu",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FA0tH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0112C10V4Y"
                            },
                            {
                                "type": "text",
                                "text": " it might be clearer in this "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/TFQCVk7Iyyk"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0112C10V4Y",
        "type": "message",
        "ts": "1699119005.714349",
        "client_msg_id": "98911f9f-4eef-4a71-8d5b-96f44a763714",
        "text": "So it looks like you are selecting the parent contour to interpret using the small RealTalk object. Is the order of symbol interpretation dependent on where that page is pointing and it's orientation?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf521cc065bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f521cc065bb724c90c57c263ec7ee857.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Naveen Michaud-Agrawal",
            "display_name": "Naveen Michaud-Agrawal",
            "team": "T5TCAFTA9",
            "name": "naveen.michaudagrawal",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1696588167.703199",
        "parent_user_id": "U05SU27S1M2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hSUnC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So it looks like you are selecting the parent contour to interpret using the small RealTalk object. Is the order of symbol interpretation dependent on where that page is pointing and it's orientation?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05SU27S1M2",
        "type": "message",
        "ts": "1699119258.409359",
        "edited": {
            "user": "U05SU27S1M2",
            "ts": "1699119313.000000"
        },
        "client_msg_id": "71316974-33a1-419f-895a-c2df6e2bf1c1",
        "text": "Yes that's right, from left to right from the perspective of the tool, based on centroid",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "60e6ebbc4a9a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-18\/5922641047217_60e6ebbc4a9a68a57656_72.png",
            "first_name": "Alex",
            "real_name": "Alex McLean",
            "display_name": "Alex McLean",
            "team": "T5TCAFTA9",
            "name": "alex952",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1696588167.703199",
        "parent_user_id": "U05SU27S1M2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NOErY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes that's right, from left to right from the perspective of the tool, based on centroid"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0112C10V4Y"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0112C10V4Y",
        "type": "message",
        "ts": "1699123346.908929",
        "client_msg_id": "0d370eaf-a948-45a6-9d97-7b9100955d39",
        "text": "Thanks! I've been playing with Folk, which has a similar design to RealTalk and have been interested in Bret's goals for universal scientific literacy, so it's very interesting to see all the dimensions being explored with DynamicLand.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf521cc065bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f521cc065bb724c90c57c263ec7ee857.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Naveen Michaud-Agrawal",
            "display_name": "Naveen Michaud-Agrawal",
            "team": "T5TCAFTA9",
            "name": "naveen.michaudagrawal",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1696588167.703199",
        "parent_user_id": "U05SU27S1M2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z4\/F6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! I've been playing with Folk, which has a similar design to RealTalk and have been interested in Bret's goals for universal scientific literacy, so it's very interesting to see all the dimensions being explored with DynamicLand."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]