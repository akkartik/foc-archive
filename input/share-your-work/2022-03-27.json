[
    {
        "user": "U01FAFPDFL4",
        "type": "message",
        "ts": "1648364667.146339",
        "client_msg_id": "5c67d99d-7be4-4624-934a-5315c1cf33ce",
        "text": "Really impressive how far you’re able to take this approach <@U02E4DAQGSZ>! For me, one of the main takeaways is that it’s possible to have many aspects of programming supported by a “live executing” toolchain. I.e. you don’t _need_ complicated build \/ deploy setups, and exploring how far we can take this imo could open the doors to make programming more accessible to a wider audience",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a863c7a92962",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-01-31\/3025191075606_a863c7a92962a53b14dd_72.jpg",
            "first_name": "Yousef",
            "real_name": "Yousef El-Dardiry",
            "display_name": "Yousef El-Dardiry",
            "team": "T5TCAFTA9",
            "name": "yousefdardiry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647859090.612199",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pR9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Really impressive how far you’re able to take this approach "
                            },
                            {
                                "type": "user",
                                "user_id": "U02E4DAQGSZ"
                            },
                            {
                                "type": "text",
                                "text": "! For me, one of the main takeaways is that it’s possible to have many aspects of programming supported by a “live executing” toolchain. I.e. you don’t "
                            },
                            {
                                "type": "text",
                                "text": "need ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "complicated build \/ deploy setups, and exploring how far we can take this imo could open the doors to make programming more accessible to a wider audience"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1648371685.506629",
        "client_msg_id": "e74d8ae9-62a1-4041-b123-7a21b1a9b2c6",
        "text": "I had a thought yesterday that I have something very close to being an Electron-for-servers, which doesn't sound very flattering but then you have to admit that electron has radically lowered the cost of entry for desktop software.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647859090.612199",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VqnkA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I had a thought yesterday that I have something very close to being an Electron-for-servers, which doesn't sound very flattering but then you have to admit that electron has radically lowered the cost of entry for desktop software."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0282PL61U1",
        "type": "message",
        "ts": "1648427435.251609",
        "edited": {
            "user": "U0282PL61U1",
            "ts": "1648431302.000000"
        },
        "client_msg_id": "0addd882-9a9d-4f77-a723-0870f848cd81",
        "text": "I have been dogfooding my literate programming tool wheel. So far I have been able to develop multiple webapps, a game and even a C++ based desktop app with it. I also think LP can be invaluable in managing your programming notes and system admin commands, not to mention writing html based books. You can checkout all the project links <https:\/\/xyzzyapps.link\/literate-programming.html|here>.\n\nI dub my approach to LP as procedural literate programming. Instead of developing new syntax, I use string substitution based approaches common in web development which is more flexible than all the other approaches to literate programming so far, including the original cweb.\n\nI think the fundamental mistake that people seem to be making with LP is using it to describe algorithms rather than code history, code inspirations, bug stories, features and any other context surrounding code like tests \/ security. This means that git commit messages can be skipped with LP in some sense. While complex algorithms definitely can use lengthy descriptions, you can assume your reader is a programmer and just show code as is for everyday code. I suppose if you want to keep existing ways of  working with code you can copy paste the diffs manually back into the literate source code, but a well integrated IDE could perhaps avoid this step and allow you to use both workflows simultaneously.\n\nLast year I participated in a few jams which allowed me to explore different approaches to LP. I have developed a comment based code extraction and animation approach to LP called Loom and I was able to develop a very basic IDE using PyQt.  It turns out that LP has a lot in common with Xanadu and Web because fundamentally they all are hypertext systems. Talk about a wild coincidence! Like Xanadu, LP is heavily dependent on two-way links called transclusions. If anyone knows Ted Nelson here I would love to tell him about my findings about how a transclusion based browser can act as an IDE to LP.\n\nI also found that LP can act a glue tool for generative programming. You can create multiple DSLs and pipe them through external scripts, while presenting just the DSL to the reader. This is something I am exploring in a compiler project where I am trying to generate C code from YAML.\n\nAs of now I think LP is a huge plus  for solo developers juggling multiple projects. Reading code in an understandable order allows you to pick up code where you left off. No wonder Knuth was so productive with it. You can checkout demos for wheel, PyQt IDE and Loom on youtube. I have also created a screencast recently to showcase my workflow with sublime\n\n<https:\/\/www.youtube.com\/watch?v=9Bcaif2h1lE&amp;list=PLbyPZ-v56IPnTDISg3pFUYl7374q7jqsq>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8f365fd896e9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529753983250_8f365fd896e9c8f573b5_72.jpg",
            "first_name": "xyzzy",
            "real_name": "xyzzy",
            "display_name": "xyzzy",
            "team": "T5TCAFTA9",
            "name": "moodyharsh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1648427435.251609",
        "reply_count": 8,
        "reply_users_count": 3,
        "latest_reply": "1648552569.034009",
        "reply_users": [
            "UJBAJNFLK",
            "U02E4DAQGSZ",
            "U0282PL61U1"
        ],
        "replies": [
            {
                "user": "UJBAJNFLK",
                "ts": "1648451245.723489"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1648457223.694159"
            },
            {
                "user": "U0282PL61U1",
                "ts": "1648468147.577299"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1648471910.573339"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1648485206.503189"
            },
            {
                "user": "U0282PL61U1",
                "ts": "1648490096.210129"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1648540486.202029"
            },
            {
                "user": "U0282PL61U1",
                "ts": "1648552569.034009"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/www.youtube.com\/watch?v=9Bcaif2h1lE",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/9Bcaif2h1lE\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/9Bcaif2h1lE?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=9Bcaif2h1lE&amp;list=PLbyPZ-v56IPnTDISg3pFUYl7374q7jqsq",
                "fallback": "YouTube Video: Wheel - Tutorial",
                "title": "Wheel - Tutorial",
                "title_link": "https:\/\/www.youtube.com\/watch?v=9Bcaif2h1lE",
                "author_name": "Xyzzy",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCFzQ95TGgFF2CmMmp8dv40Q",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5FZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have been dogfooding my literate programming tool wheel. So far I have been able to develop multiple webapps, a game and even a C++ based desktop app with it. I also think LP can be invaluable in managing your programming notes and system admin commands, not to mention writing html based books. You can checkout all the project links "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/xyzzyapps.link\/literate-programming.html",
                                "text": "here"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nI dub my approach to LP as procedural literate programming. Instead of developing new syntax, I use string substitution based approaches common in web development which is more flexible than all the other approaches to literate programming so far, including the original cweb.\n\nI think the fundamental mistake that people seem to be making with LP is using it to describe algorithms rather than code history, code inspirations, bug stories, features and any other context surrounding code like tests \/ security. This means that git commit messages can be skipped with LP in some sense. While complex algorithms definitely can use lengthy descriptions, you can assume your reader is a programmer and just show code as is for everyday code. I suppose if you want to keep existing ways of  working with code you can copy paste the diffs manually back into the literate source code, but a well integrated IDE could perhaps avoid this step and allow you to use both workflows simultaneously.\n\nLast year I participated in a few jams which allowed me to explore different approaches to LP. I have developed a comment based code extraction and animation approach to LP called Loom and I was able to develop a very basic IDE using PyQt.  It turns out that LP has a lot in common with Xanadu and Web because fundamentally they all are hypertext systems. Talk about a wild coincidence! Like Xanadu, LP is heavily dependent on two-way links called transclusions. If anyone knows Ted Nelson here I would love to tell him about my findings about how a transclusion based browser can act as an IDE to LP.\n\nI also found that LP can act a glue tool for generative programming. You can create multiple DSLs and pipe them through external scripts, while presenting just the DSL to the reader. This is something I am exploring in a compiler project where I am trying to generate C code from YAML.\n\nAs of now I think LP is a huge plus  for solo developers juggling multiple projects. Reading code in an understandable order allows you to pick up code where you left off. No wonder Knuth was so productive with it. You can checkout demos for wheel, PyQt IDE and Loom on youtube. I have also created a screencast recently to showcase my workflow with sublime\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=9Bcaif2h1lE&list=PLbyPZ-v56IPnTDISg3pFUYl7374q7jqsq"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U02E4DAQGSZ"
                ],
                "count": 2
            }
        ]
    }
]