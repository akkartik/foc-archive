[
    {
        "user": "UAU0KCMGB",
        "type": "message",
        "ts": "1548925522.744200",
        "client_msg_id": "62B0A09A-1132-4AFC-B868-657D0AADE699",
        "text": "it becomes subjective whether current LISP\/Smalltalk implementations relevant - I think they are. At the same time let’s remember that NeXT became OSX and left us with objective C and “branded types” very well known to thousands of IOS developers (the infamous NSString comes to mind). Hard to find something that became more successful. There is some romantic view of the “future” being the place where better ideas ignored in the present are finally going to find “success”. Kay plays that card a lot. We owe him a lot, and he correctly points out that people don’t know the past. However we don’t need to under-represent the present to enjoy conversations about the future. It still escapes me for example why Kay in his “minimal LOC stacks” slides doesn’t mention the Oberon platform, to my knowledge the only system (you can buy!) where the whole stack (from FPGA CPU definition to compiler and GUI) is completely contained in one book. (Used in banking where one doesn’t want backdoors anywhere in the stack) Why do we need to enshrine the future of qualities we refuse to see in the present?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g49f0f485bda",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/149f0f485bda3e47c907f73d090971b7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "",
            "real_name": "Davide Della Casa",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "davidedc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548692863.694400",
        "parent_user_id": "UAJ9DV971",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "omE1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it becomes subjective whether current LISP\/Smalltalk implementations relevant - I think they are. At the same time let’s remember that NeXT became OSX and left us with objective C and “branded types” very well known to thousands of IOS developers (the infamous NSString comes to mind). Hard to find something that became more successful. There is some romantic view of the “future” being the place where better ideas ignored in the present are finally going to find “success”. Kay plays that card a lot. We owe him a lot, and he correctly points out that people don’t know the past. However we don’t need to under-represent the present to enjoy conversations about the future. It still escapes me for example why Kay in his “minimal LOC stacks” slides doesn’t mention the Oberon platform, to my knowledge the only system (you can buy!) where the whole stack (from FPGA CPU definition to compiler and GUI) is completely contained in one book. (Used in banking where one doesn’t want backdoors anywhere in the stack) Why do we need to enshrine the future of qualities we refuse to see in the present?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1548928100.744400",
        "client_msg_id": "22aea332-e5a8-40fd-860c-113f7da89167",
        "text": "<@UE0ETTCG7> regarding frameworks\/platforms I was thinking something similar, there's this story about the first human powered flight over the English channel, Kay mentions it in some talks and I've heard it in another talks too, he used current technologies and tools, but a process and a fast feedback loop to iterate from idea to implementation really fast. He used current technologies as the framework, but in the right combination and achieved something \"futuristic\", it may mean two things 1) we can bootstrap the future with current tools but a better framework\/platform 2) we need to build the tools to bootstrap the future first, for fast iteration and feedback. \/randomidea",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548692863.694400",
        "parent_user_id": "UAJ9DV971",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q=JL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE0ETTCG7"
                            },
                            {
                                "type": "text",
                                "text": " regarding frameworks\/platforms I was thinking something similar, there's this story about the first human powered flight over the English channel, Kay mentions it in some talks and I've heard it in another talks too, he used current technologies and tools, but a process and a fast feedback loop to iterate from idea to implementation really fast. He used current technologies as the framework, but in the right combination and achieved something \"futuristic\", it may mean two things 1) we can bootstrap the future with current tools but a better framework\/platform 2) we need to build the tools to bootstrap the future first, for fast iteration and feedback. \/randomidea"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1548928230.744600",
        "client_msg_id": "722c7bc1-a758-4306-9c59-604c1fadf6c6",
        "text": "Also maybe we need a clear objective, MacCready knew his objective pretty clearly, cross the English channel, and that introduces sub objectives and constraints, we keep talking about the future of programming but that's too blurry, I don't think we have a clear vision of what that is, and if that's the case, then we are just building things in random directions with no clear objectives...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548692863.694400",
        "parent_user_id": "UAJ9DV971",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bUf5x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also maybe we need a clear objective, MacCready knew his objective pretty clearly, cross the English channel, and that introduces sub objectives and constraints, we keep talking about the future of programming but that's too blurry, I don't think we have a clear vision of what that is, and if that's the case, then we are just building things in random directions with no clear objectives..."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1548928351.744800",
        "client_msg_id": "5645f79c-89f3-4f30-9838-cb12f517be3a",
        "text": "Englebart, Sutterland, Kay, PARC, ViewPoints and DynamicLand all have clear objectives, you can picture in your mind what's the future they want. Outside of it, it's hard to picture farther than the prototype being presented or the example used to explain it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548692863.694400",
        "parent_user_id": "UAJ9DV971",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zWuw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Englebart, Sutterland, Kay, PARC, ViewPoints and DynamicLand all have clear objectives, you can picture in your mind what's the future they want. Outside of it, it's hard to picture farther than the prototype being presented or the example used to explain it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1548940712.774000",
        "client_msg_id": "e626755c-67df-4fac-b37f-3be6e0cb4489",
        "text": "Are there any techniques or metrics to define or measure how specific or generic something is? That something could be a function or class in a programming language, an algorithm, or even something less formally defined, like a component in a UI framework.\n\nI'm familiar with some measures of complexity, like counting dependencies or cyclomatic complexity, which seems somewhat related.\n\nAppreciate any pointers to papers or articles about this, even if they \"just\" define how something is more or less specific or generic than something else to support a hypothesis that is totally unrelated.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "reply_count": 16,
        "reply_users_count": 4,
        "latest_reply": "1548991912.795100",
        "reply_users": [
            "UFD2JRE58",
            "U5TCAFTD3",
            "UD43R8ZFV",
            "UBKNXPBAB"
        ],
        "replies": [
            {
                "user": "UFD2JRE58",
                "ts": "1548941712.774100"
            },
            {
                "user": "UFD2JRE58",
                "ts": "1548941713.774300"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1548943678.774800"
            },
            {
                "user": "UFD2JRE58",
                "ts": "1548945570.775100"
            },
            {
                "user": "UFD2JRE58",
                "ts": "1548945902.775300"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1548956564.776100"
            },
            {
                "user": "UFD2JRE58",
                "ts": "1548956984.776300"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1548957468.776500"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1548957492.776700"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1548957521.776900"
            },
            {
                "user": "UD43R8ZFV",
                "ts": "1548958095.777100"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1548991338.794100"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1548991573.794300"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1548991681.794500"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1548991858.794700"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1548991912.795100"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1549037770.000666",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KYD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are there any techniques or metrics to define or measure how specific or generic something is? That something could be a function or class in a programming language, an algorithm, or even something less formally defined, like a component in a UI framework.\n\nI'm familiar with some measures of complexity, like counting dependencies or cyclomatic complexity, which seems somewhat related.\n\nAppreciate any pointers to papers or articles about this, even if they \"just\" define how something is more or less specific or generic than something else to support a hypothesis that is totally unrelated."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFD2JRE58",
        "type": "message",
        "ts": "1548941712.774100",
        "client_msg_id": "97e5aa87-ef23-44f5-aa82-6cc408b16ce1",
        "text": "I'm not sure what \"how specific or general\" would actually mean for a class. If you get a really precise definition then you have probably defined how to measure it too!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ca63ca2aa38f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-01-20\/529811744742_ca63ca2aa38fa658cc4f_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Woods",
            "display_name": "duncanawoods",
            "team": "T5TCAFTA9",
            "name": "duncan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UgY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not sure what \"how specific or general\" would actually mean for a class. If you get a really precise definition then you have probably defined how to measure it too!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFD2JRE58",
        "type": "message",
        "ts": "1548941713.774300",
        "edited": {
            "user": "UFD2JRE58",
            "ts": "1548941723.000000"
        },
        "client_msg_id": "e2af2d13-4310-44a6-a2d5-b637711e3845",
        "text": "It reminds me a bit of <https:\/\/en.wikipedia.org\/wiki\/Chomsky_hierarchy> - the main technique for e.g. proving something is turing powerful, is to show an isomorophism to a known system with proven properties.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ca63ca2aa38f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-01-20\/529811744742_ca63ca2aa38fa658cc4f_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Woods",
            "display_name": "duncanawoods",
            "team": "T5TCAFTA9",
            "name": "duncan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y7hT0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It reminds me a bit of "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Chomsky_hierarchy"
                            },
                            {
                                "type": "text",
                                "text": " - the main technique for e.g. proving something is turing powerful, is to show an isomorophism to a known system with proven properties."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1548943678.774800",
        "edited": {
            "user": "U5TCAFTD3",
            "ts": "1548943688.000000"
        },
        "client_msg_id": "98b09ae4-5b64-4f50-975d-291b20417215",
        "text": "In BV's ladder of abstraction, the number of parameters in functional abstraction is the measure of abstraction",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vp3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In BV's ladder of abstraction, the number of parameters in functional abstraction is the measure of abstraction"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFD2JRE58",
        "type": "message",
        "ts": "1548945570.775100",
        "edited": {
            "user": "UFD2JRE58",
            "ts": "1548946319.000000"
        },
        "client_msg_id": "2f14a99a-da35-47db-b2dc-d9fcb03eb5ff",
        "text": "Interesting. The types involved feel like a huge factor for measuring generalisation\/specialisation e.g.\n\n`add(a : ushort, b : ushort`\n`add(a : int, b : int)`\n`add(a : double, b : double)`\n`add(a : any, b : any)`\n`add&lt;T&gt;(a : T, b : T)`\n`add&lt;T&gt;(... list : T)`",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ca63ca2aa38f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-01-20\/529811744742_ca63ca2aa38fa658cc4f_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Woods",
            "display_name": "duncanawoods",
            "team": "T5TCAFTA9",
            "name": "duncan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c\/cMr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting. The types involved feel like a huge factor for measuring generalisation\/specialisation e.g.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "add(a : ushort, b : ushort",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "add(a : int, b : int)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "add(a : double, b : double)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "add(a : any, b : any)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "add<T>(a : T, b : T)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "add<T>(... list : T)",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFD2JRE58",
        "type": "message",
        "ts": "1548945902.775300",
        "edited": {
            "user": "UFD2JRE58",
            "ts": "1548949392.000000"
        },
        "client_msg_id": "2bc3bb33-6e9a-4679-8cca-9fe1954731e0",
        "text": "I am reading \"An Introduction to General Systems Thinking\" right now and it is discussing how to measure the relative generality of scientific laws.\n\nWeinberg claims that that laws should properly be defined as conditional \"if... so...\". He says that the fewer \"if... so...\" clauses, the more general the law.\n\nApplying this to code, instead of looking inside the code for it's generality, look outside at the context in which it can be used i.e. how many caveats are there about when it can or cannot be used?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ca63ca2aa38f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-01-20\/529811744742_ca63ca2aa38fa658cc4f_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Woods",
            "display_name": "duncanawoods",
            "team": "T5TCAFTA9",
            "name": "duncan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "twE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am reading \"An Introduction to General Systems Thinking\" right now and it is discussing how to measure the relative generality of scientific laws.\n\nWeinberg claims that that laws should properly be defined as conditional \"if... so...\". He says that the fewer \"if... so...\" clauses, the more general the law.\n\nApplying this to code, instead of looking inside the code for it's generality, look outside at the context in which it can be used i.e. how many caveats are there about when it can or cannot be used?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UD43R8ZFV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1548956564.776100",
        "client_msg_id": "144be9fa-0307-4076-ab01-5f204db76bc4",
        "text": "Variables are also know as \"degrees of freedom\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pOv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Variables are also know as \"degrees of freedom\""
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "zap",
                "users": [
                    "UCSJ44X1S"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFD2JRE58",
        "type": "message",
        "ts": "1548956984.776300",
        "client_msg_id": "3c514c62-8c79-434a-8503-20ff0de41cf5",
        "text": "Number of variables\/parameters doesn't seem like a good measure when we can just encode any number of variables into a goedel number.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ca63ca2aa38f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-01-20\/529811744742_ca63ca2aa38fa658cc4f_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Woods",
            "display_name": "duncanawoods",
            "team": "T5TCAFTA9",
            "name": "duncan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tDRKz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Number of variables\/parameters doesn't seem like a good measure when we can just encode any number of variables into a goedel number."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1548957468.776500",
        "client_msg_id": "bb860cdb-84be-40be-929b-ef4aa4febb25",
        "text": "Good point",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d64Fh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good point"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1548957492.776700",
        "client_msg_id": "5dfd0716-182e-412d-8cd5-3c7f5762e71e",
        "text": "I feel like you're onto something with the types thread...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L+KR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel like you're onto something with the types thread..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1548957521.776900",
        "client_msg_id": "fa5d08b3-8209-4b07-bf0e-eeb1350fdf87",
        "text": "(Can't we measure the length of the godel number?)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H6tsK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Can't we measure the length of the godel number?)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD43R8ZFV",
        "type": "message",
        "ts": "1548958095.777100",
        "client_msg_id": "0817f6b8-b760-4798-a662-56e5a0d6ccc7",
        "text": "The first thing that comes to my mind is <https:\/\/en.wikipedia.org\/wiki\/Kolmogorov_complexity> but you kind of want the inverse. Given a parameterized definition, what is the size of the space it covers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "85ee3dacef95",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-30\/445630960161_85ee3dacef95dd5617e4_72.png",
            "first_name": "Tim",
            "real_name": "Tim Swast",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "tswast",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "attachments": [
            {
                "image_url": "https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/d\/d4\/Mandelpart2_red.png\/1200px-Mandelpart2_red.png",
                "image_width": 1200,
                "image_height": 900,
                "image_bytes": 656240,
                "title": "Kolmogorov complexity",
                "title_link": "https:\/\/en.wikipedia.org\/wiki\/Kolmogorov_complexity",
                "from_url": "https:\/\/en.wikipedia.org\/wiki\/Kolmogorov_complexity",
                "author_name": "Wikipedia",
                "author_link": "https:\/\/en.wikipedia.org\/",
                "text": "In algorithmic information theory (a subfield of computer science and mathematics), the Kolmogorov complexity of an object, such as a piece of text, is the length of the shortest computer program (in a predetermined programming language) that produces the object as output. It is a measure of the computational resources needed to specify the object, and is also known as descriptive complexity, Kolmogorov–Chaitin complexity, algorithmic complexity, algorithmic entropy, or program-size complexity. It is named after Andrey Kolmogorov, who first published on the subject in 1963.The notion of Kolmogorov complexity can be used to state and prove impossibility results akin to Cantor's diagonal argument, Gödel's incompleteness theorem, and Turing's halting problem.\nIn particular, for almost all objects, it is not possible to compute even a lower bound for its Kolmogorov complexity (Chaitin 1964), let alone its exact value.",
                "fallback": "wikipedia: Kolmogorov complexity",
                "service_icon": "https:\/\/a.slack-edge.com\/bfaba\/img\/unfurl_icons\/wikipedia.png",
                "id": 1,
                "original_url": "https:\/\/en.wikipedia.org\/wiki\/Kolmogorov_complexity"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "23udk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The first thing that comes to my mind is "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Kolmogorov_complexity"
                            },
                            {
                                "type": "text",
                                "text": " but you kind of want the inverse. Given a parameterized definition, what is the size of the space it covers."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1548963792.778100",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1548970765.000000"
        },
        "client_msg_id": "8e3be9df-28b4-437b-b549-5bc01ee752cb",
        "text": "When we say stuff like...\n&gt; Text as a storage representation is indeed universal in a sense that text-based tools work with all data that's text based.\n... I know what you _mean_, but there's a subtle implication that (eg) _all compilers operate on all programming languages_. (Sit down, LLVM.) That is of course not true, and you make that point, but we need to be careful that we don't accidentally hold VPLs to that absurd standard of universality.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SN8T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When we say stuff like..."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Text as a storage representation is indeed universal in a sense that text-based tools work with all data that's text based."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "... I know what you "
                            },
                            {
                                "type": "text",
                                "text": "mean",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but there's a subtle implication that (eg) "
                            },
                            {
                                "type": "text",
                                "text": "all compilers operate on all programming languages",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". (Sit down, LLVM.) That is of course not true, and you make that point, but we need to be careful that we don't accidentally hold VPLs to that absurd standard of universality."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1548963964.778500",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1548970797.000000"
        },
        "client_msg_id": "08d1fc71-4eae-474e-a29b-6a0a02e2fd46",
        "text": "It's possible to make a universal interchange format for VPLs. You just need to throw away anything relating to the human-centric aspects of that language, and only store the computation-centric aspects.\n\nOf course, we don't want to do that, and we don't need to do that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hSm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's possible to make a universal interchange format for VPLs. You just need to throw away anything relating to the human-centric aspects of that language, and only store the computation-centric aspects.\n\nOf course, we don't want to do that, and we don't need to do that."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1548964100.778700",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1548968092.000000"
        },
        "client_msg_id": "f64c7f63-b7fa-41da-bad7-9e7c26ae9adc",
        "text": "If you want git, and you want diff, all you need is a way to save your VPL program as a text file. Existing visual languages already do this — most of them use JSON.\n\nNothing new needs to be invented to solve this problem. (Go ahead and invent new stuff to make this better — just don't let this \"VPLs don't work with text tools like git\/diff\" argument stand unopposed.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Bz4J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you want git, and you want diff, all you need is a way to save your VPL program as a text file. Existing visual languages already do this — most of them use JSON.\n\nNothing new needs to be invented to solve this problem. (Go ahead and invent new stuff to make this better — just don't let this \"VPLs don't work with text tools like git\/diff\" argument stand unopposed.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1548965386.779200",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1548965510.000000"
        },
        "client_msg_id": "e8eed28e-ca7c-45ec-b140-56b260ced77d",
        "text": "As for artist diff\/vcs\/etc tools...\n\nThis is one of the more popular image diff tools: <https:\/\/www.kaleidoscopeapp.com>. There's a bunch of them, with different UIs depending on what you're trying to learn by doing the diff. In my company, we care less about determining similarity between arbitrary images, and care more about tracking provenance, so we lean more heavily on VCS (which, for artists, is known as DAM — digital asset management).\n\nDAM is a bit different from what we're used to with VCS, where git\/Github dominate and hg\/svn\/perforce\/etc float on the periphery. Adobe made a stab at a DAM with a tool called Bridge, but it had a really rocky start and didn't really take over the way their other tools have. So instead of there being one dominant tool made by Adobe (or Autodesk), you have a lot of smaller players like Evolphin, Filecamp, and a few hundred others. Lots of companies also roll their own solution (that's what my company did) because there's a lot of benefit to integrating with your other custom tools and workflows, and the revision\/derivation-tracking part isn't hard, because pretty much everything leans on the filesystem.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rBds",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As for artist diff\/vcs\/etc tools...\n\nThis is one of the more popular image diff tools: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.kaleidoscopeapp.com"
                            },
                            {
                                "type": "text",
                                "text": ". There's a bunch of them, with different UIs depending on what you're trying to learn by doing the diff. In my company, we care less about determining similarity between arbitrary images, and care more about tracking provenance, so we lean more heavily on VCS (which, for artists, is known as DAM — digital asset management).\n\nDAM is a bit different from what we're used to with VCS, where git\/Github dominate and hg\/svn\/perforce\/etc float on the periphery. Adobe made a stab at a DAM with a tool called Bridge, but it had a really rocky start and didn't really take over the way their other tools have. So instead of there being one dominant tool made by Adobe (or Autodesk), you have a lot of smaller players like Evolphin, Filecamp, and a few hundred others. Lots of companies also roll their own solution (that's what my company did) because there's a lot of benefit to integrating with your other custom tools and workflows, and the revision\/derivation-tracking part isn't hard, because pretty much everything leans on the filesystem."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1548965448.779600",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1548965482.000000"
        },
        "client_msg_id": "e1569753-9bb0-432c-a866-76617178fb07",
        "text": "Smaller teams just use Dropbox, which gives you revision history and sync, and then just use something out-of-band for discussion\/issues\/etc. The bigger DAM tools just feel like overgrown versions of Dropbox with more power-user features.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y4\/B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Smaller teams just use Dropbox, which gives you revision history and sync, and then just use something out-of-band for discussion\/issues\/etc. The bigger DAM tools just feel like overgrown versions of Dropbox with more power-user features."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1548968197.786100",
        "client_msg_id": "F3A78FC8-B98D-40CB-9CFE-852151EA5D60",
        "text": "I have been asking myself lately, is git that great?\nEvery time I do a code review I have to see the code and execute in my mind. That’s exactly what live programming solve for us, so how maybe being able to see changes in a running system would be better, or a side by side comparison of the running system before and after the change",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d9GB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have been asking myself lately, is git that great?\nEvery time I do a code review I have to see the code and execute in my mind. That’s exactly what live programming solve for us, so how maybe being able to see changes in a running system would be better, or a side by side comparison of the running system before and after the change"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1548968286.788200",
        "client_msg_id": "5C78502B-8560-4479-A1A7-6A871225D915",
        "text": "I really like git for tracking changes and see what files I have modified since I started working. But I think it could be better integrated into the editor or into a VPL",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "96D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really like git for tracking changes and see what files I have modified since I started working. But I think it could be better integrated into the editor or into a VPL"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1548968573.788400",
        "client_msg_id": "c7451989-6aa4-4699-bb8b-9dcc03027578",
        "text": "Yeah. It can be a \"Yes, and\" rather than a \"No, but\". We can make a VPL that works beautifully with git, that also works beautifully with DAM tools, that also works wonderfully with the \"Versions\" feature on Mac, that also has its own sync service, that also has a rich, persistent, forking undo\/redo history system internally. The fact we don't have that yet is 100% due to execution, 0% due to inherent, fundamental differences between VPLs and text languages.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ImC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah. It can be a \"Yes, and\" rather than a \"No, but\". We can make a VPL that works beautifully with git, that also works beautifully with DAM tools, that also works wonderfully with the \"Versions\" feature on Mac, that also has its own sync service, that also has a rich, persistent, forking undo\/redo history system internally. The fact we don't have that yet is 100% due to execution, 0% due to inherent, fundamental differences between VPLs and text languages."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1548971496.789100",
        "client_msg_id": "f46d2fd9-eac2-4e91-9bcf-baf2a0a16d57",
        "text": "<@U85HCL7JP> What about this project seems new \/ different to you?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ipx\/J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U85HCL7JP"
                            },
                            {
                                "type": "text",
                                "text": " What about this project seems new \/ different to you?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1548971812.791000",
        "client_msg_id": "D7279BE2-943D-4FE6-BCB5-37A68D722A80",
        "text": "That the blocks are not connected to show the data flow. Are just there and the code down infers the connections but never in a permanent way",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f2wc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That the blocks are not connected to show the data flow. Are just there and the code down infers the connections but never in a permanent way"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1548972081.791200",
        "client_msg_id": "ca9f0d7c-0a95-4d0e-9cfa-798742e8762a",
        "text": "Around here <@UBKNXPBAB> <https:\/\/youtu.be\/edQyRJyVsUg?t=1234>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "What could a Clojure\/LISP editor be like? - Rakhim Davletkaliyev",
                "title_link": "https:\/\/youtu.be\/edQyRJyVsUg?t=1234",
                "author_name": "Clojure Helsinki",
                "author_link": "https:\/\/www.youtube.com\/channel\/UC7GYPoytIg5R56V2Pn-xU9g",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/edQyRJyVsUg\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: What could a Clojure\/LISP editor be like? - Rakhim Davletkaliyev",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/edQyRJyVsUg?start=1234&feature=oembed&start=1234&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/edQyRJyVsUg?t=1234",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/edQyRJyVsUg?t=1234"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=Mu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Around here "
                            },
                            {
                                "type": "user",
                                "user_id": "UBKNXPBAB"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/edQyRJyVsUg?t=1234"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1548972163.791500",
        "client_msg_id": "0b465f52-ddbb-48da-b201-48fdde003682",
        "text": "I'm not sure I like it, but it's just a different idea",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YY3uH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not sure I like it, but it's just a different idea"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1548972387.791700",
        "client_msg_id": "3be7d7db-3137-4d8e-a4fc-949b5c8eb35a",
        "text": "Agreed! Thanks for pointing that out.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z4BhF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Agreed! Thanks for pointing that out."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Just found a dataflow like diagram for a cooking recipe. Looks cool (source <https:\/\/arxiv.org\/pdf\/1803.05316.pdf>)",
        "files": [
            {
                "id": "FFVAKK0P7",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "U85HCL7JP",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I+bb9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just found a dataflow like diagram for a cooking recipe. Looks cool (source "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/arxiv.org\/pdf\/1803.05316.pdf"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1548980413.792300",
        "thread_ts": "1548980413.792300",
        "reply_count": 6,
        "reply_users_count": 5,
        "latest_reply": "1550442258.146900",
        "reply_users": [
            "UBKNXPBAB",
            "UEQ7QL15F",
            "UFS53UWE5",
            "U5TCAFTD3",
            "UEBU4L0BD"
        ],
        "replies": [
            {
                "user": "UBKNXPBAB",
                "ts": "1548987757.793500"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1548987768.793700"
            },
            {
                "user": "UEQ7QL15F",
                "ts": "1549007221.796400"
            },
            {
                "user": "UFS53UWE5",
                "ts": "1549027302.803900"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1549037342.804200"
            },
            {
                "user": "UEBU4L0BD",
                "ts": "1550442258.146900"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1550484198.000000",
        "reactions": [
            {
                "name": "pie",
                "users": [
                    "UD43R8ZFV",
                    "UEQ7QL15F",
                    "UD3AK9JRF"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1548985917.793100",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1548985965.000000"
        },
        "client_msg_id": "c5cb0dae-1210-4d3f-88ab-f6d807e12aac",
        "text": "Glad to join.. text files are one of my favorite topic to ~rant about~ discuss :smile:.\n\n<@U85HCL7JP> I agree it would be more useful to have multiple views of the diff - instead of just source diff we also want one or more 'effect diff'. I mean, even let folks pin views to commits that they think are useful?\n\nOne point wrt git that didn't come up above is that it's not just 'text' based, it's 'text file' based. So it has no notion of identity of entities within a file, only file identity is preserved. Now for text languages, we try to come with all kinds of hacky\/clever diff algorithms to see which lines map to which other lines, but wouldn't it be more useful to have proper history of finer grained entities (functions, etc.)? I believe this *can* be simulated for non text PLs by serializing some IDs or perhaps just using files for identity preservation. We have to give up the idea that the text diff view of this serialized format must be useful - you'd always want to look at it through your custom viewer. I think this is fine.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B9NH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Glad to join.. text files are one of my favorite topic to "
                            },
                            {
                                "type": "text",
                                "text": "rant about",
                                "style": {
                                    "strike": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " discuss "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": ".\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U85HCL7JP"
                            },
                            {
                                "type": "text",
                                "text": " I agree it would be more useful to have multiple views of the diff - instead of just source diff we also want one or more 'effect diff'. I mean, even let folks pin views to commits that they think are useful?\n\nOne point wrt git that didn't come up above is that it's not just 'text' based, it's 'text file' based. So it has no notion of identity of entities within a file, only file identity is preserved. Now for text languages, we try to come with all kinds of hacky\/clever diff algorithms to see which lines map to which other lines, but wouldn't it be more useful to have proper history of finer grained entities (functions, etc.)? I believe this "
                            },
                            {
                                "type": "text",
                                "text": "can",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " be simulated for non text PLs by serializing some IDs or perhaps just using files for identity preservation. We have to give up the idea that the text diff view of this serialized format must be useful - you'd always want to look at it through your custom viewer. I think this is fine."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1548987757.793500",
        "client_msg_id": "3fdc9334-422a-4d8b-8916-64e2e9357f9d",
        "text": "I wonder if it's inspired by <http:\/\/www.lihaoyi.com\/post\/WhatsFunctionalProgrammingAllAbout.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548980413.792300",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TpG29",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wonder if it's inspired by "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.lihaoyi.com\/post\/WhatsFunctionalProgrammingAllAbout.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1548987768.793700",
        "client_msg_id": "9572a0c8-b887-4a68-bd86-7de56004e0f3",
        "text": "(which, admittedly, makes a tiramisu.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548980413.792300",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iWa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(which, admittedly, makes a tiramisu.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1548991338.794100",
        "client_msg_id": "2af481ad-2b3e-4bed-8ce7-b5d0b37ca2ad",
        "text": "ya'll getting silly with this complexity theory fuss",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VxNd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ya'll getting silly with this complexity theory fuss"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1548991573.794300",
        "client_msg_id": "27fbc8fc-bab0-4366-939b-53b7a24cff8e",
        "text": "FWIW, it seems like the best way to think about \"specific vs general\" isn't as a quantitative measure, but as a comparative relation. X is more general than Y if there's a nice mapping from situations where you'd use Y to situations where you could use X instead. (This is analogous to the concept of \"reducing\" problems in complexity theory; egg on my face for talking smack about CT 5 minutes ago.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r8k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FWIW, it seems like the best way to think about \"specific vs general\" isn't as a quantitative measure, but as a comparative relation. X is more general than Y if there's a nice mapping from situations where you'd use Y to situations where you could use X instead. (This is analogous to the concept of \"reducing\" problems in complexity theory; egg on my face for talking smack about CT 5 minutes ago.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1548991681.794500",
        "client_msg_id": "250f65a8-7954-4e51-9867-bf05b308831d",
        "text": "There's a lot of wiggle room in that definition, and rightfully so. For instance: is a Turing machine more general than ANY computational artifact? Well, yeah, kind of. Although the mapping from your function to the Turing machine will basically involve programming the function into the Turing machine, so that's not that \"nice\" of a mapping.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sAJgR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's a lot of wiggle room in that definition, and rightfully so. For instance: is a Turing machine more general than ANY computational artifact? Well, yeah, kind of. Although the mapping from your function to the Turing machine will basically involve programming the function into the Turing machine, so that's not that \"nice\" of a mapping."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1548991858.794700",
        "client_msg_id": "ea38603e-4d19-49da-8663-3401ce85f4e0",
        "text": "Two examples of particularly nice mappings:\n• Passing the exact same parameters along, typecast into a more general type! (So `add(a : double, b : double)` is more general than `add(a : int, b : int)`.)\n• Passing the exact same parameters along, with a few extra parameters! (So `join(list, delimiter)` is more general than `joinWithCommas(list)`.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lt6Zt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Two examples of particularly nice mappings:\n• Passing the exact same parameters along, typecast into a more general type! (So "
                            },
                            {
                                "type": "text",
                                "text": "add(a : double, b : double)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is more general than "
                            },
                            {
                                "type": "text",
                                "text": "add(a : int, b : int)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".)\n• Passing the exact same parameters along, with a few extra parameters! (So "
                            },
                            {
                                "type": "text",
                                "text": "join(list, delimiter)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is more general than "
                            },
                            {
                                "type": "text",
                                "text": "joinWithCommas(list)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1548991911.794900",
        "client_msg_id": "ebaf4516-2040-414c-bd05-6b133c91bf3c",
        "text": "You could get around the \"git is for files, not functions\" problem by making a text editor that just treats whitespace lines as file boundaries. Boom, function-level granularity for git.\n\n&lt;\/sarcasm&gt;",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l0Oh5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You could get around the \"git is for files, not functions\" problem by making a text editor that just treats whitespace lines as file boundaries. Boom, function-level granularity for git.\n\n<\/sarcasm>"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1548991912.795100",
        "client_msg_id": "e032fabf-4a87-408a-9e4f-da27e7d2e6b4",
        "text": "But as the mapping becomes more and more complex (writing wrapper code to adapt a library to a different style of API, etc.), it becomes less and less \"nice\", and it becomes less and less clear that one artifact is more general than the other.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548940712.774000",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4oR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But as the mapping becomes more and more complex (writing wrapper code to adapt a library to a different style of API, etc.), it becomes less and less \"nice\", and it becomes less and less clear that one artifact is more general than the other."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1549001528.795900",
        "client_msg_id": "31becc8b-189a-44b1-abdd-837075f37d8b",
        "text": "I'm not sure PARC had clear objectives or goals. Kay talks about 'visions not goals' as being a key aspect of research back then, an aspect that is missing today. <https:\/\/www.quora.com\/What-made-Xerox-PARC-special-Who-else-today-is-like-them\/answer\/Alan-Kay-11>\n\nOn the point of competitive advantage, I agree with <@UBN9AFS0N> - I don't think these languages as-is provide that much advantage in all applications. Mostly you get advantage out of whatever has good integration with the entrenched system (to <@UE0ETTCG7>'s point on frameworks). But I think it's important to distinguish between 'what fits the market today' vs 'research'. These ideas are just points on a research *trajectory*. Thinking long term, perhaps exploring these ideas have more promise to qualitatively change computing?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548692863.694400",
        "parent_user_id": "UAJ9DV971",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CEU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not sure PARC had clear objectives or goals. Kay talks about 'visions not goals' as being a key aspect of research back then, an aspect that is missing today. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.quora.com\/What-made-Xerox-PARC-special-Who-else-today-is-like-them\/answer\/Alan-Kay-11"
                            },
                            {
                                "type": "text",
                                "text": "\n\nOn the point of competitive advantage, I agree with "
                            },
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " - I don't think these languages as-is provide that much advantage in all applications. Mostly you get advantage out of whatever has good integration with the entrenched system (to "
                            },
                            {
                                "type": "user",
                                "user_id": "UE0ETTCG7"
                            },
                            {
                                "type": "text",
                                "text": "'s point on frameworks). But I think it's important to distinguish between 'what fits the market today' vs 'research'. These ideas are just points on a research "
                            },
                            {
                                "type": "text",
                                "text": "trajectory",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Thinking long term, perhaps exploring these ideas have more promise to qualitatively change computing?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1549001628.796100",
        "client_msg_id": "c9aa5883-7233-412a-a934-3dcb35372d43",
        "text": "I also get the feeling we are building things in random directions, each based on our (moving) vision of what things should be like. If we think of this as research, is it a bad thing?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548692863.694400",
        "parent_user_id": "UAJ9DV971",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3pn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I also get the feeling we are building things in random directions, each based on our (moving) vision of what things should be like. If we think of this as research, is it a bad thing?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ7QL15F",
        "type": "message",
        "ts": "1549007221.796400",
        "client_msg_id": "93d1b429-af30-483c-8414-f06eb7d06d69",
        "text": "Lovely illustrations and neat writing style. Makes me almost want to stop everything I’m doing and learn about Applied Category Theory, which is an achievement in itself :slightly_smiling_face:.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g52d221ae708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a52d221ae708f36674644a348005633a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Janne",
            "real_name": "Janne Aukia",
            "display_name": "jaukia",
            "team": "T5TCAFTA9",
            "name": "janne.aukia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548980413.792300",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vtgz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lovely illustrations and neat writing style. Makes me almost want to stop everything I’m doing and learn about Applied Category Theory, which is an achievement in itself "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]