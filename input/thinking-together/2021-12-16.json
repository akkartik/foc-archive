[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1639642143.258400",
        "client_msg_id": "7b7e0d70-7e3e-4483-bbe2-f1296a5aca83",
        "text": "We've talked a bit about how to turn the ephemeral stream of Slack (and others like it) into a more durable knowledge base on the <#G016MGK6QE7|> channel. Things have been pretty quiet lately, but maybe a good time to restart that convo?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639548828.247400",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HJTQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We've talked a bit about how to turn the ephemeral stream of Slack (and others like it) into a more durable knowledge base on the "
                            },
                            {
                                "type": "channel",
                                "channel_id": "G016MGK6QE7"
                            },
                            {
                                "type": "text",
                                "text": " channel. Things have been pretty quiet lately, but maybe a good time to restart that convo?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1639642342.262000",
        "client_msg_id": "70E93952-7E76-4590-988E-71220246AF4D",
        "text": "It was constructive and most people enjoyed themselves, for sure. We didn't get very far in agreeing on a taxonomy or anything though. I'm trying to spearhead a survey where we can ask the whole community what problems they care about or are working on. Atm I'm still soliciting feedback from our group of 8.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1638770478.183100",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k\/dew",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It was constructive and most people enjoyed themselves, for sure. We didn't get very far in agreeing on a taxonomy or anything though. I'm trying to spearhead a survey where we can ask the whole community what problems they care about or are working on. Atm I'm still soliciting feedback from our group of 8."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDQBTJ211",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U02M6PM725T",
        "type": "message",
        "ts": "1639646202.271700",
        "edited": {
            "user": "U02M6PM725T",
            "ts": "1639647208.000000"
        },
        "client_msg_id": "21c07827-4efe-424b-a079-e6d0bbb82cac",
        "text": "#language-design-philosophy\nA data structure that’s orthogonal at its core? Why is that so hard to think of? Why is there such a strong tradition in CS\/PLD to think in composition by nesting but not of orthogonal composition? What if we (language designers, at least) are missing something here?\n\nWhy do I post such an underspecified topic? I think there is little doubt that perceiving orthogonally is a fundamental feature of human cognition, and that current language design fails to support this.\n\nAnd, yes, I don’t even know how to argue for this. This may be frustrating to try to think of. I must admit; I’ve learned to appreciate the feeling that there does exist something, that it must exist, but I can only just almost try and grasp it.\n\nWhat do you do in similar mental configurations? Grab a whiteboard? Begin writing an essay? Write some code that assumes the `thing` exists in order to reach your intuition for it (“air coding”)?\n\nYour..\n+ thoughts on this experience\n+ ideas for an attack on this problem\n.. are welcome! :slightly_smiling_face: :heart:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "46b1d789abee",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-14\/2726013476404_46b1d789abee49842525_72.jpg",
            "first_name": "Henning",
            "real_name": "Henning Sato von Rosen",
            "display_name": "hvrosen",
            "team": "T5TCAFTA9",
            "name": "henning.von.rosen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639646202.271700",
        "reply_count": 10,
        "reply_users_count": 4,
        "latest_reply": "1639755918.278100",
        "reply_users": [
            "U02E4DAQGSZ",
            "U02M6PM725T",
            "U9C92716C",
            "U016VUZGUUQ"
        ],
        "replies": [
            {
                "user": "U02E4DAQGSZ",
                "ts": "1639646991.271800"
            },
            {
                "user": "U02M6PM725T",
                "ts": "1639647323.272100"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1639647680.272300"
            },
            {
                "user": "U02M6PM725T",
                "ts": "1639649195.272600"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1639649913.273100"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1639650012.273400"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1639651415.274000"
            },
            {
                "user": "U9C92716C",
                "ts": "1639719263.275800"
            },
            {
                "user": "U02M6PM725T",
                "ts": "1639730813.277600"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1639755918.278100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H5nzc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "#language-design-philosophy\nA data structure that’s orthogonal at its core? Why is that so hard to think of? Why is there such a strong tradition in CS\/PLD to think in composition by nesting but not of orthogonal composition? What if we (language designers, at least) are missing something here?\n\nWhy do I post such an underspecified topic? I think there is little doubt that perceiving orthogonally is a fundamental feature of human cognition, and that current language design fails to support this.\n\nAnd, yes, I don’t even know how to argue for this. This may be frustrating to try to think of. I must admit; I’ve learned to appreciate the feeling that there does exist something, that it must exist, but I can only just almost try and grasp it.\n\nWhat do you do in similar mental configurations? Grab a whiteboard? Begin writing an essay? Write some code that assumes the "
                            },
                            {
                                "type": "text",
                                "text": "thing",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " exists in order to reach your intuition for it (“air coding”)?\n\nYour..\n+ thoughts on this experience\n+ ideas for an attack on this problem\n.. are welcome! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "heart",
                                "unicode": "2764-fe0f"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1639646991.271800",
        "client_msg_id": "c1672094-3b53-4e2a-8a2e-28a51d5f1358",
        "text": "If by orthogonality you mean cross product kind of things, I think Concurrent Hierarchical State Machines \/ UML statecharts can represent orthogonality well with a closed form PARALLEL operator for two state machines.\n\nBut this is orthogonal in the sense the two things are independant, the state of the system is the cross product. In the simplest form they do not interact, though it does have mechanisms for communicating.\n\n<https:\/\/link.springer.com\/content\/pdf\/10.1007\/3-540-44929-9_24.pdf>\n\nIs this the right lines of thinking?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639646202.271700",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6FM7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If by orthogonality you mean cross product kind of things, I think Concurrent Hierarchical State Machines \/ UML statecharts can represent orthogonality well with a closed form PARALLEL operator for two state machines.\n\nBut this is orthogonal in the sense the two things are independant, the state of the system is the cross product. In the simplest form they do not interact, though it does have mechanisms for communicating.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/link.springer.com\/content\/pdf\/10.1007\/3-540-44929-9_24.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIs this the right lines of thinking?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02M6PM725T",
        "type": "message",
        "ts": "1639647323.272100",
        "client_msg_id": "208296aa-e831-4a20-b40c-1a4cf83c77a9",
        "text": "<@U02E4DAQGSZ> You are reading my thoughts!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "46b1d789abee",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-14\/2726013476404_46b1d789abee49842525_72.jpg",
            "first_name": "Henning",
            "real_name": "Henning Sato von Rosen",
            "display_name": "hvrosen",
            "team": "T5TCAFTA9",
            "name": "henning.von.rosen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639646202.271700",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Kv3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02E4DAQGSZ"
                            },
                            {
                                "type": "text",
                                "text": " You are reading my thoughts!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1639647680.272300",
        "client_msg_id": "6aa3be42-bd1d-4aca-8884-7b951e74d7af",
        "text": "cool, so the root of these machines is the ragular language thingys. So maybe a regex can be considered a representation with orthogonality at its core too (you can concatenate and | regex expressions). I like HSM formalisms though because they play well with formal verification and somewhat resemble normal programming if you squint really hard.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639646202.271700",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V5y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "cool, so the root of these machines is the ragular language thingys. So maybe a regex can be considered a representation with orthogonality at its core too (you can concatenate and | regex expressions). I like HSM formalisms though because they play well with formal verification and somewhat resemble normal programming if you squint really hard."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U02M6PM725T"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02M6PM725T",
        "type": "message",
        "ts": "1639649195.272600",
        "edited": {
            "user": "U02M6PM725T",
            "ts": "1639649505.000000"
        },
        "client_msg_id": "11493f8c-bc86-43ad-a043-620b878aeebc",
        "text": "<@U02E4DAQGSZ> Yes, I think HSM takes state machines in a great direction! I am pondering the following way to perceive orthogonality in HSM’s. Traditionally we would look at is as the typical concrete representation invites: `{ a: { b: { c: ... } }, d: ..., e: ...}` .  So I consider the idea that this is more concrete  than it need be philosophically. Here is an attack: Let’s define two operators: `&amp;` for combining values into and-states, and `:` for combining values into hierarchies. Then we write `a:b:c  &amp; d &amp; e` . Traditionally, the CS practitioner and programmer would ask for precedence rules or brackets to disambiguate the expression:\n `{(a:b:c), d, e}` or  `{a:(b:c) , d , e }` . Here is the point where an alternative orthogonal model might be possible and might be valuable from a language-design point-of-view: In stead of nesting we lay out the values in a two-dimensional grid, e.g. drawing the  `&amp;` relation horizontally, and the `:` vertically upwards. Then, a noteworthy thing can be observed: _The `a` value is now both an element in the and-state (horizontal relation) and the first element in the hierarchy (vertical relation)._ This is my criteria for detecting of orthogonality, as I meant it in the OP.\n\n_Wow thanks!, it was kind of cool to actually write it down._ \n\nFollow-up question: So, while this evidently is drawable; does it map well to cognition, implementation? Is it view-point in the eye of the beholder, or does it open up them HSM model for e.g. generalization\/deeper understanding?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "46b1d789abee",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-14\/2726013476404_46b1d789abee49842525_72.jpg",
            "first_name": "Henning",
            "real_name": "Henning Sato von Rosen",
            "display_name": "hvrosen",
            "team": "T5TCAFTA9",
            "name": "henning.von.rosen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639646202.271700",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7DP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02E4DAQGSZ"
                            },
                            {
                                "type": "text",
                                "text": " Yes, I think HSM takes state machines in a great direction! I am pondering the following way to perceive orthogonality in HSM’s. Traditionally we would look at is as the typical concrete representation invites: "
                            },
                            {
                                "type": "text",
                                "text": "{ a: { b: { c: ... } }, d: ..., e: ...}",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " .  So I consider the idea that this is more concrete  than it need be philosophically. Here is an attack: Let’s define two operators: "
                            },
                            {
                                "type": "text",
                                "text": "&",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for combining values into and-states, and "
                            },
                            {
                                "type": "text",
                                "text": ":",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for combining values into hierarchies. Then we write "
                            },
                            {
                                "type": "text",
                                "text": "a:b:c  & d & e",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " . Traditionally, the CS practitioner and programmer would ask for precedence rules or brackets to disambiguate the expression:\n "
                            },
                            {
                                "type": "text",
                                "text": "{(a:b:c), d, e}",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or  "
                            },
                            {
                                "type": "text",
                                "text": "{a:(b:c) , d , e }",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " . Here is the point where an alternative orthogonal model might be possible and might be valuable from a language-design point-of-view: In stead of nesting we lay out the values in a two-dimensional grid, e.g. drawing the  "
                            },
                            {
                                "type": "text",
                                "text": "&",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " relation horizontally, and the "
                            },
                            {
                                "type": "text",
                                "text": ":",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vertically upwards. Then, a noteworthy thing can be observed: "
                            },
                            {
                                "type": "text",
                                "text": "The ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "a",
                                "style": {
                                    "italic": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " value is now both an element in the and-state (horizontal relation) and the first element in the hierarchy (vertical relation).",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " This is my criteria for detecting of orthogonality, as I meant it in the OP.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Wow thanks!, it was kind of cool to actually write it down. ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nFollow-up question: So, while this evidently is drawable; does it map well to cognition, implementation? Is it view-point in the eye of the beholder, or does it open up them HSM model for e.g. generalization\/deeper understanding?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1639649913.273100",
        "client_msg_id": "aa992db3-ed7c-4952-a40d-35914b36f1f6",
        "text": "My own experience is that HSMs are hard to program, but they are amenable to machine verification because their state space is enumerable. So thats useful, and in practice the paxos protocol is a runner for state machines, so they are used in technical domains for real (not sure about flavour of state machiens though, maybe not HSM).\n\nI also see them in realtime systems (<https:\/\/www.state-machine.com\/>) again, coz they are complex enough to be useful, but simple enough to really figure out and trace symbolically.\n\nThe QP frameworks people make a strong argument that HSM is necessary to avoid the state space explosion problem that basic state machines suffer from. This is directly because of the orthogonality. When you can express things as two orthogonal basis vectors you avoid having to flatten them into their non orthogonal space (the cross product). So yeah, I would say orthogonality has made state machine scale to the realtime systems domain. Of course, HSM are still less expressive than turing machines so they clearly are not used much when we have access to higher level languages and want to move fast and break things.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639646202.271700",
        "parent_user_id": "U02M6PM725T",
        "attachments": [
            {
                "from_url": "https:\/\/www.state-machine.com\/",
                "ts": 1598264356,
                "image_url": "https:\/\/www.state-machine.com\/wp-content\/uploads\/bg_emb-e1609363629666.jpg",
                "image_width": 313,
                "image_height": 250,
                "image_bytes": 55617,
                "service_icon": "https:\/\/www.state-machine.com\/wp-content\/uploads\/cropped-icon_ql-180x180.png",
                "id": 1,
                "original_url": "https:\/\/www.state-machine.com\/",
                "fallback": "Modern Embedded Software | Quantum Leaps: Modern Embedded Software - Quantum Leaps",
                "text": "QP real-time embedded frameworks (RTEFs) and QM visual modeling tool based on finite state machines and active objects. Ideal for ARM Cortex-M and other MCUs.",
                "title": "Modern Embedded Software - Quantum Leaps",
                "title_link": "https:\/\/www.state-machine.com\/",
                "service_name": "Modern Embedded Software | Quantum Leaps"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3B7TI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My own experience is that HSMs are hard to program, but they are amenable to machine verification because their state space is enumerable. So thats useful, and in practice the paxos protocol is a runner for state machines, so they are used in technical domains for real (not sure about flavour of state machiens though, maybe not HSM).\n\nI also see them in realtime systems ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.state-machine.com\/"
                            },
                            {
                                "type": "text",
                                "text": ") again, coz they are complex enough to be useful, but simple enough to really figure out and trace symbolically.\n\nThe QP frameworks people make a strong argument that HSM is necessary to avoid the state space explosion problem that basic state machines suffer from. This is directly because of the orthogonality. When you can express things as two orthogonal basis vectors you avoid having to flatten them into their non orthogonal space (the cross product). So yeah, I would say orthogonality has made state machine scale to the realtime systems domain. Of course, HSM are still less expressive than turing machines so they clearly are not used much when we have access to higher level languages and want to move fast and break things."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U02M6PM725T"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1639650012.273400",
        "edited": {
            "user": "U02E4DAQGSZ",
            "ts": "1639650035.000000"
        },
        "client_msg_id": "240e3d1f-fe5a-454c-b01f-fa36e2b258cb",
        "text": "This page expresses it much better and I think it is about orthogonality <https:\/\/www.state-machine.com\/fsm>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639646202.271700",
        "parent_user_id": "U02M6PM725T",
        "attachments": [
            {
                "from_url": "https:\/\/www.state-machine.com\/fsm",
                "ts": 1610150797,
                "image_url": "https:\/\/www.state-machine.com\/wp-content\/uploads\/key-concept.png",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 33407,
                "service_icon": "https:\/\/www.state-machine.com\/wp-content\/uploads\/cropped-icon_ql-180x180.png",
                "id": 1,
                "original_url": "https:\/\/www.state-machine.com\/fsm",
                "fallback": "Modern Embedded Software | Quantum Leaps: Key concept: Finite State Machine (FSM)",
                "text": "Finite State Machine (FSM) is a very powerful and effective technique of designing event-driven software.",
                "title": "Key concept: Finite State Machine (FSM)",
                "title_link": "https:\/\/www.state-machine.com\/fsm",
                "service_name": "Modern Embedded Software | Quantum Leaps"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S4M\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This page expresses it much better and I think it is about orthogonality "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.state-machine.com\/fsm"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U02M6PM725T"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1639650540.273800",
        "client_msg_id": "ca1db3e4-fd65-4cbf-bfb4-f4f24e6fd9ae",
        "text": "<@UK3LH8CF5> please share some of the tradeoffs! Such things are always under discussed",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1638792666.189800",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "txMg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": " please share some of the tradeoffs! Such things are always under discussed"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U02M6PM725T"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "(yes I agree with your orthogonality picture, except that the H itself is an orthogonal, so we don't really need the concurrency bit for HSM to add orthogonality to FSMs). I think in this diagram the edges are dimension in your orthogonal space diagram",
        "files": [
            {
                "id": "F02QK4D4PDM",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U02E4DAQGSZ",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QC0dw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(yes I agree with your orthogonality picture, except that the H itself is an orthogonal, so we don't really need the concurrency bit for HSM to add orthogonality to FSMs). I think in this diagram the edges are dimension in your orthogonal space diagram"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1639651415.274000",
        "client_msg_id": "81a69253-cf49-40a2-ab4d-996baa4467c9",
        "thread_ts": "1639646202.271700",
        "parent_user_id": "U02M6PM725T"
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1639656778.274300",
        "client_msg_id": "181ae319-6e4c-4fc5-a180-02d0a16d6c26",
        "text": "I'm quite demoralized. But that might be a success. We'll have to wait and see. Got me to revisit long-held assumptions.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1638770478.183100",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3bO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm quite demoralized. But that might be a success. We'll have to wait and see. Got me to revisit long-held assumptions."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01AD80KMLK",
        "type": "message",
        "ts": "1639706094.275200",
        "client_msg_id": "159f92d6-286c-41b4-afab-a0fd9fdc6aa6",
        "text": "\"tools for thought\" and \"end user programming\" are very very different things from an academic perspective",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a07cdcb6d037",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-09\/1376906509376_a07cdcb6d037bf7b6a5e_72.jpg",
            "first_name": "",
            "real_name": "Denny Vrandečić",
            "display_name": "Denny Vrandečić",
            "team": "T5TCAFTA9",
            "name": "dvrandecic",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639520017.233900",
        "parent_user_id": "UF1ATC4RF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/hX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"tools for thought\" and \"end user programming\" are very very different things from an academic perspective"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1639712370.275500",
        "client_msg_id": "4774e937-cd7c-4405-8cd6-9dd3098d5a34",
        "text": "For my part, I really appreciated your observations <@UCUSW7WVD>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1638770478.183100",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kVN4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For my part, I really appreciated your observations "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U9C92716C"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U9C92716C",
        "type": "message",
        "ts": "1639719263.275800",
        "client_msg_id": "7404e650-0d06-4e81-ba29-caa23b44d372",
        "text": "two, maybe three axes of orthogonality is nice for cognition. nesting is one way to manage more dimensions than that. seems to me you want to make it easy to navigate a variety of representations without losing context. <https:\/\/www.quantamagazine.org\/the-brain-maps-out-ideas-and-memories-like-spaces-20190114\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6bd6fe3fcf91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-20\/1137095139906_6bd6fe3fcf91b6f41781_72.jpg",
            "first_name": "",
            "real_name": "Dalton Banks",
            "display_name": "daltonb",
            "team": "T5TCAFTA9",
            "name": "dalton",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639646202.271700",
        "parent_user_id": "U02M6PM725T",
        "attachments": [
            {
                "from_url": "https:\/\/www.quantamagazine.org\/the-brain-maps-out-ideas-and-memories-like-spaces-20190114\/",
                "ts": 1547481300,
                "image_url": "https:\/\/d2r55xnwy6nx47.cloudfront.net\/uploads\/2019\/01\/GridCells_1200_social.jpg",
                "image_width": 476,
                "image_height": 250,
                "image_bytes": 76050,
                "service_icon": "https:\/\/www.quantamagazine.org\/favicon.png",
                "id": 1,
                "original_url": "https:\/\/www.quantamagazine.org\/the-brain-maps-out-ideas-and-memories-like-spaces-20190114\/",
                "fallback": "Quanta Magazine: The Brain Maps Out Ideas and Memories Like Spaces | Quanta Magazine",
                "text": "Emerging evidence suggests that the brain encodes abstract knowledge in the same way that it represents positions in space, which hints at a more universal theory of cognition.",
                "title": "The Brain Maps Out Ideas and Memories Like Spaces | Quanta Magazine",
                "title_link": "https:\/\/www.quantamagazine.org\/the-brain-maps-out-ideas-and-memories-like-spaces-20190114\/",
                "service_name": "Quanta Magazine"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BFfA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "two, maybe three axes of orthogonality is nice for cognition. nesting is one way to manage more dimensions than that. seems to me you want to make it easy to navigate a variety of representations without losing context. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.quantamagazine.org\/the-brain-maps-out-ideas-and-memories-like-spaces-20190114\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U02M6PM725T",
                    "U02E4DAQGSZ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U9C92716C",
        "type": "message",
        "ts": "1639719968.276200",
        "client_msg_id": "24b17c4b-9885-40d6-af73-4db8968a1d3c",
        "text": "i’m surprised how many of the intuitions line up given there are practically no hints on implementation. :smile: only thing that jumps out is the ‘platonic realm’ - worth noting even that’s encoded in physics (as are bits), and ultimately intent is a world-derived model. i wonder if you resonate with this writeup: <https:\/\/alexanderobenauer.com\/articles\/os\/1\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6bd6fe3fcf91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-20\/1137095139906_6bd6fe3fcf91b6f41781_72.jpg",
            "first_name": "",
            "real_name": "Dalton Banks",
            "display_name": "daltonb",
            "team": "T5TCAFTA9",
            "name": "dalton",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639401995.230600",
        "parent_user_id": "U016VUZGUUQ",
        "attachments": [
            {
                "from_url": "https:\/\/alexanderobenauer.com\/articles\/os\/1\/",
                "service_icon": "https:\/\/alexanderobenauer.com\/assets\/icons\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/alexanderobenauer.com\/articles\/os\/1\/",
                "fallback": "The Potential Merits of an Itemized OS",
                "text": "Does an itemized personal computing user environment have the potential to be a new medium in which software could “actually change the thought patterns of an entire civilization” (Kay, 1989)?",
                "title": "The Potential Merits of an Itemized OS",
                "title_link": "https:\/\/alexanderobenauer.com\/articles\/os\/1\/",
                "service_name": "alexanderobenauer.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tdfg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i’m surprised how many of the intuitions line up given there are practically no hints on implementation. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " only thing that jumps out is the ‘platonic realm’ - worth noting even that’s encoded in physics (as are bits), and ultimately intent is a world-derived model. i wonder if you resonate with this writeup: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/alexanderobenauer.com\/articles\/os\/1\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U9C92716C",
        "type": "message",
        "ts": "1639721241.276600",
        "client_msg_id": "4b879fb6-4f22-4499-8369-3111e1f62ecc",
        "text": "<@UCUSW7WVD> I’m interested in what assumptions you revisited if you care to share.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6bd6fe3fcf91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-20\/1137095139906_6bd6fe3fcf91b6f41781_72.jpg",
            "first_name": "",
            "real_name": "Dalton Banks",
            "display_name": "daltonb",
            "team": "T5TCAFTA9",
            "name": "dalton",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1638770478.183100",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WTo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " I’m interested in what assumptions you revisited if you care to share."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1639722766.276800",
        "client_msg_id": "0b21b630-f10b-4c7e-9768-4d1a7d627d6c",
        "text": "Yes, my concept of the end user UI is extremely similar to the one in your link. If that OS existed today in a way that was interoperable with the rest of the world I would have to consider shelling out serious money for it.\n\nI'm realizing I have a hole in my definitions of intent as written in bits and platonic intent. The practical upshot is that I want to write my intents _as_ if in terms of a non-physical platonic intent (and don't want to get into the philosophical question of whether that's meaningful when all\/most of our intents arise in the real world :D). Certainly, programs written that way (exceptions for low level code) should be independent of any particular encoding of the things on which they operate.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639401995.230600",
        "parent_user_id": "U016VUZGUUQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R9E+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, my concept of the end user UI is extremely similar to the one in your link. If that OS existed today in a way that was interoperable with the rest of the world I would have to consider shelling out serious money for it.\n\nI'm realizing I have a hole in my definitions of intent as written in bits and platonic intent. The practical upshot is that I want to write my intents "
                            },
                            {
                                "type": "text",
                                "text": "as",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " if in terms of a non-physical platonic intent (and don't want to get into the philosophical question of whether that's meaningful when all\/most of our intents arise in the real world :D). Certainly, programs written that way (exceptions for low level code) should be independent of any particular encoding of the things on which they operate."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]