[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1688282392.993429",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1688283446.000000"
        },
        "client_msg_id": "63fb180a-4fef-41fd-a880-e839e622609b",
        "text": "&gt; I was thinking one aspect of code-as-hypertext is _earlier_ than usual binding.\nand then:\n&gt; However the bindings-as-written are not the final bindings.\nI am not sure I understand your bindings. Are they mutable or not? Or maybe mutable initially, then frozen?\n\nAs for GT, yes, it's a new tooling layer on top of a standard Pharo object graph. The bindings presented in the UI thus reflect the current state of the system, but everything can change at any time.\n\n&gt;  I was thinking why the method body is text and not hypertext?\nNames would then point to what? There is nothing but names and objects in the Smalltalk object graph (if you see literals as special names).\n\n&gt;  In fact derived definitions are not typically available in the dev environment at all (smalltalk envs are the exception).\nAnd the big practical issue in Smalltalk is that you get only the derived definitions, with no provenance tracking unless the metaprogramming framework has its own mechanism for that. But then, that's not a fundamental issue, it's part of the tooling layer.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688176784.223859",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gdNh",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was thinking one aspect of code-as-hypertext is "
                            },
                            {
                                "type": "text",
                                "text": "earlier",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " than usual binding."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and then:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "However the bindings-as-written are not the final bindings."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI am not sure I understand your bindings. Are they mutable or not? Or maybe mutable initially, then frozen?\n\nAs for GT, yes, it's a new tooling layer on top of a standard Pharo object graph. The bindings presented in the UI thus reflect the current state of the system, but everything can change at any time.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " I was thinking why the method body is text and not hypertext?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nNames would then point to what? There is nothing but names and objects in the Smalltalk object graph (if you see literals as special names).\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " In fact derived definitions are not typically available in the dev environment at all (smalltalk envs are the exception)."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nAnd the big practical issue in Smalltalk is that you get only the derived definitions, with no provenance tracking unless the metaprogramming framework has its own mechanism for that. But then, that's not a fundamental issue, it's part of the tooling layer."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02028JHX37",
        "type": "message",
        "ts": "1688290566.056179",
        "edited": {
            "user": "U02028JHX37",
            "ts": "1688293838.000000"
        },
        "client_msg_id": "a10d6b18-e73e-45aa-aa2d-30ffe832d250",
        "text": "Recently, I realised that despite “vaguely knowing” what <http:\/\/www.vpri.org\/|VPRI> was doing (and trying to do), I never bothered to thoroughly read <https:\/\/tinlizzie.org\/IA\/index.php\/Papers_from_Viewpoints_Research_Institute|their reports and papers>. Now that I took the time to read them, I feel like overall it’s been time well spent (I got inspiration and encouragement for some projects).\n\nI’d like to know if you know about the VPRI undertaking, and if you do, whether you read (some of) their papers\/reports - see poll below. I’m also interested in similar experiences you had with other projects (thinking you know what they do, then having this understanding deepened by looking at their work more carefully).\n\n&gt; :white_circle: I didn’t know about VPRI.\n&gt; :large_blue_circle: I know about them, but don’t really know what they did.\n&gt; :red_circle: I know what they did, but read nothing from their writings.\n&gt; :dart: I read some of their reports.\n&gt; :white_check_mark: I read some of their reports and specific papers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdf13e3ce9df",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/df13e3ce9dfc39e2f387bd3d6e87b952.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jan Ruzicka",
            "display_name": "Jan Ruzicka",
            "team": "T5TCAFTA9",
            "name": "jan.ruzicka01",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688290566.056179",
        "reply_count": 7,
        "reply_users_count": 4,
        "latest_reply": "1688584523.966209",
        "reply_users": [
            "U055WH5D8DQ",
            "U5STGTB3J",
            "U02028JHX37",
            "UGWUJUZHT"
        ],
        "replies": [
            {
                "user": "U055WH5D8DQ",
                "ts": "1688291510.205469"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1688293844.435219"
            },
            {
                "user": "U02028JHX37",
                "ts": "1688293873.147929"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1688294386.969179"
            },
            {
                "user": "U02028JHX37",
                "ts": "1688298269.826069"
            },
            {
                "user": "U055WH5D8DQ",
                "ts": "1688326771.074719"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1688584523.966209"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KFW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Recently, I realised that despite “vaguely knowing” what "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.vpri.org\/",
                                "text": "VPRI"
                            },
                            {
                                "type": "text",
                                "text": " was doing (and trying to do), I never bothered to thoroughly read "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/tinlizzie.org\/IA\/index.php\/Papers_from_Viewpoints_Research_Institute",
                                "text": "their reports and papers"
                            },
                            {
                                "type": "text",
                                "text": ". Now that I took the time to read them, I feel like overall it’s been time well spent (I got inspiration and encouragement for some projects).\n\nI’d like to know if you know about the VPRI undertaking, and if you do, whether you read (some of) their papers\/reports - see poll below. I’m also interested in similar experiences you had with other projects (thinking you know what they do, then having this understanding deepened by looking at their work more carefully).\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "white_circle",
                                "unicode": "26aa"
                            },
                            {
                                "type": "text",
                                "text": " I didn’t know about VPRI.\n"
                            },
                            {
                                "type": "emoji",
                                "name": "large_blue_circle",
                                "unicode": "1f535"
                            },
                            {
                                "type": "text",
                                "text": " I know about them, but don’t really know what they did.\n"
                            },
                            {
                                "type": "emoji",
                                "name": "red_circle",
                                "unicode": "1f534"
                            },
                            {
                                "type": "text",
                                "text": " I know what they did, but read nothing from their writings.\n"
                            },
                            {
                                "type": "emoji",
                                "name": "dart",
                                "unicode": "1f3af"
                            },
                            {
                                "type": "text",
                                "text": " I read some of their reports.\n"
                            },
                            {
                                "type": "emoji",
                                "name": "white_check_mark",
                                "unicode": "2705"
                            },
                            {
                                "type": "text",
                                "text": " I read some of their reports and specific papers."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "U5STGTB3J",
                    "UEBG0NPDK",
                    "USH01JEDQ",
                    "U013ZLJARC7",
                    "UC2A2ARPT",
                    "UCUSW7WVD",
                    "U04PDG834SF",
                    "U8A5MS6R1",
                    "UJBAJNFLK",
                    "UA14TGLTC",
                    "U03B14DUZSA",
                    "U013WBS1B1C",
                    "U0112C10V4Y",
                    "U01U19ECZTJ"
                ],
                "count": 14
            },
            {
                "name": "white_circle",
                "users": [
                    "U05F1NMU93M"
                ],
                "count": 1
            },
            {
                "name": "red_circle",
                "users": [
                    "U79HM6726",
                    "U052H47TXML",
                    "U02JQA5FY5C"
                ],
                "count": 3
            },
            {
                "name": "dart",
                "users": [
                    "U05BRNRAC4V",
                    "U02QC0PPER3",
                    "UBN9AFS0N",
                    "UML4ZEKDK"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U055WH5D8DQ",
        "type": "message",
        "ts": "1688291510.205469",
        "client_msg_id": "7452AA9C-477D-45F6-A9F5-0831AEAB5380",
        "text": "I’m not familiar, and vpri also appears to be an overloaded acronym. Do you have a link or the full name of the project you’re referring to? ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga41961057b8",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a41961057b8ac818242833c8d3fb2b36.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "Joe",
            "real_name": "Joe Nash",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joe004",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688290566.056179",
        "parent_user_id": "U02028JHX37",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KF2d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m"
                            },
                            {
                                "type": "text",
                                "text": " not familiar, and vpri also appears to be an overloaded acronym. Do you have a link or the full name of the project "
                            },
                            {
                                "type": "text",
                                "text": "you’re"
                            },
                            {
                                "type": "text",
                                "text": " referring to? "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1688293844.435219",
        "client_msg_id": "453D2AC4-A79D-401A-B72C-E9D65E281108",
        "text": "It used to be <http:\/\/vpri.org|vpri.org>, but this one is probably more helpful at this point: <https:\/\/tinlizzie.org\/IA\/index.php\/Papers_from_Viewpoints_Research_Institute|https:\/\/tinlizzie.org\/IA\/index.php\/Papers_from_Viewpoints_Research_Institute>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688290566.056179",
        "parent_user_id": "U02028JHX37",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0c8Z3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It used to be vpri.org, but this one is probably more helpful at this point: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/tinlizzie.org\/IA\/index.php\/Papers_from_Viewpoints_Research_Institute",
                                "text": "https:\/\/tinlizzie.org\/IA\/index.php\/Papers_from_Viewpoints_Research_Institute"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02028JHX37",
        "type": "message",
        "ts": "1688293873.147929",
        "client_msg_id": "5a93b40e-4704-41fd-9f81-31fd419f01fc",
        "text": "<@U055WH5D8DQ> Sorry, didn’t realize that. Updated the post with links.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdf13e3ce9df",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/df13e3ce9dfc39e2f387bd3d6e87b952.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jan Ruzicka",
            "display_name": "Jan Ruzicka",
            "team": "T5TCAFTA9",
            "name": "jan.ruzicka01",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688290566.056179",
        "parent_user_id": "U02028JHX37",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kFdY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U055WH5D8DQ"
                            },
                            {
                                "type": "text",
                                "text": " Sorry, didn’t realize that. Updated the post with links."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1688294386.969179",
        "client_msg_id": "4F6970EC-FC5C-47B3-86F4-06803387D15D",
        "text": "I especially admire Ian Piumarta's work on taking late binding and dynamic object systems to the extreme with his combined lambda\/object architecture, and Alessandro Warths' work on fast programming language iteration, which gave birth to OMeta and then Ohm. \n\nBut there is so much more. I dream of starting a STEPS reboot that changes the context for building a complete environment in 20k LOCs from multimedia PC to today's mobile computing platforms. What would this look like if we assumed touch interaction and all the sensory input our mobile phones support was the baseline?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688290566.056179",
        "parent_user_id": "U02028JHX37",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ebz9d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I especially admire Ian Piumarta's work on taking late binding and dynamic object systems to the extreme with his combined lambda\/object architecture, and Alessandro Warths' work on fast programming language iteration, which gave birth to OMeta and then Ohm. \n\nBut there is so much more. I dream of starting a STEPS reboot that changes the context for building a complete environment in 20k LOCs from multimedia PC to today's mobile computing platforms"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " What would this look like if we assumed touch interaction and all the sensory input our mobile phones support was the baseline?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U016VUZGUUQ"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "cake",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02028JHX37",
        "type": "message",
        "ts": "1688298269.826069",
        "client_msg_id": "078683c7-e16e-43df-a2fe-193e54c078ea",
        "text": "<@U5STGTB3J> I agree... These two worked on what seems to be the key to VPRI's (partial) success.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdf13e3ce9df",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/df13e3ce9dfc39e2f387bd3d6e87b952.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jan Ruzicka",
            "display_name": "Jan Ruzicka",
            "team": "T5TCAFTA9",
            "name": "jan.ruzicka01",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688290566.056179",
        "parent_user_id": "U02028JHX37",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jhF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " I agree... These two worked on what seems to be the key to VPRI's (partial) success."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1688318668.116859",
        "client_msg_id": "4e71e5d3-2766-4bbc-8663-9d3f4eb243ec",
        "text": "&gt; I am not sure I understand your bindings. Are they mutable or not? Or maybe mutable initially, then frozen?\nThis would be PL dependent but typically I imagine no in-place rebinding. However a form of rebinding happens by creating new versions of the hypertext objects. Eg the hand edited source objects could only be rebound by the user as part of editing. In the metaprogramming stage the system would create derived versions of these objects where some of the bindings have changed. For instance a binding to an abstract type in a source object may be resolved to a concrete subtype in the derived objects. So the PL semantics would also restrict what kinds of “rebindings” happen. Eg “constants” would be bindings that don’t change in any derived objects.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688176784.223859",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pf8",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am not sure I understand your bindings. Are they mutable or not? Or maybe mutable initially, then frozen?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This would be PL dependent but typically I imagine no in-place rebinding. However a form of rebinding happens by creating new versions of the hypertext objects. Eg the hand edited source objects could only be rebound by the user as part of editing. In the metaprogramming stage the system would create derived versions of these objects where some of the bindings have changed. For instance a binding to an abstract type in a source object may be resolved to a concrete subtype in the derived objects. So the PL semantics would also restrict what kinds of “rebindings” happen. Eg “constants” would be bindings that don’t change in any derived objects."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1688319741.564619",
        "client_msg_id": "496f3352-527a-4315-bf0c-783e8c1c8e94",
        "text": "I think you might run into situations where you want a thing to hyperlink to multiple possible targets. The current binding yes, but sometimes also the previous binding, or the previous edit. Or the edit history.\n\nDoes your point against `inline` apply also to the very idea of hypertext? Why does the writer need to create hyperlinks, can the reader just have tools for all these transforms? That's basically the world I live in today. My IDE takes me to a word's definition with F12, all its references with S-F12, all its callsites with C-k C-t. Perhaps we just need to do more of this?\n\nNow I want to link to an old thread of Lisp Machine screenshots, but it's sadly stuck in Twitter.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688176784.223859",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bWp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think you might run into situations where you want a thing to hyperlink to multiple possible targets. The current binding yes, but sometimes also the previous binding, or the previous edit. Or the edit history.\n\nDoes your point against "
                            },
                            {
                                "type": "text",
                                "text": "inline",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " apply also to the very idea of hypertext? Why does the writer need to create hyperlinks, can the reader just have tools for all these transforms? That's basically the world I live in today. My IDE takes me to a word's definition with F12, all its references with S-F12, all its callsites with C-k C-t. Perhaps we just need to do more of this?\n\nNow I want to link to an old thread of Lisp Machine screenshots, but it's sadly stuck in Twitter."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1688325171.005499",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1688332373.000000"
        },
        "client_msg_id": "db42c8a7-0b4c-4b9b-af6a-cc51f21e3ef9",
        "text": "&gt; I think you might run into situations where you want a thing to hyperlink to multiple possible targets.\nYes. I imagine viewing the source and various derived objects as distinct hypertext objects where you are able to go back and forth and follow the chain of provenance.\n\n&gt; Does your point against `inline` apply also to the very idea of hypertext? Why does the writer need to create hyperlinks, can the reader just have tools for all these transforms? That’s basically the world I live in today.\nGood question. While it does bother me that the tooling overlaid links are an approximation (and poorer for dynamic langs generally), the bigger issue is the lack uniform navigation across derived definitions and source definitions.  I _want_ to see the rendered macro, the concretized generic method and so on. I want to deftly bounce between those and the original source definitions.\n\nBTW your earlier counterpoint of writer designed experience via `inline` is valid. I think the reader should still have the ability to customize it further (eg collapse an `inline`).\n\nA related point is that the reader doesn’t get to customize the text in text-file-as-code. For example if the writer chose to write `import pandas as pd`, the reader has no choice but to see `pd.foo` scattered across the file. If this was hypertext-as-code, it’s easier for tools to offer customized rendering, eg “show the fully qualified name everywhere”, or “show the short name, but blue for `pandas`” and so on. In theory this is possible with text-file-as-code but more challenging, given that tooling is trying to simulate the PL semantics to extract high fidelity references.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688176784.223859",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j3Rx",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think you might run into situations where you want a thing to hyperlink to multiple possible targets."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes. I imagine viewing the source and various derived objects as distinct hypertext objects where you are able to go back and forth and follow the chain of provenance.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does your point against "
                            },
                            {
                                "type": "text",
                                "text": "inline",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " apply also to the very idea of hypertext? Why does the writer need to create hyperlinks, can the reader just have tools for all these transforms? That’s basically the world I live in today."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good question. While it does bother me that the tooling overlaid links are an approximation (and poorer for dynamic langs generally), the bigger issue is the lack uniform navigation across derived definitions and source definitions.  I "
                            },
                            {
                                "type": "text",
                                "text": "want",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to see the rendered macro, the concretized generic method and so on. I want to deftly bounce between those and the original source definitions.\n\nBTW your earlier counterpoint of writer designed experience via "
                            },
                            {
                                "type": "text",
                                "text": "inline",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is valid. I think the reader should still have the ability to customize it further (eg collapse an "
                            },
                            {
                                "type": "text",
                                "text": "inline",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ").\n\nA related point is that the reader doesn’t get to customize the text in text-file-as-code. For example if the writer chose to write "
                            },
                            {
                                "type": "text",
                                "text": "import pandas as pd",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", the reader has no choice but to see "
                            },
                            {
                                "type": "text",
                                "text": "pd.foo",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " scattered across the file. If this was hypertext-as-code, it’s easier for tools to offer customized rendering, eg “show the fully qualified name everywhere”, or “show the short name, but blue for "
                            },
                            {
                                "type": "text",
                                "text": "pandas",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "” and so on. In theory this is possible with text-file-as-code but more challenging, given that tooling is trying to simulate the PL semantics to extract high fidelity references."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "U02QC0PPER3"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U055WH5D8DQ",
        "type": "message",
        "ts": "1688326771.074719",
        "client_msg_id": "B1B11A77-EA6C-40E4-A479-92D862F51263",
        "text": "Thanks <@U02028JHX37>! ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga41961057b8",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a41961057b8ac818242833c8d3fb2b36.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "Joe",
            "real_name": "Joe Nash",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joe004",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688290566.056179",
        "parent_user_id": "U02028JHX37",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UfeRa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U02028JHX37"
                            },
                            {
                                "type": "text",
                                "text": "! "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1688329077.265219",
        "client_msg_id": "acfa097d-92ce-4ad7-9b7a-fcd33b94122a",
        "text": "Hi <@UJBAJNFLK> Just to say, I've far from forgotten about and\/or I'm not in any way ignoring your question! On the contrary, it's set me off on one of my expansive multi-dimensional Trains Of Thought, (that sometimes last months!)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687684672.115339",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R028",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " Just to say, I've far from forgotten about and\/or I'm not in any way ignoring your question! On the contrary, it's set me off on one of my expansive multi-dimensional Trains Of Thought, (that sometimes last months!)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "rocket",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1688329116.205329",
        "client_msg_id": "7555375e-8e76-4ba4-9295-5ee357035875",
        "text": "I'm currently learning all I can about Dynamicland so that I can at least answer your question for that!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687684672.115339",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "brNm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm currently learning all I can about Dynamicland so that I can at least answer your question for that!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1688338057.293999",
        "client_msg_id": "f0ea13d8-c7c7-4171-896c-5a69c4fbfe81",
        "text": "Dynamicland could be done better with Augmented Reality specs. All that frayable, water- and fire-damageable stuff. No version control? No backups? Those little test tube doodads will fall apart after a few months. Plus with AR you can actually use that amazing innovation they call the Inter Network. Argue away, humiliate me for my lack of Bret Victor worship!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688338057.293999",
        "reply_count": 43,
        "reply_users_count": 13,
        "latest_reply": "1695037772.387449",
        "reply_users": [
            "UE6EFEPTQ",
            "UEBG0NPDK",
            "UH7GU4TAM",
            "U016VUZGUUQ",
            "UJBAJNFLK",
            "UC2A2ARPT",
            "U5T9JLUAE",
            "UDQBTJ211",
            "UJFN50C00",
            "U0112C10V4Y",
            "ULM3U6275",
            "U8A5MS6R1",
            "U05SU27S1M2"
        ],
        "replies": [
            {
                "user": "UE6EFEPTQ",
                "ts": "1688340122.999099"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1688340987.701539"
            },
            {
                "user": "UH7GU4TAM",
                "ts": "1688343992.132599"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1688358466.903919"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1688363311.414059"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688372372.377649"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688372637.462289"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688372748.601419"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688372826.651649"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1688393494.507609"
            },
            {
                "user": "U5T9JLUAE",
                "ts": "1688396427.416679"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1688397739.988379"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688398498.944289"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688398819.807119"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688398879.975049"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1688402559.418359"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688408153.043479"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688408187.457539"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688534032.592199"
            },
            {
                "user": "UJFN50C00",
                "ts": "1688551906.017539"
            },
            {
                "user": "UJFN50C00",
                "ts": "1688552021.361449"
            },
            {
                "user": "UJFN50C00",
                "ts": "1688552153.383459"
            },
            {
                "user": "U0112C10V4Y",
                "ts": "1688670199.296779"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688674336.833779"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688675141.553049"
            },
            {
                "user": "UJFN50C00",
                "ts": "1688800074.107899"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688804644.363409"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688804713.183419"
            },
            {
                "user": "UJFN50C00",
                "ts": "1688804966.958299"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688805964.545069"
            },
            {
                "user": "ULM3U6275",
                "ts": "1688942798.946489"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1688976980.328449"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1689003155.275909"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1689008647.790769"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1689009563.721559"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1689018831.408729"
            },
            {
                "user": "ULM3U6275",
                "ts": "1689023364.911989"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1689026532.513509"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1689035810.961529"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1689036752.268129"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1689057406.610529"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1689057557.813669"
            },
            {
                "user": "U05SU27S1M2",
                "ts": "1695037772.387449"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q9T5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Dynamicland could be done better with Augmented Reality specs. All that frayable, water- and fire-damageable stuff. No version control? No backups? Those little test tube doodads will fall apart after a few months. Plus with AR you can actually use that amazing innovation they call the Inter Network. Argue away, humiliate me for my lack of Bret Victor worship!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1688340122.999099",
        "client_msg_id": "dae9ce21-1949-4892-a261-3e5a38c14c62",
        "text": "Having said that, Realtalk looks somewhat interesting: isn't that wish\/claim thing a bit like <@UEBG0NPDK>’s Eve?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688338057.293999",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vvI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Having said that, Realtalk looks somewhat interesting: isn't that wish\/claim thing a bit like "
                            },
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": "’s Eve?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1688340987.701539",
        "client_msg_id": "0E33FAD6-587B-409E-ACF1-E4FFE2F87E27",
        "text": "Yep very similar in principle :slightly_smiling_face: ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688338057.293999",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5YX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yep very similar in principle "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UH7GU4TAM",
        "type": "message",
        "ts": "1688343992.132599",
        "client_msg_id": "4af0ac43-aa8d-45ce-8e63-719a1bf8b64d",
        "text": "As someone who will never strap a computing device onto my body, for philosophical and physical accessibility reasons, I find the immersive computing future to be dystopian.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2af66accb7e7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-15\/956486537398_2af66accb7e7b7dd4d7b_72.png",
            "first_name": "Nick",
            "real_name": "Nick Main",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "david.nick.main",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688338057.293999",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xIP34",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As someone who will never strap a computing device onto my body, for philosophical and physical accessibility reasons, I find the immersive computing future to be dystopian."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT",
                    "U03R0B9U1GD"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1688358466.903919",
        "client_msg_id": "b6906f0c-5779-4111-a022-dc715c58adea",
        "text": "Less stridently, but I'm also very skeptical of AR as a primary computer interface. At minimum it must remain possible to fully utilize computers without it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688338057.293999",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AkA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Less stridently, but I'm also very skeptical of AR as a primary computer interface. At minimum it must remain possible to fully utilize computers without it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1688363311.414059",
        "client_msg_id": "83db1686-6958-450d-975e-51af6c845525",
        "text": "If you think of AR as implemented by Apple's Vision Pro (to cite just the latest incarnation), I agee with <@UH7GU4TAM> and <@U016VUZGUUQ> that it's not going to happen for mainstream computing, though perhaps for specific use cases where the inconvenience of the devices is tolerable.\n\nBut AR doesn't have to be close-to-the-body devices. Using transparent screens, small projectors, etc., digital information can be added to the physical world in a more natural way, i.e. closer to what our senses handle best.\n\nDynamicland is a research project. As such, it starts by exploring extremes. Once you understand what you gain and loose from those extremes, you can explore compromises. Which in the case of Dynamicland includes re-integrating tradtional computing technology.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688338057.293999",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JEE\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you think of AR as implemented by Apple's Vision Pro (to cite just the latest incarnation), I agee with "
                            },
                            {
                                "type": "user",
                                "user_id": "UH7GU4TAM"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " that it's not going to happen for mainstream computing, though perhaps for specific use cases where the inconvenience of the devices is tolerable.\n\nBut AR doesn't have to be close-to-the-body devices. Using transparent screens, small projectors, etc., digital information can be added to the physical world in a more natural way, i.e. closer to what our senses handle best.\n\nDynamicland is a research project. As such, it starts by exploring extremes. Once you understand what you gain and loose from those extremes, you can explore compromises. Which in the case of Dynamicland includes re-integrating tradtional computing technology."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U03R0B9U1GD"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1688363769.240389",
        "client_msg_id": "0bd3f5d7-a875-494f-9162-a1d3b1ff352c",
        "text": "&gt;  I _want_ to see the rendered macro, the concretized generic method and so on.\nNow that I understand your idea, I actually want more; I want to _edit_ the rendered macro, or manually send it through a domain-specific transformer. I want those changes recorded, and when later I edit the upstream code, I want to be able to merge the changes made at different levels.\n\nExample use case: optimization. Quite often, optimization is in conflict with abstraction. If I get to edit both the abstract and the concrete code, I can have my cake and eat it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688176784.223859",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wuqf",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " I "
                            },
                            {
                                "type": "text",
                                "text": "want",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to see the rendered macro, the concretized generic method and so on."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nNow that I understand your idea, I actually want more; I want to "
                            },
                            {
                                "type": "text",
                                "text": "edit",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the rendered macro, or manually send it through a domain-specific transformer. I want those changes recorded, and when later I edit the upstream code, I want to be able to merge the changes made at different levels.\n\nExample use case: optimization. Quite often, optimization is in conflict with abstraction. If I get to edit both the abstract and the concrete code, I can have my cake and eat it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1688364252.706259",
        "client_msg_id": "6a24f027-2828-41c2-9139-5a764af99199",
        "text": "&gt; Now that I understand your idea, I actually want more; I want to _edit_ the rendered macro, or manually send it through a domain-specific transformer.\nHear hear!\nI think about a flow where you edit a derived object directly and the system shows how the change can be translated back to the source objects. There could be more than one possible source edit and the system would give you a choice. More importantly, it can show you the effect of that change on _other_ derived objects.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688176784.223859",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2W6I",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Now that I understand your idea, I actually want more; I want to "
                            },
                            {
                                "type": "text",
                                "text": "edit",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the rendered macro, or manually send it through a domain-specific transformer."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hear hear!\nI think about a flow where you edit a derived object directly and the system shows how the change can be translated back to the source objects. There could be more than one possible source edit and the system would give you a choice. More importantly, it can show you the effect of that change on "
                            },
                            {
                                "type": "text",
                                "text": "other",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " derived objects."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]