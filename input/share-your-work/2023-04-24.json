[
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1682336547.022709",
        "client_msg_id": "bf574832-3f6e-43bb-8074-742a61aaa3d4",
        "text": "Thank you for taking the time to read and to write detailed comments! Much appreciated.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1681811012.388819",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qgLV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you for taking the time to read and to write detailed comments! Much appreciated."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1682347549.262349",
        "client_msg_id": "8fab6912-b7ed-4814-9d8b-a8603333445e",
        "text": "<@UGWUJUZHT> (been moving) Ruby <https:\/\/en.wikibooks.org\/wiki\/Ruby_Programming\/Syntax\/Literals#The_%_Notation> borrows from Perl.  Like Perl exact rules are a bit murky.  You can use pretty much any ASCII symbol after the `%` so:\n• `%~hello, world~`\n• `%$hello, world$` \n• `%#hello, world#` — even though `#` usually marks comments.\nSome symbols pair as brackets though:\n• `%{hello, world}`\n• `%[hello, world]`\n• `%&lt;hello, world&gt;`\nGnarly.  And let's not start into Here Docs except to say they they're a fun exception to the rule that expressions in programming languages nest.\n\nThough less baroque, Lua has its own cute string literals with double bracket `[[hello, world]]` that you can put in a bigger literal by using equal signs, `[==[we want to bracket [[hello, world]] somehow]==]` and then `[=====[we can go deep when [==[we want to bracket [[hello, world]] somehow]==] by adding more and more equal signs]=====]`.  The only rule is that the closing bracket has the same number of equal signs as the opening bracket.  So it's not like these things are nesting or anything silly like that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1681038428.161199",
        "parent_user_id": "U03R0B9U1GD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ByQuS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " (been moving) Ruby "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikibooks.org\/wiki\/Ruby_Programming\/Syntax\/Literals#The_%_Notation"
                            },
                            {
                                "type": "text",
                                "text": " borrows from Perl.  Like Perl exact rules are a bit murky.  You can use pretty much any ASCII symbol after the "
                            },
                            {
                                "type": "text",
                                "text": "%",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " so:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "%~hello, world~",
                                        "style": {
                                            "code": true
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "%$hello, world$ ",
                                        "style": {
                                            "code": true
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "%#hello, world#",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " — even though "
                                    },
                                    {
                                        "type": "text",
                                        "text": "#",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " usually marks comments."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some symbols pair as brackets though:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "%{hello, world}",
                                        "style": {
                                            "code": true
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "%[hello, world]",
                                        "style": {
                                            "code": true
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "%<hello, world>",
                                        "style": {
                                            "code": true
                                        }
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Gnarly.  And let's not start into Here Docs except to say they they're a fun exception to the rule that expressions in programming languages nest.\n\nThough less baroque, Lua has its own cute string literals with double bracket "
                            },
                            {
                                "type": "text",
                                "text": "[[hello, world]]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that you can put in a bigger literal by using equal signs, "
                            },
                            {
                                "type": "text",
                                "text": "[==[we want to bracket [[hello, world]] somehow]==]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and then "
                            },
                            {
                                "type": "text",
                                "text": "[=====[we can go deep when [==[we want to bracket [[hello, world]] somehow]==] by adding more and more equal signs]=====]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".  The only rule is that the closing bracket has the same number of equal signs as the opening bracket.  So it's not like these things are nesting or anything silly like that."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]