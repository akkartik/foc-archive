[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1649318959.337689",
        "client_msg_id": "f72f9083-7b61-4096-89ae-21109fe1c283",
        "text": "Looks good, <@UDRF3ALP4>. It's nice to see this sort of editing coming to non-Lisp languages. :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1649001855.037569",
        "parent_user_id": "UDRF3ALP4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R9M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looks good, "
                            },
                            {
                                "type": "user",
                                "user_id": "UDRF3ALP4"
                            },
                            {
                                "type": "text",
                                "text": ". It's nice to see this sort of editing coming to non-Lisp languages. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDRF3ALP4",
        "type": "message",
        "ts": "1649330688.486999",
        "client_msg_id": "72ff1276-75a3-45b3-b1cf-acc29cf6d02f",
        "text": "Thanks Jack! Yeah, Paredit almost made me go Clojure but it's just cultural-aesthetically too much of a leap for me. Out of curiosity: Are you using Paredit?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cc11a4b410bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-01-16\/527084657030_cc11a4b410bd932425de_72.jpg",
            "first_name": "Gregor",
            "real_name": "Gregor",
            "display_name": "Gregor",
            "team": "T5TCAFTA9",
            "name": "gregorwbr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1649001855.037569",
        "parent_user_id": "UDRF3ALP4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ntWA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks Jack! Yeah, Paredit almost made me go Clojure but it's just cultural-aesthetically too much of a leap for me. Out of curiosity: Are you using Paredit?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1649345193.710529",
        "client_msg_id": "e4a7fa53-a2c9-49ba-972e-855215fd196a",
        "text": "Some retro sci-fi aesthetic choices there, some subconsciously similarity to some Amiga UI?\n\nAs for \"backsolving,\" constraint satisfaction is a good way to approach that kind of question.  Read `line = plane1 ^ plane2` as establishing a constraint.  The semantics of how to fix `line`, `plane1`, and `plane2` depends on an objective function and other constraints.  When read as a definition, you have the implicit constraint that `plane1` and `plane2` are already been fixed.  In some contexts, a satisfying way to satisfy constraints is to make them kind of springy.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1649101186.644459",
        "parent_user_id": "U017GNJM021",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sX1S1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some retro sci-fi aesthetic choices there, some subconsciously similarity to some Amiga UI?\n\nAs for \"backsolving,\" constraint satisfaction is a good way to approach that kind of question.  Read "
                            },
                            {
                                "type": "text",
                                "text": "line = plane1 ^ plane2",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " as establishing a constraint.  The semantics of how to fix "
                            },
                            {
                                "type": "text",
                                "text": "line",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "plane1",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and "
                            },
                            {
                                "type": "text",
                                "text": "plane2",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " depends on an objective function and other constraints.  When read as a definition, you have the implicit constraint that "
                            },
                            {
                                "type": "text",
                                "text": "plane1",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "plane2",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " are already been fixed.  In some contexts, a satisfying way to satisfy constraints is to make them kind of springy."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]