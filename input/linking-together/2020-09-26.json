[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1601110753.013900",
        "edited": {
            "user": "U013ZLJARC7",
            "ts": "1601613246.000000"
        },
        "client_msg_id": "ba934adf-388d-4eb7-9f58-f272a13671a3",
        "text": "Part linking-together\/part share-your-work, here's a very nice writeup of some work we're doing with Sam Ritchie to extend Maria.cloud for physics pedagogy. Fans of tools for thought, Roam, notebooks, Clojure(script), &amp;c, will find something of interest:\n<https:\/\/roadtoreality.substack.com\/p\/the-dynamic-notebook>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601110753.013900",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1601311700.038700",
        "reply_users": [
            "UJBAJNFLK",
            "U013ZLJARC7"
        ],
        "replies": [
            {
                "user": "UJBAJNFLK",
                "ts": "1601283237.034400"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1601296896.036600"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1601311700.038700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f4x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Part linking-together\/part share-your-work, here's a very nice writeup of some work we're doing with Sam Ritchie to extend Maria.cloud for physics pedagogy. Fans of tools for thought, Roam, notebooks, Clojure(script), &c, will find something of interest:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/roadtoreality.substack.com\/p\/the-dynamic-notebook"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK",
                    "U8A5MS6R1",
                    "UCUSW7WVD",
                    "UE0ETTCG7",
                    "UF6RLAL7J",
                    "UUK6Y29R8",
                    "U019CPED6T1",
                    "USJ9LD0E4",
                    "UDKTZSD6H",
                    "UA14TGLTC",
                    "UUQ2EQW21",
                    "U01661S9F34",
                    "ULK0Z4MPV",
                    "UFPRPSA4S",
                    "UBSMEUXAA"
                ],
                "count": 15
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1601114174.014200",
        "client_msg_id": "a1381f99-f8ae-43b2-86db-690c276a8899",
        "text": "&gt;  I do actually think VS Code has a weakness right now, and that's that it can't run in integrated browser\nwhat does this mean?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VaDw",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " I do actually think VS Code has a weakness right now, and that's that it can't run in integrated browser"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nwhat does this mean?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1601124664.024200",
        "edited": {
            "user": "UE0ETTCG7",
            "ts": "1601142108.000000"
        },
        "client_msg_id": "7BC42671-4C44-44CF-B4E4-30171078A46A",
        "text": "That you can’t run a browser inside VS Code. It’s always struck me as strange that web developers use consumer bowser that are sandboxed from the file system to test a program that’s of course made up of files on that file system.\n\nYou can see the impacts of this model in action by looking at the hacky live browser plugin for VS Code that spins up a server just to get automatic refreshing for HTML files. But the bigger impact is the sophisticated dev tools bundled into browsers. It would make so much more sense for those tools to be bundle with the actual source files, so there’s more seamless interaction between the two. For example jumping to editing the source HTML or CSS, or clicking in the IDE to add debugger breakpoints. There are some hacks to get around this, but they’re just that, hacks.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fIoqZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That you can’t run a browser inside VS Code. It’s always struck me as strange that web developers use consumer bowser that are sandboxed from the file system to test a program that’s of course made up of files on that file system.\n\nYou can see the impacts of this model in action by looking at the hacky live browser plugin for VS Code that spins up a server just to get automatic refreshing for HTML files. But the bigger impact is the sophisticated dev tools bundled into browsers. It would make so much more sense for those tools to be bundle with the actual source files, so there’s more seamless interaction between the two. For example jumping to editing the source HTML or CSS, or clicking in the IDE to add debugger breakpoints. There are some hacks to get around this, but they’re just that, hacks."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1601134347.025400",
        "client_msg_id": "382F54B4-0770-421B-9166-2CC327927D8A",
        "text": "very odd considering that it’s based on electron",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F21",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "very odd considering that it’s based on electron"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1601142039.025600",
        "client_msg_id": "5092337c-5299-4d87-94a5-0b5658658474",
        "text": "Yeah agreed",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ByKf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah agreed"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1601169121.028800",
        "client_msg_id": "7f831f2d-7760-4740-bb54-fcaa4671e31f",
        "text": "I independently had some related thoughts about REPLs. I'm using this opportunity to rant. Maybe this should go under that original thread on REPL's, or maybe it's own post, but I'll post it here to start. Apologies in advance :stuck_out_tongue: .\n\nFor some context, I am not a \"lisp person.\" That's not to say I dislike lisp. I greatly admire lisp....from afar. But, my career and personal interests always end up taking me in a different direction, but I digress...\n\nMy day job consists of optimized C++ and Python infrastructure used in the banking industry. It's very \"traditional\" in many ways. Recently, I \"jury-rigged\" a series of exploratory \"REPL like\" programs to test various subsystems. These \"REPLs\" can be infuriating to set up. No part of the environment is optimized for that kind of workflow.\n\nBut I have found that once set up, I was able to be enormously more productive and confident in my code. Compared to any lisp REPL, or even a python REPL, these programs are stone age primitive. Still, this made me want to explore expanding it to more parts of the system, but further I looked, the more difficult it is to setup. I have to make a cost\/benefit trade-off against \"getting real work done,\" and unfortunately, I often have to choose to stick with the status quo.\n\nBefore I shifted into lower level systems programming, I spent years doing to Javascript and PHP. I burned out on web programming, but this experience made me realize that one thing I miss is the exploratory coding and rapid feedback experience.\n\nAnd that leads me to the crux of my lament. Why can't I have a systems level programming environment that allows for this kind of rapid feedback?\n\nObviously there are limits the closer you get to the hardware, but even then, Forth has been used in embedded for decades (with a REPL), and people have put a Python REPL on an ESP8266, so I know it's possible to go fairly far with this idea...\n\nAgain, I am not a lisp evangelical, In fact, I generally prefer static types and fine grained control over my memory management. I'm also not saying REPLs are a panacea. I'm a practical person. It's frustrating for me to see the potential for a particular tool, and yet, to be unable to use it. \/rant",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601061047.010400",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/Y5G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I independently had some related thoughts about REPLs. I'm using this opportunity to rant. Maybe this should go under that original thread on REPL's, or maybe it's own post, but I'll post it here to start. Apologies in advance "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": " .\n\nFor some context, I am not a \"lisp person.\" That's not to say I dislike lisp. I greatly admire lisp....from afar. But, my career and personal interests always end up taking me in a different direction, but I digress...\n\nMy day job consists of optimized C++ and Python infrastructure used in the banking industry. It's very \"traditional\" in many ways. Recently, I \"jury-rigged\" a series of exploratory \"REPL like\" programs to test various subsystems. These \"REPLs\" can be infuriating to set up. No part of the environment is optimized for that kind of workflow.\n\nBut I have found that once set up, I was able to be enormously more productive and confident in my code. Compared to any lisp REPL, or even a python REPL, these programs are stone age primitive. Still, this made me want to explore expanding it to more parts of the system, but further I looked, the more difficult it is to setup. I have to make a cost\/benefit trade-off against \"getting real work done,\" and unfortunately, I often have to choose to stick with the status quo.\n\nBefore I shifted into lower level systems programming, I spent years doing to Javascript and PHP. I burned out on web programming, but this experience made me realize that one thing I miss is the exploratory coding and rapid feedback experience.\n\nAnd that leads me to the crux of my lament. Why can't I have a systems level programming environment that allows for this kind of rapid feedback?\n\nObviously there are limits the closer you get to the hardware, but even then, Forth has been used in embedded for decades (with a REPL), and people have put a Python REPL on an ESP8266, so I know it's possible to go fairly far with this idea...\n\nAgain, I am not a lisp evangelical, In fact, I generally prefer static types and fine grained control over my memory management. I'm also not saying REPLs are a panacea. I'm a practical person. It's frustrating for me to see the potential for a particular tool, and yet, to be unable to use it. \/rant"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U0112C10V4Y"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UPX3PH28N",
        "type": "message",
        "ts": "1601185570.029200",
        "client_msg_id": "c812b53c-7945-49bc-8964-a7e3ddb63e8f",
        "text": "There is also <https:\/\/www.zettlr.com\/>\nHaven't tried it (and won't) but it's sitting in my bookmarks for a while.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g58ad4af42f7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/58ad4af42f7cff8698951a7befb26f0f.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Oleksii",
            "real_name": "Oleksii Shmalko",
            "display_name": "Oleksii Shmalko",
            "team": "T5TCAFTA9",
            "name": "rasen.dubi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601034603.006400",
        "parent_user_id": "UUQ2EQW21",
        "attachments": [
            {
                "service_name": "Zettlr",
                "title": "A Markdown Editor for the 21st Century - Zettlr",
                "title_link": "https:\/\/www.zettlr.com\/",
                "text": "A powerful Markdown editor for researchers and journalists.",
                "fallback": "Zettlr: A Markdown Editor for the 21st Century - Zettlr",
                "thumb_url": "https:\/\/zettlr.com\/storage\/app\/media\/img\/social_media_img.png",
                "from_url": "https:\/\/www.zettlr.com\/",
                "thumb_width": 1920,
                "thumb_height": 1080,
                "service_icon": "https:\/\/www.zettlr.com\/themes\/zettlr\/assets\/img\/256x256.png",
                "id": 1,
                "original_url": "https:\/\/www.zettlr.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oSpjq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is also "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.zettlr.com\/"
                            },
                            {
                                "type": "text",
                                "text": "\nHaven't tried it (and won't) but it's sitting in my bookmarks for a while."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1601188045.029500",
        "client_msg_id": "6bf97a52-4004-4132-8656-6567cbf84431",
        "text": "I'm not really following what you're suggesting. There are plenty of plugins for VS code that show a live webpage in one pane.\n\nThere are multiple reasons to use a simple webserver (which like 3 lines of code in node). If they used the files system then any 3rd party script loaded over the net would have access to their hard drive. Loading from the filesystem in a browser is just not something you should do. Further, many browser features are restricted to https only. And finally, often you want to run via some staging server because the simple case where everything can run from local files would be an exception for most actual usage.\n\nAs for bundling debugging tools into your own code, how does that have anything to do with VSC? If you want debugging tools compiled into your code you add them to your code no? For example if you want [spector.js](<https:\/\/spector.babylonjs.com\/>) added to your code then you add it to your code. (yes, it's presented as an extension on that page but if you read the docs you can just as easily use it as a library in your code without having an extension)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7",
        "attachments": [
            {
                "service_name": "Spector.js",
                "title": "Spector.js demos &amp; documentation",
                "title_link": "https:\/\/spector.babylonjs.com\/",
                "text": "SpectorJS is an Open source toolking helping to Explore and Troubleshoot your WebGL scenes with ease.",
                "fallback": "Spector.js: Spector.js demos &amp; documentation",
                "thumb_url": "http:\/\/spector.babylonjs.com\/assets\/spectorjs-512.png",
                "from_url": "https:\/\/spector.babylonjs.com\/",
                "thumb_width": 512,
                "thumb_height": 179,
                "service_icon": "https:\/\/spector.babylonjs.com\/img\/favicon\/apple-icon-57x57.png",
                "id": 1,
                "original_url": "https:\/\/spector.babylonjs.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zuG1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not really following what you're suggesting. There are plenty of plugins for VS code that show a live webpage in one pane.\n\nThere are multiple reasons to use a simple webserver (which like 3 lines of code in node). If they used the files system then any 3rd party script loaded over the net would have access to their hard drive. Loading from the filesystem in a browser is just not something you should do. Further, many browser features are restricted to https only. And finally, often you want to run via some staging server because the simple case where everything can run from local files would be an exception for most actual usage.\n\nAs for bundling debugging tools into your own code, how does that have anything to do with VSC? If you want debugging tools compiled into your code you add them to your code no? For example if you want [spector.js]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/spector.babylonjs.com\/"
                            },
                            {
                                "type": "text",
                                "text": ") added to your code then you add it to your code. (yes, it's presented as an extension on that page but if you read the docs you can just as easily use it as a library in your code without having an extension)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1601188256.030300",
        "client_msg_id": "f0b98816-d3f7-403c-866f-d5e343b21847",
        "text": "Saw this today. Not sure it's \"future\" of coding but I was still impressed.\n\n<https:\/\/wallabyjs.com\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601188256.030300",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1601201013.032000",
        "reply_users": [
            "UDQBTJ211"
        ],
        "replies": [
            {
                "user": "UDQBTJ211",
                "ts": "1601201013.032000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "Wallaby - Immediate JavaScript test feedback in your IDE as-you-type",
                "title_link": "https:\/\/wallabyjs.com\/",
                "text": "Wallaby runs your JavaScript and TypeScript tests immediately as you type in VS Code, WebStorm and other editors, highlighting results next to your code.",
                "fallback": "Wallaby - Immediate JavaScript test feedback in your IDE as-you-type",
                "from_url": "https:\/\/wallabyjs.com\/",
                "service_icon": "https:\/\/wallabyjs.com\/assets\/img\/favicon.ico?v=2",
                "service_name": "wallabyjs.com",
                "id": 1,
                "original_url": "https:\/\/wallabyjs.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "73J=F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Saw this today. Not sure it's \"future\" of coding but I was still impressed.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/wallabyjs.com\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDQBTJ211",
                    "UG0EL18H3",
                    "U0143PC0UTC"
                ],
                "count": 3
            }
        ]
    }
]