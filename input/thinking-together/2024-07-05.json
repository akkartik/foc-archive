[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1720163532.765739",
        "client_msg_id": "6ad7aabe-9fed-4c46-9f88-ab1adc3bbd66",
        "text": "A nice example is <https:\/\/www.gnu.org\/software\/dr-geo\/|DrGeo>. It has a long history (Wikipedia says 16 years), so I suspect there is a lot to be learned from its evolution over time.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720122655.200829",
        "parent_user_id": "U015S8EC3B5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lWdkS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A nice example is "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.gnu.org\/software\/dr-geo\/",
                                "text": "DrGeo"
                            },
                            {
                                "type": "text",
                                "text": ". It has a long history (Wikipedia says 16 years), so I suspect there is a lot to be learned from its evolution over time."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06E81J3U59",
        "type": "message",
        "ts": "1720166331.560469",
        "client_msg_id": "c13dfa7f-6499-4650-8987-7e19a6110bfb",
        "text": "I sum up what Jimmy said; it’s literally day-night when you migrate your stuff to a more concrete software use case than web development\n\nI honestly I’m this path as well so I’ll let you know as soon as I get a job on the field haha",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "60549fe39b71",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-01-17\/6484180892418_60549fe39b71fb86aadc_72.jpg",
            "first_name": "Ignacio",
            "real_name": "Ignacio Brasca",
            "display_name": "Ignacio Brasca",
            "team": "T5TCAFTA9",
            "name": "nanobrasca96",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720122992.895079",
        "parent_user_id": "U015S8EC3B5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2fdSp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I sum up what Jimmy said; it’s literally day-night when you migrate your stuff to a more concrete software use case than web development\n\nI honestly I’m this path as well so I’ll let you know as soon as I get a job on the field haha"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U067XHT91HV",
        "type": "message",
        "ts": "1720172705.036189",
        "client_msg_id": "0b74961a-3582-4f38-83ab-feb5bc2728a5",
        "text": "I think it's just naive to assume that you personally have to know\/arrive-at all the answers, and that you personally have to do all the work yourself. As you identified\/extracted as a problem from the manifestos. You may not subscribe\/agree with this problem, and be of the opinion that you can or should do everything yourself. Indeed, I too believe it's very hard if not impossible, I don't see why you would want to try nonetheless, instead of making it easier and cheaper and working together with other people, but to each their own.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "488abf9ee399",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-02\/6284140728162_488abf9ee399f7e43d8b_72.png",
            "first_name": "Stephan",
            "real_name": "Stephan Kreutzer",
            "display_name": "skreutzer",
            "team": "T5TCAFTA9",
            "name": "stephankreutzer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1717926129.937119",
        "parent_user_id": "U02JQA5FY5C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "onZkY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it's just naive to assume that you personally have to know\/arrive-at all the answers, and that you personally have to do all the work yourself. As you identified\/extracted as a problem from the manifestos. You may not subscribe\/agree with this problem, and be of the opinion that you can or should do everything yourself. Indeed, I too believe it's very hard if not impossible, I don't see why you would want to try nonetheless, instead of making it easier and cheaper and working together with other people, but to each their own."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U018S42NMMM",
        "type": "message",
        "ts": "1720185947.980639",
        "edited": {
            "user": "U018S42NMMM",
            "ts": "1720185963.000000"
        },
        "client_msg_id": "763905c9-0856-43ec-8797-ed1680f89f2d",
        "text": "<@U015S8EC3B5> Andy Matuschak has the most up to date ideas on imagining learning with today's tech. Worth checking out: <https:\/\/www.youtube.com\/live\/AZDX1Vv0HYc?feature=shared|https:\/\/www.youtube.com\/live\/AZDX1Vv0HYc?feature=shared>\n\nAlthough, as I pointed out to Andy as well, the biggest factor on effective learning for me trends to be map-making for a domain. Today's AIs are a bit hyperfocused on verbal learning, so new ideas are still needed.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "972d4c887a7c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-10\/4782052692709_972d4c887a7c689aae4a_72.jpg",
            "first_name": "",
            "real_name": "Nilesh Trivedi",
            "display_name": "Nilesh Trivedi",
            "team": "T5TCAFTA9",
            "name": "nilesh.tr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720122655.200829",
        "parent_user_id": "U015S8EC3B5",
        "attachments": [
            {
                "image_url": "https:\/\/i.ytimg.com\/vi\/AZDX1Vv0HYc\/maxresdefault.jpg",
                "image_width": 1280,
                "image_height": 720,
                "image_bytes": 191469,
                "from_url": "https:\/\/www.youtube.com\/live\/AZDX1Vv0HYc?feature=shared",
                "service_icon": "https:\/\/www.youtube.com\/s\/desktop\/1d05d8a6\/img\/favicon.ico",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/AZDX1Vv0HYc\/maxresdefault.jpg",
                "thumb_width": 1280,
                "thumb_height": 720,
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/live\/AZDX1Vv0HYc?feature=shared",
                "fallback": "YouTube: Design@Large Series: How Might We Learn?",
                "text": "About How Might We Learn?When people talk about the most rewarding, high-growth periods of their lives, a pattern emerges: they learned a lot, but learning w...",
                "title": "Design@Large Series: How Might We Learn?",
                "title_link": "https:\/\/www.youtube.com\/live\/AZDX1Vv0HYc?feature=shared",
                "service_name": "YouTube"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hZCpe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U015S8EC3B5"
                            },
                            {
                                "type": "text",
                                "text": " Andy Matuschak has the most up to date ideas on imagining learning with today's tech. Worth checking out: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/live\/AZDX1Vv0HYc?feature=shared",
                                "text": "https:\/\/www.youtube.com\/live\/AZDX1Vv0HYc?feature=shared"
                            },
                            {
                                "type": "text",
                                "text": "\n\nAlthough, as I pointed out to Andy as well, the biggest factor on effective learning for me trends to be map-making for a domain. Today's AIs are a bit hyperfocused on verbal learning, so new ideas are still needed."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1720186204.187029",
        "client_msg_id": "32b63108-713e-42da-a52b-90b37db64b76",
        "text": "I genuinely don't understand what you're disagreeing with me about, I just sense that you care very much about this disagreement. What should I be making easier and cheaper, how should I be working together with other people?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1717926129.937119",
        "parent_user_id": "U02JQA5FY5C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yzntt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I genuinely don't understand what you're disagreeing with me about, I just sense that you care very much about this disagreement. What should I be making easier and cheaper, how should I be working together with other people?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U067XHT91HV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1720190071.771209",
        "client_msg_id": "709bf8ef-9cfd-4194-a11c-1b635cfa8048",
        "text": "pond’ring aloud:\n\nThe value of Gutenberg’s printing press is that it taught kids to read, not to build printing presses.\n\nThe value of computers is that they teach kids to ???, not to write code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rJw6F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "pond’ring aloud:\n\nThe value of Gutenberg’s printing press is that it taught kids to read, not to build printing presses.\n\nThe value of computers is that they teach kids to ???, not to write code."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1720190169.723829",
        "client_msg_id": "dd3e5184-cced-4dc7-85c2-a7dd11880114",
        "text": "pond’ring aloud:\n\nI wonder if the problem with VPLs is the word “language”.\n\nIt appears to me that the word “programming” has been generally accepted to mean “sequential language” or writing sequential codes (aka “coding”). I view this view as being too restrictive. Programming is more than just commanding a machine with sequentialistic instructions. Programming a *CPU*, though, is - by definition - sequentialistic. But,,, programming a *machine(s)* need not be sequentialistic. Especially in the age of nothing-is-central. In fact, LLMs are an example of non-sequentialism. The machines that run LLMs were programmed, arduously, in sequential notation, but, the inner success of LLMs is not sequential, but something else (massively parallel plinko?).\n\nVPLs and DPLs are, to me, not sequentialistic things. Maybe they should be called “notations” instead of “languages”? VNP and DNP? Visual Notation for Programming, Diagrammatic Notation for Programming? [In which case, “programming languages” as we know them, are TNPs - Textual Notations for Programming].\n\nIn fact, programming is not the difficult part. Re-programming is the novel aspect of Design that computers bring to the world. We have been programming machines to do *single* things for centuries (using metal lathes, etc.). This time through, though, we have built machines capable of doing *many* things.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720190169.723829",
        "reply_count": 18,
        "reply_users_count": 7,
        "latest_reply": "1721081856.860579",
        "reply_users": [
            "U01E8D4TS7M",
            "UGWUJUZHT",
            "U5STGTB3J",
            "U0378MDUG1Y",
            "UJBAJNFLK",
            "U8A5MS6R1",
            "U05PY5AQCA2"
        ],
        "replies": [
            {
                "user": "U01E8D4TS7M",
                "ts": "1720190918.263649"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1720193960.291349"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1720194421.907399"
            },
            {
                "user": "U0378MDUG1Y",
                "ts": "1720195643.900529"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1720196529.056219"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1720199988.806949"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1720200523.635419"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1720267903.315089"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1720267956.233259"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1720276359.939919"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1720440733.921109"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1720463040.659099"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1720591252.750889"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1721078680.266679"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1721078763.811459"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1721079507.061979"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1721081811.975269"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1721081856.860579"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "koQJx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "pond’ring aloud:\n\nI wonder if the problem with VPLs is the word “language”.\n\nIt appears to me that the word “programming” has been generally accepted to mean “sequential language” or writing sequential codes (aka “coding”). I view this view as being too restrictive. Programming is more than just commanding a machine with sequentialistic instructions. Programming a "
                            },
                            {
                                "type": "text",
                                "text": "CPU",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", though, is - by definition - sequentialistic. But,,, programming a "
                            },
                            {
                                "type": "text",
                                "text": "machine(s)",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " need not be sequentialistic. Especially in the age of nothing-is-central. In fact, LLMs are an example of non-sequentialism. The machines that run LLMs were programmed, arduously, in sequential notation, but, the inner success of LLMs is not sequential, but something else (massively parallel plinko?).\n\nVPLs and DPLs are, to me, not sequentialistic things. Maybe they should be called “notations” instead of “languages”? VNP and DNP? Visual Notation for Programming, Diagrammatic Notation for Programming? [In which case, “programming languages” as we know them, are TNPs - Textual Notations for Programming].\n\nIn fact, programming is not the difficult part. Re-programming is the novel aspect of Design that computers bring to the world. We have been programming machines to do "
                            },
                            {
                                "type": "text",
                                "text": "single",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " things for centuries (using metal lathes, etc.). This time through, though, we have built machines capable of doing "
                            },
                            {
                                "type": "text",
                                "text": "many",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " things."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U015S8EC3B5"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01E8D4TS7M",
        "type": "message",
        "ts": "1720190748.763829",
        "edited": {
            "user": "U01E8D4TS7M",
            "ts": "1720207231.000000"
        },
        "client_msg_id": "f06d05eb-4baa-4d80-bb32-9ec2bd80f67d",
        "text": "Related to my last post, where I believe we shouldn’t make decisions outside the context of a problem or goal.\n\nI’ve observed the same issue with secondary goals, where they are discussed outside the context of primary goals.\n\nI don’t know if this bothers other people, but it bothers me a lot. Maybe I’m not smart enough to see the implied connections.\n\nOne example I can give is that many times I’ve been given the goal of “consistency,” whether in the UI or the code style. I’m not saying “consistency” is a bad thing, but without connecting it to the primary pre-shared goal, the value of this secondary goal becomes trivial and nullified. Logically, it doesn’t make sense either, especially for a start-up, because a start-up is doing something new, and you can’t do new things by pursuing consistency. If we did things consistently, we’d still be using XML instead of JSON.\n\nAgain, to be clear, I’m not saying doing things consistently is bad. I’m just saying that, for me, when given the goal of “consistency” without the context of why it’s important for our primary goal, I’d be much more motivated.\n\nAnother example is “patterns.” I think initially “patterns” are just solutions to some pre-existing problems, but we put too much emphasis on them to the point where we forget about the goals of these patterns, and the patterns themselves become the goal. To be clear, I’m not saying patterns are bad or that we shouldn’t use them. We should know them, in the same way we should know other just-in-case knowledge, to perform better. Some patterns are just cool, and we derive joy from them, the same way we get joy from movies and music. I’m just saying we probably shouldn’t treat them as primary goals (unless in school, I guess, where you get points for implementing a pattern).\n\nNow that I think about it, this may just be a communication issue within an organization, where secondary goals are communicated without the connection to primary goals. I’ve never worked in a big organization, and I wonder how they do it. Also, am I alone in this? Do other people feel demoralized too when given just a secondary goal?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4e5750bb485",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/4e5750bb485db473fc5fcaac227b78e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Shen Li",
            "display_name": "Shen Li",
            "team": "T5TCAFTA9",
            "name": "dustet",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720190748.763829",
        "reply_count": 11,
        "reply_users_count": 4,
        "latest_reply": "1720612017.333509",
        "reply_users": [
            "U015S8EC3B5",
            "U01E8D4TS7M",
            "UE1JQM9HQ",
            "U5STGTB3J"
        ],
        "replies": [
            {
                "user": "U015S8EC3B5",
                "ts": "1720234348.121089"
            },
            {
                "user": "U01E8D4TS7M",
                "ts": "1720237251.460149"
            },
            {
                "user": "U01E8D4TS7M",
                "ts": "1720237299.302229"
            },
            {
                "user": "U015S8EC3B5",
                "ts": "1720270105.891169"
            },
            {
                "user": "U01E8D4TS7M",
                "ts": "1720276183.362419"
            },
            {
                "user": "U01E8D4TS7M",
                "ts": "1720276195.138489"
            },
            {
                "user": "U015S8EC3B5",
                "ts": "1720297692.361069"
            },
            {
                "user": "U01E8D4TS7M",
                "ts": "1720300376.796119"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1720521690.905279"
            },
            {
                "user": "U01E8D4TS7M",
                "ts": "1720584555.786619"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1720612017.333509"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1SZ5T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Related to my last post, where I believe we shouldn’t make decisions outside the context of a problem or goal.\n\nI’ve observed the same issue with secondary goals, where they are discussed outside the context of primary goals.\n\nI don’t know if this bothers other people, but it bothers me a lot. Maybe I’m not smart enough to see the implied connections.\n\nOne example I can give is that many times I’ve been given the goal of “consistency,” whether in the UI or the code style. I’m not saying “consistency” is a bad thing, but without connecting it to the primary pre-shared goal, the value of this secondary goal becomes trivial and nullified. Logically, it doesn’t make sense either, especially for a start-up, because a start-up is doing something new, and you can’t do new things by pursuing consistency. If we did things consistently, we’d still be using XML instead of JSON.\n\nAgain, to be clear, I’m not saying doing things consistently is bad. I’m just saying that, for me, when given the goal of “consistency” without the context of why it’s important for our primary goal, I’d be much more motivated.\n\nAnother example is “patterns.” I think initially “patterns” are just solutions to some pre-existing problems, but we put too much emphasis on them to the point where we forget about the goals of these patterns, and the patterns themselves become the goal. To be clear, I’m not saying patterns are bad or that we shouldn’t use them. We should know them, in the same way we should know other just-in-case knowledge, to perform better. Some patterns are just cool, and we derive joy from them, the same way we get joy from movies and music. I’m just saying we probably shouldn’t treat them as primary goals (unless in school, I guess, where you get points for implementing a pattern).\n\nNow that I think about it, this may just be a communication issue within an organization, where secondary goals are communicated without the connection to primary goals. I’ve never worked in a big organization, and I wonder how they do it. Also, am I alone in this? Do other people feel demoralized too when given just a secondary goal?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "U04E5QAD6DD",
                    "U023V63MF6V",
                    "U05UK5T7LPP"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U01E8D4TS7M",
        "type": "message",
        "ts": "1720190918.263649",
        "client_msg_id": "06c8550e-16bb-4464-addc-416cc4b72ff7",
        "text": "On one end of the spectrum we have dumb machines, where we use “language” to make it do things, on the other end of the spectrum, we have human beings, we use “X” to make them do things. I think we need to find a word between “language” and “X”",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4e5750bb485",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/4e5750bb485db473fc5fcaac227b78e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Shen Li",
            "display_name": "Shen Li",
            "team": "T5TCAFTA9",
            "name": "dustet",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q2DI\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On one end of the spectrum we have dumb machines, where we use “language” to make it do things, on the other end of the spectrum, we have human beings, we use “X” to make them do things. I think we need to find a word between “language” and “X”"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1720193960.291349",
        "client_msg_id": "1f99ffd6-4574-4de1-a39e-2cf2facc502f",
        "text": "observation: Electrical Engineers create 2 manifestations of each circuit. (1) is the circuit itself and (2) a schematic on paper for other Engineers to read. You can understand (1), but you have to spend time to reverse-engineer what’s there. #2 is (usually) more useful in communicating to other Engineers what is going on, without needing them to reverse engineer the actual circuit #1. You still have to spend a few years in university to understand #2, but, once you learn how to read #2, you can devise circuits and show other Engineers what you intended to accomplish. Likewise, Structural Engineers build bridges with bolts and I-beams, and built human-understandable drawings using blueprints. Programmers are trying to squeeze both #1 and #2 into the same notation. AFAICT, concern #1 usually wins and programmers have to spend time reverse-engineering code, since #2 doesn’t exist. In programming, programmers *should* be able to create #1 from #2, but, instead programmers create #1 from #1 and leave #2 mostly unaddressed.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7yddY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "observation: Electrical Engineers create 2 manifestations of each circuit. (1) is the circuit itself and (2) a schematic on paper for other Engineers to read. You can understand (1), but you have to spend time to reverse-engineer what’s there. #2 is (usually) more useful in communicating to other Engineers what is going on, without needing them to reverse engineer the actual circuit #1. You still have to spend a few years in university to understand #2, but, once you learn how to read #2, you can devise circuits and show other Engineers what you intended to accomplish. Likewise, Structural Engineers build bridges with bolts and I-beams, and built human-understandable drawings using blueprints. Programmers are trying to squeeze both #1 and #2 into the same notation. AFAICT, concern #1 usually wins and programmers have to spend time reverse-engineering code, since #2 doesn’t exist. In programming, programmers "
                            },
                            {
                                "type": "text",
                                "text": "should",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " be able to create #1 from #2, but, instead programmers create #1 from #1 and leave #2 mostly unaddressed."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1720194421.907399",
        "client_msg_id": "a56c0c1d-029f-41c6-83a4-0fb181a057cf",
        "text": "<@UGWUJUZHT> Programmers squeeze #1 and #2 together, only if you consider the code to be the product. However, what if you consider the (running) program the actual product? Wouldn’t that put programmers back in line with electrical and structural engineers?\n\nA schematic or a blueprint are a state description optimized for legibility, so there is complexity missing, which is present in the instantiation of the schematic or blueprint in the real world. I believe the same could be said about the process description of an algorithm, which leaves out the actual values that are processed when the program runs.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CqOQV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " Programmers squeeze #1 and #2 together, only if you consider the code to be the product. However, what if you consider the (running) program the actual product? Wouldn’t that put programmers back in line with electrical and structural engineers?\n\nA schematic or a blueprint are a state description optimized for legibility, so there is complexity missing, which is present in the instantiation of the schematic or blueprint in the real world. I believe the same could be said about the process description of an algorithm, which leaves out the actual values that are processed when the program runs."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "<@UGWUJUZHT> love your thoughts here! I try to use “notation” (or “executable notation”) as a replacement for “programming language” these days. It’s more inclusive to non-textual programming languages and alternative paradigms of computing. \n\nYou might also like “diagrammatic” from <https:\/\/github.com\/Little-Languages\/reading-club\/blob\/main\/topics\/visual%20notation%20and%20diagrams\/Trace%2C%20Writing%2C%20Diagram-%20Reflections%20on%20Spatiality%2C%20Intuition%2C%20Graphical%20Practices%20and%20Thinking.pdf|https:\/\/github.com\/Little-Languages\/reading-club\/blob\/main\/topics\/visual%20notation%20and%20diagrams\/Trace%2C%20Writing%2C%20Diagram-%20Reflections%20on%20Spatiality%2C%20Intuition%2C%20Graphical%20Practices%20and%20Thinking.pdf>\n\n",
        "files": [
            {
                "id": "F07BWKHLHGQ",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U0378MDUG1Y",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iTZVT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " love your thoughts here! I try to use “notation” (or “executable notation”) as a replacement for “programming language” these days. It’s more inclusive to non-textual programming languages and alternative paradigms of computing. \n\nYou might also like “diagrammatic” from "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/Little-Languages\/reading-club\/blob\/main\/topics\/visual%20notation%20and%20diagrams\/Trace%2C%20Writing%2C%20Diagram-%20Reflections%20on%20Spatiality%2C%20Intuition%2C%20Graphical%20Practices%20and%20Thinking.pdf",
                                "text": "https:\/\/github.com\/Little-Languages\/reading-club\/blob\/main\/topics\/visual%20notation%20and%20diagrams\/Trace%2C%20Writing%2C%20Diagram-%20Reflections%20on%20Spatiality%2C%20Intuition%2C%20Graphical%20Practices%20and%20Thinking.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1720195643.900529",
        "edited": {
            "user": "U0378MDUG1Y",
            "ts": "1720196460.000000"
        },
        "client_msg_id": "E8284B98-5BA9-4766-85B7-410496B694D6",
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1720196529.056219",
        "client_msg_id": "9394cbbc-87c6-410d-b7a5-0c6796de6190",
        "text": "<@U5STGTB3J>  Good point. In reading your reply, I begin to wonder if there’s something between #1 and #2 (#1.5?) in software that isn’t there in other kinds of engineering. I don’t think that programmers are doing a good job of communicating to other programmers what their Design Intent (DI) is…",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y0560",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": "  Good point. In reading your reply, I begin to wonder if there’s something between #1 and #2 (#1.5?) in software that isn’t there in other kinds of engineering. I don’t think that programmers are doing a good job of communicating to other programmers what their Design Intent (DI) is…"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1720199988.806949",
        "client_msg_id": "51a9e255-3a9d-46eb-b250-3ae30ab8831b",
        "text": "The closest to a design intent would be a formal specification.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yYfVQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The closest to a design intent would be a formal specification."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1720200523.635419",
        "client_msg_id": "2a636f21-bfff-46a8-b9b8-62d76bc848d9",
        "text": "<@UGWUJUZHT> The only difference I see between electrical\/structural engineers and programmers in this example is that the former create _state_ descriptions (blueprints), whereas the latter create _process_ descriptions (recipes).\n• _State_ descriptions are _declarative_ and describe the _spatial structure_ of the result.\n• _Process_ descriptions are _imperative_ and describe the _temporal behavior_ of how to _generate_ a result.\nBut both are generalizable in the sense that they are both abstract descriptions, leaving out detail.\n\nI suspect what makes them feel qualitatively different is the cross-over from temporal to spatial domain in one that’s missing in the other. When programmers have to inspect the actual result — the running program in a debugger that makes state visible — then they “have arrived” on the same level the electrical\/structural engineers operate at. But usually programmers describe the thing that “builds” the thing, whereas engineers build the thing. (Which is why I asked previously _<https:\/\/stefanlesser.substack.com\/p\/to-build-or-not-to-build|To build or not to build?>_)\n\n“But what about _declarative_ programming languages?”\nWhile they tend to describe results and are less concerned about the process, they are still ultimately generative — they generate a result from specific input (functional programming) or from axioms (logical programming).\n\n_(I’m just thinking out loud because I just read_ <https:\/\/curtclifton.net\/papers\/MoseleyMarks06a.pdf|Out of the Tar Pit> _again and thought I try applying what I learned…)_",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sJC0r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " The only difference I see between electrical\/structural engineers and programmers in this example is that the former create "
                            },
                            {
                                "type": "text",
                                "text": "state",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " descriptions (blueprints), whereas the latter create "
                            },
                            {
                                "type": "text",
                                "text": "process",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " descriptions (recipes).\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "State",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " descriptions are "
                                    },
                                    {
                                        "type": "text",
                                        "text": "declarative",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " and describe the "
                                    },
                                    {
                                        "type": "text",
                                        "text": "spatial structure",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " of the result."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Process",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " descriptions are "
                                    },
                                    {
                                        "type": "text",
                                        "text": "imperative",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " and describe the "
                                    },
                                    {
                                        "type": "text",
                                        "text": "temporal behavior",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " of how to "
                                    },
                                    {
                                        "type": "text",
                                        "text": "generate",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " a result."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But both are generalizable in the sense that they are both abstract descriptions, leaving out detail.\n\nI suspect what makes them feel qualitatively different is the cross-over from temporal to spatial domain in one that’s missing in the other. When programmers have to inspect the actual result — the running program in a debugger that makes state visible — then they “have arrived” on the same level the electrical\/structural engineers operate at. But usually programmers describe the thing that “builds” the thing, whereas engineers build the thing. (Which is why I asked previously "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/stefanlesser.substack.com\/p\/to-build-or-not-to-build",
                                "text": "To build or not to build?",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ")\n\n“But what about "
                            },
                            {
                                "type": "text",
                                "text": "declarative",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " programming languages?”\nWhile they tend to describe results and are less concerned about the process, they are still ultimately generative — they generate a result from specific input (functional programming) or from axioms (logical programming).\n\n"
                            },
                            {
                                "type": "text",
                                "text": "(I’m just thinking out loud because I just read ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/curtclifton.net\/papers\/MoseleyMarks06a.pdf",
                                "text": "Out of the Tar Pit"
                            },
                            {
                                "type": "text",
                                "text": " again and thought I try applying what I learned…)",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01AD80KMLK",
        "type": "message",
        "ts": "1720210855.256309",
        "client_msg_id": "4fdbfd70-cec1-4ade-954a-5d7f3b305958",
        "text": "The divisibility rule of 3 really is super cool, though.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a07cdcb6d037",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-09\/1376906509376_a07cdcb6d037bf7b6a5e_72.jpg",
            "first_name": "",
            "real_name": "Denny Vrandečić",
            "display_name": "Denny Vrandečić",
            "team": "T5TCAFTA9",
            "name": "dvrandecic",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720106530.904589",
        "parent_user_id": "U01E8D4TS7M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6B0vv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The divisibility rule of 3 really is super cool, though."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01AD80KMLK",
        "type": "message",
        "ts": "1720211167.847499",
        "client_msg_id": "f2d761c6-9357-4475-a751-e6d0f0486e39",
        "text": "You might find our work on Wikifunctions interesting (<https:\/\/dl.acm.org\/doi\/pdf\/10.1145\/3425778|CACM paper>, <https:\/\/www.wikifunctions.org\/wiki\/Wikifunctions:Main_Page|website>). I'd be happy to chat more about it. I can't really put my finger on it, on the exact phrasing, but our believe is that \"functions are knowledge\" and that making functions available to everyone and to allow everyone to share and collaborate on functions, can make a difference. But we don't have a good way to phrase that yet.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a07cdcb6d037",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-09\/1376906509376_a07cdcb6d037bf7b6a5e_72.jpg",
            "first_name": "",
            "real_name": "Denny Vrandečić",
            "display_name": "Denny Vrandečić",
            "team": "T5TCAFTA9",
            "name": "dvrandecic",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720122655.200829",
        "parent_user_id": "U015S8EC3B5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XGYKI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You might find our work on Wikifunctions interesting ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/dl.acm.org\/doi\/pdf\/10.1145\/3425778",
                                "text": "CACM paper"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.wikifunctions.org\/wiki\/Wikifunctions:Main_Page",
                                "text": "website"
                            },
                            {
                                "type": "text",
                                "text": "). I'd be happy to chat more about it. I can't really put my finger on it, on the exact phrasing, but our believe is that \"functions are knowledge\" and that making functions available to everyone and to allow everyone to share and collaborate on functions, can make a difference. But we don't have a good way to phrase that yet."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01E8D4TS7M",
        "type": "message",
        "ts": "1720212473.896199",
        "client_msg_id": "27d49c43-63c8-41f3-b770-408ae26b0a30",
        "text": "<@U01AD80KMLK> yup!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4e5750bb485",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/4e5750bb485db473fc5fcaac227b78e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Shen Li",
            "display_name": "Shen Li",
            "team": "T5TCAFTA9",
            "name": "dustet",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720106530.904589",
        "parent_user_id": "U01E8D4TS7M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t+SeN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01AD80KMLK"
                            },
                            {
                                "type": "text",
                                "text": " yup!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U015S8EC3B5",
        "type": "message",
        "ts": "1720234348.121089",
        "client_msg_id": "45f401f6-7bf0-40a1-93a6-6c20f0609dde",
        "text": "I get demoralized too. What usually happens is I start asking questions like \"consistent with what?\" Then I don't get a satisfying answer, I realize people setting the goals have no idea what they're doing, and my mood spirals downward from there.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2b0c9ae6f1d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2b0c9ae6f1da9716451e7c86bc87230b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "",
            "real_name": "Eric Normand",
            "display_name": "Eric Normand",
            "team": "T5TCAFTA9",
            "name": "ericwnormand",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720190748.763829",
        "parent_user_id": "U01E8D4TS7M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YlR3C",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I get demoralized too. What usually happens is I start asking questions like \"consistent with what?\" Then I don't get a satisfying answer, I realize people setting the goals have no idea what they're doing, and my mood spirals downward from there."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01E8D4TS7M",
        "type": "message",
        "ts": "1720237251.460149",
        "client_msg_id": "a9793a49-65d1-464d-b032-4526df8f7268",
        "text": "<@U015S8EC3B5> I hear you bro. How do you cope?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4e5750bb485",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/4e5750bb485db473fc5fcaac227b78e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Shen Li",
            "display_name": "Shen Li",
            "team": "T5TCAFTA9",
            "name": "dustet",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720190748.763829",
        "parent_user_id": "U01E8D4TS7M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bZh3Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U015S8EC3B5"
                            },
                            {
                                "type": "text",
                                "text": " I hear you bro. How do you cope?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01E8D4TS7M",
        "type": "message",
        "ts": "1720237299.302229",
        "client_msg_id": "fab896c7-e98d-4e1b-91f2-649800b84092",
        "text": "I’m taking unpaid time off right now and taking to therapist. To be fair I have more struggles than this, and a lot of the struggles I have is from myself",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4e5750bb485",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/4e5750bb485db473fc5fcaac227b78e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Shen Li",
            "display_name": "Shen Li",
            "team": "T5TCAFTA9",
            "name": "dustet",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720190748.763829",
        "parent_user_id": "U01E8D4TS7M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i9lms",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m taking unpaid time off right now and taking to therapist. To be fair I have more struggles than this, and a lot of the struggles I have is from myself"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]