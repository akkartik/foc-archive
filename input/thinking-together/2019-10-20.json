[
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1571555308.070000",
        "client_msg_id": "9483cb4c-06d5-4fe0-a130-264604709b2f",
        "text": "And to be clear: I don't promote web standards based on the way they were designed and their pro and cons as technologies, but as a plateform that is everywhere and that won't be thrown away soon. I am confident that what I will build on it will be available to a maximum of people and for a long time. A don't see any other plateform with this property. And, for me, this property is very desirable for building tools for FoC that can be used. Sidenote: I am on the \"denerding side\" of Foc, I want to build a future of programming that first targets end-user programming, so you understand why I am seduced by the ubiquity of the web plateform.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570632039.005300",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KfB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And to be clear: I don't promote web standards based on the way they were designed and their pro and cons as technologies, but as a plateform that is everywhere and that won't be thrown away soon. I am confident that what I will build on it will be available to a maximum of people and for a long time. A don't see any other plateform with this property. And, for me, this property is very desirable for building tools for FoC that can be used. Sidenote: I am on the \"denerding side\" of Foc, I want to build a future of programming that first targets end-user programming, so you understand why I am seduced by the ubiquity of the web plateform."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1571555929.073200",
        "client_msg_id": "58BF4A16-6A66-4D59-AB8B-5332D228E547",
        "text": "<@UJ6LDMMN0> <@ULM3U6275> You can always add a layer of abstraction, but that’s one more layer to maintain. Ideally, for a project running for ten years, you want dependencies to be stable over ten years. Can you imagine working with 2009’s Web tech today?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570632039.005300",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zpVzM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJ6LDMMN0"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "ULM3U6275"
                            },
                            {
                                "type": "text",
                                "text": " You can always add a layer of abstraction, but that’s one more layer to maintain. Ideally, for a project running for ten years, you want dependencies to be stable over ten years. Can you imagine working with 2009’s Web tech today?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1571556130.076600",
        "client_msg_id": "EBE465CD-B197-48E5-AEDE-A4683F06471A",
        "text": "As for UI, you can indeed reimplement the wheel inside a page, but you are still limited by the browser whose GUI is designed for... browsing. Try to do elaborate key event handling. for example. Try simply redefining Ctrl-T. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570632039.005300",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dZ26",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As for UI, you can indeed reimplement the wheel inside a page, but you are still limited by the browser whose GUI is designed for... browsing. Try to do elaborate key event handling. for example. Try simply redefining Ctrl-T."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726",
                    "UA14TGLTC",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1571561917.076900",
        "client_msg_id": "88eb7651-c42f-400e-bdeb-7357739225cb",
        "text": "(developers: <@UJBAJNFLK> was just giving an example, _please_ don't actually redefine any of my keystrokes or mouse actions, thanks)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570632039.005300",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RPN3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(developers: "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " was just giving an example, "
                            },
                            {
                                "type": "text",
                                "text": "please",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " don't actually redefine any of my keystrokes or mouse actions, thanks)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "laughing",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1571573728.077100",
        "edited": {
            "user": "UCKRZS3DZ",
            "ts": "1571574296.000000"
        },
        "client_msg_id": "a3ad1e03-b456-47c3-a87f-238136630c1a",
        "text": "<@UL3CJ7YKC> What you describing looks a lot like multidispatch methods in Common Lisp.\n\nYou would have method 'set', that is dispatched over both 'a' and 'A'.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6aY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UL3CJ7YKC"
                            },
                            {
                                "type": "text",
                                "text": " What you describing looks a lot like multidispatch methods in Common Lisp.\n\nYou would have method 'set', that is dispatched over both 'a' and 'A'."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1571574014.079800",
        "client_msg_id": "8A887660-2B89-4C84-886F-464148F20803",
        "text": "<@UCKRZS3DZ> Ah great! Thanks that is a great insight! Years before at collage I did not understand that feature, we did not learn lisp. Now I am! Do you have any other related insights?:) ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TIM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCKRZS3DZ"
                            },
                            {
                                "type": "text",
                                "text": " Ah great! Thanks that is a great insight! Years before at collage I did not understand that feature, we did not learn lisp. Now I am! Do you have any other related insights?:)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1571574276.080000",
        "client_msg_id": "61ddbb77-5d31-4107-b987-81b3eb63ce21",
        "text": "<@UL3CJ7YKC> You're welcome) I am not sure what insights are related. Actually I don't understand exactly why you want this feature in the first place. I got from your post, that it makes renaming of the terms easier. Any other reasons?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lHp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UL3CJ7YKC"
                            },
                            {
                                "type": "text",
                                "text": " You're welcome) I am not sure what insights are related. Actually I don't understand exactly why you want this feature in the first place. I got from your post, that it makes renaming of the terms easier. Any other reasons?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1571575977.081000",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1571576043.000000"
        },
        "client_msg_id": "75A05465-D971-4587-8694-5F357D7B1750",
        "text": "It's a huge one. I am fed up with search and replaces :) it prevents me to refactor other things easily which involves renaming.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QjebP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's a huge one. I am fed up with search and replaces :) it prevents me to refactor other things easily which involves renaming."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1571577028.081400",
        "client_msg_id": "f9524d59-4013-45bf-9bd1-9bba0459bf8f",
        "text": "I see",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oVs3z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I see"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1571578109.088500",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1571595693.000000"
        },
        "client_msg_id": "42C8A46C-21AA-424B-AE1B-8234565E6800",
        "text": "<@UJBAJNFLK> If your concern is a project running for a long time, I can still run the first web page I made in the 1990s and it works the same and everyone can still use it, even on platforms that didn’t exist at the time like smartphones. Can you still run 32bit desktop apps compiled for whatever version of the OS you were using in the 1990s? Many of the OSes I used at the time (Irix, HP\/UX, SunOS, NeXTstep) have been discontinued. If you want to reinvent a sandboxed, cross platform environment that’s open, crazy fast, has advanced text rendering, and runs everywhere, that’s cool - it’s something I’d like to see done and I’d definitely take a look at it if\/when it’s ready, but until then I’ll use the one that already exists.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570632039.005300",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4Z66J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " If your concern is a project running for a long time, I can still run the first web page I made in the 1990s and it works the same and everyone can still use it, even on platforms that didn’t exist at the time like smartphones. Can you still run 32bit desktop apps compiled for whatever version of the OS you were using in the 1990s? Many of the OSes I used at the time (Irix, HP\/UX, SunOS, NeXTstep) have been discontinued. If you want to reinvent a sandboxed, cross platform environment that’s open, crazy fast, has advanced text rendering, and runs everywhere, that’s cool - it’s something I’d like to see done and I’d definitely take a look at it if\/when it’s ready, but until then I’ll use the one that already exists."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "ok_hand",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36",
                    "UA14TGLTC",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1571582795.089100",
        "client_msg_id": "f114d68f-1749-4f17-99b6-8433915bc2a0",
        "text": "I'll just throw this link here: <http:\/\/canonical.org\/~kragen\/eotf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570632039.005300",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tFYZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'll just throw this link here: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/canonical.org\/~kragen\/eotf"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1571597965.090300",
        "client_msg_id": "5a53650d-689a-4679-a25f-d63af294e78b",
        "text": "<@UL3CJ7YKC> do you use strongly typed languages with good refactoring tools? TypeScript and C# in VS (and Sublime Text) have great project wide intelligent \"Rename\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z5tf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UL3CJ7YKC"
                            },
                            {
                                "type": "text",
                                "text": " do you use strongly typed languages with good refactoring tools? TypeScript and C# in VS (and Sublime Text) have great project wide intelligent \"Rename\"."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1571601162.093000",
        "client_msg_id": "9D4278B9-C98A-4563-A82D-7EB22E6F0040",
        "text": "Yes sure, I use Webstorm which has the best such feature I think.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WVPfU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes sure, I use Webstorm which has the best such feature I think."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1571601398.096500",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1571601447.000000"
        },
        "client_msg_id": "701E3A42-D4D6-4378-AAE3-B8768295C4C6",
        "text": "<@UAVCC2X70> yes exactly as you described. And its not done yet.... :exploding_head:\n\nEspecially awful when I want to change a database table name *because the software itself and the meanings evolve(!)*, but I don't have the courage, because god knows what breaks. \n\nBut for that we have migration at least. But for Foo - FooFactory - SetFoo we have nothing :D",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RDo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": " yes exactly as you described. And its not done yet.... "
                            },
                            {
                                "type": "emoji",
                                "name": "exploding_head",
                                "unicode": "1f92f"
                            },
                            {
                                "type": "text",
                                "text": "\n\nEspecially awful when I want to change a database table name "
                            },
                            {
                                "type": "text",
                                "text": "because the software itself and the meanings evolve(!)",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but I don't have the courage, because god knows what breaks. \n\nBut for that we have migration at least. But for Foo - FooFactory - SetFoo we have nothing :D"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBRKVHMCL",
        "type": "message",
        "ts": "1571605421.098500",
        "edited": {
            "user": "UBRKVHMCL",
            "ts": "1571606151.000000"
        },
        "client_msg_id": "F1518BFD-8E04-4E15-BCB0-1D0B444CDE38",
        "text": "Unison language can do this AFAIK. This is more of a traditional AST-rewriting approach (not “function names = data”), but Mesh Spreadsheet also lets you just type over an existing name and have it update all places it’s referenced. See near the end of the video here: <https:\/\/m.youtube.com\/watch?v=_U6gE3cNgbI>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g6b404ba64c8",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/86b404ba64c84041168e5b10b7148030.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "Chris Pearson",
            "display_name": "chrispsn",
            "team": "T5TCAFTA9",
            "name": "chrispsn",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Mesh Spreadsheet - alpha demo 2019-10-11 (part 1: basics, tables, functions, naming cells)",
                "title_link": "https:\/\/m.youtube.com\/watch?v=_U6gE3cNgbI",
                "author_name": "Chris Pearson",
                "author_link": "https:\/\/www.youtube.com\/user\/chrispysd",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/_U6gE3cNgbI\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Mesh Spreadsheet - alpha demo 2019-10-11 (part 1: basics, tables, functions, naming cells)",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/_U6gE3cNgbI?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/m.youtube.com\/watch?v=_U6gE3cNgbI",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/m.youtube.com\/watch?v=_U6gE3cNgbI"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8d4q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Unison language can do this AFAIK. This is more of a traditional AST-rewriting approach (not “function names = data”), but Mesh Spreadsheet also lets you just type over an existing name and have it update all places it’s referenced. See near the end of the video here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/m.youtube.com\/watch?v=_U6gE3cNgbI"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UL3CJ7YKC",
                    "UNCP67JSK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1571613969.099000",
        "client_msg_id": "f28afde1-c3e2-4fcf-aa4d-e6438b68cf64",
        "text": "You could try LuaLaTeX, which is LaTeX extended with the Lua scripting language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571522910.064800",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z6Jq6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You could try LuaLaTeX, which is LaTeX extended with the Lua scripting language."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP6G25H35",
        "type": "message",
        "ts": "1571617516.099200",
        "client_msg_id": "96a4c809-c447-4452-8cfc-6548570e1632",
        "text": "What is the use case for this?\n\nNot sure if this helps you at all, there is a spreadsheet with a bit more power here: <https:\/\/github.com\/audreyt\/ethercalc>\nIt is opensource, multiuser, has most of the main formulas , even things like dget. I added GUI functions to it, such as buttons and input boxes, so you can build a UI.\n\nAnyway... am interested in use cases. If you know of good use cases, I would like to know.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "57dceb337de9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-12\/870368572213_57dceb337de9d471d315_72.jpg",
            "first_name": "Eddy",
            "real_name": "Eddy Parkinson",
            "display_name": "Eddy Parkinson",
            "team": "T5TCAFTA9",
            "name": "eddyparkinson",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561063200.049600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CSK0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What is the use case for this?\n\nNot sure if this helps you at all, there is a spreadsheet with a bit more power here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/audreyt\/ethercalc"
                            },
                            {
                                "type": "text",
                                "text": "\nIt is opensource, multiuser, has most of the main formulas , even things like dget. I added GUI functions to it, such as buttons and input boxes, so you can build a UI.\n\nAnyway... am interested in use cases. If you know of good use cases, I would like to know."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP6G25H35",
        "type": "message",
        "ts": "1571617630.099400",
        "client_msg_id": "e4558c8a-60ee-4afa-8f30-051813c2b3e1",
        "text": "So I did try it, this video was maybe best <https:\/\/www.youtube.com\/watch?v=x32tBLGrLAQ&amp;list=PLf1PDMa3qVP27-oVMEdCX6FR1Ok972cpI&amp;index=2> as could not figure out much from the git hub page. ... the git hub pages wants more example sheets. e.g. how you do a sum would be good.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "57dceb337de9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-12\/870368572213_57dceb337de9d471d315_72.jpg",
            "first_name": "Eddy",
            "real_name": "Eddy Parkinson",
            "display_name": "Eddy Parkinson",
            "team": "T5TCAFTA9",
            "name": "eddyparkinson",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561063200.049600",
        "parent_user_id": "UHWC9PXBL",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Mesh Spreadsheet - alpha demo 2019-10-11 (part 2: tables)",
                "title_link": "https:\/\/www.youtube.com\/watch?v=x32tBLGrLAQ&amp;index=2",
                "author_name": "Chris Pearson",
                "author_link": "https:\/\/www.youtube.com\/user\/chrispysd",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/x32tBLGrLAQ\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Mesh Spreadsheet - alpha demo 2019-10-11 (part 2: tables)",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/x32tBLGrLAQ?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=x32tBLGrLAQ&amp;index=2",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=x32tBLGrLAQ&amp;list=PLf1PDMa3qVP27-oVMEdCX6FR1Ok972cpI&amp;index=2"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Er0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So I did try it, this video was maybe best "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=x32tBLGrLAQ&amp;list=PLf1PDMa3qVP27-oVMEdCX6FR1Ok972cpI&amp;index=2",
                                "text": "https:\/\/www.youtube.com\/watch?v=x32tBLGrLAQ&list=PLf1PDMa3qVP27-oVMEdCX6FR1Ok972cpI&index=2"
                            },
                            {
                                "type": "text",
                                "text": " as could not figure out much from the git hub page. ... the git hub pages wants more example sheets. e.g. how you do a sum would be good."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1571620575.099700",
        "client_msg_id": "44a6cea1-f4e5-40ff-84b2-862608bfd7ad",
        "text": "<@UCUSW7WVD> Or there's CollapseOS, for an alternative vision of post civilization collapse computing (<http:\/\/collapseos.org|collapseos.org>). But the Long Now Foundation is my go-to for this sort of long term thinking. Kragen considers an artifact that is durable and reliable enough to stay in working order for an extremely long time, without maintenance. Consider instead a very long lived institution that preserves and maintains the technology. Like the European monasteries that preserved knowledge during the dark ages, the Church that ran 200 year cathedral building programs, or the Ise Shrine in Japan, which has been rebuilt every 20 years in adjacent sites for over 1,400 years.  <https:\/\/blog.longnow.org\/02019\/09\/11\/long-term-building-in-japan\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570632039.005300",
        "parent_user_id": "U5TCAFTD3",
        "attachments": [
            {
                "service_name": "Blog of the Long Now",
                "title": "Long-term Building in Japan",
                "title_link": "https:\/\/blog.longnow.org\/02019\/09\/11\/long-term-building-in-japan\/",
                "text": "When I started working with Stewart Brand over two decades ago, he told me about the ideas behind Long Now, and how we might build the seed for a very long-lived institution. . . Read More",
                "fallback": "Blog of the Long Now: Long-term Building in Japan",
                "image_url": "https:\/\/cdn-images-1.medium.com\/max\/2560\/1*JsFe3-EsJEK5pi_gQCYNvA.jpeg",
                "ts": 1568194988,
                "from_url": "https:\/\/blog.longnow.org\/02019\/09\/11\/long-term-building-in-japan\/",
                "image_width": 375,
                "image_height": 250,
                "image_bytes": 1037399,
                "service_icon": "https:\/\/blog-cdn.longnow.org\/wp-content\/themes\/bristle-redux\/img\/favicon.png",
                "id": 1,
                "original_url": "https:\/\/blog.longnow.org\/02019\/09\/11\/long-term-building-in-japan\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FmY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Or there's CollapseOS, for an alternative vision of post civilization collapse computing ("
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/collapseos.org",
                                "text": "collapseos.org"
                            },
                            {
                                "type": "text",
                                "text": "). But the Long Now Foundation is my go-to for this sort of long term thinking. Kragen considers an artifact that is durable and reliable enough to stay in working order for an extremely long time, without maintenance. Consider instead a very long lived institution that preserves and maintains the technology. Like the European monasteries that preserved knowledge during the dark ages, the Church that ran 200 year cathedral building programs, or the Ise Shrine in Japan, which has been rebuilt every 20 years in adjacent sites for over 1,400 years.  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/blog.longnow.org\/02019\/09\/11\/long-term-building-in-japan\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            },
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1571627838.103600",
        "client_msg_id": "A51D5498-90B7-4A14-993D-A2A66FAA0BFD",
        "text": "Good point <@UMXUZ97LJ> how the undo command often groups multiple actions together.  Text editors are also complicated by per file undo stacks coupled with cross file operations like find and replace.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571417532.010400",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GSH0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good point "
                            },
                            {
                                "type": "user",
                                "user_id": "UMXUZ97LJ"
                            },
                            {
                                "type": "text",
                                "text": " how the undo command often groups multiple actions together.  Text editors are also complicated by per file undo stacks coupled with cross file operations like find and replace."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1571632280.105300",
        "client_msg_id": "7A44F8E7-0E93-4C54-916C-5BDA2A91D9AF",
        "text": "great to see that you’re still working on this <@UBRKVHMCL> will play with it more tomorrow",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561063200.049600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9sJG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "great to see that you’re still working on this "
                            },
                            {
                                "type": "user",
                                "user_id": "UBRKVHMCL"
                            },
                            {
                                "type": "text",
                                "text": " will play with it more tomorrow"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1571636768.105500",
        "client_msg_id": "8acfaeaa-ffd9-4c89-aa97-209262e09af7",
        "text": "There are many aspects to computing over longer time scales. One is preserving a full system, as in the link given by <@UCUSW7WVD>. A similar idea but for software only is proposed in <https:\/\/doi.org\/10.1145\/2814228.2814250>. Keeping archived apps or Web pages usable (as referred to by <@ULM3U6275>) is a much more widely shared concern. What I referred to is yet something else: continued development over many years. Archived tools are not sufficient for that. As development goes on, you want to add new developers, new dependencies, perhaps new development tools. This requires a whole ecosystem and a whole community that values stability. Real-life example are Java\/JVM, Emacs, or Common Lisp. In either one you can pick up code that was last modified five years ago and continue to work on it without feeling like you are doing archeology.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570632039.005300",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vRvv=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are many aspects to computing over longer time scales. One is preserving a full system, as in the link given by "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": ". A similar idea but for software only is proposed in "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/doi.org\/10.1145\/2814228.2814250"
                            },
                            {
                                "type": "text",
                                "text": ". Keeping archived apps or Web pages usable (as referred to by "
                            },
                            {
                                "type": "user",
                                "user_id": "ULM3U6275"
                            },
                            {
                                "type": "text",
                                "text": ") is a much more widely shared concern. What I referred to is yet something else: continued development over many years. Archived tools are not sufficient for that. As development goes on, you want to add new developers, new dependencies, perhaps new development tools. This requires a whole ecosystem and a whole community that values stability. Real-life example are Java\/JVM, Emacs, or Common Lisp. In either one you can pick up code that was last modified five years ago and continue to work on it without feeling like you are doing archeology."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1571637178.105700",
        "client_msg_id": "f7f0cfc5-6a61-46c2-aefd-32eccd35850f",
        "text": "Lout (<https:\/\/savannah.nongnu.org\/projects\/lout\/>) looks promising but also a bit abandoned.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571522910.064800",
        "parent_user_id": "UFB8STN7K",
        "attachments": [
            {
                "title": "Lout - Summary [Savannah]",
                "title_link": "https:\/\/savannah.nongnu.org\/projects\/lout\/",
                "text": "Savannah is a central point for development, distribution and maintenance of free software, both GNU and non-GNU.",
                "fallback": "Lout - Summary [Savannah]",
                "from_url": "https:\/\/savannah.nongnu.org\/projects\/lout\/",
                "service_icon": "https:\/\/savannah.nongnu.org\/images\/Savannah.theme\/icon.png",
                "service_name": "savannah.nongnu.org",
                "id": 1,
                "original_url": "https:\/\/savannah.nongnu.org\/projects\/lout\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rvs4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lout ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/savannah.nongnu.org\/projects\/lout\/"
                            },
                            {
                                "type": "text",
                                "text": ") looks promising but also a bit abandoned."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1571637850.106000",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1571639140.000000"
        },
        "client_msg_id": "20ac613c-c323-4602-b7aa-bef8bc0ab475",
        "text": "<http:\/\/phantomos.org\/>\nPhantom is, basically, a virtual machine (VM) working in a huge persistent virtual memory. Part of the VM classes (some classes, called 'internal') are implemented in kernel, giving VM code access to low level kernel services. Persistent virtual memory is completely orthogonal to object space and VM (no relation between, for example, object boundary and virtual memory page, etc.) and is implemented so that abrupt computer failure or loss of power leaves system in coherent state.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "suIe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/phantomos.org\/"
                            },
                            {
                                "type": "text",
                                "text": "\nPhantom is, basically, a virtual machine (VM) working in a huge persistent virtual memory. Part of the VM classes (some classes, called 'internal') are implemented in kernel, giving VM code access to low level kernel services. Persistent virtual memory is completely orthogonal to object space and VM (no relation between, for example, object boundary and virtual memory page, etc.) and is implemented so that abrupt computer failure or loss of power leaves system in coherent state."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UJBAJNFLK",
                    "ULM3U6275"
                ],
                "count": 2
            }
        ]
    }
]