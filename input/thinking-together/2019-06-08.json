[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1559977315.154000",
        "client_msg_id": "45ad8df7-f6bc-4fc8-9076-7cdb6a93e637",
        "text": "The worst is that it's hard to tell how much spooky-action there will be.  As a consummate Rubyist, I don't know how anyone can follow Rails callbacks.  Even my best TracePoints are at a loss.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559930840.129500",
        "parent_user_id": "UEBG0NPDK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/Twi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The worst is that it's hard to tell how much spooky-action there will be.  As a consummate Rubyist, I don't know how anyone can follow Rails callbacks.  Even my best TracePoints are at a loss."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1559977713.154200",
        "client_msg_id": "119765df-8fc8-423b-b7e6-9085bd131585",
        "text": "<@UJN1TAYEQ> what does \"mutable variables have disjoint state\" mean?  Just \"copying\" instead of aliasing?  (Quotes since copy semantics at its best copies less rather than more.)  With 3, I suppose it's why Java (mind I haven't touched Java in years) required closed variables to be final.  (Of course, since those variables easily store mutable objects... I never understood why the rigmarole though \"rigmarole\" seemed like Java's motto.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559913984.086300",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dX0ez",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " what does \"mutable variables have disjoint state\" mean?  Just \"copying\" instead of aliasing?  (Quotes since copy semantics at its best copies less rather than more.)  With 3, I suppose it's why Java (mind I haven't touched Java in years) required closed variables to be final.  (Of course, since those variables easily store mutable objects... I never understood why the rigmarole though \"rigmarole\" seemed like Java's motto.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1559989395.154600",
        "client_msg_id": "011FE701-8FB1-49D4-89CC-E6D13AAF2913",
        "text": "<@UJTHWNH2T> \n\n1) `Thus we can expect Elm applications to grow entangled and stay that way` elm docs do recommend splitting up into modules when you have a type with a lot of helpers. Each module has its own update\/view\/model, I think. Although, I think Redux people, e.g., do keep a global store, so... idk\n\nSteve: I'm not sure where the question is.\n\n```\nIn Reflex, you’d accomplish this by first describing a list of buttons of Dynamic length. This would emit a Dynamic list of Events, a higher-order stream. If you flattened the higher-order stream, counted all click Event occurrences, and added 1 for the original button, you’d get the desired length of the Dynamic list of buttons. Reflex would let you cyclically feed this Dynamic value back as the length of the list of buttons.\n```\n\nDoes cyclical-ness always go with higher-orderness? Why? In other words, are there FRP libraries that use one but not the other?\n\nSteve: Higher-order streams are common, such as in Rx or xstream, both without cycles. Cyclic streams are quite rare, usually just in Conal-style original FRP.\n\n3) This paragraph stuck out to me as needing more explanation (at least for me),\n\n```\nWhile Reflex enables understanding states via a single place in the code, Elm enables understanding messages via a single place in the code. If one wanted to understand the impact of a Reflex stream on downstream states, one would have to play the reverse of the Ctl-F game that we played in Elm. While this duality might seem equivalent, Reflex’s style is more comprehensible because understanding the behaviors of states is much more important than understanding the effects of messages.\n```\n\nIs the first part saying like, \"Seeing all the effects of a 'command' is difficult with Reflex. But, tracking an individual piece of state is easy.\" Maybe like, a 'verb' vs 'noun' orientation?\n\nAnd, anyway, it's not obvious to me why one would be better than the other. Except for maybe.. see next point\n\nSteve: One analogy I make is the distinction between a dictionary or encyclopedia on one hand and an essay or piece of prose on the other. The Reflex approach is definitional like a dictionary or encyclopedia: each term is self-contained in a recursive way. The Elm approach is like imperative programming: you have to read through the entire text in order to piece the story together, even if you’re only curious about one or two characters.\n\n4) Is it possible to autogenerate these cycle diagram thingies with this approach? Is that part of your goal? Let the editor make these diagrams for you?\n\nSteve: yes, one of the benefits of this definitional approach is that it better lens itself to comprehensibility through tools. As you noted those diagrams aren’t particularly helpful, but they point towards this sorts of visualizations that could be created.\n\n5) Looking at the diagrams it occurred to me \"Man, this is complicated\". But, maybe, rightfully so: TodoMVC, despite appearances, *IS* that complicated. God help us with something more complicated.\n\nSteve: yes! This is essential to the point I’m trying to make. Software is really complicated but we mostly shove the complexity under the rug where it comes back to bite us twice as hard. I’m advocating that we be honest about the complexity we face, which might seem more difficult in the short run but pays dividends in the long run.\n\n6) Are you still interested in all this, in particular Turbine?\n\nYes and no. I really love the Turbine project, but it’s a bit too young to build tooling for because it’s API is changing so quickly. A couple of months ago I decided to put my FRP visualization projects on hold because they felt a bit too low level of a problem to work on.  ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1558283187.462200",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eM2P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJTHWNH2T"
                            },
                            {
                                "type": "text",
                                "text": " \n\n1) "
                            },
                            {
                                "type": "text",
                                "text": "Thus we can expect Elm applications to grow entangled and stay that way",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " elm docs do recommend splitting up into modules when you have a type with a lot of helpers. Each module has its own update\/view\/model, I think. Although, I think Redux people, e.g., do keep a global store, so... idk\n\nSteve: I'm not sure where the question is.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In Reflex, you'd accomplish this by first describing a list of buttons of Dynamic length. This would emit a Dynamic list of Events, a higher-order stream. If you flattened the higher-order stream, counted all click Event occurrences, and added 1 for the original button, you'd get the desired length of the Dynamic list of buttons. Reflex would let you cyclically feed this Dynamic value back as the length of the list of buttons.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nDoes cyclical-ness always go with higher-orderness? Why? In other words, are there FRP libraries that use one but not the other?\n\nSteve: Higher-order streams are common, such as in Rx or xstream, both without cycles. Cyclic streams are quite rare, usually just in Conal-style original FRP.\n\n3) This paragraph stuck out to me as needing more explanation (at least for me),\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "While Reflex enables understanding states via a single place in the code, Elm enables understanding messages via a single place in the code. If one wanted to understand the impact of a Reflex stream on downstream states, one would have to play the reverse of the Ctl-F game that we played in Elm. While this duality might seem equivalent, Reflex's style is more comprehensible because understanding the behaviors of states is much more important than understanding the effects of messages.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nIs the first part saying like, \"Seeing all the effects of a 'command' is difficult with Reflex. But, tracking an individual piece of state is easy.\" Maybe like, a 'verb' vs 'noun' orientation?\n\nAnd, anyway, it's not obvious to me why one would be better than the other. Except for maybe.. see next point\n\nSteve: One analogy I make is the distinction between a dictionary or encyclopedia on one hand and an essay or piece of prose on the other. The Reflex approach is definitional like a dictionary or encyclopedia: each term is self-contained in a recursive way. The Elm approach is like imperative programming: you have to read through the entire text in order to piece the story together, even if you’re only curious about one or two characters.\n\n4) Is it possible to autogenerate these cycle diagram thingies with this approach? Is that part of your goal? Let the editor make these diagrams for you?\n\nSteve: yes, one of the benefits of this definitional approach is that it better lens itself to comprehensibility through tools. As you noted those diagrams aren’t particularly helpful, but they point towards this sorts of visualizations that could be created.\n\n5) Looking at the diagrams it occurred to me \"Man, this is complicated\". But, maybe, rightfully so: TodoMVC, despite appearances, "
                            },
                            {
                                "type": "text",
                                "text": "IS",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that complicated. God help us with something more complicated.\n\nSteve: yes! This is essential to the point I’m trying to make. Software is really complicated but we mostly shove the complexity under the rug where it comes back to bite us twice as hard. I’m advocating that we be honest about the complexity we face, which might seem more difficult in the short run but pays dividends in the long run.\n\n6) Are you still interested in all this, in particular Turbine?\n\nYes and no. I really love the Turbine project, but it’s a bit too young to build tooling for because it’s API is changing so quickly. A couple of months ago I decided to put my FRP visualization projects on hold because they felt a bit too low level of a problem to work on."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1560015539.154900",
        "client_msg_id": "d4188761-5333-4b3f-b9e8-b0cead444bea",
        "text": "&gt; zoom is semantic\n\nCan you elaborate on that point?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559955992.151300",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TPR",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "zoom is semantic"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nCan you elaborate on that point?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1560018402.166600",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1560018491.000000"
        },
        "client_msg_id": "0FFC7E93-24F5-4A21-B635-34FC7AF79310",
        "text": "on the topic of visual programming languages: can we just acknowledge for a minute that even textual programming languages ARE extremely visual? whether it's sticking things inside parentheses, function arguments, indentation, the glyph % for modulus, or using the same syntax for structuring\/destructuring data by switching the right hand side to the left hand side, programming languages use visual thinking all the time—they're just using a pretty impoverished medium\n\n it might even be true that visual\/positional reasoning is necessary in any formal language since the rules for what terms can follow or include each other require positional rules, not just grammatical ones\n\nI think there's a pretty fruitful zone of research on more compact visual representations that look more like glyphs and less like diagrams—since diagrams are usually used for conceptual overviews rather than the nitty-gritty of how stuff gets done. something along the lines of sparkcharts or the variety of icons used in games (whether mana symbols in magic the gathering, HUDs in first person shooters for stuff like ammo and energy, or resource count icons in real-time strategy games.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GNm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "on the topic of visual programming languages: can we just acknowledge for a minute that even textual programming languages ARE extremely visual? whether it's sticking things inside parentheses, function arguments, indentation, the glyph % for modulus, or using the same syntax for structuring\/destructuring data by switching the right hand side to the left hand side, programming languages use visual thinking all the time—they're just using a pretty impoverished medium\n\n it might even be true that visual\/positional reasoning is necessary in any formal language since the rules for what terms can follow or include each other require positional rules, not just grammatical ones\n\nI think there's a pretty fruitful zone of research on more compact visual representations that look more like glyphs and less like diagrams—since diagrams are usually used for conceptual overviews rather than the nitty-gritty of how stuff gets done. something along the lines of sparkcharts or the variety of icons used in games (whether mana symbols in magic the gathering, HUDs in first person shooters for stuff like ammo and energy, or resource count icons in real-time strategy games."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKASUGYL8",
                    "UBSMEUXAA",
                    "UK0GCU598",
                    "UAVCC2X70"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1560018655.167000",
        "client_msg_id": "3bcba3f5-1d6c-4cd5-8f01-ffeb728ced20",
        "text": "that's basically APL :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/WcDU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that's basically APL "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UDKTZSD6H",
                    "UA14TGLTC",
                    "UBSMEUXAA"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1560018960.169300",
        "client_msg_id": "5BB8A896-E110-418E-949B-E36279C902A1",
        "text": "honestly, I feel called out lol. but I mean with learnable glyphs that are pictorial rather than just trying to make special characters look better-and a reinforcement technique—eg explanation tooltips on hover",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ti6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "honestly, I feel called out lol. but I mean with learnable glyphs that are pictorial rather than just trying to make special characters look better-and a reinforcement technique—eg explanation tooltips on hover"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1560018986.170200",
        "client_msg_id": "1BE164C6-2509-4F57-A958-2E44A522FFE0",
        "text": "hearthstone uses that technique to a lot of success with non-programmers ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zwvmx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "hearthstone uses that technique to a lot of success with non-programmers"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1560019106.172000",
        "client_msg_id": "50203c85-96b0-43dd-b110-bf65449a1a76",
        "text": "Not a call out at all, just drawing associations. Check out Opus Magnum and Kodu\/Project Spark - they have programming symbols that sound like what you're talking about.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BrCL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not a call out at all, just drawing associations. Check out Opus Magnum and Kodu\/Project Spark - they have programming symbols that sound like what you're talking about."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1560019117.172500",
        "client_msg_id": "516b538d-7698-453c-9a5b-7783846b798f",
        "text": "The board game RoboRally is another one",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GpCH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The board game RoboRally is another one"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1560019201.173800",
        "client_msg_id": "CDAEC1A7-0E79-4B33-B267-B26CF9DC4942",
        "text": "omfg I thought my friend group was the only one that played roborally! that game rules and is like a case study in programming difficulty ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ylg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "omfg I thought my friend group was the only one that played roborally! that game rules and is like a case study in programming difficulty"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1560019263.174200",
        "client_msg_id": "e8e2800a-4be9-4ad1-a156-1de13b47483e",
        "text": "You might really enjoy opus magnum then :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lFej8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You might really enjoy opus magnum then "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJUGB1XGD"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1560019314.174900",
        "client_msg_id": "0aa5ecaf-cd6c-4b71-93e2-d6a214cad028",
        "text": "Factorio is an example of this as well, though moving away from glyphs and more towards assembling machines directly",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560019314.174900",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1560019390.175000",
        "reply_users": [
            "UEBG0NPDK"
        ],
        "replies": [
            {
                "user": "UEBG0NPDK",
                "ts": "1560019390.175000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "se73",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Factorio is an example of this as well, though moving away from glyphs and more towards assembling machines directly"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1560019390.175000",
        "client_msg_id": "6698d85b-d3a3-4ac4-a954-fd1808a51b7a",
        "text": "At some level you can argue there's no fundamental difference between the two, it's just a question of whether or not they're \"dead\" and what constraints there are on spatial arrangement.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560019314.174900",
        "parent_user_id": "UEBG0NPDK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jVXC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At some level you can argue there's no fundamental difference between the two, it's just a question of whether or not they're \"dead\" and what constraints there are on spatial arrangement."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1560019447.176000",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1560019620.000000"
        },
        "client_msg_id": "bd294f38-d894-46f2-8515-6fda310f62ff",
        "text": "I think the main thing you'd have to solve to make something like that more practical is to figure out how glyphs compose into meaningful new glyphs.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sS4ox",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think the main thing you'd have to solve to make something like that more practical is to figure out how glyphs compose into meaningful new glyphs."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1560019456.176400",
        "client_msg_id": "9bf071a3-e544-446e-8ea4-13004a74aeb5",
        "text": "That was one of the places that Kodu fell down",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y7nU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That was one of the places that Kodu fell down"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1560019491.177100",
        "client_msg_id": "2b838bc7-cac5-443b-9500-edf1a3adf0ab",
        "text": "APL allows you to define new terms, but you're limited to the alphabet available to you",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aqUk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "APL allows you to define new terms, but you're limited to the alphabet available to you"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1560019515.177700",
        "client_msg_id": "9da63ea1-da50-473d-9dd9-9a0178b866c0",
        "text": "if you wanted to make the glyphs more directly related to their action, you'd have to come up with a semantics for composition",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X1c3I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if you wanted to make the glyphs more directly related to their action, you'd have to come up with a semantics for composition"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1560019537.178100",
        "client_msg_id": "d0015ed6-b795-4437-bfd9-13a799607a4b",
        "text": "or in other words, naming things is hard :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zysO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "or in other words, naming things is hard "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1560019579.178800",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1560019843.000000"
        },
        "client_msg_id": "442c9085-dc21-414c-9c46-6cecdf217f7e",
        "text": "Doing it with glyphs makes naming both a semantic and a visualization problem",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x71",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Doing it with glyphs makes naming both a semantic and a visualization problem"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1560022617.182200",
        "client_msg_id": "B5C715BE-8CF4-432A-B294-D3B0B53445EA",
        "text": "definitely a lot of good points here (how had I not heard of kodu?)! ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y5GL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "definitely a lot of good points here (how had I not heard of kodu?)!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEF95M2RH",
        "type": "message",
        "ts": "1560025965.183700",
        "edited": {
            "user": "UEF95M2RH",
            "ts": "1560026547.000000"
        },
        "client_msg_id": "40a9bfad-f74f-406f-908f-f495d3986642",
        "text": "&gt; it might even be true that visual\/positional reasoning is necessary in any formal language\n\nIt's definitely not true that visual reasoning is necessary for programming\/formal languages, since blind people can program just fine. This is one way in which it seems to me more visual approaches to programming are a step backward even if\/when they work - they make it fundamentally less accessible to blind folks. On the other hand, would we deny engineers the right to use diagrams in order to make engineering more accessible to the blind? Probably not. And it's not as if we don't often use diagrams or visual notation in _explaining_ our code already. So, yeah, I'm conflicted.\n\nI'm not sure what exactly you mean by \"positional\" reasoning. If you just mean stuff coming before\/after other stuff, sure, that seems necessary, or at least I can't see how to do without it :stuck_out_tongue:.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4e6637707ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c4e6637707ff62601f3dd21ec7626095.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Michael Arntzenius",
            "display_name": "rntz",
            "team": "T5TCAFTA9",
            "name": "daekharel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560025965.183700",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1560096049.233500",
        "reply_users": [
            "UCUSW7WVD",
            "UEF95M2RH",
            "UHWC9PXBL"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1560026418.184200"
            },
            {
                "user": "UEF95M2RH",
                "ts": "1560026712.184500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1560026807.184700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1560096049.233500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vXinz",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it might even be true that visual\/positional reasoning is necessary in any formal language"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nIt's definitely not true that visual reasoning is necessary for programming\/formal languages, since blind people can program just fine. This is one way in which it seems to me more visual approaches to programming are a step backward even if\/when they work - they make it fundamentally less accessible to blind folks. On the other hand, would we deny engineers the right to use diagrams in order to make engineering more accessible to the blind? Probably not. And it's not as if we don't often use diagrams or visual notation in "
                            },
                            {
                                "type": "text",
                                "text": "explaining",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " our code already. So, yeah, I'm conflicted.\n\nI'm not sure what exactly you mean by \"positional\" reasoning. If you just mean stuff coming before\/after other stuff, sure, that seems necessary, or at least I can't see how to do without it "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1560026418.184200",
        "client_msg_id": "d043795b-1c7c-4cc0-b6b4-ea95534a79b8",
        "text": "Hmm, it's actually a good question whether vision is necessary for visual programming. If so that seems a knock against it on accessibility\/moral grounds. But I think the answer is fortunately 'no'. I think most blind people may have a pretty well-developed spatial sense, and that's really what visual programming is trying to tap into.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560025965.183700",
        "parent_user_id": "UEF95M2RH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hMA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hmm, it's actually a good question whether vision is necessary for visual programming. If so that seems a knock against it on accessibility\/moral grounds. But I think the answer is fortunately 'no'. I think most blind people may have a pretty well-developed spatial sense, and that's really what visual programming is trying to tap into."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEF95M2RH",
        "type": "message",
        "ts": "1560026712.184500",
        "client_msg_id": "6720e92b-6768-4e02-8382-e07ae7cbe60f",
        "text": "Spatial intuition might be what visual programming systems are trying to use (although I don't think that's the whole story), but the way they accomplish this is... well, visual. Maybe in some imagined future they could work in a tactile way, but I think that's so hypothetical it's not useful.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4e6637707ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c4e6637707ff62601f3dd21ec7626095.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Michael Arntzenius",
            "display_name": "rntz",
            "team": "T5TCAFTA9",
            "name": "daekharel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560025965.183700",
        "parent_user_id": "UEF95M2RH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hl+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Spatial intuition might be what visual programming systems are trying to use (although I don't think that's the whole story), but the way they accomplish this is... well, visual. Maybe in some imagined future they could work in a tactile way, but I think that's so hypothetical it's not useful."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1560026807.184700",
        "client_msg_id": "695ce88c-730b-472f-aa55-e41bd23667b3",
        "text": "Yeah, it's all hypothetical given how nascent the field is. I'm not invested in visual programming, and like I said accessibility is a key question any proposals have to answer.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560025965.183700",
        "parent_user_id": "UEF95M2RH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wkRvH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, it's all hypothetical given how nascent the field is. I'm not invested in visual programming, and like I said accessibility is a key question any proposals have to answer."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1560034845.191400",
        "client_msg_id": "c9a40926-64b3-4c6a-8f0b-215c76ac2f67",
        "text": "<@UA14TGLTC> I would like to know how much PureData fits the criteria you have described: <https:\/\/puredata.info\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559955992.151300",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UuJJg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " I would like to know how much PureData fits the criteria you have described: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/puredata.info\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1560039452.210300",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1560052849.000000"
        },
        "client_msg_id": "b00f02c6-c9b9-4373-9d0d-bf0c55a14183",
        "text": "The future \"visual\" languages I like to imagine are all about making execution something that the programmer participates in. One way to do that is to reify concepts that are implied or invisible in current tools — things like the \"current location\" of the instruction pointer, the path(s) it followed to arrive there, and the path(s) it'll take in the future. Showing those things graphically is one way of _rendering_ that concept. You can also render it verbally, by giving the things in your program place names or attributes that convey the right meaning when spoken.\n\nThink of the difference between a book (say, Hitchhiker's Guide) and a text adventure game (say, the Hitchhiker's Guide game). A book is static, a text adventure game is participatory. They both tell the same story, and both depend on the reader\/player to advance the story, but the game allows the player to consciously shape how the story unfolds for them. The fact that the text adventure game is \"rendered\" in text is just an implementation detail — you could also make a version of the same game with the same narrative and gameplay rendered graphically. One could argue that Myst is the 3d rendered equivalent of a text adventure game. You could also make a text adventure game equivalent with a purely spoken interface. I once did the score for a theatrical production where the whole room was the stage and the audience sat on pieces of the set. The audience members' presence was part of the story, and if the audience did something then the actors responded to it — to a very limited extent, the theatre equivalent of a text adventure game. All of these media are different ways of rendering a story, and for each kind of rendering there can be a participatory version (game\/interactive) and a non-participatory version (novel\/movie\/audiobook).\n\nSame goes for programming. Right now, we're only able to participate in the execution of our software via the UI that we create for it, and whatever debugging tools our environment permits. Live Programming tools let us participate a little bit more. I'm interested in taking participation a lot further. Using (eg) \"nodes and lines\" to render this programming experience is just an implementation detail. You could offer the same hyper-participatory experience using text, or speech, or holograms, or Braille. The reason I'm generally enthusiastic about the \"visual\" programming is because I'm a visual artist, and I have a nostalgic love for complex GUI tools like Maya, so that's the aesthetic I'm interested in first. If I were blind, I'd still be chasing the same participatory vision, but I'd be building a spoken interface first.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560039452.210300",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1560192145.265300",
        "reply_users": [
            "UJFN50C00",
            "UJPHQ8Z3N",
            "UC21F8Q48",
            "U8A5MS6R1"
        ],
        "replies": [
            {
                "user": "UJFN50C00",
                "ts": "1560084700.226300"
            },
            {
                "user": "UJPHQ8Z3N",
                "ts": "1560088637.229600"
            },
            {
                "user": "UC21F8Q48",
                "ts": "1560172472.263200"
            },
            {
                "user": "UJPHQ8Z3N",
                "ts": "1560175718.264100"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1560192145.265300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LWW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The future \"visual\" languages I like to imagine are all about making execution something that the programmer participates in. One way to do that is to reify concepts that are implied or invisible in current tools — things like the \"current location\" of the instruction pointer, the path(s) it followed to arrive there, and the path(s) it'll take in the future. Showing those things graphically is one way of "
                            },
                            {
                                "type": "text",
                                "text": "rendering",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that concept. You can also render it verbally, by giving the things in your program place names or attributes that convey the right meaning when spoken.\n\nThink of the difference between a book (say, Hitchhiker's Guide) and a text adventure game (say, the Hitchhiker's Guide game). A book is static, a text adventure game is participatory. They both tell the same story, and both depend on the reader\/player to advance the story, but the game allows the player to consciously shape how the story unfolds for them. The fact that the text adventure game is \"rendered\" in text is just an implementation detail — you could also make a version of the same game with the same narrative and gameplay rendered graphically. One could argue that Myst is the 3d rendered equivalent of a text adventure game. You could also make a text adventure game equivalent with a purely spoken interface. I once did the score for a theatrical production where the whole room was the stage and the audience sat on pieces of the set. The audience members' presence was part of the story, and if the audience did something then the actors responded to it — to a very limited extent, the theatre equivalent of a text adventure game. All of these media are different ways of rendering a story, and for each kind of rendering there can be a participatory version (game\/interactive) and a non-participatory version (novel\/movie\/audiobook).\n\nSame goes for programming. Right now, we're only able to participate in the execution of our software via the UI that we create for it, and whatever debugging tools our environment permits. Live Programming tools let us participate a little bit more. I'm interested in taking participation a lot further. Using (eg) \"nodes and lines\" to render this programming experience is just an implementation detail. You could offer the same hyper-participatory experience using text, or speech, or holograms, or Braille. The reason I'm generally enthusiastic about the \"visual\" programming is because I'm a visual artist, and I have a nostalgic love for complex GUI tools like Maya, so that's the aesthetic I'm interested in first. If I were blind, I'd still be chasing the same participatory vision, but I'd be building a spoken interface first."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U85HCL7JP",
                    "UJFN50C00",
                    "UEGFXUK3M",
                    "UHWC9PXBL"
                ],
                "count": 4
            },
            {
                "name": "100",
                "users": [
                    "U8A5MS6R1",
                    "U7C7B75R6",
                    "UJFN50C00",
                    "UEGFXUK3M",
                    "UBSMEUXAA"
                ],
                "count": 5
            },
            {
                "name": "+1",
                "users": [
                    "UJVEPCVT6",
                    "UKB0R0L77",
                    "UA14TGLTC",
                    "UJFN50C00",
                    "UEGFXUK3M",
                    "UEQ7QL15F",
                    "UDKTZSD6H"
                ],
                "count": 7
            }
        ]
    }
]