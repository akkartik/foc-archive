[
    {
        "user": "U01K9KBSW9H",
        "type": "message",
        "ts": "1657876001.126939",
        "client_msg_id": "e1af2716-fd48-4e0a-9fd0-dec8914a308b",
        "text": "Hello, I am Stefan, software engineer.\n\nI have spent most of my career in data warehousing, almost everything from tool making to architecture. I am author of Cubes - former light-weight data warehouse toolkit in Python, now discontinued.\n\nExploring alternative ways of “problem modelling”, especially for the domain complex systems. From engineering perspective that lead me to a curious question: whether “everything is a graph” programming language is feasible and if yes, how it would look like.\n\nCurrently prototyping a library and a tiny domain specific programming language for modelling and simulation of dynamical systems. (Might release a prototype soon).\n\nHappy to be here. Cheers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f2dce6743594",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-07-15\/3803933117427_f2dce67435947450c110_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Urbanek",
            "display_name": "Stiivi",
            "team": "T5TCAFTA9",
            "name": "stefan.urbanek",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1657876001.126939",
        "reply_count": 15,
        "reply_users_count": 7,
        "latest_reply": "1658412835.022239",
        "reply_users": [
            "U02028JHX37",
            "U02U0AS3J49",
            "U01K9KBSW9H",
            "U03LT7540HZ",
            "U03B14DUZSA",
            "UA14TGLTC",
            "UJBAJNFLK"
        ],
        "replies": [
            {
                "user": "U02028JHX37",
                "ts": "1657885076.585669"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1657897317.110299"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1657897422.127899"
            },
            {
                "user": "U01K9KBSW9H",
                "ts": "1657911429.538319"
            },
            {
                "user": "U03LT7540HZ",
                "ts": "1657923123.995719"
            },
            {
                "user": "U03B14DUZSA",
                "ts": "1657926223.490399"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1657963264.990279"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1657963556.274159"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1658307785.814389"
            },
            {
                "user": "U03LT7540HZ",
                "ts": "1658348488.912139"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1658369733.037279"
            },
            {
                "user": "U03LT7540HZ",
                "ts": "1658374762.819589"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1658411684.066309"
            },
            {
                "user": "U03LT7540HZ",
                "ts": "1658412732.119939"
            },
            {
                "user": "U03LT7540HZ",
                "ts": "1658412835.022239"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HU8NJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello, I am Stefan, software engineer.\n\nI have spent most of my career in data warehousing, almost everything from tool making to architecture. I am author of Cubes - former light-weight data warehouse toolkit in Python, now discontinued.\n\nExploring alternative ways of “problem modelling”, especially for the domain complex systems. From engineering perspective that lead me to a curious question: whether “everything is a graph” programming language is feasible and if yes, how it would look like.\n\nCurrently prototyping a library and a tiny domain specific programming language for modelling and simulation of dynamical systems. (Might release a prototype soon).\n\nHappy to be here. Cheers."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "U03GBV8B58V",
                    "UAJKEBGP8",
                    "U02028JHX37",
                    "U014WA16VNJ",
                    "USH01JEDQ",
                    "UC2A2ARPT",
                    "U013ZLJARC7",
                    "UA14TGLTC",
                    "UMV4B97GT",
                    "U03E4LY27FS",
                    "UJBAJNFLK",
                    "UJ6LDMMN0"
                ],
                "count": 12
            }
        ]
    },
    {
        "user": "U02028JHX37",
        "type": "message",
        "ts": "1657885076.585669",
        "client_msg_id": "2df976ee-65c3-41ae-ad6f-90361506ccff",
        "text": "Hi :)) I've recently come across a claim that \"everything's a graph\" languages correspond to \"everything's a relation\" languages (think variants of SQL or Prolog\/Datalog). Maybe you can start with this \"conjecture\" ;)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdf13e3ce9df",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/df13e3ce9dfc39e2f387bd3d6e87b952.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jan Ruzicka",
            "display_name": "Jan Ruzicka",
            "team": "T5TCAFTA9",
            "name": "jan.ruzicka01",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1657876001.126939",
        "parent_user_id": "U01K9KBSW9H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lFpUi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi :)) I've recently come across a claim that \"everything's a graph\" languages correspond to \"everything's a relation\" languages (think variants of SQL or Prolog\/Datalog). Maybe you can start with this \"conjecture\" ;)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1657897317.110299",
        "client_msg_id": "5bd2c499-53ab-4f14-afd8-ce602b64c0b4",
        "text": "Hillel Wayne was talking about this idea on Twitter this week, lots of replies were along that vein. Lots of people were saying \"isn't a graph just X\", which sort of misses the point, I think. The question is the level of abstraction you want to work at. I'm not convinced SQL gets you there. Lots of room to play with this idea, I think. My personal preference would be that it was in the logical paradigm. But I haven't done any graph work outside of Python, so I don't really know what that would look like. Interested to see, though.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1657876001.126939",
        "parent_user_id": "U01K9KBSW9H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D0Cs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hillel Wayne was talking about this idea on Twitter this week, lots of replies were along that vein. Lots of people were saying \"isn't a graph just X\", which sort of misses the point, I think. The question is the level of abstraction you want to work at. I'm not convinced SQL gets you there. Lots of room to play with this idea, I think. My personal preference would be that it was in the logical paradigm. But I haven't done any graph work outside of Python, so I don't really know what that would look like. Interested to see, though."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01K9KBSW9H",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1657897422.127899",
        "client_msg_id": "d2661b55-947e-42bf-860e-63a183e6c5f4",
        "text": "I think visualizations with that sort of language would be easy, and phenomenal.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1657876001.126939",
        "parent_user_id": "U01K9KBSW9H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VNN3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think visualizations with that sort of language would be easy, and phenomenal."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01K9KBSW9H",
        "type": "message",
        "ts": "1657911429.538319",
        "client_msg_id": "e8c31b19-91ea-4e4f-ac81-b366ae6b5757",
        "text": "I’ve spent almost 20 years of my career in relational algebra world and I agree with what <@U02U0AS3J49> says – it is related to the level of abstraction for given problem domain. SQL not the abstraction that I believe is suitable for graph-based problems. It serves its purpose and it serves it well, but those are different kinds of problems to be solved. NB: yes, one can implement graphs within SQL, but that misses the whole problem-question.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f2dce6743594",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-07-15\/3803933117427_f2dce67435947450c110_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Urbanek",
            "display_name": "Stiivi",
            "team": "T5TCAFTA9",
            "name": "stefan.urbanek",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1657876001.126939",
        "parent_user_id": "U01K9KBSW9H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bE59",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve spent almost 20 years of my career in relational algebra world and I agree with what "
                            },
                            {
                                "type": "user",
                                "user_id": "U02U0AS3J49"
                            },
                            {
                                "type": "text",
                                "text": " says – it is related to the level of abstraction for given problem domain. SQL not the abstraction that I believe is suitable for graph-based problems. It serves its purpose and it serves it well, but those are different kinds of problems to be solved. NB: yes, one can implement graphs within SQL, but that misses the whole problem-question."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03LT7540HZ",
        "type": "message",
        "ts": "1657923123.995719",
        "edited": {
            "user": "U03LT7540HZ",
            "ts": "1657923171.000000"
        },
        "client_msg_id": "c1c51aa2-36a6-41cf-9307-28ee40bfc949",
        "text": "CUE is an interesting language that works on a value lattice (a special graph). You can easily make a DSL on top of it, implementing the DSL requires writing Go currently. (CUE is written in Go and has APIs available)\n\nPropagator Networks are interesting too, might be related to your interests, and updating knowledge or stated in the graph.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "754abc97c5ce",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-06-22\/3731055996048_754abc97c5ce87f6c99f_72.jpg",
            "first_name": "Tony",
            "real_name": "Tony Worm",
            "display_name": "Tony Worm",
            "team": "T5TCAFTA9",
            "name": "tony066",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1657876001.126939",
        "parent_user_id": "U01K9KBSW9H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "072p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "CUE is an interesting language that works on a value lattice (a special graph). You can easily make a DSL on top of it, implementing the DSL requires writing Go currently. (CUE is written in Go and has APIs available)\n\nPropagator Networks are interesting too, might be related to your interests, and updating knowledge or stated in the graph."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "sunglasses",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03B14DUZSA",
        "type": "message",
        "ts": "1657926223.490399",
        "client_msg_id": "b2fdcaca-958c-4fc4-98a3-fcc1d9396aab",
        "text": "Modeling and simulation is a very underappreciated field of computing IMO, given that computers are such fantastic modelers and simulators! Currently the field is dominated by old-fashioned enterprise software like AnyLogic and academically by Netlogo - not many new developments, besides some on top of existing languages like <http:\/\/hash.ai|hash.ai>, some libraries in the Python\/Julia ecosystems, and <https:\/\/simlin.com\/> which approaches from the system dynamics perspective - stocks and flows. Graphs, and especially networks, are core to system modeling, so I'm curious to see your take on it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7358a16bdea5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-11-02\/4314864832259_7358a16bdea535168748_72.png",
            "first_name": "Riley",
            "real_name": "Riley Stewart",
            "display_name": "Riley Stewart",
            "team": "T5TCAFTA9",
            "name": "me1307",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1657876001.126939",
        "parent_user_id": "U01K9KBSW9H",
        "attachments": [
            {
                "from_url": "https:\/\/simlin.com\/",
                "service_icon": "https:\/\/simlin.com\/img\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/simlin.com\/",
                "fallback": "Simlin system dynamics software | Simlin",
                "text": "System dynamics modeling software",
                "title": "Simlin system dynamics software | Simlin",
                "title_link": "https:\/\/simlin.com\/",
                "service_name": "simlin.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ude",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Modeling and simulation is a very underappreciated field of computing IMO, given that computers are such fantastic modelers and simulators! Currently the field is dominated by old-fashioned enterprise software like AnyLogic and academically by Netlogo - not many new developments, besides some on top of existing languages like "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/hash.ai",
                                "text": "hash.ai"
                            },
                            {
                                "type": "text",
                                "text": ", some libraries in the Python\/Julia ecosystems, and "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/simlin.com\/"
                            },
                            {
                                "type": "text",
                                "text": " which approaches from the system dynamics perspective - stocks and flows. Graphs, and especially networks, are core to system modeling, so I'm curious to see your take on it."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]