[
    {
        "user": "UNLS33M61",
        "type": "message",
        "ts": "1574929029.255500",
        "client_msg_id": "c151e4f2-5859-4f77-b1bd-9a3b802c2c9b",
        "text": "Did anyone ever take the work done by Eve and carry forward the torch and keep developing those ideas? If not, why not? Was the approach a dead-end? I got the sense that it was a promising direction but they simply ran out of money\/motivation. I haven’t looked deeply into everyone’s projects here, but been lurking for a while and I don’t seem to hear of any projects that claim to be descendants of Eve--though I could be wrong.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g915aac3dfde",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/915aac3dfde2fb502ce415d77643a72d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Wil Chung",
            "display_name": "Wil Chung",
            "team": "T5TCAFTA9",
            "name": "iamwil",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "reply_count": 23,
        "reply_users_count": 8,
        "latest_reply": "1578550920.079300",
        "reply_users": [
            "UBN9AFS0N",
            "ULM3U6275",
            "UEBG0NPDK",
            "UHDQ62M4P",
            "UNLS33M61",
            "UHWC9PXBL",
            "UJN1TAYEQ",
            "UCGR73CAY"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1574930522.256600"
            },
            {
                "user": "ULM3U6275",
                "ts": "1574953201.261400"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1574959815.268100"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1574965547.270600"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1574967612.271200"
            },
            {
                "user": "UNLS33M61",
                "ts": "1574983012.298400"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1575166104.318300"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1575166168.319800"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1575224230.329000"
            },
            {
                "user": "UNLS33M61",
                "ts": "1575225234.329400"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1575232931.333800"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1575233021.334000"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1575233099.334200"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1575233415.334400"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1575233766.334600"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1575233969.334800"
            },
            {
                "user": "UNLS33M61",
                "ts": "1575251398.337000"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1575298985.359900"
            },
            {
                "user": "UNLS33M61",
                "ts": "1575483190.002900"
            },
            {
                "user": "UCGR73CAY",
                "ts": "1577333608.098600"
            },
            {
                "user": "UNLS33M61",
                "ts": "1577554238.140500"
            },
            {
                "user": "UCGR73CAY",
                "ts": "1577930345.266100"
            },
            {
                "user": "UNLS33M61",
                "ts": "1578550920.079300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Zvz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Did anyone ever take the work done by Eve and carry forward the torch and keep developing those ideas? If not, why not? Was the approach a dead-end? I got the sense that it was a promising direction but they simply ran out of money\/motivation. I haven’t looked deeply into everyone’s projects here, but been lurking for a while and I don’t seem to hear of any projects that claim to be descendants of Eve--though I could be wrong."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNLS33M61",
        "type": "message",
        "ts": "1574929137.256500",
        "client_msg_id": "68aa0c28-3ea6-4f65-8d47-446a51d90807",
        "text": "Also, as a separate question, I was thinking of getting myself something for Black Friday. Either the Little Schemer or the Little Typer. Which would you recommend if you’ve read either?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g915aac3dfde",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/915aac3dfde2fb502ce415d77643a72d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Wil Chung",
            "display_name": "Wil Chung",
            "team": "T5TCAFTA9",
            "name": "iamwil",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929137.256500",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1574941495.257100",
        "reply_users": [
            "UMU2RLPR8",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UMU2RLPR8",
                "ts": "1574934815.256900"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1574941495.257100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0V8LR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, as a separate question, I was thinking of getting myself something for Black Friday. Either the Little Schemer or the Little Typer. Which would you recommend if you’ve read either?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1574930522.256600",
        "client_msg_id": "89787a04-abbe-431d-ac82-1c702a18039c",
        "text": "I think <http:\/\/mech-lang.org\/home.html> is trying to continue on that area?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "attachments": [
            {
                "title": "The Mech Programming Language",
                "title_link": "http:\/\/mech-lang.org\/home.html",
                "text": "Mech is a language for developing data-driven, reactive systems like animations, games, and robots. It makes composing, transforming, and distributing data easy, allowing you to focus on the essential complexity of your work.",
                "fallback": "The Mech Programming Language",
                "from_url": "http:\/\/mech-lang.org\/home.html",
                "service_name": "mech-lang.org",
                "id": 1,
                "original_url": "http:\/\/mech-lang.org\/home.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EfN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/mech-lang.org\/home.html"
                            },
                            {
                                "type": "text",
                                "text": " is trying to continue on that area?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMU2RLPR8",
        "type": "message",
        "ts": "1574934815.256900",
        "client_msg_id": "c77ccf69-96ac-4027-86e7-58a33bd19c12",
        "text": "i love them both!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84533398a201",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-10\/756734099191_84533398a201c4f2babe_72.png",
            "first_name": "Ryan",
            "real_name": "Ryan",
            "display_name": "comma",
            "team": "T5TCAFTA9",
            "name": "ryan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929137.256500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cm1zO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i love them both!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1574941495.257100",
        "client_msg_id": "91aa061d-9222-4eaf-8843-4b9324162246",
        "text": "The Reasoned Schemer.  :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929137.256500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tvpcj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Reasoned Schemer.  "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "owl",
                "users": [
                    "UAJ9DV971"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1574946140.257400",
        "client_msg_id": "fe52a560-69ac-4361-b615-796cd9211860",
        "text": "<@UAVCC2X70> I don’t know Forth, can you give me more intuition on that? :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MalU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": " I don’t know Forth, can you give me more intuition on that? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1574951564.258100",
        "client_msg_id": "7bdb445a-5630-429d-a0e9-3107a421353e",
        "text": "if your language had a link type, equality would be over the url? the text? both?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574951564.258100",
        "reply_count": 14,
        "reply_users_count": 6,
        "latest_reply": "1576253680.003400",
        "reply_users": [
            "UP28ETUSE",
            "UC2A2ARPT",
            "UBN9AFS0N",
            "UJN1TAYEQ",
            "U5STGTB3J",
            "UFEQUBNNT"
        ],
        "replies": [
            {
                "user": "UP28ETUSE",
                "ts": "1574951711.260100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1574957026.263600"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1574957182.265200"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1574957624.265600"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1574957691.265900"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1574957741.266100"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1574966995.271000"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1574967724.271400"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1575047953.312200"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1575048555.312500"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1575048934.315200"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1575048965.315400"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1575145980.316000"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1576253680.003400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rGgvm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if your language had a link type, equality would be over the url? the text? both?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP28ETUSE",
        "type": "message",
        "ts": "1574951711.260100",
        "edited": {
            "user": "UP28ETUSE",
            "ts": "1574951749.000000"
        },
        "client_msg_id": "0f952d1c-566e-4410-9a3e-a3f95e2fd683",
        "text": "I think both? Just like in a standard PL we sometimes need pointer equality and other times we follow the pointer and the check for equality — entities vs value objects, to use the domain-driven design terminology.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7cefc64f7b1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7cefc64f7b1b53513625bf3487ecd16d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "Ionuț",
            "real_name": "Ionuț G. Stan",
            "display_name": "Ionuț G. Stan",
            "team": "T5TCAFTA9",
            "name": "ionut.g.stan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574951564.258100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zmc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think both? Just like in a standard PL we sometimes need pointer equality and other times we follow the pointer and the check for equality — entities vs value objects, to use the domain-driven design terminology."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1574953201.261400",
        "client_msg_id": "04CFDCE0-5C2E-40B0-BB6F-64956460788E",
        "text": "What would you say are Eve’s ideas?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ngDC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What would you say are Eve’s ideas?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_check_mark",
                "users": [
                    "UE6EFEPTQ",
                    "U79HM6726"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1574957026.263600",
        "client_msg_id": "539FE303-E8CB-4B5C-8690-AEFCC705A40E",
        "text": "There would be several separate meanings of equality (equal link, equal text), and then a combined product equality. When comparing, pick the equality you need.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574951564.258100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wzmT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There would be several separate meanings of equality (equal link, equal text), and then a combined product equality. When comparing, pick the equality you need."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1574957182.265200",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1574957260.000000"
        },
        "client_msg_id": "B1880B5A-9C1E-46A3-B6E1-06609C7D2819",
        "text": "So considering you're offering accessors for the url and name fields, I guess direct link-to-link equality should be \"both\". Though that does feel more arbitrary. Maybe only allow equality on primitive values? (Oh god)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574951564.258100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "251i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So considering you're offering accessors for the url and name fields, I guess direct link-to-link equality should be \"both\". Though that does feel more arbitrary. Maybe only allow equality on primitive values? (Oh god)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1574957624.265600",
        "client_msg_id": "0f73a723-e330-4cdc-acc3-4d930de26f74",
        "text": "I will allow to compare by either when the user is using the data type, my problem is when for example using a link value as a key in a map, there the equality I choose can only be one",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574951564.258100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WAC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I will allow to compare by either when the user is using the data type, my problem is when for example using a link value as a key in a map, there the equality I choose can only be one"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1574957691.265900",
        "client_msg_id": "3a688372-c5c6-44b3-9393-840653cff790",
        "text": "maybe I could have 3 types for advanced cases you can pick LinkTitleEq and LinkAddressEq that override equals in different ways, I will see how far I can go with \"full equality\" and how confusing it is (as in the video where the aggregation fails if the user expected to count all links with the same label as equal)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574951564.258100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T6B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "maybe I could have 3 types for advanced cases you can pick LinkTitleEq and LinkAddressEq that override equals in different ways, I will see how far I can go with \"full equality\" and how confusing it is (as in the video where the aggregation fails if the user expected to count all links with the same label as equal)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1574957741.266100",
        "client_msg_id": "a12559a9-3811-4899-975a-47c2ca22b8e1",
        "text": "then there's the case of normalizing a link, are two links the same if the address is the same but one is http and the other https?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574951564.258100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nx8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "then there's the case of normalizing a link, are two links the same if the address is the same but one is http and the other https?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1574959815.268100",
        "client_msg_id": "42DC70B9-96D7-4B55-B956-2F4D68B919BE",
        "text": "Yeah, there were lots of very different and orthogonal things in there over the years :slightly_smiling_face: which are you specifically interested in?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SaO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, there were lots of very different and orthogonal things in there over the years "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " which are you specifically interested in?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1574964683.269900",
        "client_msg_id": "8828d79a-4b90-4de1-a058-d961348b0b3e",
        "text": "I guess what he means is that abstracting (and re-inlining) are trivial operations in Forth.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hntb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess what he means is that abstracting (and re-inlining) are trivial operations in Forth."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1574964744.270100",
        "client_msg_id": "2cf2df2f-5293-4078-a0c7-fffef8c72368",
        "text": "of code, anyway :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qIN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "of code, anyway "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1574965397.270300",
        "client_msg_id": "405c8824-2096-4558-b0e0-8b74aa5f71ce",
        "text": "I think this is the right link for my favorite talk on Forth: <https:\/\/youtube.com\/watch?v=NK0NwqF8F0k|https:\/\/youtube.com\/watch?v=NK0NwqF8F0k>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "1x Forth",
                "title_link": "https:\/\/youtube.com\/watch?v=NK0NwqF8F0k",
                "author_name": "Samuel Falvo II",
                "author_link": "https:\/\/www.youtube.com\/user\/saf271828",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/NK0NwqF8F0k\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: 1x Forth",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/NK0NwqF8F0k?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/youtube.com\/watch?v=NK0NwqF8F0k",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtube.com\/watch?v=NK0NwqF8F0k"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1NZ1Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think this is the right link for my favorite talk on Forth: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtube.com\/watch?v=NK0NwqF8F0k",
                                "text": "https:\/\/youtube.com\/watch?v=NK0NwqF8F0k"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1574965547.270600",
        "client_msg_id": "d1f7a971-a51e-4978-8d5d-e901abad90f7",
        "text": "I click \"Learn\" on <http:\/\/mech-lang.org\/home.html> and get a blank page. Presumably its trying to use its own tech to show itself off, but its not working. Any docs?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "attachments": [
            {
                "title": "The Mech Programming Language",
                "title_link": "http:\/\/mech-lang.org\/home.html",
                "text": "Mech is a language for developing data-driven, reactive systems like animations, games, and robots. It makes composing, transforming, and distributing data easy, allowing you to focus on the essential complexity of your work.",
                "fallback": "The Mech Programming Language",
                "from_url": "http:\/\/mech-lang.org\/home.html",
                "service_name": "mech-lang.org",
                "id": 1,
                "original_url": "http:\/\/mech-lang.org\/home.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uAV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I click \"Learn\" on "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/mech-lang.org\/home.html"
                            },
                            {
                                "type": "text",
                                "text": " and get a blank page. Presumably its trying to use its own tech to show itself off, but its not working. Any docs?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1574966995.271000",
        "client_msg_id": "cf11c22b-3705-4628-b99d-ff276125a726",
        "text": "What do instances of the link type denote? Do they denote the file that the URL points to, or do they denote the link itself? What operations are available on link values? Do these operations operate on the contents of the file, or do they operate on the URL? If I print a link value to the console, will I see the contents of the file, or will I see the URL? In the former case, equality should be defined on the file contents. In the latter case, equality should be defined on the URL. What you see when you print a value is a strong hint about how equality should be defined for that value. In Curv, I have a 'file' function that takes a URL as an argument, and returns the contents of the file. If I want URL equality, I use 'url1 == url2'. If I want file equality, I use 'file url1 == file url2'.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574951564.258100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zx4H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What do instances of the link type denote? Do they denote the file that the URL points to, or do they denote the link itself? What operations are available on link values? Do these operations operate on the contents of the file, or do they operate on the URL? If I print a link value to the console, will I see the contents of the file, or will I see the URL? In the former case, equality should be defined on the file contents. In the latter case, equality should be defined on the URL. What you see when you print a value is a strong hint about how equality should be defined for that value. In Curv, I have a 'file' function that takes a URL as an argument, and returns the contents of the file. If I want URL equality, I use 'url1 == url2'. If I want file equality, I use 'file url1 == file url2'."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1574967612.271200",
        "client_msg_id": "afacd9d2-ccc3-447b-acfa-5e4b814d0fb3",
        "text": "<@UCGR73CAY> ^",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pYP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGR73CAY"
                            },
                            {
                                "type": "text",
                                "text": " ^"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGR73CAY"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1574967724.271400",
        "client_msg_id": "4ddb3461-d1bf-49a0-ab54-cc0bdddea0c6",
        "text": "it's a web based application, can't link to files. The object is a link, it's the value itself and the operations operate on the link, I can't operate on the content of the url (I could have an operation to fetch the content if I wanted), can't print to the console, can only display it, if displaying it it will display itself, I could have a function to transform it into an iframe if it made sense.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574951564.258100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vw0CA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it's a web based application, can't link to files. The object is a link, it's the value itself and the operations operate on the link, I can't operate on the content of the url (I could have an operation to fetch the content if I wanted), can't print to the console, can only display it, if displaying it it will display itself, I could have a function to transform it into an iframe if it made sense."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1574971778.271600",
        "client_msg_id": "a3f17349-f232-4a8f-abf0-2e62e2fd4f49",
        "text": "What I meant is that Forth is meant to be so simple (compact, anyway) that everything about the program can be invented right there, just for that program. So everything you need to understand is immediately available and no extra layers of bloat.\n\nI haven't watched that video yet, but the description sounds like it's roughly about the same ideas",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RBxe9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What I meant is that Forth is meant to be so simple (compact, anyway) that everything about the program can be invented right there, just for that program. So everything you need to understand is immediately available and no extra layers of bloat.\n\nI haven't watched that video yet, but the description sounds like it's roughly about the same ideas"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1574972437.271800",
        "client_msg_id": "f657486f-aede-488f-8232-cded9b2e032b",
        "text": "Yeah, though I'd say Forth's flexible abstractions stem more from the culture of the community than anything technical about the language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "egsz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, though I'd say Forth's flexible abstractions stem more from the culture of the community than anything technical about the language."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1574972486.272000",
        "client_msg_id": "953566c8-021c-4ca7-b994-8ba30d13dbb7",
        "text": "ty",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lfe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ty"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1574975937.272200",
        "client_msg_id": "40788701-5164-41f7-b604-3eef0e542a79",
        "text": "<@UAVCC2X70> \"everything about the program can be invented right there, just for that program\".. but why is that? Does terseness buy you that? A versatile set of built-in functionality? Does it work beyond simple programs?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X6\/EN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": " \"everything about the program can be invented right there, just for that program\".. but why is that? Does terseness buy you that? A versatile set of built-in functionality? Does it work beyond simple programs?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1574976236.272400",
        "client_msg_id": "35f6b9f6-22de-459f-9712-f4c1eaa77072",
        "text": "I guess languages that are verbose and\/or lack convenience features do the opposite: they invite abstraction simply to try and cut down on the repeating code you're constantly writing :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qTbb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess languages that are verbose and\/or lack convenience features do the opposite: they invite abstraction simply to try and cut down on the repeating code you're constantly writing "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1574980329.297900",
        "client_msg_id": "f101fd23-f205-4209-9a63-9e34d2cd6a15",
        "text": "(Unavoidable) shared mutable state marks cooperating objects + one’s data depends on the other’s (in time) for runtime branching.\n\nCould not we explicitly restrict the access of (lets say 2) objects (1-1 methods) in time - relative to one other?\n\nWe could listen to all the relevant(!) messages to validate the access of objects for the shared state.\n\nThe dev should enumerate 2 things (for each accessing method per mutable state):\n• All the valid sequences of messages which indicate access is granted for the method. “Synced.” \n• All the valid sequences of messages which indicate access is denied for the method. “Sync needed.”\n(Modelled with Finite Automatons)\n\nWe should be also be able to determine (generate) all the relevant(!) sequences of messages (per state per accessing method) - and check if something is left out. If so, the system prompts us and we must fill put the remaining cases to “granted”\/“denied”.\n(The general idea is to always EXPLICITLY enumerate when to do and when NOT to do something so we can later check with exhaustive search.)\n\nBy relevant messages and relevant sequences of messages I mean those which by cascading through in the system (calls) might have any chance to effect the access of the method.\n\nOnly if there are too many branches (combinatorial explosion) shall we narrow EXPLICITLY the cases we think behave the same. (By defining more Finite Automatons).\n\nI have this idea for a long time now and I come back to it over and over again. Seems really simple, but did not find anything like that yet. The closest findings are something like TLA+ and Temporal Logic (especially from the complexity of CTL), but to me this process seems quite good and I am not sure why it does not exists yet. <@UCUSW7WVD> <@UDKTZSD6H>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574980329.297900",
        "reply_count": 14,
        "reply_users_count": 6,
        "latest_reply": "1575567268.088900",
        "reply_users": [
            "UCUSW7WVD",
            "UL3CJ7YKC",
            "UHDQ62M4P",
            "UAVCC2X70",
            "UBN9AFS0N",
            "U8A5MS6R1"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1574980773.298000"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1574981068.298200"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1574987369.298700"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1574987554.298900"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1574996969.299100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1575016839.299600"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1575016884.299800"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1575016939.300100"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1575418084.410900"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1575419091.411100"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1575419457.411400"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1575419479.411600"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1575562833.066600"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1575567268.088900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k0Cl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Unavoidable) shared mutable state marks cooperating objects + one’s data depends on the other’s (in time) for runtime branching.\n\nCould not we explicitly restrict the access of (lets say 2) objects (1-1 methods) in time - relative to one other?\n\nWe could listen to all the relevant(!) messages to validate the access of objects for the shared state.\n\nThe dev should enumerate 2 things (for each accessing method per mutable state):\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "All the valid sequences of messages which indicate access is granted for the method. “Synced.” "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "All the valid sequences of messages which indicate access is denied for the method. “Sync needed.”"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Modelled with Finite Automatons)\n\nWe should be also be able to determine (generate) all the relevant(!) sequences of messages (per state per accessing method) - and check if something is left out. If so, the system prompts us and we must fill put the remaining cases to “granted”\/“denied”.\n(The general idea is to always EXPLICITLY enumerate when to do and when NOT to do something so we can later check with exhaustive search.)\n\nBy relevant messages and relevant sequences of messages I mean those which by cascading through in the system (calls) might have any chance to effect the access of the method.\n\nOnly if there are too many branches (combinatorial explosion) shall we narrow EXPLICITLY the cases we think behave the same. (By defining more Finite Automatons).\n\nI have this idea for a long time now and I come back to it over and over again. Seems really simple, but did not find anything like that yet. The closest findings are something like TLA+ and Temporal Logic (especially from the complexity of CTL), but to me this process seems quite good and I am not sure why it does not exists yet. "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UDKTZSD6H"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1574980773.298000",
        "client_msg_id": "8b544383-1b1a-4b27-a673-5b6197c340e1",
        "text": "Not following this at all.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574980329.297900",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uS8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not following this at all."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1574981068.298200",
        "client_msg_id": "9fa16026-3219-4e60-b23c-c5317c89dfa5",
        "text": "Okay, I’ll try to rephrase it then.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574980329.297900",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GecW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Okay, I’ll try to rephrase it then."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNLS33M61",
        "type": "message",
        "ts": "1574983012.298400",
        "edited": {
            "user": "UNLS33M61",
            "ts": "1574985138.000000"
        },
        "client_msg_id": "c58ef9f7-f3b4-4775-ab37-03bcc6ae1759",
        "text": "Checked out Mech and it seems to be done by <@UCGR73CAY>, who I think was also on the Eve team? Couldn’t get the tutorial to work though.\n\n<@UEBG0NPDK> I think where you guys ended up was a logic programming model using a datalog variant implemented with differential dataflow for the iterations, and were firm on that being a good underlying programming model. The question with all the variations was how to best present that programming model to users, and it was unclear if it should be a wiki, a grid, or like a notebook.\n\nIt does seem like a promising direction, but my impression (and limited purview) is most people seem keen on exploring visual programming (hooking up components) or types in functional programming. Was just wondering if people decided to go in a different direction after seeing Eve for a specific reason.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g915aac3dfde",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/915aac3dfde2fb502ce415d77643a72d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Wil Chung",
            "display_name": "Wil Chung",
            "team": "T5TCAFTA9",
            "name": "iamwil",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "abrKr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Checked out Mech and it seems to be done by "
                            },
                            {
                                "type": "user",
                                "user_id": "UCGR73CAY"
                            },
                            {
                                "type": "text",
                                "text": ", who I think was also on the Eve team? Couldn’t get the tutorial to work though.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " I think where you guys ended up was a logic programming model using a datalog variant implemented with differential dataflow for the iterations, and were firm on that being a good underlying programming model. The question with all the variations was how to best present that programming model to users, and it was unclear if it should be a wiki, a grid, or like a notebook.\n\nIt does seem like a promising direction, but my impression (and limited purview) is most people seem keen on exploring visual programming (hooking up components) or types in functional programming. Was just wondering if people decided to go in a different direction after seeing Eve for a specific reason."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1574987369.298700",
        "client_msg_id": "ba861218-7491-4ff1-b370-5f9717330295",
        "text": "same here",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574980329.297900",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "15L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "same here"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1574987554.298900",
        "client_msg_id": "54dda0c9-5ec5-4d56-af44-039aafbd5bfd",
        "text": "there are several languages that have features to only allow valid sequences of method calls, usually by changing an internal state machine or chaining of state.. it sound similar to  what you're saying, but can't quite tell",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574980329.297900",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dGd36",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there are several languages that have features to only allow valid sequences of method calls, usually by changing an internal state machine or chaining of state.. it sound similar to  what you're saying, but can't quite tell"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UL3CJ7YKC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1574996969.299100",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1574996988.000000"
        },
        "client_msg_id": "9308258c-c255-4f88-80d3-3e8609b30bf7",
        "text": "I are we talking about something like this?\n\nSynchronization is only a problem in programs which allow shared mutable state, *and* parallel execution. Get rid of one or the other, and suddenly you don't need synchronization mechanisms like locks, semaphores, mutexes, etc.\n\nIt sounds like the topic is about using static code analysis to prove when code is not synchronous anyway, or otherwise under what conditions it isn't vulnerable to certain synchronization problems with shared mutable state.\n\nAnd having determined this, the compiler (or something else) can make some sort of guarantee or restriction or optimization or call it an error if synchronization mechanisms are not put in place, or something.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574980329.297900",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LrXfy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I are we talking about something like this?\n\nSynchronization is only a problem in programs which allow shared mutable state, "
                            },
                            {
                                "type": "text",
                                "text": "and",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " parallel execution. Get rid of one or the other, and suddenly you don't need synchronization mechanisms like locks, semaphores, mutexes, etc.\n\nIt sounds like the topic is about using static code analysis to prove when code is not synchronous anyway, or otherwise under what conditions it isn't vulnerable to certain synchronization problems with shared mutable state.\n\nAnd having determined this, the compiler (or something else) can make some sort of guarantee or restriction or optimization or call it an error if synchronization mechanisms are not put in place, or something."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]