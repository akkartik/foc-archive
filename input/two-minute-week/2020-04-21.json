[
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1587459566.082400",
        "client_msg_id": "6C42B247-64CD-4890-B3A4-55BF31BA7FFA",
        "text": "Awesome! Seeing the kernal packaging, it looks like a lot of code wouldn't have had to be included. Do you see a future where it could include only the parts necessary for your code?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587367625.063900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "InY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Awesome! Seeing the kernal packaging, it looks like a lot of code wouldn't have had to be included. Do you see a future where it could include only the parts necessary for your code?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1587459883.087800",
        "client_msg_id": "5D59C1DC-A760-4C2E-A73A-3CA7131B1084",
        "text": "Like the syntax! It feels high-level without shying away from the low-level connection. I feel like I can understand what's going on, much more so than with either c or assembly.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587367625.063900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bqDe4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Like the syntax! It feels high-level without shying away from the low-level connection. I feel like I can understand what's going on, much more so than with either c or assembly."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1587460030.089800",
        "client_msg_id": "78DB54A8-B873-4F09-A468-9D2FCB26B1C3",
        "text": "Looking forward to see the tracing ui + testing principles in action :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587367625.063900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zRI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looking forward to see the tracing ui + testing principles in action :)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1587460152.090100",
        "client_msg_id": "cc80a528-5bf2-4da8-b537-27e7b6c27447",
        "text": "I really like the ideas of DI for syscalls and testing traces",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587367625.063900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+58s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really like the ideas of DI for syscalls and testing traces"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1587461435.096400",
        "edited": {
            "user": "UNCP67JSK",
            "ts": "1587461800.000000"
        },
        "client_msg_id": "018DF7D2-2734-48B9-939C-373711CF6428",
        "text": "Cool! Re ui: animations can help us follow what's happening, or make us confused. Usually, it's good to only move what we're already focused at. The \"fluidity\" of the interface looks really cool, though I imagine refining it could make it nicer\/less jarring to work with :) Though it looks really cool.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587232993.031500",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jW=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cool! Re ui: animations can help us follow what's happening, or make us confused. Usually, it's good to only move what we're already focused at. The \"fluidity\" of the interface looks really cool, though I imagine refining it could make it nicer\/less jarring to work with :) Though it looks really cool."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1587474565.096800",
        "client_msg_id": "341391fb-aa32-4894-baaf-8c37cc761074",
        "text": "<@UNCP67JSK> Yeah animations is something I discovered is important many years ago.\nWhen I was experimenting with visual programming, I made an experiment with automatic layout, see <https:\/\/github.com\/yairchu\/old-lang-demo-0>\nand before adding animations I found that I could not demo it to anyone because people just couldn’t follow the changes when everything’s layed out differently.\nWe kept this lesson in Lamdu even though it’s a much layout with simpler changes. But it’s nice for structural refactorings like extracting a function where you can follow what moves where etc.\nAs for making it move only on what you’re focused at, how could the system know what you are focusing at?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587232993.031500",
        "parent_user_id": "U79HM6726",
        "attachments": [
            {
                "fallback": "yairchu\/old-lang-demo-0",
                "text": "Archive of a visual programming experiment I made in 2007",
                "title": "yairchu\/old-lang-demo-0",
                "footer": "<https:\/\/github.com\/yairchu\/old-lang-demo-0|yairchu\/old-lang-demo-0>",
                "id": 1,
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "ts": 1587474015,
                "color": "24292f",
                "fields": [
                    {
                        "title": "Language",
                        "value": "Python",
                        "short": true
                    },
                    {
                        "title": "Last updated",
                        "value": "3 minutes ago",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text",
                    "fields"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https:\/\/github.com\/yairchu\/old-lang-demo-0",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k75",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UNCP67JSK"
                            },
                            {
                                "type": "text",
                                "text": " Yeah animations is something I discovered is important many years ago.\nWhen I was experimenting with visual programming, I made an experiment with automatic layout, see "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/yairchu\/old-lang-demo-0"
                            },
                            {
                                "type": "text",
                                "text": "\nand before adding animations I found that I could not demo it to anyone because people just couldn’t follow the changes when everything’s layed out differently.\nWe kept this lesson in Lamdu even though it’s a much layout with simpler changes. But it’s nice for structural refactorings like extracting a function where you can follow what moves where etc.\nAs for making it move only on what you’re focused at, how could the system know what you are focusing at?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1587477457.097100",
        "client_msg_id": "ca074a78-a958-4ade-9918-3e68659f002c",
        "text": "focus=&gt;the currently \"selected\" area; One initial thing I would try: reduce \"bouncy\" motion, eg. from expand quickly followed by contract;\n\neg. 0:20: the \"hole\" shows an \"a\" underneath it, the gets removed when entering \"1\" into the hole, quickly followed by enter, which again expands the box (leading to a \"bouncy\" motion) - try a \"debounce\" on size change, to smooth it out, eg. the boxes only ever expands during writing, only shrinks when no key has been pressed for x ms (eg. 350 ms).\n\nAlso, on 0:21, instead of moving all the characters, only \"add\" new characters, then, after delay, contract down\/translate the text back in.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587232993.031500",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9xYQ2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "focus=>the currently \"selected\" area; One initial thing I would try: reduce \"bouncy\" motion, eg. from expand quickly followed by contract;\n\neg. 0:20: the \"hole\" shows an \"a\" underneath it, the gets removed when entering \"1\" into the hole, quickly followed by enter, which again expands the box (leading to a \"bouncy\" motion) - try a \"debounce\" on size change, to smooth it out, eg. the boxes only ever expands during writing, only shrinks when no key has been pressed for x ms (eg. 350 ms).\n\nAlso, on 0:21, instead of moving all the characters, only \"add\" new characters, then, after delay, contract down\/translate the text back in."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1587477844.097300",
        "client_msg_id": "8c2533aa-793a-48d8-bddc-1a710f9f70d7",
        "text": "<@UNCP67JSK> delaying contractions is a really good idea, thanks. Will definitely consider it :slightly_smiling_face:\nWe are aware that things are changing too much and something else we’re going to do is UX changes which will make things more insertion oriented",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587232993.031500",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "STx=7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UNCP67JSK"
                            },
                            {
                                "type": "text",
                                "text": " delaying contractions is a really good idea, thanks. Will definitely consider it "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\nWe are aware that things are changing too much and something else we’re going to do is UX changes which will make things more insertion oriented"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1587478544.097600",
        "edited": {
            "user": "UNCP67JSK",
            "ts": "1587478601.000000"
        },
        "client_msg_id": "88b5dfdd-249e-44a1-868f-4e37adc0c649",
        "text": "Ah, that sounds great! A couple other observations:\n\n0:23, the \"result preview\" box content is centered, making it move unnecessarily during editing, keeping it aligned to the \"root\"\/fixed point of the tree (eg. left for ltr, right for rtl, etc) would avoid that. Also, because its content is bright, it makes it even more attention-grabbing.\n\nAlt: instead of collapsing on write-pause, collapse on de-focus-up (eg. when selecting parent node) - this would make each animation \"expected\". Make each animation intentional: eg. 0:31 seems to do multiple things with the \"result box\"; the text changes color, and relative pos to box, and scales (what about treating it as one thing and just fading it away). Moments later, it pops back up again (debounce it?). At 0:32, the suggestion box moves back and fourth once, accident or intentional?\n\nAnyhow, neat project! Looking forward to see how it develops :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587232993.031500",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UsY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, that sounds great! A couple other observations:\n\n0:23, the \"result preview\" box content is centered, making it move unnecessarily during editing, keeping it aligned to the \"root\"\/fixed point of the tree (eg. left for ltr, right for rtl, etc) would avoid that. Also, because its content is bright, it makes it even more attention-grabbing.\n\nAlt: instead of collapsing on write-pause, collapse on de-focus-up (eg. when selecting parent node) - this would make each animation \"expected\". Make each animation intentional: eg. 0:31 seems to do multiple things with the \"result box\"; the text changes color, and relative pos to box, and scales (what about treating it as one thing and just fading it away). Moments later, it pops back up again (debounce it?). At 0:32, the suggestion box moves back and fourth once, accident or intentional?\n\nAnyhow, neat project! Looking forward to see how it develops "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1587480132.097900",
        "client_msg_id": "ea8294f5-b6a4-4fc0-8a9f-99a74148aebb",
        "text": "Thanks both! <@UNCP67JSK> yeah the kernel is coming from a personal fork, and I've spent some time stripping out code from it. Went from 27M to 12M LoC. But I don't really know what I'm doing. Still haven't made use of the network stack or frame buffer.\n\nI've also experimented with a hobbyist OS that is just 33k LoC of C++. That seems more tractable.\n\nBut the OS side has been on hold for a while as I wrap up the language. Couple more months, I think.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587367625.063900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Xw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks both! "
                            },
                            {
                                "type": "user",
                                "user_id": "UNCP67JSK"
                            },
                            {
                                "type": "text",
                                "text": " yeah the kernel is coming from a personal fork, and I've spent some time stripping out code from it. Went from 27M to 12M LoC. But I don't really know what I'm doing. Still haven't made use of the network stack or frame buffer.\n\nI've also experimented with a hobbyist OS that is just 33k LoC of C++. That seems more tractable.\n\nBut the OS side has been on hold for a while as I wrap up the language. Couple more months, I think."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1587498310.098400",
        "client_msg_id": "bea68a37-2e59-4f42-bde5-4c33b2eecf21",
        "text": "<@UAVCC2X70> btw, just found this discussion that we had two years ago in your GitHub repo that helped me to understand the need for generic tree editor: <https:\/\/github.com\/d-cook\/SomethingNew\/issues\/24|https:\/\/github.com\/d-cook\/SomethingNew\/issues\/24>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586970893.017500",
        "parent_user_id": "UCKRZS3DZ",
        "attachments": [
            {
                "author_name": "vladimir-vg",
                "fallback": "[d-cook\/SomethingNew] #24 A step higher than teletype text stream",
                "text": "Hey everyone. Recently I've read this article and really liked some plain ideas that seem to be unnoticed.  \n<https:\/\/programmingmadecomplicated.wordpress.com\/2017\/08\/12\/there-is-only-one-os-and-its-been-obsolete-for-decades\/|https:\/\/programmingmadecomplicated.wordpress.com\/2017\/08\/12\/there-is-only-one-os-and-its-been-obsolete-for-decades\/>\n\n&gt; Why do so many languages have a function called print instead of write or something else? They were influenced by C. Ever wonder why C called it so? Now you know. It literally printed ink onto paper.  \n&gt; ...  \n&gt; this is still the only way we can get anything done in the world of programming! Typing textual orders into a “terminal” or “console” application—nothing more than an emulator for the teletype!\n\nSo I got this feeling that there must be an API that would replace text pipes that we enjoy today in Unix world. Maybe this API is not discovered yet, but it definitely will be discovered sooner or later (just like lisp was discovered). What it should look like then?\n\n&gt; Everything should be made as simple as possible, but not simpler.\n\nCurrently I think about it on the level of the API, not on a transport level. I don't know will it use TCP or UDP sockets, or Unix pipes, or how it gonna be encoded, it unrelated for now.\n\nHere are my thoughts:\n\n1. Very simple API that is easy to implement on many platforms without mistakes.\n2. Convenient for providing access to complicated nested data between different programs.\n3. Convenient for inspecting remote object (say, interface for debugging).\n4. Don't demand any prerequisites for reading, filtering or transmitting. No prerequisite dependencies should be required: no grammar or types (unlike Protobuf or ASN.1).\n5. Suitable for delivering structured logs and events.\n\nSome related ideas to think about: <https:\/\/www.youtube.com\/watch?v=1O8PwkXfDJg|https:\/\/www.youtube.com\/watch?v=1O8PwkXfDJg>  \nGraphQL also reminds something like that, but looks too complicated. Must be simpler.\n\nI've implemented something similar when I was working on complicated frontend code. A big tree of objects, to different parts of which you may subscribe and receive diffs. These diffs are accepted on other side and might be applied to get fresh information that we're interested in.\n\nThis idea of sending diffs for a tree which may be saved and applied at any moment in timeline is really beautiful. You got updates for your data and also the history of changes. It Very similar to VCS textual diffs, but for trees (AST ?).\n\n```\ndiff: { resource1: { status: started, startedAt: 1 } }\ndiff: { resource1: { status: stopped, stoppedAt: 2 } }\n----------\ntree: { resource1: { status: stopped, startedAt: 1, stoppedAt: 2 } }\n\n```\n\nSame trees might be used to deliver changes in AST during code editing.\n\nYet this API certainly gonna be used for delivering logs and events. Providing keys for each event is tiresome and requires to maintain state. So it must provide not only nested trees, but also sequences of objects.\n\n```\nseq: {event: \"app start\", at: 1}\nseq: {event: \"function-call start\", at: 2, funcName: \"foobar\", args: [1, 2]}\nseq: {event: \"app stop\", at: 5}\n\n```\n\nThen it came to me that this way we can integrate existing pipe-based outputs as sequences of binaries that are split by new line or by arbitrary size (say, size of the buffer).\n\nOne of the painful things when you deal with pipes is that everything is one-channel sequential. If you want to provide several kinds of data then you have to make interleaving, or create additional pipe.\n\nSo it came just natural that this API should be able to provide several channels of data, that allow you to filter out data you don't need. In these terms normal unix application provides two output channels: stdout and stderr. In this API you would be able to have many of them.\n\nHere are some questions to consider: should channels have type (tree or sequence)? Should we think about trees as sequence of diff objects, therefore just sequence? Or maybe allow every channel have sequence and tree under same name? This looks somewhat convenient with HTTP requests: having body as a sequence and headers and meta info as a tree.\n\nI can easily see this API being used for everyday problems with that sed, awk, grep used to solve. This API will naturally have some kind of shell environment (language?), position which held by bash in today world. An IDE where you observe flowing data, just like how you observe in now in DevTools in Chrome.\n\nBut that's really complicated issue, and I would love to hear feedback about written above first.",
                "title": "#24 A step higher than teletype text stream",
                "footer": "<https:\/\/github.com\/d-cook\/SomethingNew|d-cook\/SomethingNew>",
                "id": 1,
                "title_link": "https:\/\/github.com\/d-cook\/SomethingNew\/issues\/24",
                "author_link": "https:\/\/github.com\/vladimir-vg",
                "author_icon": "https:\/\/avatars1.githubusercontent.com\/u\/227746?v=4",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "ts": 1527348577,
                "color": "36a64f",
                "fields": [
                    {
                        "title": "Comments",
                        "value": "16",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https:\/\/github.com\/d-cook\/SomethingNew\/issues\/24",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/BPlq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": " btw, just found this discussion that we had two years ago in your GitHub repo that helped me to understand the need for generic tree editor: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/d-cook\/SomethingNew\/issues\/24",
                                "text": "https:\/\/github.com\/d-cook\/SomethingNew\/issues\/24"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1587531688.099400",
        "client_msg_id": "955B70A4-3787-40C8-B27E-38BE7AA60D49",
        "text": "thanks!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587245666.042200",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e4kPS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1587536351.100300",
        "client_msg_id": "39bc0f39-ef7e-4b00-976b-fb2e8962b00c",
        "text": "Great inspiring demo! It makes pop up lots of ideas and questions. Some have already been discussed in the thread.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587367625.063900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aNGX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great inspiring demo! It makes pop up lots of ideas and questions. Some have already been discussed in the thread."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1587536465.100500",
        "client_msg_id": "57802aac-de2e-414e-a1c4-e4ad78ddef41",
        "text": "Another one. What do you think about emitting WebAssembly? Is this something you find interesting? Do you think it fits with Mu goal? And its design?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587367625.063900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e9Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another one. What do you think about emitting WebAssembly? Is this something you find interesting? Do you think it fits with Mu goal? And its design?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]