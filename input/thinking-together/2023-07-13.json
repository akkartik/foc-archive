[
    {
        "user": "U05F1NMU93M",
        "type": "message",
        "ts": "1689247439.140759",
        "client_msg_id": "8e1ef22b-2102-48e0-97fc-eb8d61bf14b4",
        "text": "When I started out as a junior developer I was yearning to be mentored. But I received the message from my leads that I do a great job, and I should strive to be more independent, do things my own way. At my next job I worked in a team where I was the only one with a programming degree and experience so again there could not have been any mentoring.\n\nAnd at my last job I was working with great people and my leads were open to mentoring me. But here I experienced that they did not have a talent for it yet, they did not really listen to my problems, just giving me general good advice. For me that resembles more like watching youtube videos about programming then an actual two way discussion.\n\nWhen I tried to teach people younger then me I also noticed the ego problems that <@U013WBS1B1C> mentioned. A lot of times young developers just want to play around with their own solutions, and they don't want to deal with learning something. Also I met people who openly said they are doing this for the money, and they don't care about learning if they don't need to. And of course developers mainly care about technologies, libraries, tools and programming tricks. Its very hard to have discussions about the human side of the job, communication skills, psychological safety, etc, although these can have a lot more impact on day to day work and these are the things that are not taught in programming courses.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "910b5c62aa7e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-06-30\/5524523243329_910b5c62aa7e5071a90b_72.jpg",
            "first_name": "Máté",
            "real_name": "Máté Hidvégi",
            "display_name": "Máté Hidvégi",
            "team": "T5TCAFTA9",
            "name": "mhidvegi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689017004.403839",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yrQ9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When I started out as a junior developer I was yearning to be mentored. But I received the message from my leads that I do a great job, and I should strive to be more independent, do things my own way. At my next job I worked in a team where I was the only one with a programming degree and experience so again there could not have been any mentoring.\n\nAnd at my last job I was working with great people and my leads were open to mentoring me. But here I experienced that they did not have a talent for it yet, they did not really listen to my problems, just giving me general good advice. For me that resembles more like watching youtube videos about programming then an actual two way discussion.\n\nWhen I tried to teach people younger then me I also noticed the ego problems that "
                            },
                            {
                                "type": "user",
                                "user_id": "U013WBS1B1C"
                            },
                            {
                                "type": "text",
                                "text": " mentioned. A lot of times young developers just want to play around with their own solutions, and they don't want to deal with learning something. Also I met people who openly said they are doing this for the money, and they don't care about learning if they don't need to. And of course developers mainly care about technologies, libraries, tools and programming tricks. Its very hard to have discussions about the human side of the job, communication skills, psychological safety, etc, although these can have a lot more impact on day to day work and these are the things that are not taught in programming courses."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013WBS1B1C"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U04E5QAD6DD",
        "type": "message",
        "ts": "1689252225.662369",
        "client_msg_id": "e0c68c7b-a5e8-4b91-95b5-24dfbe829bd5",
        "text": "Darn. But makes sense. Thanks!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e3e6bba2ae45",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-06\/5085861186081_e3e6bba2ae4575d17358_72.jpg",
            "first_name": "David",
            "real_name": "David Alan Hjelle",
            "display_name": "David Alan Hjelle",
            "team": "T5TCAFTA9",
            "name": "dahjelle_futureofcodi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689118227.745139",
        "parent_user_id": "U05597GCDDK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+zk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Darn. But makes sense. Thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1689263272.810609",
        "client_msg_id": "fb6a43ed-e53e-4b1d-9f6c-ccc68d772474",
        "text": "&gt; Also I met people who openly said they are doing this for the money, and they don’t care about learning if they don’t need to.\nWhile I understand the drive to maximize the rate at which one can trade labor for capital, I do not enjoy working with people who approach their work (their lives!) from this perspective. :disappointed:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689017004.403839",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RDw",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also I met people who openly said they are doing this for the money, and they don’t care about learning if they don’t need to."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "While I understand the drive to maximize the rate at which one can trade labor for capital, I do not enjoy working with people who approach their work (their lives!) from this perspective. "
                            },
                            {
                                "type": "emoji",
                                "name": "disappointed",
                                "unicode": "1f61e"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U055V4HCHU7",
        "type": "message",
        "ts": "1689266769.636979",
        "client_msg_id": "e168f80a-4387-4d27-831a-7c77d8622828",
        "text": "I noticed pretty early on in undergrad that my peers could be roughly broken down into categories.\n• those who were in it purely for the money\n• those who were interested but not convinced that software was their calling\n• those who ate, drank, bled, and obsessed over software\nI also found that people's success and happiness in their career was strongly correlated. Nothing groundbreaking about that observation and it can probably be applied to most fields of study. BUT I also noticed that ego in that last category could run rampant -- in myself even. I think mentors actually serve to reduce that ego -- to show their mentees just how big the pond really is.\n\nYou don't know what you don't know. But once you know how much there is you don't, you're forced to either adopt that beginners mindset (good) or dig your heels in (bad)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "141ca9fd8fff",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-04\/5210750326597_141ca9fd8fff00418f9b_72.jpg",
            "first_name": "Walker",
            "real_name": "Walker Griggs",
            "display_name": "Walker Griggs",
            "team": "T5TCAFTA9",
            "name": "walker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689017004.403839",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3m7W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I noticed pretty early on in undergrad that my peers could be roughly broken down into categories.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "those who were in it purely for the money"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "those who were interested but not convinced that software was their calling"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "those who ate, drank, bled, and obsessed over software"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI also found that people's success and happiness in their career was strongly correlated. Nothing groundbreaking about that observation and it can probably be applied to most fields of study. BUT I also noticed that ego in that last category could run rampant -- in myself even. I think mentors actually serve to reduce that ego -- to show their mentees just how big the pond really is.\n\nYou don't know what you don't know. But once you know how much there is you don't, you're forced to either adopt that beginners mindset (good) or dig your heels in (bad)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U055V4HCHU7",
        "type": "message",
        "ts": "1689266852.897339",
        "client_msg_id": "50eca468-3944-4580-afa0-2ddf77763c9d",
        "text": "&gt; It's an \"apprenticeship scheme\", which is a <https:\/\/www.apprenticeships.gov.uk\/#|national government thing> here. Apprenticeship' just means that it's officially recognised here.\n<@U03R0B9U1GD> I really like this. I'll give it a read through. I didn't know that is was govt supported",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "141ca9fd8fff",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-04\/5210750326597_141ca9fd8fff00418f9b_72.jpg",
            "first_name": "Walker",
            "real_name": "Walker Griggs",
            "display_name": "Walker Griggs",
            "team": "T5TCAFTA9",
            "name": "walker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689017004.403839",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jB\/6p",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's an \"apprenticeship scheme\", which is a "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.apprenticeships.gov.uk\/#",
                                "text": "national government thing"
                            },
                            {
                                "type": "text",
                                "text": " here. Apprenticeship' just means that it's officially recognised here."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U03R0B9U1GD"
                            },
                            {
                                "type": "text",
                                "text": " I really like this. I'll give it a read through. I didn't know that is was govt supported"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013WBS1B1C",
        "type": "message",
        "ts": "1689270345.960699",
        "edited": {
            "user": "U013WBS1B1C",
            "ts": "1689270437.000000"
        },
        "client_msg_id": "d4c5d858-1839-4802-9ba7-ee007755568e",
        "text": "For me, a related area to mentoring is community leadership. I've seen many people and manners of interaction. It helped me see that someone (I'll call out the especially smart ones; the elite) didn't just resist me or my ideas, but almost anyone. They could also be hard on those of us not as gifted or adept. Encouraging empathy here, and trying to get them to do the mentoring has helped at times. Not always, but I love, love, love, to see someone else get that big Thank You for their help and seeing it affect their future interactions. We can all fall back on habits of course, but it's a journey, right? And this empathy has to go both ways, because we get some very special people in the modern view of neurodiversity, and dealing with that is hard as well. We all need each other.\n\nSome of us are deeply connected this craft, but we're still social creatures with all that history in play as well.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "99d013fa8bfb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-07-05\/2248942033796_99d013fa8bfb537f563a_72.jpg",
            "first_name": "",
            "real_name": "Gregg Irwin",
            "display_name": "Gregg Irwin",
            "team": "T5TCAFTA9",
            "name": "gregg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689017004.403839",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fRe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For me, a related area to mentoring is community leadership. I've seen many people and manners of interaction. It helped me see that someone (I'll call out the especially smart ones; the elite) didn't just resist me or my ideas, but almost anyone. They could also be hard on those of us not as gifted or adept. Encouraging empathy here, and trying to get them to do the mentoring has helped at times. Not always, but I love, love, love, to see someone else get that big Thank You for their help and seeing it affect their future interactions. We can all fall back on habits of course, but it's a journey, right? And this empathy has to go both ways, because we get some very special people in the modern view of neurodiversity, and dealing with that is hard as well. We all need each other.\n\nSome of us are deeply connected this craft, but we're still social creatures with all that history in play as well."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03LJBR6THT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013WBS1B1C",
        "type": "message",
        "ts": "1689270641.060179",
        "client_msg_id": "82df0f6d-45f5-4185-aabd-3ecc2ff848c6",
        "text": "Living my own example, as a re-newbie here, I'm flooding thoughts out that I haven't had a chance to get out otherwise, so I appreciate everyone's patience with that. :^)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "99d013fa8bfb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-07-05\/2248942033796_99d013fa8bfb537f563a_72.jpg",
            "first_name": "",
            "real_name": "Gregg Irwin",
            "display_name": "Gregg Irwin",
            "team": "T5TCAFTA9",
            "name": "gregg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689017004.403839",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nj+aW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Living my own example, as a re-newbie here, I'm flooding thoughts out that I haven't had a chance to get out otherwise, so I appreciate everyone's patience with that. :^)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1689280926.077849",
        "text": "I think this topic, based as it is on personal experience, deserves better visibility, so hopefully Rachel won't mind my reposting it here! :hugging_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689280926.077849",
        "reply_count": 2,
        "reply_users_count": 1,
        "latest_reply": "1689438033.723869",
        "reply_users": [
            "UE6EFEPTQ"
        ],
        "replies": [
            {
                "user": "UE6EFEPTQ",
                "ts": "1689282918.483549"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1689438033.723869"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "ts": "1689280707.819959",
                "author_id": "U05GBBD8FPY",
                "channel_id": "CC2JRGVLK",
                "channel_team": "T5TCAFTA9",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T5TCAFTA9",
                        "channel": "CC2JRGVLK",
                        "ts": "1689280707.819959",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "EIEQj",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "hey both! thanks for replying here.. as per your question Joe, I would consider someone a software engineer if they know how to code - whether they have a CS degree, or did a bootcamp, or learned on their own. Someone who can code and build applications. I have no formal training in coding. However, I am excited about the potential of AI to help me make an app by generating code for me.\n\nTo answer your question Duncan - I've mostly been using a combination of asking chatGPT for the steps and code, and also using an app I am working on with a cofounder called Sublayer. We noticed that the chat interface is not really the best interface for building (and changing) complex apps, but we're still exploring the right workflow for it. Definitely eager to learn from this group how others are getting the best code generation out of the existing LLMs."
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/CC2JRGVLK\/p1689280707819959?thread_ts=1689198395.927909&cid=CC2JRGVLK",
                "is_share": true,
                "fallback": "[July 13th, 2023 9:38 PM] rachel: hey both! thanks for replying here.. as per your question Joe, I would consider someone a software engineer if they know how to code - whether they have a CS degree, or did a bootcamp, or learned on their own. Someone who can code and build applications. I have no formal training in coding. However, I am excited about the potential of AI to help me make an app by generating code for me.\n\nTo answer your question Duncan - I've mostly been using a combination of asking chatGPT for the steps and code, and also using an app I am working on with a cofounder called Sublayer. We noticed that the chat interface is not really the best interface for building (and changing) complex apps, but we're still exploring the right workflow for it. Definitely eager to learn from this group how others are getting the best code generation out of the existing LLMs.",
                "text": "hey both! thanks for replying here.. as per your question Joe, I would consider someone a software engineer if they know how to code - whether they have a CS degree, or did a bootcamp, or learned on their own. Someone who can code and build applications. I have no formal training in coding. However, I am excited about the potential of AI to help me make an app by generating code for me.\n\nTo answer your question Duncan - I've mostly been using a combination of asking chatGPT for the steps and code, and also using an app I am working on with a cofounder called Sublayer. We noticed that the chat interface is not really the best interface for building (and changing) complex apps, but we're still exploring the right workflow for it. Definitely eager to learn from this group how others are getting the best code generation out of the existing LLMs.",
                "author_name": "Rachel Price Sitman",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/U05GBBD8FPY",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2023-07-11\/5564493847780_735d9fdee4bfd7b8b5b8_48.jpg",
                "author_subname": "Rachel Price Sitman",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sIZz2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think this topic, based as it is on personal experience, deserves better visibility, so hopefully Rachel won't mind my reposting it here! "
                            },
                            {
                                "type": "emoji",
                                "name": "hugging_face",
                                "unicode": "1f917"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1689282918.483549",
        "client_msg_id": "6b63d8f4-258c-4efa-86cc-58ebb8fa56c0",
        "text": ".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689280926.077849",
        "parent_user_id": "UE6EFEPTQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fmj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1689286791.149829",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1689286841.000000"
        },
        "client_msg_id": "29642566-253b-4186-b21e-6bf2fcdc9552",
        "text": "&gt; I enjoyed the little tangent on expressivity in the latest episode. I've had thoughts on this recently and it prompted me to skim Felleisen's paper. I really resonated with the hosts' reframing of expressivity as being the part of the language that's oriented towards the programmer, not towards the machine.\nMany decades ago I coined the acronym \"DTIL\" or Domain and Target Independent Language, to clarify what I was seeking in my Perfect Programming Language. Meaning: a language that's not in any way constrained by the machine (the Target) OR the Domain of application. A pure language of thought. A language that allows expression by humans in their most intuitive way of what they wanted the computer to manifest for them. So a cognitive-oriented programming language, but I was only allowing a formalism or symbolic mechanism, rather than in any way a natural language, which I saw as redundancy-heavy and fuzzy.\n\nDeclarative languages immediately stood out and wiped out Imperative languages for me, as these had too much Target (machine) orientation. The Declarative mantra \"What not How\" gives it away: just say What you want, don't tell the machine laboriously How to do it.\n\n&gt; I currently think that most programmers, when talking about \"expressivity\", actually mean essentially two things:\n&gt; 1. I can use my own words\n&gt; 2. I am not restricted by grammar\n&gt; \n&gt; These things are strongly tied to writing, as that's still how we do most of our coding.\nHmm, then that's \"just\" asking ChatGPT!\n\n&gt; \"Using my own words\" is literally that - in any given chunk of source text, how many of the words were chosen by the programmer (e.g. to be particular to their domain or their theory of the program) and how many were specified by the language or environment? Punctuation, I think, also counts as words the programmer didn't get to choose. Random examples:\n&gt; • In Ruby, one can create little DSLs where almost all words in a specific part of the code are \"my own words\"\n&gt; • In assembly languages, the programmer can choose almost none of the words (except labels?)\n&gt; • Being able to rename imported symbols lets the programmer choose their own words in specific contexts (same goes for type aliases, etc.)\n&gt; • Languages with few keywords should tend to have more words chosen by the programmer... or at least, by the authors of the standard library?\nIt's important in a DTIL that the mechanisms available are pure and singular: there should be only one language representation of each cognitive entity and nothing that biases the language to either a machine or a domain. Ideally the whole base syntax should be just half a dozen unique things (like symbol, sequence, structure, consequence).\n\nAn important aspect of this whole conception is that data should be simply strings or text and structures of that. If you have a \"double\" - rather than a \"float\" or \"int\"- you're immediately binding yourself to machine concepts, as provided to you by the FPU. In reality, humans don't think like that, we simply write our \"data\" in text. So spreadsheets and Awk have some precedent there.\n\nThis leads to the (apparently radical) concept of type being simply syntax: if you parse a string or structure in a way that's meaningful to you, you've made your own type matcher and thus your own type. You don't have to be bound by the types in the mind of the originator of some data, or by the types the machine supports best.\n\n&gt; I equate being \"unrestricted by grammar\" roughly to whether a language is statement-oriented or expression-oriented. The Austral spec has a great section on why it chose to be statement-oriented, and concludes that \"a statement-oriented syntax is less simple, but it forces code to be structurally simple\": <https:\/\/austral-lang.org\/spec\/spec.html#stmt-orientation>\n&gt; \n&gt; In Austral, it's an ideological choice to force programs into a certain shape. But in general, it seems to me that languages with less \"grammatical restrictions\" in their parser are described as more expressive. Maybe this is just correlation with other features of those languages.\nNot sure about the statement- vs expression-oriented thing, but again, simplicity and power are key to maximising human expression of virtual stuff and their desired behaviours.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689118227.745139",
        "parent_user_id": "U05597GCDDK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a21",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I enjoyed the little tangent on expressivity in the latest episode. I've had thoughts on this recently and it prompted me to skim Felleisen's paper. I really resonated with the hosts' reframing of expressivity as being the part of the language that's oriented towards the programmer, not towards the machine."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nMany decades ago I coined the acronym \"DTIL\" or Domain and Target Independent Language, to clarify what I was seeking in my Perfect Programming Language. Meaning: a language that's not in any way constrained by the machine (the Target) OR the Domain of application. A pure language of thought. A language that allows expression by humans in their most intuitive way of what they wanted the computer to manifest for them. So a cognitive-oriented programming language, but I was only allowing a formalism or symbolic mechanism, rather than in any way a natural language, which I saw as redundancy-heavy and fuzzy.\n\nDeclarative languages immediately stood out and wiped out Imperative languages for me, as these had too much Target (machine) orientation. The Declarative mantra \"What not How\" gives it away: just say What you want, don't tell the machine laboriously How to do it.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I currently think that most programmers, when talking about \"expressivity\", actually mean essentially two things:"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I can use my own words"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I am not restricted by grammar"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 1
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThese things are strongly tied to writing, as that's still how we do most of our coding."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nHmm, then that's \"just\" asking ChatGPT!\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Using my own words\" is literally that - in any given chunk of source text, how many of the words were chosen by the programmer (e.g. to be particular to their domain or their theory of the program) and how many were specified by the language or environment? Punctuation, I think, also counts as words the programmer didn't get to choose. Random examples:"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "In Ruby, one can create little DSLs where almost all words in a specific part of the code are \"my own words\""
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "In assembly languages, the programmer can choose almost none of the words (except labels?)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Being able to rename imported symbols lets the programmer choose their own words in specific contexts (same goes for type aliases, etc.)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Languages with few keywords should tend to have more words chosen by the programmer... or at least, by the authors of the standard library?"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 1
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIt's important in a DTIL that the mechanisms available are pure and singular: there should be only one language representation of each cognitive entity and nothing that biases the language to either a machine or a domain. Ideally the whole base syntax should be just half a dozen unique things (like symbol, sequence, structure, consequence).\n\nAn important aspect of this whole conception is that data should be simply strings or text and structures of that. If you have a \"double\" - rather than a \"float\" or \"int\"- you're immediately binding yourself to machine concepts, as provided to you by the FPU. In reality, humans don't think like that, we simply write our \"data\" in text. So spreadsheets and Awk have some precedent there.\n\nThis leads to the (apparently radical) concept of type being simply syntax: if you parse a string or structure in a way that's meaningful to you, you've made your own type matcher and thus your own type. You don't have to be bound by the types in the mind of the originator of some data, or by the types the machine supports best.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I equate being \"unrestricted by grammar\" roughly to whether a language is statement-oriented or expression-oriented. The Austral spec has a great section on why it chose to be statement-oriented, and concludes that \"a statement-oriented syntax is less simple, but it forces code to be structurally simple\": "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/austral-lang.org\/spec\/spec.html#stmt-orientation"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIn Austral, it's an ideological choice to force programs into a certain shape. But in general, it seems to me that languages with less \"grammatical restrictions\" in their parser are described as more expressive. Maybe this is just correlation with other features of those languages."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nNot sure about the statement- vs expression-oriented thing, but again, simplicity and power are key to maximising human expression of virtual stuff and their desired behaviours."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1689286973.508699",
        "client_msg_id": "ee7fd4bb-093a-4904-93e3-00757bc05cd6",
        "text": "Grand Plans, but over 4 decades later I'm still working on it! :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689118227.745139",
        "parent_user_id": "U05597GCDDK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rs1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Grand Plans, but over 4 decades later I'm still working on it! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1689287064.559459",
        "client_msg_id": "e85e8344-b8c7-488e-9c3b-4dabcf4704bc",
        "text": "It was kinda spooky when the phrase \"DSL\" appeared, and of course I immediately knew it would be anything I wanted!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689118227.745139",
        "parent_user_id": "U05597GCDDK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gq3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It was kinda spooky when the phrase \"DSL\" appeared, and of course I immediately knew it would be anything I wanted!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]