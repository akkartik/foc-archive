[
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1710947097.533449",
        "edited": {
            "user": "U016VUZGUUQ",
            "ts": "1710947157.000000"
        },
        "client_msg_id": "d3eae0f3-4502-4d85-90ec-2bf6862fece1",
        "text": "Personally in this case I would lean toward more vertical (with good folding), even though in hand written code I tend more horizontal. Vertical seems like the safe choice, with no fine tuning necessary. But if you're already shouldering the burden of a separate UI for screen readers, it seems like it might not be a big lift on top of that to make the balance of horizontal or vertical space into a user setting? I mean, if you're feeling ambitious.\n\nThere's also a sort of middle ground, where the user chooses between vertical and horizontal formatters per syntax tree node, with a UI (and state management) akin to code folding. You could think of horizontal formatting as a folding state intermediate between fully vertical and fully hidden.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710792969.247549",
        "parent_user_id": "U04SAJZ155H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vVqfp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Personally in this case I would lean toward more vertical (with good folding), even though in hand written code I tend more horizontal. Vertical seems like the safe choice, with no fine tuning necessary. But if you're already shouldering the burden of a separate UI for screen readers, it seems like it might not be a big lift on top of that to make the balance of horizontal or vertical space into a user setting? I mean, if you're feeling ambitious.\n\nThere's also a sort of middle ground, where the user chooses between vertical and horizontal formatters per syntax tree node, with a UI (and state management) akin to code folding. You could think of horizontal formatting as a folding state intermediate between fully vertical and fully hidden."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04SAJZ155H",
        "type": "message",
        "ts": "1710948167.176889",
        "client_msg_id": "590ccf63-15ca-4b92-af76-29c73411e541",
        "text": "<@U016VUZGUUQ> Yes, I'm feeling ambitious. The layout algorithm is a small enough part of the project that making it more complex is not a big deal. Personally I can't stand folding interfaces. I always end up setting them to the worst possible folding that gets the job done. I could as well keep my old automatic layout that is slightly better than the worst possible.\n\nFor top level navigation, there is a series of menus where the user selects a module, a class and then a method, similar to the Smalltalk browser. That replaces _macro-folding_. Once the user has selected a method, there is no more navigation, as the user likely wants to read the full source code of the selected method. It's here I'm trying to achieve a readable layout without implementing _micro-folding_.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bd0e56d083a4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-17\/6799011689143_bd0e56d083a4f5152bda_72.jpg",
            "first_name": "Fredrik",
            "real_name": "Fredrik",
            "display_name": "Fredrik",
            "team": "T5TCAFTA9",
            "name": "rusthacker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710792969.247549",
        "parent_user_id": "U04SAJZ155H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g8YKo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " Yes, I'm feeling ambitious. The layout algorithm is a small enough part of the project that making it more complex is not a big deal. Personally I can't stand folding interfaces. I always end up setting them to the worst possible folding that gets the job done. I could as well keep my old automatic layout that is slightly better than the worst possible.\n\nFor top level navigation, there is a series of menus where the user selects a module, a class and then a method, similar to the Smalltalk browser. That replaces "
                            },
                            {
                                "type": "text",
                                "text": "macro-folding",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Once the user has selected a method, there is no more navigation, as the user likely wants to read the full source code of the selected method. It's here I'm trying to achieve a readable layout without implementing "
                            },
                            {
                                "type": "text",
                                "text": "micro-folding",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U06M6J30PE3"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U05TJD2V4P2",
        "type": "message",
        "ts": "1710955571.143429",
        "edited": {
            "user": "U05TJD2V4P2",
            "ts": "1710955613.000000"
        },
        "client_msg_id": "ac842475-3a1a-4730-b62d-1761c92802c1",
        "text": "I want to build the backend of an as-bidirectional-as-possible spreadsheet\/dataflow, does anyone have any favorite techniques?\n\nI’d like to prefer a dataflow style solution over a constraint solver. I’ve been reading up on why this problem feels hard and its similarity to the “view update problem” in databases, I’m curious if there’s a widely accepted solution that I’m missing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "c62c43b01fd5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-18\/5926088433521_c62c43b01fd5b63ec214_72.jpg",
            "first_name": "Jacob",
            "real_name": "Jacob Zimmerman",
            "display_name": "Jacob Zimmerman",
            "team": "T5TCAFTA9",
            "name": "jacob.zimmerman135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710955571.143429",
        "reply_count": 11,
        "reply_users_count": 6,
        "latest_reply": "1716490946.215639",
        "reply_users": [
            "UC2A2ARPT",
            "U05TJD2V4P2",
            "U06BUK2M2RH",
            "UN57U8V53",
            "U06131CATV3",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1710975759.645089"
            },
            {
                "user": "U05TJD2V4P2",
                "ts": "1710978469.844719"
            },
            {
                "user": "U06BUK2M2RH",
                "ts": "1711048996.282089"
            },
            {
                "user": "U06BUK2M2RH",
                "ts": "1711049193.915029"
            },
            {
                "user": "U06BUK2M2RH",
                "ts": "1711049323.804559"
            },
            {
                "user": "UN57U8V53",
                "ts": "1711056481.014849"
            },
            {
                "user": "U06BUK2M2RH",
                "ts": "1711056746.149069"
            },
            {
                "user": "U06131CATV3",
                "ts": "1711082273.878299"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1711082598.888909"
            },
            {
                "user": "U05TJD2V4P2",
                "ts": "1711394130.661509"
            },
            {
                "user": "U06BUK2M2RH",
                "ts": "1716490946.215639"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wdYk2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I want to build the backend of an as-bidirectional-as-possible spreadsheet\/dataflow, does anyone have any favorite techniques?\n\nI’d like to prefer a dataflow style solution over a constraint solver. I’ve been reading up on why this problem feels hard and its similarity to the “view update problem” in databases, I’m curious if there’s a widely accepted solution that I’m missing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "US370TRJA",
        "type": "message",
        "ts": "1710957971.279669",
        "client_msg_id": "C91BE299-2128-4EC5-8246-66F417AD9EE2",
        "text": "Hi <@U04SAJZ155H> , thanks for the response and the rationale about avoiding the path of author overriding the default for the user.\n\nOne idea I’ll offer is that the annotation is something the reader could offer bring to the table in their viewer. This is similar to how you can opt to fold\/expand sections in VSCode for either bracketed code, or sections in markdown. A set of annotations is a filter, with unique filters for each situations. The name escapes me but I thought I saw a cool digital humanities project that used this “standoff annotation” technique to help people with doing close readings.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8449ebbf703",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8449ebbf703fcee4e1eadc3e78478f01.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "Cameron",
            "real_name": "Cameron Yick",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "cameron.yick",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710792969.247549",
        "parent_user_id": "U04SAJZ155H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k43P7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi "
                            },
                            {
                                "type": "user",
                                "user_id": "U04SAJZ155H"
                            },
                            {
                                "type": "text",
                                "text": " , thanks for the response and the rationale about avoiding the path of author overriding the default for the user.\n\nOne idea I’ll offer is that the annotation is something the reader could offer bring to the table in their viewer. This is similar to how you can opt to fold\/expand sections in VSCode for either bracketed code, or sections in markdown. A set of annotations is a filter, with unique filters for each situations. The name escapes me but I "
                            },
                            {
                                "type": "text",
                                "text": "thought"
                            },
                            {
                                "type": "text",
                                "text": " I saw a cool digital humanities project that used this “standoff annotation” technique to help people with doing close readings."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U06M6J30PE3"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1710975759.645089",
        "client_msg_id": "89a5406b-bd6c-4491-8693-970d0830a5a0",
        "text": "[moved from top level, original message by <@U06JEKAJLTV>]\n\nI get that you're not looking for a constraints-based solution, but maybe you'll find this interesting anyway: <https:\/\/github.com\/harc\/constraint-based-spreadsheet>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710955571.143429",
        "parent_user_id": "U05TJD2V4P2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DLgH3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[moved from top level, original message by "
                            },
                            {
                                "type": "user",
                                "user_id": "U06JEKAJLTV"
                            },
                            {
                                "type": "text",
                                "text": "]\n\nI get that you're not looking for a constraints-based solution, but maybe you'll find this interesting anyway: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/harc\/constraint-based-spreadsheet"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05TJD2V4P2",
        "type": "message",
        "ts": "1710978469.844719",
        "client_msg_id": "64a88866-5e79-4d2c-86c9-f85a8e5f943f",
        "text": "Thanks <@U06JEKAJLTV>, would you mind sharing any thoughts on how the project went with the constraint approach? I’m thinking right now about leaning on lenses and some semantics discussed in this slideshow “Weird World of Bi-Directional Programming” from Benjamin Pierce. Was there a particular reason you chose a constraint solver?\n\n<https:\/\/www.cis.upenn.edu\/~bcpierce\/papers\/lenses-etapsslides.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "c62c43b01fd5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-18\/5926088433521_c62c43b01fd5b63ec214_72.jpg",
            "first_name": "Jacob",
            "real_name": "Jacob Zimmerman",
            "display_name": "Jacob Zimmerman",
            "team": "T5TCAFTA9",
            "name": "jacob.zimmerman135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710955571.143429",
        "parent_user_id": "U05TJD2V4P2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MgF\/Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U06JEKAJLTV"
                            },
                            {
                                "type": "text",
                                "text": ", would you mind sharing any thoughts on how the project went with the constraint approach? I’m thinking right now about leaning on lenses and some semantics discussed in this slideshow “Weird World of Bi-Directional Programming” from Benjamin Pierce. Was there a particular reason you chose a constraint solver?\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.cis.upenn.edu\/~bcpierce\/papers\/lenses-etapsslides.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U06131CATV3"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1710980418.184359",
        "client_msg_id": "6eb7f535-b455-4b1c-8223-97d8a4e0b9fd",
        "text": "I just encountered a really nice prescription for fixing capitalism -- and it's been right under my nose for 12 years: <https:\/\/www.ribbonfarm.com\/2011\/09\/08\/fixing-the-game-by-roger-l-martin>\n\nIn summary: the economy operates in a \"real\" market, of businesses competing for customers, and an \"expectations\" market (the stock market, quarterly ratings, etc.)\n\nThe diagnosis: there is too much govt. regulation in the expectations market (SEC rules change often) and not enough in the real market (OP mentions IP laws, but I think Anti-trust and FTC lie in this category as well)\n\nThe prescription: bulk up regulations over the real market and keep the rules changing often enough that the expectations market (making money on the stock market) becomes a game of chance. (And gradually remove regulations from the expectations market because they'll become unnecessary.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1696628791.117649",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jdbRa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just encountered a really nice prescription for fixing capitalism -- and it's been right under my nose for 12 years: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.ribbonfarm.com\/2011\/09\/08\/fixing-the-game-by-roger-l-martin"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIn summary: the economy operates in a \"real\" market, of businesses competing for customers, and an \"expectations\" market (the stock market, quarterly ratings, etc.)\n\nThe diagnosis: there is too much govt. regulation in the expectations market (SEC rules change often) and not enough in the real market (OP mentions IP laws, but I think Anti-trust and FTC lie in this category as well)\n\nThe prescription: bulk up regulations over the real market and keep the rules changing often enough that the expectations market (making money on the stock market) becomes a game of chance. (And gradually remove regulations from the expectations market because they'll become unnecessary.)"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]