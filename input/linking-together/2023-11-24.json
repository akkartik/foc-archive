[
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1700820779.116479",
        "client_msg_id": "BEA88543-4074-4010-8DF4-5E9B7537EF11",
        "text": "I know I’ve only ever seen notifications inside slack, or on my iPhone screen when I gave slack that permission. So it’s not a default that it does it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700747986.966939",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "brDd2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I know "
                            },
                            {
                                "type": "text",
                                "text": "I’ve"
                            },
                            {
                                "type": "text",
                                "text": " only ever seen notifications inside slack, or on my iPhone screen when I gave slack that permission. "
                            },
                            {
                                "type": "text",
                                "text": "So it’s"
                            },
                            {
                                "type": "text",
                                "text": " not a default that it does it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "I have set the preference though. It just doesn't seem to work. Makes slack much less useful for occasionally visited communities.",
        "files": [
            {
                "id": "F0674QFC13P",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U71PMQ1V0",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jinzx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have set the preference though. It just doesn't seem to work. Makes slack much less useful for occasionally visited communities."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1700846159.392189",
        "client_msg_id": "e767fac6-866a-471a-bd0a-48f3fb99209b",
        "thread_ts": "1700747986.966939",
        "parent_user_id": "UKJGU23KP",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1700846496.385049",
        "client_msg_id": "901f7f6d-7281-4acb-9873-a68670653dac",
        "text": "It's definitely a bug.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700747986.966939",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WbpWO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's definitely a bug."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U055V4HCHU7",
        "type": "message",
        "ts": "1700849809.253509",
        "edited": {
            "user": "U055V4HCHU7",
            "ts": "1700849840.000000"
        },
        "client_msg_id": "58EC324B-8843-409E-91FC-09E52008B564",
        "text": "A saw a friendly face on the front page of lobsters this morning <https:\/\/lobste.rs\/s\/ogfcnz\/lua_carousel_create_little_programs_on|https:\/\/lobste.rs\/s\/ogfcnz\/lua_carousel_create_little_programs_on>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "141ca9fd8fff",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-04\/5210750326597_141ca9fd8fff00418f9b_72.jpg",
            "first_name": "Walker",
            "real_name": "Walker Griggs",
            "display_name": "Walker Griggs",
            "team": "T5TCAFTA9",
            "name": "walker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700849809.253509",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1700849906.485019",
        "reply_users": [
            "U055V4HCHU7"
        ],
        "replies": [
            {
                "user": "U055V4HCHU7",
                "ts": "1700849906.485019"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "evIod",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A saw a friendly face on the front page of lobsters this morning "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/lobste.rs\/s\/ogfcnz\/lua_carousel_create_little_programs_on",
                                "text": "https:\/\/lobste.rs\/s\/ogfcnz\/lua_carousel_create_little_programs_on"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "fire",
                "users": [
                    "U03LJBR6THT",
                    "UMV4B97GT"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U8A5MS6R1"
                ],
                "count": 2
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U055V4HCHU7",
        "type": "message",
        "ts": "1700849906.485019",
        "client_msg_id": "A19C0B46-C165-4C1D-AF9D-5D7DBFEC3551",
        "text": "You could say I LÖVE seeing this work progress, <@UCUSW7WVD> ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "141ca9fd8fff",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-04\/5210750326597_141ca9fd8fff00418f9b_72.jpg",
            "first_name": "Walker",
            "real_name": "Walker Griggs",
            "display_name": "Walker Griggs",
            "team": "T5TCAFTA9",
            "name": "walker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700849809.253509",
        "parent_user_id": "U055V4HCHU7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V4vZf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You could say I LÖVE seeing this work progress, "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UCUSW7WVD",
                    "UMQ6LR9NZ",
                    "U8A5MS6R1",
                    "UMV4B97GT"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1700850935.431519",
        "client_msg_id": "3f3342fb-ef91-4b3b-891c-60d72e03f436",
        "text": "Excellent essay!\n\nI believe the issues described with live systems are not actually solved with dead systems, but just deferred until later. That’s because dead systems don’t often represent entire systems but only a slice of the system. Consider a system with a Rust (or another dead lang) web app backed by another web service and a db. One problem is evolving the web app code while preserving the db data and migrating the db schema. This is similar to evolving live code while the heap remains intact. Another problem is that upgrading the downstream service may change or delete an API method and it leave it incompatible with the caller web app. This is similar to upgrading a subset of functions within the same live program. Dead-lang approaches don’t solve any of these problems of “external couplings” and “externalized data” but simply exclude them from their scope, leaving us to wrangle these with other approaches. Live systems seems less tractable because these problems are harder, and more worthwhile (my position).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700747986.966939",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1EP70",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Excellent essay!\n\nI believe the issues described with live systems are not actually solved with dead systems, but just deferred until later. That’s because dead systems don’t often represent entire systems but only a slice of the system. Consider a system with a Rust (or another dead lang) web app backed by another web service and a db. One problem is evolving the web app code while preserving the db data and migrating the db schema. This is similar to evolving live code while the heap remains intact. Another problem is that upgrading the downstream service may change or delete an API method and it leave it incompatible with the caller web app. This is similar to upgrading a subset of functions within the same live program. Dead-lang approaches don’t solve any of these problems of “external couplings” and “externalized data” but simply exclude them from their scope, leaving us to wrangle these with other approaches. Live systems seems less tractable because these problems are harder, and more worthwhile (my position)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1700851117.194719",
        "client_msg_id": "198f101e-8d05-4177-aad6-899483cb7da0",
        "text": "Another note on this:\n&gt; For a start, you can actually find the code as a single artifact rather than it being the product of a log of mutations.\nSome of this gets lost even in dead-langs when you’re dealing with macros, metaprogramming or subsclassing at some level of complexity. Not only do you have to simulate the runtime semantics in your head, you also have to simulate the type checker and compiler semantics.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700747986.966939",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tTnYF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another note on this:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For a start, you can actually find the code as a single artifact rather than it being the product of a log of mutations."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some of this gets lost even in dead-langs when you’re dealing with macros, metaprogramming or subsclassing at some level of complexity. Not only do you have to simulate the runtime semantics in your head, you also have to simulate the type checker and compiler semantics."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1700851265.767429",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1700851279.000000"
        },
        "client_msg_id": "ff4e7131-8a61-41e5-9ee0-42b7bc65eab7",
        "text": "Reading the essay, another idea that clicked for me was having a “version-aware runtime”  - ie the system should be aware of the different versions of various artifacts (code, data, etc.). No dead-lang does this - there is only one version of all types.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700747986.966939",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WVl0b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reading the essay, another idea that clicked for me was having a “version-aware runtime”  - ie the system should be aware of the different versions of various artifacts (code, data, etc.). No dead-lang does this - there is only one version of all types."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1700851479.924889",
        "client_msg_id": "CF5A0A1A-2633-429B-AFEC-59414EBCC485",
        "text": "Mentioning web apps and databases makes me think about how there are playbooks for migrations there—you (if you’re being careful) use monitoring, let both versions coexist, try to find callers using the old versions and encourage them to switch, etc. \n\nI wonder what the playbook looks like in a programming environment.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700747986.966939",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eu7VC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Mentioning web apps and databases makes me think about how there are playbooks for migrations there"
                            },
                            {
                                "type": "text",
                                "text": "—"
                            },
                            {
                                "type": "text",
                                "text": "you (if "
                            },
                            {
                                "type": "text",
                                "text": "you’re"
                            },
                            {
                                "type": "text",
                                "text": " being careful) use monitoring, let both versions coexist, try to find callers using the old versions and encourage them to switch, etc. \n\nI wonder what the playbook looks like in a programming environment."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1700851524.882279",
        "client_msg_id": "3BCF9331-5CD5-4914-8F56-BB0531EC23B8",
        "text": "It’s possible to do monitoring in your runtime.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700747986.966939",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fh+M\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s"
                            },
                            {
                                "type": "text",
                                "text": " possible to do monitoring in your runtime."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1700853311.588469",
        "client_msg_id": "95504e18-8188-4826-aa95-ff7bb33e0382",
        "text": "<@U8A5MS6R1>\n&gt; I believe the issues described with live systems are not actually solved with dead systems, but just deferred until later. That’s because dead systems don’t often represent entire systems but only a slice of the system.. upgrading [a] downstream service may change or delete an API method and it leave it incompatible with the caller.\nThis depends on the context. If you think of the upstream and downstream as within a common ownership boundary, then such checks are valuable. However, if they span ownership boundaries then these checks can seem onerous.\n\nYou're right that dead systems work almost accidentally for the second case, by just not doing some work. Ideally we'd have both tools in our pocket, and the flexibility to select from them depending on the situation. However, this is a lot of complexity, and all code carries costs. So worse may be better here.\n\nThis situation is analogous to structured editing like in <@UFEQUBNNT>'s recent submission <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1700405882617679>. It's easy for a structured editor to feel like an overbearing presence. The implementor has to juggle both technical complexity and UX nuance. Meanwhile plain text is often \"good enough\" and so we continue to muddle along..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700747986.966939",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DBEX4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I believe the issues described with live systems are not actually solved with dead systems, but just deferred until later. That’s because dead systems don’t often represent entire systems but only a slice of the system.. upgrading [a] downstream service may change or delete an API method and it leave it incompatible with the caller."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis depends on the context. If you think of the upstream and downstream as within a common ownership boundary, then such checks are valuable. However, if they span ownership boundaries then these checks can seem onerous.\n\nYou're right that dead systems work almost accidentally for the second case, by just not doing some work. Ideally we'd have both tools in our pocket, and the flexibility to select from them depending on the situation. However, this is a lot of complexity, and all code carries costs. So worse may be better here.\n\nThis situation is analogous to structured editing like in "
                            },
                            {
                                "type": "user",
                                "user_id": "UFEQUBNNT"
                            },
                            {
                                "type": "text",
                                "text": "'s recent submission "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1700405882617679"
                            },
                            {
                                "type": "text",
                                "text": ". It's easy for a structured editor to feel like an overbearing presence. The implementor has to juggle both technical complexity and UX nuance. Meanwhile plain text is often \"good enough\" and so we continue to muddle along.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1700855159.746349",
        "client_msg_id": "bef29aac-bcec-4cc6-a01e-448b3f259caa",
        "text": "&gt; It’s possible to do monitoring in your runtime.\nYeah, the key requirement is version-awareness - whether the endpoint name encodes the version or some introspection api returns the version of the service, any strategy needs a representation of the version of functions etc within the system itself, and should allow multiple versions to coexist. An interesting implementation here is gemstone smalltalk - it is a live system where you can evolve the schema by providing migration methods and the objects can be migrated to newer definitions either opportunistically or in batch.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700747986.966939",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JAmBB",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s possible to do monitoring in your runtime."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nYeah, the key requirement is version-awareness - whether the endpoint name encodes the version or some introspection api returns the version of the service, any strategy needs a representation of the version of functions etc within the system itself, and should allow multiple versions to coexist. An interesting implementation here is gemstone smalltalk - it is a live system where you can evolve the schema by providing migration methods and the objects can be migrated to newer definitions either opportunistically or in batch."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1700855176.236059",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1700855191.000000"
        },
        "client_msg_id": "f7d48fc8-22ec-42b6-a9e9-4a4ac47f79a2",
        "text": "<@UCUSW7WVD>\n> Ideally we’d have both tools in our pocket, and the flexibility to select from them depending on the situation. \n:100:\nI’d even add that ideally these would not be two separate tools but a single model that can be applied in varying use cases - from “early bound, validated” bundles of code to “late bound, but also validated” and in between.\n> However, this is a lot of complexity, and all code carries costs. So worse may be better here.\nWould this be more complexity than present day type checkers? :stuck_out_tongue_winking_eye:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700747986.966939",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rM1EW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ideally we’d have both tools in our pocket, and the flexibility to select from them depending on the situation. "
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "100",
                                "unicode": "1f4af"
                            },
                            {
                                "type": "text",
                                "text": "\nI’d even add that ideally these would not be two separate tools but a single model that can be applied in varying use cases - from “early bound, validated” bundles of code to “late bound, but also validated” and in between.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "However, this is a lot of complexity, and all code carries costs. So worse may be better here."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would this be more complexity than present day type checkers? "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue_winking_eye",
                                "unicode": "1f61c"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1700855665.687799",
        "client_msg_id": "e0690e18-93b0-4d14-8675-7f40fa02cf4e",
        "text": "I absolutely think so! You're adding a whole new dimension to the problem. What are you taking out?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700747986.966939",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RuEaS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I absolutely think so! You're adding a whole new dimension to the problem. What are you taking out?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1700856678.389159",
        "client_msg_id": "c45096d4-ba95-4947-9808-8e59709999f7",
        "text": "Ah good point. If we keep all the existing static lang ideas intact and then layer on dynamic bindings, yes it’s a whole another dimension. However if we first reduce the language features (eg like the essay suggests, 2nd class functions only) and design the types and semantics of the language to be amenable to both static and dynamic bindings we want, then maybe we have a chance.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700747986.966939",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EfLx3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah good point. If we keep all the existing static lang ideas intact and then layer on dynamic bindings, yes it’s a whole another dimension. However if we first reduce the language features (eg like the essay suggests, 2nd class functions only) and design the types and semantics of the language to be amenable to both static and dynamic bindings we want, then maybe we have a chance."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1700857043.244309",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1700872513.000000"
        },
        "client_msg_id": "0a05a6fb-fcff-4cdc-b6cf-2e70532a467d",
        "text": "The problem as I see it is that dyanmic+live langs have typically not been designed to make validation or optimization easy, and static langs have not been designed to make late binding easy. I don’t think we want to total freedom of dynamic+live langs. We want some snapshotting of state, we want visualization and provenance tracking of all dynamically generated code. Once we start adding these we can introduce ways to validate and optimize the slices of the live system that have stabilized.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700747986.966939",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5ptpy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The problem as I see it is that dyanmic+live langs have typically not been designed to make validation or optimization easy, and static langs have not been designed to make late binding easy. I don’t think we want to total freedom of dynamic+live langs. We want some snapshotting of state, we want visualization and provenance tracking of all dynamically generated code. Once we start adding these we can introduce ways to validate and optimize the slices of the live system that have stabilized."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "I love the ideas here and also the example use case because it is always such a pain. Here’s me from a <https:\/\/twitter.com\/chatur_shalabh\/status\/1352843395283083264|twitter thread> from a while back:",
        "files": [
            {
                "id": "F066TKVAGS3",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U8A5MS6R1",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "shOYe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I love the ideas here and also the example use case because it is always such a pain. Here’s me from a "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/chatur_shalabh\/status\/1352843395283083264",
                                "text": "twitter thread"
                            },
                            {
                                "type": "text",
                                "text": " from a while back:"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1700857153.959939",
        "client_msg_id": "121e5f56-8115-45ba-9414-b9cc8e822d69",
        "thread_ts": "1700603487.530009",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "crystal_ball",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "Integration is still an open problem and the main problem with scaling something like this",
        "files": [
            {
                "id": "F06721M086A",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U8A5MS6R1",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y4JtN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Integration is still an open problem and the main problem with scaling something like this"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1700874283.633089",
        "client_msg_id": "6c4bf1cc-34b8-4997-b245-ddf5a4129fa0",
        "thread_ts": "1700603487.530009",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1700885029.454229",
        "client_msg_id": "7f78718a-72f7-409a-bc2b-0b858bae7fab",
        "text": "I just found an absolutely _ancient_ bit of advocacy for convivial tools. From 2008!\n\n<https:\/\/vimeo.com\/859408>\nvia <https:\/\/muforth.nimblemachines.com>\n\n<@U6KQ2S410> Were y'all aware of this when you organized <https:\/\/2020.programming-conference.org\/home\/salon-2020>?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1700885029.454229",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1701025160.165269",
        "reply_users": [
            "U6KQ2S410"
        ],
        "replies": [
            {
                "user": "U6KQ2S410",
                "ts": "1701025160.165269"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ONMqZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just found an absolutely "
                            },
                            {
                                "type": "text",
                                "text": "ancient",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " bit of advocacy for convivial tools. From 2008!\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/vimeo.com\/859408"
                            },
                            {
                                "type": "text",
                                "text": "\nvia "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/muforth.nimblemachines.com"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": " Were y'all aware of this when you organized "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/2020.programming-conference.org\/home\/salon-2020"
                            },
                            {
                                "type": "text",
                                "text": "?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]