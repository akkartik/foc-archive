[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1709713087.015829",
        "client_msg_id": "89cebf73-b810-491a-943f-8f7bdc7407f2",
        "text": "<@UC2A2ARPT> loved the musical interlude and the mix on the quotation effect seemed perfectly dialed in.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709521905.644279",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M548V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " loved the musical interlude and the mix on the quotation effect seemed perfectly dialed in."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U06MKD39QR4",
        "type": "message",
        "ts": "1709730829.580339",
        "client_msg_id": "d2b0fae4-c751-4194-8c3b-3c302ecda195",
        "text": "Alrighty, here's the post I mentioned I'd make in <#CC2JRGVLK|introduce-yourself>:\nI want to create a computing ecosystem that solves most of the problems in what I call 'unregulated I\/O'.\nIt is quite possibly mad. Or it might work, and I will be surprised.\nIt takes design cues from <https:\/\/en.wikipedia.org\/wiki\/Oberon_(operating_system)|Oberon>, <https:\/\/github.com\/google\/flatbuffers|FlatBuffers>, <https:\/\/ipfs.tech\/|IPFS>, <https:\/\/git-scm.com\/|Git>, <https:\/\/www.rust-lang.org\/|Rust>.\nIt also sounds dangerously close to the kind of \"great idea\" a compsci undergrad would come out with. Yet, I am running out of reasons why this isn't possible (at the very least). This is why I want your opinions :sweat_smile:\nThat's all I'll say here - rest is in the :thread:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a2bf8d8a3fb0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-04\/6762950133888_a2bf8d8a3fb08a08ee17_72.jpg",
            "first_name": "Doug",
            "real_name": "Doug Thompson",
            "display_name": "Doug Thompson",
            "team": "T5TCAFTA9",
            "name": "p-slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709730829.580339",
        "reply_count": 13,
        "reply_users_count": 5,
        "latest_reply": "1710239978.240029",
        "reply_users": [
            "U06MKD39QR4",
            "UJBAJNFLK",
            "U85HCL7JP",
            "UNCP67JSK",
            "UE6EFEPTQ"
        ],
        "replies": [
            {
                "user": "U06MKD39QR4",
                "ts": "1709730873.830819"
            },
            {
                "user": "U06MKD39QR4",
                "ts": "1709730888.708659"
            },
            {
                "user": "U06MKD39QR4",
                "ts": "1709730914.140699"
            },
            {
                "user": "U06MKD39QR4",
                "ts": "1709730939.830439"
            },
            {
                "user": "U06MKD39QR4",
                "ts": "1709731166.131149"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1709746806.845039"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1710038518.826549"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1710057375.774569"
            },
            {
                "user": "U06MKD39QR4",
                "ts": "1710150360.473539"
            },
            {
                "user": "UNCP67JSK",
                "ts": "1710176992.167739"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1710226965.961379"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1710239780.311269"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1710239978.240029"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hf969",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Alrighty, here's the post I mentioned I'd make in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CC2JRGVLK"
                            },
                            {
                                "type": "text",
                                "text": ":\nI want to create a computing ecosystem that solves most of the problems in what I call 'unregulated I\/O'.\nIt is quite possibly mad. Or it might work, and I will be surprised.\nIt takes design cues from "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Oberon_(operating_system)",
                                "text": "Oberon"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/google\/flatbuffers",
                                "text": "FlatBuffers"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/ipfs.tech\/",
                                "text": "IPFS"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/git-scm.com\/",
                                "text": "Git"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.rust-lang.org\/",
                                "text": "Rust"
                            },
                            {
                                "type": "text",
                                "text": ".\nIt also sounds dangerously close to the kind of \"great idea\" a compsci undergrad would come out with. Yet, I am running out of reasons why this isn't possible (at the very least). This is why I want your opinions "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            },
                            {
                                "type": "text",
                                "text": "\nThat's all I'll say here - rest is in the "
                            },
                            {
                                "type": "emoji",
                                "name": "thread",
                                "unicode": "1f9f5"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U051DSNTHCJ",
                    "UJBAJNFLK"
                ],
                "count": 2
            },
            {
                "name": "fire",
                "users": [
                    "UNCP67JSK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U06MKD39QR4",
        "type": "message",
        "ts": "1709730873.830819",
        "client_msg_id": "4696e901-aa8d-49c4-9715-446dea426cb4",
        "text": "So, I've got a problem with this thing I called 'unregulated I\/O'. Here's what I mean by this:\n\n• Unix set the standard of modelling files as byte arrays in the 70s.\n• Likewise, storage I\/O, IPC and RPC is mostly done via byte array. There are some exceptions - for example:\n    ◦ The OS normally abstracts away most packet handling up to the transport layer.\n    ◦ Windows has dabbled with wacky ports (COM1 et al.)\n• This means that application programs have the responsibility of validating the binary data loaded via I\/O.\n    ◦ Improper validation accounts for the vast majority of attack vectors (especially if we include memory management bugs).\n    ◦ Most modern applications employ widely-used libraries to minimise the amount of custom validation they have to perform, which is fair, because more eyes are on the libraries.\nNevertheless, SQL injection and buffer overflows still happen in 2024. Exploit accessibility seems (to me) likely to increase with the employment of LLMs.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a2bf8d8a3fb0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-04\/6762950133888_a2bf8d8a3fb08a08ee17_72.jpg",
            "first_name": "Doug",
            "real_name": "Doug Thompson",
            "display_name": "Doug Thompson",
            "team": "T5TCAFTA9",
            "name": "p-slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709730829.580339",
        "parent_user_id": "U06MKD39QR4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZIGbd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So, I've got a problem with this thing I called 'unregulated I\/O'. Here's what I mean by this:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Unix set the standard of modelling files as byte arrays in the 70s."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Likewise, storage I\/O, IPC and RPC is mostly done via byte array. There are some exceptions - for example:"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The OS normally abstracts away most packet handling up to the transport layer."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Windows has dabbled with wacky ports (COM1 et al.)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "This means that application programs have the responsibility of validating the binary data loaded via I\/O."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Improper validation accounts for the vast majority of attack vectors (especially if we include memory management bugs)."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Most modern applications employ widely-used libraries to minimise the amount of custom validation they have to perform, which is fair, because more eyes are on the libraries."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nNevertheless, SQL injection and buffer overflows still happen in 2024. Exploit accessibility seems (to me) likely to increase with the employment of LLMs."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06MKD39QR4",
        "type": "message",
        "ts": "1709730888.708659",
        "client_msg_id": "a225d29e-2653-42ae-9eee-2213fb47fc70",
        "text": "I'm proposing that the Unix model should be replaced with something more secure by design:\n\n• An abstract data model should be established for I\/O:\n    ◦ The OS should abstract away a reasonable amount of validation.\n        ▪︎ Syscalls in applications would be typed. For Rustaceans, I\/O calls would yield something like a `std::io::Result&lt;T&gt;`.\n    ◦ The available types should include those that application programmers want to get I\/O'd data into ASAP: scalars, arrays, maps, tuples\/structs\/enums (the latter of which should be <https:\/\/doc.rust-lang.org\/book\/ch06-01-defining-an-enum.html|Rusty>).\n    ◦ We would certainly require encapsulation, and (possibly) higher-kinded facilities like mixins.\n    ◦ *All* data in this system should be represented this way, including programs themselves.\n        ▪︎ This means that program source code is \"already an AST\".\n        ▪︎ Plain text would not be used for source code.\n        ▪︎ UI development for these 'structured languages' must be improved. (maybe I should've said Scratch was an influence? :smirk:)\n        ▪︎ These ASTs should be transformed by the OS into machine code (which can also be represented with this model: a `.s` file becomes an array of instruction enums).\n        ▪︎ Eventually, the OS running this should be able to self-host in this way.\n    ◦ Applications should barely ever concern themselves with any kind of binary data, though this is of course impossible to prevent in a Turing-complete environment.\n• Data, as stored, should be content-addressable:\n    ◦ <https:\/\/www.youtube.com\/watch?v=lKXe3HUG2l4|Joe Armstrong> has plenty of reasons why this is a good idea (especially for greenfield).\n    ◦ The equivalent of a 'filesystem' for this ecosystem would instead be what is effectively a hashmap with wear leveling.\n        ▪︎ Or, <https:\/\/www.theregister.com\/2022\/08\/01\/optane_intel_cancellation\/|Optane> could be revived (some hope). Would be nice to design around this possibility.\n    ◦ 'Files', now more accurately 'objects', are stored by a hash of their contents.\n        ▪︎ Important note: this is _not_ object-oriented computing. We don't want to be piping vtables.\n    ◦ The need for encapsulation means that our 'filesystem' effectively becomes a <https:\/\/en.wikipedia.org\/wiki\/Merkle_tree|Merkle tree>.\n    ◦ In order to prevent massive hash cascades when writing to storage, we would need to employ mutable references (in a similar manner to symlinks).\n    ◦ Fast random-access updates to very large objects could be achieved with a hasher suited to incremental verification, such as <https:\/\/github.com\/BLAKE3-team\/BLAKE3|BLAKE3>.\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a2bf8d8a3fb0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-04\/6762950133888_a2bf8d8a3fb08a08ee17_72.jpg",
            "first_name": "Doug",
            "real_name": "Doug Thompson",
            "display_name": "Doug Thompson",
            "team": "T5TCAFTA9",
            "name": "p-slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709730829.580339",
        "parent_user_id": "U06MKD39QR4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4\/wlL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm proposing that the Unix model should be replaced with something more secure by design:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "An abstract data model should be established for I\/O:"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The OS should abstract away a reasonable amount of validation."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Syscalls in applications would be typed. For Rustaceans, I\/O calls would yield something like a "
                                    },
                                    {
                                        "type": "text",
                                        "text": "std::io::Result<T>",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 2,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The available types should include those that application programmers want to get I\/O'd data into ASAP: scalars, arrays, maps, tuples\/structs\/enums (the latter of which should be "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/doc.rust-lang.org\/book\/ch06-01-defining-an-enum.html",
                                        "text": "Rusty"
                                    },
                                    {
                                        "type": "text",
                                        "text": ")."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "We would certainly require encapsulation, and (possibly) higher-kinded facilities like mixins."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "All",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " data in this system should be represented this way, including programs themselves."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "This means that program source code is \"already an AST\"."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Plain text would not be used for source code."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "UI development for these 'structured languages' must be improved. (maybe I should've said Scratch was an influence? "
                                    },
                                    {
                                        "type": "emoji",
                                        "name": "smirk",
                                        "unicode": "1f60f"
                                    },
                                    {
                                        "type": "text",
                                        "text": ")"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "These ASTs should be transformed by the OS into machine code (which can also be represented with this model: a "
                                    },
                                    {
                                        "type": "text",
                                        "text": ".s",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " file becomes an array of instruction enums)."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Eventually, the OS running this should be able to self-host in this way."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 2,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Applications should barely ever concern themselves with any kind of binary data, though this is of course impossible to prevent in a Turing-complete environment."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Data, as stored, should be content-addressable:"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/www.youtube.com\/watch?v=lKXe3HUG2l4",
                                        "text": "Joe Armstrong"
                                    },
                                    {
                                        "type": "text",
                                        "text": " has plenty of reasons why this is a good idea (especially for greenfield)."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The equivalent of a 'filesystem' for this ecosystem would instead be what is effectively a hashmap with wear leveling."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Or, "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/www.theregister.com\/2022\/08\/01\/optane_intel_cancellation\/",
                                        "text": "Optane"
                                    },
                                    {
                                        "type": "text",
                                        "text": " could be revived (some hope). Would be nice to design around this possibility."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 2,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "'Files', now more accurately 'objects', are stored by a hash of their contents."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Important note: this is "
                                    },
                                    {
                                        "type": "text",
                                        "text": "not",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " object-oriented computing. We don't want to be piping vtables."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 2,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The need for encapsulation means that our 'filesystem' effectively becomes a "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/en.wikipedia.org\/wiki\/Merkle_tree",
                                        "text": "Merkle tree"
                                    },
                                    {
                                        "type": "text",
                                        "text": "."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "In order to prevent massive hash cascades when writing to storage, we would need to employ mutable references (in a similar manner to symlinks)."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Fast random-access updates to very large objects could be achieved with a hasher suited to incremental verification, such as "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/BLAKE3-team\/BLAKE3",
                                        "text": "BLAKE3"
                                    },
                                    {
                                        "type": "text",
                                        "text": "."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    },
    {
        "user": "U06MKD39QR4",
        "type": "message",
        "ts": "1709730914.140699",
        "client_msg_id": "cb15b4fb-3f86-431f-bfd9-3b2aa1c95d4f",
        "text": "Here are some fun implications of such a design:\n\n• New programming languages would be required.\n• Deduplication of data becomes trivial.\n    ◦ On the subject, we'd need to be mindful of granular we are with the storage of heavily-encapsulated objects.\n    ◦ Denormalisation should probably happen when eg. objects' raw data is less than the size of a hash digest (at the very least).\n• Transfer of large objects over a network can be heavily optimised. Downloads effectively become a `git pull`.\n• Core web technologies such as HTTP, HTML, CSS &amp; JavaScript are no longer kosher, because they are based on plaintext.\n    ◦ \"This obsoletes the web\" is a silly thing to say, but could be fun in the pitch.\n    ◦ All of these formats _could_ be transformed into the strongly-typed model presented above, though.\n• Tabs vs spaces is no longer a concern, because formatting is no longer a concern for plaintext. That's now the UI's responsibility.\n• Entire classes of attack should be all but eliminated (eg. injection).\n• The types used in the data model can themselves be represented in the data model, and we can relatively easily implement internationalisation for code:\n    ◦ Here's a horrible illustration: `Enum Type { i8, i16, i32, i64, u8, u16, u32, u64, Array&lt;Type&gt;, Map&lt;Type, Type&gt;, Tuple&lt;Type, ...&gt;, Enum&lt;Array&lt;Type&gt;&gt; }`\n    ◦ These types don't have canon names, and I don't think they should.\n    ◦ They do have hashes, though. So we can refer to types by their hash.\n    ◦ We can then map human translations for these types and their encapsulated members in any number of natural languages: `Map Translations&lt;Tuple&lt;[Locale, Type]&gt;, Array&lt;String&gt;&gt;`\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a2bf8d8a3fb0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-04\/6762950133888_a2bf8d8a3fb08a08ee17_72.jpg",
            "first_name": "Doug",
            "real_name": "Doug Thompson",
            "display_name": "Doug Thompson",
            "team": "T5TCAFTA9",
            "name": "p-slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709730829.580339",
        "parent_user_id": "U06MKD39QR4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FKm+A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here are some fun implications of such a design:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "New programming languages would be required."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Deduplication of data becomes trivial."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "On the subject, we'd need to be mindful of granular we are with the storage of heavily-encapsulated objects."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Denormalisation should probably happen when eg. objects' raw data is less than the size of a hash digest (at the very least)."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Transfer of large objects over a network can be heavily optimised. Downloads effectively become a "
                                    },
                                    {
                                        "type": "text",
                                        "text": "git pull",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Core web technologies such as HTTP, HTML, CSS & JavaScript are no longer kosher, because they are based on plaintext."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "\"This obsoletes the web\" is a silly thing to say, but could be fun in the pitch."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "All of these formats "
                                    },
                                    {
                                        "type": "text",
                                        "text": "could",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " be transformed into the strongly-typed model presented above, though."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Tabs vs spaces is no longer a concern, because formatting is no longer a concern for plaintext. That's now the UI's responsibility."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Entire classes of attack should be all but eliminated (eg. injection)."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The types used in the data model can themselves be represented in the data model, and we can relatively easily implement internationalisation for code:"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Here's a horrible illustration: "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Enum Type { i8, i16, i32, i64, u8, u16, u32, u64, Array<Type>, Map<Type, Type>, Tuple<Type, ...>, Enum<Array<Type>> }",
                                        "style": {
                                            "code": true
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "These types don't have canon names, and I don't think they should."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "They do have hashes, though. So we can refer to types by their hash."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "We can then map human translations for these types and their encapsulated members in any number of natural languages: "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Map Translations<Tuple<[Locale, Type]>, Array<String>>",
                                        "style": {
                                            "code": true
                                        }
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    },
    {
        "user": "U06MKD39QR4",
        "type": "message",
        "ts": "1709730939.830439",
        "client_msg_id": "f71d030a-9277-4817-ad70-debc364a369b",
        "text": "I appreciate this is a lot, so if you've taken the time to read this, thank you :heart:\nPlease shoot with your questions and comments. I've got some visual explainers for this stuff lying around which I'll probably add too.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a2bf8d8a3fb0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-04\/6762950133888_a2bf8d8a3fb08a08ee17_72.jpg",
            "first_name": "Doug",
            "real_name": "Doug Thompson",
            "display_name": "Doug Thompson",
            "team": "T5TCAFTA9",
            "name": "p-slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709730829.580339",
        "parent_user_id": "U06MKD39QR4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R49BU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I appreciate this is a lot, so if you've taken the time to read this, thank you "
                            },
                            {
                                "type": "emoji",
                                "name": "heart",
                                "unicode": "2764-fe0f"
                            },
                            {
                                "type": "text",
                                "text": "\nPlease shoot with your questions and comments. I've got some visual explainers for this stuff lying around which I'll probably add too."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFEQUBNNT",
                    "U85HCL7JP",
                    "UNCP67JSK"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U06MKD39QR4",
        "type": "message",
        "ts": "1709731166.131149",
        "client_msg_id": "57f8a367-0729-41c1-9d67-3a2a16fe2a7c",
        "text": "...oh, and: much as I've searched, I can't find a project that's attempting to create an entire ecosystem out of these principles (even if it's just using VMs rather than an entire OS). If you know of any project doing this, please let me know, because I suspect they're probably doing a better job.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a2bf8d8a3fb0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-04\/6762950133888_a2bf8d8a3fb08a08ee17_72.jpg",
            "first_name": "Doug",
            "real_name": "Doug Thompson",
            "display_name": "Doug Thompson",
            "team": "T5TCAFTA9",
            "name": "p-slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709730829.580339",
        "parent_user_id": "U06MKD39QR4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QwwXy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "...oh, and: much as I've searched, I can't find a project that's attempting to create an entire ecosystem out of these principles (even if it's just using VMs rather than an entire OS). If you know of any project doing this, please let me know, because I suspect they're probably doing a better job."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06MT9KDU7Q",
        "type": "message",
        "ts": "1709743834.765159",
        "edited": {
            "user": "U06MT9KDU7Q",
            "ts": "1709743899.000000"
        },
        "client_msg_id": "fc3058fe-5a63-492f-88d1-590cf25d9d05",
        "text": "If you’ve wondered:\n• why the only copilot we have is for VSCode\n• why not every app is end-user programmable\nI wondered the same thing, and I’ve built (<https:\/\/omnipilot.ai>), an AI copilot that works everywhere on macOS.\n\nSpecifically it lets you invoke GPT to type into any app (*particularly interesting to me is it works great in Xcode*), can also autocomplete text in any app, and lets you chat with GPT-4 with context from your recent apps. I’d really appreciate any feedback or first impressions!\n\nRe end-user programmability I’m also working on making it more possible for people to make little “automations” on their computer, whether it’s adding buttons to Finder to convert files or recording little AI-enhanced macros.\n\nSome specific questions I’d love feedback:\n• How often do you find yourself wanting help editing code outside of a Github Copilot-enabled environment? What are those situations or apps?\n• What about text, do you wish you had a copilot for text too?\n• What do you think of the “works everywhere” approach vs. a dedicated app?\n• Do the AI-macros sound appealing or meh?\n• Any thoughts on the landing page copy\/design?\nI’m also happy to answer any other questions. Thanks in advance for sharing your thoughts, it’s super helpful in shaping the product!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "45dbefd2ff51",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-06\/6758886431092_45dbefd2ff513c38cd57_72.png",
            "first_name": "Michael",
            "real_name": "Michael Jelly",
            "display_name": "Michael Jelly",
            "team": "T5TCAFTA9",
            "name": "michael108",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709743834.765159",
        "reply_count": 14,
        "reply_users_count": 4,
        "latest_reply": "1712056148.621059",
        "reply_users": [
            "U03HC3XHZGW",
            "U06MT9KDU7Q",
            "U06MJU6LBN3",
            "U05EREC3DCK"
        ],
        "replies": [
            {
                "user": "U03HC3XHZGW",
                "ts": "1709744998.875189"
            },
            {
                "user": "U03HC3XHZGW",
                "ts": "1709745146.128849"
            },
            {
                "user": "U03HC3XHZGW",
                "ts": "1709745505.757389"
            },
            {
                "user": "U06MT9KDU7Q",
                "ts": "1709746187.658829"
            },
            {
                "user": "U06MT9KDU7Q",
                "ts": "1709746201.668819"
            },
            {
                "user": "U06MT9KDU7Q",
                "ts": "1709746208.087869"
            },
            {
                "user": "U06MT9KDU7Q",
                "ts": "1709746362.086959"
            },
            {
                "user": "U03HC3XHZGW",
                "ts": "1709746609.779139"
            },
            {
                "user": "U06MT9KDU7Q",
                "ts": "1709747478.694699"
            },
            {
                "user": "U06MT9KDU7Q",
                "ts": "1709747498.984949"
            },
            {
                "user": "U06MJU6LBN3",
                "ts": "1709806741.796559"
            },
            {
                "user": "U05EREC3DCK",
                "ts": "1710504346.522699"
            },
            {
                "user": "U06MT9KDU7Q",
                "ts": "1710801051.318019"
            },
            {
                "user": "U05EREC3DCK",
                "ts": "1712056148.621059"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8QWx8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you’ve wondered:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "why the only copilot we have is for VSCode"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "why not every app is end-user programmable"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI wondered the same thing, and I’ve built ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/omnipilot.ai"
                            },
                            {
                                "type": "text",
                                "text": "), an AI copilot that works everywhere on macOS.\n\nSpecifically it lets you invoke GPT to type into any app ("
                            },
                            {
                                "type": "text",
                                "text": "particularly interesting to me is it works great in Xcode",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "), can also autocomplete text in any app, and lets you chat with GPT-4 with context from your recent apps. I’d really appreciate any feedback or first impressions!\n\nRe end-user programmability I’m also working on making it more possible for people to make little “automations” on their computer, whether it’s adding buttons to Finder to convert files or recording little AI-enhanced macros.\n\nSome specific questions I’d love feedback:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "How often do you find yourself wanting help editing code outside of a Github Copilot-enabled environment? What are those situations or apps?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "What about text, do you wish you had a copilot for text too?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "What do you think of the “works everywhere” approach vs. a dedicated app?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Do the AI-macros sound appealing or meh?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Any thoughts on the landing page copy\/design?"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI’m also happy to answer any other questions. Thanks in advance for sharing your thoughts, it’s super helpful in shaping the product!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "fire",
                "users": [
                    "U0296ACR13M",
                    "U06J22WCP8T",
                    "U017SHBAFE3"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U03HC3XHZGW",
        "type": "message",
        "ts": "1709744998.875189",
        "edited": {
            "user": "U03HC3XHZGW",
            "ts": "1709745040.000000"
        },
        "client_msg_id": "54d8f2f6-3f29-4833-af75-b083fb34f58d",
        "text": "Does it work in the terminal? That’s a big place I want autocomplete that I don’t currently have it.\n\nedit: I have now checked out the landing page and see that it does :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "675dd03f5d4b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-02\/3889194159300_675dd03f5d4baa904b88_72.jpg",
            "first_name": "Daniel",
            "real_name": "Daniel Sosebee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dnsosebee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709743834.765159",
        "parent_user_id": "U06MT9KDU7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xBb5U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does it work in the terminal? That’s a big place I want autocomplete that I don’t currently have it.\n\nedit: I have now checked out the landing page and see that it does "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03HC3XHZGW",
        "type": "message",
        "ts": "1709745146.128849",
        "client_msg_id": "62ba9100-5f74-4967-95ef-fc4d57067826",
        "text": "Super cool. How do you build context? is it always based on the current text buffer?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "675dd03f5d4b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-02\/3889194159300_675dd03f5d4baa904b88_72.jpg",
            "first_name": "Daniel",
            "real_name": "Daniel Sosebee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dnsosebee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709743834.765159",
        "parent_user_id": "U06MT9KDU7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M1Rry",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Super cool. How do you build context? is it always based on the current text buffer?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03HC3XHZGW",
        "type": "message",
        "ts": "1709745505.757389",
        "client_msg_id": "b799be53-27dc-4512-b11d-9e0f2cc2ad32",
        "text": "It would be super cool if the clipboard contents were always appended to context. That way you could google\/chatgpt a question, highlight and copy the answer, and then focus in your code editor etc. and get more relevant completions. In general I’m interested in UI that allows people to manage context more explicitly",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "675dd03f5d4b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-02\/3889194159300_675dd03f5d4baa904b88_72.jpg",
            "first_name": "Daniel",
            "real_name": "Daniel Sosebee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dnsosebee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709743834.765159",
        "parent_user_id": "U06MT9KDU7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a5Tt+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It would be super cool if the clipboard contents were always appended to context. That way you could google\/chatgpt a question, highlight and copy the answer, and then focus in your code editor etc. and get more relevant completions. In general I’m interested in UI that allows people to manage context more explicitly"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06MT9KDU7Q",
        "type": "message",
        "ts": "1709746187.658829",
        "client_msg_id": "b5d32924-77cf-4707-a3cb-068868c02e80",
        "text": "Yes! Builds context based on what’s in the current app",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "45dbefd2ff51",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-06\/6758886431092_45dbefd2ff513c38cd57_72.png",
            "first_name": "Michael",
            "real_name": "Michael Jelly",
            "display_name": "Michael Jelly",
            "team": "T5TCAFTA9",
            "name": "michael108",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709743834.765159",
        "parent_user_id": "U06MT9KDU7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "19wQO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes! Builds context based on what’s in the current app"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06MT9KDU7Q",
        "type": "message",
        "ts": "1709746201.668819",
        "client_msg_id": "a2d5e4c1-f121-4b51-97be-916f59e9840e",
        "text": "when you select text and press Option Space",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "45dbefd2ff51",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-06\/6758886431092_45dbefd2ff513c38cd57_72.png",
            "first_name": "Michael",
            "real_name": "Michael Jelly",
            "display_name": "Michael Jelly",
            "team": "T5TCAFTA9",
            "name": "michael108",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709743834.765159",
        "parent_user_id": "U06MT9KDU7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fhpd1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "when you select text and press Option Space"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06MT9KDU7Q",
        "type": "message",
        "ts": "1709746208.087869",
        "client_msg_id": "cfaf43b6-ab04-40c9-b264-1e5387c4e46a",
        "text": "then that text goes into the context",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "45dbefd2ff51",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-06\/6758886431092_45dbefd2ff513c38cd57_72.png",
            "first_name": "Michael",
            "real_name": "Michael Jelly",
            "display_name": "Michael Jelly",
            "team": "T5TCAFTA9",
            "name": "michael108",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709743834.765159",
        "parent_user_id": "U06MT9KDU7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AAiTN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "then that text goes into the context"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U03HC3XHZGW"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "",
        "files": [
            {
                "id": "F06N5FD15CM",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U06MT9KDU7Q",
        "display_as_bot": false,
        "type": "message",
        "ts": "1709746362.086959",
        "client_msg_id": "32a54000-1f4e-4238-8d3d-359b307f6a68",
        "thread_ts": "1709743834.765159",
        "parent_user_id": "U06MT9KDU7Q"
    },
    {
        "user": "U03HC3XHZGW",
        "type": "message",
        "ts": "1709746609.779139",
        "client_msg_id": "0fdfcd7a-484f-4381-b8a9-7187e1c9e6d4",
        "text": "Awesome, excited to try it out!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "675dd03f5d4b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-02\/3889194159300_675dd03f5d4baa904b88_72.jpg",
            "first_name": "Daniel",
            "real_name": "Daniel Sosebee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dnsosebee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709743834.765159",
        "parent_user_id": "U06MT9KDU7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kdsAj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Awesome, excited to try it out!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1709746806.845039",
        "client_msg_id": "2e19dcda-c7c8-43ae-8daa-fca1a0182a51",
        "text": "I see the main problem of your project in the wish to design a complex system from scratch. Such projects have basically always failed, for running out of steam before accomplishing anything useful.\n\nOne of the insights from John Gall's \"Systems Bible\" (highly recommended!) is (chapter 11):  \"A complex system that works is invariably found to have evolved from a simple system that worked\" with the corollary that \"A complex system designed from scratch never works and cannot be made to work. you have to start over, beginning with a working simple system.\"\n\nThat's in fact how today's computing systems evolved over a few decades. The result is a bit of a mess, but it works. And it's so big by now that it cannot be replaced, only evolved.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709730829.580339",
        "parent_user_id": "U06MKD39QR4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zknT5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I see the main problem of your project in the wish to design a complex system from scratch. Such projects have basically always failed, for running out of steam before accomplishing anything useful.\n\nOne of the insights from John Gall's \"Systems Bible\" (highly recommended!) is (chapter 11):  \"A complex system that works is invariably found to have evolved from a simple system that worked\" with the corollary that \"A complex system designed from scratch never works and cannot be made to work. you have to start over, beginning with a working simple system.\"\n\nThat's in fact how today's computing systems evolved over a few decades. The result is a bit of a mess, but it works. And it's so big by now that it cannot be replaced, only evolved."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U06MT9KDU7Q",
        "type": "message",
        "ts": "1709747478.694699",
        "client_msg_id": "da19f1a0-ab51-4a91-b385-baee91bd6c8d",
        "text": "also! you can also @tag windows that you’ve had open recently to add them to the context in the option space chat",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "45dbefd2ff51",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-06\/6758886431092_45dbefd2ff513c38cd57_72.png",
            "first_name": "Michael",
            "real_name": "Michael Jelly",
            "display_name": "Michael Jelly",
            "team": "T5TCAFTA9",
            "name": "michael108",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709743834.765159",
        "parent_user_id": "U06MT9KDU7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aYWpX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "also! you can also @tag windows that you’ve had open recently to add them to the context in the option space chat"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06MT9KDU7Q",
        "type": "message",
        "ts": "1709747498.984949",
        "client_msg_id": "481a74ff-9ba3-49f9-87e8-86093e127e8e",
        "text": "and any recently selected text too",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "45dbefd2ff51",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-06\/6758886431092_45dbefd2ff513c38cd57_72.png",
            "first_name": "Michael",
            "real_name": "Michael Jelly",
            "display_name": "Michael Jelly",
            "team": "T5TCAFTA9",
            "name": "michael108",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709743834.765159",
        "parent_user_id": "U06MT9KDU7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MVl7L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and any recently selected text too"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]