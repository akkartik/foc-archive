[
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1599741546.043900",
        "client_msg_id": "6622cbdb-d59b-49b7-a397-49fb83aaecba",
        "text": "Thanks Scott. I want both implementations and papers. Whatever you've got, really.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598803777.040600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mtR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks Scott. I want both implementations and papers. Whatever you've got, really."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1599760949.044100",
        "client_msg_id": "56be605b-8cc9-418d-9c1c-4752e5aa7e99",
        "text": "Clayxels (<https:\/\/assetstore.unity.com\/packages\/templates\/systems\/clayxels-165312>) is an awesome Dreams inspired renderer for Unity.  It's currently on sale as part of the Unity asset store Humble Bundle (<https:\/\/www.humblebundle.com\/software\/unity-games-and-game-dev-assets-software>)\n\nSpeaking of Dreams there are quite a few talks about the technical implementation of Dreams.  Starting with Learning from Failure from Siggraph 2015 (<http:\/\/advances.realtimerendering.com\/s2015\/AlexEvans_SIGGRAPH-2015-sml.pdf>), video from Ignite here (<https:\/\/www.youtube.com\/watch?v=u9KNtnCZDMI>).  This is a great talk because its one of the few that shows all of the various \"failed\" implementations and gives them equal time.  The final one he presents as the answer is not actually the shipped Dreams renderer, and they shipped something that incorporates many of the ideas in the renderer. They also did a deep technical dive explaining Dream's architecture (not only rendering) here <https:\/\/www.youtube.com\/watch?v=1Gce4l5orts>.\n\nThis style of renderer takes a list of implicit signed distance field edits (signed distance function + operator, roughly the same as this list here <https:\/\/iquilezles.org\/www\/articles\/distfunctions\/distfunctions.htm>, but using max norm instead of L2 norm), evaluates them hierarchically, and caches the result in 8x8x8 volumes, basically building an octree  These volumes are renderer as cubes, and the cached sdf is raymarched.  In order to get the painterly look they also generate point splats at the boundary of the surface.  Clayxels does something much closer to the Dream's renderer from the paper, and only splats points, no raymarching.  A simple (CPU) example is here <https:\/\/github.com\/gheshu\/Sculpt>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598803777.040600",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KPXhC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Clayxels ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/assetstore.unity.com\/packages\/templates\/systems\/clayxels-165312"
                            },
                            {
                                "type": "text",
                                "text": ") is an awesome Dreams inspired renderer for Unity.  It's currently on sale as part of the Unity asset store Humble Bundle ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.humblebundle.com\/software\/unity-games-and-game-dev-assets-software"
                            },
                            {
                                "type": "text",
                                "text": ")\n\nSpeaking of Dreams there are quite a few talks about the technical implementation of Dreams.  Starting with Learning from Failure from Siggraph 2015 ("
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/advances.realtimerendering.com\/s2015\/AlexEvans_SIGGRAPH-2015-sml.pdf"
                            },
                            {
                                "type": "text",
                                "text": "), video from Ignite here ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=u9KNtnCZDMI"
                            },
                            {
                                "type": "text",
                                "text": ").  This is a great talk because its one of the few that shows all of the various \"failed\" implementations and gives them equal time.  The final one he presents as the answer is not actually the shipped Dreams renderer, and they shipped something that incorporates many of the ideas in the renderer. They also did a deep technical dive explaining Dream's architecture (not only rendering) here "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=1Gce4l5orts"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nThis style of renderer takes a list of implicit signed distance field edits (signed distance function + operator, roughly the same as this list here "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/iquilezles.org\/www\/articles\/distfunctions\/distfunctions.htm"
                            },
                            {
                                "type": "text",
                                "text": ", but using max norm instead of L2 norm), evaluates them hierarchically, and caches the result in 8x8x8 volumes, basically building an octree  These volumes are renderer as cubes, and the cached sdf is raymarched.  In order to get the painterly look they also generate point splats at the boundary of the surface.  Clayxels does something much closer to the Dream's renderer from the paper, and only splats points, no raymarching.  A simple (CPU) example is here "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/gheshu\/Sculpt"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJN1TAYEQ",
                    "UA14TGLTC",
                    "UNCP67JSK"
                ],
                "count": 3
            }
        ]
    }
]