[
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1560278176.045100",
        "client_msg_id": "82f59272-7e53-4834-8853-d69047a68d33",
        "text": "The just announced new Dropbox is potentially interesting to this group <https:\/\/www.dropbox.com\/features\/new> Mainly as an attempt to improve the file system.\n&gt; Quietly living inside file managers built by operating-system companies “served us well,” says Dropbox CEO and cofounder Drew Houston.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560278176.045100",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1560278301.046200",
        "reply_users": [
            "UE0ETTCG7",
            "UJK8MKYAZ"
        ],
        "replies": [
            {
                "user": "UE0ETTCG7",
                "ts": "1560278192.045400"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1560278208.045700"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1560278279.045900"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1560278301.046200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "Dropbox Updates: Meet the Latest Version",
                "title_link": "https:\/\/www.dropbox.com\/features\/new",
                "text": "See how you can bring together your content, your tools, and people. Learn about the latest features included in the most recent Dropbox updates.",
                "fallback": "Dropbox Updates: Meet the Latest Version",
                "from_url": "https:\/\/www.dropbox.com\/features\/new",
                "service_icon": "https:\/\/cfl.dropboxstatic.com\/static\/images\/favicon-vflUeLeeY.ico",
                "service_name": "dropbox.com",
                "id": 1,
                "original_url": "https:\/\/www.dropbox.com\/features\/new"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0gg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The just announced new Dropbox is potentially interesting to this group "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.dropbox.com\/features\/new"
                            },
                            {
                                "type": "text",
                                "text": " Mainly as an attempt to improve the file system."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Quietly living inside file managers built by operating-system companies “served us well,” says Dropbox CEO and cofounder Drew Houston."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFV8P4472",
                    "UJK8MKYAZ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1560278192.045400",
        "client_msg_id": "809b8e77-32d5-45b9-8c71-63a2e904f1dc",
        "text": "There's also a Fast Company article with some quotes here <https:\/\/www.fastcompany.com\/90362055\/how-dropbox-is-finally-breaking-free-of-the-folder>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560278176.045100",
        "parent_user_id": "UE0ETTCG7",
        "attachments": [
            {
                "service_name": "Fast Company",
                "title": "How Dropbox is finally breaking free of the folder",
                "title_link": "https:\/\/www.fastcompany.com\/90362055\/how-dropbox-is-finally-breaking-free-of-the-folder",
                "text": "An exclusive look at Dropbox’s all-new version, which adds full-blown Windows and Mac apps, integrations with other workplace tools, and more.",
                "fallback": "Fast Company: How Dropbox is finally breaking free of the folder",
                "image_url": "https:\/\/images.fastcompany.net\/image\/upload\/w_1280,f_auto,q_auto,fl_lossy\/wp-cms\/uploads\/2019\/06\/p-1-how-dropbox-is-finally-breaking-free-of-the-folder.jpg",
                "image_width": 444,
                "image_height": 250,
                "ts": 1560284146,
                "from_url": "https:\/\/www.fastcompany.com\/90362055\/how-dropbox-is-finally-breaking-free-of-the-folder",
                "image_bytes": 163501,
                "service_icon": "https:\/\/www.fastcompany.com\/apple-touch-icon.png?v=5",
                "id": 1,
                "original_url": "https:\/\/www.fastcompany.com\/90362055\/how-dropbox-is-finally-breaking-free-of-the-folder"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HwpgZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's also a Fast Company article with some quotes here "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.fastcompany.com\/90362055\/how-dropbox-is-finally-breaking-free-of-the-folder"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1560278208.045700",
        "client_msg_id": "d3c5edf3-86a3-41fd-9002-163c4429c347",
        "text": "Can't say I really understand what this is yet, from the screenshots it looks like they put Slack in the file system...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560278176.045100",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iRD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can't say I really understand what this is yet, from the screenshots it looks like they put Slack in the file system..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1560278279.045900",
        "client_msg_id": "d1b2bccd-191e-43db-921d-9d45dcfde5a5",
        "text": "I really wish this had gone somewhere: <https:\/\/en.wikipedia.org\/wiki\/WinFS>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560278176.045100",
        "parent_user_id": "UE0ETTCG7",
        "attachments": [
            {
                "image_url": "https:\/\/upload.wikimedia.org\/wikipedia\/en\/9\/96\/WinFSCalendar.png",
                "image_width": 387,
                "image_height": 258,
                "image_bytes": 143972,
                "title": "WinFS",
                "title_link": "https:\/\/en.wikipedia.org\/wiki\/WinFS",
                "from_url": "https:\/\/en.wikipedia.org\/wiki\/WinFS",
                "author_name": "Wikipedia",
                "author_link": "https:\/\/en.wikipedia.org\/",
                "text": "WinFS (short for Windows Future Storage) was the code name for a canceled data storage and management system project based on relational databases, developed by Microsoft and first demonstrated in 2003 as an advanced storage subsystem for the Microsoft Windows operating system, designed for persistence and management of structured, semi-structured and unstructured data.\nWinFS includes a relational database for storage of information, and allows any type of information to be stored in it, provided there is a well defined schema for the type. Individual data items could then be related together by relationships, which are either inferred by the system based on certain attributes or explicitly stated by the user. As the data has a well defined schema, any application can reuse the data; and using the relationships, related data can be effectively organized as well as retrieved. Because the system knows the structure and intent of the information, it can be used to make complex queries that enable advanced searching through the data and aggregating various data items by exploiting the relationships between them.\n\nWhile WinFS and its shared type schema make it possible for an application to recognize the different data types, the application still has to be coded to render the different data types. Consequently, it would not allow development of a single application that can view or edit all data types; rather, what WinFS enables applications to do is understand the structure of all data and extract the information that they can use further. When WinFS was introduced at the 2003 Professional Developers Conference, Microsoft also released a video presentation, named IWish, showing mockup interfaces that showed how applications would expose interfaces that take advantage of a unified type system. The concepts shown in the video ranged from applications using the relationships of items to dynamically offer filtering options to applications grouping multiple related data types and rendering them in a unified presentation.\nWinFS was billed as one of the pillars of the \"Longhorn\" wave of technologies, and would ship as part of the next version of Windows.  It was subsequently decided that WinFS would ship after the release of Windows Vista, but those plans were shelved in June 2006, with some of its component technologies being integrated into <http:\/\/ADO.NET|ADO.NET> and Microsoft SQL Server.",
                "fallback": "wikipedia: WinFS",
                "service_icon": "https:\/\/a.slack-edge.com\/bfaba\/img\/unfurl_icons\/wikipedia.png",
                "id": 1,
                "original_url": "https:\/\/en.wikipedia.org\/wiki\/WinFS"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rlh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really wish this had gone somewhere: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/WinFS"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1560278301.046200",
        "client_msg_id": "6adef526-a264-4c03-abbc-111e6430880c",
        "text": "There's a blog post now too <https:\/\/blog.dropbox.com\/topics\/product-tips\/new-dropbox?_tk=social&amp;oqa=192pl10twmov>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560278176.045100",
        "parent_user_id": "UE0ETTCG7",
        "attachments": [
            {
                "title": "Meet the new Dropbox",
                "title_link": "https:\/\/blog.dropbox.com\/topics\/product-tips\/new-dropbox?_tk=social&oqa=192pl10twmov",
                "text": "It’s the Dropbox you know and love, but better, a single workspace to organize content, connect tools, and bring everyone together.",
                "fallback": "Meet the new Dropbox",
                "image_url": "https:\/\/aem.dropbox.com\/cms\/content\/dam\/dropbox\/blog\/files\/2019\/06\/new-dropbox-social.png",
                "from_url": "https:\/\/blog.dropbox.com\/topics\/product-tips\/new-dropbox?_tk=social&oqa=192pl10twmov",
                "image_width": 478,
                "image_height": 250,
                "image_bytes": 29105,
                "service_icon": "https:\/\/cfl.dropboxstatic.com\/static\/images\/favicon-vflUeLeeY.ico",
                "service_name": "blog.dropbox.com",
                "id": 1,
                "original_url": "https:\/\/blog.dropbox.com\/topics\/product-tips\/new-dropbox?_tk=social&amp;oqa=192pl10twmov"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uadN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's a blog post now too "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/blog.dropbox.com\/topics\/product-tips\/new-dropbox?_tk=social&amp;oqa=192pl10twmov",
                                "text": "https:\/\/blog.dropbox.com\/topics\/product-tips\/new-dropbox?_tk=social&oqa=192pl10twmov"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1560279248.052500",
        "edited": {
            "user": "UFV8P4472",
            "ts": "1560279265.000000"
        },
        "client_msg_id": "ab603685-db1c-435a-930d-1b3b0e76b756",
        "text": "A separate thread based on <@UJK8MKYAZ>’s comment <https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1560278279045900?thread_ts=1560278176.045100&amp;cid=C5U3SEW6A>\n\nI’ve thought about WinFS on and off for years, often hearing the same refrain from others who yearn for what WinFS might have been. And now I’m turning on it: *if a filesystem-level database was that good an idea, we’d have it already.* I’m being deliberately provocative here because I genuinely want to know what problems WinFS could have solved that\n1. aren’t just as solvable at app\/userspace level (sorry, I’m not an OS expert)\n2. are based on what we know of WinFS’s actual API and capabilities, rather than capabilities of other databases that we wish a filesystem would have. (I’m _also_ interested in apps using _other_ databasey filesystem features, but it’s a slightly different discussion)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "reply_count": 35,
        "reply_users_count": 7,
        "latest_reply": "1560419333.075600",
        "reply_users": [
            "UJK8MKYAZ",
            "UFV8P4472",
            "U8A5MS6R1",
            "UCUSW7WVD",
            "UEQ6M68H0",
            "UDQBTJ211",
            "UC6997THT"
        ],
        "replies": [
            {
                "user": "UJK8MKYAZ",
                "ts": "1560279544.052800"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1560279587.053000"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1560279616.053200"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1560279635.053400"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1560279721.053600"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1560279791.053800"
            },
            {
                "user": "UFV8P4472",
                "ts": "1560279895.054000"
            },
            {
                "user": "UFV8P4472",
                "ts": "1560280028.054200"
            },
            {
                "user": "UFV8P4472",
                "ts": "1560280069.054400"
            },
            {
                "user": "UFV8P4472",
                "ts": "1560280159.054600"
            },
            {
                "user": "UFV8P4472",
                "ts": "1560280179.054800"
            },
            {
                "user": "UFV8P4472",
                "ts": "1560281499.055000"
            },
            {
                "user": "UFV8P4472",
                "ts": "1560281568.055300"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1560286138.055700"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1560286636.056000"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1560286850.056200"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1560286880.056400"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1560286981.056600"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1560287127.056800"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1560287237.057000"
            },
            {
                "user": "UFV8P4472",
                "ts": "1560289657.057400"
            },
            {
                "user": "UFV8P4472",
                "ts": "1560289962.057600"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1560290728.062900"
            },
            {
                "user": "UFV8P4472",
                "ts": "1560291994.063200"
            },
            {
                "user": "UFV8P4472",
                "ts": "1560292476.063400"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1560292571.063700"
            },
            {
                "user": "UFV8P4472",
                "ts": "1560292590.063900"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1560294042.064200"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1560294158.064400"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1560296577.065000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1560317937.065400"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1560333307.066300"
            },
            {
                "user": "UC6997THT",
                "ts": "1560392145.068000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1560413639.075400"
            },
            {
                "user": "UC6997THT",
                "ts": "1560419333.075600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1560278279045900?thread_ts=1560278176.045100&amp;cid=C5U3SEW6A",
                "fallback": "[June 11th, 2019 11:37 AM] d4hines: I really wish this had gone somewhere: <https:\/\/en.wikipedia.org\/wiki\/WinFS>",
                "ts": "1560278279.045900",
                "author_id": "UJK8MKYAZ",
                "author_subname": "Daniel Hines",
                "channel_id": "C5U3SEW6A",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "I really wish this had gone somewhere: <https:\/\/en.wikipedia.org\/wiki\/WinFS>",
                "author_name": "Daniel Hines",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/UJK8MKYAZ",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F00b63%2Fimg%2Favatars%2Fava_0025-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1560278279045900?thread_ts=1560278176.045100&amp;cid=C5U3SEW6A",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YhMt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A separate thread based on "
                            },
                            {
                                "type": "user",
                                "user_id": "UJK8MKYAZ"
                            },
                            {
                                "type": "text",
                                "text": "’s comment "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1560278279045900?thread_ts=1560278176.045100&amp;cid=C5U3SEW6A",
                                "text": "https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1560278279045900?thread_ts=1560278176.045100&cid=C5U3SEW6A"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI’ve thought about WinFS on and off for years, often hearing the same refrain from others who yearn for what WinFS might have been. And now I’m turning on it: "
                            },
                            {
                                "type": "text",
                                "text": "if a filesystem-level database was that good an idea, we’d have it already.",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " I’m being deliberately provocative here because I genuinely want to know what problems WinFS could have solved that\n1. aren’t just as solvable at app\/userspace level (sorry, I’m not an OS expert)\n2. are based on what we know of WinFS’s actual API and capabilities, rather than capabilities of other databases that we wish a filesystem would have. (I’m "
                            },
                            {
                                "type": "text",
                                "text": "also",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " interested in apps using "
                            },
                            {
                                "type": "text",
                                "text": "other",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " databasey filesystem features, but it’s a slightly different discussion)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJUGB1XGD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1560279544.052800",
        "client_msg_id": "d45f86be-d75f-4489-a5a1-3d32c3788340",
        "text": "&gt; “It is better to have 100 functions operate on one data structure than 10 functions on 10 data structures.” —Alan Perlis",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WeyXF",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "“It is better to have 100 functions operate on one data structure than 10 functions on 10 data structures.” —Alan Perlis"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1560279587.053000",
        "client_msg_id": "916ff46a-7663-473a-aa41-9c9dded5afc4",
        "text": "Files are impenetrable blobs - I literal have to _parse_ them to understand anything about their contents.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bi9in",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Files are impenetrable blobs - I literal have to "
                            },
                            {
                                "type": "text",
                                "text": "parse",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " them to understand anything about their contents."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1560279616.053200",
        "client_msg_id": "4963bb01-433d-4de2-b7b1-aed92ef58d0c",
        "text": "Text isn’t information, not until it’s understood.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z0J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Text isn’t information, not until it’s understood."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1560279635.053400",
        "client_msg_id": "2aad6cd3-3516-4a26-a73a-507c74be4dcb",
        "text": "But a database is different - as soon as I know it’s lingo, I can ask it any question it’s capable of answering.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "08gUT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But a database is different - as soon as I know it’s lingo, I can ask it any question it’s capable of answering."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1560279721.053600",
        "client_msg_id": "bf654208-3077-45ea-954f-ea2e2de396e3",
        "text": "All your apps store their data in some sort of file, but that file is completely hidden to every other app (and to you - you have to know the path or grep for it)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IKps=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "All your apps store their data in some sort of file, but that file is completely hidden to every other app (and to you - you have to know the path or grep for it)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1560279791.053800",
        "client_msg_id": "8e1b5e77-4884-4e60-bef8-85a088043a04",
        "text": "It makes a lot more sense to me to organize things via much flatter namespaced trees that are queryable with SQL or Datalog or some other well understood semantic.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pD8AP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It makes a lot more sense to me to organize things via much flatter namespaced trees that are queryable with SQL or Datalog or some other well understood semantic."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1560279895.054000",
        "client_msg_id": "3938f183-5ec6-40e9-a051-2f725e521073",
        "text": "Which is why any sane engineer uses a preexisting file format and I\/O library to handle all that for them.\n\nI understand the argument here, but my point is that the benefits mostly disappear at practical level, because\n1. if WinFS’s model doesn’t completely match your needs, you need to move your app’s Format away from what WinFS assumes\/understands\n2. total platform lock-in",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "beWb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Which is why any sane engineer uses a preexisting file format and I\/O library to handle all that for them.\n\nI understand the argument here, but my point is that the benefits mostly disappear at practical level, because\n1. if WinFS’s model doesn’t completely match your needs, you need to move your app’s Format away from what WinFS assumes\/understands\n2. total platform lock-in"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1560280028.054200",
        "client_msg_id": "24268ecb-8d16-4efc-8c43-d11b9a0e3992",
        "text": "As for queryability by the OS, Spotlight seems to work OK. Separate indexes seem to work OK. They’re not perfect but they have major pragmatic benefits.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0C=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As for queryability by the OS, Spotlight seems to work OK. Separate indexes seem to work OK. They’re not perfect but they have major pragmatic benefits."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1560280069.054400",
        "client_msg_id": "36165c1f-e16d-42ee-bcc5-39c9b2861fa1",
        "text": "What I’m going for here, if it isn’t clear: I understand the theoretical benefits. I’m talking about actual product benefits that relate to how people actually use computers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=bL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What I’m going for here, if it isn’t clear: I understand the theoretical benefits. I’m talking about actual product benefits that relate to how people actually use computers."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1560280159.054600",
        "client_msg_id": "725515a2-8e79-4ca9-b811-eff0d5e0f1d8",
        "text": "(At this point I have to confess that I don’t know exactly why WinFS died. My suspicion is that it turned out to have major problems at the practical\/product level. However, it may be a totally different story.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8wT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(At this point I have to confess that I don’t know exactly why WinFS died. My suspicion is that it turned out to have major problems at the practical\/product level. However, it may be a totally different story.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1560280179.054800",
        "client_msg_id": "b533dc05-da85-4e93-a2d3-f6ab1254ffcc",
        "text": "_goes and googles it_",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "weeF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "goes and googles it",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1560281499.055000",
        "client_msg_id": "a019c3c4-59ea-4483-911d-e23c19eb54c4",
        "text": "Totally cheating here by pointing at discussion of The Article instead of just The Article, but The Article is far too long for me to read and digest right now, and also the discussion turned up a _lot_ of really good little points: <https:\/\/www.reddit.com\/r\/programming\/comments\/1svf88\/why_winfs_died_long\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "attachments": [
            {
                "service_name": "reddit",
                "title": "r\/programming - Why WinFS died [Long]",
                "title_link": "https:\/\/www.reddit.com\/r\/programming\/comments\/1svf88\/why_winfs_died_long\/",
                "text": "168 votes and 73 comments so far on Reddit",
                "fallback": "reddit: r\/programming - Why WinFS died [Long]",
                "thumb_url": "https:\/\/external-preview.redd.it\/F6AGihc6sjMmnVLm-XWIe0jcP2vPZpBwjOqH2PhZX-c.jpg?auto=webp&s=13353f39561ed11ccd79ec9880d3b36c19dcc81c",
                "from_url": "https:\/\/www.reddit.com\/r\/programming\/comments\/1svf88\/why_winfs_died_long\/",
                "thumb_width": 200,
                "thumb_height": 200,
                "service_icon": "https:\/\/www.redditstatic.com\/desktop2x\/img\/favicon\/apple-icon-57x57.png",
                "id": 1,
                "original_url": "https:\/\/www.reddit.com\/r\/programming\/comments\/1svf88\/why_winfs_died_long\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mhB3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Totally cheating here by pointing at discussion of The Article instead of just The Article, but The Article is far too long for me to read and digest right now, and also the discussion turned up a "
                            },
                            {
                                "type": "text",
                                "text": "lot",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of really good little points: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.reddit.com\/r\/programming\/comments\/1svf88\/why_winfs_died_long\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1560281568.055300",
        "client_msg_id": "163503bb-e113-4e4b-91d1-3102a59f7276",
        "text": "… especially the big Rob Pike quote.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "naIG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "… especially the big Rob Pike quote."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1560286138.055700",
        "client_msg_id": "4a20dc57-6088-4782-88cf-63b06ac875cd",
        "text": "Things that are not solvable at app\/userspace level are cross-app data links.\n\nE.g. one photos app organizes your photos, another journal app (made by a different developer, without knowledge of photos app) lets you journal. How do you embed a photo in your journal? The filesystem answer is export\/import and you end up with two copies with no record of the relationship. The WinFS answer is that the journal app can just reach into the db and link directly to the photo *item*. Now you can find uses (\"where is this photo used?\"), enforce policy (\"don't let app A use any photos labelled X\") and have updates to the photo (possibly via a third photo editor app) automatically flow to the journal.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZXYZO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Things that are not solvable at app\/userspace level are cross-app data links.\n\nE.g. one photos app organizes your photos, another journal app (made by a different developer, without knowledge of photos app) lets you journal. How do you embed a photo in your journal? The filesystem answer is export\/import and you end up with two copies with no record of the relationship. The WinFS answer is that the journal app can just reach into the db and link directly to the photo "
                            },
                            {
                                "type": "text",
                                "text": "item",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Now you can find uses (\"where is this photo used?\"), enforce policy (\"don't let app A use any photos labelled X\") and have updates to the photo (possibly via a third photo editor app) automatically flow to the journal."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UAL7940NM"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1560286636.056000",
        "client_msg_id": "56c320b1-7801-4e2d-ba37-230096494fe0",
        "text": "&gt; But a database is different - as soon as I know its lingo, I can ask it any question it’s capable of answering.\n\nDepends on what you mean by \"its lingo\".\n\n• If you mean \"its schema\", then your statement is akin to saying you know what a function does because you know its signature. (Side note: functions can take string arguments, and databases can contain JSON blobs.)\n• If you mean \"what information it contains\", then you're right, but you've bitten off something a _lot_ harder. Parsing files is a miniscule fraction of the work involved in understanding what information a data store contains.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ksx2",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But a database is different - as soon as I know its lingo, I can ask it any question it’s capable of answering."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nDepends on what you mean by \"its lingo\".\n\n• If you mean \"its schema\", then your statement is akin to saying you know what a function does because you know its signature. (Side note: functions can take string arguments, and databases can contain JSON blobs.)\n• If you mean \"what information it contains\", then you're right, but you've bitten off something a "
                            },
                            {
                                "type": "text",
                                "text": "lot",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " harder. Parsing files is a miniscule fraction of the work involved in understanding what information a data store contains."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "UFV8P4472"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1560286850.056200",
        "client_msg_id": "6376c8db-cc50-473b-b1cf-b054e8a1a6d4",
        "text": "There’s a relationship between schema and meaning. It’s not perfect, but I’d take it over nothing _any day_.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KWSd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There’s a relationship between schema and meaning. It’s not perfect, but I’d take it over nothing "
                            },
                            {
                                "type": "text",
                                "text": "any day",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1560286880.056400",
        "client_msg_id": "71c746e2-66a9-406b-85e2-acb63bc66a74",
        "text": "I’m OK with blobs, I just don’t think they should be the default.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nf2I5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m OK with blobs, I just don’t think they should be the default."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1560286981.056600",
        "client_msg_id": "e40f95bf-2c9e-4b10-9c97-87caed20a58e",
        "text": "Database &gt; XML or JSON &gt; unstructured text. I think that should be our default order of preference.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "89u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Database > XML or JSON > unstructured text. I think that should be our default order of preference."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1560287127.056800",
        "client_msg_id": "22c83205-98f5-465b-96b6-f9a8a3515cbe",
        "text": "Files are not nothing. I think you're massively overstating the benefits of a basic schema over the visual parsing my eye does when I look inside a file. And you're massively understating the kinds of problems both can run into in real-world situations.\n\nYour inequality is probably\/maybe right (comparing \"database\" with \"XML or JSON\" feels like a category error), but all the things on it are squished close to the origin on the spectrum, and the eldritch things from the abyss programmers have to often deal with extend all the way to infinity. So it feels unimportant.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FGz4R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Files are not nothing. I think you're massively overstating the benefits of a basic schema over the visual parsing my eye does when I look inside a file. And you're massively understating the kinds of problems both can run into in real-world situations.\n\nYour inequality is probably\/maybe right (comparing \"database\" with \"XML or JSON\" feels like a category error), but all the things on it are squished close to the origin on the spectrum, and the eldritch things from the abyss programmers have to often deal with extend all the way to infinity. So it feels unimportant."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1560287237.057000",
        "client_msg_id": "8e476931-486f-4f8a-9d38-f5df283c687f",
        "text": "I've never once been faced with a crappy, sprawling morass of a software project and found myself saying, \"I wish we had a more structured file system; I'm sure the nincompoops who created this would have done _much_ better with a structured file system.\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "435w9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've never once been faced with a crappy, sprawling morass of a software project and found myself saying, \"I wish we had a more structured file system; I'm sure the nincompoops who created this would have done "
                            },
                            {
                                "type": "text",
                                "text": "much",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " better with a structured file system.\""
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFV8P4472"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1560289657.057400",
        "client_msg_id": "74b7cab6-186a-4c1c-9dfd-b1d55460d3c1",
        "text": "<@U8A5MS6R1> Can’t OLE\/COM\/DCOM do all that? (Forgive me, this is me depending on ancient Windows knowledge that’s hugely out of date.)\n\nThe point is: Yes, that has to be handled at the OS level. But none of it requires an RDBMS underneath. The reason I mention DCOM is that I _think_ that all the uses you mention were possible in Windows already.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tG1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " Can’t OLE\/COM\/DCOM do all that? (Forgive me, this is me depending on ancient Windows knowledge that’s hugely out of date.)\n\nThe point is: Yes, that has to be handled at the OS level. But none of it requires an RDBMS underneath. The reason I mention DCOM is that I "
                            },
                            {
                                "type": "text",
                                "text": "think",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that all the uses you mention were possible in Windows already."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1560289962.057600",
        "client_msg_id": "6aa5c351-b5d2-4818-9218-cb75b745bca2",
        "text": "I had to refresh my knowledge of what OLE\/COM can do. OLE first appeared in 1990. Here’s an overview: <https:\/\/docs.microsoft.com\/en-us\/cpp\/mfc\/ole-background?view=vs-2019>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ai2ZU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I had to refresh my knowledge of what OLE\/COM can do. OLE first appeared in 1990. Here’s an overview: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.microsoft.com\/en-us\/cpp\/mfc\/ole-background?view=vs-2019"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1560290728.062900",
        "client_msg_id": "3ed25628-26da-4733-aaa7-cc21f646b5fd",
        "text": "<@UFV8P4472> Ah yes, I think the motivation behind OLE was similar. But it was more of a bolted-on, opt-in solution rather than a omnipresent substrate. Indexing and search would still have to be ad hoc solutions though? Still 'technically possible' on top of a typical file system.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z+j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFV8P4472"
                            },
                            {
                                "type": "text",
                                "text": " Ah yes, I think the motivation behind OLE was similar. But it was more of a bolted-on, opt-in solution rather than a omnipresent substrate. Indexing and search would still have to be ad hoc solutions though? Still 'technically possible' on top of a typical file system."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJVEPCVT6",
        "type": "message",
        "ts": "1560290741.063100",
        "client_msg_id": "30ad6065-c60a-4292-9c12-71bb28d2f715",
        "text": "How would you try to get developers on board with a FoC solution (eg. VPL), that is turning into a product? Let's say the product can be shown to perform better from a technical point of view than its mainstream alternatives, integrates well with conventional code, and also has a kind of \"coolness\" quality to it. How and through what channels would you approach developers to try it \/ use it?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9ae6680c0eb6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-01-30\/3025680183365_9ae6680c0eb63c7a6caa_72.jpg",
            "first_name": "Dan",
            "real_name": "Dan Stocker",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dan346",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560290741.063100",
        "reply_count": 4,
        "reply_users_count": 4,
        "latest_reply": "1560406126.075000",
        "reply_users": [
            "UCUSW7WVD",
            "UEQ6M68H0",
            "UEGFXUK3M",
            "UJVEPCVT6"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1560294603.064700"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1560318747.065900"
            },
            {
                "user": "UEGFXUK3M",
                "ts": "1560350736.066600"
            },
            {
                "user": "UJVEPCVT6",
                "ts": "1560406126.075000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Zxi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How would you try to get developers on board with a FoC solution (eg. VPL), that is turning into a product? Let's say the product can be shown to perform better from a technical point of view than its mainstream alternatives, integrates well with conventional code, and also has a kind of \"coolness\" quality to it. How and through what channels would you approach developers to try it \/ use it?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1560291994.063200",
        "client_msg_id": "2ffe0f91-9a3b-413b-be5c-bdd41a2db9f5",
        "text": "Yes, but describing it as “technically possible” implies that it’s a painful hack _in contrast_ to the good, proper solution that WinFS enables. At least, that’s the implication I’m reading from your phrasing. (Please feel free to disagree!)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I8la",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, but describing it as “technically possible” implies that it’s a painful hack "
                            },
                            {
                                "type": "text",
                                "text": "in contrast",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to the good, proper solution that WinFS enables. At least, that’s the implication I’m reading from your phrasing. (Please feel free to disagree!)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1560292476.063400",
        "edited": {
            "user": "UFV8P4472",
            "ts": "1560292509.000000"
        },
        "client_msg_id": "54fac65d-aba0-4837-bff1-2ddf95fbbe0d",
        "text": "And this cuts to the heart of why this topic fascinates me. The “RDBMS in the filesystem” solution is theoretically purer in certain ways. However, even if you were starting your OS from scratch (rather than trying to fit WinFS into the Windows ecosystem :scream: ) I bet that both the incidental _and essential_ complexity would far outweigh the benefits. Keeping the FS simple, and moving indexing and search off into their own ad-hoc modules, sounds like a better engineering solution for the use cases you describe. (To me, anyway. I bet there are a few good reasons why I’m wrong, and I’d love to hear them.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PYg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And this cuts to the heart of why this topic fascinates me. The “RDBMS in the filesystem” solution is theoretically purer in certain ways. However, even if you were starting your OS from scratch (rather than trying to fit WinFS into the Windows ecosystem "
                            },
                            {
                                "type": "emoji",
                                "name": "scream",
                                "unicode": "1f631"
                            },
                            {
                                "type": "text",
                                "text": " ) I bet that both the incidental "
                            },
                            {
                                "type": "text",
                                "text": "and essential",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " complexity would far outweigh the benefits. Keeping the FS simple, and moving indexing and search off into their own ad-hoc modules, sounds like a better engineering solution for the use cases you describe. (To me, anyway. I bet there are a few good reasons why I’m wrong, and I’d love to hear them.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1560292571.063700",
        "client_msg_id": "1a788240-6a5f-4a18-91ed-52405920b333",
        "text": "(I'm interested in the subject as someone dabbling in building an OS from scratch.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F2Px",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(I'm interested in the subject as someone dabbling in building an OS from scratch.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFV8P4472",
        "type": "message",
        "ts": "1560292590.063900",
        "edited": {
            "user": "UFV8P4472",
            "ts": "1560292602.000000"
        },
        "client_msg_id": "57dc35de-dafc-4448-96df-36d270e409f4",
        "text": "And I should pause for a moment just to thank everyone for participating in this thread and entertaining my rabble-rousing for a Big Software Architecture Idealism argument",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge9db5e1065d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce9db5e1065df82be338b2d831201fc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Yoz Grahame",
            "display_name": "yoz",
            "team": "T5TCAFTA9",
            "name": "yoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gu5ma",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And I should pause for a moment just to thank everyone for participating in this thread and entertaining my rabble-rousing for a Big Software Architecture Idealism argument"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1560294042.064200",
        "client_msg_id": "d7c92891-a0b7-41d2-bf01-438b5414458f",
        "text": "I wouldn't say painful hack, but perhaps a less optimal outcome. TBH I'm not so sure this problem can\/should be solved entirely the persistence layer (I'm also not a big fan of the relational model). However I do feel when a feature is reimplemented in 1000 different ways in the higher layers, there might be benefit in pushing down a generic version of that pattern into the lower layers. In this specific case I see the features of *transclusion* and *links* - these notions should be provided by an OS starting from scratch (not just for persistence but also in the UI) because we're fundamentally dealing with mostly interconnected ideas and media, rather than disjoint and isolated ones.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uIdO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wouldn't say painful hack, but perhaps a less optimal outcome. TBH I'm not so sure this problem can\/should be solved entirely the persistence layer (I'm also not a big fan of the relational model). However I do feel when a feature is reimplemented in 1000 different ways in the higher layers, there might be benefit in pushing down a generic version of that pattern into the lower layers. In this specific case I see the features of "
                            },
                            {
                                "type": "text",
                                "text": "transclusion",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "links",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " - these notions should be provided by an OS starting from scratch (not just for persistence but also in the UI) because we're fundamentally dealing with mostly interconnected ideas and media, rather than disjoint and isolated ones."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAL7940NM"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1560294158.064400",
        "client_msg_id": "a7f2a4ba-e61a-4ec0-b941-8de5531e525c",
        "text": "My longer spiel on this is here: <https:\/\/shalabh.com\/programmable-systems\/files-and-file-formats.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "attachments": [
            {
                "title": " Files, Formats and Byte Arrays  ",
                "title_link": "https:\/\/shalabh.com\/programmable-systems\/files-and-file-formats.html",
                "text": "On the notion of 'files' and 'file formats'.",
                "fallback": " Files, Formats and Byte Arrays  ",
                "from_url": "https:\/\/shalabh.com\/programmable-systems\/files-and-file-formats.html",
                "service_name": "shalabh.com",
                "id": 1,
                "original_url": "https:\/\/shalabh.com\/programmable-systems\/files-and-file-formats.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jva",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My longer spiel on this is here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/shalabh.com\/programmable-systems\/files-and-file-formats.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1560294603.064700",
        "client_msg_id": "f4643007-a01b-4e7f-a0b3-48bb1d0a6585",
        "text": "Hoo boy, that's a big question. Highly contingent. Answer will vary from time to time. Any answer will only work once, so the follow-up question to anyone claiming to have an answer is, \"so why are you not rich yet?\"\n\nWhen it comes to distribution channels, the medium is the message[1]. What you're building should inform what market segment you decide to focus on initially, and that will affect your entire strategy.\n\n[1] <https:\/\/www.youtube.com\/watch?v=261LkneI_pw>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560290741.063100",
        "parent_user_id": "UJVEPCVT6",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Patrick Vlaskovits, The Medium Is the Message, The Lean Startup Conference 2013 - 12\/10\/13",
                "title_link": "https:\/\/www.youtube.com\/watch?v=261LkneI_pw",
                "author_name": "Lean Startup Co.",
                "author_link": "https:\/\/www.youtube.com\/user\/leanstartupconf",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/261LkneI_pw\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Patrick Vlaskovits, The Medium Is the Message, The Lean Startup Conference 2013 - 12\/10\/13",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/261LkneI_pw?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=261LkneI_pw",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=261LkneI_pw"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CSf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hoo boy, that's a big question. Highly contingent. Answer will vary from time to time. Any answer will only work once, so the follow-up question to anyone claiming to have an answer is, \"so why are you not rich yet?\"\n\nWhen it comes to distribution channels, the medium is the message[1]. What you're building should inform what market segment you decide to focus on initially, and that will affect your entire strategy.\n\n[1] "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=261LkneI_pw"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1560296577.065000",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1560298546.000000"
        },
        "client_msg_id": "28fcb66a-03d4-4111-b243-d01cae133905",
        "text": "IOW, it's not the RDBMS that makes this interesting, it's that the OS provides a way to express rich linking between artifacts and these links are available for generic tooling. I see the hierarchical filesystem as also providing *one* way to express links via *directory containment*. Consider how many generic tools make great use of this feature:\n\nmv dir1 dir2  # Move *all* files in ..\nzip dir1  # compress *all* files in ..\nrm dir1  # delete ...\nfind dir1 -name '*txt' | xargs grep 'hello'  # search all files in ...\n\nCompare with an imaginary OS that only provides flat key\/value, no directories: you can implement directories on top of key\/value by storing them as value blobs, but they're not visible via a uniform interface since each app invents its own formats. So you can't have the powerful generic commands like above. Moving on this continuum in the other direction, we have an OS where richer interlinks than just 'directory containment' are available. This seems fundamentally different in what in enables. I don't think of this as more pure, but rather more aware of the relationships between artifacts. Perhaps more powerful generic tools  become possible:\n\nzip all_dependencies_of(some_file)\nlocate sources_for(some_binary)\nfind linked_from(my_journal, all_images())\netc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2ibl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "IOW, it's not the RDBMS that makes this interesting, it's that the OS provides a way to express rich linking between artifacts and these links are available for generic tooling. I see the hierarchical filesystem as also providing "
                            },
                            {
                                "type": "text",
                                "text": "one",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " way to express links via "
                            },
                            {
                                "type": "text",
                                "text": "directory containment",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Consider how many generic tools make great use of this feature:\n\nmv dir1 dir2  # Move "
                            },
                            {
                                "type": "text",
                                "text": "all",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " files in ..\nzip dir1  # compress "
                            },
                            {
                                "type": "text",
                                "text": "all",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " files in ..\nrm dir1  # delete ...\nfind dir1 -name '*txt' | xargs grep 'hello'  # search all files in ...\n\nCompare with an imaginary OS that only provides flat key\/value, no directories: you can implement directories on top of key\/value by storing them as value blobs, but they're not visible via a uniform interface since each app invents its own formats. So you can't have the powerful generic commands like above. Moving on this continuum in the other direction, we have an OS where richer interlinks than just 'directory containment' are available. This seems fundamentally different in what in enables. I don't think of this as more pure, but rather more aware of the relationships between artifacts. Perhaps more powerful generic tools  become possible:\n\nzip all_dependencies_of(some_file)\nlocate sources_for(some_binary)\nfind linked_from(my_journal, all_images())\netc."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U7C7B75R6",
                    "U85HCL7JP",
                    "UAL7940NM"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1560317937.065400",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1560318427.000000"
        },
        "client_msg_id": "ea0abed8-8786-4fed-a124-5ba03a0df7e2",
        "text": "WinFS was Microsoft's copy of the original Apple File System from System 7, which had the concept of a file containing unstructured data (the data fork), and then a 2 level hierarchical database of structured data (the resource fork). When Apple invented the resource fork, it solved a huge problem that had plagued computer systems, which was that you wanted to add metadata to a file, maybe a custom icon, or a set of preferences for the program, or maybe some login info; and you wanted to guarantee that the meta data travelled with the other data without being separated or lost. It was a brilliant system, and allowed Apple OS to have far fewer files, and not have hidden names with dot in front like Unix uses. It was considered one of the greatest innovations of the Apple OS. However, when the internet got going, and people started doing FTP of files, the resource fork, which could not be represented well on the intermediate Linux servers would get corrupted\/mangled\/stripped. So Apple discontinued using resource forks in OSX, and no longer uses any resource forks in their programs, instead using a fake folder system for applications for example, where the OS presents a folder as an App. Microsoft took so many years to implement WinFS, because they took it way further than Apple, that people forgot it inspiration, as Microsoft was not content with a mere clone of the simplistic Apple system, and created a huge complex and powerful system. However, they saw that Apple dropped their multilevel file system, and scuttled WinFS. I think Bill Gates commented that he regretted that they wimped out on this change, and i think from a purely technical standpoint it would have been wonderful, but let's face it, the 50 year old Linux file system is a millstone around everyone's neck, and bucking it isn't easy, because Linux must be 90% of all web servers, and Linux releases are mostly rehashes of different versions of thousands of components, and the core system changes like a glacier. The Apple system came with a program called ResEdit, which allowed you to register a four letter code for your resource type, and add in a editor for it to that program, and you could share your editor modules, and by having all the companies register ownership of a 4 letter code, they created a whole ecosystem of custom data editors. This approach has been promoted recently by the guy that invented Macromedia director, but without manufacturer support this type of cooperation never gets off the ground. There is no question in my mind that a standardized data type registry with shareable editors could revolutionize access to data. Too much of our data is stored in unshareable, uneditable format. Our code at least has a textual form, and if you stay within the same language there is tons of code you can borrow, but data is stuck more or less in the era of .csv files, as a spreadsheet is the dominant data storage mechanism, as there is little standardization in databases, and transfer between databases is always problematic. A lot of companies make a healthy living converting data between formats.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560279248.052500",
        "parent_user_id": "UFV8P4472",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/al",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "WinFS was Microsoft's copy of the original Apple File System from System 7, which had the concept of a file containing unstructured data (the data fork), and then a 2 level hierarchical database of structured data (the resource fork). When Apple invented the resource fork, it solved a huge problem that had plagued computer systems, which was that you wanted to add metadata to a file, maybe a custom icon, or a set of preferences for the program, or maybe some login info; and you wanted to guarantee that the meta data travelled with the other data without being separated or lost. It was a brilliant system, and allowed Apple OS to have far fewer files, and not have hidden names with dot in front like Unix uses. It was considered one of the greatest innovations of the Apple OS. However, when the internet got going, and people started doing FTP of files, the resource fork, which could not be represented well on the intermediate Linux servers would get corrupted\/mangled\/stripped. So Apple discontinued using resource forks in OSX, and no longer uses any resource forks in their programs, instead using a fake folder system for applications for example, where the OS presents a folder as an App. Microsoft took so many years to implement WinFS, because they took it way further than Apple, that people forgot it inspiration, as Microsoft was not content with a mere clone of the simplistic Apple system, and created a huge complex and powerful system. However, they saw that Apple dropped their multilevel file system, and scuttled WinFS. I think Bill Gates commented that he regretted that they wimped out on this change, and i think from a purely technical standpoint it would have been wonderful, but let's face it, the 50 year old Linux file system is a millstone around everyone's neck, and bucking it isn't easy, because Linux must be 90% of all web servers, and Linux releases are mostly rehashes of different versions of thousands of components, and the core system changes like a glacier. The Apple system came with a program called ResEdit, which allowed you to register a four letter code for your resource type, and add in a editor for it to that program, and you could share your editor modules, and by having all the companies register ownership of a 4 letter code, they created a whole ecosystem of custom data editors. This approach has been promoted recently by the guy that invented Macromedia director, but without manufacturer support this type of cooperation never gets off the ground. There is no question in my mind that a standardized data type registry with shareable editors could revolutionize access to data. Too much of our data is stored in unshareable, uneditable format. Our code at least has a textual form, and if you stay within the same language there is tons of code you can borrow, but data is stuck more or less in the era of .csv files, as a spreadsheet is the dominant data storage mechanism, as there is little standardization in databases, and transfer between databases is always problematic. A lot of companies make a healthy living converting data between formats."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1560318747.065900",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1560412873.000000"
        },
        "client_msg_id": "663554f1-868b-41c3-a448-15a2c5dedacc",
        "text": "There is no mainstream VPL. The top 10 languages in common use which are Excel, JS, Java, Swift, etc., are not visual, so really a VPL has a double acceptance problem, which is 1) introducing a new language, and 2) changing how you use a language (point and click, drag and drop) versus editing text and pressing RUN.  Visual programming language projects like Luna are not having an easy time. I have great sympathy for people willing to throw their work into the meat grinder that is public opinion, which is governed by the most powerful force in the universe which is inertia. (i know that Inertia is not technically a force in physics, but in the human realm, inertia acts as a force, and like centrifugal force can be considered a virtual force).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560290741.063100",
        "parent_user_id": "UJVEPCVT6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n9Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is no mainstream VPL. The top 10 languages in common use which are Excel, JS, Java, Swift, etc., are not visual, so really a VPL has a double acceptance problem, which is 1) introducing a new language, and 2) changing how you use a language (point and click, drag and drop) versus editing text and pressing RUN.  Visual programming language projects like Luna are not having an easy time. I have great sympathy for people willing to throw their work into the meat grinder that is public opinion, which is governed by the most powerful force in the universe which is inertia. (i know that Inertia is not technically a force in physics, but in the human realm, inertia acts as a force, and like centrifugal force can be considered a virtual force)."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]