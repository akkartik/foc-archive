[
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1672660135.808759",
        "client_msg_id": "56eec35f-2c25-453b-a97a-dad581e30452",
        "text": "I get the feeling that <http:\/\/bloom-lang.net\/|bloom> is related to this:\n\nBloom is a language …\n… for disorderly distributed programming\n _because order is expensive_\n… with powerful consistency analysis\n _CALM guidance on coordination_\n… and concise, familiar syntax\n _based on data-centric languages_",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1672471217.151219",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gaqF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I get the feeling that "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/bloom-lang.net\/",
                                "text": "bloom"
                            },
                            {
                                "type": "text",
                                "text": " is related to this:\n\nBloom is a language …\n… for disorderly distributed programming\n "
                            },
                            {
                                "type": "text",
                                "text": "because order is expensive",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n… with powerful consistency analysis\n "
                            },
                            {
                                "type": "text",
                                "text": "CALM guidance on coordination",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n… and concise, familiar syntax\n "
                            },
                            {
                                "type": "text",
                                "text": "based on data-centric languages",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1672662324.435639",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1672662369.000000"
        },
        "client_msg_id": "D90226B8-D36C-4C73-A215-27E9BE04C22B",
        "text": "Indeed it is! Bloom is based on Dedalus, which I briefly mentioned above. They were both developed at UC Berkeley :slightly_smiling_face:.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1672471217.151219",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3ck",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Indeed it is! Bloom is based on Dedalus, which I briefly mentioned above. They were both developed at UC Berkeley "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0112C10V4Y",
        "type": "message",
        "ts": "1672666753.552109",
        "client_msg_id": "d7875080-f5d4-47ce-b51b-8017bdf049a0",
        "text": "This model also seems close to how DynamicLand's RealTalk system works. Pages (representing computational objects) don't communicate with each other, they just make claims and wishes and the runtime system resolves them (apparently at 60 times a second). In your description in the first post the RealTalk system provides the 'game rules'.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf521cc065bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f521cc065bb724c90c57c263ec7ee857.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Naveen Michaud-Agrawal",
            "display_name": "Naveen Michaud-Agrawal",
            "team": "T5TCAFTA9",
            "name": "naveen.michaudagrawal",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1672471217.151219",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E5sm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This model also seems close to how DynamicLand's RealTalk system works. Pages (representing computational objects) don't communicate with each other, they just make claims and wishes and the runtime system resolves them (apparently at 60 times a second). In your description in the first post the RealTalk system provides the 'game rules'."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USJ9LD0E4",
        "type": "message",
        "ts": "1672722786.279259",
        "edited": {
            "user": "USJ9LD0E4",
            "ts": "1672722889.000000"
        },
        "client_msg_id": "3c740941-da07-404d-8a60-9ec3b348ee91",
        "text": "Something similar to this approach is the <https:\/\/pathom3.wsscode.com\/|Pathom> Clojure library. At work we’re in the process of rewriting our solar\/renewables viability assessment platform using it and it’s been fantastic.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "467eec5533b7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-21\/1361648344759_467eec5533b7281db15a_72.jpg",
            "first_name": "Tom",
            "real_name": "Tom Hutchinson",
            "display_name": "Tom Hutchinson",
            "team": "T5TCAFTA9",
            "name": "futureofcoding249",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1672318746.147299",
        "parent_user_id": "U018S42NMMM",
        "attachments": [
            {
                "from_url": "https:\/\/pathom3.wsscode.com\/",
                "service_icon": "https:\/\/pathom3.wsscode.com\/img\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/pathom3.wsscode.com\/",
                "fallback": "Pathom 3 | Pathom 3",
                "text": "A library to unify data sources via attribute modeling in a seamless graph.",
                "title": "Pathom 3 | Pathom 3",
                "title_link": "https:\/\/pathom3.wsscode.com\/",
                "service_name": "pathom3.wsscode.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=eRF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Something similar to this approach is the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/pathom3.wsscode.com\/",
                                "text": "Pathom"
                            },
                            {
                                "type": "text",
                                "text": " Clojure library. At work we’re in the process of rewriting our solar\/renewables viability assessment platform using it and it’s been fantastic."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USJ9LD0E4",
        "type": "message",
        "ts": "1672723091.604169",
        "edited": {
            "user": "USJ9LD0E4",
            "ts": "1672723159.000000"
        },
        "client_msg_id": "b5b0e537-f72c-4650-8a67-f1f251131c7a",
        "text": "You write your code in the form of “resolvers” which establish relationships between attributes, then you simply give it some input data (in the form of an immutable map) and make a query (in the form of <https:\/\/edn-query-language.org|EQL>, more nested Clojure data) and the Pathom system determines the resolvers that need to run in order to fulfil your query.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "467eec5533b7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-21\/1361648344759_467eec5533b7281db15a_72.jpg",
            "first_name": "Tom",
            "real_name": "Tom Hutchinson",
            "display_name": "Tom Hutchinson",
            "team": "T5TCAFTA9",
            "name": "futureofcoding249",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1672318746.147299",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "atuaT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You write your code in the form of “resolvers” which establish relationships between attributes, then you simply give it some input data (in the form of an immutable map) and make a query (in the form of "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/edn-query-language.org",
                                "text": "EQL"
                            },
                            {
                                "type": "text",
                                "text": ", more nested Clojure data) and the Pathom system determines the resolvers that need to run in order to fulfil your query."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USJ9LD0E4",
        "type": "message",
        "ts": "1672723731.014549",
        "edited": {
            "user": "USJ9LD0E4",
            "ts": "1672723770.000000"
        },
        "client_msg_id": "5c27938a-f642-40e6-9288-e86269d4686e",
        "text": "This video by the creator is good but a bit more focused on using it to combine APIs iirc <https:\/\/www.youtube.com\/watch?v=YaHiff2vZ_o>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "467eec5533b7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-21\/1361648344759_467eec5533b7281db15a_72.jpg",
            "first_name": "Tom",
            "real_name": "Tom Hutchinson",
            "display_name": "Tom Hutchinson",
            "team": "T5TCAFTA9",
            "name": "futureofcoding249",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1672318746.147299",
        "parent_user_id": "U018S42NMMM",
        "attachments": [
            {
                "from_url": "https:\/\/www.youtube.com\/watch?v=YaHiff2vZ_o",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/YaHiff2vZ_o\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/YaHiff2vZ_o?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"Data Navigation with Pathom 3 (by Wilker Lucio)\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=YaHiff2vZ_o",
                "fallback": "YouTube Video: Data Navigation with Pathom 3 (by Wilker Lucio)",
                "title": "Data Navigation with Pathom 3 (by Wilker Lucio)",
                "title_link": "https:\/\/www.youtube.com\/watch?v=YaHiff2vZ_o",
                "author_name": "London Clojurians",
                "author_link": "https:\/\/www.youtube.com\/@LondonClojurians",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iFD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This video by the creator is good but a bit more focused on using it to combine APIs iirc "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=YaHiff2vZ_o"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]