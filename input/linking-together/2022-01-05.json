[
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1641396210.242500",
        "client_msg_id": "ff082a0d-1f50-4254-9abb-6f773160b425",
        "text": "<https:\/\/dubroy.com\/blog\/three-ways-of-handling-user-input|Three ways of handling user input>\n\nIt’s 2022 and things are pretty much the same: the dominant way of handling user input is still based on events and — in some form or another — callbacks\n\n...\n\nHandling user input is — to borrow <https:\/\/tratt.net\/laurie\/blog\/entries\/parsing_the_solved_problem_that_isnt.html|a phrase from Laurence Tratt> — a solved problem that _isn’t_.\n\n<https:\/\/dubroy.com\/blog\/three-ways-of-handling-user-input\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1641396210.242500",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1641404726.243800",
        "reply_users": [
            "U9C92716C"
        ],
        "replies": [
            {
                "user": "U9C92716C",
                "ts": "1641404726.243800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8YbP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/dubroy.com\/blog\/three-ways-of-handling-user-input",
                                "text": "Three ways of handling user input"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIt’s 2022 and things are pretty much the same: the dominant way of handling user input is still based on events and — in some form or another — callbacks\n\n...\n\nHandling user input is — to borrow "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/tratt.net\/laurie\/blog\/entries\/parsing_the_solved_problem_that_isnt.html",
                                "text": "a phrase from Laurence Tratt"
                            },
                            {
                                "type": "text",
                                "text": " — a solved problem that "
                            },
                            {
                                "type": "text",
                                "text": "isn’t",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/dubroy.com\/blog\/three-ways-of-handling-user-input\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01A0KANUUU",
                    "U02PDVC9CNT",
                    "U9C92716C",
                    "U02C3SH9L2J",
                    "UA14TGLTC"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1641396392.243400",
        "client_msg_id": "85afd218-c46b-42a4-901d-37d8971b585d",
        "text": "Céu: Structured Synchronous Reactive Programming\n\nCheck the video on the landing page, it's a great overview\n\n<http:\/\/ceu-lang.org\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ed2Z=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Céu: Structured Synchronous Reactive Programming\n\nCheck the video on the landing page, it's a great overview\n\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/ceu-lang.org\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U9C92716C",
        "type": "message",
        "ts": "1641404726.243800",
        "client_msg_id": "815315ee-526e-4695-a8a9-5919e5be0851",
        "text": "Ha- very much the same problem I’m talking about here. <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1641389275367500>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6bd6fe3fcf91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-20\/1137095139906_6bd6fe3fcf91b6f41781_72.jpg",
            "first_name": "",
            "real_name": "Dalton Banks",
            "display_name": "daltonb",
            "team": "T5TCAFTA9",
            "name": "dalton",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1641396210.242500",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1641389275367500",
                "ts": "1641389275.367500",
                "author_id": "U9C92716C",
                "channel_team": "T5TCAFTA9",
                "channel_id": "C5T9GPWFL",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T5TCAFTA9",
                        "channel": "C5T9GPWFL",
                        "ts": "1641389275.367500",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "A8JT",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "I’m struck by how rare it is for basic control systems knowledge to show up in our projects; my impression is that the common approaches to closed loop feedback are:\n"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "rich_text_list",
                                            "elements": [
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "Ad hoc exception handling and state management"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "An exercise left to the user"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "‘I’m sorry dave, I’m afraid I can’t do that’"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "style": "bullet",
                                            "indent": 0,
                                            "border": 0
                                        },
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "\nI think we tend this way because the underlying substrates (CPUs, peripherals, ISAs, PL grammars) are so well characterized as to allow formerly unthinkable consistency with open-loop methods.\n\nIt seems like there’s a lot of low hanging fruit here, and it gets at the heart of what ‘liveness’ is about. I’m curious if anyone here has experience working with controls\/dynamical systems, or pointers to FoC type projects being approached in this way.\n\nPS if you’re not familiar with controls, a wikipedia trip makes it seem like a lot of daunting math, but the basics are actually pretty simple. Basically you’ve got your current system state, a function to compute the next state, and then whatever parameters you can actual directly control (“direct manipulation”). If you’ve ever used React or FRP, they get halfway there, then overcomplicate and oversimplify it at the same time. Here’s a friendly intro if you’re curious: "
                                                },
                                                {
                                                    "type": "link",
                                                    "url": "https:\/\/www.youtube.com\/watch?v=O-OqgFE9SD4"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "."
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1641389275367500",
                "fallback": "[January 5th, 2022 5:27 AM] dalton: I’m struck by how rare it is for basic control systems knowledge to show up in our projects; my impression is that the common approaches to closed loop feedback are:\n• Ad hoc exception handling and state management\n• An exercise left to the user\n• ‘I’m sorry dave, I’m afraid I can’t do that’\nI think we tend this way because the underlying substrates (CPUs, peripherals, ISAs, PL grammars) are so well characterized as to allow formerly unthinkable consistency with open-loop methods.\n\nIt seems like there’s a lot of low hanging fruit here, and it gets at the heart of what ‘liveness’ is about. I’m curious if anyone here has experience working with controls\/dynamical systems, or pointers to FoC type projects being approached in this way.\n\nPS if you’re not familiar with controls, a wikipedia trip makes it seem like a lot of daunting math, but the basics are actually pretty simple. Basically you’ve got your current system state, a function to compute the next state, and then whatever parameters you can actual directly control (“direct manipulation”). If you’ve ever used React or FRP, they get halfway there, then overcomplicate and oversimplify it at the same time. Here’s a friendly intro if you’re curious: <https:\/\/www.youtube.com\/watch?v=O-OqgFE9SD4>.",
                "text": "I’m struck by how rare it is for basic control systems knowledge to show up in our projects; my impression is that the common approaches to closed loop feedback are:\n• Ad hoc exception handling and state management\n• An exercise left to the user\n• ‘I’m sorry dave, I’m afraid I can’t do that’\nI think we tend this way because the underlying substrates (CPUs, peripherals, ISAs, PL grammars) are so well characterized as to allow formerly unthinkable consistency with open-loop methods.\n\nIt seems like there’s a lot of low hanging fruit here, and it gets at the heart of what ‘liveness’ is about. I’m curious if anyone here has experience working with controls\/dynamical systems, or pointers to FoC type projects being approached in this way.\n\nPS if you’re not familiar with controls, a wikipedia trip makes it seem like a lot of daunting math, but the basics are actually pretty simple. Basically you’ve got your current system state, a function to compute the next state, and then whatever parameters you can actual directly control (“direct manipulation”). If you’ve ever used React or FRP, they get halfway there, then overcomplicate and oversimplify it at the same time. Here’s a friendly intro if you’re curious: <https:\/\/www.youtube.com\/watch?v=O-OqgFE9SD4>.",
                "author_name": "Dalton Banks",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/U9C92716C",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2020-05-20\/1137095139906_6bd6fe3fcf91b6f41781_48.jpg",
                "author_subname": "Dalton Banks",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N\/E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ha- very much the same problem I’m talking about here. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1641389275367500"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1641443556.000400",
        "client_msg_id": "2854280a-4abd-42e6-b08c-d5da82005f3e",
        "text": "Best Paper Awards in Computer Science: Collection of best paper awards for 30 computer science conferences since 1996\n\n\n<https:\/\/jeffhuang.com\/best_paper_awards\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vh3aX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Best Paper Awards in Computer Science: Collection of best paper awards for 30 computer science conferences since 1996\n\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/jeffhuang.com\/best_paper_awards\/"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]