[
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1698396869.769469",
        "client_msg_id": "8de5b08a-8a14-4b89-b1ac-c91911981a3d",
        "text": "Kaleido lets a Processing programmer draw a picture to map out different parts of their program: <https:\/\/vimeo.com\/11064303>.\n\nThis idea is so simple and “unsophisticated” and it looks utterly transformative. (I’ve never seen anything like it!)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698396869.769469",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1699063230.412259",
        "reply_users": [
            "U05PESXCC2E",
            "U05M5A8E0NT"
        ],
        "replies": [
            {
                "user": "U05PESXCC2E",
                "ts": "1698433845.702789"
            },
            {
                "user": "U05PESXCC2E",
                "ts": "1698434427.328199"
            },
            {
                "user": "U05PESXCC2E",
                "ts": "1698435138.323319"
            },
            {
                "user": "U05M5A8E0NT",
                "ts": "1699063230.412259"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/vimeo.com\/11064303",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/vimeo.png",
                "thumb_url": "https:\/\/i.vimeocdn.com\/video\/59768675-9325a1808dd0b7c76de039fd1b3be003cdda7be1fd1b68b17043a3a9cd3d805d-d_295x166",
                "thumb_width": 295,
                "thumb_height": 166,
                "video_html": "<iframe src=\"https:\/\/player.vimeo.com\/video\/11064303?autoplay=1&amp;app_id=122963\" width=\"400\" height=\"250\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" title=\"Kaleido Demo\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 250,
                "id": 1,
                "original_url": "https:\/\/vimeo.com\/11064303",
                "fallback": "Vimeo Video: Kaleido Demo",
                "text": "Kaleido is a tool that is designed to help visual-thinkers program.\nWhile many software engineering tools exist to automate code visualization, Kaleido allows individuals to plan, organize, and navigate code in the idiosyncratic way we each think.",
                "title": "Kaleido Demo",
                "title_link": "https:\/\/vimeo.com\/11064303",
                "author_name": "Agnes Chang",
                "author_link": "https:\/\/vimeo.com\/kradeki",
                "service_name": "Vimeo",
                "service_url": "https:\/\/vimeo.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RDwcU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Kaleido lets a Processing programmer draw a picture to map out different parts of their program: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/vimeo.com\/11064303"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nThis idea is so simple and “unsophisticated” and it looks utterly transformative. (I’ve never seen anything like it!)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UGWUJUZHT",
                    "U013ZLJARC7",
                    "U05PLUUKU94",
                    "U05UBCXHWM6",
                    "U06131CATV3",
                    "U05M5A8E0NT"
                ],
                "count": 6
            },
            {
                "name": "smile",
                "users": [
                    "UC2A2ARPT",
                    "U05UBCXHWM6"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UFEQUBNNT",
                    "U06131CATV3",
                    "UCUSW7WVD",
                    "U05M5A8E0NT"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U05PESXCC2E",
        "type": "message",
        "ts": "1698433845.702789",
        "edited": {
            "user": "U05PESXCC2E",
            "ts": "1698434512.000000"
        },
        "client_msg_id": "cdbb3175-9971-467c-93bb-1b1853010a29",
        "text": "I feel like there are multiple and different use cases here. I like being able to visually comment \/ document code, and that it's \"live\". The ball example, however, could also be expressed as a visual design (not just a visual link), as in Flash or other visual design tool, with the properties and events on the right.\nI've been prototyping a very simple designer with a \"properties and events\" panel, and am trying to find the balance between not writing any code (on event onMouseDown, run action \"playNote\", argument \"C4\", for example). In this sense, inactive elements could be placed on the canvas or off-screen like the convention used in Flash. Let my tidy up my Balsamiq and post it here.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0d9c7dcaa476",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-17\/6066889038289_0d9c7dcaa476f559eb42_72.jpg",
            "first_name": "Mike",
            "real_name": "Mike Austin",
            "display_name": "Mike Austin",
            "team": "T5TCAFTA9",
            "name": "mike.austin.1024",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698396869.769469",
        "parent_user_id": "UBKNXPBAB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DIUjX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel like there are multiple and different use cases here. I like being able to visually comment \/ document code, and that it's \"live\". The ball example, however, could also be expressed as a visual design (not just a visual link), as in Flash or other visual design tool, with the properties and events on the right.\nI've been prototyping a very simple designer with a \"properties and events\" panel, and am trying to find the balance between not writing any code (on event onMouseDown, run action \"playNote\", argument \"C4\", for example). In this sense, inactive elements could be placed on the canvas or off-screen like the convention used in Flash. Let my tidy up my Balsamiq and post it here."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "This is not supposed to be \"innovative\", just thinking about the most simple UI designer and how to interact with it, and this topic relates very closely.\nI imagine being able to import actions such as for music, setting shape properties, game effects (jump, spin, etc.) without having to write code, but you should also be able to create your own actions very easily and use the editor towards the bottom.\n\nThoughts? I didn't mean to hijack, but I was just about to post my own related topic.",
        "files": [
            {
                "id": "F0636F5HNUT",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U05PESXCC2E",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "swaC5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is not supposed to be \"innovative\", just thinking about the most simple UI designer and how to interact with it, and this topic relates very closely.\nI imagine being able to import actions such as for music, setting shape properties, game effects (jump, spin, etc.) without having to write code, but you should also be able to create your own actions very easily and use the editor towards the bottom.\n\nThoughts? I didn't mean to hijack, but I was just about to post my own related topic."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1698434427.328199",
        "client_msg_id": "606f401a-aab3-4ceb-86ce-25d3fc480383",
        "thread_ts": "1698396869.769469",
        "parent_user_id": "UBKNXPBAB"
    },
    {
        "user": "U05PESXCC2E",
        "type": "message",
        "ts": "1698435138.323319",
        "edited": {
            "user": "U05PESXCC2E",
            "ts": "1698435587.000000"
        },
        "client_msg_id": "2299426a-8074-45fa-880c-ec00f4fbd65e",
        "text": "I also like the idea of code-bookmarking, visually such as in Kaleido, or generated using Markdown in code comments - a type of \"inverted\" Notebook style you could say. This is giving me some ideas, thanks for posting!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0d9c7dcaa476",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-17\/6066889038289_0d9c7dcaa476f559eb42_72.jpg",
            "first_name": "Mike",
            "real_name": "Mike Austin",
            "display_name": "Mike Austin",
            "team": "T5TCAFTA9",
            "name": "mike.austin.1024",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698396869.769469",
        "parent_user_id": "UBKNXPBAB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "or0WI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I also like the idea of code-bookmarking, visually such as in Kaleido, or generated using Markdown in code comments - a type of \"inverted\" Notebook style you could say. This is giving me some ideas, thanks for posting!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]