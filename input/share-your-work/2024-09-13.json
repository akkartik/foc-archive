[
    {
        "user": "U04MZSH4534",
        "type": "message",
        "ts": "1726216863.283909",
        "client_msg_id": "8c4ab578-58c7-4ee3-8166-b2be545416f9",
        "text": "This is one of the articles from the series *How to set up Django from Scratch with Celery + Channels + Redis + Docker — Real Time Django Workers for AI Agents — PART 1* \n\nNot sure if anyone else here has struggled with the infra to push to prod in AI before, but if you have, I’d love to have a chat, drop me a DM\n\n<https:\/\/medium.com\/p\/601dff7ada79>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f2a6384bde44",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-03\/4748058776850_f2a6384bde44b7067a7d_72.jpg",
            "first_name": "Rebeca",
            "real_name": "Rebeca Garcia",
            "display_name": "Rebeca Garcia",
            "team": "T5TCAFTA9",
            "name": "rebeca.garcia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1726139806.586109",
        "parent_user_id": "U04MZSH4534",
        "attachments": [
            {
                "image_url": "https:\/\/miro.medium.com\/v2\/resize:fit:1200\/1*KEDHuK4NSNDv5chp7DNChw.png",
                "image_width": 1200,
                "image_height": 506,
                "image_bytes": 149376,
                "from_url": "https:\/\/medium.com\/p\/601dff7ada79",
                "service_icon": "https:\/\/miro.medium.com\/v2\/resize:fill:304:304\/10fd5c419ac61637245384e7099e131627900034828f4f386bdaa47a74eae156",
                "ts": 1720453041,
                "id": 1,
                "original_url": "https:\/\/medium.com\/p\/601dff7ada79",
                "fallback": "Medium: How to set up Django from Scratch with Celery + Channels + Redis + Docker — Real Time Django…",
                "text": "If you’ve not seen it by now, we have been building an web app that offers an AI agent that generates interactive and real time data…",
                "title": "How to set up Django from Scratch with Celery + Channels + Redis + Docker — Real Time Django…",
                "title_link": "https:\/\/medium.com\/p\/601dff7ada79",
                "service_name": "Medium",
                "fields": [
                    {
                        "value": "9 min read",
                        "title": "Reading time",
                        "short": true
                    }
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JvZ23",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is one of the articles from the series "
                            },
                            {
                                "type": "text",
                                "text": "How to set up Django from Scratch with Celery + Channels + Redis + Docker — Real Time Django Workers for AI Agents — PART 1 ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nNot sure if anyone else here has struggled with the infra to push to prod in AI before, but if you have, I’d love to have a chat, drop me a DM\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/medium.com\/p\/601dff7ada79"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U07KR4BMKNW",
        "type": "message",
        "ts": "1726217579.726969",
        "client_msg_id": "2a765d09-38e2-486b-af8b-5cd559575bf9",
        "text": "<@U85HCL7JP> Both projects are very interesting and have a lot of similarities with Ludwig. One major difference is that none of them has the same minimalist approach to language design as Ludwig.\nBoth are basically dialects of Haskell, and that implies currying, destructuring pattern matching, linked lists, etc. I would argue that all these features, in spite of being conceptually simple, lead, for various reasons, to bad ergonomics of the language.\n\nIt's a pity that Lambdu is so scarcely documented, and that the UX is still quite unsatisfactory. I like the idea of typed holes that can be also found in Hazel (it looks more mature than Lambdu). It would be great to have typed holes in Ludwig as well, not sure if that's possible without bringing too much type theory.\n\nUnison brings about many more ideas: code immutability, a novel approach to distributed computations, etc.; it's really amazing how much they have achieved already! I would really love to see it becoming popular one day. My main concern regarding Unison is that they have too many novel ideas in one project; I'm afraid their niche may be too narrow. Again, the choice of Haskell-like syntax might be not the best option. One interesting thing about Unison, is that their chat-based approach to code editing that once served as a temporary replacement for an IDE can in fact be very AI-friendly - imagine a GPT bot chatting with Unison!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2a947ead3389",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-09-03\/7668845581365_2a947ead33895d0c5a20_72.png",
            "first_name": "Pavel",
            "real_name": "Pavel Mikhailovskii",
            "display_name": "Pavel Mikhailovskii",
            "team": "T5TCAFTA9",
            "name": "pavel.mikhailovskii",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725436552.259159",
        "parent_user_id": "U07KR4BMKNW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pbTLg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U85HCL7JP"
                            },
                            {
                                "type": "text",
                                "text": " Both projects are very interesting and have a lot of similarities with Ludwig. One major difference is that none of them has the same minimalist approach to language design as Ludwig.\nBoth are basically dialects of Haskell, and that implies currying, destructuring pattern matching, linked lists, etc. I would argue that all these features, in spite of being conceptually simple, lead, for various reasons, to bad ergonomics of the language.\n\nIt's a pity that Lambdu is so scarcely documented, and that the UX is still quite unsatisfactory. I like the idea of typed holes that can be also found in Hazel (it looks more mature than Lambdu). It would be great to have typed holes in Ludwig as well, not sure if that's possible without bringing too much type theory.\n\nUnison brings about many more ideas: code immutability, a novel approach to distributed computations, etc.; it's really amazing how much they have achieved already! I would really love to see it becoming popular one day. My main concern regarding Unison is that they have too many novel ideas in one project; I'm afraid their niche may be too narrow. Again, the choice of Haskell-like syntax might be not the best option. One interesting thing about Unison, is that their chat-based approach to code editing that once served as a temporary replacement for an IDE can in fact be very AI-friendly - imagine a GPT bot chatting with Unison!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U07KR4BMKNW",
        "type": "message",
        "ts": "1726219048.569599",
        "client_msg_id": "5f744a77-297f-4a1b-b981-3cee4b4ca151",
        "text": "<@U01AD80KMLK> Thanks for your interest! I have a white paper, but it's already outdated; I'm working on an updated and more detailed version. I expect to finish somewhere next week or so; I'll share it here.\n\nRegarding Wikifunctions: some ideas are indeed very similar. We should definitely talk, but I first need to think a little bit more.\n\nI've been playing for quite some time with the idea of creating a functional\/procedural language for writing\/documenting algorithms that would have no IO or OOP, just math and a few basic data structures. My idea was to be able to automatically transpile functions from that language to a number of target programming languages, taking care of such things as transforming tail calls into loops for languages that don't support the former, etc. The most challenging part here is designing the type system, finding the right way of annotating generic algorithms without diving too deep into abstract algebra.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2a947ead3389",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-09-03\/7668845581365_2a947ead33895d0c5a20_72.png",
            "first_name": "Pavel",
            "real_name": "Pavel Mikhailovskii",
            "display_name": "Pavel Mikhailovskii",
            "team": "T5TCAFTA9",
            "name": "pavel.mikhailovskii",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725436552.259159",
        "parent_user_id": "U07KR4BMKNW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zQn6+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01AD80KMLK"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for your interest! I have a white paper, but it's already outdated; I'm working on an updated and more detailed version. I expect to finish somewhere next week or so; I'll share it here.\n\nRegarding Wikifunctions: some ideas are indeed very similar. We should definitely talk, but I first need to think a little bit more.\n\nI've been playing for quite some time with the idea of creating a functional\/procedural language for writing\/documenting algorithms that would have no IO or OOP, just math and a few basic data structures. My idea was to be able to automatically transpile functions from that language to a number of target programming languages, taking care of such things as transforming tail calls into loops for languages that don't support the former, etc. The most challenging part here is designing the type system, finding the right way of annotating generic algorithms without diving too deep into abstract algebra."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01AD80KMLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01AD80KMLK",
        "type": "message",
        "ts": "1726223820.785119",
        "client_msg_id": "acf5af62-ca45-4be4-a2be-c61ff8103ce8",
        "text": "Let me know when you're ready to talk! :slightly_smiling_face: And good luck with the project and the thinking in the meantime.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a07cdcb6d037",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-09\/1376906509376_a07cdcb6d037bf7b6a5e_72.jpg",
            "first_name": "",
            "real_name": "Denny Vrandečić",
            "display_name": "Denny Vrandečić",
            "team": "T5TCAFTA9",
            "name": "dvrandecic",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725436552.259159",
        "parent_user_id": "U07KR4BMKNW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zhJys",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Let me know when you're ready to talk! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " And good luck with the project and the thinking in the meantime."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "I updated this to use scrubbable numbers",
        "files": [
            {
                "id": "F07LX3VJN07",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U06MCTWJKSR",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EOfFR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I updated this to use scrubbable numbers"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1726234909.614199",
        "client_msg_id": "1640a53a-ad9b-4fde-b06d-58cc1ff5de7b",
        "thread_ts": "1726089947.701999",
        "parent_user_id": "U06MCTWJKSR"
    }
]