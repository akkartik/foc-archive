[
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1586708586.111500",
        "client_msg_id": "14afed11-38d8-42b6-a609-d2414e2c0ae4",
        "text": "it will eventually, not yet :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586525615.108300",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x6sg0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it will eventually, not yet "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1586708624.111700",
        "client_msg_id": "bdc9fbf8-c2f2-43f1-8386-59032fd784f3",
        "text": "google maps is really expensive to get started and on the previous product we used one provider that closed weeks after we launched, so this time it will be left for later",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586525615.108300",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "deBO4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "google maps is really expensive to get started and on the previous product we used one provider that closed weeks after we launched, so this time it will be left for later"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1586708708.111900",
        "client_msg_id": "6c40c7df-9699-453b-b10a-11d4f410ab10",
        "text": "we will support the \"world\/country map\" that you can see on covid dashboard much quicker, that one is almost a bar chart with weird bar shapes :P",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586525615.108300",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SJP39",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "we will support the \"world\/country map\" that you can see on covid dashboard much quicker, that one is almost a bar chart with weird bar shapes :P"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1586712119.112100",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1586714157.000000"
        },
        "client_msg_id": "96d4ad43-dc6e-4e6c-a811-0930db645d4e",
        "text": "`Strip` has the same issue as `Remove`, and `Without` is not an adjective.\n\nI also use `With`\/`Without` in my semi-persistent data structures, e.g. my `MMap&lt;Key,Value&gt;` type has mutating `Add` and `Remove` methods, but also `With` and `Without` to create a copy of the map with or without a given key-value pair. <http:\/\/core.loyc.net\/collections\/hashtrees.html>\n\nSimilarly in my `sorted-btree` package on npm, it's got mutating `set` and `delete` plus non-mutating `with`, `without`, `withKeys` , `withoutKeys` , etc. In any programming language where mutability is common, it makes sense to use different naming for copying vs mutating methods, and this is of course doubly true when the mutating and non-mutating methods are on the same type!\n\nRuby solves this with the `!` suffix on mutating methods, but most languages don't have an option like that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586366880.096300",
        "parent_user_id": "UD6EXQVM0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h2N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Strip",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " has the same issue as "
                            },
                            {
                                "type": "text",
                                "text": "Remove",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and "
                            },
                            {
                                "type": "text",
                                "text": "Without",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is not an adjective.\n\nI also use "
                            },
                            {
                                "type": "text",
                                "text": "With",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\/"
                            },
                            {
                                "type": "text",
                                "text": "Without",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in my semi-persistent data structures, e.g. my "
                            },
                            {
                                "type": "text",
                                "text": "MMap<Key,Value>",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " type has mutating "
                            },
                            {
                                "type": "text",
                                "text": "Add",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "Remove",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " methods, but also "
                            },
                            {
                                "type": "text",
                                "text": "With",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "Without",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to create a copy of the map with or without a given key-value pair. "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/core.loyc.net\/collections\/hashtrees.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nSimilarly in my "
                            },
                            {
                                "type": "text",
                                "text": "sorted-btree",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " package on npm, it's got mutating "
                            },
                            {
                                "type": "text",
                                "text": "set",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "delete",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " plus non-mutating "
                            },
                            {
                                "type": "text",
                                "text": "with",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "without",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "withKeys",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " , "
                            },
                            {
                                "type": "text",
                                "text": "withoutKeys",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " , etc. In any programming language where mutability is common, it makes sense to use different naming for copying vs mutating methods, and this is of course doubly true when the mutating and non-mutating methods are on the same type!\n\nRuby solves this with the "
                            },
                            {
                                "type": "text",
                                "text": "!",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " suffix on mutating methods, but most languages don't have an option like that."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]