[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541750429.099600",
        "client_msg_id": "8e2edfe4-2b8b-4267-a15a-de59bb5f5847",
        "text": "In fact, a sign of a good abstraction (in contrast to a leaky one) is that you don't have to understand its internals: it just works!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tPR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In fact, a sign of a good abstraction (in contrast to a leaky one) is that you don't have to understand its internals: it just works!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UCKRZS3DZ",
                    "UAL7940NM"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541750597.099900",
        "client_msg_id": "e5f0a82e-05cf-48b7-95eb-1dec58ca65d8",
        "text": "The extreme malleability, even at core levels (e.g. modifying core classes on the fly) is an important feature for fast feedback and live programming - why require rebuild\/deploy\/restart when you can just reach in and fiddle with the knob you want directly? Of course, the next question there should be around can we get verification, safety, versioning\/rollback etc. in this live image model.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8Eu9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The extreme malleability, even at core levels (e.g. modifying core classes on the fly) is an important feature for fast feedback and live programming - why require rebuild\/deploy\/restart when you can just reach in and fiddle with the knob you want directly? Of course, the next question there should be around can we get verification, safety, versioning\/rollback etc. in this live image model."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1541750691.100100",
        "client_msg_id": "e822a188-fe19-4d1a-872e-436beaeb022f",
        "text": "I think I've read people describe using lisp as everytime writing a DSL for the problem at hand. So in that sense you need to learn a new DSL for every project which is one more step up from languages that don't support effectively writing a compile time DSL.  In other words if I read a C# program I see C# plus API calls. If I read lisp I see lisp + AP calls + DSL\n\nNow maybe that DSL makes it easier to understand the code in general but wonder if like my experience with JavaScript, that it really only makes it easier for the person that designed the DSL, not everyone else.\n\nJust in case my analogy wasn't clear i find JS easier to use when it's just me but would find it harder on a team. Is it possible lisp has the same issue that it's better for single programmers who have the entire state of their program in their head vs a team of 30+ who don't?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LMM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think I've read people describe using lisp as everytime writing a DSL for the problem at hand. So in that sense you need to learn a new DSL for every project which is one more step up from languages that don't support effectively writing a compile time DSL.  In other words if I read a C# program I see C# plus API calls. If I read lisp I see lisp + AP calls + DSL\n\nNow maybe that DSL makes it easier to understand the code in general but wonder if like my experience with JavaScript, that it really only makes it easier for the person that designed the DSL, not everyone else.\n\nJust in case my analogy wasn't clear i find JS easier to use when it's just me but would find it harder on a team. Is it possible lisp has the same issue that it's better for single programmers who have the entire state of their program in their head vs a team of 30+ who don't?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541750946.100300",
        "client_msg_id": "5579f44b-37b2-46b1-9d18-fa8dd801774d",
        "text": "There's no reason 100% code has to be Smalltalk. Smalltalk could just be the 'glue system' (replacing the idea of Unix filesystems and pipes). In theory you could program each object in a Smalltalk like world using a different syntax or UI. Diversity can still emerge.\n\nSmalltalk is often compared to other programming languages but to me it should really be compared to the dominant OS paradigm of Unix\/Win\/Mac.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BUlrc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's no reason 100% code has to be Smalltalk. Smalltalk could just be the 'glue system' (replacing the idea of Unix filesystems and pipes). In theory you could program each object in a Smalltalk like world using a different syntax or UI. Diversity can still emerge.\n\nSmalltalk is often compared to other programming languages but to me it should really be compared to the dominant OS paradigm of Unix\/Win\/Mac."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541751054.100500",
        "client_msg_id": "478322b5-1740-4514-9d21-c00f513cee44",
        "text": "On the other hand, I'm thinking of \"patterns\" in Java (circa 1.3ish) where the abstraction ceiling would mean that you were always stuck writing a bunch of boilerplate.  I was enlightened when seeing a master at IntelliJ, a single keystroke would write five lines here, ten lines there, a 100 line subclass, tab, tab, tab, fill in the blanks.  The code was a husk, the real life was in the IDE.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FL1p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On the other hand, I'm thinking of \"patterns\" in Java (circa 1.3ish) where the abstraction ceiling would mean that you were always stuck writing a bunch of boilerplate.  I was enlightened when seeing a master at IntelliJ, a single keystroke would write five lines here, ten lines there, a 100 line subclass, tab, tab, tab, fill in the blanks.  The code was a husk, the real life was in the IDE."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541751118.100700",
        "client_msg_id": "75991274-fafb-4e9c-86ff-167757d91919",
        "text": "<@U8A5MS6R1> Smalltalk is the IDE too.  I remember a blank stare when I asked what the syntax for a class definition was.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aAa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " Smalltalk is the IDE too.  I remember a blank stare when I asked what the syntax for a class definition was."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541751303.100900",
        "client_msg_id": "04bcf774-05e9-4385-b793-015e4ad36c64",
        "text": "<@UA14TGLTC> Isn't Unix an IDE in some sense too? (What's the syntax for creating a file?) Would you still call it an IDE if a computer booted into it, or would it just be the desktop?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q6N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " Isn't Unix an IDE in some sense too? (What's the syntax for creating a file?) Would you still call it an IDE if a computer booted into it, or would it just be the desktop?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541751562.101200",
        "client_msg_id": "f3d8c3d6-0f07-41da-9fa3-1143f6e1c6b6",
        "text": "Waxing philosophical.  The shell is textual, so `touch hello.c` is sort of a syntax for creating a file — more so than click here, click there.  I guess the desktop is an IDE if you know, you develop in it and it's kind of integrated.  :thinking_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oaD6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Waxing philosophical.  The shell is textual, so "
                            },
                            {
                                "type": "text",
                                "text": "touch hello.c",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is sort of a syntax for creating a file — more so than click here, click there.  I guess the desktop is an IDE if you know, you develop in it and it's kind of integrated.  "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541752132.101400",
        "client_msg_id": "3708d946-010f-4e90-92af-1c76dda5ad4c",
        "text": "Hmm could you create a class in Smalltalk by something like `Object subclass: #myclass ...`. After all those clicks are invoking some method somewhere..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mQp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hmm could you create a class in Smalltalk by something like "
                            },
                            {
                                "type": "text",
                                "text": "Object subclass: #myclass ...",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". After all those clicks are invoking some method somewhere.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541752401.101600",
        "client_msg_id": "2ed478f2-b0a5-4b55-a454-6e230ce293d8",
        "text": "Yes!  And it's interesting that the clickish part of the UI and the textish part of the UI are not at all obviously connected.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LskA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes!  And it's interesting that the clickish part of the UI and the textish part of the UI are not at all obviously connected."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541752444.101800",
        "client_msg_id": "a1a92d31-1481-4a23-8213-7af869c0da60",
        "text": "Unix slices the system into files, processes, pipes etc. Smalltalk slices it into objects, messages etc. Both impose a system 'world view'. Since we grew up in Unix, perhaps it seems more normal, but really all of these are virtual abstractions to help us make use of the circuitry underneath for our purpose.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8VjYo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Unix slices the system into files, processes, pipes etc. Smalltalk slices it into objects, messages etc. Both impose a system 'world view'. Since we grew up in Unix, perhaps it seems more normal, but really all of these are virtual abstractions to help us make use of the circuitry underneath for our purpose."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541752569.102000",
        "client_msg_id": "3563ebdc-4f85-4470-ac75-535a87736904",
        "text": "And the kids now use \"app\" as a verb!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aoN4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And the kids now use \"app\" as a verb!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541752572.102200",
        "client_msg_id": "2b7b6cc3-65ed-42c8-a71b-aa0b5ef2b51b",
        "text": "Not sure I got the 'not connected' part.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PbUD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure I got the 'not connected' part."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541752763.106800",
        "client_msg_id": "f699b118-20e8-4dd1-abbb-bf059b3e73d7",
        "text": "I just mean that CLI and GUI tend to be pretty different worlds.  Not always, mind you e.g. I just command+clicked in the shell to jump to a line of a file.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x3IJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just mean that CLI and GUI tend to be pretty different worlds.  Not always, mind you e.g. I just command+clicked in the shell to jump to a line of a file."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDJ2TKB99",
        "type": "message",
        "ts": "1541752846.108200",
        "client_msg_id": "49FBCE29-CB39-4A0A-8C82-B351F96AE103",
        "text": "Thanks so much for posting the LIVE talks, <@U5TCAFTD3>! I listened to the Chris Granger talk yesterday, and it was an incredibly valuable honest look at the development process and struggles.\n\nIt made me wonder if anyone’s put together a summary of different successful programming languages &amp; environments and where they came from—my gut feel is very few if any were the focus of a startup, but rather came about from academia, hobbyists, or from big orgs that could afford a long gestation (e.g. Swift, Go)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7acd71947ea2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-04\/2564854327154_7acd71947ea203e9a69b_72.jpg",
            "first_name": "Joe",
            "real_name": "Joe Trellick",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541752846.108200",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1542083614.211500",
        "reply_users": [
            "UA14TGLTC",
            "UDJ2TKB99",
            "UBJGA440K"
        ],
        "replies": [
            {
                "user": "UA14TGLTC",
                "ts": "1541772142.114000"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1541772331.114200"
            },
            {
                "user": "UDJ2TKB99",
                "ts": "1541839417.140100"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1541839723.145600"
            },
            {
                "user": "UBJGA440K",
                "ts": "1542083614.211500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PuDB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks so much for posting the LIVE talks, "
                            },
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": "! I listened to the Chris Granger talk yesterday, and it was an incredibly valuable honest look at the development process and struggles.\n\nIt made me wonder if anyone’s put together a summary of different successful programming languages & environments and where they came from—my gut feel is very few if any were the focus of a startup, but rather came about from academia, hobbyists, or from big orgs that could afford a long gestation (e.g. Swift, Go)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541753360.108300",
        "client_msg_id": "0fcd5bae-ecd3-43fb-a408-843b5bc90509",
        "text": "Ah I see. The jump-to comment reminds me of a video I saw demoing a Symbolics lisp machine, where I think such a feature would be trivial and automatic (it has to be implemented on top of Unix).\n\nGoing back to the original question by <@UC6997THT>, I don't really know why Smalltalk and Lisp machines didn't catch on but Unix did. I don't think people are stupid, I think they're pretty smart. It may have to do with various market forces, positive feedback loops, entrenchment and so on but that's just my speculation. I would hope at least the research community would pick these up but they seem under explored in research as well.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qnQlU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah I see. The jump-to comment reminds me of a video I saw demoing a Symbolics lisp machine, where I think such a feature would be trivial and automatic (it has to be implemented on top of Unix).\n\nGoing back to the original question by "
                            },
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": ", I don't really know why Smalltalk and Lisp machines didn't catch on but Unix did. I don't think people are stupid, I think they're pretty smart. It may have to do with various market forces, positive feedback loops, entrenchment and so on but that's just my speculation. I would hope at least the research community would pick these up but they seem under explored in research as well."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541757390.113700",
        "client_msg_id": "B230E828-CABE-4642-94D9-7BA3CCD6892C",
        "text": "ACME probably had the most integrated text-mouse interface.  If you wanted a menu of commands, for example, you would type a list of them and middle click to run one.  Modern editors work a like this more or less, but adding macros or whatever has more ceremony to it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "In9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ACME probably had the most integrated text-mouse interface.  If you wanted a menu of commands, for example, you would type a list of them and middle click to run one.  Modern editors work a like this more or less, but adding macros or whatever has more ceremony to it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541772142.114000",
        "client_msg_id": "6e5bd708-14f0-4445-8ff1-6ea6868c6464",
        "text": "The Evolution of Lua is a classic <https:\/\/www.lua.org\/history.html>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541752846.108200",
        "parent_user_id": "UDJ2TKB99",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0iKY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Evolution of Lua is a classic "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.lua.org\/history.html"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UBJGA440K"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541772331.114200",
        "edited": {
            "user": "UA14TGLTC",
            "ts": "1541772339.000000"
        },
        "client_msg_id": "2caebdc7-6f90-4291-b01a-d3cb141f3442",
        "text": "Ruby has it's own lore.  I have a few bits gathered from who knows where.  Like this quote:\n\nFor me the purpose of life is partly to have joy. Programmers often feel joy when they can concentrate on the creative side of programming, So Ruby is designed to make programmers happy. ...\n\nYou want to enjoy life, don't you? If you get your job done quickly and your job is fun, that's good isn't it? That's the purpose of life, partly. Your life is better.\n\nI want to solve problems I meet in the daily life by using computers, so I need to write programs. By using Ruby, I want to concentrate the things I do, not the magical rules of the language, like starting with public void something something something to say, \"print hello world.\" I just want to say, \"print this!\" I don't want all the surrounding magic keywords. I just want to concentrate on the task. That's the basic idea. So I have tried to make Ruby code concise and succinct.\n\nSometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, it's best, isn't it? Ruby tries to be like that, like pseudo-code that runs.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541752846.108200",
        "parent_user_id": "UDJ2TKB99",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "abap",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ruby has it's own lore.  I have a few bits gathered from who knows where.  Like this quote:\n\nFor me the purpose of life is partly to have joy. Programmers often feel joy when they can concentrate on the creative side of programming, So Ruby is designed to make programmers happy. ...\n\nYou want to enjoy life, don't you? If you get your job done quickly and your job is fun, that's good isn't it? That's the purpose of life, partly. Your life is better.\n\nI want to solve problems I meet in the daily life by using computers, so I need to write programs. By using Ruby, I want to concentrate the things I do, not the magical rules of the language, like starting with public void something something something to say, \"print hello world.\" I just want to say, \"print this!\" I don't want all the surrounding magic keywords. I just want to concentrate on the task. That's the basic idea. So I have tried to make Ruby code concise and succinct.\n\nSometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, it's best, isn't it? Ruby tries to be like that, like pseudo-code that runs."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart_eyes",
                "users": [
                    "U85HCL7JP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U85MWBKEY",
        "type": "message",
        "ts": "1541778159.114500",
        "client_msg_id": "38b47b2f-3967-4e1d-817c-81117376f91d",
        "text": "As a more meta response -- I just want to say how thrilled I was to see this questions and all the answers posted here. It's important to study the past attempts, but to stay objective and move forward that must be done w\/o undue reverence. Being able to question our influencers is perhaps one of the most important skill this community has developed.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "88eacb7e65ed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-08\/681438296241_88eacb7e65edebc579ab_72.jpg",
            "first_name": "Aidan",
            "real_name": "Aidan Cunniffe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "acunniffe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Upu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As a more meta response -- I just want to say how thrilled I was to see this questions and all the answers posted here. It's important to study the past attempts, but to stay objective and move forward that must be done w\/o undue reverence. Being able to question our influencers is perhaps one of the most important skill this community has developed."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC",
                    "UCXR52MU2"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1541780906.114900",
        "client_msg_id": "e869fff4-8829-4451-9633-7fb02d5eb921",
        "text": "Smalltalk comes up a lot in this community so I'd like to learn more about it. Does anyone have favorite resources for learning about Smalltalk? Presentations, blog posts, podcasts or anything else are all welcome. Thanks!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541780906.114900",
        "reply_count": 47,
        "reply_users_count": 8,
        "latest_reply": "1542181980.236700",
        "reply_users": [
            "UBN9AFS0N",
            "U5TCAFTD3",
            "UCUSW7WVD",
            "UE0ETTCG7",
            "U85HCL7JP",
            "U8A5MS6R1",
            "UA8HY8R7B",
            "UE1JQM9HQ"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1541781522.115000"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1541781568.115200"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1541785780.117100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1541789522.117900"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1541790959.118800"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1541793591.120500"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1541828458.136400"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1541832253.136600"
            },
            {
                "user": "UA8HY8R7B",
                "ts": "1541870450.183900"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1541872486.184200"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1541872636.184400"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1541872755.184700"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1541872899.184900"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1541893762.186700"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1541941716.202300"
            },
            {
                "user": "UA8HY8R7B",
                "ts": "1541944707.202500"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1541961447.203500"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1541961550.203800"
            },
            {
                "user": "UA8HY8R7B",
                "ts": "1541964715.205000"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1541995639.205600"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1542043567.208100"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542043593.208400"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542043691.208600"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542043996.208800"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542044545.209100"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542044665.209300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1542087184.211800"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1542087517.212100"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542102895.220100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1542130643.226300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1542130666.226500"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542142335.229700"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542142385.229900"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1542142702.230100"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542142743.230300"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1542142840.230500"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1542142853.230700"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542142929.230900"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542142963.231100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1542143208.231300"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542143257.231600"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542143269.231800"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542143276.232000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1542143773.232200"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542143807.232400"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1542179564.236500"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1542181980.236700"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1542205537.000000",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sET\/B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Smalltalk comes up a lot in this community so I'd like to learn more about it. Does anyone have favorite resources for learning about Smalltalk? Presentations, blog posts, podcasts or anything else are all welcome. Thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1541781522.115000",
        "client_msg_id": "278a57ac-422e-4ed3-b4c5-7f00646a835c",
        "text": "<http:\/\/pharo.org\/documentation>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541780906.114900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "94Shd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/pharo.org\/documentation"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1541781568.115200",
        "client_msg_id": "d1ea1675-2dc6-4f21-8780-eddfb3413832",
        "text": "<https:\/\/smalltalks2017.fast.org.ar\/talks>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541780906.114900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mig",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/smalltalks2017.fast.org.ar\/talks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541782941.115400",
        "client_msg_id": "dc665ba5-7b95-4fba-a520-43a148984972",
        "text": "I wrote A* in Eve once. I wish I had it to show you, but it was really easy since A* lends itself to a visual type solution",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uMSm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wrote A* in Eve once. I wish I had it to show you, but it was really easy since A* lends itself to a visual type solution"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541783212.116000",
        "client_msg_id": "ada6cb85-4440-447f-8caf-edab923584ad",
        "text": "Here's a prototype I did when we were playing around with how it would work",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tN=I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's a prototype I did when we were playing around with how it would work"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541784367.116200",
        "edited": {
            "user": "UCGR73CAY",
            "ts": "1541784417.000000"
        },
        "client_msg_id": "93a426a0-8d68-40c2-9fdc-1fcdad0c8f0e",
        "text": "I think to understand \"Why not smalltalk, lisp, etc\" you really need to look at the history of how we got to where we are today. I think the explanation lies not so much in the merits of the technology, but in the momentum and network effects of the others. Way back when computing was new, no one knew at all how to program, or even what it should look like, so there was an amazing effort to explore that design space. That's what gave us languages like smalltalk that look so different from what we use today -- they didn't have any preconceptions about what they were doing, so they were not pigeonholed into a certain design.\n\nBUT, and this is a big one, computing hardware was slow and very expensive. Doing things like making \"objects\" in the Kay sense which have a lot overhead in message passing was expensive on single threaded sequential processors. It was much more efficient to write languages that loosely mirrored the way the hardware worked. This was especially true considering Moore's law, which was in full effect back then. For every 18 months you spent making your language faster through more efficient algorithms, IBM or Intel or whoever had just doubled their transistor count and made languages like C twice as fast.\n\nSo event though a language like Smalltalk had all these amazing human considerations, a language like C kept getting faster and faster, which was really all we wanted out of computers back then. Then you start getting businesses interested, who start paying imperative programmers money. The operating systems are written in C, the applications are written in C, everyone knows C,  so the languages that come after resemble it, and the mindset required to use them are similar to a C mindset. This breeds a monoculture and languages like Smalltalk are just forgotten in time, as the old guard simply isn't large enough to teach the new guard. Eventually people are self-teaching themselves and they have no concept of what came before, no matter how mind-blowingly good it might be.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R2v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think to understand \"Why not smalltalk, lisp, etc\" you really need to look at the history of how we got to where we are today. I think the explanation lies not so much in the merits of the technology, but in the momentum and network effects of the others. Way back when computing was new, no one knew at all how to program, or even what it should look like, so there was an amazing effort to explore that design space. That's what gave us languages like smalltalk that look so different from what we use today -- they didn't have any preconceptions about what they were doing, so they were not pigeonholed into a certain design.\n\nBUT, and this is a big one, computing hardware was slow and very expensive. Doing things like making \"objects\" in the Kay sense which have a lot overhead in message passing was expensive on single threaded sequential processors. It was much more efficient to write languages that loosely mirrored the way the hardware worked. This was especially true considering Moore's law, which was in full effect back then. For every 18 months you spent making your language faster through more efficient algorithms, IBM or Intel or whoever had just doubled their transistor count and made languages like C twice as fast.\n\nSo event though a language like Smalltalk had all these amazing human considerations, a language like C kept getting faster and faster, which was really all we wanted out of computers back then. Then you start getting businesses interested, who start paying imperative programmers money. The operating systems are written in C, the applications are written in C, everyone knows C,  so the languages that come after resemble it, and the mindset required to use them are similar to a C mindset. This breeds a monoculture and languages like Smalltalk are just forgotten in time, as the old guard simply isn't large enough to teach the new guard. Eventually people are self-teaching themselves and they have no concept of what came before, no matter how mind-blowingly good it might be."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UAL7940NM",
                    "U8A5MS6R1",
                    "UBSMEUXAA",
                    "U85HCL7JP",
                    "UA14TGLTC",
                    "UCXR52MU2"
                ],
                "count": 6
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541784586.116500",
        "edited": {
            "user": "UCGR73CAY",
            "ts": "1541784631.000000"
        },
        "client_msg_id": "e7de48eb-4314-4c23-9139-60fce739b676",
        "text": "What happened is we as a group picked one direction (imperative programming), and we explored all the possibilities in that direction to make it faster and optimize it. The cost of this was leaving behind all these other possibilities. Now that Moore's law has hit some physical limitations, and the topological nature of our programs has changed from single threaded on one machine to a loosely-coupled network of processes, we can't squeeze anymore blood from this stone. I think this is why now you see a renewed interest into dead languages from the before time.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8Y7rw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What happened is we as a group picked one direction (imperative programming), and we explored all the possibilities in that direction to make it faster and optimize it. The cost of this was leaving behind all these other possibilities. Now that Moore's law has hit some physical limitations, and the topological nature of our programs has changed from single threaded on one machine to a loosely-coupled network of processes, we can't squeeze anymore blood from this stone. I think this is why now you see a renewed interest into dead languages from the before time."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UAL7940NM",
                    "U8A5MS6R1",
                    "U85HCL7JP",
                    "UA14TGLTC",
                    "UCQ4BBFQ9",
                    "UCXR52MU2"
                ],
                "count": 7
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1541785780.117100",
        "edited": {
            "user": "U5TCAFTD3",
            "ts": "1541785823.000000"
        },
        "client_msg_id": "49E9C3A6-3BC5-42C8-8E9F-9D1590EB30EB",
        "text": "<https:\/\/nearthespeedoflight.com\/files\/Smalltalk%20Reading%20List.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541780906.114900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UoHT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/nearthespeedoflight.com\/files\/Smalltalk%20Reading%20List.pdf"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541789290.117400",
        "client_msg_id": "7d8340d7-9d1f-4c63-ad38-dc9cd441c311",
        "text": "&gt; Because I fundamentally disagree that OOP can lead to good code architecture.\n\nNick, curious why you think this",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GllX",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Because I fundamentally disagree that OOP can lead to good code architecture."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nNick, curious why you think this"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541789300.117700",
        "client_msg_id": "0a2d2ef9-b8e6-45dd-8d76-c803a6211359",
        "text": "can you elaborate a bit more?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "thmIa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "can you elaborate a bit more?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1541789522.117900",
        "client_msg_id": "72349b1f-2f8a-451a-965f-71279931e178",
        "text": "Anybody here use Smalltalk on a regular basis? Having someone to ask questions of is often the difference between sticking with it and giving up.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541780906.114900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ccj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anybody here use Smalltalk on a regular basis? Having someone to ask questions of is often the difference between sticking with it and giving up."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1541790646.118500",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1541790714.000000"
        },
        "client_msg_id": "e991b189-6b6a-4029-a513-08c5d1934024",
        "text": "<@U8A5MS6R1>:\n&gt; I don't really know why Smalltalk and Lisp machines didn't catch on but Unix did.\n\nThis question has been debated to death, of course. Besides the horse's mouth at <https:\/\/www.jwz.org\/doc\/worse-is-better.html>, a good (top 10 maybe) thread is <http:\/\/lambda-the-ultimate.org\/node\/4510>.\n\n---\n\n<@UC6997THT>, this question of yours is very valid:\n&gt; ..people describe using lisp as everytime writing a DSL for the problem at hand. So you need to learn a new DSL for every project..\n\nIt was heavily discussed on the ll1 mailing list, back when gods and dinosaurs walked on the earth. One possible starting point is <http:\/\/people.csail.mit.edu\/gregs\/ll1-discuss-archive-html\/msg02030.html>, though it takes time sampling the whole list to build a more complete picture of the trade-offs.\n\nOne clear conclusion is that there are other ways to get the benefits of macros, and that macros don't make sense for all languages. Smalltalk doesn't need them, for example.\n\nBeyond that, I think a lot of the disagreement around Lisp ends up being about people's experience in different domains and situations. I haven't experienced different Lisp programs having whole new DSLs. The most useful macros tend to be pretty general-purpose (see _\"On Lisp\"_), and it seems worth learning macros just to get them. It seems a relatively minor issue that different Lisp dialects may use different names for the same macros. Beyond that, if you run into a DSL then things depend on whether the domain benefits from a DSL or it's just gratuitous over-engineering, how well it's designed, etc. But these human\/incentive factors exist regardless of language anyway. In my opinion, more powerful languages don't end up with worse over-engineering under the same forces of incentives.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WJ424",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": ":"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't really know why Smalltalk and Lisp machines didn't catch on but Unix did."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nThis question has been debated to death, of course. Besides the horse's mouth at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.jwz.org\/doc\/worse-is-better.html"
                            },
                            {
                                "type": "text",
                                "text": ", a good (top 10 maybe) thread is "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/lambda-the-ultimate.org\/node\/4510"
                            },
                            {
                                "type": "text",
                                "text": ".\n\n---\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": ", this question of yours is very valid:"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "..people describe using lisp as everytime writing a DSL for the problem at hand. So you need to learn a new DSL for every project.."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nIt was heavily discussed on the ll1 mailing list, back when gods and dinosaurs walked on the earth. One possible starting point is "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/people.csail.mit.edu\/gregs\/ll1-discuss-archive-html\/msg02030.html"
                            },
                            {
                                "type": "text",
                                "text": ", though it takes time sampling the whole list to build a more complete picture of the trade-offs.\n\nOne clear conclusion is that there are other ways to get the benefits of macros, and that macros don't make sense for all languages. Smalltalk doesn't need them, for example.\n\nBeyond that, I think a lot of the disagreement around Lisp ends up being about people's experience in different domains and situations. I haven't experienced different Lisp programs having whole new DSLs. The most useful macros tend to be pretty general-purpose (see "
                            },
                            {
                                "type": "text",
                                "text": "\"On Lisp\"",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "), and it seems worth learning macros just to get them. It seems a relatively minor issue that different Lisp dialects may use different names for the same macros. Beyond that, if you run into a DSL then things depend on whether the domain benefits from a DSL or it's just gratuitous over-engineering, how well it's designed, etc. But these human\/incentive factors exist regardless of language anyway. In my opinion, more powerful languages don't end up with worse over-engineering under the same forces of incentives."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1541790959.118800",
        "client_msg_id": "fdf6802a-5681-4cb1-93af-ec2537711bf0",
        "text": "Thanks for the resources so far! One thing I'm particular interested in is which features of Smalltalk to people think are the most exciting that our existing programming languages and platforms lack? Love to hear any comments or links to highlight those features",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541780906.114900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mRm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the resources so far! One thing I'm particular interested in is which features of Smalltalk to people think are the most exciting that our existing programming languages and platforms lack? Love to hear any comments or links to highlight those features"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1541792880.119200",
        "edited": {
            "user": "UBSMEUXAA",
            "ts": "1541792914.000000"
        },
        "client_msg_id": "d8a9f0e5-1696-4bb0-ada3-d51435f9c243",
        "text": "&gt; Because that usually means \"boxes and arrows\", and there's nothing about that that makes programming inherently easier.\n\nI agree, but what about when it doesn't mean boxes and arrows",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VA6k",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Because that usually means \"boxes and arrows\", and there's nothing about that that makes programming inherently easier."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nI agree, but what about when it doesn't mean boxes and arrows"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541793400.120200",
        "client_msg_id": "f97c7725-0b53-4ff1-a563-9f10968a3ee3",
        "text": "Agree with a lot of what <@UCGR73CAY> said. One aspect is that market forces might further strengthen the C\/Unix mindset because chip manufacturers and system designs will optimize for the mainstream model. Alan Kay mentions the the B5000 which had a tagged memory architecture - where memory is not just addresseable bytes but instead has support for &lt;tag&gt; and &lt;data&gt; at the hardware level. Almost all high level languages today emulate this in software via object headers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JL56",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Agree with a lot of what "
                            },
                            {
                                "type": "user",
                                "user_id": "UCGR73CAY"
                            },
                            {
                                "type": "text",
                                "text": " said. One aspect is that market forces might further strengthen the C\/Unix mindset because chip manufacturers and system designs will optimize for the mainstream model. Alan Kay mentions the the B5000 which had a tagged memory architecture - where memory is not just addresseable bytes but instead has support for <tag> and <data> at the hardware level. Almost all high level languages today emulate this in software via object headers."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1541793591.120500",
        "client_msg_id": "e26dd10a-a7a2-44af-80f3-f682cd4a8bf0",
        "text": "<https:\/\/mooc.pharo.org>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541780906.114900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+1\/f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/mooc.pharo.org"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC6997THT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541793716.120700",
        "edited": {
            "user": "UCGR73CAY",
            "ts": "1541793752.000000"
        },
        "client_msg_id": "b91d2d33-430e-410e-ae4d-16f41f228513",
        "text": "I think the market is actually going to come around to our side. You see this already with how GPUs are being used for machine learning, and Intel is adding FPGAs now onto their chips. Alternative architectures are being explored because the Von Neumann arch we've been using this whole time is hitting a wall. The VN bottle neck is really holding things back, and languages designed essentially to conform to that model won't be very helpful in expressing programs that span thousands of machines. I don't even think the idea of a \"thread\" is very helpful in this context.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TlER",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think the market is actually going to come around to our side. You see this already with how GPUs are being used for machine learning, and Intel is adding FPGAs now onto their chips. Alternative architectures are being explored because the Von Neumann arch we've been using this whole time is hitting a wall. The VN bottle neck is really holding things back, and languages designed essentially to conform to that model won't be very helpful in expressing programs that span thousands of machines. I don't even think the idea of a \"thread\" is very helpful in this context."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541796682.121000",
        "client_msg_id": "47713d8e-df5e-4586-9c79-1e15e6afe692",
        "text": "There's also a wide landscape between editing 'large text blobs' and 'patch and wire' UIs. E.g. spreadsheets and Subtext.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "crGUV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's also a wide landscape between editing 'large text blobs' and 'patch and wire' UIs. E.g. spreadsheets and Subtext."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541810269.131100",
        "client_msg_id": "EFF8AAE5-5B85-4797-822C-E66AE7389489",
        "text": "<@UCGR73CAY> couldn't agree more about C and CPUs and the accedents of history.  Was helping with some homework this week using C for the same reasons that one might use Latin.  Was reminded of how well C is suited for a certain memory and execution model and how tedious it is for everything else.  Of course by the end, I was using function pointers and passing contexts so as to stack allocate memory 'cus who has time to malloc and free.  Got me thinking of Jonathan Blow's Jai language, which, born from his constraints in game programming, differs from what you might see elsewhere.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qXlS3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGR73CAY"
                            },
                            {
                                "type": "text",
                                "text": " couldn't agree more about C and CPUs and the accedents of history.  Was helping with some homework this week using C for the same reasons that one might use Latin.  Was reminded of how well C is suited for a certain memory and execution model and how tedious it is for everything else.  Of course by the end, I was using function pointers and passing contexts so as to stack allocate memory 'cus who has time to malloc and free.  Got me thinking of Jonathan Blow's Jai language, which, born from his constraints in game programming, differs from what you might see elsewhere."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1541826865.131400",
        "client_msg_id": "1abdbce7-fa25-4c0e-87b7-42b5e43714ea",
        "text": "I definitely agree that domains change impressions. I come from games too and I've written some on highly memory constrained systems (NES 10k ram) and so I often hear language people talk about features that were unfathomable to me at the time. For example Rob Pike once suggested GO's compiler was so fast he considered there was no reason to distributed executables, just always compile and I'm sure in his world of servers that made sense. In my world of games that made zero sense. Artists always use all available memory. There's no memory for a compiler or AST in memory (or at least didn't use to be)\n\nSome of you have probably seen Mike Acton presentation about perf. if nothing else it shows that some language ideas while making it easier to code end up making poorly performing code. It's fast enough for word processors and web forms but not for domains that require speed.\n\nI'm not suggesting that lisp or haskell or smalltalk are slow. Only pointing out the obvious that domains can change the discussion a lot.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/Ra",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I definitely agree that domains change impressions. I come from games too and I've written some on highly memory constrained systems (NES 10k ram) and so I often hear language people talk about features that were unfathomable to me at the time. For example Rob Pike once suggested GO's compiler was so fast he considered there was no reason to distributed executables, just always compile and I'm sure in his world of servers that made sense. In my world of games that made zero sense. Artists always use all available memory. There's no memory for a compiler or AST in memory (or at least didn't use to be)\n\nSome of you have probably seen Mike Acton presentation about perf. if nothing else it shows that some language ideas while making it easier to code end up making poorly performing code. It's fast enough for word processors and web forms but not for domains that require speed.\n\nI'm not suggesting that lisp or haskell or smalltalk are slow. Only pointing out the obvious that domains can change the discussion a lot."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541827274.136200",
        "client_msg_id": "44C2A549-E3B3-48A1-91E9-4727F653C632",
        "text": "I was thinking about other recent examples.  Swift strikes me as a language for compiler writers fed up with C limitations.  Rust seems born of memory leaks.  And of course Go is born is channels and C++ compiler errors\/slowness.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "92LX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was thinking about other recent examples.  Swift strikes me as a language for compiler writers fed up with C limitations.  Rust seems born of memory leaks.  And of course Go is born is channels and C++ compiler errors\/slowness."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1541828458.136400",
        "client_msg_id": "231930ea-572f-41a8-90cb-2e4020b7bc77",
        "text": "Relevant HN article currently on front page <https:\/\/news.ycombinator.com\/item?id=18419366>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541780906.114900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VNWA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Relevant HN article currently on front page "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=18419366"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541832253.136600",
        "client_msg_id": "2a9cce9b-5e46-47a5-b53f-b12aa8904e77",
        "text": "Hi Roben, I play around with Pharo every so often and have worked through a bit of 'Pharo by Example'. It took  a while to get whats different and powerful about the approach. It's not the language features but more like the features of a coherent system as a whole: you're editing the system live rather than writing a program that *will be run* at a later time. So all the objects and classes you work with are live, in-memory (somebody once wrote that 'there is no such thing as a Smalltalk program that's not running'). This opens up a very different way to think about 'programming' - blurs the distinction between writing and running and has a lot more incremental and live. The second key feature is that the objects have multiple views and the usual facilities to inspect objects are always available - you don't have to suffle debug symbols into a separate artifact and attach a debugger or anything. So if the system sends an unrecognized message to an object, the debugger pops up and you can just write the implementation right there. One interesting feature is 'find by example'. E.g. you can ask the system to give you a method that will transform 'abc' into 'ABC' and it will give you a suggestion.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541780906.114900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9gVRJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi Roben, I play around with Pharo every so often and have worked through a bit of 'Pharo by Example'. It took  a while to get whats different and powerful about the approach. It's not the language features but more like the features of a coherent system as a whole: you're editing the system live rather than writing a program that "
                            },
                            {
                                "type": "text",
                                "text": "will be run",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " at a later time. So all the objects and classes you work with are live, in-memory (somebody once wrote that 'there is no such thing as a Smalltalk program that's not running'). This opens up a very different way to think about 'programming' - blurs the distinction between writing and running and has a lot more incremental and live. The second key feature is that the objects have multiple views and the usual facilities to inspect objects are always available - you don't have to suffle debug symbols into a separate artifact and attach a debugger or anything. So if the system sends an unrecognized message to an object, the debugger pops up and you can just write the implementation right there. One interesting feature is 'find by example'. E.g. you can ask the system to give you a method that will transform 'abc' into 'ABC' and it will give you a suggestion."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]