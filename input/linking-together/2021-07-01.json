[
    {
        "user": "U01SUK9M8R2",
        "type": "message",
        "ts": "1625192309.038000",
        "client_msg_id": "a57a011f-2586-49f1-aa9e-e08eff44bf82",
        "text": "Different people imagine different things with the term \"visual programming\", but there are kind of common goals. This is a great read.\n<https:\/\/drossbucket.com\/2021\/06\/30\/hacker-news-folk-wisdom-on-visual-programming\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g32730296450",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b4cbb729a8a92d30e9e6849fc514fc4a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "Yusuke",
            "real_name": "Yusuke Shinyama",
            "display_name": "Yusuke Shinyama",
            "team": "T5TCAFTA9",
            "name": "shinyama.y.ac",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625192309.038000",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1625362784.060700",
        "reply_users": [
            "UBN9AFS0N",
            "UA14TGLTC",
            "USH01JEDQ",
            "UC2A2ARPT"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1625211138.038600"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1625211347.038800"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1625232569.039300"
            },
            {
                "user": "USH01JEDQ",
                "ts": "1625292450.059300"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1625362784.060700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "drossbucket",
                "service_url": "http:\/\/drossbucket.com",
                "title": "Hacker News folk wisdom on visualÂ programming",
                "title_link": "https:\/\/drossbucket.com\/2021\/06\/30\/hacker-news-folk-wisdom-on-visual-programming\/",
                "author_name": "Lucy Keer",
                "author_link": "https:\/\/drossbucket.com\/author\/drossbucket\/",
                "thumb_url": "https:\/\/drossbucket.files.wordpress.com\/2021\/06\/image-1.png?w=652&fit=200%2C150",
                "thumb_width": 200,
                "thumb_height": 87,
                "text": "I&rsquo;m a fairly frequent Hacker News lurker, especially when I have some other important task that I&rsquo;m avoiding. I normally head to the Active page (lots of comments, good for procrastination) and pick a nice long discussion thread to browse. So over time I&rsquo;ve ended up with a good sense of what topics come up a lot. &ldquo;The Bay Area is too expensive.&rdquo; &ldquo;There are too many JavaScript frameworks.&rdquo; &ldquo;Bootcamps: good or bad?&rdquo; I have to admit that I enjoy these. There&rsquo;s a comforting familiarity in reading the same internet argument over and over again.\n\n\n\nOne of the more interesting recurring topics is visual programming:\n\n\n\nVisual Programming Doesn&rsquo;t Suck. Or maybe it does? These kinds of arguments usually start with a few shallow rounds of yay\/boo. But then often something more interesting happens. Some of the subthreads get into more substantive points, and people with a deep knowledge of the tool in question turn up, and at this point the discussion can become genuinely useful and interesting.\n\n\n\nThis is one of the things I genuinely appreciate about Hacker News. Most fields have a problem with &lsquo;ghost knowledge&rsquo;, hard-won practical understanding that is mostly passed on verbally between practitioners and not written down anywhere public. At least in programming some chunk of it makes it into forum posts. It&rsquo;s normally hidden in the depths of big threads, but that&rsquo;s better than nothing.\n\n\n\nI decided to read a bunch of these visual programming threads and extract some of this folk wisdom into a more accessible form. The background for how I got myself into this is a bit convoluted. In the last year or so I&rsquo;ve got interested in the development of writing as a technology. There are two books in particular that have inspired me:\n\n\n\nWalter Ong&rsquo;s Orality and Literacy: the Technologizing of the Word. This is about the history of writing and how it differs from speech; I wrote a sort of review here. Everything that we now consider obvious, like vowels, full stops and spaces between words, had to be invented at some point, and this book gives a high level overview of how this happened and why.Catarina Dutilh Novaes&rsquo;s Formal Languages in Logic. The title makes it sound like a maths textbook, but Novaes is a philosopher and really it&rsquo;s much closer to Ong&rsquo;s book in spirit, looking at formal languages as a type of writing and exploring how they differ from ordinary written language.Dutilh Novaes focuses on formal logic, but I&rsquo;m curious about formal and technical languages more generally: how do we use the properties of text in other fields of mathematics, or in programming? What is text good at, and what is it bad at? Comment threads on visual programming turn out to be a surprisingly good place to explore this question. If something&rsquo;s easy in text but difficult in a specific visual programming tool, you can guarantee that someone will turn up to complain about it. Some of these complaints are fairly superficial, but some get into some fairly deep properties of text: linearity, information density, an alphabet of discrete symbols. And conversely, enthusiasm for a particular visual feature can be a good indicator of what text is poor at.\n\n\n\nSo that&rsquo;s how I found myself plugging through a text file with 1304 comments pasted into it and wondering what the hell I had got myself into.\n\n\n\nWhat I did\n\n\n\nNote: This post is looong (around 9000 words), but also very modular. I&rsquo;ve broken it into lots of subsections that can be read relatively independently, so it should be fairly easy to skip around without reading the whole thing. Also, a lot of the length is from liberal use of quotes from comment threads. So hopefully it&rsquo;s not quite as as bad as it looks!\n\n\n\nThis is not supposed to be some careful scientific survey. I decided what to include and how to categorise the results based on whatever rough qualitative criteria seemed reasonable to me. The basic method, such as it was, was the following:\n\n\n\nType &lsquo;visual programming&rsquo; into the HN search box and pull out the six entries on the first page that were a) about visual programming in general, not a specific tool and b) had long discussion threads (100+ comments). These six threads were:Ask HN: Why does visual programming suck?Visual Programming Doesn&rsquo;t Suck, a discussion of this blog postAsk HN: Why isn&rsquo;t visual programming a bigger thing?Visual Programming &ndash; Why It&rsquo;s a Bad Idea, a discussion of this blog postVisual Programming Is Unbelievable (2015), a discussion of this blog postMaybe visual programming is the answer, maybe not, a discussion of this blog postSkim through the comments and do a rough triage, keeping anything that was on-topic and fairly substantivePull out interesting-looking parts of these comments into a spreadsheet, and tag with common themes that I noticedWrite this blog postThe basic structure of the rest of the post is the following:\n\n\n\nA breakdown of what commenters normally meant by &lsquo;visual programming&rsquo; in these threads. It&rsquo;s a pretty broad term, and people come in with very different understandings of it.Common themes. This is the main bulk of the post, where I&rsquo;ve pulled out topics that came up in multiple threads.A short discussion-type section with some initial questions that came to mind while writing this. There are many directions I could take this in, and this post is long enough without discussing these in detail, so I&rsquo;ll just wave at some of them vaguely. Probably I&rsquo;ll eventually write at least one follow-up post to pick up some of these strands when I&rsquo;ve thought about them more.Types of visual programming\n\n\n\nThere are also a lot of disparate visual programming paradigms that are all classed under &ldquo;visual&rdquo;, I guess in the same way that both Haskell and Java are &ldquo;textual&rdquo;. It makes for a weird debate when one party in a conversation is thinking about patch\/wire dataflow languages as the primary VPLs (e.g. QuartzComposer) and the other one is thinking about procedural block languages (e.g. Scratch) as the primary VPLs.&mdash; seanmcdirmid\n\n\n\nOne difficulty with interpreting these comments is that people often start arguing about &lsquo;visual programming&rsquo; without first specifying what type of visual programming they mean. Sometimes this gets cleared up further into a comment thread, when people start naming specific tools, and sometimes it never gets cleared up at all. There were a few broad categories that came up frequently, so I&rsquo;ll start by summarising them below.\n\n\n\nNode-based interfaces\n\n\n\nExample LabVIEW screen (source)There are a large number of visual programming tools that are roughly in the paradigm of &lsquo;boxes with some arrows between them&rsquo;, like the LabVIEW example above. I think the technical term for these is &lsquo;node-based&rsquo;, so that&rsquo;s what I&rsquo;ll call them. These ended up being the main topic of conversation in four of the six discussions, and mostly seemed to be the implied topic when someone was talking about &lsquo;visual programming&rsquo; in general. Most of these tools are special-purpose ones that are mainly used in a specific domain. These domains came up repeatedly:Laboratory and industrial control. LabVIEW was the main tool discussed in this category. In fact it was probably the most commonly discussed tool of all, attracting its fair share of rants but also many defenders.\n\n\n\nGame engines. Unreal Engine&rsquo;s Blueprints was probably the second most common topic. This is a visual gameplay scripting system.\n\n\n\nMusic production. Max\/MSP came up a lot as a tool for connecting and modifying audio clips.\n\n\n\nVisual effects. Houdini, Nuke and Blender all have node-based editors for creating effects.\n\n\n\nData migration. SSIS was the main tool here, used for migrating and transforming Microsoftâ¦",
                "fallback": "drossbucket Link: Hacker News folk wisdom on visual&nbsp;programming",
                "from_url": "https:\/\/drossbucket.com\/2021\/06\/30\/hacker-news-folk-wisdom-on-visual-programming\/",
                "service_icon": "https:\/\/drossbucket.files.wordpress.com\/2020\/08\/bucket_1faa3.png?w=180",
                "id": 1,
                "original_url": "https:\/\/drossbucket.com\/2021\/06\/30\/hacker-news-folk-wisdom-on-visual-programming\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uVw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Different people imagine different things with the term \"visual programming\", but there are kind of common goals. This is a great read.\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/drossbucket.com\/2021\/06\/30\/hacker-news-folk-wisdom-on-visual-programming\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "UAJ9DV971",
                    "UML4ZEKDK",
                    "UC2A2ARPT",
                    "UF5PAGQQ4",
                    "UJ6LDMMN0",
                    "UFQQ3P867",
                    "U02028JHX37"
                ],
                "count": 8
            },
            {
                "name": "+1",
                "users": [
                    "U012RSHGTFY"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UKFNXF0F9",
        "type": "message",
        "ts": "1625197410.038300",
        "client_msg_id": "d529202f-a489-40a3-933a-eddb9ea13257",
        "text": "record &amp; replay or time travel debugging <https:\/\/github.com\/taowen\/awesome-debugger\/blob\/main\/README.md>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5651704a60f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/15651704a60f7ef1539f9b1fa2506188.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "taowen",
            "display_name": "taowen",
            "team": "T5TCAFTA9",
            "name": "taowen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zKc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "record & replay or time travel debugging "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/taowen\/awesome-debugger\/blob\/main\/README.md"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "U016LEA3J1H"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    }
]