[
    {
        "user": "UDJ2TKB99",
        "type": "message",
        "ts": "1541839417.140100",
        "client_msg_id": "490A7FB4-86E9-4A91-B462-2CDDBF503CEE",
        "text": "Thanks! I enjoyed the bits in the Lua paper about the evolutionary pressures that shaped it: that its host organization had to support a variety of machines, which led to Lua being very portable, which helped its early external adoption",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7acd71947ea2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-04\/2564854327154_7acd71947ea203e9a69b_72.jpg",
            "first_name": "Joe",
            "real_name": "Joe Trellick",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541752846.108200",
        "parent_user_id": "UDJ2TKB99",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BfONl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! I enjoyed the bits in the Lua paper about the evolutionary pressures that shaped it: that its host organization had to support a variety of machines, which led to Lua being very portable, which helped its early external adoption"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541839723.145600",
        "client_msg_id": "4C9EF2E0-B70A-44FD-AFBC-0CBE7B16A3E9",
        "text": "Lua is pretty much a minimal dynamic language with as few opinions as they could manage.  My favorite example is their solution any camelCase\/snake_case debate: have all the builtins be a single word.  It's a silly example, but mostly permeates the language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541752846.108200",
        "parent_user_id": "UDJ2TKB99",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6eC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lua is pretty much a minimal dynamic language with as few opinions as they could manage.  My favorite example is their solution any camelCase\/snake_case debate: have all the builtins be a single word.  It's a silly example, but mostly permeates the language."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1541849025.145900",
        "client_msg_id": "8E9B8A6C-AEC0-4F03-A23C-DBD6D4FF5D7A",
        "text": "<http:\/\/www.rntz.net\/post\/against-software-development.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vutAL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/www.rntz.net\/post\/against-software-development.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC",
                    "UDJ2TKB99",
                    "U5TCAFTD3"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1541849531.146900",
        "client_msg_id": "CFDF17C6-990F-4139-82C2-AE37DE543FC3",
        "text": "<@UA14TGLTC> Can you help me connect the dots for your Swift example?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n4G1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " Can you help me connect the dots for your Swift example?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541849781.147100",
        "client_msg_id": "00ad7845-acc7-4792-93f0-fb009dc7452b",
        "text": "I don't have anything deep to say.  Only read the Swift book when it first came out and got the distinct impression that Swift is a language designed by a frustrated C compiler writer.  Just the semantics of structs and such.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FIhyi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't have anything deep to say.  Only read the Swift book when it first came out and got the distinct impression that Swift is a language designed by a frustrated C compiler writer.  Just the semantics of structs and such."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1541850951.163300",
        "client_msg_id": "31DB0C96-640A-4685-A2C1-7F222775C81A",
        "text": "<@UA14TGLTC> I was just curious. It’s an interesting observation. I don’t really know where the “frustrated compiler writer” storyline emerged from, and maybe I was just shielded from it by not having an outside view on the moment when Swift was announced and released, but from what I can tell the Swift team is everything but motivated by frustration, and rather by a very specific vision of getting rid of the problems of C-style languages that encourage programmer errors and creating an easier to learn language along the way, that still has all the expressivity developers want for low-level stuff.\n\nBy the metric of how many iOS apps got rejected for crashing \/ exhibiting serious bugs from the before-Swift era to today, the team has already succeeded.\n\nIf anything, there might be a few exceptionally good C++ developers on that team, who might be driven a little by frustration of how complex C++ has gotten who are now able to make a new attempt at a language that’s at least as safe if not safer and way easier to learn.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Dll",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " I was just curious. It’s an interesting observation. I don’t really know where the “frustrated compiler writer” storyline emerged from, and maybe I was just shielded from it by not having an outside view on the moment when Swift was announced and released, but from what I can tell the Swift team is everything but motivated by frustration, and rather by a very specific vision of getting rid of the problems of C-style languages that encourage programmer errors and creating an easier to learn language along the way, that still has all the expressivity developers want for low-level stuff.\n\nBy the metric of how many iOS apps got rejected for crashing \/ exhibiting serious bugs from the before-Swift era to today, the team has already succeeded.\n\nIf anything, there might be a few exceptionally good C++ developers on that team, who might be driven a little by frustration of how complex C++ has gotten who are now able to make a new attempt at a language that’s at least as safe if not safer and way easier to learn."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541852259.171300",
        "client_msg_id": "BA73ABDC-0CAC-4365-A272-BC813FE6EFDF",
        "text": "In fairness then, I should elaborate.  As I read through the Swift book (version 1), I kept thinking, \"well if you do it that way, you can optimize the hell out of it.  This seems like a language designed for compiler writers.\" My other main impression was that the genetics didn't seem quite finished.  And that I'd be glad to write for iOS again after Swift stabilized.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E3w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In fairness then, I should elaborate.  As I read through the Swift book (version 1), I kept thinking, \"well if you do it that way, you can optimize the hell out of it.  This seems like a language designed for compiler writers.\" My other main impression was that the genetics didn't seem quite finished.  And that I'd be glad to write for iOS again after Swift stabilized."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1541852954.179100",
        "client_msg_id": "CE029B3E-2188-45C6-B45A-BB4BFD9F8C7F",
        "text": "<@UA14TGLTC> I’d say that’s a very accurate description of Swift 1. You should look at it again when Swift 5 is released early next year. :-)\n\nSometimes I wonder how much of our programming future is shaped by people like us, who think a lot about it and sometimes create awesome projects and prototypes that demonstrate potential vs. people who work on a big project like Swift (or pick any other popular open source language), who are more driven by very practical concerns (e.g. finally shipping an ABI or optimizing compile time) where the bright future is nothing more than a North Star in the night sky providing some loose direction.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eHbs4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " I’d say that’s a very accurate description of Swift 1. You should look at it again when Swift 5 is released early next year. :-)\n\nSometimes I wonder how much of our programming future is shaped by people like us, who think a lot about it and sometimes create awesome projects and prototypes that demonstrate potential vs. people who work on a big project like Swift (or pick any other popular open source language), who are more driven by very practical concerns (e.g. finally shipping an ABI or optimizing compile time) where the bright future is nothing more than a North Star in the night sky providing some loose direction."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541854857.183600",
        "client_msg_id": "580826D6-EA2C-4C99-A39B-A8F01D01A582",
        "text": "Swift 5!  Looking forward to it.  What with the new iPad, I'll just have to convince myself that the most important thing I can do with my time is make an intuitive computer algebra system for my wife.\n\nI've always liked how the Ruby community marries wimsey with practicality.  Soundness seems to be the only compromise.  :stuck_out_tongue_winking_eye:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541742837.092100",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XiM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Swift 5!  Looking forward to it.  What with the new iPad, I'll just have to convince myself that the most important thing I can do with my time is make an intuitive computer algebra system for my wife.\n\nI've always liked how the Ruby community marries wimsey with practicality.  Soundness seems to be the only compromise.  "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue_winking_eye",
                                "unicode": "1f61c"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA8HY8R7B",
        "type": "message",
        "ts": "1541870450.183900",
        "client_msg_id": "489c5119-b7d3-4b61-bc39-2cfb7fd5c2c4",
        "text": "<@UCUSW7WVD> I'm currently using Squeak as my main programming system and am guest researcher at the HPI SWA group where some of its maintainers are working. So shoot over any question you have. If I can't answer it then I'll know someone who can :smiley:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7db3c1ad975",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e7db3c1ad975b0355d3047ca8acb7c54.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Nikolas",
            "real_name": "Nikolas Martens",
            "display_name": "Nikolas",
            "team": "T5TCAFTA9",
            "name": "nikolas.m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541780906.114900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OyJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " I'm currently using Squeak as my main programming system and am guest researcher at the HPI SWA group where some of its maintainers are working. So shoot over any question you have. If I can't answer it then I'll know someone who can "
                            },
                            {
                                "type": "emoji",
                                "name": "smiley",
                                "unicode": "1f603"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U8A5MS6R1"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1541872486.184200",
        "client_msg_id": "adeb1a74-12fb-4f96-813b-4959e679ec70",
        "text": "Thanks for all the comments everyone, is it safe to say editing the program live is the most significant Smalltalk feature? I'm also curious how people compare this feature to Emacs (which can also be edited live)? Are there interesting differences between how Smalltalk and Emacs approach this?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541780906.114900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FQQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for all the comments everyone, is it safe to say editing the program live is the most significant Smalltalk feature? I'm also curious how people compare this feature to Emacs (which can also be edited live)? Are there interesting differences between how Smalltalk and Emacs approach this?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1541872636.184400",
        "client_msg_id": "be371d88-86de-4009-8a13-64e0a77961f7",
        "text": "I'm also curious about the IDE that always seems like it accompanies Smalltalk demos. Here's a screenshot from an article shared above <https:\/\/blog.appacademy.io\/wp-content\/uploads\/2017\/11\/pharo-image.png>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541780906.114900",
        "parent_user_id": "UE0ETTCG7",
        "attachments": [
            {
                "fallback": "981x698px image",
                "image_url": "https:\/\/blog.appacademy.io\/wp-content\/uploads\/2017\/11\/pharo-image.png",
                "image_width": 981,
                "image_height": 698,
                "image_bytes": 82288,
                "from_url": "https:\/\/blog.appacademy.io\/wp-content\/uploads\/2017\/11\/pharo-image.png",
                "id": 1,
                "original_url": "https:\/\/blog.appacademy.io\/wp-content\/uploads\/2017\/11\/pharo-image.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vuL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm also curious about the IDE that always seems like it accompanies Smalltalk demos. Here's a screenshot from an article shared above "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/blog.appacademy.io\/wp-content\/uploads\/2017\/11\/pharo-image.png"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1541872755.184700",
        "client_msg_id": "b00bfd78-e3a6-4003-8bad-9bbbe08eedf6",
        "text": "How important is this IDE part of the Smalltalk\/Pharo experience? And is it essential for Smalltalk development? If I wanted to write Smalltalk code in say VS Code would that be possible or is the IDE an integral part of the Smalltalk workflow?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541780906.114900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+rm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How important is this IDE part of the Smalltalk\/Pharo experience? And is it essential for Smalltalk development? If I wanted to write Smalltalk code in say VS Code would that be possible or is the IDE an integral part of the Smalltalk workflow?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1541872899.184900",
        "client_msg_id": "cd3bcbae-1aa0-42e1-adb6-c22d12ae5893",
        "text": "that *is* smalltalk, AFAIK just recently they achieved \"headless\" smalltalk, and it was a big deal",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541780906.114900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dHEto",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " smalltalk, AFAIK just recently they achieved \"headless\" smalltalk, and it was a big deal"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "exploding_head",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541880820.185600",
        "client_msg_id": "8541189c-6043-46b6-9e3a-b626ff33896f",
        "text": "Chris' Eve talk got a little play on HN today: <https:\/\/news.ycombinator.com\/item?id=18409836>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nPh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Chris' Eve talk got a little play on HN today: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=18409836"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541880869.186300",
        "client_msg_id": "2c89e97a-4ab8-4c72-9581-50e1ca8bb07b",
        "text": "So we can all thank Steve for that, because otherwise no one would have seen it :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541880869.186300",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1541880943.186400",
        "reply_users": [
            "U5TCAFTD3"
        ],
        "replies": [
            {
                "user": "U5TCAFTD3",
                "ts": "1541880943.186400"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1541880943.186400",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ALHp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So we can all thank Steve for that, because otherwise no one would have seen it "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "UE0ETTCG7",
                    "UD72R4WTU",
                    "U9ULPG0UA",
                    "U8A5MS6R1",
                    "UCQ4BBFQ9",
                    "UERTM1JPR"
                ],
                "count": 6
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1541880943.186400",
        "client_msg_id": "52018f1b-4086-4931-8328-85bd8b296fac",
        "text": "My pleasure! Thanks for encouraging me to record it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541880869.186300",
        "parent_user_id": "UCGR73CAY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yKl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My pleasure! Thanks for encouraging me to record it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541893762.186700",
        "client_msg_id": "8d3ccbf2-3feb-44c1-ab7e-97241cbb672a",
        "text": "<@UE0ETTCG7> The 'IDE' isn't really just and IDE, it's more like a window into the world of Smalltalk. So you don't just develop the system but also view it through this window. This doesn't really integrate well with Unix. That's because Smalltalk a *whole system* and not a just another programming language designed on top of the Unix model. I think GNU Smalltalk implements the Smalltalk language only stored in files but that would miss the experience. The UI is a hurdle because it is a completely different desktop than the one we are used to. But yes, the IDE is integral - Smalltalk without the 'IDE' is like Unix without a terminal.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541780906.114900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r2qMP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE0ETTCG7"
                            },
                            {
                                "type": "text",
                                "text": " The 'IDE' isn't really just and IDE, it's more like a window into the world of Smalltalk. So you don't just develop the system but also view it through this window. This doesn't really integrate well with Unix. That's because Smalltalk a "
                            },
                            {
                                "type": "text",
                                "text": "whole system",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and not a just another programming language designed on top of the Unix model. I think GNU Smalltalk implements the Smalltalk language only stored in files but that would miss the experience. The UI is a hurdle because it is a completely different desktop than the one we are used to. But yes, the IDE is integral - Smalltalk without the 'IDE' is like Unix without a terminal."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1541904136.186900",
        "client_msg_id": "4ce773de-7d4c-4f63-8930-72d0607cea58",
        "text": "<@UBSMEUXAA> <@U8A5MS6R1> I agree there's more to VPLs than boxes and arrows. I think programs can benefit from more innovative forms of representation, but I think the visual representation has to be co-designed with a language. I'm more just frustrated by attempts at languages that start out with \"I'm going to make everything visual, because visuals are easier than text\" as a design idea, because that's usually when you end up with arbitrary, unhelpful visualisations. I once spent a year doing this myself, and that's how I learnt this lesson.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qmESZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBSMEUXAA"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " I agree there's more to VPLs than boxes and arrows. I think programs can benefit from more innovative forms of representation, but I think the visual representation has to be co-designed with a language. I'm more just frustrated by attempts at languages that start out with \"I'm going to make everything visual, because visuals are easier than text\" as a design idea, because that's usually when you end up with arbitrary, unhelpful visualisations. I once spent a year doing this myself, and that's how I learnt this lesson."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541904395.187100",
        "client_msg_id": "77fc5102-f890-4802-a739-70346d185687",
        "text": "<@UCGAK10LS> absolutely!  Do the visuals match up with your domain?  Do they make intention more clear?  Dijkstra's \"Go To Statement Considered Harmful\" is my favorite articulation of this.  He argues in favor of structured programming imagining that the way the code is written out will better match how it is conceptually structured and how it runs.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "23Pz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " absolutely!  Do the visuals match up with your domain?  Do they make intention more clear?  Dijkstra's \"Go To Statement Considered Harmful\" is my favorite articulation of this.  He argues in favor of structured programming imagining that the way the code is written out will better match how it is conceptually structured and how it runs."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1541904749.187300",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1541904832.000000"
        },
        "client_msg_id": "c07a08c3-d52a-4621-ba0d-2bf19b51210d",
        "text": "<@UCGR73CAY> Regarding OOP, I came to the conclusion after a few years of seeking exposure to different programming language paradigms (plus my own work experience). OOP is (as far as I've seen) fundamentally about creating side-effectful entities with hidden mutable state. This kind of code is exceedingly difficult to reason about, because you can never be sure how the state of the world changes after every method call. Thus it makes code harder to read (and change, and grow), because you're unable to think at a high level of abstraction; for every call you have to ask \"what will this actually be doing\", which is a lot more complex than \"what value does this compute\" (as you can in functional PLs).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LiR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGR73CAY"
                            },
                            {
                                "type": "text",
                                "text": " Regarding OOP, I came to the conclusion after a few years of seeking exposure to different programming language paradigms (plus my own work experience). OOP is (as far as I've seen) fundamentally about creating side-effectful entities with hidden mutable state. This kind of code is exceedingly difficult to reason about, because you can never be sure how the state of the world changes after every method call. Thus it makes code harder to read (and change, and grow), because you're unable to think at a high level of abstraction; for every call you have to ask \"what will this actually be doing\", which is a lot more complex than \"what value does this compute\" (as you can in functional PLs)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541904921.187700",
        "client_msg_id": "ce2b0a2b-ae53-461b-82bb-4ff0f18dd9bb",
        "text": "I guess I'm confused. Do you mean OOP in the sense it's used in industry, or OOP in the sense Kay originally intended?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bZfur",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess I'm confused. Do you mean OOP in the sense it's used in industry, or OOP in the sense Kay originally intended?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1541904992.187900",
        "client_msg_id": "96be5929-d44d-446f-b1fc-cd8c256e3845",
        "text": "To the best of my understanding, the issue I've described is prevalent in both industry OOP and Kay's OOP. Kay didn't really say much about constraining side-effects did he?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BWsA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To the best of my understanding, the issue I've described is prevalent in both industry OOP and Kay's OOP. Kay didn't really say much about constraining side-effects did he?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905022.188100",
        "client_msg_id": "737f4dcd-13e6-44b2-bc57-6fc05d6136b9",
        "text": "well, there wouldn't really be side effects per se, because everything went through messaging channels",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n8UXs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "well, there wouldn't really be side effects per se, because everything went through messaging channels"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905079.188300",
        "client_msg_id": "1dcfbbf3-06e9-4320-b6d1-f05591fe926f",
        "text": "side effects as I generally conceive them happen on the down low",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2MO1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "side effects as I generally conceive them happen on the down low"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905110.188500",
        "client_msg_id": "79e2bb51-bc2f-4bf7-b294-44373160ad98",
        "text": "e.g. call add(x,y) and it accesses the file system and deletes some of your data",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5F9xN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "e.g. call add(x,y) and it accesses the file system and deletes some of your data"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905179.188700",
        "client_msg_id": "647d24b6-7e52-41e9-b0a7-dcd838bb9fbf",
        "text": "In a Kay-OOP language you call add(x,y) and it would create some messages that would talk to the file system",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rwl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In a Kay-OOP language you call add(x,y) and it would create some messages that would talk to the file system"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1541905180.188900",
        "client_msg_id": "f0d3fc36-fe65-4054-9150-ab0ff2a53ca7",
        "text": "I believe messaging (like the actor model) is still fairly considered a side-effectful way of programming. I understand what you mean though. What if I did \"calculator.add(x,y)\" and the calculator called \"filesystem.deleteAll()\"? That's a side-effect to me, regardless of whether it's implemented with message passing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ajUTg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I believe messaging (like the actor model) is still fairly considered a side-effectful way of programming. I understand what you mean though. What if I did \"calculator.add(x,y)\" and the calculator called \"filesystem.deleteAll()\"? That's a side-effect to me, regardless of whether it's implemented with message passing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905217.189100",
        "client_msg_id": "ab0e988f-39b9-43cc-8455-8855d86aa81b",
        "text": "well if it's implemented with message passing the point is you can intercept those",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xIh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "well if it's implemented with message passing the point is you can intercept those"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905222.189300",
        "edited": {
            "user": "UCGR73CAY",
            "ts": "1541905250.000000"
        },
        "client_msg_id": "6bc407bc-1029-422c-88f7-8a6feac1d2e8",
        "text": "it's not up to add(x,y) what happens",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zycdm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it's not up to add(x,y) what happens"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905264.189600",
        "client_msg_id": "0e42dbf7-a99d-4e0d-8a9d-bb10d86c534d",
        "text": "and so that really changes the way you build the whole thing",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zLROA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and so that really changes the way you build the whole thing"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1541905283.189800",
        "client_msg_id": "abbcc3b0-3960-43d9-9642-59ace420d26b",
        "text": "But are things any easier for the programmer to reason about? Can they know what additional messages are going to be sent as a consequence of their original message send?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4Pt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But are things any easier for the programmer to reason about? Can they know what additional messages are going to be sent as a consequence of their original message send?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1541905300.190000",
        "client_msg_id": "32ef2189-ccd6-4570-ae4f-f6aea979a763",
        "text": "That's the core problem",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qJJ=e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's the core problem"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1541905406.190200",
        "client_msg_id": "735bee08-5e37-4f8a-9198-092caf6dd441",
        "text": "That high-level reasoning -- the ability to abstract -- is needed to develop large systems without massive complexity growth",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "INThn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That high-level reasoning -- the ability to abstract -- is needed to develop large systems without massive complexity growth"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905426.190400",
        "client_msg_id": "7be3642b-2c2e-44be-a24b-6ebf78a80338",
        "text": "I think yes. For one we have a record of this happening, so we can track down why filesystem.deleteAll() occurred -- where the messages came from and when",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TzPN\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think yes. For one we have a record of this happening, so we can track down why filesystem.deleteAll() occurred -- where the messages came from and when"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905498.190600",
        "client_msg_id": "ffb93b12-71b3-4bfb-967b-9cd2c4fbf2ef",
        "text": "for another, we can build the filesystem in a way that will block messages that call \"deleteAll()\" unless it has the right permissions",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DXyP6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "for another, we can build the filesystem in a way that will block messages that call \"deleteAll()\" unless it has the right permissions"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905514.190800",
        "client_msg_id": "65f313aa-f326-4cd8-a350-0e7e2a0aeaf9",
        "text": "This is the idea of capability based permissions",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gnSB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is the idea of capability based permissions"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905529.191000",
        "client_msg_id": "c46a4be7-cde9-4380-a17f-aa76aea469d3",
        "text": "rather than ownership based",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aeB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "rather than ownership based"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1541905592.191200",
        "client_msg_id": "63967c4e-295a-43ed-9dc5-0df01b00edc2",
        "text": "Message trails sound really useful, but it occurs at the point of debugging -- after something has already gone wrong. If the deleteAll() message only occurs on July 22nd every year, you're not going to be able to catch the problem when you need to (during development).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b95D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Message trails sound really useful, but it occurs at the point of debugging -- after something has already gone wrong. If the deleteAll() message only occurs on July 22nd every year, you're not going to be able to catch the problem when you need to (during development)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905658.191400",
        "client_msg_id": "a9479348-9106-4be8-88d0-e1e379ccbd4d",
        "text": "that's certainly true!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cG7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that's certainly true!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1541905678.191600",
        "client_msg_id": "9aa52b07-2155-4770-9709-5c536201eac6",
        "text": "I'm actually a proponent of the actor model (and capabilities), but only at the outermost levels of a system: when you're building an application that truly distributed (like a web service)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hCrTm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm actually a proponent of the actor model (and capabilities), but only at the outermost levels of a system: when you're building an application that truly distributed (like a web service)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1541905696.191800",
        "client_msg_id": "b97fe444-e1c4-468f-91b8-1e0062842b02",
        "text": "Because you don't really have many choices at that point",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iVH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Because you don't really have many choices at that point"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905717.192000",
        "client_msg_id": "b2e136d5-e798-4e42-9544-acdc65c0bfd9",
        "text": "I think to a large extent, a lot of what we build is fundamentally distributed and asynchronous",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eDoP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think to a large extent, a lot of what we build is fundamentally distributed and asynchronous"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905737.192200",
        "client_msg_id": "63204f0c-2974-43a5-89f1-9db0489cca67",
        "text": "Which isn't as bad as it sounds, because real life is distributed and asynchronous as well",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i5i=O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Which isn't as bad as it sounds, because real life is distributed and asynchronous as well"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905767.192400",
        "client_msg_id": "784032ca-631c-4159-ad43-f46599ad829c",
        "text": "Everything is going on all over the place at once, and we only make sense of it by communicating and negotiating with one another",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ILl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Everything is going on all over the place at once, and we only make sense of it by communicating and negotiating with one another"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541905799.192600",
        "client_msg_id": "ab124ac7-7302-42fc-8032-2ee6a5bc3a2b",
        "text": "I've found that kids actually don't have as much trouble as you would think reasoning about systems built this way",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RkN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've found that kids actually don't have as much trouble as you would think reasoning about systems built this way"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1541905887.192800",
        "client_msg_id": "579c359f-85a0-4400-b551-34c4ad741788",
        "text": "Yeah I'm all for using message passing when modelling a real distributed system, I just think it's not useful to have it at a fine-grained level (like Kay proposes)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E8nP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah I'm all for using message passing when modelling a real distributed system, I just think it's not useful to have it at a fine-grained level (like Kay proposes)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC21F8Q48"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1541905942.193000",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1541905953.000000"
        },
        "client_msg_id": "9d4a11fe-5592-403c-bff2-27e281583275",
        "text": "I've come to my own conclusion that a functional inside (for easy reasoning) and a message-based outside (for modelling systems) is probably the sweet spot",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eYBB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've come to my own conclusion that a functional inside (for easy reasoning) and a message-based outside (for modelling systems) is probably the sweet spot"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541906303.193300",
        "client_msg_id": "7db7b92c-7955-430e-affa-aa5c2c7cc139",
        "text": "Kay's was too fine grained I think",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nm0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Kay's was too fine grained I think"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541906317.193500",
        "client_msg_id": "538a35ac-679d-4607-b410-812283b31a9a",
        "text": "like having a number accept messages",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uKHUN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "like having a number accept messages"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1541906323.193700",
        "client_msg_id": "1686459b-1d04-4b0c-84cc-c390da30778b",
        "text": "that's just going overboard",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OaDm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that's just going overboard"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1541907852.200800",
        "client_msg_id": "FB049E99-797C-4CD7-8D50-2047D87FA54B",
        "text": "Glad to hear capabilities mentioned: an agent cannot do a thing unless given that capability.  Cannot think of a conceptually simpler security model.\n\nBack around 2000, I totally thought Aspect Orientation would become the way that we orchestrate behavior over OO systems.  To ensure properties like, I don't know, ensure that the system doesn't keep references to transient objects between processing the request that generated them.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gd+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Glad to hear capabilities mentioned: an agent cannot do a thing unless given that capability.  Cannot think of a conceptually simpler security model.\n\nBack around 2000, I totally thought Aspect Orientation would become the way that we orchestrate behavior over OO systems.  To ensure properties like, I don't know, ensure that the system doesn't keep references to transient objects between processing the request that generated them."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1541921307.201000",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1541921464.000000"
        },
        "client_msg_id": "24e4de63-07c0-4fc5-869d-e8a7111f1525",
        "text": "Catching up just now.. I'm very interested in this topic of OO so apologies for this long reply.\n\n<@UCGAK10LS>\n&gt; Kay didn't really say much about constraining side-effects did he?'\nHere's a curious quote from The Early History of Smalltalk, which Kay wrote in 93:\n\"However, doing encapsulation right is a commitment not just to abstraction of state, but to eliminate state oriented metaphors from programming.\" - strangely not quite what we think of as OO.\nThere are some interesting ideas capable of extending the OO model to manage state that are from other folks and Kay has talked about. These are 'managed time' ideas from David Reed (Puedo Time, NAMOS) and David Jefferson (Virtual Time). Kay talks briefly about the deeper idea here: <https:\/\/www.quora.com\/Why-is-functional-programming-seen-as-the-opposite-of-OOP-rather-than-an-addition-to-it\/answer\/Alan-Kay-11>\n\n&gt; creating side-effectful entities with hidden mutable state\nExcellent point! But any FP program you run talks to other programs and ends up looking like an 'object' - it has internal state and sends and receives messages. This happens across all boundaries - IPC, process to kernel, process to filesystem, to database etc. So really the behavior of the system isn't from the one program, it's from an emergent OO like system. This gets worse as we scale up to larger systems. IOW, it's very difficult to reason about system behavior because you can never be sure how the state of the world changes after every _message send_ (sorry stole some of your words above).\n\nSo maybe we haven't really solved the problem, only pushed it outward while we try and reason about a small bundle? But if this method of reasoning can't extend to the composition of different bundles, is it really a great solution?\n\nAnother question is why is the final product (the program\/database\/process etc.) itself an 'object like' thing (has state and identity)? IOW, any FP program is just a large object. Maybe we're wired to deal with identity and state - the real world appears this way. A lot of things we want to model with computers have identity and state. Even within computers we have files\/versions, packages, applications - each with identity and state. OTOH math functions are also super useful to analyze the real world in all sciences. So maybe instead of throwing out OO, we need simultaneous multiple perspectives - objects being transformed functionally? This is the idea in the quora answer I linked above. A lot of details are TBD of course - but I feel if we get the reasoning with composition right, the model will also work in the large. The good ideas in FP are immutability and functional transformations - these are not incompatible with OO.\n\nAn important aspect of this design is that we may be able to reify the whole system state. In the sense that git only reifies the state of a file tree and datomic only reifies the data you put in it. So in theory you could track down *every* downstream change produced by a single incoming message. Advanced uses could even do a whole-system fork or rollback.\n\n<@UCGR73CAY>\n&gt; having a number accept messages\nRegarding how granular objects should be, I believe Kay said once that they made the objects too small. But having only objects all the way down is an attempt at a deep recursive design and completely replacing the idea of 'data structures and procedures'.\n\n<@UA14TGLTC>\nI remember Aspect Orientation! A great idea unfortunately lost to implementation specific problems.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "attachments": [
            {
                "title": "Alan Kay's answer to Why is functional programming seen as the opposite of OOP rather than an addition to it? - Quora",
                "title_link": "https:\/\/www.quora.com\/Why-is-functional-programming-seen-as-the-opposite-of-OOP-rather-than-an-addition-to-it\/answer\/Alan-Kay-11",
                "text": "I hope for all our sakes that I can make this short … In the latter part of the 50s John McCarthy got more and more interested in what he started to call “Artificial Intelligence”. He was also doing some consulting and this brought him in contact...",
                "fallback": "Alan Kay's answer to Why is functional programming seen as the opposite of OOP rather than an addition to it? - Quora",
                "from_url": "https:\/\/www.quora.com\/Why-is-functional-programming-seen-as-the-opposite-of-OOP-rather-than-an-addition-to-it\/answer\/Alan-Kay-11",
                "service_name": "quora.com",
                "id": 1,
                "original_url": "https:\/\/www.quora.com\/Why-is-functional-programming-seen-as-the-opposite-of-OOP-rather-than-an-addition-to-it\/answer\/Alan-Kay-11"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YeNd=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Catching up just now.. I'm very interested in this topic of OO so apologies for this long reply.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Kay didn't really say much about constraining side-effects did he?'"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's a curious quote from The Early History of Smalltalk, which Kay wrote in 93:\n\"However, doing encapsulation right is a commitment not just to abstraction of state, but to eliminate state oriented metaphors from programming.\" - strangely not quite what we think of as OO.\nThere are some interesting ideas capable of extending the OO model to manage state that are from other folks and Kay has talked about. These are 'managed time' ideas from David Reed (Puedo Time, NAMOS) and David Jefferson (Virtual Time). Kay talks briefly about the deeper idea here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.quora.com\/Why-is-functional-programming-seen-as-the-opposite-of-OOP-rather-than-an-addition-to-it\/answer\/Alan-Kay-11"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "creating side-effectful entities with hidden mutable state"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Excellent point! But any FP program you run talks to other programs and ends up looking like an 'object' - it has internal state and sends and receives messages. This happens across all boundaries - IPC, process to kernel, process to filesystem, to database etc. So really the behavior of the system isn't from the one program, it's from an emergent OO like system. This gets worse as we scale up to larger systems. IOW, it's very difficult to reason about system behavior because you can never be sure how the state of the world changes after every "
                            },
                            {
                                "type": "text",
                                "text": "message send",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (sorry stole some of your words above).\n\nSo maybe we haven't really solved the problem, only pushed it outward while we try and reason about a small bundle? But if this method of reasoning can't extend to the composition of different bundles, is it really a great solution?\n\nAnother question is why is the final product (the program\/database\/process etc.) itself an 'object like' thing (has state and identity)? IOW, any FP program is just a large object. Maybe we're wired to deal with identity and state - the real world appears this way. A lot of things we want to model with computers have identity and state. Even within computers we have files\/versions, packages, applications - each with identity and state. OTOH math functions are also super useful to analyze the real world in all sciences. So maybe instead of throwing out OO, we need simultaneous multiple perspectives - objects being transformed functionally? This is the idea in the quora answer I linked above. A lot of details are TBD of course - but I feel if we get the reasoning with composition right, the model will also work in the large. The good ideas in FP are immutability and functional transformations - these are not incompatible with OO.\n\nAn important aspect of this design is that we may be able to reify the whole system state. In the sense that git only reifies the state of a file tree and datomic only reifies the data you put in it. So in theory you could track down "
                            },
                            {
                                "type": "text",
                                "text": "every",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " downstream change produced by a single incoming message. Advanced uses could even do a whole-system fork or rollback.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UCGR73CAY"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "having a number accept messages"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regarding how granular objects should be, I believe Kay said once that they made the objects too small. But having only objects all the way down is an attempt at a deep recursive design and completely replacing the idea of 'data structures and procedures'.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": "\nI remember Aspect Orientation! A great idea unfortunately lost to implementation specific problems."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC25BN0RW"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1541922851.201600",
        "client_msg_id": "be055f0b-8ae1-4507-a700-29ec65c9c81b",
        "text": "I agree with everything you said, and I was trying to communicate the same thing earlier (albeit poorly). Real systems have concurrent components and apps that aren't sandboxes have to deal with them, and that's where mutable \"objects\" with state are useful. I prefer to call this an actor system rather than an OO system because OO doesn't generally mean what Kay wanted it to mean. Kay admits that the actor model is the same thing as Kay-style OO here: <https:\/\/www.quora.com\/What-is-the-difference-between-Alan-Kays-definition-of-OOP-and-Carl-Hewitts-Actor-Model>\n\nBut large swathes of actors are hard to reason about (in comparison to programs consisting of solely of functional composition) and so, as you say, actors can be pushed to the top layer of a system, and a functional language can be used to define state transitions. This isn't novel: it's done **poorly** in Erlang\/Elixir (due to local mutation and no static typing), and its also done implicitly in Elm (where \"ports\" are essentially actors). No language has yet done both statically typed, pure FP and fully-fledged actors simultaneously, however. Therefore, there's been no real way to understand how well this paradigm would play out in the wild.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1541745698.096700",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oSc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree with everything you said, and I was trying to communicate the same thing earlier (albeit poorly). Real systems have concurrent components and apps that aren't sandboxes have to deal with them, and that's where mutable \"objects\" with state are useful. I prefer to call this an actor system rather than an OO system because OO doesn't generally mean what Kay wanted it to mean. Kay admits that the actor model is the same thing as Kay-style OO here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.quora.com\/What-is-the-difference-between-Alan-Kays-definition-of-OOP-and-Carl-Hewitts-Actor-Model"
                            },
                            {
                                "type": "text",
                                "text": "\n\nBut large swathes of actors are hard to reason about (in comparison to programs consisting of solely of functional composition) and so, as you say, actors can be pushed to the top layer of a system, and a functional language can be used to define state transitions. This isn't novel: it's done **poorly** in Erlang\/Elixir (due to local mutation and no static typing), and its also done implicitly in Elm (where \"ports\" are essentially actors). No language has yet done both statically typed, pure FP and fully-fledged actors simultaneously, however. Therefore, there's been no real way to understand how well this paradigm would play out in the wild."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]