[
    {
        "user": "U06SS0DHZD1",
        "type": "message",
        "ts": "1720989326.670259",
        "client_msg_id": "334b933b-9f28-4ecf-9d88-f16c44f35caf",
        "text": "Cross-app interoperability is also strong in Android. At least on paper. It relies on sharing objects (\"binder objects\"), cross-app function calls (\"intents\") and even embedding foreign 2d surfaces. All of that while maintaining full process separation. I find it very interesting (kind of tragic) that despite the platform solving all of the technical issues, in practice, barely any app makes use of them. Possibly other systems mentioned in this thread suffered the same fate. The only example where cross-app interop actually caught on (that I know) is the POSIX command line ecosystem. My theory is that having the best interop system isn't worth much unless it's also easier and more convenient to use (vs isolated apps).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "287ba5559ee1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-04-04\/6922823105585_287ba5559ee1cedd6b98_72.png",
            "first_name": "Marek",
            "real_name": "Marek Rogalski",
            "display_name": "maf",
            "team": "T5TCAFTA9",
            "name": "mafikpl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719910206.179899",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pnJds",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cross-app interoperability is also strong in Android. At least on paper. It relies on sharing objects (\"binder objects\"), cross-app function calls (\"intents\") and even embedding foreign 2d surfaces. All of that while maintaining full process separation. I find it very interesting (kind of tragic) that despite the platform solving all of the technical issues, in practice, barely any app makes use of them. Possibly other systems mentioned in this thread suffered the same fate. The only example where cross-app interop actually caught on (that I know) is the POSIX command line ecosystem. My theory is that having the best interop system isn't worth much unless it's also easier and more convenient to use (vs isolated apps)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U06SS0DHZD1",
        "type": "message",
        "ts": "1720991957.344029",
        "client_msg_id": "586d60ed-ad36-498e-addb-64fd685fdf67",
        "text": "<@U03U0SCU5LH> I think a \"terrible idea\" is something that, if implemented, would have bad consequences. I wouldn't call any of those systems terrible ideas. I actually think it would be really nice if they caught on. It would be pretty awesome to be able to easily mash up different apps on ones own PC or smartphone. Maybe these systems could be criticized for being badly designed or badly implemented?\n\nRe protocols and data formats: Consider the following challenge: design a protocol\/data format that would allow users to build new interactive apps out of components exposed by other apps. This is a multi-objective design challenge where one has to balance compatibility with existing systems, user-friendliness, efficiency, security, etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "287ba5559ee1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-04-04\/6922823105585_287ba5559ee1cedd6b98_72.png",
            "first_name": "Marek",
            "real_name": "Marek Rogalski",
            "display_name": "maf",
            "team": "T5TCAFTA9",
            "name": "mafikpl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719910206.179899",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "09Kjd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U03U0SCU5LH"
                            },
                            {
                                "type": "text",
                                "text": " I think a \"terrible idea\" is something that, if implemented, would have bad consequences. I wouldn't call any of those systems terrible ideas. I actually think it would be really nice if they caught on. It would be pretty awesome to be able to easily mash up different apps on ones own PC or smartphone. Maybe these systems could be criticized for being badly designed or badly implemented?\n\nRe protocols and data formats: Consider the following challenge: design a protocol\/data format that would allow users to build new interactive apps out of components exposed by other apps. This is a multi-objective design challenge where one has to balance compatibility with existing systems, user-friendliness, efficiency, security, etc."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]