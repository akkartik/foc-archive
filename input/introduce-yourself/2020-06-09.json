[
    {
        "user": "U012XRK1371",
        "type": "message",
        "ts": "1591724889.278500",
        "client_msg_id": "243292dd-ec3f-41fe-b609-545d5398ecd7",
        "text": "Hi all, I am Andrew Sernyak and I am a software architect at work and clojure hobbyist at my spare time from Ukraine :flag-ua:.\n\nI've stumbled upon a future of coding podcast with Jonathan Edwards, then I saw Wildcard by Geoffrey Litt and so, here I am.\n\nI am frustrated with the current state of things in software development and I am trying to bring back the joy of coding I once had. I've started widening my horizon by just thinking of other ways of building software, reading old programming papers and digging into computing history, instead of learning yet another js framework.\n\nCurrently I experiment with some ideas by creating specialized software just for myself, like web-page scraping, personal blog, etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b41664c53742",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-11\/1191441878993_b41664c53742c6ce01ab_72.jpg",
            "first_name": "",
            "real_name": "Andrew Sernyak",
            "display_name": "Andrew Sernyak",
            "team": "T5TCAFTA9",
            "name": "ndrew.sernyak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591724889.278500",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1591914936.285900",
        "reply_users": [
            "U85HCL7JP",
            "U012XRK1371"
        ],
        "replies": [
            {
                "user": "U85HCL7JP",
                "ts": "1591755130.283400"
            },
            {
                "user": "U012XRK1371",
                "ts": "1591874167.285400"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1591914936.285900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dP+Kx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi all, I am Andrew Sernyak and I am a software architect at work and clojure hobbyist at my spare time from Ukraine "
                            },
                            {
                                "type": "emoji",
                                "name": "flag-ua",
                                "unicode": "1f1fa-1f1e6"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nI've stumbled upon a future of coding podcast with Jonathan Edwards, then I saw Wildcard by Geoffrey Litt and so, here I am.\n\nI am frustrated with the current state of things in software development and I am trying to bring back the joy of coding I once had. I've started widening my horizon by just thinking of other ways of building software, reading old programming papers and digging into computing history, instead of learning yet another js framework.\n\nCurrently I experiment with some ideas by creating specialized software just for myself, like web-page scraping, personal blog, etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "UC2A2ARPT",
                    "UN7K3UT4G",
                    "UDQBTJ211",
                    "UJBAJNFLK",
                    "UAVCC2X70",
                    "UC21F8Q48",
                    "UMWF81HTP",
                    "U85HCL7JP",
                    "UA14TGLTC",
                    "UHWC9PXBL",
                    "UJ6LDMMN0"
                ],
                "count": 11
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1591731321.279200",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1591731398.000000"
        },
        "client_msg_id": "7ad4bfba-c76f-4de7-8f78-048a9a687323",
        "text": "My thoughts on \"great code\", if you want to discuss it further:\n\nI'm certain there are things that developers do to make huge messes of code, that no advancement in language or tooling alone will fix. It's mostly about detangling things and keeping it simple (e.g. not building a cathedral when all you need was an awning).\n\nOne thing that gets in the way is that the model is not in the code, it's in the developer's head. The code is just a very cumbersome _description_ of that model. One has to work very hard to mentally deconstruct code and reconstruct the actual model (i.e. what is this code actually doing?) in one's head.\n\nI've found ways to do that deconstruction \/ reconstruction in the code itself, so that (regardless of language or tooling) it much more closely matches the human mental model of what it actually is.\n\nOne thing I'm hoping to achieve with my FOC projects is making the design\/flow of code very apparent, so that (for example) connecting two APIs can be done by just reaching in and connecting A to B and C to D, and then boom, it works. If I can make it that tangible, then there'd be less tendency to build a city for each API and a department of transportation for the few things they exchange, etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591655089.275900",
        "parent_user_id": "UPZLYD3GB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X7e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My thoughts on \"great code\", if you want to discuss it further:\n\nI'm certain there are things that developers do to make huge messes of code, that no advancement in language or tooling alone will fix. It's mostly about detangling things and keeping it simple (e.g. not building a cathedral when all you need was an awning).\n\nOne thing that gets in the way is that the model is not in the code, it's in the developer's head. The code is just a very cumbersome "
                            },
                            {
                                "type": "text",
                                "text": "description",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of that model. One has to work very hard to mentally deconstruct code and reconstruct the actual model (i.e. what is this code actually doing?) in one's head.\n\nI've found ways to do that deconstruction \/ reconstruction in the code itself, so that (regardless of language or tooling) it much more closely matches the human mental model of what it actually is.\n\nOne thing I'm hoping to achieve with my FOC projects is making the design\/flow of code very apparent, so that (for example) connecting two APIs can be done by just reaching in and connecting A to B and C to D, and then boom, it works. If I can make it that tangible, then there'd be less tendency to build a city for each API and a department of transportation for the few things they exchange, etc."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U015H1K64G1",
        "type": "message",
        "ts": "1591738132.282500",
        "client_msg_id": "661197ed-6888-4c50-9c52-3ad712d272b8",
        "text": "Hey, I'm Howard and I'm a programmer and tech lead at <http:\/\/tray.io|tray.io> - it's a visual programming tool which allows you to build programs that run on our platform. One of the exciting things about it is lowering the barrier to entry of programming and opening up it's reach to a larger and more diverse group of people in the world. I'm very interested in building higher levels of abstraction than the current programming languages we have today and wanted to learn more about the work other people are doing in the area and also connect with likeminded people.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "35309be4b49a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-10\/1161291947447_35309be4b49a3587cc28_72.jpg",
            "first_name": "",
            "real_name": "Howard Tang",
            "display_name": "Howard Tang",
            "team": "T5TCAFTA9",
            "name": "howard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591738132.282500",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1591794722.284600",
        "reply_users": [
            "UK69SS8LB"
        ],
        "replies": [
            {
                "user": "UK69SS8LB",
                "ts": "1591794722.284600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jtyI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey, I'm Howard and I'm a programmer and tech lead at "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/tray.io",
                                "text": "tray.io"
                            },
                            {
                                "type": "text",
                                "text": " - it's a visual programming tool which allows you to build programs that run on our platform. One of the exciting things about it is lowering the barrier to entry of programming and opening up it's reach to a larger and more diverse group of people in the world. I'm very interested in building higher levels of abstraction than the current programming languages we have today and wanted to learn more about the work other people are doing in the area and also connect with likeminded people."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC",
                    "UAVCC2X70",
                    "UJBAJNFLK",
                    "UFLN9JFRT",
                    "UUQ2EQW21",
                    "UK69SS8LB",
                    "UC21F8Q48",
                    "UFPH678P4",
                    "UR482RFPY",
                    "UP7SQ8KT3",
                    "UDQKHNP51",
                    "UD6EXQVM0",
                    "UJ6LDMMN0",
                    "UGX9MS77V"
                ],
                "count": 15
            }
        ]
    },
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1591753903.283100",
        "client_msg_id": "57712e80-3ca2-468f-ae6b-1d4ac81c63e9",
        "text": "&gt; I’ve found ways to do that deconstruction \/ reconstruction in the code itself, so that (regardless of language or tooling) it much more closely matches the human mental model of what it actually is.\nSound interesting! Can you share more details of how you’re doing it?\n\nA big problem I always find in projects, is that our understanding always evolves and gets better. Both in coding\/technical topics as in understanding of the domain problem. But as our understanding evolves is really hard to go back and update old code, it’s a big hassle doing it as it needs to be done manually. Anyone has thoughts on how to solve this?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591655089.275900",
        "parent_user_id": "UPZLYD3GB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G8mQ",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve found ways to do that deconstruction \/ reconstruction in the code itself, so that (regardless of language or tooling) it much more closely matches the human mental model of what it actually is."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sound interesting! Can you share more details of how you’re doing it?\n\nA big problem I always find in projects, is that our understanding always evolves and gets better. Both in coding\/technical topics as in understanding of the domain problem. But as our understanding evolves is really hard to go back and update old code, it’s a big hassle doing it as it needs to be done manually. Anyone has thoughts on how to solve this?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1591755130.283400",
        "client_msg_id": "cf2b3715-6ed1-434a-8486-27964403b734",
        "text": "Hi, any papers that you found interesting that you recommend?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591724889.278500",
        "parent_user_id": "U012XRK1371",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UdRS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi, any papers that you found interesting that you recommend?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1591764734.283800",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1591764747.000000"
        },
        "client_msg_id": "107df3bd-47a1-4117-bddd-54fff8c9eb6a",
        "text": "I'll have to do that some other time, and maybe on a new thread.\n\n<@UPZLYD3GB> - Do you have examples of languages (or language features) that hold you back? Or some that do the opposite?\n\nI really like Go's (and TypeScript's) implicit interfaces, Haskell-like pattern matching, and most of the new features of C# 7 and 8.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591655089.275900",
        "parent_user_id": "UPZLYD3GB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dCT5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'll have to do that some other time, and maybe on a new thread.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UPZLYD3GB"
                            },
                            {
                                "type": "text",
                                "text": " - Do you have examples of languages (or language features) that hold you back? Or some that do the opposite?\n\nI really like Go's (and TypeScript's) implicit interfaces, Haskell-like pattern matching, and most of the new features of C# 7 and 8."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]