[
    {
        "user": "U02QC0PPER3",
        "type": "message",
        "ts": "1718355344.709339",
        "edited": {
            "user": "U02QC0PPER3",
            "ts": "1718355495.000000"
        },
        "client_msg_id": "d1657a55-6393-41fe-8cb3-7cbfc4f5ff27",
        "text": "I just finished ch4 but meanwhile wanted to bring up a conundrum from ch3.\n\n> It seems that the only way to know how specific a set of program constructs should be is to study the domain very carefully to ascertain how tasks are broken down and performed. A guiding principle is that users will want to be able to create their applications with only a few basic operations, as the experience of UNIX users (Greenberg and Witten, 1988), spreadsheet users (Nardi and Miller, 1990) and CAD users (Tee, 1992) shows.\n\n1. You have to provide primitives that are high-level enough to correspond to concepts & tasks users have.\n2. Users want to learn & use _few_ primitives.  Sometimes they are happier with lower level yet more composable primitives.\n3. Striking a good balance requires interviewing users a lot - which requires not just programmer skills but sociology skills (how to interview, \"activity theory\", etc.)\n :worried: \n\n• The book hopes for advances on the last point (3). So, has there been?  Are there simple & proven interview techniques? \"ask these questions and you'll design a good EUP system\" :ballot_box_with_check: ?\n• Frame challenge: are there ways for users themselves to design for their domain :thinking_face:?\n• Challenge on _few_ requirement (2): were there advances on giving users both composite & lower-level primitives so they can inspect the relation (\"A flange, for example, can be created out of a cut and a protrusion\") and pick for themselves - something users do anyway - without overwhelming them :face_with_head_bandage: ?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "90c9108c61f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-12\/2854686602576_90c9108c61f5d809eb8a_72.jpg",
            "first_name": "Beni",
            "real_name": "Beni Cherniavsky-Paskin",
            "display_name": "Beni Cherniavsky-Paskin",
            "team": "T5TCAFTA9",
            "name": "beni.cherniavsky",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1715195511.574509",
        "parent_user_id": "U06AEM4TRT2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/1dZg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just finished ch4 but meanwhile wanted to bring up a conundrum from ch3.\n\n> It seems that the only way to know how specific a set of program constructs should be is to study the domain very carefully to ascertain how tasks are broken down and performed. A guiding principle is that users will want to be able to create their applications with only a few basic operations, as the experience of UNIX users (Greenberg and Witten, 1988), spreadsheet users (Nardi and Miller, 1990) and CAD users (Tee, 1992) shows.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "You have to provide primitives that are high-level enough to correspond to concepts & tasks users have."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Users want to learn & use "
                                    },
                                    {
                                        "type": "text",
                                        "text": "few",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " primitives.  Sometimes they are happier with lower level yet more composable primitives."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Striking a good balance requires interviewing users a lot - which requires not just programmer skills but sociology skills (how to interview, \"activity theory\", etc.)"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n "
                            },
                            {
                                "type": "emoji",
                                "name": "worried",
                                "unicode": "1f61f"
                            },
                            {
                                "type": "text",
                                "text": " \n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The book hopes for advances on the last point (3). So, has there been?  Are there simple & proven interview techniques? \"ask these questions and you'll design a good EUP system\" "
                                    },
                                    {
                                        "type": "emoji",
                                        "name": "ballot_box_with_check",
                                        "unicode": "2611-fe0f"
                                    },
                                    {
                                        "type": "text",
                                        "text": " ?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Frame challenge: are there ways for users themselves to design for their domain "
                                    },
                                    {
                                        "type": "emoji",
                                        "name": "thinking_face",
                                        "unicode": "1f914"
                                    },
                                    {
                                        "type": "text",
                                        "text": "?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Challenge on "
                                    },
                                    {
                                        "type": "text",
                                        "text": "few",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " requirement (2): were there advances on giving users both composite & lower-level primitives so they can inspect the relation (\"A flange, for example, can be created out of a cut and a protrusion\") and pick for themselves - something users do anyway - without overwhelming them "
                                    },
                                    {
                                        "type": "emoji",
                                        "name": "face_with_head_bandage",
                                        "unicode": "1f915"
                                    },
                                    {
                                        "type": "text",
                                        "text": " ?"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    }
                ]
            }
        ]
    }
]