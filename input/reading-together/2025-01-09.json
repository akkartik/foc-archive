[
    {
        "user": "U0887QU9G2V",
        "type": "message",
        "ts": "1736441494.280529",
        "client_msg_id": "d2ce2de0-dafc-4fe9-950f-4521862b1510",
        "text": "My first time reading a classic: [Naur on programming as theory building](<https:\/\/pages.cs.wisc.edu\/~remzi\/Naur.pdf>).\n\nLoved the article and disagreed with almost everything. Sharing my private thoughts without polish or much justification, in case someone's interested in a dissenting opinion :sweat_smile:\n- I think Naur is not quite right. It's not theory building. It's the building of a representation of reality, that in itself can be a part of reality.\n- My take: if programs are much more readable, and we have a set of universal constructs for thinking programs, then reading and modifying a program doesn't require an external entity. There needn't be a private theory of the program except for the program itself (and any documentation in natural language). The theory should be readable from the constraints and the words\/calls used in the system.\n- Simplicity can be evaluated as relative length of two solutions that do the same thing.\n- \"Theory\" can be rediscovered by studying both the problem domain and the solution.\n- Naur's concept of the theory of a program is downright <https:\/\/en.wikipedia.org\/wiki\/Animism|animist>. The theory is an entity living in the programmers that created the program, and can only be communicated by them while they are working in the program. When the program stops being worked up, the theory quickly fades and dies. No amount of program or documentation reading is going to revive it.\n- I think a more accurate and constructive view of programming considers it akin to an intellectual or scientific discipline, where a thread can be maintained over time through language, even if the chain is not transmitted orally.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6b9d24756ac1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-08\/8269664865108_6b9d24756ac1aa304bb9_72.jpg",
            "first_name": "Federico",
            "real_name": "Federico Pereiro",
            "display_name": "Federico Pereiro",
            "team": "T5TCAFTA9",
            "name": "fpereiro",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736441494.280529",
        "reply_count": 13,
        "reply_users_count": 6,
        "latest_reply": "1736514379.879859",
        "reply_users": [
            "UBN9AFS0N",
            "UCUSW7WVD",
            "UK3LH8CF5",
            "U04E5QAD6DD",
            "U0887QU9G2V",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1736441953.972939"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1736448171.356289"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1736448984.325329"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1736449296.951029"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1736450090.460299"
            },
            {
                "user": "U04E5QAD6DD",
                "ts": "1736451368.066529"
            },
            {
                "user": "U0887QU9G2V",
                "ts": "1736452333.940719"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1736452714.416089"
            },
            {
                "user": "U0887QU9G2V",
                "ts": "1736453847.417739"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1736454145.856519"
            },
            {
                "user": "U0887QU9G2V",
                "ts": "1736454487.548889"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1736501764.076549"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1736514379.879859"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uXm\/N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My first time reading a classic: [Naur on programming as theory building]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/pages.cs.wisc.edu\/~remzi\/Naur.pdf"
                            },
                            {
                                "type": "text",
                                "text": ").\n\nLoved the article and disagreed with almost everything. Sharing my private thoughts without polish or much justification, in case someone's interested in a dissenting opinion "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            },
                            {
                                "type": "text",
                                "text": "\n- I think Naur is not quite right. It's not theory building. It's the building of a representation of reality, that in itself can be a part of reality.\n- My take: if programs are much more readable, and we have a set of universal constructs for thinking programs, then reading and modifying a program doesn't require an external entity. There needn't be a private theory of the program except for the program itself (and any documentation in natural language). The theory should be readable from the constraints and the words\/calls used in the system.\n- Simplicity can be evaluated as relative length of two solutions that do the same thing.\n- \"Theory\" can be rediscovered by studying both the problem domain and the solution.\n- Naur's concept of the theory of a program is downright "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Animism",
                                "text": "animist"
                            },
                            {
                                "type": "text",
                                "text": ". The theory is an entity living in the programmers that created the program, and can only be communicated by them while they are working in the program. When the program stops being worked up, the theory quickly fades and dies. No amount of program or documentation reading is going to revive it.\n- I think a more accurate and constructive view of programming considers it akin to an intellectual or scientific discipline, where a thread can be maintained over time through language, even if the chain is not transmitted orally."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U06SS0DHZD1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1736441953.972939",
        "client_msg_id": "18c68058-0c3f-4a58-949c-6faeae0e550a",
        "text": "have you heard this podcast episode? <https:\/\/futureofcoding.org\/episodes\/061>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736441494.280529",
        "parent_user_id": "U0887QU9G2V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kvhu1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "have you heard this podcast episode? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.org\/episodes\/061"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1736448171.356289",
        "client_msg_id": "848d948b-fa87-4be2-ab78-dca596e65351",
        "text": "We had <https:\/\/akkartik.name\/archives\/foc\/linking-together\/1661296709.406409.html|this discussion> about it in Aug '22, which perhaps led to this paper being chosen for the podcast episode above in Jan '23. Or perhaps it was recorded earlier and the thread was coincidental.\n\nI still tend to be closer to <@U0887QU9G2V> than <@UK3LH8CF5> here: I don't think there's any essential reason it's impossible to communicate a theory of a codebase. Yes, it won't be identical to the original author's theory, but it'll be close enough that others can make the same decisions as the original author. Yes, not always the _exact_ same decisions, but close enough that if y'all talked you may not care too much about the differences.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736441494.280529",
        "parent_user_id": "U0887QU9G2V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4JRaf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We had "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/akkartik.name\/archives\/foc\/linking-together\/1661296709.406409.html",
                                "text": "this discussion"
                            },
                            {
                                "type": "text",
                                "text": " about it in Aug '22, which perhaps led to this paper being chosen for the podcast episode above in Jan '23. Or perhaps it was recorded earlier and the thread was coincidental.\n\nI still tend to be closer to "
                            },
                            {
                                "type": "user",
                                "user_id": "U0887QU9G2V"
                            },
                            {
                                "type": "text",
                                "text": " than "
                            },
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": " here: I don't think there's any essential reason it's impossible to communicate a theory of a codebase. Yes, it won't be identical to the original author's theory, but it'll be close enough that others can make the same decisions as the original author. Yes, not always the "
                            },
                            {
                                "type": "text",
                                "text": "exact",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " same decisions, but close enough that if y'all talked you may not care too much about the differences."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1736448984.325329",
        "edited": {
            "user": "UK3LH8CF5",
            "ts": "1736449058.000000"
        },
        "client_msg_id": "3a0d4abb-96ac-4063-86ba-12b6b94e1a8e",
        "text": "There's a lot here, so let me just tackle the communication bit. You can't communicate a theory because it isn't linguistic at all. A theory is knowing-how, not knowing-that. Imagine I can juggle. I might be able to juggle without explaining how. Just like I know how to identify people by their faces, but if you asked me how I do it, I have no idea. If I can teach you how to juggle, what I gave you was not my know-how of juggling. I gave you facts about how to juggle and you built up your know how.\n\nSo it isn't that theories can't taught. It's that theories can't be written down because they aren't the kinds of things to be written down (or talked about or drawn etc). In order to write things down about a codebase one has to have a theory. Writing is just one way of presenting ones theory.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736441494.280529",
        "parent_user_id": "U0887QU9G2V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9JHUL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's a lot here, so let me just tackle the communication bit. You can't communicate a theory because it isn't linguistic at all. A theory is knowing-how, not knowing-that. Imagine I can juggle. I might be able to juggle without explaining how. Just like I know how to identify people by their faces, but if you asked me how I do it, I have no idea. If I can teach you how to juggle, what I gave you was not my know-how of juggling. I gave you facts about how to juggle and you built up your know how.\n\nSo it isn't that theories can't taught. It's that theories can't be written down because they aren't the kinds of things to be written down (or talked about or drawn etc). In order to write things down about a codebase one has to have a theory. Writing is just one way of presenting ones theory."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1736449296.951029",
        "client_msg_id": "877da7a7-a15b-41f9-89f7-ce87d297706e",
        "text": "Yeah, I agree with that narrow definition of communication. You can't describe it directly in prose and recreate what about knowing it makes you effective at using it.\n\nI also want to add that I disagree with the point above about Naur being animist, to the extent the term seems to have a negative connotation for you, <@U0887QU9G2V>. Programs are complex, and they require special tacit knowledge to navigate, that is impossible to write down directly and a lot of work to write down indirectly (using exercises and so on to help build \"muscle memory\" in others). While you can view this phenomenon as a spirit animating the body, there are equivalent ways to view it that carry a more positive connotation for us moderns.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736441494.280529",
        "parent_user_id": "U0887QU9G2V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iYqn4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I agree with that narrow definition of communication. You can't describe it directly in prose and recreate what about knowing it makes you effective at using it.\n\nI also want to add that I disagree with the point above about Naur being animist, to the extent the term seems to have a negative connotation for you, "
                            },
                            {
                                "type": "user",
                                "user_id": "U0887QU9G2V"
                            },
                            {
                                "type": "text",
                                "text": ". Programs are complex, and they require special tacit knowledge to navigate, that is impossible to write down directly and a lot of work to write down indirectly (using exercises and so on to help build \"muscle memory\" in others). While you can view this phenomenon as a spirit animating the body, there are equivalent ways to view it that carry a more positive connotation for us moderns."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1736450090.460299",
        "client_msg_id": "2C058C47-5271-4500-8FEF-49BCF007273B",
        "text": "Yeah the whole motivation for the theory is actually to be a thorough going materialist. Ryle didn’t think we had anything in our head. We just had dispositions and behavior. So he reduced theory to dispositions. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736441494.280529",
        "parent_user_id": "U0887QU9G2V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RAEGv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah the whole motivation for the theory is actually to be a thorough going materialist"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Ryle "
                            },
                            {
                                "type": "text",
                                "text": "didn’t"
                            },
                            {
                                "type": "text",
                                "text": " think we had anything in our head"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " We just had dispositions and behavior"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " So he reduced theory to dispositions"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04E5QAD6DD",
        "type": "message",
        "ts": "1736451368.066529",
        "edited": {
            "user": "U04E5QAD6DD",
            "ts": "1736451412.000000"
        },
        "client_msg_id": "19624ac0-1e0b-474f-afa3-d378d3ec1800",
        "text": ">  - \"Theory\" can be rediscovered by studying both the problem domain and the solution.\nI would also add the history of each. As an extremely simple example, I just had a discussion this morning about why do we (at my work) use `<input type=\"button\">` instead of `<button>`. I actually don't know — and it doesn't matter at all in this instance — but I suspect it has to do when the `<button>` HTML tag was added. (Our code base started _early_ in the life cycle of the web.) It's a technical decision that might not have any rationale now, but once did. Without knowing the history, that couldn't be rediscovered.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e3e6bba2ae45",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-06\/5085861186081_e3e6bba2ae4575d17358_72.jpg",
            "first_name": "David",
            "real_name": "David Alan Hjelle",
            "display_name": "David Alan Hjelle",
            "team": "T5TCAFTA9",
            "name": "dahjelle_futureofcodi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736441494.280529",
        "parent_user_id": "U0887QU9G2V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gTYIz",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " - \"Theory\" can be rediscovered by studying both the problem domain and the solution."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI would also add the history of each. As an extremely simple example, I just had a discussion this morning about why do we (at my work) use "
                            },
                            {
                                "type": "text",
                                "text": "<input type=\"button\">",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " instead of "
                            },
                            {
                                "type": "text",
                                "text": "<button>",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". I actually don't know — and it doesn't matter at all in this instance — but I suspect it has to do when the "
                            },
                            {
                                "type": "text",
                                "text": "<button>",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " HTML tag was added. (Our code base started "
                            },
                            {
                                "type": "text",
                                "text": "early",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in the life cycle of the web.) It's a technical decision that might not have any rationale now, but once did. Without knowing the history, that couldn't be rediscovered."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U05BRNRAC4V"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0887QU9G2V",
        "type": "message",
        "ts": "1736452333.940719",
        "edited": {
            "user": "U0887QU9G2V",
            "ts": "1736452528.000000"
        },
        "client_msg_id": "4cf11035-e994-4836-bf59-5497f9939b8e",
        "text": "First of all, I'm really happy to be having this discussion with you all! Normally, I'd keep these thoughts to myself and move on. But now you're making me consider your viewpoints!\n\n<@UK3LH8CF5>, if I may quote what to me is your main point:\n\n>  You can't communicate a theory because it isn't linguistic at all.\nI strongly feel it does, because even if the theory itself is not language, it can be represented\/conveyed by language. Moreover, by *written language*. Rather than try to convince you of this point (and honestly I don't think I have enough data for even trying), I'm going to keep this hypothesis in mind as an open question.\n\nThe other idea I posted above that I still consider interesting is that programming can be seen as an exercise in representing reality. Our program, rather than the theory itself, can be the representation of reality.\n\nAs for animism, I think I went too far :joy: I'd actually even side with an animist theory of programming that allows for its conveyance through the written word, separated by space and time. I chose that adjective as a way to highlight the lack of preservability of the theory in Naur's view, like meat that won't last long in time or space, not even if you have a freezer handy.\n\nTo me, the most beautiful example of resurrecting the theory behind a program is Petzold's Annotated Turing, where he revives the code of Turing's 1936 paper, including a full reconstruction of the Turing Machine. I always assumed that he did this through texts (directly from Turing's paper and from other papers written about it), rather than by an unbroken chain of human-to-human communication.\n\nHopefully I didn't go to hard on the idea, apologies if I raised any hackles!\n\nPS: I didn't know about the podcast episode, I just had found the link earlier today while reviewing <@UCUSW7WVD>’s Mu :D",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6b9d24756ac1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-08\/8269664865108_6b9d24756ac1aa304bb9_72.jpg",
            "first_name": "Federico",
            "real_name": "Federico Pereiro",
            "display_name": "Federico Pereiro",
            "team": "T5TCAFTA9",
            "name": "fpereiro",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736441494.280529",
        "parent_user_id": "U0887QU9G2V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KNx2o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "First of all, I'm really happy to be having this discussion with you all! Normally, I'd keep these thoughts to myself and move on. But now you're making me consider your viewpoints!\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": ", if I may quote what to me is your main point:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " You can't communicate a theory because it isn't linguistic at all."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI strongly feel it does, because even if the theory itself is not language, it can be represented\/conveyed by language. Moreover, by "
                            },
                            {
                                "type": "text",
                                "text": "written language",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Rather than try to convince you of this point (and honestly I don't think I have enough data for even trying), I'm going to keep this hypothesis in mind as an open question.\n\nThe other idea I posted above that I still consider interesting is that programming can be seen as an exercise in representing reality. Our program, rather than the theory itself, can be the representation of reality.\n\nAs for animism, I think I went too far "
                            },
                            {
                                "type": "emoji",
                                "name": "joy",
                                "unicode": "1f602"
                            },
                            {
                                "type": "text",
                                "text": " I'd actually even side with an animist theory of programming that allows for its conveyance through the written word, separated by space and time. I chose that adjective as a way to highlight the lack of preservability of the theory in Naur's view, like meat that won't last long in time or space, not even if you have a freezer handy.\n\nTo me, the most beautiful example of resurrecting the theory behind a program is Petzold's Annotated Turing, where he revives the code of Turing's 1936 paper, including a full reconstruction of the Turing Machine. I always assumed that he did this through texts (directly from Turing's paper and from other papers written about it), rather than by an unbroken chain of human-to-human communication.\n\nHopefully I didn't go to hard on the idea, apologies if I raised any hackles!\n\nPS: I didn't know about the podcast episode, I just had found the link earlier today while reviewing "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": "’s Mu :D"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1736452714.416089",
        "client_msg_id": "eab63544-0d68-46be-8a3e-d4c775a21420",
        "text": "&gt; I strongly feel it does, because even if the theory itself is not language, it can be represented\/conveyed by language. Moreover, by written language. Rather than try to convince you of this point (and honestly I don't think I have enough data for even trying), I'm going to keep this hypothesis in mind as an open question.\nRyle (and I assume Naur along with him) would say this is a category error.\n\n&gt; Ryle: To have a theory or a plan is not itself to be doing or saying anything, any more than to have a pen is to be writing with it. To have a pen is to be in a position to write with it, if occasion arises to do so; and to have a theory or plan is to be prepared either to tell it or to apply it, if occasion arises to do so. The work of building a theory or plan is the work of getting oneself so prepared.\n&gt; Also Ryle: Having a theory or plan is not merely being able to tell what one’s theory or plan is. Being able to tell a theory is, in fact, being able to make just one, namely the didactic exploitation of it. Mastery of Euclid’s theorems is not merely ability to cite them; it is also ability to solve riders to them, meet objections to them and find out the dimensions of fields with their aid.\nThe theory is our ability. We can use our abilities to write things down. But that isn't a theory. So yes, we can explain our theory. We can help others build a theory. But they don't thereby get our abilities. They learn their own abilities.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736441494.280529",
        "parent_user_id": "U0887QU9G2V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KKdmi",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I strongly feel it does, because even if the theory itself is not language, it can be represented\/conveyed by language. Moreover, by written language. Rather than try to convince you of this point (and honestly I don't think I have enough data for even trying), I'm going to keep this hypothesis in mind as an open question."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nRyle (and I assume Naur along with him) would say this is a category error.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ryle: To have a theory or a plan is not itself to be doing or saying anything, any more than to have a pen is to be writing with it. To have a pen is to be in a position to write with it, if occasion arises to do so; and to have a theory or plan is to be prepared either to tell it or to apply it, if occasion arises to do so. The work of building a theory or plan is the work of getting oneself so prepared."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also Ryle: Having a theory or plan is not merely being able to tell what one’s theory or plan is. Being able to tell a theory is, in fact, being able to make just one, namely the didactic exploitation of it. Mastery of Euclid’s theorems is not merely ability to cite them; it is also ability to solve riders to them, meet objections to them and find out the dimensions of fields with their aid."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThe theory is our ability. We can use our abilities to write things down. But that isn't a theory. So yes, we can explain our theory. We can help others build a theory. But they don't thereby get our abilities. They learn their own abilities."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0887QU9G2V",
        "type": "message",
        "ts": "1736453847.417739",
        "client_msg_id": "f9aa5041-91e0-4dc5-8238-a9c773cb834d",
        "text": "Thanks for the counterpoint!  It's indeed likely I'm confusing the categories.\n\nMaybe then, my objection to Naur is that, while recognizing that theory of a program\/system is something that one must build for oneself, certain textual representations of the program (both code &amp; natural language) can effectively let someone construct a theory of the program\/system with relative ease, and that that theory converges (even if it's never equal to) the original theory of the program. The entire power of the objection lies in the possibility of doing this 1) in writing separated by time\/space; 2) effectively in terms of time spent by the \"resurrecting agent\"; 3) in a way that can be considered (by whom? Perhaps by the original holders of the theory?) that the reconstructed theory has a level of convergence to the original similar to that that would have been experienced by the shared theory of a team building a system in a single point in time\/space.\n\nI just re-read that paragraph and I feel that my positivism might have gone a bit too far.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6b9d24756ac1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-08\/8269664865108_6b9d24756ac1aa304bb9_72.jpg",
            "first_name": "Federico",
            "real_name": "Federico Pereiro",
            "display_name": "Federico Pereiro",
            "team": "T5TCAFTA9",
            "name": "fpereiro",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736441494.280529",
        "parent_user_id": "U0887QU9G2V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TJx4R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the counterpoint!  It's indeed likely I'm confusing the categories.\n\nMaybe then, my objection to Naur is that, while recognizing that theory of a program\/system is something that one must build for oneself, certain textual representations of the program (both code & natural language) can effectively let someone construct a theory of the program\/system with relative ease, and that that theory converges (even if it's never equal to) the original theory of the program. The entire power of the objection lies in the possibility of doing this 1) in writing separated by time\/space; 2) effectively in terms of time spent by the \"resurrecting agent\"; 3) in a way that can be considered (by whom? Perhaps by the original holders of the theory?) that the reconstructed theory has a level of convergence to the original similar to that that would have been experienced by the shared theory of a team building a system in a single point in time\/space.\n\nI just re-read that paragraph and I feel that my positivism might have gone a bit too far."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1736454145.856519",
        "client_msg_id": "EDACCB59-52D1-4932-B15F-BA4C8B4AF582",
        "text": "Awesome! Now we have the real disagreement. And you are in good company with that one. Knuth thought that using literate programming you could write a program in such a way that others gain the theory. \n\nI think along the lines of what <@U04E5QAD6DD>   If you want the theory you need to also know the history. But not just the actual history. You need to know the counter-factual history. Why X and not Y? If I wanted to make this program do Z from the beginning, how would I have written it differently? \n\nI personally buy the claim that you can’t resurrect. But I definitely think that is more debatable for sure. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736441494.280529",
        "parent_user_id": "U0887QU9G2V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jGiut",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Awesome! Now we have the real disagreement"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " And you are in good company with that one"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Knuth thought that using literate programming you could write a program in such a way that others gain the theory"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " \n\nI think along the lines of what "
                            },
                            {
                                "type": "user",
                                "user_id": "U04E5QAD6DD"
                            },
                            {
                                "type": "text",
                                "text": "   If you want the theory you need to also know the history"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " But not just the actual history"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " You need to know the counter-factual history"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Why X and not Y? If I wanted to make this program do Z from the beginning, how would I have written it differently? \n\nI personally buy the claim that you "
                            },
                            {
                                "type": "text",
                                "text": "can’t"
                            },
                            {
                                "type": "text",
                                "text": " resurrect"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " But I definitely think that is more debatable for sure"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U04E5QAD6DD",
                    "UA14TGLTC",
                    "U075Q2WP3UK"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U0887QU9G2V",
        "type": "message",
        "ts": "1736454487.548889",
        "edited": {
            "user": "U0887QU9G2V",
            "ts": "1736454558.000000"
        },
        "client_msg_id": "20238a37-79cb-42d8-89ed-d1cc2ce52d53",
        "text": "Ah, beautiful! Now we have it, indeed. Whether resurrection of the theory of the program is possible or not. I'm not that sure either!\n\nMy first \"serious\" hobby programming project was to build a literate programming tool. I didn't know about parsers so I figured I could just do it with regexes. Incredibly, it kinda worked, but because I used triple angle brackets to delimit parts of the code.\n\nI wonder if programmers should have a right to put a Do Not Resuscitate command in their own software :sweat_smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6b9d24756ac1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-08\/8269664865108_6b9d24756ac1aa304bb9_72.jpg",
            "first_name": "Federico",
            "real_name": "Federico Pereiro",
            "display_name": "Federico Pereiro",
            "team": "T5TCAFTA9",
            "name": "fpereiro",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736441494.280529",
        "parent_user_id": "U0887QU9G2V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "loHRC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, beautiful! Now we have it, indeed. Whether resurrection of the theory of the program is possible or not. I'm not that sure either!\n\nMy first \"serious\" hobby programming project was to build a literate programming tool. I didn't know about parsers so I figured I could just do it with regexes. Incredibly, it kinda worked, but because I used triple angle brackets to delimit parts of the code.\n\nI wonder if programmers should have a right to put a Do Not Resuscitate command in their own software "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UK3LH8CF5",
                    "UCUSW7WVD",
                    "U04E5QAD6DD"
                ],
                "count": 3
            }
        ]
    }
]