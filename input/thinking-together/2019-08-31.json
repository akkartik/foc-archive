[
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1567267461.041800",
        "client_msg_id": "79176c9d-1a9d-4186-a0f9-881998580a87",
        "text": "For the record <@UCUSW7WVD> it was <@UML4ZEKDK>’s idea :slightly_smiling_face:. His post was the first thing I saw when I entered, so being a slack noob I thought that was what I was also supposed to do :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y9i+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For the record "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " it was "
                            },
                            {
                                "type": "user",
                                "user_id": "UML4ZEKDK"
                            },
                            {
                                "type": "text",
                                "text": "’s idea "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": ". His post was the first thing I saw when I entered, so being a slack noob I thought that was what I was also supposed to do "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1567267568.041900",
        "client_msg_id": "139c983e-84b2-4e63-a4c8-130da1265e91",
        "text": "<https:\/\/startupschool.org\/channels\/all>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567190150.026100",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=jR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/startupschool.org\/channels\/all"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1567267951.042200",
        "client_msg_id": "8ddd1ac1-3377-4c1b-b974-11bce7ca3678",
        "text": "<@UCUSW7WVD> making a Tree Language for the mu machine would be neat :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567179124.021900",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LcqqP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " making a Tree Language for the mu machine would be neat "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1567268051.042400",
        "client_msg_id": "88d00d9e-b2c3-4e5d-9176-d5cf9c046a18",
        "text": "<@UF1ATC4RF> The first space on the line, if it is an increase of the indent level on the previous line, is referred to as the \"X Increment (as in, it increments the x value for the location of the word on a 2D plane)....technically you can change XI to anything you want (along with YI and ZI), but space is the convention",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567179124.021900",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mmep",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UF1ATC4RF"
                            },
                            {
                                "type": "text",
                                "text": " The first space on the line, if it is an increase of the indent level on the previous line, is referred to as the \"X Increment (as in, it increments the x value for the location of the word on a 2D plane)....technically you can change XI to anything you want (along with YI and ZI), but space is the convention"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1567268272.042600",
        "client_msg_id": "cdb790cf-d121-48cd-967f-35a458e88c5c",
        "text": "<@UEQ6M68H0> very interesting language! I like the clock example. I previously thought that we would have great general purpose Tree Languages by 2018, but the path to get there has turned out slightly different than I anticipated. basically, the tooling needs to advance ahead of the languages, otherwise the languages aren't a joy to use and the designers make subpar decisions on the language *because of the poor tooling*. So I would not tackle Beads head on today. We still need to keep tacking toward that direction. I bet in 2020 we'll start to see the first good general purpose languages (unless someone out there is quietly building a good one that I'm not aware of )",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567179124.021900",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z5Sc9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " very interesting language! I like the clock example. I previously thought that we would have great general purpose Tree Languages by 2018, but the path to get there has turned out slightly different than I anticipated. basically, the tooling needs to advance ahead of the languages, otherwise the languages aren't a joy to use and the designers make subpar decisions on the language "
                            },
                            {
                                "type": "text",
                                "text": "because of the poor tooling",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". So I would not tackle Beads head on today. We still need to keep tacking toward that direction. I bet in 2020 we'll start to see the first good general purpose languages (unless someone out there is quietly building a good one that I'm not aware of )"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1567270836.042900",
        "client_msg_id": "b3a357da-7d11-4eb8-9530-5a29a18d6c70",
        "text": "oh boy looks like I put things in the wrong thread. sorry! still learning slack",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567179124.021900",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ccYm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh boy looks like I put things in the wrong thread. sorry! still learning slack"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1567285828.044100",
        "client_msg_id": "D9479077-97F1-4258-9DC5-A504CB1C35C0",
        "text": "anyone know of any programming models that explicitly include a first-class concept of a program’s user?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567285828.044100",
        "reply_count": 27,
        "reply_users_count": 7,
        "latest_reply": "1567586317.080900",
        "reply_users": [
            "UEBG0NPDK",
            "UC2A2ARPT",
            "UHWC9PXBL",
            "UA14TGLTC",
            "U85HCL7JP",
            "UEQ7QL15F",
            "UE6EFEPTQ"
        ],
        "replies": [
            {
                "user": "UEBG0NPDK",
                "ts": "1567286284.044200"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1567286394.044500"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1567310196.045100"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1567310851.047400"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1567310939.049900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1567311146.054600"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1567311180.055400"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1567311656.055600"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1567328331.056300"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1567349781.057600"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1567370187.057800"
            },
            {
                "user": "UEQ7QL15F",
                "ts": "1567403345.058800"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1567404155.059000"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1567404509.059300"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1567438538.060100"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1567455352.060500"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1567455376.060700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1567565554.071800"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1567565597.073300"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1567565810.078900"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1567565817.079300"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1567567141.079800"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1567585950.080100"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1567585981.080300"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1567586105.080500"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1567586286.080700"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1567586317.080900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "09Drq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "anyone know of any programming models that explicitly include a first-class concept of a program’s user?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UEQ7QL15F",
                    "ULM3U6275"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1567286284.044200",
        "client_msg_id": "4cf256d2-056f-461b-9bcc-63298a0fc410",
        "text": "Dog does: <https:\/\/www.media.mit.edu\/projects\/the-dog-programming-language\/overview\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567285828.044100",
        "parent_user_id": "UHWC9PXBL",
        "attachments": [
            {
                "service_name": "MIT Media Lab",
                "title": "Project Overview ‹ The Dog Programming Language – MIT Media Lab",
                "title_link": "https:\/\/www.media.mit.edu\/projects\/the-dog-programming-language\/overview\/",
                "text": "Dog is a programming language that makes it easy and intuitive to create social applications. A key feature of Dog is built-in support for interacting with p...",
                "fallback": "MIT Media Lab: Project Overview ‹ The Dog Programming Language – MIT Media Lab",
                "image_url": "https:\/\/dam-prod.media.mit.edu\/thumb\/files\/Display\/Dog%20Logo.png.1400x1400.png",
                "from_url": "https:\/\/www.media.mit.edu\/projects\/the-dog-programming-language\/overview\/",
                "image_width": 277,
                "image_height": 250,
                "image_bytes": 146978,
                "service_icon": "https:\/\/www.media.mit.edu\/static\/images\/icons\/apple-icon-57x57.1737f411eb73.png",
                "id": 1,
                "original_url": "https:\/\/www.media.mit.edu\/projects\/the-dog-programming-language\/overview\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TuYf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Dog does: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.media.mit.edu\/projects\/the-dog-programming-language\/overview\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1567286394.044500",
        "client_msg_id": "aaace207-d26b-4aa1-beb1-2992097dbfdb",
        "text": "Paper here: <http:\/\/salmanahmad.com\/files\/Dog-UIST2013.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567285828.044100",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YJY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Paper here: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/salmanahmad.com\/files\/Dog-UIST2013.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1567310196.045100",
        "client_msg_id": "056c9719-ff2a-4c6a-8ac8-3abc9e51ea05",
        "text": "Interesting. Not sure if this counts, but in my visual language Hest you can (eg) select a piece of data and move it around with the keyboard like it's a video game character. So, there isn't really a single concept that represents the user, but there is the encouragement for the programmer (or the end-user programmer) to _embody_ parts of the code &amp; runtime data. So, in a sense, a first-class concept of the program's programmer.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567285828.044100",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3TC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting. Not sure if this counts, but in my visual language Hest you can (eg) select a piece of data and move it around with the keyboard like it's a video game character. So, there isn't really a single concept that represents the user, but there is the encouragement for the programmer (or the end-user programmer) to "
                            },
                            {
                                "type": "text",
                                "text": "embody",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " parts of the code & runtime data. So, in a sense, a first-class concept of the program's programmer."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UHWC9PXBL",
                    "UBSMEUXAA",
                    "UEQ7QL15F"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1567310851.047400",
        "client_msg_id": "61D1EEC1-8FAF-4FFF-8EA0-B922917AA60C",
        "text": "<@UEBG0NPDK> going to do some googling tomorrow but it seems like there’s not a lot of info available on mobile at least wrt the implementation—do you know any other sources offhand? otherwise i’ll just poke around ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567285828.044100",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PxA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " going to do some googling tomorrow but it seems like there’s not a lot of info available on mobile at least wrt the implementation—do you know any other sources offhand? otherwise i’ll just poke around"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1567310939.049900",
        "client_msg_id": "65EEC27E-453E-46F6-A41A-A4B4971F7BE7",
        "text": "<@UC2A2ARPT> i know this wasn’t your intent but this reminded me to share this video if you haven’t seen it already: <https:\/\/youtu.be\/vw9vjEB1S2Y> even virtualized physical constraints get very interesting for creating with particle languages (it’s a hack here but i think points to what hest might aim for) ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567285828.044100",
        "parent_user_id": "UHWC9PXBL",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Visualizing Drum Styles with Bouncing Balls",
                "title_link": "https:\/\/youtu.be\/vw9vjEB1S2Y",
                "author_name": "DoodleChaos",
                "author_link": "https:\/\/www.youtube.com\/user\/DoodleChaos",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/vw9vjEB1S2Y\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Visualizing Drum Styles with Bouncing Balls",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/vw9vjEB1S2Y?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/vw9vjEB1S2Y",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/vw9vjEB1S2Y"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mv\/cN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " i know this wasn’t your intent but this reminded me to share this video if you haven’t seen it already: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/vw9vjEB1S2Y"
                            },
                            {
                                "type": "text",
                                "text": " even virtualized physical constraints get very interesting for creating with particle languages (it’s a hack here but i think points to what hest might aim for)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1567311146.054600",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1567311154.000000"
        },
        "client_msg_id": "9aa63b03-156e-4768-8fe4-f74022bdc7ef",
        "text": "Algodoo (the program used to make this sim) looks like it kicks so much ass. I've always been curious to try it, but haven't yet. Maybe someday.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567285828.044100",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/tXh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Algodoo (the program used to make this sim) looks like it kicks so much ass. I've always been curious to try it, but haven't yet. Maybe someday."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL",
                    "UEQ7QL15F"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1567311180.055400",
        "client_msg_id": "FD86C3FE-86E5-4B6D-96AA-26712802BE2B",
        "text": "i’m looking for something that might be strictly lamer: a language that characterizes user input in terms of its own control structure (i’m completely making up my own terms here and very open to input). \n\nso if hest lets users embody different pieces of data, the language\/environment\/whatever would allow the programmer to express the rules of the game for the user—which pieces of data do they get to control (and how many at a time), how can they embody them, what can they do as each piece of data (fresh thought, loose wording)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567285828.044100",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pZNSs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i’m looking for something that might be strictly lamer: a language that characterizes user input in terms of its own control structure (i’m completely making up my own terms here and very open to input). \n\nso if hest lets users embody different pieces of data, the language\/environment\/whatever would allow the programmer to express the rules of the game for the user—which pieces of data do they get to control (and how many at a time), how can they embody them, what can they do as each piece of data (fresh thought, loose wording)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1567311656.055600",
        "client_msg_id": "9664f5c0-af2e-4cf6-83e0-fd5979d95a60",
        "text": "Nah, that's cool. In the case of Hest, this \"play with your code\/data like it's a game\" is a feature of the editor, not the underlying model. I am hoping to implement some parts of the Hest editor as live data, so you can have some of that nice Smalltalk\/emacs-esq self modification. But I don't yet know to what extent I'll end up doing that. It'll depend entirely on perf. Ideally, yeah, you'd be able to (eg) define some new kind of object, and then implement some special behaviour for how this \"embody your object\" system interacts with it. But who knows, I'm still a ways off from exploring that space.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567285828.044100",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vuk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nah, that's cool. In the case of Hest, this \"play with your code\/data like it's a game\" is a feature of the editor, not the underlying model. I am hoping to implement some parts of the Hest editor as live data, so you can have some of that nice Smalltalk\/emacs-esq self modification. But I don't yet know to what extent I'll end up doing that. It'll depend entirely on perf. Ideally, yeah, you'd be able to (eg) define some new kind of object, and then implement some special behaviour for how this \"embody your object\" system interacts with it. But who knows, I'm still a ways off from exploring that space."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]